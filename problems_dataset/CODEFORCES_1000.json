{
    "name": "1000_A. Codehorses T-shirts",
    "source": "CODEFORCES",
    "description": "Codehorses has just hosted the second Codehorses Cup. This year, the same as the previous one, organizers are giving T-shirts for the winners.\n\nThe valid sizes of T-shirts are either \"M\" or from 0 to 3 \"X\" followed by \"S\" or \"L\". For example, sizes \"M\", \"XXS\", \"L\", \"XXXL\" are valid and \"XM\", \"Z\", \"XXXXL\" are not.\n\nThere are n winners to the cup for both the previous year and the current year. Ksenia has a list with the T-shirt sizes printed for the last year cup and is yet to send the new list to the printing office. \n\nOrganizers want to distribute the prizes as soon as possible, so now Ksenia is required not to write the whole list from the scratch but just make some changes to the list of the previous year. In one second she can choose arbitrary position in any word and replace its character with some uppercase Latin letter. Ksenia can't remove or add letters in any of the words.\n\nWhat is the minimal number of seconds Ksenia is required to spend to change the last year list to the current one?\n\nThe lists are unordered. That means, two lists are considered equal if and only if the number of occurrences of any string is the same in both lists.\n\nInput\n\nThe first line contains one integer n (1 \u2264 n \u2264 100) \u2014 the number of T-shirts.\n\nThe i-th of the next n lines contains a_i \u2014 the size of the i-th T-shirt of the list for the previous year.\n\nThe i-th of the next n lines contains b_i \u2014 the size of the i-th T-shirt of the list for the current year.\n\nIt is guaranteed that all the sizes in the input are valid. It is also guaranteed that Ksenia can produce list b from the list a.\n\nOutput\n\nPrint the minimal number of seconds Ksenia is required to spend to change the last year list to the current one. If the lists are already equal, print 0.\n\nExamples\n\nInput\n\n3\nXS\nXS\nM\nXL\nS\nXS\n\n\nOutput\n\n2\n\n\nInput\n\n2\nXXXL\nXXL\nXXL\nXXXS\n\n\nOutput\n\n1\n\n\nInput\n\n2\nM\nXS\nXS\nM\n\n\nOutput\n\n0\n\nNote\n\nIn the first example Ksenia can replace \"M\" with \"S\" and \"S\" in one of the occurrences of \"XS\" with \"L\".\n\nIn the second example Ksenia should replace \"L\" in \"XXXL\" with \"S\".\n\nIn the third example lists are equal.",
    "difficulty": "A",
    "tags": [
        "greedy",
        "implementation"
    ],
    "rating": 1200,
    "public_test": [
        {
            "input": "2\nM\nXS\nXS\nM\n",
            "output": "0\n"
        },
        {
            "input": "3\nXS\nXS\nM\nXL\nS\nXS\n",
            "output": "2\n"
        },
        {
            "input": "2\nXXXL\nXXL\nXXL\nXXXS\n",
            "output": "1\n"
        }
    ],
    "generated_test": [
        {
            "input": "1\nM\nS\n",
            "output": "1\n"
        },
        {
            "input": "26\nS\nL\nM\nL\nS\nXXXS\nXXXS\nM\nXXXS\nXXXS\nM\nXXS\nM\nXXXL\nL\nXL\nXXXL\nXXXS\nXXL\nL\nM\nM\nL\nXL\nXS\nXXL\nXS\nXXXS\nXL\nXXXL\nXXXL\nL\nL\nXXXS\nL\nL\nXXL\nXXXS\nL\nM\nM\nXXL\nS\nL\nXXL\nXXXS\nL\nS\nL\nL\nXL\nXXXL\n",
            "output": "6\n"
        },
        {
            "input": "2\nL\nS\nS\nL\n",
            "output": "0\n"
        },
        {
            "input": "6\nL\nS\nXS\nL\nXL\nXXS\nXS\nM\nL\nXL\nXXL\nL\n",
            "output": "2\n"
        },
        {
            "input": "43\nL\nXXXL\nM\nXS\nL\nXXL\nS\nL\nM\nXXXL\nXXS\nS\nXS\nS\nXS\nXL\nXXL\nXXL\nXS\nXXS\nXXL\nL\nXXXL\nL\nL\nXXL\nXXL\nM\nXXXS\nM\nXXL\nXXXS\nXXXL\nXXS\nL\nL\nXS\nL\nXS\nXS\nL\nXXL\nM\nXXXL\nXXL\nXXL\nXL\nL\nXS\nM\nXL\nXXXS\nXXXS\nS\nXXL\nXXXL\nXXL\nXS\nXXS\nL\nS\nXXXS\nXL\nL\nXL\nXXXS\nM\nL\nXXL\nL\nXL\nM\nM\nL\nXXS\nS\nXXS\nXS\nXXL\nL\nM\nS\nL\nXXS\nXXS\nL\n",
            "output": "9\n"
        },
        {
            "input": "8\nXXL\nS\nXXS\nXXXS\nXXXL\nXL\nXXL\nS\nXXXS\nL\nXXS\nXXL\nXXS\nXXXL\nS\nXS\n",
            "output": "3\n"
        },
        {
            "input": "13\nS\nM\nL\nS\nL\nL\nXL\nS\nXL\nXXL\nXL\nXXL\nM\nL\nXS\nM\nXXL\nL\nM\nXXS\nXS\nM\nS\nS\nXS\nL\n",
            "output": "5\n"
        },
        {
            "input": "26\nS\nM\nM\nL\nS\nXXXS\nXXXS\nM\nXXXS\nXXXS\nM\nXXS\nM\nXXXL\nM\nXL\nXXXL\nXXXS\nXXL\nL\nM\nM\nL\nXL\nXS\nXXL\nXS\nXXXS\nXL\nXXXL\nXXXL\nL\nL\nXXXS\nL\nL\nXXL\nXXXS\nL\nM\nM\nXXL\nS\nL\nXXL\nXXXS\nL\nS\nL\nL\nXL\nXXXL\n",
            "output": "8\n"
        },
        {
            "input": "11\nM\nS\nS\nXXXS\nS\nXXXS\nM\nM\nL\nXXXL\nXL\nXXXL\nM\nM\nL\nXXXS\nXXXS\nM\nM\nL\nM\nXS\n",
            "output": "4\n"
        },
        {
            "input": "26\nS\nL\nM\nL\nS\nXXXS\nXXXS\nM\nXXXS\nXXXS\nM\nXXS\nM\nXXXL\nL\nXL\nXXXL\nXXXS\nXXL\nL\nM\nM\nL\nXL\nXS\nXXL\nXS\nXXXS\nXL\nXXXL\nXXXL\nL\nL\nXXXS\nL\nL\nXXL\nXXXS\nL\nL\nM\nXXL\nS\nL\nXXL\nXXXS\nL\nS\nL\nL\nXL\nXXXL\n",
            "output": "7\n"
        },
        {
            "input": "2\nM\nM\nM\nS\n",
            "output": "1\n"
        },
        {
            "input": "2\nM\nXS\nXS\nL\n",
            "output": "1\n"
        },
        {
            "input": "2\nL\nM\nM\nM\n",
            "output": "1\n"
        },
        {
            "input": "1\nM\nL\n",
            "output": "1\n"
        },
        {
            "input": "2\nL\nXS\nXS\nL\n",
            "output": "0\n"
        },
        {
            "input": "2\nL\nM\nM\nL\n",
            "output": "0\n"
        },
        {
            "input": "6\nM\nS\nXS\nL\nXL\nXXS\nXS\nM\nL\nXL\nXXL\nL\n",
            "output": "2\n"
        },
        {
            "input": "2\nM\nM\nM\nL\n",
            "output": "1\n"
        },
        {
            "input": "2\nL\nM\nL\nM\n",
            "output": "0\n"
        },
        {
            "input": "2\nL\nL\nM\nS\n",
            "output": "2\n"
        },
        {
            "input": "5\nXXXL\nXXXS\nXXXL\nXL\nM\nXXXS\nS\nXS\nXXXL\nXXXS\n",
            "output": "3\n"
        },
        {
            "input": "6\nL\nS\nXS\nL\nXL\nXXS\nXS\nL\nL\nXL\nXXL\nL\n",
            "output": "2\n"
        },
        {
            "input": "2\nL\nM\nL\nL\n",
            "output": "1\n"
        },
        {
            "input": "2\nM\nM\nL\nM\n",
            "output": "1\n"
        },
        {
            "input": "2\nM\nS\nM\nL\n",
            "output": "1\n"
        },
        {
            "input": "2\nM\nM\nM\nM\n",
            "output": "0\n"
        },
        {
            "input": "2\nL\nL\nS\nL\n",
            "output": "1\n"
        },
        {
            "input": "1\nL\nL\n",
            "output": "0\n"
        },
        {
            "input": "2\nL\nXS\nXS\nM\n",
            "output": "1\n"
        },
        {
            "input": "6\nM\nS\nXS\nL\nXL\nXXS\nXS\nL\nL\nXL\nXXL\nL\n",
            "output": "3\n"
        },
        {
            "input": "2\nM\nL\nM\nM\n",
            "output": "1\n"
        },
        {
            "input": "5\nXS\nXXXS\nM\nXS\nM\nXL\nS\nXS\nM\nXXXL\n",
            "output": "3\n"
        },
        {
            "input": "9\nL\nXXL\nXL\nL\nS\nXS\nXXL\nXL\nXXS\nS\nXXL\nXS\nXS\nS\nXXL\nXL\nXXS\nM\n",
            "output": "3\n"
        },
        {
            "input": "2\nL\nL\nL\nS\n",
            "output": "1\n"
        },
        {
            "input": "3\nL\nM\nM\nL\nM\nS\n",
            "output": "1\n"
        },
        {
            "input": "5\nL\nS\nL\nXL\nXL\nXL\nXS\nL\nL\nM\n",
            "output": "2\n"
        },
        {
            "input": "2\nL\nM\nM\nS\n",
            "output": "1\n"
        },
        {
            "input": "2\nM\nM\nL\nL\n",
            "output": "2\n"
        },
        {
            "input": "2\nL\nL\nM\nL\n",
            "output": "1\n"
        },
        {
            "input": "2\nL\nM\nS\nM\n",
            "output": "1\n"
        },
        {
            "input": "5\nL\nS\nL\nXL\nXL\nXL\nXS\nM\nL\nL\n",
            "output": "2\n"
        },
        {
            "input": "14\nXXL\nS\nS\nXXXL\nXL\nXXXS\nXS\nS\nS\nXL\nM\nXXXS\nM\nS\nL\nXXS\nXXXS\nS\nM\nXL\nL\nXXXL\nXS\nXL\nS\nM\nS\nXXXS\n",
            "output": "3\n"
        },
        {
            "input": "2\nL\nL\nL\nM\n",
            "output": "1\n"
        },
        {
            "input": "2\nL\nS\nL\nL\n",
            "output": "1\n"
        },
        {
            "input": "6\nXXL\nXXS\nXXXS\nL\nXXXS\nXXXL\nXXL\nM\nXXS\nXXXS\nXXXL\nXXXL\n",
            "output": "2\n"
        },
        {
            "input": "6\nL\nS\nXS\nM\nXL\nXXS\nXS\nM\nL\nXL\nXXL\nM\n",
            "output": "2\n"
        },
        {
            "input": "2\nM\nL\nM\nL\n",
            "output": "0\n"
        },
        {
            "input": "2\nM\nL\nL\nM\n",
            "output": "0\n"
        },
        {
            "input": "10\nXXXS\nXXXL\nXXL\nM\nXXXS\nXS\nL\nXL\nXXS\nM\nM\nL\nXL\nXXL\nXXXS\nXL\nXXXS\nXXXS\nL\nXXS\n",
            "output": "3\n"
        },
        {
            "input": "4\nS\nL\nXXS\nXXS\nL\nL\nXXS\nXXL\n",
            "output": "2\n"
        },
        {
            "input": "6\nM\nS\nXS\nL\nXL\nXXS\nXS\nM\nM\nXL\nXXL\nL\n",
            "output": "2\n"
        },
        {
            "input": "6\nL\nS\nXS\nL\nXL\nXXS\nXS\nL\nM\nXL\nXXL\nL\n",
            "output": "2\n"
        },
        {
            "input": "3\nL\nM\nL\nL\nM\nS\n",
            "output": "1\n"
        },
        {
            "input": "2\nM\nS\nL\nL\n",
            "output": "2\n"
        },
        {
            "input": "6\nL\nS\nXS\nL\nXL\nXXS\nXS\nM\nL\nXL\nXXL\nM\n",
            "output": "3\n"
        },
        {
            "input": "2\nL\nL\nL\nL\n",
            "output": "0\n"
        },
        {
            "input": "6\nL\nS\nXS\nL\nXL\nXXS\nXS\nM\nM\nXL\nXXL\nL\n",
            "output": "3\n"
        },
        {
            "input": "5\nXXS\nXXS\nXXL\nXXXS\nM\nXXS\nXXXL\nS\nXXS\nXXS\n",
            "output": "3\n"
        },
        {
            "input": "2\nL\nS\nM\nM\n",
            "output": "2\n"
        },
        {
            "input": "26\nS\nL\nM\nL\nS\nXXXS\nXXXS\nM\nXXXS\nXXXS\nM\nXXS\nM\nXXXL\nM\nXL\nXXXL\nXXXS\nXXL\nL\nM\nM\nL\nXL\nXS\nXXL\nXS\nXXXS\nXL\nXXXL\nXXXL\nL\nL\nXXXS\nL\nL\nXXL\nXXXS\nL\nM\nM\nXXL\nS\nM\nXXL\nXXXS\nL\nS\nL\nL\nXL\nXXXL\n",
            "output": "6\n"
        },
        {
            "input": "2\nM\nL\nL\nS\n",
            "output": "1\n"
        },
        {
            "input": "2\nL\nL\nS\nM\n",
            "output": "2\n"
        },
        {
            "input": "3\nL\nM\nM\nL\nL\nS\n",
            "output": "2\n"
        },
        {
            "input": "2\nM\nM\nL\nS\n",
            "output": "2\n"
        },
        {
            "input": "10\nXXXS\nXXXL\nXXL\nL\nXXXS\nXS\nL\nXL\nXXS\nM\nM\nL\nXL\nXXL\nXXXS\nXL\nXXXS\nXXXS\nL\nXXS\n",
            "output": "2\n"
        },
        {
            "input": "2\nL\nS\nL\nM\n",
            "output": "1\n"
        },
        {
            "input": "3\nM\nM\nM\nL\nL\nS\n",
            "output": "3\n"
        },
        {
            "input": "8\nXL\nXS\nS\nXXXL\nXXXL\nXL\nXXXL\nS\nXS\nXXXS\nXL\nL\nXXXS\nL\nXS\nXXXL\n",
            "output": "5\n"
        }
    ],
    "solution": [
        {
            "language": 3,
            "solution": "t=int(input())\npre=[]\ncurr=[]\nfor i in range(t):\n    s1=input()\n    pre.append(s1)\nfor i in range(t):\n    s2=input()\n    curr.append(s2)\nz=0\nfor i in range(t):\n    if pre[i] in curr:\n        curr.remove(pre[i])\n        pass\n    else:\n        z+=1\nprint(z)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = []\nb = []\n\ndef mut(s):\n\tif len(s) == 1:\n\t\treturn ['M', 'L', 'S']\n\treturn [s[0:-1] + 'S', s[0:-1] + 'L']\n\nfrom collections import defaultdict\nd = defaultdict(int)\n\nres = 0\n\nfor i in range(n):\n\tt = str(input())\n\td[t] += 1\nfor i in range(n):\n\tt = str(input())\n\tif d[t] > 0:\n\t\td[t] -= 1\n\telse:\n\t\tb.append(t)\n\nfor t in b:\n\tfor p in mut(str(t)):\n\t\tif d[p] > 0:\n\t\t\tres += 1\n\t\t\td[p] -= 1\n\t\t\tbreak\n\nprint(res)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input().strip())\nx = {}\ncnt = 0\nfor i in range(n):\n\ts = input().strip()\n\tif s in x:\n\t\tx[s] += 1\n\telse:\n\t\tx[s] = 1\nfor i in range(n):\n\ts = input().strip()\n\tif s in x:\n\t\tif x[s] > 0:\n\t\t\tx[s] -= 1\n\t\telse:\n\t\t\tcnt += 1\n\telse:\n\t\tcnt += 1\nprint(cnt)\n"
        },
        {
            "language": 3,
            "solution": "from __future__ import print_function\nimport sys\nimport math\nimport os.path\nimport random\nfrom copy import deepcopy\nfrom functools import reduce\n\n\nfrom collections import Counter, ChainMap, defaultdict\nfrom itertools import cycle, chain\nfrom queue import Queue, PriorityQueue\nfrom heapq import heappush, heappop, heappushpop, heapify, heapreplace, nlargest, nsmallest\nimport bisect\n\nfrom statistics import mean, mode, median, median_low, median_high\n\n\n# CONFIG\nsys.setrecursionlimit(10**9)\n\n# LOG \ndef log(*args, **kwargs):\n    print(*args, file=sys.stderr, **kwargs)\n\n\n# INPUT\ndef ni():\n    return map(int, input().split())\n\n\ndef nio(offset):\n    return map(lambda x: int(x) + offset, input().split())\n\n\ndef nia():\n    return list(map(int, input().split()))\n\n\n# CONVERT\ndef toString(aList, sep=\" \"):\n    return sep.join(str(x) for x in aList)\n\n\ndef toMapInvertIndex(aList):\n    return {k: v for v, k in enumerate(aList)}\n\n\n# SORT\ndef sortId(arr):\n    return sorted(range(arr), key=lambda k: arr[k])\n\n\n# MAIN\n\nn, = ni()\na = Counter(input() for _ in range(n))\nb = Counter(input() for _ in range(n))\n\n# log(n)\n# log(a)\n# log(b)\n# log(a-b)\nprint(sum((b - a).values()))"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[]\nfor i in range(n):\n    a.append(input())\nc=0\nfor i in range(n):\n    b = input()\n    if b in a:\n        a.remove(b)\n    else:\n        c+=1\nprint(c)"
        },
        {
            "language": 1,
            "solution": "#!/usr/bin/env python\nn = int(raw_input())\ns = {}\nfor i in xrange(n):\n\ta = raw_input()\n\ts[a] = s.get(a, 0) + 1\nfor i in xrange(n):\n\tb = raw_input()\n\tif b in s and s[b] > 0:\n\t\ts[b] -= 1\nprint sum(s.values())"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int dr[8] = {-1, -1, 0, 1, 1, 1, 0, -1};\nconst int dc[8] = {0, 1, 1, 1, 0, -1, -1, -1};\nconst double PI = acos(-1);\nconst double EPS = 10e-9;\nconst int e4 = 1e4 + 5;\nconst int e5 = 1e5 + 5;\nconst int e6 = 1e6 + 5;\nmap<string, int> m;\nint main() {\n  int n, ans = 0;\n  scanf(\"%d\", &n);\n  string str;\n  for (int i = 0; i < n; i++) {\n    cin >> str;\n    m[str]++;\n  }\n  for (int i = 0; i < n; i++) {\n    cin >> str;\n    if (m[str] != 0) {\n      m[str]--;\n    } else {\n      ans++;\n    }\n  }\n  printf(\"%d\\n\", ans);\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[]\nb=[]\nfor i in range(n):\n\ta.append(input())\nfor i in range(n):\n\tb.append(input())\nfor i in a:\n\tif i in b:\n\t\tb.remove(i)\n\telse:\n\t\tpass\nprint(len(b))"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long BE(int a, int b) {\n  long long res = 1;\n  while (b > 0) {\n    if (b & 1) {\n      res = (res * a);\n    }\n    a = a * a;\n    b = b >> 1;\n  }\n  return res;\n}\nvoid pro() {\n  bool ok = 0, gf = 1, flag = 0;\n  long long n = 3, d = 0, k = 1e10, m = 0, p = 0, o = 0;\n  cin >> n;\n  vector<string> a(n), b(n);\n  for (int i = 0; i < int(n); i++) cin >> a[i];\n  for (int i = 0; i < int(n); i++) cin >> b[i];\n  map<string, int> cnta, cntb;\n  for (int i = 0; i < int(n); i++) ++cnta[a[i]];\n  for (int i = 0; i < int(n); i++) ++cntb[b[i]];\n  int ans = n;\n  for (auto it : cnta) ans -= min(it.second, cntb[it.first]);\n  cout << ans << endl;\n}\nint main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  pro();\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = [input() for _ in range(n)]\nb = [input() for _ in range(n)]\nans = 0\nans += abs(a.count('L') - b.count('L'))\nans += abs(a.count('M') - b.count('M'))\nans += abs(a.count('S') - b.count('S'))\nans //= 2\nans += abs(a.count('XS') - b.count('XS'))\nans += abs(a.count('XXS') - b.count('XXS'))\nans += abs(a.count('XXXS') - b.count('XXXS'))\nprint (ans)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = {}\nb = {}\nfor i in range(n):\n    temp = input()\n    if temp in a:\n        a[temp]+=1\n    else: a[temp] = 1\nfor i in range(n):\n    temp = input()\n    if temp in b:\n        b[temp]+=1\n    else: b[temp] = 1\ncounter = 0\nfor i in b.keys():\n    if i in a:\n        if b[i] > a[i]:\n            b[i] -= a[i]\n        else: b[i] = 0\n    counter += b[i]\nprint(counter)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <class K>\ninline bool cmax(K& a, const K& b) {\n  return (a < b) ? a = b, 1 : 0;\n}\ntemplate <class K>\ninline bool cmin(K& a, const K& b) {\n  return (a > b) ? a = b, 1 : 0;\n}\ninline int read() {\n  register int s = 0;\n  register char c = getchar();\n  while (!isdigit(c)) c = getchar();\n  while (isdigit(c)) s = (s << 1) + (s << 3) + c - '0', c = getchar();\n  return s;\n}\nint n, ans;\nstring s;\nmap<string, int> p;\nint main() {\n  register int i;\n  n = read();\n  for (i = 1; i <= n; i++) cin >> s, ++p[s];\n  for (i = 1; i <= n; i++) {\n    cin >> s;\n    if (!p[s])\n      ++ans;\n    else\n      --p[s];\n  }\n  printf(\"%d\", ans);\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Arrays;\nimport java.util.TreeMap;\nimport java.util.Iterator;\nimport java.util.Map;\nimport java.util.Map.Entry;\nimport java.util.Scanner;\nimport java.util.Set;\n\npublic class practice {\n\tpublic static void main (String[] args) \n\t{\n\t\tScanner sc=new Scanner(System.in);\n\t\tint n=sc.nextInt();\n\t\tString[] old=new String[n];\n\t\tString[] current =new String[n];\n\t\tint[] state=new int[n];\n\t\tint flag=0;\n\t\tint count=0;\n\t\t\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t\tstate[i]=0;\n\t\t}\n\t\t\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t\told[i]=sc.next();\n\t\t}\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t\tcurrent[i]=sc.next();\n\t\t}\n\t\t\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t\tflag=0;\n\t\t\tfor(int j=0;j<n;j++)\n\t\t\t{\n\t\t\t\tif(current[i].equals(old[j])&&state[j]==0)\n\t\t\t\t{\n\t\t\t\t\tflag=1;\n\t\t\t\t\tstate[j]=1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(flag==0)\n\t\t\t\tcount++;\n\t\t}\n\t\tSystem.out.println(count);\n}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\npair<int, string> A[105], B[105];\nint main() {\n  int N;\n  cin >> N;\n  for (int i = 0; i < N; i++) {\n    string tmp;\n    cin >> tmp;\n    A[i] = {tmp.length(), tmp};\n  }\n  for (int i = 0; i < N; i++) {\n    string tmp;\n    cin >> tmp;\n    B[i] = {tmp.length(), tmp};\n  }\n  sort(A, A + N);\n  sort(B, B + N);\n  int Mini = 0;\n  int L1 = 0, L2 = 0, M1 = 0, M2 = 0, S1 = 0, S2 = 0;\n  for (int i = 0; i < N; i++) {\n    if (A[i].first == 1) {\n      if (A[i].second == \"L\") L1++;\n      if (A[i].second == \"M\") M1++;\n      if (A[i].second == \"S\") S1++;\n      if (B[i].second == \"L\") L2++;\n      if (B[i].second == \"M\") M2++;\n      if (B[i].second == \"S\") S2++;\n      continue;\n    }\n    for (int j = 0; j < A[i].first; j++) {\n      if (A[i].second[j] == B[i].second[j]) continue;\n      Mini++;\n    }\n  }\n  int diff = abs(L1 - L2) + abs(M1 - M2) + abs(S1 - S2);\n  Mini += diff / 2;\n  cout << Mini;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = []\nb = []\nfor i in range(n):\n\ta.append(input())\nfor i in range(n):\n\tb.append(input())\n\nfor i in a :\n\tif i in b:\n\t\tb.remove(i)\nprint(len(b))"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint dcmp(long double n, long double y) {\n  return fabs(n - y) <= 1e-9 ? 0 : n < y ? -1 : 1;\n}\nbool taken[200], vis[200];\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  ;\n  int n;\n  cin >> n;\n  priority_queue<pair<int, pair<int, int>>, vector<pair<int, pair<int, int>>>,\n                 greater<pair<int, pair<int, int>>>>\n      q;\n  string a[n];\n  string b[n];\n  int ans = 0;\n  for (int i = 0; i < (int)(n); ++i) {\n    cin >> a[i];\n  }\n  for (int i = 0; i < (int)(n); ++i) {\n    cin >> b[i];\n  }\n  for (int i = 0; i < (int)(n); ++i) {\n    for (int j = 0; j < (int)(n); ++j) {\n      if (a[i].size() != b[j].size()) continue;\n      int cnt = 0;\n      for (int k = 0; k < ((int)((a[i]).size())); ++k) {\n        if (a[i][k] != b[j][k]) cnt++;\n      }\n      q.push({cnt, {i, j}});\n    }\n  }\n  while (q.size()) {\n    pair<int, pair<int, int>> top = q.top();\n    q.pop();\n    if ((!vis[top.second.first]) && (!taken[top.second.second])) {\n      ans += top.first;\n      vis[top.second.first] = 1;\n      taken[top.second.second] = 1;\n    }\n  }\n  cout << ans << '\\n';\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nmap<string, int> mp;\nint main() {\n  int n;\n  string s;\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> s;\n    mp[s]++;\n  }\n  for (int i = 0; i < n; i++) {\n    cin >> s;\n    if (mp[s] > 0) mp[s]--;\n  }\n  int tot = 0;\n  for (auto a : mp) tot += a.second;\n  cout << tot;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  string r;\n  multiset<string> set1;\n  multiset<string>::iterator it;\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> r;\n    set1.insert(r);\n  }\n  cout << '\\n';\n  for (int j = 0; j < n; j++) {\n    cin >> r;\n    if (set1.find(r) != set1.end()) {\n      set1.erase(set1.find(r));\n    }\n  }\n  cout << set1.size();\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl1 = []\nl2 = []\nfor i in range(n):\n    l1.append(input())\nfor i in range(n):\n    l2.append(input())\nfor i in range(len(l1)) :\n    if l1[i] in l2:\n        l2.pop(l2.index(l1[i]))\nprint(len(l2))"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstring a[100], b[100];\nmap<string, int> m;\nint n, s;\nint main(void) {\n  scanf(\"%d\", &n);\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n    m[a[i]]++;\n  }\n  for (int i = 0; i < n; i++) {\n    cin >> b[i];\n    m[b[i]]--;\n  }\n  s += abs(m[\"S\"]);\n  s += abs(m[\"M\"]);\n  s += abs(m[\"L\"]);\n  s += abs(m[\"XS\"]);\n  s += abs(m[\"XXS\"]);\n  s += abs(m[\"XXXS\"]);\n  s += abs(m[\"XL\"]);\n  s += abs(m[\"XXL\"]);\n  s += abs(m[\"XXXL\"]);\n  cout << s / 2;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl1=[]\nl2=[]\nfor i in range(n):\n    l1.append(input())\nfor i in range(n):\n    l2.append(input())\nl=[]\nfor i in l1:\n    if i not in l2:\n        l.append(i)\n    else:\n        del(l2[l2.index(i)])\nprint(len(l))\n"
        },
        {
            "language": 3,
            "solution": "n  = int(input())\na = []\nb = []\nfor i in range(n):\n  a.append(input())\nfor i in range(n):\n  k = input()\n  if k in a:\n    a.remove(k)  \n  else:\n    b.append(k)\nc = [0,0,0,0]\nfor i in range(len(a)):\n  c[len(a[i])-1] += 1\nprint(sum(c))\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 105;\nchar a[MAXN][5], b[MAXN][5];\nint main() {\n  int n;\n  map<string, int> mp;\n  mp.clear();\n  mp[\"M\"] = 1;\n  mp[\"S\"] = 2;\n  mp[\"L\"] = 3;\n  mp[\"XS\"] = 4;\n  mp[\"XL\"] = 5;\n  mp[\"XXS\"] = 6;\n  mp[\"XXL\"] = 7;\n  mp[\"XXXS\"] = 8;\n  mp[\"XXXL\"] = 9;\n  int cnta[10], cntb[10];\n  while (scanf(\"%d\", &n) != EOF) {\n    memset(cnta, 0, sizeof(cnta));\n    memset(cntb, 0, sizeof(cntb));\n    for (int i = 1; i <= n; i++) {\n      scanf(\"%s\", a[i]);\n      cnta[mp[a[i]]]++;\n    }\n    for (int i = 1; i <= n; i++) {\n      scanf(\"%s\", b[i]);\n      cntb[mp[b[i]]]++;\n    }\n    int ans = 0;\n    for (int i = 1; i <= 9; i++) {\n      ans += abs(cnta[i] - cntb[i]);\n    }\n    ans /= 2;\n    printf(\"%d\\n\", ans);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\n\nsizes = {\n\t\"XXXS\": 0,\n\t\"XXS\": 1,\n\t\"XS\": 2,\n\t\"S\": 3,\n\t\"M\": 4,\n\t\"L\": 5,\n\t\"XL\": 6,\n\t\"XXL\": 7,\n\t\"XXXL\": 8\n}\n\n\nlast_year = [0] * 9\nfor i in range(n):\n\tlast_year[sizes[input()]] += 1\n\nfor i in range(n):\n\tlast_year[sizes[input()]] -= 1\n\nprint(sum([abs(x) for x in last_year if x < 0]))"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = [input().rstrip() for _ in range(n)]\nb = [input().rstrip() for _ in range(n)]\n# S M L\nlenga = [[0,0,0] for _ in range(4)]\nlengb = [[0,0,0] for _ in range(4)]\n\nfor i in range(n):\n  t = 0\n  if 'M' in a[i]:\n    t = 1\n  elif 'L' in a[i]:\n    t = 2\n  lenga[len(a[i])-1][t] += 1\n  s = 0\n  if 'M' in b[i]:\n    s = 1\n  elif 'L' in b[i]:\n    s = 2\n  lengb[len(b[i])-1][s] += 1\ncount = 0\nfor j in range(4):\n  tmp = 0\n  for k in range(3):\n    tmp = max(tmp,abs(lenga[j][k] - lengb[j][k]))\n  count += tmp\nprint(count)"
        },
        {
            "language": 3,
            "solution": "lis = ['M','L','S','XL','XS','XXL','XXS','XXXL','XXXS']\nm1 = dict()\nm2 = dict()\nfor item in lis:\n    m1[item]=0\n    m2[item]=0\nn = int(input())\nfor i in range(n):\n    s = input()\n    m1[s]+=1\nfor i in range(n):\n    s = input()\n    m2[s]+=1\n\nans=0\n\nfor item in m1:\n    ans+=abs(m1[item]-m2[item])\nprint(int(ans/2))"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  map<string, int> mp;\n  int n;\n  cin >> n;\n  for (int i = 0; i < n; ++i) {\n    string buf;\n    cin >> buf;\n    mp[buf]++;\n  }\n  int ans = 0;\n  for (int i = 0; i < n; ++i) {\n    string buf;\n    cin >> buf;\n    if (mp[buf]) {\n      mp[buf]--;\n    } else\n      ans++;\n  }\n  cout << ans << '\\n';\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nr = {'S': 0, 'M': 0,'L':0, 'XS': 0, 'XL': 0, 'XXS': 0, 'XXL': 0, 'XXXS': 0, 'XXXL':0}\ns = {'S': 0, 'M': 0,'L':0, 'XS': 0, 'XL': 0, 'XXS': 0, 'XXL': 0, 'XXXS': 0, 'XXXL':0}\n\nfor i in range(n):\n    r[input()] += 1\nfor i in range(n):\n    s[input()] += 1\ncount = n\nfor k in r.keys():\n    count -= min(r[k], s[k])\nprint(count)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ninline int D() {\n  int t;\n  scanf(\"%d\", &t);\n  return t;\n}\ninline long long LLD() {\n  long long t;\n  scanf(\"%lld\", &t);\n  return t;\n}\nint main() {\n  int n = D();\n  map<string, int> mp1, mp2;\n  for (int i = 0; i < n; i++) {\n    string a;\n    cin >> a;\n    mp1[a]++;\n  }\n  for (int i = 0; i < n; i++) {\n    string a;\n    cin >> a;\n    mp2[a]++;\n  }\n  int ans = 0;\n  for (auto i : mp1) {\n    ans += i.second - min(mp2[i.first], i.second);\n  }\n  cout << ans;\n}\n"
        },
        {
            "language": 3,
            "solution": "N=int(input())\nN1=N\nL=[]\nN2=N\nL1=[]\nwhile(N>0):\n    S=input()\n    L1.append(S)\n    N=N-1\nwhile(N1>0):\n    S=input()\n    L.append(S)\n    N1=N1-1\nj=0\nfor i in range(0,N2):\n    if(L1[i] not in L):\n        j=j+1\n    else:\n        R=L.index(L1[i])\n        L[R]=-1\nprint(j)"
        },
        {
            "language": 3,
            "solution": "l=['M','L','S','XL','XS','XXL','XXS','XXXL','XXXS']\nt=int(input())\nl2=[0 for i in range(9)]\nl3=[0 for i in range(9)]\nfor i in range(t):\n    l2[l.index(input())]+=1\nfor i in range(t):\n    l3[l.index(input())]+=1\np=[abs(l2[i]-l3[i]) for i in range(9)]\nprint(sum(p)//2)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nA = []\nfor i in range(n):\n    A.append(input())\nB = []\nfor i in range(n):\n    B.append(input())\n\nfor i, p in enumerate(A):\n    for j, q in enumerate(B):\n        if p==q:\n            A[i] = '00000'\n            B[j] = '00000'\n            break\n        #print(A,B)\n\ncnt = 0\nfor i in A:\n    if i != '00000':\n        cnt += 1\nprint(cnt)\n"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\nn  = int(input())\na = []\nfor i in range(n):\n    a.append(input().strip())\nb = []\nfor i in range(n):\n    cur = input().strip()\n    try:\n        cur_ind = a.index(cur)\n        a.pop(cur_ind)\n    except:\n        b.append(cur)\n\n# print(a,b)\nprint(len(a))\n\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na1 = {}\na2 = {}\nfor __ in range(n):\n    k =input()\n    if k not in a1:\n        a1[k] = 0\n    a1[k]+=1\nfor _ in range(n):\n    k =input()\n    if k not in a2:\n        a2[k] = 0\n    a2[k]+=1\n\nfor j in a1:\n    for i in a2:\n        if i == j:\n            if a1[i] < a2[j]:\n                a1[j] = 0\n                a2[i] = a2[i]-a1[j]\n            else:\n                a1[j] -= a2[i]\n                a2[i] = 0\nprint(sum(a1.values()))\n"
        },
        {
            "language": 3,
            "solution": "k = int(input())\n\n\ndef tshirts(k):\n    minulorocne = []\n    for i in range(k):\n        minulorocne.append(input())\n\n    tohtorocne = []\n    for i in range(k):\n        x = input()\n        if x in minulorocne:\n            minulorocne.remove(x)\n        else:\n            tohtorocne.append(x)\n\n    # print(minulorocne)\n    # print(tohtorocne)\n\n    if len(minulorocne) != len(tohtorocne):\n        return -1\n\n    if len(minulorocne) == 0:\n        return 0\n\n    return len(minulorocne)\n\n\nprint(tshirts(k))"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long mult(long long a, long long b, long long p = (int)(1e9 + 7)) {\n  return ((a % p) * (b % p)) % p;\n}\nlong long add(long long a, long long b, long long p = (int)(1e9 + 7)) {\n  return (a % p + b % p) % p;\n}\nlong long fpow(long long n, long long k, long long p = (int)(1e9 + 7)) {\n  long long r = 1;\n  for (; k; k >>= 1) {\n    if (k & 1) r = r * n % p;\n    n = n * n % p;\n  }\n  return r;\n}\nlong long inv(long long a, long long p = (int)(1e9 + 7)) {\n  return fpow(a, p - 2, p);\n}\nint main() {\n  long long n;\n  cin >> n;\n  string s[n], s1[n];\n  map<string, int> mp1, mp2, mp3;\n  for (int i = 0; i < n; i++) {\n    cin >> s[i];\n    mp1[s[i]] += 1;\n  }\n  for (int i = 0; i < n; i++) {\n    cin >> s1[i];\n    mp2[s1[i]] += 1;\n  }\n  long long cnt = 0;\n  for (int i = 0; i < n; i++) {\n    int l = s[i].length();\n    if (mp1[s[i]] and mp2[s[i]]) {\n      mp1[s[i]] -= 1;\n      mp2[s[i]] -= 1;\n    } else {\n      cnt += 1;\n    }\n  }\n  cout << cnt;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = []\nb = []\nfor i in range(n):\n\tatemp = input()\n\ta.append(atemp)\nfor i in range(n):\n\tbtemp = input()\n\tb.append(btemp)\ncounter = n\nfor i in range(n):\n\tfor k in range(len(b)):\n\t\tif a[i] == b[k]:\n\t\t\tcounter += -1\n\t\t\tb.pop(k)\n\t\t\tbreak\nprint(counter)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nlast_year = []\nthis_year = []\nresult = 0\n\nfor i in range(n):\n    last_year.append(input())\n\nfor i in range(n):\n    text = input()\n    for j in range(last_year.__len__()-1, -1, -1):\n        if last_year[j] == text:\n            last_year.pop(j)\n            break\n        elif j == 0:\n            this_year.append(text)\n\nfor i in range(this_year.__len__() - 1, -1, -1):\n    temp_result = 4\n    index_this = -1\n    index_last = -1\n    for j in range(last_year.__len__()-1, -1, -1):\n        if this_year[i].__len__() == last_year[j].__len__():\n            x = 0\n            for k in range(this_year[i].__len__()):\n                if this_year[i][k] != last_year[j][k]:\n                    x += 1\n            if x < temp_result:\n                temp_result = x\n                index_this = i\n                index_last = j\n    this_year.pop(index_this)\n    last_year.pop(index_last)\n    result += temp_result\n\nprint(result)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvector<string> g, g1;\nbool used[1000];\nint main() {\n  int n, kol = 0;\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    string s;\n    cin >> s;\n    g.push_back(s);\n  }\n  for (int i = 0; i < n; i++) {\n    string s;\n    cin >> s;\n    g1.push_back(s);\n  }\n  for (int i = 0; i < g1.size(); i++) {\n    string s;\n    s = g1[i];\n    for (int j = 0; j < g.size(); j++) {\n      if (!used[j] && g[j] == s) {\n        used[j] = 1;\n        break;\n      }\n    }\n  }\n  for (int i = 0; i < g1.size(); i++) {\n    string s = g1[i];\n    for (int j = 0; j < g.size(); j++) {\n      if (g[j].size() == s.size() && !used[j]) {\n        kol++;\n        used[j] = 1;\n        break;\n      }\n    }\n  }\n  cout << kol;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\npublic class Main {\n    static class Scanner {\n        StringTokenizer st;\n        BufferedReader br;\n\n        public Scanner(InputStream s) {\n            br = new BufferedReader(new InputStreamReader(s));\n        }\n\n        public Scanner(FileReader fileReader) {\n            br = new BufferedReader(fileReader);\n        }\n\n        public String next() throws IOException {\n            while (st == null || !st.hasMoreTokens())\n                st = new StringTokenizer(br.readLine());\n            return st.nextToken();\n        }\n\n        public int nextInt() throws IOException {\n            return Integer.parseInt(next());\n        }\n\n        public long nextLong() throws IOException {\n            return Long.parseLong(next());\n        }\n\n        public String nextLine() throws IOException {\n            return br.readLine();\n        }\n\n        public boolean ready() throws IOException {\n            return br.ready();\n        }\n    }\n    public static void main(String[] args) throws IOException {\n        Scanner sc = new Scanner(System.in);PrintWriter pw = new PrintWriter(System.out);\n        int n=sc.nextInt();HashMap<String,Integer> h = new HashMap<>();int ans=n;\n        for (int i=0;i<n;i++){String t =sc.next();if (h.containsKey(t))h.put(t,h.get(t)+1);else h.put(t,1);}\n        for (int i=0;i<n;i++){\n            String t = sc.next();\n            if (h.containsKey(t)&&h.get(t)>0){ans--;h.put(t,h.get(t)-1);}\n        }\n        System.out.println(ans);\n    }\n}"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = []\nb = []\nans = 0\nfor i in range(n):\n\ta.append(input())\nfor i in range(n):\n\tb.append(input())\ny = [1] * n\nusedA = [0] * n\nusedB = [0] * n\nx = [1] * n\nfor i in range(n):\n\tfor j in range(n):\n\t\tif usedA[i] == 0 and usedB[j] == 0 and  a[i] == b[j]:\n\t\t\tusedA[i] = 1\n\t\t\tusedB[j] = 1\nfor i in range(n):\n\tx[i] = len(a[i])\n\ty[i] = len(b[i])\nfor i in range(n):\n\tfor j in range(n):\n\t\tif usedA[i] == 0 and usedB[j] == 0:\n\t\t\t\tif x[i] == y[j]:\n\t\t\t\t\tusedA[i] = 1\n\t\t\t\t\tusedB[j] = 1\n\t\t\t\t\tans += 1\nprint(ans)\n"
        },
        {
            "language": 4,
            "solution": "import java.lang.reflect.Array;\nimport java.util.*;\nimport java.lang.*;\nimport java.io.*;\npublic class A46{\n\tpublic static void main(String[] args) {\n\t\tInputReader fi = new InputReader(System.in);\n\t\tPrintWriter pr = new PrintWriter(System.out);\n\t\tint n=fi.nextInt();\n\n\t\tMap<String,Integer> m1=new TreeMap<>();\n\t\tMap<String,Integer> m=new TreeMap<>();\n\n\t\tArrayList<String> al=new ArrayList<>();\n\t\tArrayList<String> al1=new ArrayList<>();\n\n\t\tfor (int i = 0; i <n ; i++) {\n\t\t\tString str=fi.readString();\n\n\t\t\tif(m.containsKey(str))\n\t\t\t{\n\t\t\t\tint value=m.get(str);\n\t\t\t\tm.put(str,++value);\n\t\t\t}\n\t\t\telse\n\t\t\t\tm.put(str,1);\n\t\t}\n\n\t\tfor (int i = 0; i <n ; i++) {\n\t\t\tString str=fi.readString();\n\t\t\tif(m.containsKey(str))\n\t\t\t{\n\t\t\t\tint value=m.get(str);\n\t\t\t\tm.put(str,--value);\n\t\t\t\tif(value==0)\n\t\t\t\t\tm.remove(str);\n\t\t\t}\n\t\t\telse if(m1.containsKey(str))\n\t\t\t{\n\t\t\t\tint value=m1.get(str);\n\t\t\t\tm1.put(str,++value);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tm1.put(str, 1);\n\t\t\t}\n\n\t\t}\n\t\tfor(Map.Entry<String,Integer>e:m.entrySet())\n\t\t{\n\t\t\tString key=e.getKey();\n\t\t\tfor (int i = 0; i <e.getValue() ; i++) {\n\t\t\t\tal.add(key);\n\t\t\t}\n\t\t}\n\t\tfor(Map.Entry<String,Integer>e:m1.entrySet())\n\t\t{\n\t\t\tString key=e.getKey();\n\t\t\tfor (int i = 0; i <e.getValue() ; i++) {\n\t\t\t\tal1.add(key);\n\t\t\t}\n\t\t}\n\t\tCollections.sort(al);\n\t\tCollections.sort(al1);\n\t\t//pr.println(al);\n\t\t//pr.println(al1);\n\t\tint size=al1.size();\n\t\tint count=0;\n\t\tfor (int i = 0; i <size ; i++) {\n\t\t\tint len=al.get(i).length();\n\t\t\tString str=al.get(i);\n\t\t\tString str1=al1.get(i);\n\n\t\t\tfor (int j = 0; j <len ; j++) {\n\t\t\t\tif(str.charAt(j)!=str1.charAt(j))\n\t\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tpr.println(count);\n\n\t\tpr.close();\n\t}\n}\n\n\n\n\n\nclass InputReader {\n\tprivate InputStream stream;\n\tprivate byte[] buf = new byte[8192];\n\tprivate int curChar, snumChars;\n\tprivate SpaceCharFilter filter;\n\n\tpublic InputReader(InputStream stream) {\n\t\tthis.stream = stream;\n\t}\n\n\tpublic int snext() {\n\t\tif (snumChars == -1)\n\t\t\tthrow new InputMismatchException();\n\t\tif (curChar >= snumChars) {\n\t\t\tcurChar = 0;\n\t\t\ttry {\n\t\t\t\tsnumChars = stream.read(buf);\n\t\t\t} catch (IOException e) {\n\t\t\t\tthrow new InputMismatchException();\n\t\t\t}\n\t\t\tif (snumChars <= 0)\n\t\t\t\treturn -1;\n\t\t}\n\t\treturn buf[curChar++];\n\t}\n\n\tpublic int nextInt() {\n\t\tint c = snext();\n\t\twhile (isSpaceChar(c))\n\t\t\tc = snext();\n\t\tint sgn = 1;\n\t\tif (c == '-') {\n\t\t\tsgn = -1;\n\t\t\tc = snext();\n\t\t}\n\t\tint res = 0;\n\t\tdo {\n\t\t\tif (c < '0' || c > '9')\n\t\t\t\tthrow new InputMismatchException();\n\t\t\tres *= 10;\n\t\t\tres += c - '0';\n\t\t\tc = snext();\n\t\t} while (!isSpaceChar(c));\n\t\treturn res * sgn;\n\t}\n\n\tpublic long nextLong() {\n\t\tint c = snext();\n\t\twhile (isSpaceChar(c))\n\t\t\tc = snext();\n\t\tint sgn = 1;\n\t\tif (c == '-') {\n\t\t\tsgn = -1;\n\t\t\tc = snext();\n\t\t}\n\t\tlong res = 0;\n\t\tdo {\n\t\t\tif (c < '0' || c > '9')\n\t\t\t\tthrow new InputMismatchException();\n\t\t\tres *= 10;\n\t\t\tres += c - '0';\n\t\t\tc = snext();\n\t\t} while (!isSpaceChar(c));\n\t\treturn res * sgn;\n\t}\n\n\tpublic int[] nextIntArray(int n) {\n\t\tint a[] = new int[n+1];\n\t\tfor (int i = 1; i <= n; i++)\n\t\t\ta[i] = nextInt();\n\t\treturn a;\n\t}\n\n\tpublic String readString() {\n\t\tint c = snext();\n\t\twhile (isSpaceChar(c))\n\t\t\tc = snext();\n\t\tStringBuilder res = new StringBuilder();\n\t\tdo {\n\t\t\tres.appendCodePoint(c);\n\t\t\tc = snext();\n\t\t} while (!isSpaceChar(c));\n\t\treturn res.toString();\n\t}\n\n\tpublic boolean isSpaceChar(int c) {\n\t\tif (filter != null)\n\t\t\treturn filter.isSpaceChar(c);\n\t\treturn c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n\t}\n\n\tpublic interface SpaceCharFilter {\n\t\tpublic boolean isSpaceChar(int ch);\n\t}\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.math.BigInteger;\nimport java.math.RoundingMode;\nimport java.text.DecimalFormat;\nimport java.util.*;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\n\nimport javax.net.ssl.SSLContext;\n\npublic class Main\n{  \n   static long mod=(long)(1e+9) + 7;  \n   static int[] sieve;\n   static int ans=1;\n   static ArrayList<Integer> primes;\n\n   \n   public static void main(String[] args) throws java.lang.Exception\n   {\t  \t\n\t     fast s = new fast();\n\t     PrintWriter out=new PrintWriter(System.out);\n\t     Scanner sc=new Scanner(System.in);\n\t     StringBuilder fans = new StringBuilder();      \n \n\t     int n=s.nextInt();\n\t     \n\t     String a[]=new String[n];\n\t     String b[]=new String[n];\n\t     \n\t     for(int i=0;i<n;i++) a[i]=s.nextLine();\n\t     for(int i=0;i<n;i++) b[i]=s.nextLine();\n\t     \n\t     int c=0;\n\t     \n\t     for(int i=0;i<n;i++)\n\t    \t for(int j=0;j<n;j++)\n\t    \t\t if(a[i].equals(b[j]))\n\t    \t\t {\n\t    \t\t\t a[i]=b[j]=\"\";\n\t    \t\t\t c++;\n\t    \t\t\t break;\n\t    \t\t }\n\t     \n\t     System.out.println(n-c);\n\t     \n   }\n   \n \n   static class fast {   \n\t\tprivate InputStream i;\n\t\tprivate byte[] buf = new byte[1024];\n\t\tprivate int curChar;\n\t\tprivate int numChars;\n\t\t\n\t\tpublic static boolean next_permutation(int a[])\n\t\t   {\n\t\t\t   int i=0,j=0;int index=-1;\t   \n\t\t\t   int n=a.length;\n\t\t\t   \n\t\t\t   for(i=0;i<n-1;i++)\n\t\t\t\t   if(a[i]<a[i+1]) index=i;\n\t\t\t   \n\t\t\t   if(index==-1) return false;\n\t\t\t   i=index;\n\n\t\t\t  \n\t\t\t   for(j=i+1;j<n && a[i]<a[j];j++);\n\n\t\t\t   int temp=a[i];\n\t\t\t   a[i]=a[j-1];\n\t\t\t   a[j-1]=temp;\n\t\t\t   \t   \n\t\t\t   for(int p=i+1,q=n-1;p<q;p++,q--)\n\t\t\t   {\n\t\t\t\t   temp=a[p];\n\t\t\t\t   a[p]=a[q];\n\t\t\t\t   a[q]=temp;\n\t\t\t   }\n\t\t\t   \n\t\t\t   return true;\n\t\t   }\n\t\t   \n\t\t   \n\t\tpublic static void division(char ch[],int divisor)\n\t\t   {\n\t\t\t   int div=Character.getNumericValue(ch[0]); int mul=10;int remainder=0;\n\t\t\t   StringBuilder quotient=new StringBuilder(\"\");\n\t\t\t   for(int i=1;i<ch.length;i++)\n\t\t\t   {\n\t\t\t\t   div=div*mul+Character.getNumericValue(ch[i]);\t\n\t\t\t\t   if(div<divisor) {quotient.append(\"0\");continue;}\n\t\t\t\t   quotient.append(div/divisor);\n\t\t\t\t   div=div%divisor;mul=10;\n\t\t\t\t   \n\t\t\t   } \n\t\t\t   remainder=div;\n\t\t\t   while(quotient.charAt(0)=='0')quotient.deleteCharAt(0);\t   \n\t\t\t   System.out.println(quotient+\" \"+remainder);\t  \n\t\t   }\n\t\t\n\t\tpublic static void sieve(int size)\n\t\t{\n\t\t\tsieve=new int[size+1];\n\t\t\tprimes=new ArrayList<Integer>();\n\t\t\tsieve[1]=1;\n\t\t\tfor(int i=2;i<=Math.sqrt(size);i++)\n\t\t\t{\n\t\t\t\tif(sieve[i]==0)\n\t\t\t\t {\n\t\t\t\t\tfor(int j=i*i;j<size;j+=i) sieve[j]=1;\n\t\t\t\t }\n\t\t\t}\n\t\t\t\n\t\t\tfor(int i=2;i<=size;i++)\n\t\t\t{\n\t\t\t\tif(sieve[i]==0) primes.add(i);\n\t\t\t}\n\t\t}\n\t\tpublic static long pow(long n, long b, long MOD)\n\t\t   {\n\t\t       long x=1;long y=n; \n\t\t       while(b > 0)\n\t\t       {\n\t\t           if(b%2 == 1)\n\t\t           {\n\t\t               x=x*y;\n\t\t               if(x>MOD) x=x%(MOD);\n\t\t           }\n\t\t           y = y*y;\n\t\t           if(y>MOD) y=y%(MOD); \n\t\t           b >>= 1;\n\t\t       }\n\t\t       return x;\n\t\t   }\n\n\t\t\n\t\t public static int upper(Integer[] a,int start,int end,int key)\n\t\t {\n\t\t\t   int mid=(start+end)>>1;\n\t\t\t   if(start==end && a[mid]<key) {return -1;}\n\t\t\t   if(start>end) return -1;\n\n\t\t\t   if(a[mid]>=key && (((mid-1)>=0 && a[mid-1]<key) || (mid-1)==0)) return mid;\n\t\t\t   else if(a[mid]== key && (mid-1)>=0 && a[mid-1]==key) return lower(a,start,mid-1,key);   \n\t\t\t   else if(key>a[mid]) return lower(a,mid+1,end,key);\n\t\t\t   else return lower(a,start,mid-1,key);\n\t\t}\n\t\t \n\t\t public static int lower(Integer a[],int start,int end,int key)\n\t\t {\n\t\t\t   int mid=(start+end)>>1;\n\t\t\t   if(start==end && a[mid]>key) {return -1;}\n\t\t\t   if(start>end) return -1;\n\n\t\t\t   if(a[mid]<=key && (((mid+1)<a.length && a[mid+1]>key) || (mid+1)==a.length)) return mid;\n\t\t\t   else if(a[mid]== key && (mid+1)<a.length && a[mid+1]==key) return upper(a,mid+1,end,key);   \n\t\t\t   else if(key>=a[mid]) return upper(a,mid+1,end,key);\n\t\t\t   else return upper(a,start,mid-1,key);\n\t\t} \n\t\t   \n\t\tpublic int gcd(int a,int b)\n\t\t{\n\t\t\tif(a==0) return b;\n\t\t\treturn gcd(b%a,a);\n\t\t}\n\t\tpublic fast() {\n\t\t\tthis(System.in);\n\t\t}\n\t\tpublic fast(InputStream is) {\n\t\t\ti = is;\n\t\t}\n\t\tpublic int read() {\n\t\t\tif (numChars == -1)\n\t\t\t\tthrow new InputMismatchException();\n\t\t\tif (curChar >= numChars) {\n\t\t\t\tcurChar = 0;\n\t\t\t\ttry {\n\t\t\t\t\tnumChars = i.read(buf);\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t}\n\t\t\t\tif (numChars <= 0)\n\t\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn buf[curChar++];\n\t\t}\n\t\tpublic String nextLine() {\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = read();\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tdo {\n\t\t\t\tres.appendCodePoint(c);\n\t\t\t\tc = read();\n\t\t\t} while (!isEndOfLine(c));\n\t\t\treturn res.toString();\n\t\t}\n\t\tpublic String nextString() {\n     \t\tint c = read();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = read();\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tdo {\n\t\t\t\tres.appendCodePoint(c);\n\t\t\t\tc = read();\n\t\t\t} while (!isSpaceChar(c));\n\t\t\treturn res.toString();\n\t\t}\n\t\tpublic long nextLong() {\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = read();\n\t\t\tint sgn = 1;\n\t\t\tif (c == '-') {\n\t\t\t\tsgn = -1;\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tlong res = 0;\n\t\t\tdo {\n\t\t\t\tif (c < '0' || c > '9')\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\tres *= 10;\n\t\t\t\tres += c - '0';\n\t\t\t\tc = read();\n\t\t\t} while (!isSpaceChar(c));\n\t\t\treturn res * sgn;\n\t\t}\n\t\tpublic int nextInt() {\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = read();\n\t\t\tint sgn = 1;\n\t\t\tif (c == '-') {\n\t\t\t\tsgn = -1;\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tint res = 0;\n\t\t\tdo {\n\t\t\t\tif (c < '0' || c > '9')\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\tres *= 10;\n\t\t\t\tres += c - '0';\n\t\t\t\tc = read();\n\t\t\t} while (!isSpaceChar(c));\n\t\t\treturn res * sgn;\n\t\t}\n\t\tpublic boolean isSpaceChar(int c) {\n\t\t\treturn c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n\t\t}\n\t\tpublic boolean isEndOfLine(int c) {\n\t\t\treturn c == '\\n' || c == '\\r' || c == -1;\n\t\t}\n\n\t}\t\n}"
        },
        {
            "language": 4,
            "solution": "/*package whatever //do not write package name here */\n\nimport java.io.*;\nimport java.util.*;\npublic class GFG {\n\tpublic static void main (String[] args)throws IOException {\n\t\t//System.out.println(\"GfG!\");\n\t\tBufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n\t\tint n=Integer.parseInt(br.readLine());\n\t\tString s;\n\t\tint i,c,ans;\n\t\tHashMap<String,Integer> s1=new HashMap<String,Integer>();\n\t\t\tHashMap<String,Integer> s2=new HashMap<String,Integer>();\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t    s=br.readLine();\n//System.out.print(s);\n\t\t   \n\t\t    if(s1.containsKey(s))\n\t\t    {\n\t\t        c=s1.remove(s);\n\t\t    \n\t\t    s1.put(s,c+1);\n\t\t    }\n\t\t    else\n\t\t    s1.put(s,1);\n\t\t    \n\t\t}\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t    s=br.readLine();\n\t\t    if(s1.containsKey(s))\n\t\t    {\n\t\t        c=s1.remove(s);\n\t\t        if(c>1)\n\t\t        s1.put(s,c-1);\n\t\t        \n\t\t    }\n\t\t   else\n\t\t   {\n\t\t       if(s2.containsKey(s))\n\t\t       {\n\t\t       c=s2.remove(s);\n\t\t       \n\t\t       s2.put(s,c+1);\n\t\t       }\n\t\t       else\n\t\t       s2.put(s,1);\n\t\t       \n\t\t   }\n\t\t    \n\t\t}\n\t\tans=0;\n\tfor(int j : s2.values()){\n\t    //System.out.print(j);\n\t\n\tans=ans+j;\n\t}\n\tSystem.out.print(ans);\n\t}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  multiset<string> ms;\n  for (int i = 0; i < n; i++) {\n    string s;\n    cin >> s;\n    ms.insert(s);\n  }\n  int c = 0;\n  for (int i = 0; i < n; i++) {\n    string s;\n    cin >> s;\n    multiset<string>::iterator it;\n    it = ms.find(s);\n    if (it == ms.end())\n      ++c;\n    else\n      ms.erase(it);\n  }\n  cout << c;\n}\n"
        },
        {
            "language": 3,
            "solution": "# cook your dish here\nn=int(input())\nm={}\na=[]\nb=[]\nm=0\nfor _ in range(n):\n    a.append(input())\nfor _ in range(n):\n    b.append(input())\nans=0\nfor i in range(n):\n    m=0\n    for j in range(n):\n        if b[i]==a[j]:\n            a[j]=5\n            m=1\n            break\n    if m==0:\n        ans+=1\nprint(ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long int N, i, j, ans;\n  string str;\n  vector<string> v11, v12, v13, v14, v21, v22, v23, v24;\n  cin >> N;\n  for (i = 0; i < N; i++) {\n    cin >> str;\n    if (str.length() == 1) {\n      v11.push_back(str);\n    } else if (str.length() == 2) {\n      v12.push_back(str);\n    } else if (str.length() == 3) {\n      v13.push_back(str);\n    } else if (str.length() == 4) {\n      v14.push_back(str);\n    }\n  }\n  for (i = 0; i < N; i++) {\n    cin >> str;\n    if (str.length() == 1) {\n      v21.push_back(str);\n    } else if (str.length() == 2) {\n      v22.push_back(str);\n    } else if (str.length() == 3) {\n      v23.push_back(str);\n    } else if (str.length() == 4) {\n      v24.push_back(str);\n    }\n  }\n  ans = 0;\n  for (i = 0; i < v21.size(); i++) {\n    for (j = 0; j < v11.size(); j++) {\n      if (v21[i] == v11[j]) {\n        v11[j] = \"\";\n        break;\n      }\n    }\n    if (j == v11.size()) ans += 1;\n  }\n  for (i = 0; i < v22.size(); i++) {\n    for (j = 0; j < v12.size(); j++) {\n      if (v22[i] == v12[j]) {\n        v12[j] = \"\";\n        break;\n      }\n    }\n    if (j == v12.size()) ans += 1;\n  }\n  for (i = 0; i < v23.size(); i++) {\n    for (j = 0; j < v13.size(); j++) {\n      if (v23[i] == v13[j]) {\n        v13[j] = \"\";\n        break;\n      }\n    }\n    if (j == v13.size()) ans += 1;\n  }\n  for (i = 0; i < v24.size(); i++) {\n    for (j = 0; j < v14.size(); j++) {\n      if (v24[i] == v14[j]) {\n        v14[j] = \"\";\n        break;\n      }\n    }\n    if (j == v14.size()) ans += 1;\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "def solve():\n    n = int(input())\n    a_dicts = [{}, {}]\n    for j in range(2):\n        for i in range(n):\n            x = input()\n            if x in a_dicts[j]:\n                a_dicts[j][x] += 1\n            else:\n                a_dicts[j][x] = 1\n            if x not in a_dicts[1 - j]:\n                a_dicts[1 - j][x] = 0\n    c = 0\n    for k in a_dicts[0]:\n        c += abs(a_dicts[0][k] - a_dicts[1][k])\n    return c // 2\n\nprint(solve())"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long MOD = 1e9 + 7;\nconst double EPS = 1e-9;\nconst long long INF = 1e18 + 2007;\nconst double PI = 3.1415926535897932384626433832795;\nconst long long N = 200005;\nlong long mas[5][3], mas2[5][3];\nsigned main() {\n  ios_base::sync_with_stdio(0);\n  long long n;\n  cin >> n;\n  for (long long i = 0; i < n; i++) {\n    string s;\n    cin >> s;\n    if (s.back() == 'M') {\n      mas[s.size()][2]++;\n    }\n    if (s.back() == 'S') {\n      mas[s.size()][0]++;\n    }\n    if (s.back() == 'L') {\n      mas[s.size()][1]++;\n    }\n  }\n  for (long long i = 0; i < n; i++) {\n    string s;\n    cin >> s;\n    if (s.back() == 'M') {\n      mas2[s.size()][2]++;\n    }\n    if (s.back() == 'S') {\n      mas2[s.size()][0]++;\n    }\n    if (s.back() == 'L') {\n      mas2[s.size()][1]++;\n    }\n  }\n  long long ans = 0;\n  for (long long i = 1; i < 5; i++) {\n    for (long long j = 0; j < 3; j++) {\n      ans += max((long long)0, mas[i][j] - mas2[i][j]);\n    }\n  }\n  cout << ans;\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.*;\nimport java.util.*;\n\npublic class A {\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tFastScanner in = new FastScanner(System.in);\n\t\tPrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));\n\n\t\tint n = in.nextInt();\n\t\tTreeMap<String, Integer> prev = new TreeMap<String, Integer>(), curr = new TreeMap<String, Integer>();\n\t\tfor (int i = 0; i < n; ++i) {\n\t\t\tinsert(prev, in.next());\n\t\t}\n\t\tfor (int i = 0; i < n; ++i) {\n\t\t\tinsert(curr, in.next());\n\t\t}\n\t\tint ans = 0;\n\t\tfor (String size: curr.keySet()) {\n\t\t\tif (prev.containsKey(size) && curr.get(size) > prev.get(size)) {\n\t\t\t\tans += curr.get(size) - prev.get(size);\n\t\t\t}\n\t\t\telse if (!prev.containsKey(size)) {\n\t\t\t\tans += curr.get(size);\n\t\t\t}\n\t\t}\n\t\t\n\t\tout.println(ans);\n\n\t\tout.close();\n\t}\n\t\n\tpublic static void insert(TreeMap<String, Integer> map, String size) {\n\t\tif (!map.containsKey(size)) {\n\t\t\tmap.put(size, 0);\n\t\t}\n\t\tmap.put(size, map.get(size) + 1);\n\t}\n\n\tstatic class FastScanner {\n\t\tprivate InputStream stream;\n\t\tprivate byte[] buf = new byte[1024];\n\t\tprivate int curChar;\n\t\tprivate int numChars;\n\n\t\tpublic FastScanner(InputStream stream) {\n\t\t\tthis.stream = stream;\n\t\t}\n\n\t\tint read() {\n\t\t\tif (numChars == -1)\n\t\t\t\tthrow new InputMismatchException();\n\t\t\tif (curChar >= numChars) {\n\t\t\t\tcurChar = 0;\n\t\t\t\ttry {\n\t\t\t\t\tnumChars = stream.read(buf);\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t}\n\t\t\t\tif (numChars <= 0)\n\t\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn buf[curChar++];\n\t\t}\n\n\t\tboolean isSpaceChar(int c) {\n\t\t\treturn c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n\t\t}\n\n\t\tboolean isEndline(int c) {\n\t\t\treturn c == '\\n' || c == '\\r' || c == -1;\n\t\t}\n\n\t\tpublic int nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tpublic long nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tpublic double nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tpublic String next() {\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = read();\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tdo {\n\t\t\t\tres.appendCodePoint(c);\n\t\t\t\tc = read();\n\t\t\t} while (!isSpaceChar(c));\n\t\t\treturn res.toString();\n\t\t}\n\n\t\tpublic String nextLine() {\n\t\t\tint c = read();\n\t\t\twhile (isEndline(c))\n\t\t\t\tc = read();\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tdo {\n\t\t\t\tres.appendCodePoint(c);\n\t\t\t\tc = read();\n\t\t\t} while (!isEndline(c));\n\t\t\treturn res.toString();\n\t\t}\n\t}\n}\n"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\nif __name__ == \"__main__\":\n    n = int(input())\n    cont = Counter()\n    cont2 = Counter()\n    for i in range(n):\n        string = input()\n        cont[string] += 1\n    for i in range(n):\n        string = input()\n        cont2[string] += 1\n    cont2.subtract(cont)\n\n    sums = 0\n    for i in cont2.items():\n        sums+= abs(i[1])\n    print(sums//2)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[]\nb=[]\nfor i in range(n):\n    x=input()\n    a.append(x)\nfor i in range(n):\n    y=input()\n    b.append(y)\nsum=0\nfor i in b:\n    if i in a:\n        a.remove(i)\n        continue\n    else:\n        sum+=1 \nprint(sum)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[]\nb=[]\nans=0\n\nfor _ in range(n):\n    s=input()\n    a.append(s)\n\nfor i in range(n):\n    s=input()\n    if s in a:\n        a.remove(s)\n\nprint(len(a))\n"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\nsecond = 0\n\nold_sizes = {}\n\nfor i in range(n):\n\tsize = raw_input()\n\tif size not in old_sizes:\n\t\told_sizes[size] = 1\n\telse:\n\t\told_sizes[size] += 1\n\nfor i in range(n):\n\tsize = raw_input()\n\tif size in old_sizes:\n\t\tif old_sizes[size] > 0:\n\t\t\told_sizes[size] -= 1\n\telse:\n\t\tsecond += 1\n\nprint sum(old_sizes.values())\n\n# print second\n\t\t"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner reader = new Scanner(System.in);\n        int n = reader.nextInt();\n        int[] a = new int[9];\n        int[] b = new int[9];\n        String s;\n        reader.nextLine();\n        for(int i = 0; i < n; i++){\n            s = reader.nextLine();\n            if(s.equals(\"M\"))\n                a[0]++;\n            if(s.equals(\"S\"))\n                a[1]++;\n            if(s.equals(\"XS\"))\n                a[3]++;\n            if(s.equals(\"XXS\"))\n                a[5]++;\n            if(s.equals(\"XXXS\"))\n                a[7]++;\n            if(s.equals(\"L\"))\n                a[2]++;\n            if(s.equals(\"XL\"))\n                a[4]++;\n            if(s.equals(\"XXL\"))\n                a[6]++;\n            if(s.equals(\"XXXL\"))\n                a[8]++;\n        }\n        for(int i = 0; i < n; i++){\n            s = reader.nextLine();\n            if(s.equals(\"M\"))\n                b[0]++;\n            if(s.equals(\"S\"))\n                b[1]++;\n            if(s.equals(\"XS\"))\n                b[3]++;\n            if(s.equals(\"XXS\"))\n                b[5]++;\n            if(s.equals(\"XXXS\"))\n                b[7]++;\n            if(s.equals(\"L\"))\n                b[2]++;\n            if(s.equals(\"XL\"))\n                b[4]++;\n            if(s.equals(\"XXL\"))\n                b[6]++;\n            if(s.equals(\"XXXL\"))\n                b[8]++;\n        }\n\n\n\n\n        for(int i = 0; i < 9; i++){\n            if(b[i] >= a[i]){\n                b[i] -= a[i];\n                a[i] = 0;\n            }\n            else{\n                a[i] -= b[i];\n                b[i] = 0;\n            }\n        }\n\n        int cnt = 0;\n        for(int i = 0; i < 9; i++)\n            cnt += a[i];\n        System.out.println(cnt);\n\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\n\npublic class test {\n    static boolean DEBUG_FLAG = false;\n    int INF = (int)1e9;\n    long MOD = 1000000007;\n    \n    static void debug(String s) {\n        if(DEBUG_FLAG) {\n            System.out.print(s);\n        }\n    }\n    \n    \n    void solve(InputReader in, PrintWriter out) throws IOException {\n        int n = in.nextInt();\n        String[] a = new String[n];\n        String[] b = new String[n];\n        for(int i=0; i<n; i++) a[i] = in.next();\n        for(int i=0; i<n; i++) b[i] = in.next();\n        Arrays.sort(a);\n        Arrays.sort(b);\n        boolean[] v = new boolean[n];\n        boolean[] vx = new boolean[n];\n        long rs = 0;\n        outer: for(int i=0; i<n; i++) {\n            for(int j=0; j<n; j++) {\n                if(!v[j] && a[i].equals(b[j])) {\n                    v[j] = vx[i] = true;\n                    continue outer;\n                }\n            }\n        }\n        int m = INF, id = -1;\n        for(int i=0; i<n; i++) {\n            if(vx[i]) continue;\n            for(int j=0; j<n; j++) {\n                if(!v[j] && a[i].length()==b[j].length()) {\n                    int x = 0;\n                    for(int k=0; k<a[i].length(); k++) {\n                        if(a[i].charAt(k) != b[j].charAt(k)) x++;\n                    }\n                    if(x<m) {\n                        m = x;\n                        id = j;\n                    }\n                }\n            }\n            v[id] = true;\n            rs += m;\n        }\n        out.println(rs);\n    }\n    \n    \n    public static void main(String[] args) throws IOException {\n        if(args.length>0 && args[0].equalsIgnoreCase(\"d\")) {\n            DEBUG_FLAG = true;\n        }\n        InputReader in = new InputReader();\n        PrintWriter out = new PrintWriter(System.out);\n        int t = 1;//in.nextInt();\n        long start = System.nanoTime();\n        while(t-- >0) {\n            new test().solve(in, out);\n        }\n        long end = System.nanoTime();\n        debug(\"\\nTime: \" + (end-start)/1e6 + \" \\n\\n\");\n        out.close();\n    }\n    \n    static class InputReader {\n        static BufferedReader br;\n        static StringTokenizer st;\n        \n        public InputReader() {\n            br = new BufferedReader(new InputStreamReader(System.in));\n        }\n        \n        String next() {\n            while (st == null || !st.hasMoreTokens()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n        \n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n        \n        long nextLong() {\n            return Long.parseLong(next());\n        }\n        \n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing std::string;\nstd::map<string, int> mp;\nstring s;\nint ans = 0;\ninline void solve(string s) {\n  if (mp[s] > 0) {\n    ans += mp[s];\n  }\n  return;\n}\nint main() {\n  int n;\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; i++) {\n    std::cin >> s;\n    mp[s]++;\n  }\n  for (int i = 1; i <= n; i++) {\n    std::cin >> s;\n    mp[s]--;\n  }\n  solve(\"M\");\n  solve(\"S\");\n  solve(\"L\");\n  solve(\"XL\");\n  solve(\"XXL\");\n  solve(\"XXXL\");\n  solve(\"XS\");\n  solve(\"XXS\");\n  solve(\"XXXS\");\n  printf(\"%d\", ans);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint32_t main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  ;\n  long long n;\n  cin >> n;\n  vector<string> v1(n);\n  vector<string> v2(n);\n  for (long long i = 0; i < n; i++) {\n    cin >> v1[i];\n  }\n  for (long long i = 0; i < n; i++) {\n    cin >> v2[i];\n  }\n  vector<long long> vis(n, 0);\n  long long cnt = 0;\n  for (long long i = 0; i < n; i++) {\n    for (long long j = 0; j < n; j++) {\n      if (vis[j] == 0 && v1[j] == v2[i]) {\n        cnt++;\n        vis[j] = 1;\n        break;\n      }\n    }\n  }\n  cout << n - cnt;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "#------------------------------what is this I don't know....just makes my mess faster--------------------------------------\nimport os\nimport sys\nfrom io import BytesIO, IOBase\n \nBUFSIZE = 8192\n \nclass FastIO(IOBase):\n    newlines = 0\n \n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n \n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n \n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n \n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n \n \nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n \n \nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n \n#----------------------------------Real game starts here--------------------------------------\n'''\n \n \n___________________THIS IS AESTROIX CODE________________________\n                       KARMANYA GUPTA\n \n'''\n#_______________________________________________________________#\nimport math\ndef fact(x):\n\tif x == 0:\n\t\treturn 1\n\telse:\n\t\treturn x * fact(x-1)\ndef lower_bound(li, num): #return 0 if all are greater or equal to\n\tanswer = -1 \n\tstart = 0\n\tend = len(li)-1\n\n\twhile(start <= end):\n\t\tmiddle = (end+start)//2\n\t\tif li[middle] >= num:\n\t\t\tanswer = middle\n\t\t\tend = middle - 1\n\t\telse:\n\t\t\tstart = middle + 1\n\treturn answer #index where x is not less than num\ndef upper_bound(li, num): #return n-1 if all are small or equal\n\tanswer = -1\n\tstart = 0\n\tend = len(li)-1\n\n\twhile(start <= end):\n\t\tmiddle = (end+start)//2\n\n\t\tif li[middle] <= num:\n\t\t\tanswer = middle\n\t\t\tstart = middle + 1\n\t\t\n\t\telse:\n\t\t\tend = middle - 1\n\treturn answer #index where x is not greater than num\n\ndef abs(x):\n\treturn x if x >=0 else -x\ndef binary_search(li, val, lb, ub):\n\tans = 0\n\twhile(lb <= ub):\n\t\tmid = (lb+ub)//2\n\t\t#print(mid, li[mid])\n\t\tif li[mid] > val:\n\t\t\tub = mid-1\n\t\telif val > li[mid]:\n\t\t\tlb = mid + 1\n\t\telse:\n\t\t\tans = 1\n\t\t\tbreak\n\treturn ans\n#_______________________________________________________________#\n\n\nn = int(input())\nli1 = [[],[],[],[]]\nli2 = [[],[],[],[]]\ncnt = 0\nfor _ in range(n):\n\ttshirt = input()\n\tli1[len(tshirt)-1].append(tshirt)\nfor _ in range(n):\n\ttshirt = input()\n\tli2[len(tshirt)-1].append(tshirt)\nfor i in range(4):\n\tfor j in range(len(li2[i])):\n\t\tif li2[i][j] in li1[i]:\n\t\t\tli1[i].remove(li2[i][j])\n\tcnt += len(li1[i])\nprint(cnt)\n\n\t\n\n\n\n\n\n\n\n\t\n\t\n\n\n\n\n\n\t\t\t\n\n\n\n\n\n\t"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, c = 0;\n  cin >> n;\n  string prev[n];\n  string cur[n];\n  for (int i = 0; i < n; i++) {\n    cin >> prev[i];\n  }\n  for (int i = 0; i < n; i++) {\n    cin >> cur[i];\n  }\n  for (int i = 0; i < n; i++) {\n    for (int j = 0; j < n; j++) {\n      if (prev[i] == cur[j]) {\n        prev[i] = \"NO\";\n        cur[j] = \"NO\";\n      }\n    }\n  }\n  for (int i = 0; i < n; i++) {\n    if (cur[i] != \"NO\") {\n      c += 1;\n    }\n  }\n  cout << c << endl;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[]\nb=[]\nfor i in range(n):\n    a.append(input())\nfor i in range (n):\n    b.append(input())\nc=0;\nvis=[0 for x in range(n)]\nfor i in range(n):\n    for j in range(n):\n        if(vis[j]==0 and a[i]==b[j]):\n            vis[j]=1\n            c+=1;\n            break;\nprint(n-c);\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint N;\nmap<string, int> mp;\nstring str;\nint cnt = 0;\nint main() {\n  scanf(\"%d\", &N);\n  for (int i = 0; i < N; i++) {\n    cin >> str;\n    mp[str]++;\n  }\n  int M = N;\n  for (int i = 0; i < M; i++) {\n    cin >> str;\n    if (mp[str]) {\n      N--;\n      mp[str]--;\n    }\n  }\n  printf(\"%d\\n\", N);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  string a[n];\n  string b[n];\n  int p[9] = {0};\n  int q[9] = {0};\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n    if (a[i] == \"M\") {\n      p[0]++;\n    }\n    if (a[i] == \"S\") {\n      p[1]++;\n    }\n    if (a[i] == \"L\") {\n      p[2]++;\n    }\n    if (a[i] == \"XS\") {\n      p[3]++;\n    }\n    if (a[i] == \"XL\") {\n      p[4]++;\n    }\n    if (a[i] == \"XXS\") {\n      p[5]++;\n    }\n    if (a[i] == \"XXL\") {\n      p[6]++;\n    }\n    if (a[i] == \"XXXS\") {\n      p[7]++;\n    }\n    if (a[i] == \"XXXL\") {\n      p[8]++;\n    }\n  }\n  for (int i = 0; i < n; i++) {\n    cin >> b[i];\n    if (b[i] == \"M\") {\n      q[0]++;\n    }\n    if (b[i] == \"S\") {\n      q[1]++;\n    }\n    if (b[i] == \"L\") {\n      q[2]++;\n    }\n    if (b[i] == \"XS\") {\n      q[3]++;\n    }\n    if (b[i] == \"XL\") {\n      q[4]++;\n    }\n    if (b[i] == \"XXS\") {\n      q[5]++;\n    }\n    if (b[i] == \"XXL\") {\n      q[6]++;\n    }\n    if (b[i] == \"XXXS\") {\n      q[7]++;\n    }\n    if (b[i] == \"XXXL\") {\n      q[8]++;\n    }\n  }\n  int c = 0;\n  for (int i = 0; i < 9; i++) {\n    if (q[i] > p[i]) {\n      c = c + q[i] - p[i];\n    }\n  }\n  cout << c;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "from collections import defaultdict\nn = int(input())\nold, new = [input() for i in range(n)], [input() for i in range(n)]\noldd, newd = defaultdict(int), defaultdict(int)\nfor s in old: oldd[s] += 1\nfor s in new: newd[s] += 1\nss = oldd['S'] + oldd['M'] + oldd['L'] - min(oldd['S'], newd['S']) - min(oldd['M'], newd['M']) - min(oldd['L'], newd['L'])\nss += oldd['XS'] + oldd['XL'] - min(oldd['XS'], newd['XS']) - min(oldd['XL'], newd['XL'])\nss += oldd['XXS'] + oldd['XXL'] - min(oldd['XXS'], newd['XXS']) - min(oldd['XXL'], newd['XXL'])\nss += oldd['XXXS'] + oldd['XXXL'] - min(oldd['XXXS'], newd['XXXS']) - min(oldd['XXXL'], newd['XXXL'])\nprint(ss)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na,b=[],[]\nfor _ in range(n):\n    a.append(input())\nfor _ in range(n):\n    k=input()\n    if k in a:\n        a.remove(k)\nprint(len(a))\n        \n    "
        },
        {
            "language": 4,
            "solution": "import java.util.HashMap;\nimport java.util.Map;\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args){\n        Scanner scan = new Scanner(System.in);\n        int n=0;\n        Map<String,Integer> mp = new HashMap<String,Integer>();\n        if(scan.hasNext()){\n            if(scan.hasNextLine()) n = scan.nextInt();\n        }\n        for(int i=1;i<=n;i++){\n            String x=\"\";\n            if(scan.hasNextLine()) x = scan.next();\n            Integer id = mp.get(x);\n            \n            if(id == null) mp.put(x,1);\n            else mp.put(x,id+1);\n        }\n        int ans=0;\n        for(int i=1;i<=n;i++){\n            String x=\"\";\n            if(scan.hasNextLine()) x = scan.next();\n            Integer id = mp.get(x);\n            if(id != null && id>0) {ans++;id--;}\n            if(id != null)mp.put(x,id);\n        }\n        System.out.println(n-ans);\n        scan.close();\n    }\n}"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nold = []\nnew = []\n\nfor i in range(n):\n    old.append(input())\nfor i in range(n):\n    new.append(input())\n\nchanges = n\n\n# print(old,new)\ndold = {}\ndnew = {}\nfor i in old:\n    if i in dold:\n        dold[i] += 1\n    else:\n        dold[i] = 1\n\nfor i in new:\n    if i in dnew:\n        dnew[i] += 1\n    else:\n        dnew[i] = 1\n\nfor i in dold.keys() :\n    if i in dnew.keys():\n        # print('i is:', i)\n        if dold[i]-dnew[i] != 0:\n            if dold[i] > dnew[i]:\n                changes -= dold[i]-(dold[i]-dnew[i])\n            if dold[i] < dnew[i]:\n                changes -= dnew[i]-(dnew[i]-dold[i])\n        else:\n            changes -= dold[i]\n\nprint(changes)\n\t\t \t   \t\t\t\t\t\t     \t \t\t\t\t   \t \t\t"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  map<int, map<char, int> > a, b;\n  for (int i = 0; i < n; i++) {\n    string s;\n    cin >> s;\n    a[s.size()][s[s.size() - 1]]++;\n  }\n  for (int i = 0; i < n; i++) {\n    string s;\n    cin >> s;\n    b[s.size()][s[s.size() - 1]]++;\n  }\n  cerr << endl;\n  int ans = 0;\n  for (auto it : b) {\n    int l = it.first;\n    for (auto jt : b[l]) {\n      char ch = jt.first;\n      cerr << l << ' ' << ch << ' ' << b[l][ch] << ' ' << a[l][ch] << endl;\n      ans += max(0, b[l][ch] - a[l][ch]);\n    }\n  }\n  cerr << endl;\n  cout << ans;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long int N = 2e6;\nconst long long int INF = 1e18;\nconst long long int mod = 1e8;\nlong long int n;\nint main() {\n  cin >> n;\n  string second;\n  long long int sum = 0;\n  map<string, long long int> m;\n  for (long long int i = 0; i < n; i++) {\n    cin >> second;\n    m[second]++;\n  }\n  for (long long int i = 0; i < n; i++) {\n    cin >> second;\n    m[second]--;\n  }\n  for (auto i = m.begin(); i != m.end(); i++) {\n    if (i->second > 0) {\n      sum += (i->second);\n    }\n  }\n  cout << sum << endl;\n}\n"
        },
        {
            "language": 1,
            "solution": "olds = []\nnews = []\ncnt_old = {}\ncnt_news = {}\n\nn = int(raw_input())\n\nfor i in range(n): \n    a = raw_input()\n    olds.append(a)\n    if not cnt_old.has_key(a):\n        cnt_old[a] = 1\n    else:\n        cnt_old[a] += 1\n\nfor i in range(n):\n    a = raw_input()\n    news.append(a)\n    if not cnt_news.has_key(a):\n        cnt_news[a] = 1\n    else:\n        cnt_news[a] += 1\n\nequais = set(olds).intersection(set(news))\n\nans = n\nfor i in equais:\n    ans -= min(cnt_old[i], cnt_news[i])\n\nprint ans"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.FileReader;\nimport java.io.FileWriter;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.HashMap;\n\npublic class C_Tshirt {\n\n\tpublic static void main(String[] args)throws IOException {\n\n\t\tBufferedReader ob=new BufferedReader(new InputStreamReader(System.in));\n\t\tint n=Integer.parseInt(ob.readLine());\n\t\tHashMap<String,Integer> a=new HashMap<String,Integer>();\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t\tString s=ob.readLine();\n\t\t\tif(a.containsKey(s))\n\t\t\t{\n\t\t\t\ta.put(s, a.get(s)+1);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ta.put(s,1);\n\t\t\t}\n\t\t}\n\t\tHashMap<String,Integer> b=new HashMap<String,Integer>();\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t\tString s=ob.readLine();\n\t\t\tif(b.containsKey(s))\n\t\t\t{\n\t\t\t\tb.put(s, b.get(s)+1);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tb.put(s,1);\n\t\t\t}\n\t\t}\n\t\tint total=0;\n//\t\tSystem.out.println(\"a= \"+a);\n//\t\tSystem.out.println(\"b= \"+b);\n\t\tfor(String key : b.keySet())\n\t\t{\t\n//\t\t\tSystem.out.println(\"key = \"+key);\n\t\t\tint val=b.get(key);\n//\t\t\tSystem.out.println(\"val b = \"+val);\n\t\t\tif(a.containsKey(key))\n\t\t\t{\n\t\t\t\tint temp=a.get(key);\n//\t\t\t\tSystem.out.println(\"temp = \"+temp);\n\t\t\t\tif(val>temp)\n\t\t\t\t{\n\t\t\t\t\ttotal+=(val-temp);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttotal+=val;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(total);\n\t}\n\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = []\nfor i in range(n):\n    a.append(input())\ncount = 0\nfor i in range(n):\n    s = input()\n    if s in a:\n        a.remove(s)\n    else:\n        count += 1\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = []\nl2 = []\nfor i in range(0,n):\n\tl.append(input())\nfor j in range(0,n):\n\tl2.append(input())\n\nfor i in range(0,n):\n\tif l[i] in l2:\n\t\tl2.remove(l[i])\n\nprint(len(l2))\n\n\n\n\n\t\t"
        },
        {
            "language": 3,
            "solution": "from collections import defaultdict\n\nt = int(input())\n\nprevious = []\npresent = []\ndict1 = defaultdict(int)\ndict2 = defaultdict(int)\n\nfor i in range(t):\n    word = input()\n    previous.append(word)\n    dict1[word] += 1\n\nfor i in range(t):\n    word = input()\n    present.append(word)\n    dict2[word] += 1\n\nintersection = list(set(previous) & set(present))\n\nvalid = 0\nfor i in range(len(intersection)):\n    valid += min(dict1[intersection[i]],dict2[intersection[i]])\n\nprint(len(previous) - valid)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl1=[]\nfor i in range(n):\n    l1.append(input())\nl2=[]\nfor i in range(n):\n    l2.append(input())\n\nfor i in l1:\n    if i in l2:\n        l2.remove(i)\n\nprint(len(l2))\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = []\nb = []\nfor i in range(n):\n    a.append(input())\nfor i in range(n, 2*n):\n    b.append(input())\n\ncounter = 0\nfor i in a:\n    if i in b:\n        b.remove(i)\n        counter += 1\n\nprint(n - counter)"
        },
        {
            "language": 4,
            "solution": "//CREATED BY : AMBIKESH JHA\n//NEPAL\n//Never Give Up Trying...\n\n//Code Begins Here\n\nimport java.io.*;\nimport java.util.*;\nimport java.lang.*;\npublic class Solution{\n    static final BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n    static final BufferedWriter out=new BufferedWriter(new OutputStreamWriter(System.out));\n    static int tc;\n    static String[] s;\n\n  public static void main(String[] args)throws IOException{\n    tc=1;\n    //tc=Integer.parseInt(br.readLine());\n    while(tc-->0){\n      int N=Integer.parseInt(br.readLine());\n      ArrayList<String> al=new ArrayList<>();\n      ArrayList<String> bl=new ArrayList<>();\n      for(int i=0;i<N;i++){\n        al.add(br.readLine());\n      }\n      for(int i=0;i<N;i++){\n        bl.add(br.readLine());\n      }\n      for(int i=0;i<al.size();i++){\n        for(int j=0;j<bl.size();j++){\n          if(al.get(i).equals(bl.get(j))){\n            al.set(i,\"Z\");\n            bl.set(j,\"Z\");\n            break;\n          }\n        }\n      }\n      al.removeIf(\"Z\"::equals);\n      bl.removeIf(\"Z\"::equals);\n      out.write(al.size()+\"\\n\");\n      }\n    out.close();\n  }\n}"
        },
        {
            "language": 3,
            "solution": "n=int(input())\np=[]\nq=[]\nt=[]\ns=0\nto=[]\nfor x in range(n):\n    p.append(input())\nfor x in range(n):\n    q.append(input())\nfor item in q:\n    if len(item)!=1:\n       if item in p:\n            p.remove(item)\n       else:\n            for ite in p:\n               if len(item)==len(ite):\n                   p.remove(ite)\n                   s+=1\n                   break\n    else:\n        to.append(item)\nfor x in range(len(to)):\n    for item in p:\n        if to[x]!=item:\n            pass\n        else:\n            p.remove(item)\n            break\nprint(s+len(p))"
        },
        {
            "language": 3,
            "solution": "ls = [\n    'M',\n    'S',\n    'XS',\n    'XXS',\n    'XXXS',\n    'L',\n    'XL',\n    'XXL',\n    'XXXL',\n]\nx = int(input())\nyo = dict()\nyo2 = dict()\nfor i in ls:\n    yo[i] = 0\n    yo2[i] = 0\nfor i in range(x):\n    z = input()\n    yo[z] += 1\n\nfor i in range(x):\n    z = input()\n    yo2[z]+=1\nans = 0\nfor i in ls[2:5]:\n    ans += abs(yo[i]-yo2[i])\n\nfor i in ['S', 'M', 'L']:\n    if(yo[i]> yo2[i]):\n        ans+= yo[i]-yo2[i]\nprint(ans)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, m, Max = -1;\n  cin >> n;\n  map<string, int> mp;\n  for (int i = 0; i < n; i++) {\n    string s;\n    cin >> s;\n    mp[s]++;\n  }\n  int ans = 0;\n  for (int i = 0; i < n; i++) {\n    string s;\n    cin >> s;\n    if (mp[s])\n      mp[s]--;\n    else\n      ans++;\n  }\n  cout << ans << \"\\n\";\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long int Lpow(long long int a, long long int b) {\n  long long int ans = 1;\n  while (b > 0) {\n    if (b % 2) ans = (ans * a);\n    a = (a * a);\n    b = b / 2;\n  }\n  return ans;\n}\nlong long int gcd(long long int a, long long int b) {\n  if (a % b == 0)\n    return b;\n  else\n    return gcd(b, a % b);\n}\nsigned main() {\n  ios_base::sync_with_stdio(false), cin.tie(NULL), cout.tie(NULL);\n  int n;\n  cin >> n;\n  map<string, int> mape;\n  string s;\n  for (int i = 0; i < n; i++) {\n    cin >> s;\n    mape[s]++;\n  }\n  for (int i = 0; i < n; i++) {\n    cin >> s;\n    if (mape[s] > 0) mape[s]--;\n  }\n  int ans = 0;\n  for (auto x : mape) {\n    ans += x.second;\n  }\n  cout << ans << '\\n';\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nmap<string, int> ms;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  int n, ans = 0;\n  string s;\n  cin >> n;\n  for (int i = 1; i <= n; i++) {\n    cin >> s;\n    ms[s]++;\n  }\n  for (int i = 1; i <= n; i++) {\n    cin >> s;\n    if (ms[s]) {\n      ms[s]--;\n    } else\n      ans++;\n  }\n  cout << ans;\n}\n"
        },
        {
            "language": 4,
            "solution": "\n/**\n * Date: 27 Jun, 2018\n * Link:\n *\n * @author Prasad-Chaudhari\n * @email prasadc8897@gmail.com\n */\nimport java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.OutputStreamWriter;\nimport java.util.Hashtable;\nimport java.util.Map;\n\npublic class newProgram1 {\n\n    public static void main(String[] args) throws IOException {\n        // TODO code application logic here\n        FastIO in = new FastIO();\n        int n = in.ni();\n        int a[] = new int[9];\n        int b[] = new int[9];\n        Map<String, Integer> map1 = new Hashtable<>();\n        Map<String, Integer> map2 = new Hashtable<>();\n        for (int i = 0; i < n; i++) {\n            String s = in.next();\n            if (\"XXXL\".equals(s)) {\n                a[0]++;\n            }\n            if (\"XXL\".equals(s)) {\n                a[1]++;\n            }\n            if (\"XL\".equals(s)) {\n                a[2]++;\n            }\n            if (\"M\".equals(s)) {\n                a[3]++;\n            }\n            if (\"S\".equals(s)) {\n                a[4]++;\n            }\n            if (\"L\".equals(s)) {\n                a[5]++;\n            }\n            if (\"XS\".equals(s)) {\n                a[6]++;\n            }\n            if (\"XXS\".equals(s)) {\n                a[7]++;\n            }\n            if (\"XXXS\".equals(s)) {\n                a[8]++;\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            String s = in.next();\n            if (\"XXXL\".equals(s)) {\n                a[0]--;\n            }\n            if (\"XXL\".equals(s)) {\n                a[1]--;\n            }\n            if (\"XL\".equals(s)) {\n                a[2]--;\n            }\n            if (\"M\".equals(s)) {\n                a[3]--;\n            }\n            if (\"S\".equals(s)) {\n                a[4]--;\n            }\n            if (\"L\".equals(s)) {\n                a[5]--;\n            }\n            if (\"XS\".equals(s)) {\n                a[6]--;\n            }\n            if (\"XXS\".equals(s)) {\n                a[7]--;\n            }\n            if (\"XXXS\".equals(s)) {\n                a[8]--;\n            }\n        }\n        int sum = 0;\n        for (int i = 0; i < 9; i++) {\n            sum += Math.abs(a[i]);\n        }\n        System.out.println(sum/2);\n    }\n\n    static class FastIO {\n\n        private final BufferedReader br;\n        private final BufferedWriter bw;\n        private String s[];\n        private int index;\n\n        public FastIO() throws IOException {\n            br = new BufferedReader(new InputStreamReader(System.in));\n            bw = new BufferedWriter(new OutputStreamWriter(System.out, \"UTF-8\"));\n            s = br.readLine().split(\" \");\n            index = 0;\n        }\n\n        public int ni() throws IOException {\n            return Integer.parseInt(nextToken());\n        }\n\n        public double nd() throws IOException {\n            return Double.parseDouble(nextToken());\n        }\n\n        public long nl() throws IOException {\n            return Long.parseLong(nextToken());\n        }\n\n        public String next() throws IOException {\n            return nextToken();\n        }\n\n        public String nli() throws IOException {\n            try {\n                return br.readLine();\n            } catch (IOException ex) {\n\n            }\n            return null;\n        }\n\n        public int[] gia(int n) throws IOException {\n            int a[] = new int[n];\n            for (int i = 0; i < n; i++) {\n                a[i] = ni();\n            }\n            return a;\n        }\n\n        public int[] gia(int n, int start, int end) throws IOException {\n            validate(n, start, end);\n            int a[] = new int[n];\n            for (int i = start; i < end; i++) {\n                a[i] = ni();\n            }\n            return a;\n        }\n\n        public double[] gda(int n) throws IOException {\n            double a[] = new double[n];\n            for (int i = 0; i < n; i++) {\n                a[i] = nd();\n            }\n            return a;\n        }\n\n        public double[] gda(int n, int start, int end) throws IOException {\n            validate(n, start, end);\n            double a[] = new double[n];\n            for (int i = start; i < end; i++) {\n                a[i] = nd();\n            }\n            return a;\n        }\n\n        public long[] gla(int n) throws IOException {\n            long a[] = new long[n];\n            for (int i = 0; i < n; i++) {\n                a[i] = ni();\n            }\n            return a;\n        }\n\n        public long[] gla(int n, int start, int end) throws IOException {\n            validate(n, start, end);\n            long a[] = new long[n];\n            for (int i = start; i < end; i++) {\n                a[i] = ni();\n            }\n            return a;\n        }\n\n        public int[][] gg(int n, int m) throws IOException {\n            int adja[][] = new int[n + 1][];\n            int from[] = new int[m];\n            int to[] = new int[m];\n            int count[] = new int[n + 1];\n            for (int i = 0; i < m; i++) {\n                from[i] = ni();\n                to[i] = ni();\n                count[from[i]]++;\n                count[to[i]]++;\n            }\n            for (int i = 0; i <= n; i++) {\n                adja[i] = new int[count[i]];\n            }\n            for (int i = 0; i < m; i++) {\n                adja[from[i]][--count[from[i]]] = to[i];\n                adja[to[i]][--count[to[i]]] = from[i];\n            }\n            return adja;\n        }\n\n        public void print(String s) throws IOException {\n            bw.write(s);\n            bw.flush();\n        }\n\n        public void println(String s) throws IOException {\n            bw.write(s);\n            bw.newLine();\n            bw.flush();\n        }\n\n        private String nextToken() throws IndexOutOfBoundsException, IOException {\n            if (index == s.length) {\n                s = br.readLine().split(\" \");\n                index = 0;\n            }\n            return s[index++];\n        }\n\n        private void validate(int n, int start, int end) {\n            if (start < 0 || end >= n) {\n                throw new IllegalArgumentException();\n            }\n        }\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "//package A;\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class A1000_Codehorses_TShirts {\n    public static void main(String[] args) throws IOException {\n        int tshirtsCount;\n        Map<String, Integer> tshirts = new HashMap<>();\n        try (BufferedReader br = new BufferedReader(new InputStreamReader(System.in))) {\n            tshirtsCount = Integer.parseInt(br.readLine());\n            for (int i = 0; i < tshirtsCount; i++) {\n                String size = br.readLine();\n                if (!tshirts.containsKey(size)) {\n                    tshirts.put(size, 0);\n                }\n                tshirts.put(size, tshirts.get(size) + 1);\n            }\n            for (int i = 0; i < tshirtsCount; i++) {\n                String size = br.readLine();\n                if (!tshirts.containsKey(size)) {\n                    tshirts.put(size, 0);\n                }\n                tshirts.put(size, tshirts.get(size) - 1);\n            }\n        }\n        int result = 0;\n        for (String thirtSize : tshirts.keySet()) {\n            if (tshirts.get(thirtSize) > 0) {\n                result = result + tshirts.get(thirtSize);\n            }\n        }\n        System.out.println(result);\n    }\n\n//    public static void main(String[] args) throws IOException {\n//        int tshirtsCount;\n//        Map<String, Integer> oldTshirts = new HashMap<>();\n//        Map<String, Integer> newTshirts = new HashMap<>();\n//        try (BufferedReader br = new BufferedReader(new InputStreamReader(System.in))) {\n//            tshirtsCount = Integer.parseInt(br.readLine());\n//            filltshirtsMap(br, tshirtsCount, oldTshirts);\n//            filltshirtsMap(br, tshirtsCount, newTshirts);\n//        }\n//    }\n//\n//    private static void filltshirtsMap(BufferedReader br, int tshirtsCount, Map<String, Integer> shirts) throws IOException {\n//        for (int i = 0; i < tshirtsCount; i++) {\n//            String size = br.readLine();\n//            if (!shirts.containsKey(size)) {\n//                shirts.put(size, 0);\n//            }\n//            shirts.put(size, shirts.get(size) + 1);\n//        }\n//    }\n}\n"
        },
        {
            "language": 1,
            "solution": "n=int(raw_input())\nqi=[0]*4\nwi=[0]*4\nei=[0]*4\nri=[0]*4\nqii=[0]*4\nwii=[0]*4\neii=[0]*4\nrii=[0]*4\na=0\nli=[0]*4\ngi=[0]*4\nt=0\nfor i in xrange(n):\n    s=raw_input()\n    if(len(s)==1):\n        for i in s:\n            if(i==\"M\"):\n                qi[0]+=1\n            elif(i==\"X\"):\n                qi[1]+=1\n            elif(i==\"S\"):\n                qi[2]+=1\n            elif(i==\"L\"):\n                qi[3]+=1\n    elif(len(s)==2):\n        for i in s:\n            if(i==\"M\"):\n                wi[0]+=1\n            elif(i==\"X\"):\n                wi[1]+=1\n            elif(i==\"S\"):\n                wi[2]+=1\n            elif(i==\"L\"):\n                wi[3]+=1\n    elif(len(s)==3):\n        for i in s:\n            if(i==\"M\"):\n                ei[0]+=1\n            elif(i==\"X\"):\n                ei[1]+=1\n            elif(i==\"S\"):\n                ei[2]+=1\n            elif(i==\"L\"):\n                ei[3]+=1\n    elif(len(s)==4):\n        for i in s:\n            if(i==\"M\"):\n                ri[0]+=1\n            elif(i==\"X\"):\n                ri[1]+=1\n            elif(i==\"S\"):\n                ri[2]+=1\n            elif(i==\"L\"):\n                ri[3]+=1\n    # if(len(s)==1):\n    #     qi.append(li)\n    #     li=[0]*4\n    # elif(len(s)==2):\n    #     wi.append(li)\n    #     li=[0]*4\n    # elif(len(s)==3):\n    #     ei.append(li)\n    #     li=[0]*4\n    # elif(len(s)==4):\n    #     ri.append(li)\n    #     li=[0]*4\nfor i in xrange(n):\n    s=raw_input()\n    if(len(s)==1):\n        for i in s:\n            if(i==\"M\"):\n                qii[0]+=1\n            elif(i==\"X\"):\n                qii[1]+=1\n            elif(i==\"S\"):\n                qii[2]+=1\n            elif(i==\"L\"):\n                qii[3]+=1\n    elif(len(s)==2):\n        for i in s:\n            if(i==\"M\"):\n                wii[0]+=1\n            elif(i==\"X\"):\n                wii[1]+=1\n            elif(i==\"S\"):\n                wii[2]+=1\n            elif(i==\"L\"):\n                wii[3]+=1\n    elif(len(s)==3):\n        for i in s:\n            if(i==\"M\"):\n                eii[0]+=1\n            elif(i==\"X\"):\n                eii[1]+=1\n            elif(i==\"S\"):\n                eii[2]+=1\n            elif(i==\"L\"):\n                eii[3]+=1\n    elif(len(s)==4):\n        for i in s:\n            if(i==\"M\"):\n                rii[0]+=1\n            elif(i==\"X\"):\n                rii[1]+=1\n            elif(i==\"S\"):\n                rii[2]+=1\n            elif(i==\"L\"):\n                rii[3]+=1\nfor i in xrange(4):\n    t+=abs(qi[i]-qii[i])\nfor i in xrange(4):\n    \n    t+=abs(wi[i]-wii[i])\nfor i in xrange(4):\n    \n    t+=abs(ei[i]-eii[i])\n\nfor i in xrange(4):\n    t+=abs(ri[i]-rii[i])\nprint t/2\n"
        },
        {
            "language": 3,
            "solution": "sizes = ['XXXL', 'XXL', 'XL', 'L', 'M', 'S', 'XS', 'XXS', 'XXXS']\nn = int(input())\nold = {s: 0 for s in sizes}\nnew = {s: 0 for s in sizes}\n\nfor _ in range(n):\n    old[input()] += 1\n\nfor _ in range(n):\n    new[input()] += 1\n\ndiff = {s: abs(old[s] - new[s]) for s in sizes}\n\nlong = sum(diff[s] for s in ['XXXL', 'XXL', 'XL'])\nshort = max(diff[s] for s in ['L', 'M', 'S'])\n\nprint(long + short)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 1e5 + 10;\nconst int mod = 2e9 + 7;\nchar str[6];\nint n;\nstruct node {\n  int cntm, cnts, cntl, cntxs, cntxl, cntxxs, cntxxl, cntxxxs, cntxxxl;\n} a, b;\nvoid work() {\n  scanf(\"%d\", &n);\n  getchar();\n  for (int i = 0; i < n; i++) {\n    scanf(\"%s\", str);\n    if (strcmp(str, \"M\") == 0) a.cntm++;\n    if (strcmp(str, \"S\") == 0) a.cnts++;\n    if (strcmp(str, \"L\") == 0) a.cntl++;\n    if (strcmp(str, \"XS\") == 0) a.cntxs++;\n    if (strcmp(str, \"XXS\") == 0) a.cntxxs++;\n    if (strcmp(str, \"XXXS\") == 0) a.cntxxxs++;\n    if (strcmp(str, \"XL\") == 0) a.cntxl++;\n    if (strcmp(str, \"XXL\") == 0) a.cntxxl++;\n    if (strcmp(str, \"XXXL\") == 0) a.cntxxxl++;\n  }\n  for (int i = 0; i < n; i++) {\n    scanf(\"%s\", str);\n    if (strcmp(str, \"M\") == 0) b.cntm++;\n    if (strcmp(str, \"S\") == 0) b.cnts++;\n    if (strcmp(str, \"L\") == 0) b.cntl++;\n    if (strcmp(str, \"XS\") == 0) b.cntxs++;\n    if (strcmp(str, \"XXS\") == 0) b.cntxxs++;\n    if (strcmp(str, \"XXXS\") == 0) b.cntxxxs++;\n    if (strcmp(str, \"XL\") == 0) b.cntxl++;\n    if (strcmp(str, \"XXL\") == 0) b.cntxxl++;\n    if (strcmp(str, \"XXXL\") == 0) b.cntxxxl++;\n  }\n  int ans = 0;\n  b.cntm -= a.cntm;\n  b.cnts -= a.cnts;\n  b.cntl -= a.cntl;\n  if (b.cntm > 0) ans += b.cntm;\n  if (b.cnts > 0) ans += b.cnts;\n  if (b.cntl > 0) ans += b.cntl;\n  b.cntxl -= a.cntxl;\n  b.cntxs -= a.cntxs;\n  if (b.cntxs > 0) ans += b.cntxs;\n  if (b.cntxl > 0) ans += b.cntxl;\n  b.cntxxl -= a.cntxxl;\n  b.cntxxs -= a.cntxxs;\n  if (b.cntxxs > 0) ans += b.cntxxs;\n  if (b.cntxxl > 0) ans += b.cntxxl;\n  b.cntxxxl -= a.cntxxxl;\n  b.cntxxxs -= a.cntxxxs;\n  if (b.cntxxxs > 0) ans += b.cntxxxs;\n  if (b.cntxxxl > 0) ans += b.cntxxxl;\n  printf(\"%d\\n\", ans);\n}\nint main() {\n  work();\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class Olimp {\n\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        int n = in.nextInt();\n        ArrayList<String> a = new ArrayList<>();\n        ArrayList<String> b = new ArrayList<>();\n        int summ=0;\n        for (int i = 0; i < n; i++) {\n            a.add(in.next());\n        }\n        for (int i = 0; i < n; i++) {\n            String b1 = in.next();\n            if (a.indexOf(b1)!=-1){\n                a.remove(a.indexOf(b1));\n            }\n            else   b.add(b1);\n        }\n        for (String element: b){\n            summ++;\n        }\n        System.out.println(summ);\n    }\n}"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = [[]] * n\nb = [[]] * n\nfor i in range(n):\n\ta[i] = input()\nfor i in range(n):\n\tb[i] = input()\nused = [0] * (2 * n)\nfor i in range(n):\n\tfor j in range(n):\n\t\tif used[i] == 0 and used[j+n] == 0 and a[i] == b[j]:\n\t\t\tused[i] = 1\n\t\t\tused[j + n] = 1\nt = 0\nfor i in range(n):\n\tif used[i] == 0:\n\t\ts = len(a[i])\n\t\tfor j in range(n):\n\t\t\tif used[j + n] == 0 and s == len(b[j]):\n\t\t\t\tc = list(a[i])\n\t\t\t\tv = list(b[j])\n\t\t\t\tfor k in range(s):\n\t\t\t\t\tif c[k] != v[k]:\n\t\t\t\t\t\tc[k] = v[k]\n\t\t\t\t\t\tt += 1\n\t\t\t\ta[i] = c\n\t\t\t\tb[j] = v\n\t\t\t\tused[i] = 1\n\t\t\t\tused[j + n] = 1\n\t\t\t\tbreak\nprint(t)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint check(string A) {\n  if (A == \"XXXL\") return 0;\n  if (A == \"XXL\") return 1;\n  if (A == \"XL\") return 2;\n  if (A == \"L\") return 3;\n  if (A == \"M\") return 4;\n  if (A == \"S\") return 5;\n  if (A == \"XS\") return 6;\n  if (A == \"XXS\") return 7;\n  if (A == \"XXXS\") return 8;\n}\nint main() {\n  int n;\n  int a;\n  string input;\n  cin >> n;\n  int arr[18];\n  int i;\n  for (i = 0; i < 18; i++) arr[i] = 0;\n  for (i = 0; i < n; i++) {\n    cin >> input;\n    a = check(input);\n    arr[a]++;\n  }\n  for (i = 0; i < n; i++) {\n    cin >> input;\n    a = check(input);\n    arr[a + 9]++;\n  }\n  int diff;\n  int d[9];\n  for (i = 0; i < 9; i++) {\n    diff = arr[i] - arr[i + 9];\n    d[i] = ((diff > 0) ? (diff) : (-1 * diff));\n  }\n  int sum = d[0] + d[1] + d[2];\n  int temp = 0;\n  for (i = 3; i < 6; i++) {\n    if ((arr[i] - arr[i + 9]) > 0) temp += arr[i] - arr[i + 9];\n  }\n  sum += temp;\n  cout << sum;\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import org.omg.CORBA.INTERNAL;\n\nimport java.io.*;\nimport java.lang.reflect.Array;\nimport java.security.acl.LastOwnerException;\nimport java.util.*;\n\n/*\n\n6\n7 7 6 9 10 6\n\n\n*/\npublic class CodeForces {\n\n\n    public static void main(String[] args) {\n\n        FastReader s=new FastReader(System.in);\n        int n=s.nextInt();\n        String[] str=new String[n];\n        String[] ans=new String[n];\n        for(int i=0;i<n;i++){\n            str[i]=s.next();\n        }\n\n        for(int i=0;i<n;i++){\n            ans[i]=s.next();\n        }\n        int[] count=new int[9];\n        for(int i=0;i<n;i++){\n            if(str[i].equals(\"M\")){\n                count[0]++;\n            }else if(str[i].equals(\"S\")){\n                count[1]++;\n            }else if(str[i].equals(\"L\")){\n                count[2]++;\n            }else if(str[i].equals(\"XS\")){\n                count[3]++;\n            }else if(str[i].equals(\"XL\")){\n                count[4]++;\n            }else if(str[i].equals(\"XXS\")){\n                count[5]++;\n            }else if(str[i].equals(\"XXL\")){\n                count[6]++;\n            }else if(str[i].equals(\"XXXS\")){\n                count[7]++;\n            }else if(str[i].equals(\"XXXL\")){\n                count[8]++;\n            }\n        }\n        int[] ansCount=new int[9];\n        for(int i=0;i<n;i++){\n            if(ans[i].equals(\"M\")){\n                ansCount[0]++;\n            }else if(ans[i].equals(\"S\")){\n                ansCount[1]++;\n            }else if(ans[i].equals(\"L\")){\n                ansCount[2]++;\n            }else if(ans[i].equals(\"XS\")){\n                ansCount[3]++;\n            }else if(ans[i].equals(\"XL\")){\n                ansCount[4]++;\n            }else if(ans[i].equals(\"XXS\")){\n                ansCount[5]++;\n            }else if(ans[i].equals(\"XXL\")){\n                ansCount[6]++;\n            }else if(ans[i].equals(\"XXXS\")){\n                ansCount[7]++;\n            }else if(ans[i].equals(\"XXXL\")){\n                ansCount[8]++;\n            }\n        }\n        int sum=0,flag=0;\n        for(int i=0;i<9;i++){\n            if(count[i]!=ansCount[i]){\n                flag=1;\n                break;\n            }\n        }\n        if(flag==0){\n            System.out.println(sum);\n        }else {\n            for(int i=0;i<9;i++){\n                if(count[i]<=ansCount[i]){\n                    sum+=ansCount[i]-count[i];\n                }\n            }\n            System.out.println(sum);\n        }\n    }\n\n\n    static class FastReader {\n        InputStream is;\n        private byte[] inbuf = new byte[1024];\n        private int lenbuf = 0, ptrbuf = 0;\n        static final int ints[] = new int[128];\n\n        public FastReader(InputStream is) {\n            for (int i = '0'; i <= '9'; i++) ints[i] = i - '0';\n            this.is = is;\n        }\n\n        public int readByte() {\n            if (lenbuf == -1) throw new InputMismatchException();\n            if (ptrbuf >= lenbuf) {\n                ptrbuf = 0;\n                try {\n                    lenbuf = is.read(inbuf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (lenbuf <= 0) return -1;\n            }\n            return inbuf[ptrbuf++];\n        }\n\n        public boolean isSpaceChar(int c) {\n            return !(c >= 33 && c <= 126);\n        }\n\n        public int skip() {\n            int b;\n            while ((b = readByte()) != -1 && isSpaceChar(b)) ;\n            return b;\n        }\n\n        public String next() {\n            int b = skip();\n            StringBuilder sb = new StringBuilder();\n            while (!(isSpaceChar(b))) { // when nextLine, (isSpaceChar(b) && b != ' ')\n                sb.appendCodePoint(b);\n                b = readByte();\n            }\n            return sb.toString();\n        }\n\n        public int nextInt() {\n            int num = 0, b;\n            boolean minus = false;\n            while ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-')) ;\n            if (b == '-') {\n                minus = true;\n                b = readByte();\n            }\n\n            while (true) {\n                if (b >= '0' && b <= '9') {\n                    num = (num << 3) + (num << 1) + ints[b];\n                } else {\n                    return minus ? -num : num;\n                }\n                b = readByte();\n            }\n        }\n\n        public long nextLong() {\n            long num = 0;\n            int b;\n            boolean minus = false;\n            while ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-')) ;\n            if (b == '-') {\n                minus = true;\n                b = readByte();\n            }\n\n            while (true) {\n                if (b >= '0' && b <= '9') {\n                    num = (num << 3) + (num << 1) + ints[b];\n                } else {\n                    return minus ? -num : num;\n                }\n                b = readByte();\n            }\n        }\n\n        public double nextDouble() {\n            return Double.parseDouble(next());\n        }\n       /* public char nextChar() {\n            return (char)skip();\n        }*/\n\n        public char[] next(int n) {\n            char[] buf = new char[n];\n            int b = skip(), p = 0;\n            while (p < n && !(isSpaceChar(b))) {\n                buf[p++] = (char) b;\n                b = readByte();\n            }\n            return n == p ? buf : Arrays.copyOf(buf, p);\n        }\n\n        /*private char buff[] = new char[1005];\n        public char[] nextCharArray(){\n            int b = skip(), p = 0;\n            while(!(isSpaceChar(b))){\n                buff[p++] = (char)b;\n                b = readByte();\n            }\n            return Arrays.copyOf(buff, p);\n        }*/\n    }\n}\n\n"
        },
        {
            "language": 4,
            "solution": "\n/*\tBasic import definitions\t*/\n\timport java.util.*;\n\n/*\tBasic Class definitions*/\n\tpublic class A1000\n\t{\n\t\tpublic static void main(String[] args) \n\t\t{\n\t\t\tScanner sc = new Scanner(System.in);\n\n\t\t\tint i , j , k;\n\t\t\tint N;\n                        int ans;\n                        //             0   1   2     3     4     5   6     7     8\n                        String s[] = {\"M\",\"S\",\"XS\",\"XXS\",\"XXXS\",\"L\",\"XL\",\"XXL\",\"XXXL\"};\n                        String x;\n                        boolean flag = true;\n\n                                ans = 0;\n\t\t\t\tN = sc.nextInt();\n                                int a1[] = new int[9];\n                                int a2[] = new int[9];\n\n\t\t\t\tfor ( j = 0 ; j < N ; j++ ) \n\t\t\t\t{\n                                    x = sc.next();\n                                    for( k=0; k<9 ; k++)\n                                    {\n                                        if(x.equals(s[k]))\n                                        {\n                                            a1[k]++;\n                                        }\n                                    }\n\t\t\t\t}\n                                \n                                for ( j = 0 ; j < N ; j++ ) \n\t\t\t\t{\n                                    x = sc.next();\n                                    for( k=0; k<9 ; k++)\n                                    {\n                                        if(x.equals(s[k]))\n                                        {\n                                            a2[k]++;\n                                        }\n                                    }\n\t\t\t\t}\n                                \n                                /*for( k=0; k<9 ; k++)\n                                    {\n                                        if(a1[k]!=a2[k])\n                                        {\n                                            flag = false;\n                                        }\n                                    }*/\n                                \n                                //if(!flag)\n                                //{\n                                    //if(a1[8] != a2[8])\n                                    //{\n                                        ans += Math.abs(a1[8]-a2[8]);\n                                    //}\n                                    //if(a1[7] != a2[7])\n                                    //{\n                                        ans += Math.abs(a1[7]-a2[7]);\n                                    //}\n                                    //if(a1[6] != a2[6])\n                                    //{\n                                        ans += Math.abs(a1[6]-a2[6]);\n                                    //}\n                                    ans += (Math.abs(a1[0]-a2[0]) + Math.abs(a1[1]-a2[1]) + Math.abs(a1[5]-a2[5]))/2;\n                                ////}\n                                \n\t\t\t\tSystem.out.println(ans);\n\t\t}\n\t}"
        },
        {
            "language": 3,
            "solution": "import sys\nfrom array import array\nfrom collections import Counter\n\nn = int(input())\ncnt1, cnt2 = Counter(), Counter()\n\nfor _ in range(n):\n    cnt1[input()] += 1\nfor _ in range(n):\n    cnt2[input()] += 1\n\nans = 0\n\nfor prefix in ('', 'X', 'XX', 'XXX'):\n    total = cnt1[prefix + 'S'] + cnt1[prefix + 'M'] + cnt1[prefix + 'L']\n    for suffix in ('S', 'M', 'L'):\n        total -= min(cnt1[prefix + suffix], cnt2[prefix + suffix])\n    ans += total\n\nprint(ans)\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.lang.*;\nimport java.math.BigInteger;\nimport java.util.regex.*;\npublic class Myclass {\n\t\tpublic static ArrayList a[]=new ArrayList[100001];\n\t\tpublic static boolean visited[]=new boolean [100001];\n\t\tpublic static boolean visited1[]=new boolean [100001];\n\t\tpublic static int color[]=new int[100001];\n\t\tpublic static boolean chk=false,ans;\n\t\tpublic static int node,node1;\n\t\t\n\t\t\n\t\tpublic static void main(String[] args)\n\t\t{\n\t\t    InputReader in = new InputReader(System.in);\n\t\t\tPrintWriter pw = new PrintWriter(System.out);\n\t\t\tint n=in.nextInt();\n\t\t\tHashMap<String,Integer>freq=new HashMap<>();\n\t\t\tTreeSet<String>tr=new TreeSet<>();\n\t\t\tfor(int i=0;i<n;i++)\n\t\t\t{\n\t\t\t\tString s=in.nextLine();\n\t\t\t\tif(freq.containsKey(s))\n\t\t\t\t{\n\t\t\t\t\tfreq.put(s, freq.get(s)+1);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tfreq.put(s,1);\n\t\t\t\t}\n\t\t\t\ttr.add(s);\n\t\t\t}\n\t\t\tfor(int i=0;i<n;i++)\n\t\t\t{\n\t\t\t\tString s=in.nextLine();\n\t\t\t\tif(tr.contains(s))\n\t\t\t\t{\n\t\t\t\t\tfreq.put(s, freq.get(s)-1);\n\t\t\t\t\tif(freq.get(s)==0)\n\t\t\t\t\t{\n\t\t\t\t\t\tfreq.remove(s);\n\t\t\t\t\t\ttr.remove(s);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tint ans=0;\n\t\t\tfor(String s :freq.keySet())\n\t\t\t{\n\t\t\t\tans+=freq.get(s);\n\t\t\t}\n\t\t\tpw.println(ans);\n\t\t\tpw.flush();\n\t\t\tpw.close();\n\t\t}\n\t\n\n\t\tstatic class InputReader \n\t\t{\n\t\tprivate final InputStream stream;\n\t\tprivate final byte[] buf = new byte[8192];\n\t\tprivate int curChar, snumChars;\n\t\tprivate SpaceCharFilter filter;\n\n\t\tpublic InputReader(InputStream stream) \n\t\t{\n\t\t\tthis.stream = stream;\n\t\t}\n\t\tpublic int snext() \n\t\t{\n\t\t\tif (snumChars == -1)\n\t\t\t\tthrow new InputMismatchException();\n\t\t\tif (curChar >= snumChars) \n\t\t\t{\n\t\t\t\tcurChar = 0;\n\t\t\t\ttry \n\t\t\t\t{\n\t\t\t\t\tsnumChars = stream.read(buf);\n\t\t\t\t} \n\t\t\t\tcatch (IOException e) \n\t\t\t\t{\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t}\n\t\t\t\tif (snumChars <= 0)\n\t\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn buf[curChar++];\n\t\t}\n\n\t\tpublic int nextInt() \n\t    {\n\t\t\tint c = snext();\n\t\t\twhile (isSpaceChar(c)) \n\t\t\t{\n\t\t\t\tc = snext();\n\t\t\t}\n\t\t\tint sgn = 1;\n\t\t\tif (c == '-')\n\t\t    {\n\t\t\t\tsgn = -1;\n\t\t\t\tc = snext();\n\t\t\t}\n\t\t\tint res = 0;\n\t\t\tdo \n\t\t\t{\n\t\t\t\tif (c < '0' || c > '9')\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\tres *= 10;\n\t\t\t\tres += c - '0';\n\t\t\t\tc = snext();\n\t\t\t} while (!isSpaceChar(c));\n\t\t\treturn res * sgn;\n\t\t}\n\n\t\tpublic long nextLong()\n\t    {\n\t\t\tint c = snext();\n\t\t\twhile (isSpaceChar(c)) \n\t\t\t{\n\t\t\t\tc = snext();\n\t\t\t}\n\t\t\tint sgn = 1;\n\t\t\tif (c == '-') \n\t\t\t{\n\t\t\t\tsgn = -1;\n\t\t\t\tc = snext();\n\t\t\t}\n\t\t\tlong res = 0;\n\t\t\tdo \n\t\t\t{\n\t\t\t\tif (c < '0' || c > '9')\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\tres *= 10;\n\t\t\t\tres += c - '0';\n\t\t\t\tc = snext();\n\t\t\t} while (!isSpaceChar(c));\n\t\t\treturn res * sgn;\n\t\t}\n\n\t\tpublic int[] nextIntArray(int n) \n\t\t{\n\t\t\tint a[] = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) \n\t\t\t{\n\t\t\t\ta[i] = nextInt();\n\t\t\t}\n\t\t\treturn a;\n\t\t}\n\t\tstatic class tri implements Comparable<tri> {\n\t\t\tint p, c, l;\n\n\t\t\ttri(int p, int c, int l) {\n\t\t\t\tthis.p = p;\n\t\t\t\tthis.c = c;\n\t\t\t\tthis.l = l;\n\t\t\t}\n\n\t\t\tpublic int compareTo(tri o) {\n\t\t\t\treturn Integer.compare(l, o.l);\n\t\t\t}\n\t\t}\n\n\t\tpublic String readString()\n\t    {\n\t\t\tint c = snext();\n\t\t\twhile (isSpaceChar(c)) \n\t\t\t{\n\t\t\t\tc = snext();\n\t\t\t}\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tdo \n\t\t\t{\n\t\t\t\tres.appendCodePoint(c);\n\t\t\t\tc = snext();\n\t\t\t} while (!isSpaceChar(c));\n\t\t\treturn res.toString();\n\t\t}\n\n\t\tpublic String nextLine() \n\t\t{\n\t\t\tint c = snext();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = snext();\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tdo \n\t\t\t{\n\t\t\t\tres.appendCodePoint(c);\n\t\t\t\tc = snext();\n\t\t\t} while (!isEndOfLine(c));\n\t\t\treturn res.toString();\n\t\t}\n\n\t\tpublic boolean isSpaceChar(int c) \n\t\t{\n\t\t\tif (filter != null)\n\t\t\t\treturn filter.isSpaceChar(c);\n\t\t\treturn c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n\t\t}\n\n\t\tprivate boolean isEndOfLine(int c) \n\t\t{\n\t\t\treturn c == '\\n' || c == '\\r' || c == -1;\n\t\t}\n\n\t\tpublic interface SpaceCharFilter\n\t    {\n\t\t\tpublic boolean isSpaceChar(int ch);\n\t\t}\n\t}\n\t\tpublic static long mod = 1000000007;\n\t\tpublic static int d;\n\t\tpublic static int p;\n\t\tpublic static int q;\n\t\t\n\t\tpublic static int[] suffle(int[] a,Random gen)\n\t\t{\n\t\t\tint n = a.length;\n\t\t\tfor(int i=0;i<n;i++)\n\t\t\t{\n\t\t\t\tint ind = gen.nextInt(n-i)+i;\n\t\t\t\tint temp = a[ind];\n\t\t\t\ta[ind] = a[i];\n\t\t\t\ta[i] = temp;\n\t\t\t}\n\t\t\treturn a;\n\t\t}\n\t\t\n\t\tpublic static void swap(int a, int b){\n\t\t\tint temp = a;\n\t\t\ta = b;\n\t\t\tb = temp;\n\t\t}\n\t\t\n\t\tpublic static HashSet<Integer> primeFactorization(int n)\n\t\t{\n\t\t\tHashSet<Integer> a =new HashSet<Integer>();\n\t\t\tfor(int i=2;i*i<=n;i++)\n\t\t\t{\n\t\t\t\twhile(n%i==0)\n\t\t\t\t{\n\t\t\t\t\ta.add(i);\n\t\t\t\t\tn/=i;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(n!=1)\n\t\t\t\ta.add(n);\n\t\t\treturn a;\n\t\t}\n\t\t\n\t\tpublic static void sieve(boolean[] isPrime,int n)\n\t\t{\n\t\t\tfor(int i=1;i<n;i++)\n\t\t\t\tisPrime[i] = true;\n\t\t\t\n\t\t\tisPrime[0] = false;\n\t\t\tisPrime[1] = false;\n\t\t\t\n\t\t\tfor(int i=2;i*i<n;i++)\n\t\t\t{\n\t\t\t\tif(isPrime[i] == true)\n\t\t\t\t{\n\t\t\t\t\tfor(int j=(2*i);j<n;j+=i)\n\t\t\t\t\t\tisPrime[j] = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tpublic static int GCD(int a,int b)\n\t\t{\n\t\t\tif(b==0)\n\t\t\t\treturn a;\n\t\t\telse\n\t\t\t\treturn GCD(b,a%b);\n\t\t}\n\t\t\n\t\tpublic static long GCD(long a,long b)\n\t\t{\n\t\t\tif(b==0)\n\t\t\t\treturn a;\n\t\t\telse\n\t\t\t\treturn GCD(b,a%b);\n\t\t}\n\t\t\n\t\tpublic static void extendedEuclid(int A,int B)\n\t\t{\n\t\t\tif(B==0)\n\t\t\t{\n\t\t\t\td = A;\n\t\t\t\tp = 1 ;\n\t\t\t\tq = 0;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\textendedEuclid(B, A%B);\n\t\t\t\tint temp = p;\n\t\t\t\tp = q;\n\t\t\t\tq = temp - (A/B)*q;\n\t\t\t}\n\t\t}\n\t\t\n\t\tpublic static long LCM(long a,long b)\n\t\t{\n\t\t\treturn (a*b)/GCD(a,b);\n\t\t}\n\t\t\n\t\tpublic static int LCM(int a,int b)\n\t\t{\n\t\t\treturn (a*b)/GCD(a,b);\n\t\t}\n\t\t\n\t\tpublic static int binaryExponentiation(int x,int n)\n\t\t{\n\t\t    int result=1;\n\t\t    while(n>0)\n\t\t    {\n\t\t        if(n % 2 ==1)\n\t\t            result=result * x;\n\t\t        x=x*x;\n\t\t        n=n/2;\n\t\t    }\n\t\t    return result;\n\t\t}\n\t\t\n\t\tpublic static long binaryExponentiation(long x,long n)\n\t\t{\n\t\t    long result=1;\n\t\t    while(n>0)\n\t\t    {\n\t\t        if(n % 2 ==1)\n\t\t            result=result * x;\n\t\t        x=x*x;\n\t\t        n=n/2;\n\t\t    }\n\t\t    return result;\n\t\t}\n\t\t\n\t\tpublic static int modularExponentiation(int x,int n,int M)\n\t\t{\n\t\t    int result=1;\n\t\t    while(n>0)\n\t\t    {\n\t\t        if(n % 2 ==1)\n\t\t            result=(result * x)%M;\n\t\t        x=(x*x)%M;\n\t\t        n=n/2;\n\t\t    }\n\t\t    return result;\n\t\t}\n\t\t\n\t\tpublic static long modularExponentiation(long x,long n,long M)\n\t\t{\n\t\t    long result=1;\n\t\t    while(n>0)\n\t\t    {\n\t\t        if(n % 2 ==1)\n\t\t            result=(result * x)%M;\n\t\t        x=(x*x)%M;\n\t\t        n=n/2;\n\t\t    }\n\t\t    return result;\n\t\t}\n\t\t\n\t\tpublic static long modInverse(int A,int M)\n\t\t{\n\t\t    return modularExponentiation(A,M-2,M);\n\t\t}\n\t\t\n\t\tpublic static long modInverse(long A,long M)\n\t\t{\n\t\t    return modularExponentiation(A,M-2,M);\n\t\t}\n\t\t\n\t\tpublic static boolean isPrime(int n)\n\t\t{\n\t\t    \n\t\t    if (n <= 1)  return false;\n\t\t    if (n <= 3)  return true;\n\t\t    \n\t\t    if (n%2 == 0 || n%3 == 0) \n\t\t    \treturn false;\n\t\t \n\t\t    for (int i=5; i*i<=n; i=i+6)\n\t\t    {\n\t\t        if (n%i == 0 || n%(i+2) == 0)\n\t\t           return false;\n\t\t    }\n\t\t    \n\t\t    return true;\n\t\t}\n\t\t\n\t\t public static long[] shuffle(long[] a, Random gen){ \n\t\t        for(int i = 0, n = a.length;i < n;i++){ \n\t\t            int ind = gen.nextInt(n-i)+i; \n\t\t            long d = a[i]; \n\t\t            a[i] = a[ind]; \n\t\t            a[ind] = d; \n\t\t        } \n\t\t        return a; \n\t\t    }\n\t\tstatic class pair implements Comparable<pair>\n\t\t{\n\t\t\tInteger x;\n\t\t\tInteger y;\n\t\t\tpair(int a,int m)\n\t\t\t{\n\t\t\t\tthis.x=a;\n\t\t\t\tthis.y=m;\n\t\t\t}\n\t\t\t\n\n\t\t\t\n\n\n\t\tpublic int compareTo(pair o) {\n\t\t\t\tint result = x.compareTo(o.x);\n\t\t\t\tif(result==0)\n\t\t\t\t\tresult = y.compareTo(o.y);\n\t\t\t\t\n\t\t\t\t\n\t\t\t\treturn result;\n\t\t\t}  \n\t\t\t\n\t\t\tpublic String toString()\n\t\t\t{\n\t\t\t\treturn x+\" \"+y;\n\t\t\t}\n\t\t\t\n\t\t\tpublic boolean equals(Object o)\n\t\t\t{\n\t\t\t\tif (o instanceof pair)\n\t\t\t    {\n\t\t\t\t\tpair p = (pair)o;\n\t\t\t\t\treturn p.x == x && p.y == y ;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t\n\t\t\tpublic int hashCode()\n\t\t\t{\n\t\t\t\treturn new Long(x).hashCode()*31 + new Long(y).hashCode();\n\t\t\t}\n\t\t}\n}"
        },
        {
            "language": 1,
            "solution": "n=input()\na={}\nfor _ in range(n):\n    s=raw_input()\n    a[s]=a.get(s,0)+1\nt=0\nfor _ in range(n):\n    s=raw_input()\n    x=a.get(s,0)\n    if x:\n        a[s]-=1\n    else:\n        t+=1\nprint t"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.stream.IntStream;\nimport java.util.Collection;\nimport java.util.HashMap;\nimport java.io.IOException;\nimport java.util.InputMismatchException;\nimport java.io.InputStreamReader;\nimport java.util.stream.Stream;\nimport java.util.StringTokenizer;\nimport java.util.Map;\nimport java.io.BufferedReader;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        ProblemACodehorsesTshirts solver = new ProblemACodehorsesTshirts();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class ProblemACodehorsesTshirts {\n        public void solve(int testNumber, InputReader in, PrintWriter out) {\n            int n = in.nextInt();\n\n            Map<String, Integer> map = new HashMap<>();\n            for (int i = 0; i < n; i++) {\n                String s = in.nextString();\n                map.merge(s, 1, Integer::sum);\n            }\n            for (int i = 0; i < n; i++) {\n                String s = in.nextString();\n                map.merge(s, -1, Integer::sum);\n            }\n\n            out.println(map.values().stream().mapToInt(Math::abs).sum() / 2);\n        }\n\n    }\n\n    static class InputReader {\n        private BufferedReader br;\n        private StringTokenizer st;\n\n        public InputReader(InputStream inputStream) {\n            br = new BufferedReader(new InputStreamReader(inputStream));\n            st = new StringTokenizer(\"\");\n        }\n\n        public String nextString() {\n            while (!st.hasMoreTokens()) {\n                try {\n                    st = new StringTokenizer(br.readLine(), \" \");\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n            }\n            return st.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(nextString());\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n/*\n * Heart beats fast\n * \t\tColors and promises\n * \t\t\tHow to be brave\n * \t\t\t\tHow can I love when I am afraid...\n */\n//read the question correctly (is y a vowel? what are the exact constraints?)\n//look out for SPECIAL CASES (n=1?) and overflow (ll vs int?)\n//always declare multidimensional arrays as [2][n] not [n][2]\n//it can lead to upto 2-3x diff in runtime\n//declare int/long tries with 16 array size due to object overhead :D\npublic class Main\n{\n\t\n\tpublic static void main(String[] args) throws Exception\n\t{\n\t\tint n=ni();\n\t\tMap<String, Integer> hola=new HashMap<String,Integer>();\n\t\thola.put(\"S\", 0);\n\t\thola.put(\"XS\", 0);\n\t\thola.put(\"XXS\", 0);\n\t\thola.put(\"XXXS\", 0);\n\t\thola.put(\"M\", 0);\n\t\thola.put(\"L\", 0);\n\t\thola.put(\"XL\", 0);\n\t\thola.put(\"XXL\", 0);\n\t\thola.put(\"XXXL\", 0);\n\t\tfor(int i=0; i<n; i++)\n\t\t{\n\t\t\tString te=ns();\n\t\t\thola.put(te,hola.get(te)+1);\n\t\t}\n\t\tfor(int i=0; i<n; i++)\n\t\t{\n\t\t\tString te=ns();\n\t\t\thola.put(te,hola.get(te)-1);\n\t\t}\n\t\tint ans=0;\n\t\tfor(int te:hola.values())\n\t\t{\n\t\t\tans+=max(te,0);\n\t\t}\n\t\tpr(ans);\n\t\tSystem.out.print(output);\n\t}\n\t///////////////////////////////////////////\n\t///////////////////////////////////////////\n\t///template from here\n\tstatic int pow(int a, int b)\n\t{\n\t\tint c=1;\n\t\twhile(b>0)\n\t\t{\n\t\t\tif(b%2!=0)\n\t\t\t\tc*=a;\n\t\t\ta*=a;\n\t\t}\n\t\treturn c;\n\t}\n\tstatic class pair\n\t{\n\t\tint a, b;\n\t\tpair(){}\n\t\tpair(int c,int d){a=c;b=d;}\n\t}\n\tstatic interface combiner\n\t{\n\t\tpublic long combine(long a,long b);\n\t}\n\tstatic final long mod=1000000007;\n\tstatic final double eps=1e-9;\n\tstatic final long inf=100000000000000000L;\n\tstatic Reader in=new Reader();\n\tstatic StringBuilder output=new StringBuilder();\n\tstatic Random rn=new Random();\n\tstatic void reverse(int[]a){for(int i=0; i<a.length/2; i++){a[i]^=a[a.length-i-1];a[a.length-i-1]^=a[i];a[i]^=a[a.length-i-1];}}\n\tstatic void sort(int[]a)\n\t{\n\t\tint te;\n\t\tfor(int i=0; i<a.length; i+=2)\n\t\t{\n\t\t\tte=rn.nextInt(a.length);\n\t\t\tif(i!=te)\n\t\t\t{\n\t\t\t\ta[i]^=a[te];\n\t\t\t\ta[te]^=a[i];\n\t\t\t\ta[i]^=a[te];\n\t\t\t}\n\t\t}\n\t\tArrays.sort(a);\n\t}\n\tstatic void sort(long[]a)\n\t{\n\t\tint te;\n\t\tfor(int i=0; i<a.length; i+=2)\n\t\t{\n\t\t\tte=rn.nextInt(a.length);\n\t\t\tif(i!=te)\n\t\t\t{\n\t\t\ta[i]^=a[te];\n\t\t\ta[te]^=a[i];\n\t\t\ta[i]^=a[te];\n\t\t\t}\n\t\t}\n\t\tArrays.sort(a);\n\t}\n\tstatic void sort(double[]a)\n\t{\n\t\tint te;\n\t\tdouble te1;\n\t\tfor(int i=0; i<a.length; i+=2)\n\t\t{\n\t\t\tte=rn.nextInt(a.length);\n\t\t\tif(i!=te)\n\t\t\t{\n\t\t\tte1=a[te];\n\t\t\ta[te]=a[i];\n\t\t\ta[i]=te1;\n\t\t\t}\n\t\t}\n\t\tArrays.sort(a);\n\t}\n\tstatic void sort(int[][]a)\n\t{\n\t\tArrays.sort(a, new Comparator<int[]>()\n\t\t{\n\t\t\tpublic int compare(int[]a,int[]b)\n\t\t\t{\n\t\t\t\tif(a[0]>b[0])\n\t\t\t\t\treturn -1;\n\t\t\t\tif(b[0]>a[0])\n\t\t\t\t\treturn 1;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t});\n\t}\n\tstatic void sort(pair[]a)\n\t{\n\t\tArrays.sort(a,new Comparator<pair>()\n\t\t\t\t{\n\t\t\t@Override\n\t\t\tpublic int compare(pair a,pair b)\n\t\t\t{\n\t\t\t\tif(a.a>b.a)\n\t\t\t\t\treturn 1;\n\t\t\t\tif(b.a>a.a)\n\t\t\t\t\treturn -1;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\t\t});\n\t}\n\tstatic int log2n(long a)\n\t{\n\t\tint te=0;\n\t\twhile(a>0)\n\t\t{\n\t\t\ta>>=1;\n\t\t\t++te;\n\t\t}\n\t\treturn te;\n\t}\n\tstatic class vectorl implements Iterable<Long>\n\t{\n\t\tlong a[];\n\t\tint size;\n\t\tvectorl(){a=new long[10];size=0;}\n\t\tvectorl(int n){a=new long[n];size=0;}\n\t\tpublic void add(long b){if(++size==a.length)a=Arrays.copyOf(a, 2*size);a[size-1]=b;}\n\t\tpublic void sort(){Arrays.sort(a, 0, size);}\n\t\tpublic void sort(int l, int r){Arrays.sort(a, l, r);}\n\t\t@Override\n\t\tpublic Iterator<Long> iterator() {\n\t\t\tIterator<Long> hola=new Iterator<Long>()\n\t\t\t\t\t{\n\t\t\t\tint cur=0;\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic boolean hasNext() {\n\t\t\t\t\t\t\treturn cur<size;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic Long next() {\n\t\t\t\t\t\t\treturn a[cur++];\n\t\t\t\t\t\t}\t\t\t\t\n\t\t\t\t\t};\n\t\t\treturn hola;\n\t\t}\n\t}\n\tstatic class vector implements Iterable<Integer>\n\t{\n\t\tint a[],size;\n\t\tvector(){a=new int[10];size=0;}\n\t\tvector(int n){a=new int[n];size=0;}\n\t\tpublic void add(int b){if(++size==a.length)a=Arrays.copyOf(a, 2*size);a[size-1]=b;}\n\t\tpublic void sort(){Arrays.sort(a, 0, size);}\n\t\tpublic void sort(int l, int r){Arrays.sort(a, l, r);}\n\t\t@Override\n\t\tpublic Iterator<Integer> iterator() {\n\t\t\tIterator<Integer> hola=new Iterator<Integer>()\n\t\t\t\t\t{\n\t\t\t\tint cur=0;\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic boolean hasNext() {\n\t\t\t\t\t\t\treturn cur<size;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic Integer next() {\n\t\t\t\t\t\t\treturn a[cur++];\n\t\t\t\t\t\t}\t\t\t\t\n\t\t\t\t\t};\n\t\t\treturn hola;\n\t\t}\n\t}\n\t//output functions////////////////\n\tstatic void pr(Object a){output.append(a+\"\\n\");}\n\tstatic void pr(){output.append(\"\\n\");}\n\tstatic void p(Object a){output.append(a);}\n\tstatic void pra(int[]a){for(int i:a)output.append(i+\" \");output.append(\"\\n\");}\n\tstatic void pra(long[]a){for(long i:a)output.append(i+\" \");output.append(\"\\n\");}\n\tstatic void pra(String[]a){for(String i:a)output.append(i+\" \");output.append(\"\\n\");}\n\tstatic void pra(double[]a){for(double i:a)output.append(i+\" \");output.append(\"\\n\");}\n\tstatic void sop(Object a){System.out.println(a);}\n\tstatic void flush(){System.out.println(output);output=new StringBuilder();}\n\t//////////////////////////////////\n\t//input functions/////////////////\n\tstatic int ni(){return Integer.parseInt(in.next());}\n\tstatic long nl(){return Long.parseLong(in.next());}\n\tstatic String ns(){return in.next();}\n\tstatic double nd(){return Double.parseDouble(in.next());}\n\tstatic int[] nia(int n){int a[]=new int[n];for(int i=0; i<n; i++)a[i]=ni();return a;}\n\tstatic int[] pnia(int n){int a[]=new int[n+1];for(int i=1; i<=n; i++)a[i]=ni();return a;}\n\tstatic long[] nla(int n){long a[]=new long[n];for(int i=0; i<n; i++)a[i]=nl();return a;}\n\tstatic String[] nsa(int n){String a[]=new String[n];for(int i=0; i<n; i++)a[i]=ns();return a;}\n\tstatic double[] nda(int n){double a[]=new double[n];for(int i=0; i<n; i++)a[i]=nd();return a;}\n\t//////////////////////////////////\n\t//some utility functions\n\tstatic void exit(){System.out.print(output);System.exit(0);}\n\tstatic int min(int... a){int min=a[0];for(int i:a)min=Math.min(min, i);return min;}\n\tstatic int max(int... a){int max=a[0];for(int i:a)max=Math.max(max, i);return max;}\t\n\tstatic int gcd(int... a){int gcd=a[0];for(int i:a)gcd=gcd(gcd, i);return gcd;}\t\n\tstatic long min(long... a){long min=a[0];for(long i:a)min=Math.min(min, i);return min;}\n\tstatic long max(long... a){long max=a[0];for(long i:a)max=Math.max(max, i);return max;}\t\n\tstatic long gcd(long... a){long gcd=a[0];for(long i:a)gcd=gcd(gcd, i);return gcd;}\t\n\tstatic String pr(String a, long b){String c=\"\";while(b>0){if(b%2==1)c=c.concat(a);a=a.concat(a);b>>=1;}return c;}\n\tstatic long powm(long a, long b, long m){long an=1;long c=a;while(b>0){if(b%2==1)an=(an*c)%m;c=(c*c)%m;b>>=1;}return an;}\n\tstatic int gcd(int a, int b){if(b==0)return a;return gcd(b, a%b);}\n\tstatic long gcd(long a, long b){if(b==0)return a;return gcd(b, a%b);}\n\tstatic class Reader {\n        public BufferedReader reader;\n        public StringTokenizer tokenizer;\n        public Reader() {\n            reader = new BufferedReader(new InputStreamReader(System.in), 32768);\n            tokenizer = null;\n        }\n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n    }\n}"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class MyClass {\n    public static void main(String args[]) {\n        Scanner sc = new Scanner(System.in);\n        int n  = sc.nextInt();\n        String arr[] = new String[n];\n        for(int i=0;i<n;i++) arr[i] = sc.next();\n        String arr1[] = new String[n];\n        for(int i=0;i<n;i++) arr1[i] = sc.next();\n        for(int i=0;i<n;i++){\n            for(int j=0;j<n;j++){\n                if(arr[i].equals(arr1[j])){\n                    arr[i]=\"\";\n                    arr1[j]=\"\";\n                }\n            }\n        }\n        int ans =0;\n        for(int i=0;i<n;i++){\n            for(int j=0;j<n;j++){\n                if(!arr[i].isEmpty()){\n                    if(arr[i].length()==arr1[j].length()){\n                        ans++;\n                        arr[i]=\"\";\n                        arr1[j]=\"\";\n                    }\n                }\n            }\n        }\n        System.out.println(ans);\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.IOException;\nimport java.io.InputStream;\nimport java.util.HashMap;\nimport java.util.InputMismatchException;\n\npublic class E46A\n{\n\tpublic static void main(String[] args)\n\t{\n\t\tFastScanner in = new FastScanner(System.in);\n\t\tString[] sizes = {\"XXXS\", \"XXS\", \"XS\", \"S\", \"M\", \"L\", \"XL\", \"XXL\", \"XXXL\"};\n\t\tint n = in.nextInt();\n\t\tHashMap<String, Integer> a = new HashMap<>();\n\t\tHashMap<String, Integer> b = new HashMap<>();\n\t\tfor (String s : sizes) {\n\t\t\ta.put(s, 0);\n\t\t\tb.put(s, 0);\n\t\t}\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tString s = in.next();\n\t\t\ta.put(s, a.get(s) + 1);\n\t\t}\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tString s = in.next();\n\t\t\tb.put(s, b.get(s) + 1);\n\t\t}\n\t\tfor (String s : sizes) {\n\t\t\tint cut = Math.min(a.get(s), b.get(s));\n\t\t\ta.put(s, a.get(s) - cut);\n\t\t\tb.put(s, b.get(s) - cut);\n\t\t}\n\t\tint changes = 0;\n\t\tfor (String s : sizes)\n\t\t\tchanges += a.get(s);\n\t\tSystem.out.println(changes);\n\t}\n\t\n\t/**\n\t * Source: Matt Fontaine\n\t */\n\tpublic static class FastScanner\n\t{\n\t\tprivate InputStream stream;\n\t\tprivate byte[] buf = new byte[1024];\n\t\tprivate int curChar;\n\t\tprivate int numChars;\n\n\t\tpublic FastScanner(InputStream stream)\n\t\t{\n\t\t\tthis.stream = stream;\n\t\t}\n\n\t\tint read()\n\t\t{\n\t\t\tif (numChars == -1)\n\t\t\t\tthrow new InputMismatchException();\n\t\t\tif (curChar >= numChars)\n\t\t\t{\n\t\t\t\tcurChar = 0;\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tnumChars = stream.read(buf);\n\t\t\t\t} catch (IOException e)\n\t\t\t\t{\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t}\n\t\t\t\tif (numChars <= 0)\n\t\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn buf[curChar++];\n\t\t}\n\n\t\tboolean isSpaceChar(int c)\n\t\t{\n\t\t\treturn c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n\t\t}\n\n\t\tboolean isEndline(int c)\n\t\t{\n\t\t\treturn c == '\\n' || c == '\\r' || c == -1;\n\t\t}\n\n\t\tpublic int nextInt()\n\t\t{\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tpublic long nextLong()\n\t\t{\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tpublic double nextDouble()\n\t\t{\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tpublic String next()\n\t\t{\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = read();\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tdo\n\t\t\t{\n\t\t\t\tres.appendCodePoint(c);\n\t\t\t\tc = read();\n\t\t\t} while (!isSpaceChar(c));\n\t\t\treturn res.toString();\n\t\t}\n\n\t\tpublic String nextLine()\n\t\t{\n\t\t\tint c = read();\n\t\t\twhile (isEndline(c))\n\t\t\t\tc = read();\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tdo\n\t\t\t{\n\t\t\t\tres.appendCodePoint(c);\n\t\t\t\tc = read();\n\t\t\t} while (!isEndline(c));\n\t\t\treturn res.toString();\n\t\t}\n\t}\n}"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[]\nb=[]\nd={}\nfor i in range(n):\n    a.append(input())\n    d[a[i]]=0\nfor i in range(n):\n    b.append(input())\n    d[b[i]]=0\nfor i in a:\n    d[i]+=1\nfor i in b:\n    d[i]-=1\nans=0\nfor i in d:\n    ans+=abs(d[i])\nprint(ans//2)\n\n        \n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nold = [input() for _ in range(n)]\n\nfor _ in range(n):\n    try:\n        old.remove(input())\n    except:\n        continue\nprint(len(old))"
        },
        {
            "language": 3,
            "solution": "def can_change(a,b):\n\treturn a.replace('S','') + 'L' == b or a.replace('S','') + 'M' == b or a.replace('M','') + 'S' == b or a.replace('M','') + 'L' == b or a.replace('L','') + 'S' == b or a.replace('L','') + 'M' == b \n\nn = int(input())\nlia = []\nlib = []\nfor i in range(2 * n):\n\tif i >= n:\n\t\tb = input()\n\t\tlib.append(b)\n\telse:\n\t\ta = input()\n\t\tlia.append(a)\n\n\n#print(can_change('XXS','XXXL'))\nw = [i for i in range(n)]\nflag = dict.fromkeys(w,0)\n# print(flag)\nans = 0\nfor i in range(len(lib)):\n\tx = False\n\tfor j in range(len(lia)):\n\t\t#print(x)\n\t\t#print(lia[j], flag[j])\n\t\tif lib[i] == lia[j] and flag[j] == 0:\n\t\t\tflag[j] = 1\n\t\t\tx = True\n\t\t\tbreak\n\t#print('d')\n\tif not x:\n\t\txx = False\n\t\tfor j in range(len(lia)):\n\t\t\tif can_change(lia[j],lib[i]) and flag[j] == 0:\n\t\t\t\txx = True\n\t\t\t\tans += 1\n\t\t\t\tflag[j] == 1\n\t\t\t\tbreak\n\t\tif not xx:\n\t\t\tans += 1\n\nprint(ans)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nd = {}\nfor i in range(n):\n\tdata = input()\n\tl = len(data)\n\tif not l in d:\n\t\td[l] = {}\n\tfor j in data:\n\t\tif not j in d[l]:\n\t\t\td[l][j] = 0\n\t\td[l][j] += 1\n\nfor i in range(n):\n\tdata = input()\n\tl = len(data)\n\tif not l in d:\n\t\td[l] = {}\n\tfor j in data:\n\t\tif not j in d[l]:\n\t\t\td[l][j] = 0\n\t\td[l][j] -= 1\n\t\nans = 0\nfor i in d:\n\tfor j in d[i]:\n\t\tif d[i][j] > 0:\n\t\t\tans += d[i][j]\n\t\nprint(ans)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = []\nfor i in range(n):\n    a.append(input())\n\nb = []\nfor i in range(n):\n    cur = input()\n    if cur in a:\n        a.remove(cur)\n    else:\n        b.append(cur)\nprint(len(b))\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long double pi = 3.14159265358979323;\nlong long mod = 1000000000 + 7;\nlong long modu = 998244353;\nconst long double pii = acos(-1.0);\nconst long long INF = 1e18;\nconst long long inf = 1e9;\nlong long power(long long x, long long y) {\n  long long res = 1;\n  x = x;\n  while (y > 0) {\n    if (y & 1) res = (res * x);\n    y = y >> 1;\n    x = (x * x);\n  }\n  return res;\n}\nlong long powe(long long x, long long y) {\n  x = x % mod, y = y % (mod - 1);\n  long long ans = 1;\n  while (y > 0) {\n    if (y & 1) {\n      ans = (1ll * x * ans) % mod;\n    }\n    y >>= 1;\n    x = (1ll * x * x) % mod;\n  }\n  return ans;\n}\nlong long gcd(long long a, long long b) {\n  if (a == 0) return b;\n  return gcd(b % a, a);\n}\nlong long lcm(long long a, long long b) { return (a / gcd(a, b) * b); }\nbool isPrime(long long n) {\n  for (long long i = 2; i * i <= n; i++)\n    if (n % i == 0) return false;\n  return true;\n}\nlong long ncr(long long n, long long r) {\n  long long res = 1;\n  if (r > n) return 0;\n  if (r > n - r) r = n - r;\n  for (long long i = 0; i < r; i++) {\n    res *= (n - i);\n    res /= (i + 1);\n  }\n  return res;\n}\nvoid fun() {}\nconst long long N = 2e5 + 7;\nsigned main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  ;\n  fun();\n  long long tttt = 1;\n  while (tttt--) {\n    long long n;\n    cin >> n;\n    map<string, long long> m;\n    string s;\n    for (long long i = 0; i < n; i++) {\n      cin >> s;\n      m[s]++;\n    }\n    long long ans = 0;\n    for (long long i = 0; i < n; i++) {\n      cin >> s;\n      if (!m[s])\n        ans++;\n      else\n        m[s]--;\n    }\n    cout << ans;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint f[105][105];\nstring sa[105], sb[105];\nvoid solve() {\n  int n;\n  cin >> n;\n  for (int i = 1; i <= n; ++i) {\n    cin >> sa[i];\n  }\n  sort(sa + 1, sa + n + 1);\n  for (int i = 1; i <= n; ++i) {\n    cin >> sb[i];\n  }\n  sort(sb + 1, sb + n + 1);\n  for (int i = 1; i <= n; ++i) {\n    for (int j = 1; j <= n; ++j) {\n      f[i][j] = max(f[i - 1][j], f[i][j - 1]);\n      if (sa[i] == sb[j]) f[i][j] = max(f[i][j], f[i - 1][j - 1] + 1);\n    }\n  }\n  cout << n - f[n][n];\n}\nint main() { solve(); }\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl1=[]\nl2=[]\nfor _ in range(n):\n    l1.append(input())\nfor _ in range(n):\n    l2.append(input())\nc=0\nfor i in range(n):\n    if(l1[i]  in l2):\n        l2.remove(l1[i])\n    else:\n        c+=1\n#print(l1,l2)\nprint(c)\n        \n        \n\n    "
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Scanner;\nimport java.util.Collections;\nimport java.util.ArrayList;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n *\n * @author augment\n */\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tScanner in = new Scanner(inputStream);\n\t\tPrintWriter out = new PrintWriter(outputStream);\n\t\tTaskA solver = new TaskA();\n\t\tsolver.solve(1, in, out);\n\t\tout.close();\n\t}\n\n\tstatic class TaskA {\n\t\tpublic void solve(int testNumber, Scanner sc, PrintWriter out) {\n\t\t\tint n = sc.nextInt();\n\t\t\tsc.nextLine();\n\t\t\tArrayList<String> old = new ArrayList<>(), curr = new ArrayList<>();\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\told.add(sc.nextLine());\n\t\t\t}\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tcurr.add(sc.nextLine());\n\t\t\t}\n\t\t\tfor (int i = 0; i < old.size(); i++) {\n\t\t\t\tif (curr.contains(old.get(i))) {\n\t\t\t\t\tcurr.remove(old.get(i));\n\t\t\t\t\told.remove(i);\n\t\t\t\t\ti--;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (old.size() == 0) {\n\t\t\t\tout.println(0);\n\t\t\t} else {\n\t\t\t\tlong total = 0;\n\t\t\t\tCollections.sort(old);\n\t\t\t\tCollections.sort(curr);\n\t\t\t\tfor (int i = 0; i < old.size(); i++) {\n\t\t\t\t\tString o = old.get(i);\n\t\t\t\t\tString c = curr.get(i);\n\t\t\t\t\tif (o.length() == c.length()) {\n\t\t\t\t\t\ttotal++;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttotal += Math.abs(o.length() - c.length());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tout.println(total);\n\t\t\t}\n\n\t\t}\n\n\t}\n}\n\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\n\npublic class Main_1000A {\n\n\tprivate static Scanner sc;\n\tprivate static Printer pr;\n\n\tprivate static void solve() {\n\t\tint n = sc.nextInt();\n\n\t\tList<String> aa = new ArrayList<>(n);\n\t\tList<String> bb = new ArrayList<>(n);\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\taa.add(sc.next());\n\t\t}\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tbb.add(sc.next());\n\t\t}\n\t\tCollections.sort(aa);\n\t\tCollections.sort(bb);\n\t\t\n\t\tfor (String s : aa) {\n\t\t\tif (bb.contains(s)) {\n\t\t\t\tbb.remove(s);\n\t\t\t}\n\t\t}\n\t\t\n\t\tpr.println(bb.size());\n\t}\n\n\t// ---------------------------------------------------\n\tpublic static void main(String[] args) {\n\t\tsc = new Scanner(System.in);\n\t\tpr = new Printer(System.out);\n\t\t\t\n\t\tsolve();\n\t\t\t\n\t\tpr.close();\n\t\tsc.close();\n\t}\n\n\tstatic class Scanner {\n\t\tBufferedReader br;\n\n\t\tScanner (InputStream in) {\n\t\t\tbr = new BufferedReader(new InputStreamReader(in));\n\t\t}\n\n\t\tprivate boolean isPrintable(int ch) {\n\t\t\treturn ch >= '!' && ch <= '~';\n\t\t}\n\n\t\tprivate boolean isCRLF(int ch) {\n\t\t\treturn ch == '\\n' || ch == '\\r' || ch == -1;\n\t\t}\n\n\t\tprivate int nextPrintable() {\n\t\t\ttry {\n\t\t\t\tint ch;\n\t\t\t\twhile (!isPrintable(ch = br.read())) {\n\t\t\t\t\tif (ch == -1) {\n\t\t\t\t\t\tthrow new NoSuchElementException();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn ch;\n\t\t\t} catch (IOException e) {\n\t\t\t\tthrow new NoSuchElementException();\n\t\t\t}\n\t\t}\n\n\t\tString next() {\n\t\t\ttry {\n\t\t\t\tint ch = nextPrintable();\n\t\t\t\tStringBuilder sb = new StringBuilder();\n\t\t\t\tdo {\n\t\t\t\t\tsb.appendCodePoint(ch);\n\t\t\t\t} while (isPrintable(ch = br.read()));\n\n\t\t\t\treturn sb.toString();\n\t\t\t} catch (IOException e) {\n\t\t\t\tthrow new NoSuchElementException();\n\t\t\t}\n\t\t}\n\n\t\tint nextInt() {\n\t\t\ttry {\n\t\t\t\t// parseInt from Integer.parseInt()\n\t\t\t\tboolean negative = false;\n\t\t\t\tint res = 0;\n\t\t\t\tint limit = -Integer.MAX_VALUE;\n\t\t\t\tint radix = 10;\n\n\t\t\t\tint fc = nextPrintable();\n\t\t\t\tif (fc < '0') {\n\t\t\t\t\tif (fc == '-') {\n\t\t\t\t\t\tnegative = true;\n\t\t\t\t\t\tlimit = Integer.MIN_VALUE;\n\t\t\t\t\t} else if (fc != '+') {\n\t\t\t\t\t\tthrow new NumberFormatException();\n\t\t\t\t\t}\n\t\t\t\t\tfc = br.read();\n\t\t\t\t}\n\t\t\t\tint multmin = limit / radix;\n\n\t\t\t\tint ch = fc;\n\t\t\t\tdo {\n\t\t\t\t\tint digit = ch - '0';\n\t\t\t\t\tif (digit < 0 || digit >= radix) {\n\t\t\t\t\t\tthrow new NumberFormatException();\n\t\t\t\t\t}\n\t\t\t\t\tif (res < multmin) {\n\t\t\t\t\t\tthrow new NumberFormatException();\n\t\t\t\t\t}\n\t\t\t\t\tres *= radix;\n\t\t\t\t\tif (res < limit + digit) {\n\t\t\t\t\t\tthrow new NumberFormatException();\n\t\t\t\t\t}\n\t\t\t\t\tres -= digit;\n\n\t\t\t\t} while (isPrintable(ch = br.read()));\n\n\t\t\t\treturn negative ? res : -res;\n\t\t\t} catch (IOException e) {\n\t\t\t\tthrow new NoSuchElementException();\n\t\t\t}\n\t\t}\n\n\t\tlong nextLong() {\n\t\t\ttry {\n\t\t\t\t// parseLong from Long.parseLong()\n\t\t\t\tboolean negative = false;\n\t\t\t\tlong res = 0;\n\t\t\t\tlong limit = -Long.MAX_VALUE;\n\t\t\t\tint radix = 10;\n\n\t\t\t\tint fc = nextPrintable();\n\t\t\t\tif (fc < '0') {\n\t\t\t\t\tif (fc == '-') {\n\t\t\t\t\t\tnegative = true;\n\t\t\t\t\t\tlimit = Long.MIN_VALUE;\n\t\t\t\t\t} else if (fc != '+') {\n\t\t\t\t\t\tthrow new NumberFormatException();\n\t\t\t\t\t}\n\t\t\t\t\tfc = br.read();\n\t\t\t\t}\n\t\t\t\tlong multmin = limit / radix;\n\n\t\t\t\tint ch = fc;\n\t\t\t\tdo {\n\t\t\t\t\tint digit = ch - '0';\n\t\t\t\t\tif (digit < 0 || digit >= radix) {\n\t\t\t\t\t\tthrow new NumberFormatException();\n\t\t\t\t\t}\n\t\t\t\t\tif (res < multmin) {\n\t\t\t\t\t\tthrow new NumberFormatException();\n\t\t\t\t\t}\n\t\t\t\t\tres *= radix;\n\t\t\t\t\tif (res < limit + digit) {\n\t\t\t\t\t\tthrow new NumberFormatException();\n\t\t\t\t\t}\n\t\t\t\t\tres -= digit;\n\n\t\t\t\t} while (isPrintable(ch = br.read()));\n\n\t\t\t\treturn negative ? res : -res;\n\t\t\t} catch (IOException e) {\n\t\t\t\tthrow new NoSuchElementException();\n\t\t\t}\n\t\t}\n\n\t\tfloat nextFloat() {\n\t\t\treturn Float.parseFloat(next());\n\t\t}\n\n\t\tdouble nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tString nextLine() {\n\t\t\ttry {\n\t\t\t\tint ch;\n\t\t\t\twhile (isCRLF(ch = br.read())) {\n\t\t\t\t\tif (ch == -1) {\n\t\t\t\t\t\tthrow new NoSuchElementException();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tStringBuilder sb = new StringBuilder();\n\t\t\t\tdo {\n\t\t\t\t\tsb.appendCodePoint(ch);\n\t\t\t\t} while (!isCRLF(ch = br.read()));\n\n\t\t\t\treturn sb.toString();\n\t\t\t} catch (IOException e) {\n\t\t\t\tthrow new NoSuchElementException();\n\t\t\t}\n\t\t}\n\t\t\n\t\tint[] nextIntArray(int n) {\n\t\t\tint[] ret = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tret[i] = sc.nextInt();\n\t\t\t}\n\t\t\t\n\t\t\treturn ret;\n\t\t}\n\n\t\tlong[] nextLongArray(int n) {\n\t\t\tlong[] ret = new long[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tret[i] = sc.nextLong();\n\t\t\t}\n\t\t\t\n\t\t\treturn ret;\n\t\t}\n\n\t\tint[][] nextIntArrays(int n, int m) {\n\t\t\tint[][] ret = new int[m][n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tfor (int j = 0; j < m; j++) {\n\t\t\t\t\tret[j][i] = sc.nextInt();\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\treturn ret;\n\t\t}\n\n\t\tvoid close() {\n\t\t\ttry {\n\t\t\t\tbr.close();\n\t\t\t} catch (IOException e) {\n//\t\t\t\tthrow new NoSuchElementException();\n\t\t\t}\n\t\t}\n\t}\n\n\tstatic class Printer extends PrintWriter {\n\t\tPrinter(OutputStream out) {\n\t\t\tsuper(out);\n\t\t}\n\t\t\n\t\tvoid printInts(int... a) {\n\t\t\tStringBuilder sb = new StringBuilder(32);\n\t\t\tfor (int i = 0, size = a.length; i < size; i++) {\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tsb.append(' ');\n\t\t\t\t}\n\t\t\t\tsb.append(a[i]);\n\t\t\t}\n\n\t\t\tprintln(sb);\n\t\t}\n\t\t\n\t\tvoid printLongs(long... a) {\n\t\t\tStringBuilder sb = new StringBuilder(64);\n\t\t\tfor (int i = 0, size = a.length; i < size; i++) {\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tsb.append(' ');\n\t\t\t\t}\n\t\t\t\tsb.append(a[i]);\n\t\t\t}\n\n\t\t\tprintln(sb);\n\t\t}\n\t\t\n\t\tvoid printStrings(String... a) {\n\t\t\tStringBuilder sb = new StringBuilder(32);\n\t\t\tfor (int i = 0, size = a.length; i < size; i++) {\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tsb.append(' ');\n\t\t\t\t}\n\t\t\t\tsb.append(a[i]);\n\t\t\t}\n\n\t\t\tprintln(sb);\n\t\t}\n\t}\n}\n"
        },
        {
            "language": 3,
            "solution": "# -*- coding: utf - 8 -*-\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n|    author: mr.math - Hakimov Rahimjon     |\n|    e-mail: mr.math0777@gmail.com          |\n|    created: 27.06.2018 19:39              |\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n# inp = open(\"input.txt\", \"r\"); input = inp.readline; out = open(\"output.txt\", \"w\"); print = out.write\nTN = 1\n\n\n# ===========================================\n\n\ndef solution():\n    n = int(input())\n    a = []\n    for i in range(n):\n        a.append(input())\n    b = []\n    for i in range(n):\n        b.append(input())\n    ans = 0\n    an = []\n    for i in range(n):\n        if a[i] in b:\n            x = b.index(a[i])\n            b = b[:x]+b[x+1:]\n        else:\n            an.append(a[i])\n    for i in range(len(an)):\n        x = set(an[i])\n        mn = 103\n        for j in range(len(b)):\n            y = set(b[j])\n            if len(an[i]) == len(b[j]):\n                if mn > len(x)-len(x & y):\n                    mn = len(x)-len(x & y)\n        ans += mn\n    print(ans)\n\n\n# ===========================================\nwhile TN != 0:\n    solution()\n    TN -= 1\n# ===========================================\n# inp.close()\n# out.close()\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = []\nfor i in range(n):\n    a.append(input())\nb = []\nfor i in range(n):\n    b.append(input())\nc = n\nfor i in a:\n    if i in b:\n        c -= 1\n        b.remove(i)\nprint(c)\n"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\n# a = map(int, raw_input().split())\n# s = raw_input()\nlast = []\ncurr = []\nsizes = [\"M\",\"S\",\"XS\",\"XXS\",\"XXXS\",\"L\",\"XL\",\"XXL\",\"XXXL\"]\nc1 = {}\nc2 = {}\nfor i in sizes:\n    c1[i] = 0\n    c2[i] = 0\nfor i in range(n):\n    last.append(raw_input())\n    c1[last[-1]]+=1\nfor i in range(n):\n    curr.append(raw_input())\n    c2[curr[-1]]+=1\nans = 0\nfor i in sizes:\n    ans+= max(0,c1[i]-c2[i])\n\nprint ans"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, ans;\nmap<string, int> T;\nstring s;\nint main() {\n  cin >> n;\n  for (int i = 1; i <= n; i++) {\n    cin >> s;\n    T[s]++;\n  }\n  for (int i = 1; i <= n; i++) {\n    cin >> s;\n    T[s]--;\n  }\n  map<string, int>::iterator it;\n  for (it = T.begin(); it != T.end(); it++) {\n    ans += max(0, it->second);\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\n#pragma GCC optimize(\"O3\", \"unroll-loops\")\nusing namespace std;\nnamespace {\nconst int MOD107 = 1000000007;\nconst int MOD998 = 998244353;\nusing ll = long long;\nusing ull = unsigned long long;\nusing pii = pair<int, int>;\nusing pll = pair<ll, ll>;\ntemplate <class T>\nusing minheap = priority_queue<T, vector<T>, greater<T>>;\ntemplate <class T>\nusing maxheap = priority_queue<T, vector<T>, less<T>>;\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\nstruct Modular {\n private:\n  long long MODVALUE = 0;\n  long long val = 0;\n  Modular initModular(long long val) const { return Modular(val, MODVALUE); }\n  inline void validate() const {}\n  inline void validate(const Modular& other) const {}\n\n public:\n  explicit operator long long() const { return val; }\n  template <class T>\n  Modular& operator=(const T& other) {\n    val = (other % MODVALUE + MODVALUE) % MODVALUE;\n    return *this;\n  }\n  template <class T>\n  void setMod(const T& MOD) {\n    MODVALUE = MOD;\n  }\n  Modular& operator+=(const Modular& other) {\n    validate(other);\n    val += other.val;\n    if (val >= MODVALUE) val -= MODVALUE;\n    return *this;\n  }\n  Modular operator+(const Modular& other) const {\n    Modular tmp = *this;\n    return tmp += other;\n  }\n  template <class T>\n  Modular& operator+=(const T& other) {\n    return *this += initModular(other);\n  }\n  template <class T>\n  Modular operator+(const T& other) const {\n    return *this + initModular(other);\n  }\n  template <class T>\n  friend Modular operator+(const T& other, const Modular& m) {\n    return m.initModular(other) + m;\n  }\n  Modular& operator++() { return *this += 1; }\n  Modular operator++(int) {\n    Modular tmp = *this;\n    ++*this;\n    return tmp;\n  }\n  Modular operator-() const { return initModular(-val); }\n  Modular& operator-=(const Modular& other) {\n    validate(other);\n    val -= other.val;\n    if (val < 0) val += MODVALUE;\n    return *this;\n  }\n  Modular operator-(const Modular& other) const {\n    Modular tmp = *this;\n    return tmp -= other;\n  }\n  template <class T>\n  Modular& operator-=(const T& other) {\n    return *this -= initModular(other);\n  }\n  template <class T>\n  Modular operator-(const T& other) const {\n    return *this - initModular(other);\n  }\n  template <class T>\n  friend Modular operator-(const T& other, const Modular& m) {\n    return m.initModular(other) - m;\n  }\n  Modular& operator--() { return *this -= 1; }\n  Modular operator--(int) {\n    Modular tmp = *this;\n    --*this;\n    return tmp;\n  }\n  Modular& operator*=(const Modular& other) {\n    validate(other);\n    val *= other.val;\n    val %= MODVALUE;\n    if (val < 0) val += MODVALUE;\n    return *this;\n  }\n  Modular operator*(const Modular& other) const {\n    Modular tmp = *this;\n    return tmp *= other;\n  }\n  template <class T>\n  Modular& operator*=(const T& other) {\n    return *this *= initModular(other);\n  }\n  template <class T>\n  Modular operator*(const T& other) const {\n    return *this * initModular(other);\n  }\n  template <class T>\n  friend Modular operator*(const T& other, const Modular& m) {\n    return m.initModular(other) * m;\n  }\n  Modular pow(long long power) const {\n    Modular m = *this, ans = initModular(1);\n    while (power) {\n      if (power & 1) ans *= m;\n      m *= m;\n      power >>= 1;\n    }\n    return ans;\n  }\n  Modular pow(const Modular& other) const { return pow(other.val); }\n  Modular inv() const { return pow(MODVALUE - 2); }\n  Modular& operator/=(const Modular& other) {\n    val *= other.inv().val;\n    val %= MODVALUE;\n    if (val < 0) val += MODVALUE;\n    return *this;\n  }\n  Modular operator/(const Modular& other) const {\n    Modular tmp = *this;\n    return tmp /= other;\n  }\n  template <class T>\n  Modular& operator/=(const T& other) {\n    return *this /= initModular(other);\n  }\n  template <class T>\n  Modular operator/(const T& other) const {\n    return *this / initModular(other);\n  }\n  template <class T>\n  friend Modular operator/(const T& other, const Modular& m) {\n    return m.initModular(other) / m;\n  }\n  friend istream& operator>>(istream& in, Modular& m) {\n    in >> m.val;\n    m.val %= m.MODVALUE;\n    if (m.val < 0) m.val += m.MODVALUE;\n    return in;\n  }\n  friend ostream& operator<<(ostream& out, const Modular& m) {\n    return out << m.val;\n  }\n  Modular() {\n    val = 0;\n    MODVALUE = 0;\n  }\n  Modular(long long val, long long MOD)\n      : MODVALUE(MOD), val((val % MOD + MOD) % MOD) {}\n};\nusing Mint = Modular;\ninline ll binpow(ll b, ll p, ll mod) {\n  b %= mod;\n  ll ans = 1;\n  for (; p > 0; p >>= 1) {\n    if (p & 1) {\n      ans *= b;\n      ans %= mod;\n    }\n    b *= b;\n    b %= mod;\n  }\n  return ans;\n}\ninline ll max(ll a, int b) { return (a > b ? a : b); }\ninline ll max(int a, ll b) { return (a > b ? a : b); }\ninline ll min(ll a, int b) { return (a < b ? a : b); }\ninline ll min(int a, ll b) { return (a < b ? a : b); }\ntemplate <class T>\ninline bool chkmin(T& x, const T& y) {\n  return x > y ? x = y, 1 : 0;\n}\ntemplate <class T>\ninline bool chkmax(T& x, const T& y) {\n  return x < y ? x = y, 1 : 0;\n}\n}  // namespace\nnamespace IO {\ntemplate <class T>\ninline void _R(T& x) {\n  cin >> x;\n}\ntemplate <class T1, class T2>\ninline void _R(pair<T1, T2>& x) {\n  _R(x.first);\n  _R(x.second);\n}\ntemplate <class T>\ninline void _R(vector<T>& x) {\n  for (auto& i : x) _R(i);\n}\ntemplate <class T>\ninline void _R(deque<T>& x) {\n  for (auto& i : x) _R(i);\n}\ninline void R() {}\ntemplate <class T1, class... T2>\ninline void R(T1& x, T2&... y) {\n  _R(x);\n  R(y...);\n}\ntemplate <class T>\ninline void _W(const T& x);\ntemplate <class T1, class T2>\ninline void _W(const pair<T1, T2>& p);\ntemplate <class... T>\ninline void _W(const vector<T...>& x);\ntemplate <class... T>\ninline void _W(const deque<T...>& x);\ntemplate <class... T>\ninline void _W(const forward_list<T...>& x);\ntemplate <class... T>\ninline void _W(const list<T...>& x);\ntemplate <class... T>\ninline void _W(const set<T...>& x);\ntemplate <class... T>\ninline void _W(const multiset<T...>& x);\ntemplate <class... T>\ninline void _W(const unordered_set<T...>& x);\ntemplate <class... T>\ninline void _W(const unordered_multiset<T...>& x);\ntemplate <class... T>\ninline void _W(const map<T...>& x);\ntemplate <class... T>\ninline void _W(const multimap<T...>& x);\ntemplate <class... T>\ninline void _W(const unordered_map<T...>& x);\ntemplate <class... T>\ninline void _W(const unordered_multimap<T...>& x);\ntemplate <class Container>\ninline void printContainer(const Container& x) {\n  bool isFirst = 1;\n  for (auto i : x) {\n    if (!isFirst) cout << ' ';\n    isFirst = 0;\n    _W(i);\n  }\n}\ntemplate <class T>\ninline void _W(const T& x) {\n  cout << x;\n}\ntemplate <class T1, class T2>\ninline void _W(const pair<T1, T2>& p) {\n  _W(p.first);\n  _W(' ');\n  _W(p.second);\n}\ntemplate <class... T>\ninline void _W(const vector<T...>& x) {\n  printContainer(x);\n}\ntemplate <class... T>\ninline void _W(const deque<T...>& x) {\n  printContainer(x);\n}\ntemplate <class... T>\ninline void _W(const forward_list<T...>& x) {\n  printContainer(x);\n}\ntemplate <class... T>\ninline void _W(const list<T...>& x) {\n  printContainer(x);\n}\ntemplate <class... T>\ninline void _W(const set<T...>& x) {\n  printContainer(x);\n}\ntemplate <class... T>\ninline void _W(const multiset<T...>& x) {\n  printContainer(x);\n}\ntemplate <class... T>\ninline void _W(const unordered_set<T...>& x) {\n  printContainer(x);\n}\ntemplate <class... T>\ninline void _W(const unordered_multiset<T...>& x) {\n  printContainer(x);\n}\ntemplate <class... T>\ninline void _W(const map<T...>& x) {\n  printContainer(x);\n}\ntemplate <class... T>\ninline void _W(const multimap<T...>& x) {\n  printContainer(x);\n}\ntemplate <class... T>\ninline void _W(const unordered_map<T...>& x) {\n  printContainer(x);\n}\ntemplate <class... T>\ninline void _W(const unordered_multimap<T...>& x) {\n  printContainer(x);\n}\ninline void W() { cout << '\\n'; }\ntemplate <class T>\ninline void W(const T& x) {\n  _W(x);\n  W();\n}\ntemplate <class T1, class... T2>\ninline void W(const T1& x, const T2&... y) {\n  _W(x);\n  _W(' ');\n  W(y...);\n}\n}  // namespace IO\nusing namespace IO;\nnamespace outputFormat {\ninline string Case(int tc) { return \"Case #\" + to_string(tc) + ':'; }\ninline string YN(bool b) { return b ? \"Yes\" : \"No\"; }\n}  // namespace outputFormat\nusing namespace outputFormat;\nnamespace std {\ntemplate <class T1, class T2>\nstruct hash<pair<T1, T2>> {\n  std::size_t operator()(pair<T1, T2> _) const {\n    return hash<T1>{}(_.first) ^ hash<T2>{}(_.second);\n  }\n};\n}  // namespace std\nint main() {\n  int n;\n  R(n);\n  vector<map<int, int>> cnt1(5), cnt2 = cnt1;\n  for (int i = 0; i < n; i++) {\n    string x;\n    R(x);\n    cnt1[x.length()][x.back()]++;\n  }\n  for (int i = 0; i < n; i++) {\n    string x;\n    R(x);\n    cnt2[x.length()][x.back()]++;\n  }\n  int ans = 0;\n  for (int len = 1; len <= 4; len++) {\n    int dist = 0;\n    for (int c = 'A'; c <= 'Z'; c++) dist += abs(cnt1[len][c] - cnt2[len][c]);\n    ans += dist / 2;\n  }\n  W(ans);\n  return 0;\n}\nstatic auto __init__ = []() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  cout << fixed << setprecision(10);\n  return 42;\n}();\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nsizes = [\n    'XXXS',\n    'XXS',\n    'XS',\n    'S',\n    'M',\n    'L',\n    'XL',\n    'XXL',\n    'XXXL',\n]\n\nold = {s: 0 for s in sizes}\nfor i in range(n):\n    old[input()] += 1\n\nnew = {s: 0 for s in sizes}\nfor i in range(n):\n    new[input()] += 1\n\ndiff = {s: old[s] - new[s] for s in sizes}\n\nlong = sum(abs(diff[s]) for s in ('XXXS', 'XXS', 'XS'))\nshort = max(abs(diff[s]) for s in ('S', 'M', 'L'))\n\nprint(long + short)\n"
        },
        {
            "language": 3,
            "solution": "from collections import defaultdict\nn = int(input())\nd = defaultdict(int)\nr = 0\nfor i in range(n):\n    d[input()] += 1\nfor i in range(n):\n    s = input()\n    if d[s]:\n        d[s] -= 1\n    else:\n        r += 1\nprint(r)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int i, j = 0, k, l, a = 0, b, m, n, ck = 0, dk = 0;\n  map<string, int> my;\n  string arr;\n  cin >> n;\n  for (i = 0; i < n; i++) {\n    cin >> arr;\n    my[arr]++;\n  }\n  for (i = 0; i < n; i++) {\n    cin >> arr;\n    if (my[arr] != 0) {\n      my[arr]--;\n    } else\n      ck++;\n  }\n  cout << ck << endl;\n}\n"
        },
        {
            "language": 4,
            "solution": "/*input\n2\nM\nXS\nXS\nM\n\n\n*/\nimport java.io.ByteArrayInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.*;\npublic class Main {\n   InputStream is;\n\tPrintWriter out;\n\tString INPUT = \"\"; \n//class Declaration\n\nstatic class pair implements Comparable<pair>{\n    int x,y;\n    pair (int i,int j)\n    { x=i; y=j;}\n    public String toString(){ return x+\" \"+y;}\n    public int compareTo(pair p){\n        if(this.x!=p.x) { return this.x-p.x;}\n        else { return this.y-p.y;}\n    }\n    public boolean equals(pair x){ return (x.x==this.x&&x.y==this.y);}\n}\n\nvoid solve(){ \nint n=ni();\nArrayList<ArrayList<String>> prev=new ArrayList<>();\nArrayList<ArrayList<String>> curr=new ArrayList<>();\nfor(int i=0;i<4;++i) prev.add(new ArrayList<>()); \nfor(int i=0;i<4;++i) curr.add(new ArrayList<>());\nString[] p=new String[n],c=new String[n];\nfor(int i=0;i<n;++i){\n\tp[i]=ns();\n\tprev.get(p[i].length()-1).add(p[i]);\n\n}\nfor(int i=0;i<n;++i){\n\tc[i]=ns();\n\tcurr.get(c[i].length()-1).add(c[i]);\n}\nint fa=0;\n//pn(prev);\n//pn(curr);\n\nfor(int i=0;i<4;++i){\n\tArrayList<String> a1=prev.get(i);\nArrayList<String> a2=curr.get(i);\nfor(String x:a2){\n\tif(a1.contains(x)){\n\t\ta1.remove(a1.indexOf(x));\n\t}\n\telse{\n\t\tfa++;\n\t\t//a1.remove(a1.size()-1);\n\t}\n}\n\n}\npn(fa);\n\n}\nint  diff(String x,String y){\n\tchar s1[]=x.toCharArray();\nchar s2[]=y.toCharArray();\nif(s1.length!=s2.length){\n\treturn Integer.MAX_VALUE; \n}\nint d=0;\nfor(int i=0;i<s1.length;++i){\n\tif(s1[i]!=s2[i]) d++;\n}\nreturn d;\n}\nint min(int[] arr)\n{\n    int min=Integer.MAX_VALUE;\n    for(int i=0;i<arr.length;++i)\n    {\n        if(min>arr[i]) min=arr[i];\n    }\n    return min;\n}\nint max(int[] arr)\n{\n    int max=Integer.MIN_VALUE;\n    for(int i=0;i<arr.length;++i)\n    {\n        if(max<arr[i]) max=arr[i];\n    }\n    return max;\n}\nstatic int gcd(int x,int y)\n{\n  if(y==0) return x;\n  return gcd(y,x%y);\n}\nstatic long nCr(long n,long rc)\n{\n long r=Math.min(rc,n-rc);\n long ans=1;\n for(int i=1,j=(int)n;i<=r;++i,--j)\n {\n   ans=(ans*(long)j)/((long)i);\n }\n  return ans;\n  \n}\n\nvoid run() throws Exception\n{\n\t\tis = INPUT.isEmpty() ? System.in : new ByteArrayInputStream(INPUT.getBytes());\n\t\tout = new PrintWriter(System.out);\n\t\t\n\t\tlong s = System.currentTimeMillis();\n\t\tsolve();\n\t\tout.flush();\n\t\tif(!INPUT.isEmpty())tr(System.currentTimeMillis()-s+\"ms\");\n}\n\t\n\t\n\tpublic static void main(String[] args) throws Exception { new Main().run(); }\n\t\n//output methods\nprivate void pn(Object o)\n{\n\tout.println(o);\n}\nprivate void p(Object o)\n{\n\tout.print(o);\n}\n\n\n\n//input methods\n\t\tprivate byte[] inbuf = new byte[1024];\n\tpublic int lenbuf = 0, ptrbuf = 0;\n\t\n\n\tprivate int readByte()\n\t{\n\t\tif(lenbuf == -1)throw new InputMismatchException();\n\t\tif(ptrbuf >= lenbuf){\n\t\t\tptrbuf = 0;\n\t\t\ttry { lenbuf = is.read(inbuf); } catch (IOException e) { throw new InputMismatchException(); }\n\t\t\tif(lenbuf <= 0)return -1;\n\t\t}\n\t\treturn inbuf[ptrbuf++];\n\t}\n\t\n\tprivate boolean isSpaceChar(int c) { return !(c >= 33 && c <= 126); }\n\tprivate int skip() { int b; while((b = readByte()) != -1 && isSpaceChar(b)); return b; }\n\t\n\tprivate double nd() { return Double.parseDouble(ns()); }\n\tprivate char nc() { return (char)skip(); }\n\t\n\tprivate String ns()\n\t{\n\t\tint b = skip();\n\t\tStringBuilder sb = new StringBuilder();\n\t\twhile(!(isSpaceChar(b))){ // when nextLine, (isSpaceChar(b) && b != ' ')\n\t\t\tsb.appendCodePoint(b);\n\t\t\tb = readByte();\n\t\t}\n\t\treturn sb.toString();\n\t}\n\t\n\tprivate char[] ns(int n)\n\t{\n\t\tchar[] buf = new char[n];\n\t\tint b = skip(), p = 0;\n\t\twhile(p < n && !(isSpaceChar(b))){\n\t\t\tbuf[p++] = (char)b;\n\t\t\tb = readByte();\n\t\t}\n\t\treturn n == p ? buf : Arrays.copyOf(buf, p);\n\t}\n\t\t\n\tprivate char[][] nm(int n, int m)\n\t{\n\t\tchar[][] map = new char[n][];\n\t\tfor(int i = 0;i < n;i++)map[i] = ns(m);\n\t\treturn map;\n\t}\n\t\n\tprivate int[] na(int n)\n\t{\n\t\tint[] a = new int[n];\n\t\tfor(int i = 0;i < n;i++)a[i] = ni();\n\t\treturn a;\n\t}\n\t\n\tprivate int ni()\n\t{\n\t\tint num = 0, b;\n\t\tboolean minus = false;\n\t\twhile((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));\n\t\tif(b == '-'){\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\t\t\n\t\twhile(true){\n\t\t\tif(b >= '0' && b <= '9'){\n\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t}else{\n\t\t\t\treturn minus ? -num : num;\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\t\n\tprivate long nl()\n\t{\n\t\tlong num = 0;\n\t\tint b;\n\t\tboolean minus = false;\n\t\twhile((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));\n\t\tif(b == '-'){\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\t\t\n\t\twhile(true){\n\t\t\tif(b >= '0' && b <= '9'){\n\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t}else{\n\t\t\t\treturn minus ? -num : num;\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\t\n\tprivate void tr(Object... o) { if(INPUT.length() > 0)System.out.println(Arrays.deepToString(o)); }\n}\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin,stdout\nfrom math import gcd, ceil, sqrt\nfrom itertools import combinations\nii1 = lambda: int(stdin.readline().strip())\nis1 = lambda: stdin.readline().strip()\niia = lambda: list(map(int, stdin.readline().strip().split()))\nisa = lambda: stdin.readline().strip().split()\nmod = 1000000007\n\nn = ii1()\nprev = []\nfor i in range(n):\n    prev.append(is1())\ncur = []\nfor i in range(n):\n    cur.append(is1())\nif sorted(prev) == sorted(cur):\n    print(0)\nelse:\n    res = 0\n    for i in prev:\n        for j in range(len(cur)):\n            if i == cur[j]:\n                cur.pop(j)\n                res += 1\n                break\n    print(n - res)\n    \n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\nconst ll INF = static_cast<ll>(1e9) + 7;\nconst int MAXN = static_cast<int>(2e6) + 17;\nint n;\nstring a[MAXN], b[MAXN];\nvector<string> vec[MAXN];\nmap<string, int> kok[MAXN];\nbool read() {\n  if (!(cin >> n)) return false;\n  for (ll i = 0; i < (ll)(n); ++i) cin >> a[i];\n  for (ll i = 0; i < (ll)(n); ++i) cin >> b[i];\n  return true;\n}\nvoid solve() {\n  for (ll i = 0; i < (ll)(n); ++i) ++kok[static_cast<int>((a[i]).size())][a[i]];\n  for (ll i = 0; i < (ll)(n); ++i)\n    vec[static_cast<int>((b[i]).size())].push_back(b[i]);\n  int ans = 0;\n  for (int len = 1; len <= 4; ++len) {\n    for (auto i : vec[len])\n      if (kok[len][i] != 0) {\n        --kok[len][i];\n      }\n    for (auto i : kok[len]) ans += i.second;\n  }\n  cout << ans << '\\n';\n}\nint main() {\n  cin.tie(nullptr);\n  std::ios_base::sync_with_stdio(false);\n  std::mt19937 rand('S' + 'E' + 'R' + 'E' + 'Z' + 'H' + 'K' + 'A');\n  while (read()) solve();\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nx = ['M', 'S', 'L', 'XS', 'XXS', 'XXXS', 'XL', 'XXL', 'XXXL']\na = [0] * len(x)\nb = [0] * len(x)\nfor i in range(n):\n    a[x.index(input())] += 1\nfor i in range(n):\n    b[x.index(input())] += 1\n\nans = 0\nfor i in range(len(a)):\n    xx = min(a[i], b[i])\n    a[i] -= xx\n    b[i] -= xx\n    \nfor i in a:\n    ans += i\n            \nprint(ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, m = 0, l = 0, s3 = 0, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0;\n  cin >> n;\n  string s;\n  for (int i = 0; i < n; i++) {\n    cin >> s;\n    if (s.length() == 1) {\n      if (s[0] == 'M')\n        m++;\n      else if (s[0] == 'L')\n        l++;\n      else\n        s3++;\n    }\n    if (s.length() == 2) {\n      if (s == \"XL\")\n        l1++;\n      else\n        l2++;\n    }\n    if (s.length() == 3) {\n      if (s == \"XXL\")\n        l3++;\n      else\n        l4++;\n    }\n    if (s.length() == 4) {\n      if (s == \"XXXL\")\n        l5++;\n      else\n        l6++;\n    }\n  }\n  int m1 = 0, s1 = 0, k1 = 0, k2 = 0, k3 = 0, k4 = 0, k5 = 0, k6 = 0, k7 = 0, q;\n  for (int i = 0; i < n; i++) {\n    cin >> s;\n    if (s.length() == 1) {\n      if (s[0] == 'M')\n        m1++;\n      else if (s[0] == 'L')\n        k1++;\n      else\n        s1++;\n    }\n    if (s.length() == 2) {\n      if (s == \"XL\")\n        k2++;\n      else\n        k3++;\n    }\n    if (s.length() == 3) {\n      if (s == \"XXL\")\n        k4++;\n      else\n        k5++;\n    }\n    if (s.length() == 4) {\n      if (s == \"XXXL\")\n        k6++;\n      else\n        k7++;\n    }\n  }\n  q = abs(m1 - m) + abs(k1 - l) + abs(s1 - s3) + abs(l1 - k2) + abs(k3 - l2) +\n      abs(l3 - k4) + abs(l4 - k5) + abs(k6 - l5) + abs(k7 - l6);\n  cout << q / 2;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\nn=int(input())\nd1={}\nd2={}\nd1['M']=0\nd2['M']=0\nls=['L','S']\nfor i in range(4):\n    for ch in ls:\n        #print('X'*i+ch)\n        d1['X'*i+ch]=0\n        d2['X'*i+ch]=0\n\nfor i in range(n):\n    temp=input()\n    d1[temp]+=1\n\nfor i in range(n):\n    temp=input()\n    d2[temp]+=1\n\nans=0\nfor size in d1:\n    #print(size,d2[size],d1[size])\n    if(d2[size]>d1[size]):\n        ans+=(d2[size]-d1[size])\n\nprint(ans)\n\n\n    \n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\n\n\npublic class JavaApplication2 {\n\n    \n    public static void main(String[] args) throws IOException {\n     \n        BufferedReader sc= new BufferedReader(new InputStreamReader(System.in));\n        int n = Integer.parseInt(sc.readLine().split(\" \")[0]);\n        ArrayList<String> tshr = new ArrayList<>(n);\n        for (int i = 0; i < n; i++) {\n            tshr.add(sc.readLine());\n        }\n        for (int i = 0; i < n; i++) {\n            tshr.remove(sc.readLine());\n        }\n        System.out.println(tshr.size());\n        \n        \n        \n        \n        \n        \n    }\n    \n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long n;\n  cin >> n;\n  map<string, long long> mp;\n  string st;\n  for (long long i = 0; i < n; i++) {\n    cin >> st;\n    mp[st]++;\n  }\n  long long coun = 0;\n  for (long long i = 0; i < n; i++) {\n    cin >> st;\n    if (mp[st] != 0) {\n      coun++;\n      mp[st]--;\n    }\n  }\n  cout << (n - coun) << endl;\n}\n"
        },
        {
            "language": 3,
            "solution": "def separator(p):\n    c=0;d=0;e=0;f=0;g=0;h=0;k=0;l=0;m=0\n    for i in p:\n        if i == 'S':\n            c+=1\n        elif i=='M':\n            d+=1\n        elif i=='L':\n            e+=1\n        elif i=='XS':\n            f+=1\n        elif i=='XXS':\n            g+=1\n        elif i=='XXXS':\n            h+=1\n        elif i=='XL':\n            k+=1\n        elif i=='XXL':\n            l+=1\n        elif i=='XXXL':\n            m+=1\n    z = [c,d,e,f,g,h,k,l,m]\n    return z\nn = int(input(''))\na = []\nb = []\ncount = 0\nfor x in range(n):\n    p = input('')\n    a.append(p)\nfor y in range(n):\n    q = input('')\n    b.append(q)\nz_1 = separator(a)\nz_2 = separator(b)\nfor i in range(9):\n    if (z_1[i] - z_2[i]) > 0:\n        count = count + (z_1[i] - z_2[i])\nprint(count)"
        },
        {
            "language": 1,
            "solution": "# enumerate range float sorted reversed\nfrom collections import defaultdict\ndef print_ints(a):\n    print ' '.join(map(str, a))\n\nread_ints = lambda: map(int, raw_input().strip().split())\nread_floats= lambda: map(float, raw_input().strip().split())\n\nn = int(raw_input())\nl = []\nfor _ in range(2):\n    p = defaultdict(int)\n    for i in range(n):\n        p[raw_input().strip()] += 1\n    l.append(p)\na, b = l\nkeys = set(a.keys()) | set(b.keys())\nfor k in keys:\n    if a[k] == b[k]:\n        a[k] = b[k] = 0\n        continue\n    if a[k] > b[k]:\n        a[k] -= b[k]\n        b[k] = 0\n    else:\n        b[k] -= a[k]\n        a[k] = 0\nw = []\nv = []\nfor k in keys:\n    if a[k]:\n        w.extend([k]*a[k])\n    if b[k]:\n        v.extend([k]*b[k])\na = sorted(w, key=lambda x: (len(x), x))\nb = sorted(v, key=lambda x: (len(x), x))\nc = 0\nfor i,j in zip(a,b):\n    if i != j:\n        c += 1\nprint c\n"
        },
        {
            "language": 4,
            "solution": "import static java.lang.Double.parseDouble;\nimport static java.lang.Double.max;\nimport static java.lang.Double.min;\nimport static java.lang.Integer.parseInt;\nimport static java.lang.Long.parseLong;\nimport static java.lang.System.exit;\nimport static java.lang.System.setOut;\n\nimport java.io.*;\nimport java.util.*;\n\npublic class A {\n\n    static BufferedReader in;\n    static PrintWriter out;\n    static StringTokenizer tok;\n\n    static int diff(String s1, String s2) {\n        int cnt = 0;\n        for(int i=0;i<s1.length(); i++) {\n            if(s1.charAt(i) != s2.charAt(i)) cnt ++;\n        }\n        return cnt;\n    }\n\n    static void solve() throws Exception {\n        int n = nextInt();\n        List<String> l1 = new ArrayList<>(), l2 = new ArrayList<>();\n        for(int i = 0; i < n ;i++) l1.add(next());\n        for(int i = 0; i < n ;i++) l2.add(next());\n        int ans = 0;\n        while (l1.size() > 0) {\n            int ii = 0, jj = 0, diff = 5;\n            n = l1.size();\n            for(int i=0; i<n;i++) for (int j=0; j<n; j++) if(l1.get(i).length() == l2.get(j).length()) {\n                if(diff > diff(l1.get(i),l2.get(j))) {\n                    diff = diff(l1.get(i),l2.get(j));\n                    ii = i;\n                    jj = j;\n                }\n            }\n            l1.remove(ii); l2.remove(jj);\n            ans += diff;\n        }\n        System.out.println(ans);\n    }\n\n    private static long gcd(long a, long b) {\n        while (b > 0) {\n            long temp = b;\n            b = a % b;\n            a = temp;\n        }\n        return a;\n    }\n\n    private static long lcm(long a, long b) {\n        return a * (b / gcd(a, b));\n    }\n\n    static int nextInt() throws IOException {\n        return parseInt(next());\n    }\n\n    static long nextLong() throws IOException {\n        return parseLong(next());\n    }\n\n    static double nextDouble() throws IOException {\n        return parseDouble(next());\n    }\n\n    static String next() throws IOException {\n        while (tok == null || !tok.hasMoreTokens()) {\n            tok = new StringTokenizer(in.readLine());\n        }\n        return tok.nextToken();\n    }\n\n    public static void main(String[] args) throws Exception {\n        try {\n            in = new BufferedReader(new InputStreamReader(System.in));\n            out = new PrintWriter(new OutputStreamWriter(System.out));\n            solve();\n            //long lEndTime = System.currentTimeMillis();\n            //System.out.println(\"Elapsed time in seconds: \" + (double)(lEndTime - lStartTime) / 1000.0);\n            in.close();\n            out.close();\n        } catch (Throwable e) {\n            e.printStackTrace();\n            exit(1);\n        }\n    }\n}"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[input() for x in range(0,n)]\nb=[input() for x in range(n,2*n)]\nc=0\nfor x in b:\n    if x in a:\n        a.remove(x)\n    elif x not in a:\n        c=c+1\nprint(c)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <class T>\nvoid test(T t) {\n  cout << t << endl;\n}\ntemplate <class T, class T2>\nvoid test(T t, T2 t2) {\n  cout << t << \" \" << t2 << endl;\n}\ntemplate <class T, class T2, class T3>\nvoid test(T t, T2 t2, T3 t3) {\n  cout << t << \" \" << t2 << \" \" << t3 << endl;\n}\nconst int inf = 0x3f3f3f3f;\nconst long long INF = 0x3f3f3f3f3f3f3f3fLL;\nconst long long mod = 1e9 + 7;\nconst double eps = 1e-6;\nconst int N = 300;\nstring s;\nint a[10];\nvoid work() {\n  int n;\n  cin >> n;\n  for (int i = 0; i < (n); i++) {\n    cin >> s;\n    if (s == \"XXXS\") {\n      a[0]++;\n    } else if (s == \"XXS\") {\n      a[1]++;\n    } else if (s == \"XS\") {\n      a[2]++;\n    } else if (s == \"S\") {\n      a[3]++;\n    } else if (s == \"M\") {\n      a[4]++;\n    } else if (s == \"L\") {\n      a[5]++;\n    } else if (s == \"XL\") {\n      a[6]++;\n    } else if (s == \"XXL\") {\n      a[7]++;\n    } else if (s == \"XXXL\") {\n      a[8]++;\n    }\n  }\n  for (int i = 0; i < (n); i++) {\n    cin >> s;\n    if (s == \"XXXS\") {\n      a[0]--;\n    } else if (s == \"XXS\") {\n      a[1]--;\n    } else if (s == \"XS\") {\n      a[2]--;\n    } else if (s == \"S\") {\n      a[3]--;\n    } else if (s == \"M\") {\n      a[4]--;\n    } else if (s == \"L\") {\n      a[5]--;\n    } else if (s == \"XL\") {\n      a[6]--;\n    } else if (s == \"XXL\") {\n      a[7]--;\n    } else if (s == \"XXXL\") {\n      a[8]--;\n    }\n  }\n  int ans = 0;\n  for (int i = 0; i < (9); i++) {\n    ans += abs(a[i]);\n  }\n  cout << ans / 2 << endl;\n}\nint main() {\n  ios::sync_with_stdio(false);\n  int t;\n  work();\n}\n"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\n\nn = int(input())\na = Counter(input().strip() for _ in range(n))\nb = Counter(input().strip() for _ in range(n))\n\nfor sz in ['M', 'L', 'XL', 'XXL', 'XXXL', 'S', 'XS', 'XXS', 'XXXS']:\n    m = min(a[sz], b[sz])\n    a[sz] -= m\n    b[sz] -= m\n\nans = 0\n\nfor num_x in range(1, 4):\n    old = a['X' * num_x + 'S'] + a['X' * num_x + 'L']\n    new = b['X' * num_x + 'S'] + b['X' * num_x + 'L']\n    assert old == new\n    ans += old\n\nold = a['M'] + a['S'] + a['L']\nnew = b['M'] + b['S'] + b['L']\nassert old == new\nans += old\n\nprint(ans)\n"
        },
        {
            "language": 1,
            "solution": "n=input()\nd1={\"M\":0,\"S\":0,\"L\":0,\"XS\":0,\"XL\":0,\"XXS\":0,\"XXL\":0,\"XXXS\":0,\"XXXL\":0}\nd2={\"M\":0,\"S\":0,\"L\":0,\"XS\":0,\"XL\":0,\"XXS\":0,\"XXL\":0,\"XXXS\":0,\"XXXL\":0}\n\nfor i in xrange(n):\n    s=raw_input()\n    d1[s]+=1\nfor i in xrange(n):\n    s=raw_input()\n    if(d1[s]>0):\n        d1[s]-=1\n    else:\n        d2[s]+=1\ncount=0\nfor k in d1:\n    count+=d1[k]\nprint count\n        \n        \n        \n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint read() {\n  int x = 0, flag = 1;\n  char ch = getchar();\n  while (!isdigit(ch)) {\n    if (ch == '-') flag = -1;\n    ch = getchar();\n  }\n  while (isdigit(ch)) {\n    x = (x << 3) + (x << 1) + (ch ^ 48);\n    ch = getchar();\n  }\n  return x * flag;\n}\nint n;\nstring s[109];\nstring t[109];\nint vis[109], vis1[109];\nint main() {\n  n = read();\n  for (int i = (1), i_end_ = (n); i <= i_end_; ++i) cin >> s[i];\n  for (int i = (1), i_end_ = (n); i <= i_end_; ++i) cin >> t[i];\n  for (int i = (1), i_end_ = (n); i <= i_end_; ++i)\n    for (int j = (1), j_end_ = (n); j <= j_end_; ++j)\n      if (!vis[j])\n        if (s[i] == t[j] && !vis1[j]) {\n          vis1[j] = vis[i] = 1;\n          break;\n        }\n  int ans = 0;\n  for (int i = (1), i_end_ = (n); i <= i_end_; ++i)\n    if (!vis[i]) {\n      int tmp1 = 0, tmp = 1 << 30;\n      for (int j = (1), j_end_ = (n); j <= j_end_; ++j)\n        if (!vis1[j] && s[i].length() == t[j].length()) {\n          int tmp2 = 0;\n          for (int k = (0), k_end_ = (s[i].length() - 1); k <= k_end_; ++k)\n            tmp2 += s[i][k] != t[j][k];\n          if (tmp2 < tmp) {\n            tmp = tmp2;\n            tmp1 = j;\n          }\n        }\n      if (tmp != 1 << 30) {\n        ans += tmp;\n        vis1[tmp1] = 1;\n      }\n    }\n  printf(\"%d\\n\", ans);\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "#JMD\n#Nagendra Jha-4096\n \n#a=list(map(int,sys.stdin.readline().split(' ')))\n#n,k,s= map(int, sys.stdin.readline().split(' '))\n \nimport sys\nimport math\n\n#import fractions\n#import numpy\n \n###File Operations###\nfileoperation=0\nif(fileoperation):\n    orig_stdout = sys.stdout\n    orig_stdin = sys.stdin\n    inputfile = open('W:/Competitive Programming/input.txt', 'r')\n    outputfile = open('W:/Competitive Programming/output.txt', 'w')\n    sys.stdin = inputfile\n    sys.stdout = outputfile\n\n###Defines...###\nmod=1000000007\n \n###FUF's...###\ndef nospace(l):\n    ans=''.join(str(i) for i in l)\n    return ans\n \n \n \n##### Main ####\nn=int(input())\na=[]\nb=[]\nfor i in range(n):\n    a.append(str(input()))\n\nfor i in range(n):\n    s=str(input())\n    if(s in a):\n        del(a[a.index(s)])\n    else:\n        b.append(s)\n\na.sort(key=len)\nb.sort(key=len)\n\nprint(len(a))\n    \n#####File Operations#####\nif(fileoperation):\n    sys.stdout = orig_stdout\n    sys.stdin = orig_stdin\n    inputfile.close()\n    outputfile.close()"
        },
        {
            "language": 3,
            "solution": "n = int(input())\n\na = list()\nval1 = {'M':0,'S':0,'L':0,'XS':0,'XL':0,'XXS':0,'XXL':0,'XXXS':0,'XXXL':0}\nfor i in range(0,n):\n    a.append(input())\n    val1[a[i]]+=1\nb = list()\nval2 = {'M':0,'S':0,'L':0,'XS':0,'XL':0,'XXS':0,'XXL':0,'XXXS':0,'XXXL':0}\nfor i in range(0,n):\n    b.append(input())\n    val2[b[i]]+=1\n    \n#print(val1)\n#print(val2)\nc = 0\n\nc = c+max(abs(val1['M']-val2['M']),abs(val1['L']-val2['L']),abs(val1['S']-val2['S']))\nc = c+max(abs(val1['XS']-val2['XS']),abs(val1['XL']-val2['XL']))\nc = c+max(abs(val1['XXS']-val2['XXS']),abs(val1['XXL']-val2['XXL']))\nc = c+max(abs(val1['XXXS']-val2['XXXS']),abs(val1['XXXL']-val2['XXXL']))  \nprint(c)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[input()for _ in range(n)]\nk=0\nfor _ in range(n):\n\ttry:a.remove(input())\n\texcept:k+=1\nprint(k)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, q = 0;\n  string s1;\n  cin >> n;\n  vector<string> o;\n  vector<string> t;\n  vector<string> th;\n  vector<string> f;\n  for (int i = 0; i < n; i++) {\n    cin >> s1;\n    o.push_back(s1);\n  }\n  for (int i = 0; i < n; i++) {\n    cin >> s1;\n    vector<string>::iterator j = find(o.begin(), o.end(), s1);\n    if (j != o.end())\n      o.erase(j);\n    else\n      q++;\n  }\n  cout << q;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[]\nr=0\nfor i in range(n):\n\ta.append(input())\nfor i in range(n):\n\tt=input()\n\tif t in a:\n\t\ta.remove(t)\nprint(len(a))"
        },
        {
            "language": 4,
            "solution": "//package codeforcesdv246;\nimport java.util.*;\npublic class Main \n{\n\t\n\t\n    public static void main(String[] args) {\n\t\t\n    \tScanner sc=new Scanner(System.in);\n    \t\n    \t\n    \tint n=sc.nextInt();\n    \tString prev[]=new String[n];\n    \t\n    \tString curr[]=new String[n];\n    \tfor(int i=0;i<n;i++)\n    \t{\n    \t\tprev[i]=sc.next();\n    \t}\n    \tArrayList<String> al=new ArrayList<String>();\n    \tfor(int i=0;i<n;i++)\n    \t{\n    \t\tcurr[i]=sc.next();\n    \t\t//al.add(curr[i]);\n    \t}\n    \t\n    \tint count=n;\n    \n    \tfor(int i=0;i<n;i++)\n    \t{\n    \t\tfor(int j=0;j<n;j++)\n    \t\t{\n    \t\t\t\n    \t\t\n    \t\t\n    \t\t\tif(prev[i].equals(curr[j]))\n    \t\t\t{\n    \t\t\t\tcount--;\n    \t\t\t\tcurr[j]=\"\";\n    \t\t\t\tbreak;\n    \t\t   }\n    \t\t\n    \t     }\n    \t\t}\n    \t\n    \tSystem.out.println(count);\n    \t\n\t}\n\n}\n"
        },
        {
            "language": 3,
            "solution": "l1=[0]*9; l2=[0]*9; j=0\nn=int(input())\nfor i in range(n):\n    s= input()\n    if s=='L':\n        l1[0]+=1\n    elif s=='M':\n        l1[1]+=1\n    elif s=='S':\n        l1[2]+=1\n    elif s=='XL':\n        l1[3]+=1\n    elif s=='XS':\n        l1[4]+=1\n    elif s=='XXL':\n        l1[5]+=1\n    elif s=='XXS':\n        l1[6]+=1\n    elif s=='XXXL':\n        l1[7]+=1\n    else:\n        l1[8]+=1\nfor i in range(n):\n    s= input()\n    if s=='L':\n        l2[0]+=1\n    elif s=='M':\n        l2[1]+=1\n    elif s=='S':\n        l2[2]+=1\n    elif s=='XL':\n        l2[3]+=1\n    elif s=='XS':\n        l2[4]+=1\n    elif s=='XXL':\n        l2[5]+=1\n    elif s=='XXS':\n        l2[6]+=1\n    elif s=='XXXL':\n        l2[7]+=1\n    else:\n        l2[8]+=1\nfor i in range(9):\n    j+=abs(l1[i]-l2[i])\nprint(j//2)"
        },
        {
            "language": 3,
            "solution": "def compter(a, b, c):\n    d=a.count(c)\n    e=b.count(c)\n    if d>e:\n        return (d-e)\n    else:\n        return 0\nwinners = int(input(\"\"))\nanswer=0\nprevious = [\"\"]*winners\ncurrent = [\"\"]*winners\nfor loop in range(winners):\n    previous[loop]=input(\"\")\nfor i in range(winners):\n    current[i] =input(\"\")\nanswer = compter(previous,current,\"S\")+compter(previous,current,\"M\")+compter(previous,current,\"L\")+compter(previous,current,\"XS\")+compter(previous,current,\"XL\")+compter(previous,current,\"XXS\")+compter(previous,current,\"XXL\")+compter(previous,current,\"XXXS\")+compter(previous,current,\"XXXL\")\nprint(answer)"
        },
        {
            "language": 3,
            "solution": "from collections import *\nn=int(input())\nl,d=Counter(),Counter()\nfor i in range(n):\n    s=input()\n    l[s]+=1\nfor j in range(n):\n    s=input()\n    d[s]+=1\nd.subtract(l)\nc=0\nfor i in d.items():\n    c=c+abs(i[1])\nprint(c//2)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nprev = []\nnew = []\ncount = 0\nfor a in range(n):\n  a = input()\n  prev.append(a)\nfor b in range(n):\n  b = input()\n  new.append(b)\nwhile new != []:\n  if new[0] in prev:\n    prev.remove(new[0])\n    new.remove(new[0])\n  else:\n    new.remove(new[0])\n    count += 1\nprint(count)"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedInputStream;\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.FileNotFoundException;\nimport java.util.*;\n\npublic class A {\n\n\tpublic static void main(String[] args) {\n\t\tJS in = new JS();\n\t\tint n = in.nextInt();\n\t\tint m1 = 0;\n\t\tint s1 = 0;\n\t\tint l1 = 0;\n\t\tint ss1 = 0;\n\t\tint sss1 = 0;\n\t\tint ssss1 = 0;\n\t\tint ll1 = 0;\n\t\tint lll1 = 0;\n\t\tint llll1 = 0;\n\t\t\n\t\tint m2 = 0;\n\t\tint s2 = 0;\n\t\tint l2 = 0;\n\t\tint ss2 = 0;\n\t\tint sss2 = 0;\n\t\tint ssss2 = 0;\n\t\tint ll2 = 0;\n\t\tint lll2 = 0;\n\t\tint llll2 = 0;\n\t\tfor(int i = 0; i < n; i++) {\n\t\t\tString s = in.next();\n\t\t\tif(s.equals(\"S\")) s1++;\n\t\t\telse if(s.equals(\"M\"))m1++;\n\t\t\telse if(s.equals(\"L\"))l1++;\n\t\t\telse if(s.equals(\"XS\")) ss1++;\n\t\t\telse if(s.equals(\"XXS\")) sss1++;\n\t\t\telse if(s.equals(\"XXXS\")) ssss1++;\n\t\t\telse if(s.equals(\"XL\")) ll1++;\n\t\t\telse if(s.equals(\"XXL\")) lll1++;\n\t\t\telse if(s.equals(\"XXXL\")) llll1++;\n\t\t}\n\t\tfor(int i = 0; i < n; i++) {\n\t\t\tString s = in.next();\n\t\t\tif(s.equals(\"S\")) s2++;\n\t\t\telse if(s.equals(\"M\"))m2++;\n\t\t\telse if(s.equals(\"L\"))l2++;\n\t\t\telse if(s.equals(\"XS\")) ss2++;\n\t\t\telse if(s.equals(\"XXS\")) sss2++;\n\t\t\telse if(s.equals(\"XXXS\")) ssss2++;\n\t\t\telse if(s.equals(\"XL\")) ll2++;\n\t\t\telse if(s.equals(\"XXL\")) lll2++;\n\t\t\telse if(s.equals(\"XXXL\")) llll2++;\n\t\t}\n\t\t\n\t\tint res = 0;\n\t\tint res1 = 0;\n\n\t\t\n\t\tres1 += Math.abs(m2-m1);\n\t\tres1 += Math.abs(s2-s1);\n\t\tres1 += Math.abs(l2-l1);\n\t\tres += res1/2;\n\t\tres1 = 0;\n\t\t\n\t\tres1 += Math.abs(ss2-ss1);\n\t\tres1 += Math.abs(ll2-ll1);\n\t\tres += res1/2;\n\t\tres1 = 0;\n\t\t\n\t\tres1 += Math.abs(sss2-sss1);\n\t\tres1 += Math.abs(lll2-lll1);\n\t\tres += res1/2;\n\t\tres1 = 0;\n\t\t\n\t\tres1 += Math.abs(ssss2-ssss1);\n\t\tres1 += Math.abs(llll2-llll1);\n\t\tres += res1/2;\n\t\tres1 = 0;\n\t\tSystem.out.println(res);\n\t\t\n\t\t\n\t}\n\t\n\n\tstatic class JS{\n\t\tpublic int BS = 1<<16;\n\t\tpublic char NC = (char)0;\n\t\tbyte[] buf = new byte[BS];\n\t\tint bId = 0, size = 0;\n\t\tchar c = NC;\n\t\tdouble num = 1;\n\t\tBufferedInputStream in;\n\t\t\n\t\tpublic JS() {\n\t\t\tin = new BufferedInputStream(System.in, BS);\n\t\t}\n\t\t\n\t\tpublic JS(String s) throws FileNotFoundException {\n\t\t\tin = new BufferedInputStream(new FileInputStream(new File(s)), BS);\n\t\t}\n\t\t\n\t\tpublic char nextChar(){\n\t\t\twhile(bId==size) {\n\t\t\t\ttry {\n\t\t\t\t\tsize = in.read(buf);\n\t\t\t\t}catch(Exception e) {\n\t\t\t\t\treturn NC;\n\t\t\t\t}\t\t\t\t\n\t\t\t\tif(size==-1)return NC;\n\t\t\t\tbId=0;\n\t\t\t}\n\t\t\treturn (char)buf[bId++];\n\t\t}\n\t\t\n\t\tpublic int nextInt() {\n\t\t\treturn (int)nextLong();\n\t\t}\n\t\t\n\t\tpublic long nextLong() {\n\t\t\tnum=1;\n\t\t\tboolean neg = false;\n\t\t\tif(c==NC)c=nextChar();\n\t\t\tfor(;(c<'0' || c>'9'); c = nextChar()) {\n\t\t\t\tif(c=='-')neg=true;\n\t\t\t}\n\t\t\tlong res = 0;\n\t\t\tfor(; c>='0' && c <='9'; c=nextChar()) {\n\t\t\t\tres = (res<<3)+(res<<1)+c-'0';\n\t\t\t\tnum*=10;\n\t\t\t}\n\t\t\treturn neg?-res:res;\n\t\t}\n\t\t\n\t\tpublic double nextDouble() {\n\t\t\tdouble cur = nextLong();\n\t\t\treturn c!='.' ? cur:cur+nextLong()/num;\n\t\t}\n\t\t\n\t\tpublic String next() {\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\twhile(c<=32)c=nextChar();\n\t\t\twhile(c>32) {\n\t\t\t\tres.append(c);\n\t\t\t\tc=nextChar();\n\t\t\t}\n\t\t\treturn res.toString();\n\t\t}\n\t\t\n\t\tpublic String nextLine() {\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\twhile(c<=32)c=nextChar();\n\t\t\twhile(c!='\\n') {\n\t\t\t\tres.append(c);\n\t\t\t\tc=nextChar();\n\t\t\t}\n\t\t\treturn res.toString();\n\t\t}\n\n\t\tpublic boolean hasNext() {\n\t\t\tif(c>32)return true;\n\t\t\twhile(true) {\n\t\t\t\tc=nextChar();\n\t\t\t\tif(c==NC)return false;\n\t\t\t\telse if(c>32)return true;\n\t\t\t}\n\t\t}\n\t}\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.io.BufferedWriter;\nimport java.util.InputMismatchException;\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.io.Writer;\nimport java.io.OutputStreamWriter;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n *\n * @author Rishabhdeep Singh\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        OutputWriter out = new OutputWriter(outputStream);\n        TaskA solver = new TaskA();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class TaskA {\n        public void solve(int testNumber, InputReader in, OutputWriter out) {\n            int n = in.nextInt();\n            int[] cnt = new int[10];\n            Arrays.fill(cnt, 0);\n            List<String> a = new ArrayList<>();\n            for (int i = 0; i < n; i++) {\n                a.add(in.readLine());\n            }\n            List<String> b = new ArrayList<>();\n            for (int i = 0; i < n; i++) {\n                String temp = in.readLine();\n                if (a.contains(temp)) {\n                    a.remove(temp);\n                } else\n                    b.add(temp);\n            }\n            int[] cnta = new int[10];\n            for (int i = 0; i < a.size(); i++) {\n                cnta[a.get(i).length()]++;\n            }\n            int[] cntb = new int[10];\n            Arrays.fill(cnta, 0);\n            Arrays.fill(cntb, 0);\n            for (int i = 0; i < b.size(); i++) {\n                cntb[a.get(i).length()]++;\n            }\n            int ans = 0;\n            for (int i = 0; i < 10; i++) {\n                ans += Math.abs(cnta[i] - cntb[i]);\n            }\n            out.println(ans);\n        }\n\n    }\n\n    static class InputReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private InputReader.SpaceCharFilter filter;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int read() {\n            if (numChars == -1) {\n                throw new InputMismatchException();\n            }\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (numChars <= 0) {\n                    return -1;\n                }\n            }\n            return buf[curChar++];\n        }\n\n        public int nextInt() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do {\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public boolean isSpaceChar(int c) {\n            if (filter != null) {\n                return filter.isSpaceChar(c);\n            }\n            return isWhitespace(c);\n        }\n\n        public static boolean isWhitespace(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        private String readLine0() {\n            StringBuilder buf = new StringBuilder();\n            int c = read();\n            while (c != '\\n' && c != -1) {\n                if (c != '\\r') {\n                    buf.appendCodePoint(c);\n                }\n                c = read();\n            }\n            return buf.toString();\n        }\n\n        public String readLine() {\n            String s = readLine0();\n            while (s.trim().length() == 0) {\n                s = readLine0();\n            }\n            return s;\n        }\n\n        public interface SpaceCharFilter {\n            public boolean isSpaceChar(int ch);\n\n        }\n\n    }\n\n    static class OutputWriter {\n        private final PrintWriter writer;\n\n        public OutputWriter(OutputStream outputStream) {\n            writer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));\n        }\n\n        public OutputWriter(Writer writer) {\n            this.writer = new PrintWriter(writer);\n        }\n\n        public void close() {\n            writer.close();\n        }\n\n        public void println(int i) {\n            writer.println(i);\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = [input() for i in range(n)]\nb = [input() for i in range(n)]\nto_remove = []\nfor s in a:\n    if s in b:\n        b.remove(s)\n        to_remove += [s]\nfor s in to_remove:\n    a.remove(s)\na.sort()\nb.sort()\nans = 0\nfor i in range(len(a)):\n    if a[i][-1] != b[i][-1]:\n        ans += 1\nprint(ans)"
        },
        {
            "language": 3,
            "solution": "t=int(input())\na=[]\nb=[]\nfor i in range(t):\n\ta.append(input())\nfor i in range(t):\n\tb.append(input())\nq=set(b)\ncount=0\nfor i in q:\n\tm=a.count(i)\n\tn=b.count(i)\n\tif(n<=m):\n\t\tcount=count+0\n\telse:\n\t\tcount+=abs(m-n)\nprint(count)"
        },
        {
            "language": 3,
            "solution": "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Thu Jun 28 01:56:17 2018\n\n@author: Arsanuos\n\"\"\"\n\ndef main():\n    n = int(input())\n    arr = []\n    for i in range(n):\n        arr.append(input())\n    for i in range(n):\n        x = input()\n        if x in arr:\n            arr.remove(x)\n    print(len(arr))\n\n\nif __name__ == \"__main__\":\n    main()"
        },
        {
            "language": 3,
            "solution": "# cook your dish here\nn = int(input())\nl1 = []\nl2 = []\nfor i in range(n):\n    l1.append(input())\nfor i in range(n):\n    l2.append(input())\nfor i in range(len(l1)) :\n    if l1[i] in l2:\n        l2.pop(l2.index(l1[i]))\nprint(len(l2))"
        },
        {
            "language": 3,
            "solution": "import math\ngetInputList = lambda : list(input().split())\ngetInputIntList = lambda : list(map(int,input().split()))\n\nn = int(input())\narr1 = []\nfor i in range(n):\n\tarr1.append(input())\narr2 = []\t\nfor i in range(n):\n\tarr2.append(input())\ncount = 0\t\t\nfor i in arr1:\n\tfor j in arr2:\n\t\tif i == j:\n\t\t\tarr2.remove(j)\n\t\t\tbreak\n\t\t\t\t\n\telse:\n\t\tcount += 1\nprint(count)\t\t"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class A\n{\n    static int n;\n    static int[] arr;\n    static Map<String, Integer> m1, m2;\n    public static void main(String[] args) throws IOException\n    {\n        Flash f = new Flash();\n        n = f.ni();\n        m1 = new HashMap<>();\n        for(int i = 0; i < n; i++){\n            String str = f.ns();\n            m1.put(str, m1.getOrDefault(str, 0) + 1);\n        }\n        \n        m2 = new HashMap<>();\n        for(int i = 0; i < n; i++){\n            String str = f.ns();\n            m2.put(str, m2.getOrDefault(str, 0) + 1);\n        }\n        \n        sop(fn());\n    }\n    \n    static int fn()\n    {\n        int ans = n;\n        for(String k : m1.keySet()){\n            if(!m2.containsKey(k)) continue;\n            int v1 = m1.get(k), v2 = m2.get(k);\n            ans -= Math.min(v1, v2);\n        }\n        \n        return ans;\n    }\n    \n    static void sort(int[] a){\n        List<Integer> A = new ArrayList<>();\n        for(int i : a) A.add(i);\n        Collections.sort(A);\n        for(int i = 0; i < A.size(); i++) a[i] = A.get(i);\n    }\n    \n    static int swap(int itself, int dummy){\n        return itself;\n    }\n    \n    static void sop(Object o){ System.out.println(o); }\n    \n    static void print(int[] a){\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < a.length; i++) sb.append(a[i] + \" \");\n        System.out.println(sb);\n    }\n    \n    static class Flash\n    {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        StringTokenizer st = new StringTokenizer(\"\");\n        \n        String next(){\n            while(!st.hasMoreTokens()){\n                try{\n                    st = new StringTokenizer(br.readLine());\n                }catch(IOException e){\n                    e.printStackTrace();\n                }\n            }\n            \n            return st.nextToken();\n        }\n        \n        String ns(){\n            String s = new String();\n            try{\n                s = br.readLine().trim();\n            }catch(IOException e){\n                e.printStackTrace();\n            }\n            \n            return s;\n        }\n        \n        int ni(){\n            return Integer.parseInt(next());\n        }\n        \n        int[] arr(int n){\n            int[] a = new int[n];\n            for(int i = 0; i < n; i++) a[i] = ni();\n            return a;\n        }\n\n        long nl(){\n            return Long.parseLong(next());\n        }\n        \n        double nd(){\n            return Double.parseDouble(next());\n        }\n    }\n}"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = []\nm = []\nans = 0\nfor _ in range(n):\n    l.append(input())\nfor _ in range(n):\n    s = input()\n    if s in l:\n        l.remove(s)\n\nprint(len(l))"
        },
        {
            "language": 3,
            "solution": "sizes = {'XXXS': 0, 'XXS': 1, 'XS': 2, 'S': 3, 'M': 4, 'L': 5, 'XL': 6, 'XXL': 7, 'XXXL': 8}\n\ndata_old = {0: 0, 1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8:0}\ndata_new = {0: 0, 1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8:0}\nn = int(input())\n\nres = 0\n\nfor _ in range(n):\n    data_old[sizes[input()]] += 1\n\nfor _ in range(n):\n    data_new[sizes[input()]] += 1\n\nsteps = {0: 8, 8: 0, 1: 7, 7: 1, 2: 6, 6: 2, 3: [4, 5], 4: [3, 5], 5: [3, 4]}\n#print(data_old)\n#print(data_new)\n\nfor i in list(data_old.keys()):\n    if data_old[i] > data_new[i]:\n        res += data_old[i] - data_new[i]\nprint(res)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst double pi = acos(-1.0);\nconst int INF = 0x3f3f3f3f;\nconst int MOD = 1e9 + 7;\nconst double EPS = 1e-9;\nmap<string, int> mmp1, mmp2;\nset<string> ss;\nint n;\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; ++i) {\n    string s;\n    cin >> s;\n    ++mmp1[s];\n    ss.insert(s);\n  }\n  for (int i = 1; i <= n; ++i) {\n    string s;\n    cin >> s;\n    ++mmp2[s];\n    ss.insert(s);\n  }\n  int ans = 0;\n  for (set<string>::iterator it = ss.begin(); it != ss.end(); ++it) {\n    string s = *it;\n    if (mmp1[s] < mmp2[s]) {\n      ans += mmp2[s] - mmp1[s];\n    }\n  }\n  printf(\"%d\\n\", ans);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long n, i, L, B[10][1010], has;\nstring s;\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  cin >> n;\n  for (i = 1; i <= n; i++) {\n    cin >> s;\n    L = s.length();\n    B[L][s[L - 1]]++;\n  }\n  for (i = 1; i <= n; i++) {\n    cin >> s;\n    L = s.length();\n    B[L][s[L - 1]]--;\n  }\n  for (i = 1; i <= 5; i++) {\n    has += abs(B[i]['M']);\n    has += abs(B[i]['S']);\n    has += abs(B[i]['L']);\n  }\n  has /= 2;\n  cout << has << \"\\n\";\n}\n"
        },
        {
            "language": 3,
            "solution": "dict1 = {}\ncount = 0\nx = int(input())\nf = [input() for i in range(x)]\ng = [input() for j in range(x)]\nfor i in f:\n    if i in g:\n        g.remove(i)\nprint(len(g))\n\n\n"
        },
        {
            "language": 3,
            "solution": "num = int(input())\nlast = {}\nchange = 0\n\nfor i in range(num):\n    name = input()\n    if last.__contains__(name):\n        last[name] += 1\n    else:\n        last[name] = 1\n\nfor i in range(num):\n    name = input()\n    if last.__contains__(name) and last[name] >= 1:\n        last[name] -= 1\n    else:\n        change += 1\n\nprint(change)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long logCeil(long long base, long long n) {\n  long long i, x = 1;\n  for (i = 0;; i++) {\n    if (x >= n) break;\n    x *= base;\n  };\n  return i;\n}\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cin.tie(0);\n  ;\n  long long n;\n  cin >> n;\n  map<string, long long> make_pair, mp1;\n  for (int i = 0; i < n; i++) {\n    string second;\n    cin >> second;\n    make_pair[second]++;\n  }\n  for (int i = 0; i < n; i++) {\n    string second;\n    cin >> second;\n    mp1[second]++;\n  }\n  long long ans = n;\n  for (std::map<string, long long>::iterator it = make_pair.begin();\n       it != make_pair.end(); it++) {\n    ans -= min(mp1[it->first], it->second);\n  }\n  cout << ans;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long mod = 1e9 + 7;\nconst long long INF = LLONG_MAX;\nconst long long NINF = LLONG_MIN;\nint main() {\n  long long t = 1;\n  while (t-- > 0) {\n    long long n;\n    cin >> n;\n    vector<string> a(n), b(n);\n    for (long long i = 0; i < n; i++) cin >> a[i];\n    for (long long i = 0; i < n; i++) cin >> b[i];\n    map<string, long long> mpa, mpb;\n    for (long long i = 0; i < n; i++) mpa[a[i]]++;\n    for (long long i = 0; i < n; i++) mpb[b[i]]++;\n    long long ans = n;\n    for (auto x : mpa) ans -= min(x.second, mpb[x.first]);\n    cout << ans << endl;\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "/*\n * \n * @Author  Ajudiya_13(Bhargav Girdharbhai Ajudiya)\n * Dhirubhai Ambani Institute of Information And Communication Technology \n * \n */\n\n\nimport java.util.*;\nimport java.io.*;\nimport java.lang.*;\n\npublic class Code1\n{\n\t\n\tpublic static void main(String[] args)\n\t{\n\t\tInputReader in = new InputReader(System.in);\n\t\tPrintWriter pw = new PrintWriter(System.out);\n\t\t\n\t\tint n = in.nextInt();\n\t\tHashMap<String,Integer> hm1 = new HashMap<>();\n\t\tHashMap<String,Integer> hm2 = new HashMap<>();\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t\tString s = in.nextLine();\n\t\t\tif(!hm1.containsKey(s))\n\t\t\t\thm1.put(s, 1);\n\t\t\telse\n\t\t\t\thm1.put(s,hm1.get(s)+1);\n\t\t}\n\t\t\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t\tString s = in.nextLine();\n\t\t\tif(hm1.containsKey(s))\n\t\t\t{\n\t\t\t\tint x = hm1.get(s)-1;\n\t\t\t\tif(x!=0)\n\t\t\t\t\thm1.put(s,x);\n\t\t\t\telse\n\t\t\t\t\thm1.remove(s);\n\t\t\t}\t\n\t\t\telse if(!hm2.containsKey(s))\n\t\t\t\thm2.put(s, 1);\n\t\t\telse\n\t\t\t\thm2.put(s,hm2.get(s)+1);\n\t\t}\n\t\t\n\t\tint count = 0;\n\t\tfor(String s : hm2.keySet())\n\t\t\tcount+=hm2.get(s);\n\t\tpw.println(count);\n\t\tpw.flush();\n\t\tpw.close();\n\t}\n\t\n\tstatic class InputReader \n\t{\n\t\t \n\t\tprivate final InputStream stream;\n\t\tprivate final byte[] buf = new byte[8192];\n\t\tprivate int curChar, snumChars;\n\t\tprivate SpaceCharFilter filter;\n \n\t\tpublic InputReader(InputStream stream) \n\t\t{\n\t\t\tthis.stream = stream;\n\t\t}\n \n\t\tpublic int snext() \n\t\t{\n\t\t\tif (snumChars == -1)\n\t\t\t\tthrow new InputMismatchException();\n\t\t\tif (curChar >= snumChars) \n\t\t\t{\n\t\t\t\tcurChar = 0;\n\t\t\t\ttry \n\t\t\t\t{\n\t\t\t\t\tsnumChars = stream.read(buf);\n\t\t\t\t} \n\t\t\t\tcatch (IOException e) \n\t\t\t\t{\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t}\n\t\t\t\tif (snumChars <= 0)\n\t\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn buf[curChar++];\n\t\t}\n \n\t\tpublic int nextInt() \n\t    {\n\t\t\tint c = snext();\n\t\t\twhile (isSpaceChar(c)) \n\t\t\t{\n\t\t\t\tc = snext();\n\t\t\t}\n\t\t\tint sgn = 1;\n\t\t\tif (c == '-')\n\t\t    {\n\t\t\t\tsgn = -1;\n\t\t\t\tc = snext();\n\t\t\t}\n\t\t\tint res = 0;\n\t\t\tdo \n\t\t\t{\n\t\t\t\tif (c < '0' || c > '9')\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\tres *= 10;\n\t\t\t\tres += c - '0';\n\t\t\t\tc = snext();\n\t\t\t} while (!isSpaceChar(c));\n\t\t\treturn res * sgn;\n\t\t}\n \n\t\tpublic long nextLong()\n\t    {\n\t\t\tint c = snext();\n\t\t\twhile (isSpaceChar(c)) \n\t\t\t{\n\t\t\t\tc = snext();\n\t\t\t}\n\t\t\tint sgn = 1;\n\t\t\tif (c == '-') \n\t\t\t{\n\t\t\t\tsgn = -1;\n\t\t\t\tc = snext();\n\t\t\t}\n\t\t\tlong res = 0;\n\t\t\tdo \n\t\t\t{\n\t\t\t\tif (c < '0' || c > '9')\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\tres *= 10;\n\t\t\t\tres += c - '0';\n\t\t\t\tc = snext();\n\t\t\t} while (!isSpaceChar(c));\n\t\t\treturn res * sgn;\n\t\t}\n \n\t\tpublic int[] nextIntArray(int n) \n\t\t{\n\t\t\tint a[] = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) \n\t\t\t{\n\t\t\t\ta[i] = nextInt();\n\t\t\t}\n\t\t\treturn a;\n\t\t}\n \n\t\tpublic String readString()\n\t    {\n\t\t\tint c = snext();\n\t\t\twhile (isSpaceChar(c)) \n\t\t\t{\n\t\t\t\tc = snext();\n\t\t\t}\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tdo \n\t\t\t{\n\t\t\t\tres.appendCodePoint(c);\n\t\t\t\tc = snext();\n\t\t\t} while (!isSpaceChar(c));\n\t\t\treturn res.toString();\n\t\t}\n \n\t\tpublic String nextLine() \n\t\t{\n\t\t\tint c = snext();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = snext();\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tdo \n\t\t\t{\n\t\t\t\tres.appendCodePoint(c);\n\t\t\t\tc = snext();\n\t\t\t} while (!isEndOfLine(c));\n\t\t\treturn res.toString();\n\t\t}\n \n\t\tpublic boolean isSpaceChar(int c) \n\t\t{\n\t\t\tif (filter != null)\n\t\t\t\treturn filter.isSpaceChar(c);\n\t\t\treturn c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n\t\t}\n \n\t\tprivate boolean isEndOfLine(int c) \n\t\t{\n\t\t\treturn c == '\\n' || c == '\\r' || c == -1;\n\t\t}\n \n\t\tpublic interface SpaceCharFilter\n\t    {\n\t\t\tpublic boolean isSpaceChar(int ch);\n\t\t}\n\t}\n\t\n\tpublic static long mod = 1000000007;\n\tpublic static int d;\n\tpublic static int p;\n\tpublic static int q;\n\t\n\tpublic static int[] suffle(int[] a,Random gen)\n\t{\n\t\tint n = a.length;\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t\tint ind = gen.nextInt(n-i)+i;\n\t\t\tint temp = a[ind];\n\t\t\ta[ind] = a[i];\n\t\t\ta[i] = temp;\n\t\t}\n\t\treturn a;\n\t}\n\t\n\tpublic static void swap(int a, int b){\n\t\tint temp = a;\n\t\ta = b;\n\t\tb = temp;\n\t}\n\t\n\tpublic static HashSet<Integer> primeFactorization(int n)\n\t{\n\t\tHashSet<Integer> a =new HashSet<Integer>();\n\t\tfor(int i=2;i*i<=n;i++)\n\t\t{\n\t\t\twhile(n%i==0)\n\t\t\t{\n\t\t\t\ta.add(i);\n\t\t\t\tn/=i;\n\t\t\t}\n\t\t}\n\t\tif(n!=1)\n\t\t\ta.add(n);\n\t\treturn a;\n\t}\n\t\n\tpublic static void sieve(boolean[] isPrime,int n)\n\t{\n\t\tfor(int i=1;i<n;i++)\n\t\t\tisPrime[i] = true;\n\t\t\n\t\tisPrime[0] = false;\n\t\tisPrime[1] = false;\n\t\t\n\t\tfor(int i=2;i*i<n;i++)\n\t\t{\n\t\t\tif(isPrime[i] == true)\n\t\t\t{\n\t\t\t\tfor(int j=(2*i);j<n;j+=i)\n\t\t\t\t\tisPrime[j] = false;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tpublic static int GCD(int a,int b)\n\t{\n\t\tif(b==0)\n\t\t\treturn a;\n\t\telse\n\t\t\treturn GCD(b,a%b);\n\t}\n\t\n\tpublic static long GCD(long a,long b)\n\t{\n\t\tif(b==0)\n\t\t\treturn a;\n\t\telse\n\t\t\treturn GCD(b,a%b);\n\t}\n\t\n\tpublic static void extendedEuclid(int A,int B)\n\t{\n\t\tif(B==0)\n\t\t{\n\t\t\td = A;\n\t\t\tp = 1 ;\n\t\t\tq = 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\textendedEuclid(B, A%B);\n\t\t\tint temp = p;\n\t\t\tp = q;\n\t\t\tq = temp - (A/B)*q;\n\t\t}\n\t}\n\t\n\tpublic static long LCM(long a,long b)\n\t{\n\t\treturn (a*b)/GCD(a,b);\n\t}\n\t\n\tpublic static int LCM(int a,int b)\n\t{\n\t\treturn (a*b)/GCD(a,b);\n\t}\n\t\n\tpublic static int binaryExponentiation(int x,int n)\n\t{\n\t    int result=1;\n\t    while(n>0)\n\t    {\n\t        if(n % 2 ==1)\n\t            result=result * x;\n\t        x=x*x;\n\t        n=n/2;\n\t    }\n\t    return result;\n\t}\n\t\n\tpublic static long binaryExponentiation(long x,long n)\n\t{\n\t    long result=1;\n\t    while(n>0)\n\t    {\n\t        if(n % 2 ==1)\n\t            result=result * x;\n\t        x=x*x;\n\t        n=n/2;\n\t    }\n\t    return result;\n\t}\n\t\n\tpublic static int modularExponentiation(int x,int n,int M)\n\t{\n\t    int result=1;\n\t    while(n>0)\n\t    {\n\t        if(n % 2 ==1)\n\t            result=(result * x)%M;\n\t        x=(x*x)%M;\n\t        n=n/2;\n\t    }\n\t    return result;\n\t}\n\t\n\tpublic static long modularExponentiation(long x,long n,long M)\n\t{\n\t    long result=1;\n\t    while(n>0)\n\t    {\n\t        if(n % 2 ==1)\n\t            result=(result * x)%M;\n\t        x=(x*x)%M;\n\t        n=n/2;\n\t    }\n\t    return result;\n\t}\n\t\n\tpublic static int modInverse(int A,int M)\n\t{\n\t    return modularExponentiation(A,M-2,M);\n\t}\n\t\n\tpublic static long modInverse(long A,long M)\n\t{\n\t    return modularExponentiation(A,M-2,M);\n\t}\n\t\n\tpublic static boolean isPrime(int n)\n\t{\n\t    \n\t    if (n <= 1)  return false;\n\t    if (n <= 3)  return true;\n\t    \n\t    if (n%2 == 0 || n%3 == 0) \n\t    \treturn false;\n\t \n\t    for (int i=5; i*i<=n; i=i+6)\n\t    {\n\t        if (n%i == 0 || n%(i+2) == 0)\n\t           return false;\n\t    }\n\t    \n\t    return true;\n\t}\n\t\n\tstatic class pair implements Comparable<pair>\n\t{\n\t\tInteger x, y;\n\t\tpair(int x,int y)\n\t\t{\n\t\t\tthis.x=x;\n\t\t\tthis.y=y;\n\t\t}\n\t\t\n\t\tpublic int compareTo(pair o) {\n\t\t\tint result = x.compareTo(o.x);\n\t\t\tif(result==0)\n\t\t\t\tresult = y.compareTo(o.y);\n\t\t\t\n\t\t\treturn result;\n\t\t}  \n\t\t\n\t\tpublic String toString()\n\t\t{\n\t\t\treturn x+\" \"+y;\n\t\t}\n\t\t\n\t\tpublic boolean equals(Object o)\n\t\t{\n\t\t\tif (o instanceof pair)\n\t\t    {\n\t\t\t\tpair p = (pair)o;\n\t\t\t\treturn p.x == x && p.y == y ;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\tpublic int hashCode()\n\t\t{\n\t\t\treturn new Long(x).hashCode()*31 + new Long(y).hashCode();\n\t\t}\n\t}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nchar s[10];\nint a[11], b[11];\nint main(void) {\n  int n;\n  scanf(\"%d\", &n);\n  for (int i = 0; i < n; i++) {\n    scanf(\"%s\", s);\n    if (strlen(s) == 1) {\n      if (s[0] == 'M')\n        a[0]++;\n      else\n        a[1 + (s[0] == 'L')]++;\n    } else {\n      a[strlen(s) * 2 + (s[strlen(s) - 1] == 'L') - 1]++;\n    }\n  }\n  for (int i = 0; i < n; i++) {\n    scanf(\"%s\", s);\n    if (strlen(s) == 1) {\n      if (s[0] == 'M')\n        b[0]++;\n      else\n        b[1 + (s[0] == 'L')]++;\n    } else {\n      b[strlen(s) * 2 + (s[strlen(s) - 1] == 'L') - 1]++;\n    }\n  }\n  int ans = 0;\n  for (int i = 0; i < 9; i++)\n    if (a[i] < b[i]) ans += b[i] - a[i];\n  printf(\"%d\\n\", ans);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long mod7 = 1000000007, mod = 1000000000;\ndouble Pi = acos(-1);\nconst double long rad = Pi / 180.0;\nint main() {\n  int t;\n  cin >> t;\n  map<string, int> m1, m2;\n  int Fans = 0;\n  string s;\n  for (int i = (0); i < (t); i++) {\n    cin >> s;\n    m1[s]++;\n  }\n  for (int i = (0); i < (t); i++) {\n    cin >> s;\n    m2[s]++;\n  }\n  for (map<string, int>::iterator it = m1.begin(); it != m1.end(); it++) {\n    int k = m2[it->first] - (it->second);\n    if (k < 0) {\n      Fans -= k;\n    }\n  }\n  cout << Fans;\n}\n"
        },
        {
            "language": 3,
            "solution": "\n\ndef main():\n    amount = input()\n    amount = int(amount)\n    base = []\n    for i in range(amount):\n        base.append(input())\n\n    expected = []\n    for i in range(amount):\n        expected.append(input())\n\n    transform = []\n    for e in expected:\n        if e not in base:\n            transform.append(e)\n        else:\n            base.remove(e)\n\n    result = len(transform)\n    print(result)\n    return len(transform)\n\n\nif __name__ == '__main__':\n    main()\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\nimport java.math.*;\nimport java.math.BigInteger;\n/**\n *\n * @author alanl\n */\npublic class Main{\n    static BufferedReader input = new BufferedReader(new InputStreamReader(System.in));\n    static StringTokenizer st;\n    static PrintWriter pr = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));\n    public static void main(String[] args) throws IOException {\n        int n = readInt();\n        Map<String, Integer>mp = new HashMap();\n        for(int i = 0; i<n; i++){\n            String a = readLine();\n            mp.put(a, mp.getOrDefault(a, 0)+1);\n        }\n        for(int i = 0; i<n; i++){\n            String a = readLine();\n            if(mp.containsKey(a) && mp.get(a)>0){\n                mp.put(a, mp.get(a)-1);\n            }\n        }\n        int ans = 0;\n        for(Map.Entry<String, Integer>e:mp.entrySet()){\n            ans+=e.getValue();\n        }\n        println(ans);\n    }\n    static String next () throws IOException {\n        while (st == null || !st.hasMoreTokens())\n                st = new StringTokenizer(input.readLine().trim());\n        return st.nextToken();\n    }\n    static long readLong () throws IOException {\n        return Long.parseLong(next());\n    }\n    static int readInt () throws IOException {\n        return Integer.parseInt(next());\n    }\n    static double readDouble () throws IOException {\n        return Double.parseDouble(next());\n    }\n    static char readChar () throws IOException {\n        return next().charAt(0);\n    }\n    static String readLine () throws IOException {\n        return input.readLine().trim();\n    }\n    static void print(Object b) {\n        System.out.print(b);\n    }\n    static void println(Object b) {\n        System.out.println(b);\n    }\n    static void println() {\n        System.out.println();\n    }\n}\n"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input(''))\nl1 =[]\nll1 =[]\nl2 =[]\nll2 =[]\nl3 =[]\nll3 =[]\nl4 =[]\nll4 =[]\nfor i in range(n):\n    s = raw_input('')\n    if (len(s) == 1):\n        l1.append(s)\n    elif (len(s)==2):\n        l2.append(s)\n    elif (len(s)==3):\n        l3.append(s)\n    elif (len(s) == 4):\n        l4.append(s)\nfor i in range(n):\n    s = raw_input('')\n    if (len(s) == 1):\n        ll1.append(s)\n    elif (len(s)==2):\n        ll2.append(s)\n    elif (len(s)==3):\n        ll3.append(s)\n    elif (len(s) == 4):\n        ll4.append(s)\nL1 = len(l1)\nL2 = len(l2)\nL3 = len(l3)\nL4 = len(l4)\nLL1=L1\nLL2=L2\nLL3=L3\nLL4=L4\nans = 0\nf = 0\nfor i in range(L1):\n    for j in range(LL1):\n        if (l1[i] ==ll1[j]):\n            ans += 1\n            i+=1\n            ll1.remove(ll1[j])\n            LL1 = len(ll1)\n            break\nf += L1-ans\nans = 0\nfor i in range(L2):\n    for j in range(LL2):\n        if (l2[i] == ll2[j]):\n            ans += 1\n            ll2.remove(ll2[j])\n            LL2 = len(ll2)\n            break\nf += L2-ans\nans = 0\nfor i in range(L3):\n    for j in range(LL3):\n        if (l3[i] ==ll3[j]):\n            ans += 1\n            ll3.remove(ll3[j])\n            LL3 = len(ll3)\n            break\nf += L3-ans\nans = 0\nfor i in range(L4):\n    for j in range(LL4):\n        if (l4[i] ==ll4[j]):\n            ans += 1\n            ll4.remove(ll4[j])\n            LL4 = len(ll4)\n            break\nf += L4-ans\nans = 0\nprint f"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  int n;\n  cin >> n;\n  unordered_map<string, long long> key;\n  for (long long i = 0; i < n; i++) {\n    string x;\n    cin >> x;\n    key[x]++;\n  }\n  int ct = 0;\n  for (int i = 0; i < n; i++) {\n    string x;\n    cin >> x;\n    if (key[x])\n      key[x]--;\n    else\n      ct++;\n  }\n  cout << ct << \"\\n\";\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Random;\nimport java.util.StringTokenizer;\n\n\npublic class Main {\n\n\tstatic boolean visited[] ; \n\tstatic boolean ends[] ;\n\tstatic long mod = 1000000007 ;\n\tstatic int lens[] ; \n\tstatic int seeds[] ; \n\tstatic char a[] ;\n\tstatic double total ; \n\tpublic static ArrayList adj[] ; \n\tpublic static long x,y ;\n\tpublic static ArrayList<Long> xx ;\t\n\tpublic static double dp[][][] ;\n\tpublic static void main(String[] args) throws IOException, InterruptedException {\n\t\tScanner sc =  new Scanner(System.in) ;\n\n\n\t\tint n=sc.nextInt() ; \n\t\tint m1=0 ; int s1=0 ;int  l1=0 ;int  m2=0; int s2=0 ;int l2 =0 ;\n\t\tint xl1 =0 ; int xxl1 =0 ; int xxxl1=0 ; \n\t\tint xl2 = 0 ; int xxl2=0 ; int xxxl2=0;\n\n\t\tint xs1 =0 ; int xxs1 =0 ; int xxxs1=0 ; \n\t\tint xs2 = 0 ; int xxs2=0 ; int xxxs2=0;\n\n\t\tString arr1[]= new String[n] ;\n\t\tString arr2[] = new String[n];\n\n\t\tfor (int i = 0; i < n; i++)\n\t\t{\n\t\t\tarr1[i]=sc.next() ;\n\t\t\tString x = arr1[i]; \n\t\t\tif(x.equals(\"M\")) m1 ++ ;\n\t\t\telse if(x.equals(\"S\")) s1 ++ ; \n\t\t\telse if(x.equals(\"L\")) l1 ++ ;\n\t\t\telse if(x.equals(\"XL\")) xl1++ ; \n\t\t\telse if(x.equals(\"XXL\")) xxl1 ++ ; \n\t\t\telse if(x.equals(\"XXXL\")) xxxl1 ++ ;\n\t\t\telse if(x.equals(\"XS\")) xs1++ ; \n\t\t\telse if(x.equals(\"XXS\")) xxs1 ++ ; \n\t\t\telse if(x.equals(\"XXXS\")) xxxs1 ++ ;\n\t\t}\n\t\tfor (int i = 0; i < n; i++)\n\t\t{\n\t\t\tarr2[i]=sc.next() ;\n\t\t\tString x = arr2[i]; \n\t\t\tif(x.equals(\"M\")) m2++ ;\n\t\t\telse if(x.equals(\"S\")) s2 ++ ; \n\t\t\telse if(x.equals(\"L\")) l2 ++ ;\n\t\t\telse if(x.equals(\"XL\")) xl2++ ; \n\t\t\telse if(x.equals(\"XXL\")) xxl2 ++ ; \n\t\t\telse if(x.equals(\"XXXL\")) xxxl2 ++ ;\n\t\t\telse if(x.equals(\"XS\")) xs2++ ; \n\t\t\telse if(x.equals(\"XXS\")) xxs2 ++ ; \n\t\t\telse if(x.equals(\"XXXS\")) xxxs2 ++ ;\n\t\t}\n\n\t\tint m =Math.max(m1, m2) - Math.min(m1, m2);\n\n\t\tint s =Math.max(s1, s2)- Math.min(s1,s2) ;\n\t\tint l =Math.max(l1, l2)-Math.min(l1, l2);\n\n\n\t\tint ans = l+s+m ; \n\t\tans/=2 ; \n\n\n\t\tint xl = Math.max(xl1 , xl2) - Math.min(xl1, xl2) ; \n\t\tint xs = Math.max(xs1,  xs2) - Math.min(xs2,xs1) ;\n\n\t\tint xxl = Math.max(xxl1 , xxl2) - Math.min(xxl1, xxl2) ; \n\t\tint xxs = Math.max(xxs1,  xxs2) - Math.min(xxs2,xxs1) ;\n\n\t\tint xxxl = Math.max(xxxl1 , xxxl2) - Math.min(xxxl1, xxxl2) ; \n\t\tint xxxs = Math.max(xxxs1,  xxxs2) - Math.min(xxxs2,xxxs1) ;\n\n\t\tans += ((xl+xs)/2) ; \n\t\tans += ((xxl+xxs)/2) ; \n\t\tans += ((xxxl+xxxs)/2) ; \n\n\t\tSystem.out.println(ans);\n\n\n\n\n\n\n\n\t}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\tpublic static void dfss(int root , int len)\n\t{\n\t\tvisited[root]=true ; \n\t\tif(ends[root] && root!=0) lens[root] = len ; \n\n\t\tfor (int i = 0; i < adj[root].size(); i++)\n\t\t{\n\t\t\tint c= (int) adj[root].get(i) ; \n\t\t\tif(visited[c]==false)\n\t\t\t\tdfss(c, len+1);\n\t\t}\n\t}\n\n\tpublic static void pr(int root ,  int seed){\n\t\tvisited[root] = true ;\n\t\tint dv = adj[root].size()-1 ; \n\t\tif(root==0) dv++ ;\n\n\t\tfor (int i = 0; i < adj[root].size(); i++)\n\t\t{\n\t\t\tint c = (int)adj[root].get(i) ; \n\t\t\tseeds[c]=dv*seed ;\n\t\t}\n\n\t\tfor (int i = 0; i < adj[root].size() ; i++)\n\t\t{\n\t\t\tint c = (int)adj[root].get(i) ; \n\t\t\tif(visited[c]==false)\n\t\t\t\tpr(c , seeds[c]);\n\n\t\t}\n\n\t}\n\n\n\n\tstatic class Scanner {\n\t\tStringTokenizer st;\n\t\tBufferedReader br;\n\n\t\tpublic Scanner(InputStream s) {\n\t\t\tbr = new BufferedReader(new InputStreamReader(s));\n\t\t}\n\n\t\tpublic String next() throws IOException {\n\t\t\twhile (st == null || !st.hasMoreTokens())\n\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tpublic int nextInt() throws IOException {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tpublic long nextLong() throws IOException {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tpublic String nextLine() throws IOException {\n\t\t\treturn br.readLine();\n\t\t}\n\n\t\tpublic double nextDouble() throws IOException {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tpublic boolean ready() throws IOException {\n\t\t\treturn br.ready();\n\t\t}\n\t}\n\n\n\tpublic static long getGCD(long n1, long n2) {\n\t\tif (n2 == 0) {\n\t\t\treturn n1;\n\t\t}\n\t\treturn getGCD(n2, n1 % n2);\n\t}\n\n\n\tpublic static void shuffle(pair[] ss){\n\t\tif(ss.length==1)\n\t\t\treturn ; \n\t\tfor (int i = 0; i < ss.length; i++)\n\t\t{\n\t\t\tRandom rand = new Random();\n\n\t\t\tint  n = rand.nextInt(ss.length-1) + 0;\n\n\t\t\tpair temp = ss[i] ; \n\t\t\tss[i] = ss[n] ; \n\t\t\tss[n] = temp ;\n\t\t}\n\t}\n\t//\tpublic static int binary(ArrayList<pair> arr, int l, int r, long x)   /// begin by 0 and n-1\n\t//\t{\n\t//\t\tif (r>=l)\n\t//\t\t{\n\t//\t\t\tint mid = l + (r - l)/2;\n\t//\t\t\tif (arr.get(mid).x== x)\n\t//\t\t\t\treturn mid;\n\t//\t\t\tif (arr.get(mid).x> x)\n\t//\t\t\t\treturn binary(arr, l, mid-1, x);\n\t//\t\t\treturn binary(arr, mid+1, r, x);\n\t//\t\t}\n\t//\t\treturn -1;\n\t//\t}\n\n\t/// searching for the index of first elment greater than x\n\tpublic static int binary1(int[]arr , int x) {\n\t\tint low = 0, high = arr.length; // numElems is the size of the array i.e arr.size() \n\t\twhile (low != high) {\n\t\t\tint mid = (low + high) / 2; // Or a fancy way to avoid int overflow\n\t\t\tif (arr[mid] <= x) {\n\t\t\t\t/* This index, and everything below it, must not be the first element\n\t\t\t\t * greater than what we're looking for because this element is no greater\n\t\t\t\t * than the element.\n\t\t\t\t */\n\t\t\t\tlow = mid + 1;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t/* This element is at least as large as the element, so anything after it can't\n\t\t\t\t * be the first element that's at least as large.\n\t\t\t\t */\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t}\n\t\treturn low ; // return high ; \n\t}\n\n\n\t////// searching for last element less than X \n\t//\tpublic static int binary2(pair[]arr , int x) {\n\t//\t\tint low = 0, high = arr.length; // numElems is the size of the array i.e arr.size() \n\t//\t\twhile (low != high) {\n\t//\t\t\tint mid = (low + high) / 2; // Or a fancy way to avoid int overflow\n\t//\t\t\tif (arr[mid].x >= x) {\n\t//\t\t\t\t/* This index, and everything below it, must not be the first element\n\t//\t\t\t\t * greater than what we're looking for because this element is no greater\n\t//\t\t\t\t * than the element.\n\t//\t\t\t\t */\n\t//\t\t\t\thigh=mid;\n\t//\t\t\t}\n\t//\t\t\telse {\n\t//\t\t\t\t/* This element is at least as large as the element, so anything after it can't\n\t//\t\t\t\t * be the first element that's at least as large.\n\t//\t\t\t\t */\n\t//\t\t\t\tlow = mid+1 ; \n\t//\t\t\t}\n\t//\t\t}\n\t//\t\treturn low ; // return high ; \n\t//\t}\n\n\n\n\n\n\n\n\tpublic static int binary(long []arr , long target , int low , long shift) {\n\t\tint high = arr.length; \n\t\twhile (low != high) {\n\t\t\tint mid = (low + high) / 2; \n\t\t\tif (arr[mid]-shift <= target) {\n\t\t\t\tlow = mid + 1;\n\t\t\t}\n\t\t\telse {\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t}\n\t\treturn low ; // return high ; \n\t}\n\tpublic static boolean isLetter(char x){\n\t\tif(x+0 <=122 && x+0 >=97 )\n\t\t\treturn true ;\n\t\telse if (x+0 <=90 && x+0 >=65 )\n\t\t\treturn true ; \n\t\telse return false; \n\t}\n\tpublic static long getPrimes(long x ){\n\t\tif(x==2 || x==3 || x==1)\n\t\t\treturn 2 ;\n\t\tif(isPrime(x))\n\t\t\treturn 5 ;\n\t\tfor (int i = 2; i*i<=x; i++)\n\t\t{\n\t\t\tif(x%i==0 && isPrime(i))\n\t\t\t\treturn getPrimes(x/i) ;\n\t\t}\n\t\treturn -1;\n\t}\n\n\n\n\n\n\n\n\tpublic static int lis( int[]a , int n){\n\t\tint lis[] = new int[n] ; \n\t\tArrays.fill(lis,1) ; \n\n\t\tfor(int i=1;i<n;i++)\n\t\t\tfor(int j=0 ; j<i; j++)\n\t\t\t\tif (a[i]>a[j] &&  lis[i] < lis[j]+1)   \n\t\t\t\t\tlis[i] = lis[j] + 1;           \n\n\t\tint max = lis[0];\n\n\t\tfor(int i=1; i<n ; i++)\n\t\t\tif (max < lis[i])\n\t\t\t\tmax = lis[i] ;\n\t\treturn (max);\n\n\t\t//\t\t\tArrayList<Integer> s = new ArrayList<Integer>() ;\n\t\t//\t\t\tfor (int i = n-1; i >=0; i--)\n\t\t//\t\t\t{\n\t\t//\t\t\t\tif(lis[i]==max)\n\t\t//\t\t\t\t{\n\t\t//\t\t\t\t\ts.add(a[i].z);\n\t\t//\t\t\t\t\tmax --; \n\t\t//\t\t\t\t}\n\t\t//\t\t\t}\n\t\t//\n\t\t//\t\t\tfor (int i = s.size()-1 ; i>=0 ;  i--)\n\t\t//\t\t\t{\n\t\t//\t\t\t\tSystem.out.print(s.get(i)+\" \");\n\t\t//\t\t\t}\n\t\t//\n\t}\n\tpublic static int calcDepth(Vertix node){\n\t\tif(node.depth>0) return node.depth; \n\t\t// meaning it has been updated before;\n\t\tif(node.parent != null)\n\t\t\treturn 1+ calcDepth(node.parent);\n\t\telse\n\t\t\treturn -1;\n\t}\n\n\tpublic static boolean isPrime (long num){\n\t\tif (num < 2) return false;\n\t\tif (num == 2) return true;\n\t\tif (num % 2 == 0) return false;\n\t\tfor (int i = 3; i * i <= num; i += 2)\n\t\t\tif (num % i == 0) return false;\n\t\treturn true;\n\t}\n\n\n\tpublic static ArrayList<Long> getDiv(Long n)\n\t{\n\t\tArrayList<Long>  f = new ArrayList<Long>() ; \n\n\t\twhile (n%2==0)\n\t\t{\n\t\t\tif(!f.contains(2))f.add((long) 2) ;\n\t\t\tn /= 2;\n\t\t}\n\n\t\t// n must be odd at this point.  So we can\n\t\t// skip one element (Note i = i +2)\n\t\tfor (long i = 3; i <= Math.sqrt(n); i+= 2)\n\t\t{\n\t\t\t// While i divides n, print i and divide n\n\t\t\twhile (n%i == 0)\n\t\t\t{\n\t\t\t\tif(!f.contains(i))f.add(i);\n\t\t\t\tn /= i;\n\t\t\t}\n\t\t}\n\n\t\t// This condition is to handle the case whien\n\t\t// n is a prime number greater than 2\n\t\tif (n > 2)\n\t\t\tif(!f.contains(n))f.add(n);\n\n\n\t\treturn f ;\n\n\n\n\t}\n\n\t//\t\tpublic static boolean dfs(Vertix v , int target){\n\t//\t\t\ttry{\n\t//\t\t\t\tvisited[v.i]= true ;\n\t//\t\t\t} catch (NullPointerException e)\n\t//\t\t\t{\n\t//\t\t\t\tSystem.out.println(v.i);\n\t//\t\t\t}\n\t//\t\t\tif(v.i == target)\n\t//\n\t//\t\t\t\treturn true ;\n\t//\t\t\tfor (int i =0 ; i< v.neighbours.size() ; i++)\n\t//\t\t\t{ \n\t//\n\t//\t\t\t\tVertix child = v.neighbours.get(i) ;\n\t//\t\t\t\tif(child.i == target){\n\t//\t\t\t\t\tfound = true  ; \n\t//\t\t\t\t}\n\t//\t\t\t\tif(visited[child.i]==false){\n\t//\t\t\t\t\tfound |= dfs(child, target) ;\n\t//\t\t\t\t}\n\t//\t\t\t}\n\t//\t\t\treturn found; \n\t//\t\t}\n\n\n\n\n\n\n\n\n\n\tpublic static class Vertix{\n\t\tlong i ; \n\t\tint depth ;\n\t\tArrayList<Vertix> neighbours ; \n\t\tVertix parent ; \n\t\tVertix child ; \n\n\n\t\tpublic Vertix(long i){\n\t\t\tthis.i = i ;\n\t\t\tthis.neighbours = new ArrayList<Vertix> () ;\n\t\t\tthis.parent = null ;\n\t\t\tdepth =-1;\n\t\t\tthis.child = null ;\n\t\t}\n\t}\n\n\tpublic static class pair implements Comparable<pair> {\n\t\tint value ; \n\t\tint i ; \n\n\n\n\n\t\tpublic pair(int x, int y ){\n\n\t\t\tthis.value=x ; \n\t\t\tthis.i =y ;\n\n\n\t\t}\n\n\n\t\t@Override\n\t\tpublic int compareTo(pair p) {\n\t\t\tif(this.value > p.value)\n\t\t\t\treturn 1 ; \n\t\t\telse if (this.value == p.value) \n\t\t\t\treturn 0 ; \n\t\t\telse \n\t\t\t\treturn -1 ;\n\t\t}\n\n\n\n\n\t}\n\n\tpublic static class pair2 implements Comparable<pair2>{\n\t\tint i ; \n\t\tint j ;\n\t\tint plus ;\n\n\t\tpublic pair2(int i , int j , int plus){\n\t\t\tthis.i =i ;\n\t\t\tthis.j = j ; \n\t\t\tthis.plus = plus ;\n\t\t}\n\n\t\t@Override\n\t\tpublic int compareTo(pair2 p) {\n\t\t\tif(this.j > p.j)\n\t\t\t\treturn 1 ; \n\t\t\telse if (this.j == p.j) return 0 ;\n\t\t\telse \n\t\t\t\treturn -1 ;\n\t\t}\n\n\n\t}\n\tpublic static class point implements  Comparable<point>\n\t{\n\t\tint x, y ; \n\t\tpublic point(int x,int y){\n\t\t\tthis.x=x ; this.y=y;\n\t\t}\n\t\t@Override\n\t\tpublic boolean equals(Object o) {\n\n\t\t\t// If the object is compared with itself then return true  \n\t\t\tif (o == this) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t/* Check if o is an instance of Complex or not\n\t          \"null instanceof [type]\" also returns false */\n\t\t\tif (!(o instanceof point)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// typecast o to Complex so that we can compare data members \n\t\t\tpoint c = (point) o;\n\n\t\t\t// Compare the data members and return accordingly \n\t\t\treturn Integer.compare(x, c.x) == 0\n\t\t\t\t\t&& Integer.compare(y, c.y) == 0;\n\t\t}\n\t\t@Override\n\t\tpublic int compareTo(point p) {\n\t\t\tif(this.x == p.x && this.y ==p.y)\n\t\t\t\treturn 0 ; \n\t\t\telse\n\t\t\t\treturn -1 ; \n\t\t}\n\n\t\t@Override\n\t\tpublic int hashCode()\n\t\t{\n\t\t\treturn 15+x+(y%2) ;\n\t\t}\n\n\n\n\t}\n\n\n}"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class A1000 {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        String[] s1 = new String[n];\n        String[] s2 = new String[n];\n        for (int i = 0; i < n; i++) {\n            s1[i] = sc.next();\n        }\n        String s;\n        Boolean b;\n        int x = 0;\n        for (int i = 0; i < n; i++) {\n            s = sc.next();\n            b = true;\n            for (int j = 0; j < n; j++) {\n                if(s.equals(s1[j])){\n                    b = false;\n                    s1[j] = \"ZZZZZ\";\n                    x++;\n                    s2[i] = \"ZZZZZ\";\n                    break;\n                }\n            }\n            if(b){\n                s2[i] = s;\n            }\n        }\n        Arrays.sort(s1);\n        Arrays.sort(s2);\n        int ans = 0;\n\n        for (int i = 0; i < n - x; i++) {\n            if(s1[i].charAt(s1[i].length() - 1) != s2[i].charAt(s2[i].length() - 1)){\n                ans++;\n            }\n        }\n        System.out.println(ans);\n    }\n    \n}"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.*;\n\npublic class Test {\n\n    public static void main(String[] args) {\nScanner in =new Scanner(System .in);\nint n=in.nextInt();\nString old[]=new String[n];\nString New []=new String[n];\n        for (int i = 0; i < n; i++) {\n            old[i]=in.next();\n        }\n    int c=0;  \nfor (int i = 0; i < n; i++) {\n            New [i]=in.next();\n    for (int j = 0; j < n; j++) {\n        if(old[j].equalsIgnoreCase(New[i])){\n          c++;\n            old[j]=New[i]=\"#\";\n            break;\n            \n        }\n    }\n        \n}\n        System.out.println(n-c);\n\n    }\n    \n}"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\nimport java.lang.*;\n\npublic class tshirt{\n\t\n\tpublic static void main(String[] args)\n\t{\n\t\tFastReader fr = new FastReader();\n\t\tPrintWriter wr = new PrintWriter(System.out);\n\t\tint n;\n\t\tn = fr.nextInt();\n\t\tArrayList<String> tshirtsprevious = new ArrayList<String>();\n\t\tArrayList<String> tshirtspresent = new ArrayList<String>();\n\t\tList<Integer> used = new ArrayList<Integer>();\n\t\tint i,j;\n\t\tint ans=n;\n\t\tfor(i=0;i<2*n;i++)\n\t\t{\t\n\t\t\tif(i>=n)\n\t\t\t\ttshirtspresent.add(fr.next());\n\t\t\telse\n\t\t\t\ttshirtsprevious.add(fr.next());\n\t\t}\n\t\tint flag=0;\n\t\tfor(i=0;i<n;i++){\n\t\t\tfor(j=0;j<n;j++){\n\t\t\t\tflag =0;\n\t\t\t\tif(tshirtsprevious.get(i).length() == tshirtspresent.get(j).length())\n\t\t\t\t{\n\t\t\t\t\t\n\t\t\t\t\tif(tshirtsprevious.get(i).equals(tshirtspresent.get(j)))\n\t\t\t\t\t{\n\t\t\t\t\t\tfor(int k=0;k<used.size();k++){\n\t\t\t\t\t\t\tif(j==used.get(k)){\n\t\t\t\t\t\t\t\tflag = 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(flag == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tused.add(j);\t\n\t\t\t\t\t\t\tans--;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\twr.println(ans);\n\t\twr.close();\n\t}\n\n\tstatic class FastReader\n    {\n        BufferedReader br;\n        StringTokenizer st;\n \n        public FastReader()\n        {\n            br = new BufferedReader(new\n                     InputStreamReader(System.in));\n        }\n \n        String next()\n        {\n            while (st == null || !st.hasMoreElements())\n            {\n                try\n                {\n                    st = new StringTokenizer(br.readLine());\n                }\n                catch (IOException  e)\n                {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n \n        int nextInt()\n        {\n            return Integer.parseInt(next());\n        }\n \n        long nextLong()\n        {\n            return Long.parseLong(next());\n        }\n \n        double nextDouble()\n        {\n            return Double.parseDouble(next());\n        }\n \n        String nextLine()\n        {\n            String str = \"\";\n            try\n            {\n                str = br.readLine();\n            }\n            catch (IOException e)\n            {\n                e.printStackTrace();\n            }\n            return str;\n        }\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAX = 1e5 + 1, INF = 1e9;\nint n, a[MAX], ans = 0;\nstring s[MAX], t[MAX];\nmap<string, int> mapas, mapat;\nint main() {\n  cin >> n;\n  for (int i = 1; i <= n; i++) cin >> s[i];\n  for (int i = 1; i <= n; i++) cin >> t[i];\n  for (int i = 1; i <= n; i++) mapas[s[i]]++;\n  for (int i = 1; i <= n; i++)\n    if (mapas[t[i]]) {\n      mapas[t[i]]--;\n    } else\n      ans++;\n  cout << ans;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nls1 = list()\nls2 = list()\n\nfor i in range(n):ls1.append(input())\nfor i in range(n):ls2.append(input())\n\nif(ls1==ls2):print(0)\nelse:\n    c=0\n    for i in range(n):\n        if(ls2[i] not in ls1):c+=1\n        else: del ls1[ls1.index(ls2[i])]\n    print(c)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nmap<string, int> cnt;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  ;\n  int n;\n  cin >> n;\n  string a[1001];\n  string b[1001];\n  for (int i = 0; i < (int)(n); i++) cin >> a[i];\n  for (int i = 0; i < (int)(n); i++) cin >> b[i];\n  int ans = 0;\n  for (int i = 0; i < (int)(n); i++) {\n    cnt[a[i]]++;\n  }\n  for (int i = 0; i < (int)(n); i++) {\n    if (cnt[b[i]] == 0)\n      ans++;\n    else\n      cnt[b[i]]--;\n  }\n  cout << ans << endl;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstruct poo {\n  int i, j, ct;\n};\nbool cmp(poo x, poo y) { return x.ct < y.ct; }\nint main() {\n  int n;\n  cin >> n;\n  string last[n];\n  for (int i = 0; i < n; i++) {\n    cin >> last[i];\n  }\n  string curr[n];\n  for (int i = 0; i < n; i++) {\n    cin >> curr[i];\n  }\n  int c = 0;\n  map<int, int> go, done;\n  vector<poo> ans;\n  for (int i = 0; i < n; i++) {\n    bool flag = false;\n    int k = INT_MAX, x = -1;\n    for (int j = 0; j < n; j++) {\n      if (go[j] == 1)\n        continue;\n      else if (curr[i] == last[j]) {\n        flag = true;\n        done[i] = 1;\n        go[j] = 1;\n        break;\n      } else if (curr[i].size() == last[j].size()) {\n        int g = 0;\n        for (int z = 0; z < curr[i].size(); z++) {\n          if (curr[i][z] != last[j][z]) {\n            g++;\n          }\n        }\n        if (g < k) {\n          k = g;\n          x = j;\n        }\n      }\n    }\n    if (!flag) {\n      poo h;\n      h.i = i;\n      h.j = x;\n      h.ct = k;\n      ans.push_back(h);\n    }\n  }\n  sort(ans.begin(), ans.end(), cmp);\n  for (int i = 0; i < ans.size(); i++) {\n    if (go[ans[i].j] == 0) {\n      done[ans[i].i] = 1;\n      go[ans[i].j] = 1;\n      c += ans[i].ct;\n    }\n  }\n  for (int i = 0; i < n; i++) {\n    if (done[i] == 0) {\n      for (int j = 0; j < n; j++) {\n        if (go[j] == 0 and curr[i].size() == last[j].size()) {\n          int g = 0;\n          for (int z = 0; z < curr[i].size(); z++) {\n            if (curr[i][z] != last[j][z]) {\n              g++;\n            }\n          }\n          c += g;\n          go[j] = 1;\n        }\n      }\n    }\n  }\n  cout << c << endl;\n}\n"
        },
        {
            "language": 3,
            "solution": "x = int(input())\nlist1 = []\nfor i in range(x):\n    value = input()\n    list1.append(value)\n\nfor i in range(x):\n    value = input()\n    if value in list1:\n        list1.remove(value)\n\nprint(len(list1))\n\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nlast = []\nthis = []\nfor z in range(n):\n    t = str(input())\n    last.append(t)\nfor y in range(n):\n    u = str(input())\n    this.append(u)\nxxxs = min(last.count(\"XXXS\"), this.count(\"XXXS\"))\nxxs = min(last.count(\"XXS\"), this.count(\"XXS\"))\nxs = min(last.count(\"XS\"), this.count(\"XS\"))\ns = min(last.count(\"S\"), this.count(\"S\"))\nm = min(last.count(\"M\"), this.count(\"M\"))\nl = min(last.count(\"L\"), this.count(\"L\"))\nxl = min(last.count(\"XL\"), this.count(\"XL\"))\nxxl = min(last.count(\"XXL\"), this.count(\"XXL\"))\nxxxl = min(last.count(\"XXXL\"), this.count(\"XXXL\"))\n\"\"\"for a in range(xxxs):\n    last.remove(\"XXXS\")\n    this.remove(\"XXXS\")\nfor b in range(xxs):\n    last.remove(\"XXS\")\n    this.remove(\"XXS\")\nfor c in range(xs):\n    last.remove(\"XS\")\n    this.remove(\"XS\")\nfor d in range(s):\n    last.remove(\"S\")\n    this.remove(\"S\")\nfor e in range(m):\n    last.remove(\"M\")\n    this.remove(\"M\")\nfor f in range(l):\n    last.remove(\"L\")\n    this.remove(\"L\")\nfor g in range(xl):\n    last.remove(\"XL\")\n    this.remove(\"XL\")\nfor h in range(xxl):\n    last.remove(\"XXL\")\n    this.remove(\"XXL\")\nfor j in range(xxxl):\n    last.remove(\"XXXL\")\n    this.remove(\"XXXL\")\"\"\"\nprint(n - (xxxs + xxs + xs + s + m + l + xl + xxl + xxxl))\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = [input() for _ in range(n)]\nfor _ in range(n):\n    x = input()\n    if x in a:\n        a.remove(x)\n        n-=1\nprint(n)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint ans;\nmap<string, int> mp;\nint main() {\n  int n;\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    string str;\n    cin >> str;\n    mp[str]++;\n  }\n  for (int i = 0; i < n; i++) {\n    string str;\n    cin >> str;\n    if (mp[str] <= 0) ans++;\n    mp[str]--;\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long int n;\n  cin >> n;\n  vector<string> a(n);\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n  }\n  int ans = 0;\n  for (int i = 0; i < n; i++) {\n    string p;\n    int fl = 0;\n    cin >> p;\n    for (int j = 0; j < n; j++) {\n      int b = 0;\n      for (int m = 0; m < min(a[j].length(), p.length()); m++) {\n        if (a[j][m] != p[m]) {\n          b = 1;\n          break;\n        }\n      }\n      if (b == 0) {\n        a[j][0] = 'Q';\n        fl = 1;\n        break;\n      }\n      if (fl == 1) break;\n    }\n    if (fl == 1)\n      continue;\n    else\n      ans++;\n  }\n  cout << ans << '\\n';\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\ninn=[]\nwin=[]\nt=n\nfor i in range(n):\n    inn.append(input())\nfor i in range(n):\n    win.append(input())\n    if ((win[i] in inn)==True)and (win.count(win[i])<=(inn.count(win[i]))):\n        t=t-1\nprint(t)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nconst int INF = 0x3f3f3f3f;\nconst int mod = 1e9 + 7;\nconst int maxn = 1e5 + 10;\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  map<string, int> mp1, mp2;\n  map<string, int>::iterator it;\n  string str;\n  int num = 0;\n  for (int i = 1; i <= n; i++) {\n    cin >> str;\n    mp1[str]++;\n  }\n  for (int i = 1; i <= n; i++) {\n    cin >> str;\n    mp2[str]++;\n  }\n  for (it = mp2.begin(); it != mp2.end(); it++) {\n    if (it->second > mp1[it->first]) num += it->second - mp1[it->first];\n  }\n  printf(\"%d\\n\", num);\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "def e461():\n\tc = int(raw_input())\n\t\n\ta = {}\n\tfor i in range(0,c):\n\t\ttmp = raw_input()\n\t\tif tmp not in a:\n\t\t\ta[tmp] = 1\n\t\telse:\n\t\t\ta[tmp] += 1\n\n\t\t\n\tfor i in range(0,c):\n\t\ttmp = raw_input()\n\t\tif tmp in a: a[tmp] -= 1\n\n\tsol = 0\n\tfor i in a:\n\t\tif a[i]>0 : sol += a[i]\n\t\n\tprint sol\n\n\ne461()\n\n\n\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.io.BufferedWriter;\nimport java.util.HashMap;\nimport java.util.InputMismatchException;\nimport java.io.IOException;\nimport java.io.Writer;\nimport java.io.OutputStreamWriter;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n *\n * @author insert_cool_name\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        OutputWriter out = new OutputWriter(outputStream);\n        TaskA solver = new TaskA();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class TaskA {\n        int get(HashMap<Character, Integer> hm, char x) {\n            if (!hm.containsKey(x)) return 0;\n            return hm.get(x);\n        }\n\n        public void solve(int testNumber, InputReader in, OutputWriter out) {\n            int n = in.nextInt();\n            String[] a = new String[n];\n            String[] b = new String[n];\n            for (int i = 0; i < n; i++) a[i] = in.next();\n            for (int i = 0; i < n; i++) b[i] = in.next();\n            int[] xa = new int[n];\n            int[] xb = new int[n];\n\n            for (int i = 0; i < n; i++) {\n                xa[i] = 0;\n                xb[i] = 0;\n                for (int j = 0; j < a[i].length(); j++) {\n                    if (a[i].charAt(j) == 'X') xa[i]++;\n                    else break;\n                }\n                for (int j = 0; j < b[i].length(); j++) {\n                    if (b[i].charAt(j) == 'X') xb[i]++;\n                    else break;\n                }\n            }\n            int ans = 0;\n            for (int x = 0; x <= 3; x++) {\n                HashMap<Character, Integer> freq1 = new HashMap<>();\n                HashMap<Character, Integer> freq2 = new HashMap<>();\n\n                for (int j = 0; j < n; j++) if (xa[j] == x) freq1.put(a[j].charAt(x), get(freq1, a[j].charAt(x)) + 1);\n                for (int j = 0; j < n; j++) if (xb[j] == x) freq2.put(b[j].charAt(x), get(freq2, b[j].charAt(x)) + 1);\n                char[] arr = {'S', 'M', 'L'};\n                int add = 0;\n                for (Object ob : arr) {\n                    add = Math.max(add, Math.abs(get(freq1, (Character) ob) - get(freq2, (Character) ob)));\n                }\n                ans += add;\n            }\n            out.println(ans);\n        }\n\n    }\n\n    static class InputReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private InputReader.SpaceCharFilter filter;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int read() {\n            if (numChars == -1) throw new InputMismatchException();\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (numChars <= 0) return -1;\n            }\n            return buf[curChar++];\n        }\n\n        public int nextInt() {\n            int c = read();\n            while (isSpaceChar(c)) c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do {\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public String next() {\n            int c;\n            while (isSpaceChar(c = this.read())) {\n                ;\n            }\n\n            StringBuilder result = new StringBuilder();\n            result.appendCodePoint(c);\n\n            while (!isSpaceChar(c = this.read())) {\n                result.appendCodePoint(c);\n            }\n\n            return result.toString();\n        }\n\n        public boolean isSpaceChar(int c) {\n            if (filter != null)\n                return filter.isSpaceChar(c);\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        public interface SpaceCharFilter {\n            boolean isSpaceChar(int ch);\n\n        }\n\n    }\n\n    static class OutputWriter {\n        private final PrintWriter writer;\n\n        public OutputWriter(OutputStream outputStream) {\n            writer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));\n        }\n\n        public OutputWriter(Writer writer) {\n            this.writer = new PrintWriter(writer);\n        }\n\n        public void println(Object... objects) {\n            for (int i = 0; i < objects.length; i++) {\n                if (i != 0) {\n                    writer.print(' ');\n                }\n                writer.print(objects[i]);\n            }\n            writer.print('\\n');\n        }\n\n        public void close() {\n            writer.close();\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class codechef\n{\n\tpublic static void main(String[] args) throws IOException\n\t{\n\t\tFastReader in=new FastReader();\n\t\tint n=in.nextInt();\n\t\tString[] s1=new String[n];\n\t\tString[] s2=new String[n];\n\t\tfor(int i=0;i<n;i++)\n\t\t\ts1[i]=in.next();\n\t\tfor(int i=0;i<n;i++)\n\t\t\ts2[i]=in.next();\n\t\tint ans=0;\n\t\tSet<Integer> set=new HashSet<>();\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t\tint s=set.size();\n\t\t\tfor(int j=0;j<n;j++)\n\t\t\t{\n\t\t\t\tif(s1[i].compareTo(s2[j])==0 && !set.contains(j))\n\t\t\t\t{\n\t\t\t\t\tset.add(j);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(s==set.size())\n\t\t\t\tans++;\n\t\t}\n\t\tSystem.out.print(ans);\n    }\n\n    public static int[][] permute(int[] arr)\n    {\n    \tint size=1;\n\t\tfor(int i=1;i<=arr.length;i++)\n\t\t    size*=i;\n\t\tint[][] ans=new int[size][arr.length];\n\t\tfor(int i=0;i<arr.length;i++)\n\t\t{\n\t\t\tans[0][i]=arr[i];\n\t\t}\n\t\tfor(int i=1;i<size;i++)\n\t\t{\n\t\t\tint j=arr.length-1;\n\t\t\twhile(j>0 && arr[j-1]>=arr[j])\n\t\t\t\tj--;\n\t\t\tif(j==0)\n\t\t\t{\n\t\t\t\tArrays.sort(arr);\n\t\t\t\tfor(int k=0;k<arr.length;k++)\n\t\t\t\t\tans[i][k]=arr[k];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tint k=j;\n\t\t\t\twhile(k<arr.length && arr[j-1]<arr[k])\n\t\t\t\t\tk++;\n\t\t\t\tint temp=arr[j-1];\n\t\t\t\tarr[j-1]=arr[k-1];\n\t\t\t\tarr[k-1]=temp;\n\t\t\t\tArrays.sort(arr,j,arr.length);\n\t\t\t\tfor(k=0;k<arr.length;k++)\n\t\t\t\t\tans[i][k]=arr[k];\n\t\t\t}\n\t\t}\n\t\treturn ans;\n    }\n}\n\nclass FastReader\n{\n\tBufferedReader br;\n\tStringTokenizer st;\n \n\tpublic FastReader()\n\t{\n\t\tbr=new BufferedReader(new InputStreamReader(System.in));\n\t}\n \n\tpublic String next() throws IOException\n\t{\n\t\tif(st==null || !st.hasMoreElements())\n\t\t{\n\t\t\tst=new StringTokenizer(br.readLine());\n\t\t}\n\t\treturn st.nextToken();\n\t}\n \n\tpublic int nextInt() throws IOException\n\t{\n\t\treturn Integer.parseInt(next());\n\t}\n \n\tpublic long nextLong() throws IOException\n\t{\n\t\treturn Long.parseLong(next());\n\t}\n}"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        int n;\n        Scanner sc = new Scanner(System.in);\n        n = sc.nextInt();\n        sc.nextLine();\n        Map<String,Integer> mp1 = new TreeMap<>((s1, s2) -> {\n            if (s1.length() > s2.length()) {\n                return -1;\n            } else if (s1.length() < s2.length()) {\n                return 1;\n            } else {\n                return s1.compareTo(s2);\n            }\n        });\n        Map<String,Integer> mp2 = new TreeMap<>((s1, s2) -> {\n            if (s1.length() > s2.length()) {\n                return -1;\n            } else if (s1.length() < s2.length()) {\n                return 1;\n            } else {\n                return s1.compareTo(s2);\n            }\n        });\n        for (int i = 0; i < n; i++) {\n            String tshirtSize = sc.nextLine();\n            if (mp1.containsKey(tshirtSize)) {\n                mp1.put(tshirtSize,mp1.get(tshirtSize)+1);\n            }\n            else {\n                mp1.put(tshirtSize,1);\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            String newTshirtSize = sc.nextLine();\n            if (mp1.containsKey(newTshirtSize) && mp1.get(newTshirtSize)>0) {\n                mp1.put(newTshirtSize,mp1.get(newTshirtSize)-1);\n                if (mp1.get(newTshirtSize)==0) {\n                    mp1.remove(newTshirtSize);\n                }\n            }\n            else {\n                if (mp2.containsKey(newTshirtSize)) {\n                    mp2.put(newTshirtSize,mp2.get(newTshirtSize)+1);\n                }\n                else {\n                    mp2.put(newTshirtSize,1);\n                }\n            }\n        }\n        int ans = 0;\n\n        for (Map.Entry<String,Integer> entry:mp2.entrySet()) {\n            String newts = entry.getKey();\n            int ts = entry.getValue();\n            while (ts>0) {\n                String oldts = ((TreeMap<String, Integer>) mp1).firstKey();\n                for (int i = 0; i < oldts.toCharArray().length; i++) {\n                    if (newts.charAt(i) != oldts.charAt(i)) {\n                        ans++;\n                    }\n                }\n                if (mp1.get(oldts) > 1) {\n                    mp1.put(oldts, mp1.get(oldts) - 1);\n                } else {\n                    mp1.remove(oldts);\n                }\n                ts--;\n            }\n        }\n        System.out.println(ans);\n        sc.close();\n    }\n}"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\n\nn = int(input())\na = Counter([input() for _ in range(n)])\nb = Counter([input() for _ in range(n)])\n\nfor key, value in a.items():\n\tif key in b:\n\t\tif value >= b[key]:\n\t\t\ta[key] = value - b[key]\n\t\t\tb[key] = 0\n\t\telse:\n\t\t\tb[key] = b[key] - value\n\t\t\ta[key] = 0\n\nav = a.values()\n\nif av:\n\tprint(sum(av))\nelse:\n\tprint(0)\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader; \nimport java.io.IOException; \nimport java.io.InputStreamReader; \nimport java.util.StringTokenizer; \nimport java.util.*;\n \npublic class Solution \n{ \n    \n    public static int gcd(int a,int b){\n        if(a==1 ||b==1)\n        return 1;\n        if(b==0)\n        return a;\n        return gcd(b, a%b);\n    }\n      public static ArrayList<Integer> primeFactors(int n) \n    { \n      ArrayList<Integer>  h=new  ArrayList<Integer>  ();\n        while (n%2==0) \n        { \n        // h.add(2);\n            n /= 2; \n        } \n  \n        // n must be odd at this point.  So we can \n        // skip one element (Note i = i +2) \n        for (int i = 3; i <= Math.sqrt(n); i+= 2) \n        { \n            // While i divides n, print i and divide n \n            while (n%i == 0) \n            { \n                   h.add(i);\n                n /= i; \n            } \n        } \n  \n        // This condition is to handle the case whien \n        // n is a prime number greater than 2 \n        if (n > 2) {\n               h.add(n);\n         \n        }\n        return h;\n    } \n   public  static boolean isPowerOfTwo (int x) \n    { \n      /* First x in the below expression is  \n        for the case when x is 0 */\n        return x!=0 && ((x&(x-1)) == 0); \n          \n    } \n    public static void main(String[] args) throws IOException \n    { \n  \n       BufferedReader br = new BufferedReader( \n                             new InputStreamReader(System.in));\n        StringBuilder out=new StringBuilder(); \n        int t=Integer.parseInt(br.readLine());\n        HashMap<String,Integer>h=new HashMap<>();\n      //  while(t-->0){\n        for(int i=0;i<t;i++)  { \n         String s=br.readLine();\n         if(h.containsKey(s))\n         h.put(s,h.get(s)+1);\n         else\n         h.put(s,1);\n       }\n       int ans=0;\n        for(int i=0;i<t;i++)  { \n              String s=br.readLine();\n            if(h.containsKey(s)&&h.get(s)>0)\n            {\n                h.put(s,h.get(s)-1);\n            }else{\n                ans++;\n            }\n        }\n        out.append(ans);\n       \nSystem.out.println(out);\n\n\n}\n}\n// class Graph \n// { \n//     private int V;   // No. of vertices \n  \n//     // Array  of lists for Adjacency List Representation \n//      ArrayList<pair> adj[]; \n  \n//     // Constructor \n//     Graph(int v) \n//     { \n//         V = v; \n//         adj = new ArrayList[v]; \n//         for (int i=0; i<v; ++i) \n//             adj[i] = new ArrayList(); \n//     } \n  \n//     //Function to add an edge into the graph \n//     void addEdge(int v, int w,int x) \n//     { \n//         adj[v].add(new pair(w,x));\n//         adj[w].add(new pair(v,x));// Add w to v's list. \n//     } \n  \n//     // A function used by DFS \n// }\n// class pair{\n//     int x;\n//     int y;\n//     public pair(int xx,int yy){\n//         x=xx;\n//         y=yy;\n        \n//     }\n// }\nclass SortT implements Comparator<String> \n{ \n   \n    public int compare(String a, String b) \n    { \n       \n        return a.length() - b.length(); \n    } \n} "
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = []\nb = []\nfor _ in range(n) :\n    a.append(input())\nfor _ in range(n) :\n    b.append(input())\nfor i in a :\n    if i in b:\n        b.remove(i)\nprint(len(b))"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\nimport java.lang.*;\npublic class MyClass {\n    public static void main(String args[]) throws IOException{\n        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n        int n=Integer.parseInt(br.readLine());\n        String a[]=new String[n];\n        String b[]=new String[n];\n        HashMap<String,Integer> h=new HashMap<>();\n        for(int i=0;i<n;i++){\n        a[i]=br.readLine();\n            if(h.get(a[i])==null)\n            {\n                h.put(a[i],1);\n            }\n            else \n            h.put(a[i],h.get(a[i])+1);\n        }int min=0;\n        for(int i=0;i<n;i++)\n        {\n        b[i]=br.readLine();\n        if(h.get(b[i])!=null&&h.get(b[i])!=0)\n         {\n           h.put(b[i],h.get(b[i])-1);  \n         }\n         else\n          min++;\n        }System.out.println(min);\n        \n      \n       }\n\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = []\nb = []\nfor i in range(n):\n\t\ta.append(input())\nfor i in range(n):\n\t\tb.append(input())\n\nused1 = [0]* n\nused2 = [0]* n\nc = [1]* n\nd = [1]* n\n\nfor i in range(n):\n\t\tfor j in range(n):\n\t\t\t\tif a[i] == b[j] and (used1[i] == 0) and (used2[j] == 0):\n\t\t\t\t\t\tused1[i] = 1\n\t\t\t\t\t\tused2[j] = 1\nfor i in range(n):\n\t\tc[i] = len(a[i])\n\t\td[i] = len(b[i])\n\ns = 0\n\nfor i in range(n):\n\tfor j in range(n):\n\t\tif (used1[i] == 0) and (used2[j] == 0):\n\t\t\tif c[i] == d[j]:\n\t\t\t\t\tused1[i] = 1\n\t\t\t\t\tused2[j] = 1\n\t\t\t\t\ts += 1\nprint(s)\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.math.*;\nimport java.util.regex.*;\n\npublic class Q1 {\n    public static void main(String[] args) {\n        Scanner sc=new Scanner(System.in);\n        int n,c=0,q=0,i=0,temp;\n        n=sc.nextInt();\n        Vector<String>v1=new Vector<>();\n        Vector<String>v2=new Vector<>();\n        for(i=0;i<n;i++){\n            v1.add(sc.next());\n        }\n        for(i=0;i<n;i++){\n            v2.add(sc.next());\n        }\n        i=0;\n        while (v1.size()>i){\n            if(v1.contains(v2.get(i))){\n                v1.remove(v2.get(i));\n                v2.remove(i);\n            }\n            else i++;\n        }\n        System.out.println(v1.size());\n    }\n}"
        },
        {
            "language": 3,
            "solution": "#Bhargey Mehta (Junior)\n#DA-IICT, Gandhinagar\nimport sys, math, queue\n#sys.stdin = open('input.txt', 'r')\nMOD = 998244353\nsys.setrecursionlimit(1000000)\n\nn = int(input())\na = {'XXXL': 0, 'XXXS': 0, 'XXL': 0, 'XXS': 0, 'XS': 0, 'XL': 0, 'M': 0, 'S': 0, 'L': 0}\nb = a.copy()\nfor i in range(n):\n    a[input()] += 1\nfor i in range(n):\n    b[input()] += 1\nans = 0\nfor k in b:\n    ans += abs(a[k]-b[k])\nprint(ans//2)"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.io.BufferedWriter;\nimport java.io.Writer;\nimport java.io.OutputStreamWriter;\nimport java.util.InputMismatchException;\nimport java.io.IOException;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n *\n * @author DY\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        OutputWriter out = new OutputWriter(outputStream);\n        TaskA solver = new TaskA();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class TaskA {\n        public void solve(int testNumber, InputReader in, OutputWriter out) {\n            int n = in.readInt();\n            String[][] tshirt = new String[2][n];\n            for (int k = 0; k < 2; ++k) {\n                for (int i = 0; i < n; ++i)\n                    tshirt[k][i] = in.readString();\n            }\n            int ans = 0;\n            boolean[] visited = new boolean[n];\n            for (int i = 0; i < n; ++i) {\n                boolean dup = false;\n                for (int j = 0; j < n; ++j)\n                    if (!visited[j] && tshirt[1][i].equals(tshirt[0][j])) {\n                        visited[j] = true;\n                        dup = true;\n                        break;\n                    }\n                if (!dup)\n                    ans++;\n            }\n            out.printLine(ans);\n        }\n\n    }\n\n    static class InputReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private InputReader.SpaceCharFilter filter;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int read() {\n            if (numChars == -1) {\n                throw new InputMismatchException();\n            }\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (numChars <= 0) {\n                    return -1;\n                }\n            }\n            return buf[curChar++];\n        }\n\n        public int readInt() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do {\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public String readString() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            StringBuilder res = new StringBuilder();\n            do {\n                if (Character.isValidCodePoint(c)) {\n                    res.appendCodePoint(c);\n                }\n                c = read();\n            } while (!isSpaceChar(c));\n            return res.toString();\n        }\n\n        public boolean isSpaceChar(int c) {\n            if (filter != null) {\n                return filter.isSpaceChar(c);\n            }\n            return isWhitespace(c);\n        }\n\n        public static boolean isWhitespace(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        public interface SpaceCharFilter {\n            public boolean isSpaceChar(int ch);\n\n        }\n\n    }\n\n    static class OutputWriter {\n        private final PrintWriter writer;\n\n        public OutputWriter(OutputStream outputStream) {\n            writer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));\n        }\n\n        public OutputWriter(Writer writer) {\n            this.writer = new PrintWriter(writer);\n        }\n\n        public void close() {\n            writer.close();\n        }\n\n        public void printLine(int i) {\n            writer.println(i);\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\ncnt={}\nfor i in range(n) :\n    ls=input()\n    if ls in cnt :\n        cnt[ls]=cnt[ls]+1\n    else :\n        cnt[ls]=1\nans=n\nfor i in range(n) :\n    ls=input()\n    if ls in cnt and cnt[ls]>=1 :\n        cnt[ls]=cnt[ls]-1\n        ans=ans-1\nprint(ans)\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner input = new Scanner(System.in);\n\t\tint n = input.nextInt();\n\t\tString[] a = new String[n];\n\t\tString[] b = new String[n];\n\t\tint ans = n;\n\t\tfor(int i = 0; i < n; ++i) {\n\t\t\ta[i] = input.next();\n\t\t}\n\t\tfor(int i = 0; i < n; ++i) {\n\t\t\tb[i] = input.next();\n\t\t}\n\t\tfor(int i = 0; i < n; ++i) {\n\t\t\tfor(int j = 0; j < n; ++j) {\n\t\t\t\tif(a[i].equals(b[j])){\n\t\t\t\t    b[j] = \"\";\n\t\t\t\t\tans-= 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\tSystem.out.println(ans);\n\t\tinput.close();\n\t}\n}"
        },
        {
            "language": 1,
            "solution": "__author__ = 'tanunia'\n\nn = int(raw_input())\n\na_map = {\"S\": 0, \"L\": 0, \"M\": 0, \"XS\": 0, \"XL\": 0, \"XXS\": 0, \"XXL\": 0, \"XXXS\": 0, \"XXXL\": 0}\nfor _ in xrange(n):\n    sz = raw_input().strip()\n    a_map[sz] += 1\nb_map = {\"S\": 0, \"L\": 0, \"M\": 0, \"XS\": 0, \"XL\": 0, \"XXS\": 0, \"XXL\": 0, \"XXXS\": 0, \"XXXL\": 0}\nfor _ in xrange(n):\n    sz = raw_input().strip()\n    b_map[sz] += 1\n\ncnt = 0\nfor it in b_map.keys():\n    cnt += max(b_map[it] - a_map[it], 0)\n\nprint cnt"
        },
        {
            "language": 3,
            "solution": "k = 0\nn = int(input())\n\nm = [''] * n\nfor i in range(n):\n    m[i] = [0] + [True]\n\nfor i in range(n):\n    m[i][0] = input()\n\nfor i in range(n):\n    loc = input()\n    for i in range(n):\n        if(loc == m[i][0]) and (m[i][1]):\n            m[i][1] = False\n            k += 1\n            break\n\nprint(n - k)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nd1 = {'S': [0, 0, 0, 0], 'M': [0, 0, 0, 0], 'L': [0, 0, 0, 0]}\nd2 = {'S': [0, 0, 0, 0], 'M': [0, 0, 0, 0], 'L': [0, 0, 0, 0]}\nfor i in range(n):\n    s = input()\n    d1[s[-1]][len(s) - 1] += 1\nfor i in range(n):\n    s = input()\n    d2[s[-1]][len(s) - 1] += 1\nprint((sum(sum(abs(d1[i][j] - d2[i][j]) for j in range(4)) for i in d1)) // 2)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  int l[5][3];\n  memset(l, 0, sizeof(l));\n  for (int i = 0; i < n; i++) {\n    string s;\n    cin >> s;\n    if (s[s.size() - 1] == 'S') l[s.size()][0]--;\n    if (s[s.size() - 1] == 'M') l[s.size()][1]--;\n    if (s[s.size() - 1] == 'L') l[s.size()][2]--;\n  }\n  for (int i = 0; i < n; i++) {\n    string s;\n    cin >> s;\n    if (s[s.size() - 1] == 'S') l[s.size()][0]++;\n    if (s[s.size() - 1] == 'M') l[s.size()][1]++;\n    if (s[s.size() - 1] == 'L') l[s.size()][2]++;\n  }\n  int s = 0;\n  for (int i = 1; i < 5; i++)\n    for (int j = 0; j < 3; j++)\n      if (l[i][j] > 0) s += l[i][j];\n  cout << s << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int inf = INT_MAX;\nconst long long int infl = LLONG_MAX;\nint main() {\n  int n, i;\n  cin >> n;\n  std::vector<string> a, b;\n  string s;\n  std::map<string, int> m1;\n  std::map<string, int> m2;\n  std::map<string, int>::iterator it;\n  std::map<string, int>::iterator itr;\n  for (i = 1; i <= n; ++i) {\n    cin >> s;\n    it = m1.find(s);\n    if (it == m1.end()) {\n      m1.insert(make_pair(s, 1));\n    } else {\n      it->second++;\n    }\n  }\n  for (i = 1; i <= n; ++i) {\n    cin >> s;\n    it = m2.find(s);\n    if (it == m2.end()) {\n      m2.insert(make_pair(s, 1));\n    } else {\n      it->second++;\n    }\n  }\n  int counter = 0;\n  it = m1.find(\"M\");\n  itr = m2.find(\"M\");\n  if (it != m1.end() && itr != m2.end()) {\n    it->second -= itr->second;\n    if (it->second > 0) counter += it->second;\n  } else if (it != m1.end() && itr == m2.end()) {\n    if (it->second > 0) counter += it->second;\n  }\n  it = m1.find(\"S\");\n  itr = m2.find(\"S\");\n  if (it != m1.end() && itr != m2.end()) {\n    it->second -= itr->second;\n    if (it->second > 0) counter += it->second;\n  } else if (it != m1.end() && itr == m2.end()) {\n    if (it->second > 0) counter += it->second;\n  }\n  it = m1.find(\"L\");\n  itr = m2.find(\"L\");\n  if (it != m1.end() && itr != m2.end()) {\n    it->second -= itr->second;\n    if (it->second > 0) counter += it->second;\n  } else if (it != m1.end() && itr == m2.end()) {\n    if (it->second > 0) counter += it->second;\n  }\n  it = m1.find(\"XS\");\n  itr = m2.find(\"XS\");\n  if (it != m1.end() && itr != m2.end()) {\n    it->second -= itr->second;\n    if (it->second > 0) counter += it->second;\n  } else if (it != m1.end() && itr == m2.end()) {\n    if (it->second > 0) counter += it->second;\n  }\n  it = m1.find(\"XL\");\n  itr = m2.find(\"XL\");\n  if (it != m1.end() && itr != m2.end()) {\n    it->second -= itr->second;\n    if (it->second > 0) counter += it->second;\n  } else if (it != m1.end() && itr == m2.end()) {\n    if (it->second > 0) counter += it->second;\n  }\n  it = m1.find(\"XXS\");\n  itr = m2.find(\"XXS\");\n  if (it != m1.end() && itr != m2.end()) {\n    it->second -= itr->second;\n    if (it->second > 0) counter += it->second;\n  } else if (it != m1.end() && itr == m2.end()) {\n    if (it->second > 0) counter += it->second;\n  }\n  it = m1.find(\"XXL\");\n  itr = m2.find(\"XXL\");\n  if (it != m1.end() && itr != m2.end()) {\n    it->second -= itr->second;\n    if (it->second > 0) counter += it->second;\n  } else if (it != m1.end() && itr == m2.end()) {\n    if (it->second > 0) counter += it->second;\n  }\n  it = m1.find(\"XXXS\");\n  itr = m2.find(\"XXXS\");\n  if (it != m1.end() && itr != m2.end()) {\n    it->second -= itr->second;\n    if (it->second > 0) counter += it->second;\n  } else if (it != m1.end() && itr == m2.end()) {\n    if (it->second > 0) counter += it->second;\n  }\n  it = m1.find(\"XXXL\");\n  itr = m2.find(\"XXXL\");\n  if (it != m1.end() && itr != m2.end()) {\n    it->second -= itr->second;\n    if (it->second > 0) counter += it->second;\n  } else if (it != m1.end() && itr == m2.end()) {\n    if (it->second > 0) counter += it->second;\n  }\n  cout << counter;\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.util.function.BiConsumer;\n\n\npublic class Main {\n\n    List <String> prev = new ArrayList<>();\n    List <String> want = new ArrayList<>();\n    Map<String, Integer> prevv = new HashMap<>();\n\n    public void run() {\n        Scanner s = new Scanner(System.in);\n        int n = s.nextInt();\n        for (int i = 0; i < n; i++) {\n            String c = s.next();\n            int prev_i = prevv.getOrDefault(c, 0);\n            prevv.put(c, prev_i + 1);\n        }\n\n        for (int i = 0; i < n; i++) {\n            String c = s.next();\n            int prev_i = prevv.getOrDefault(c, 0);\n            if (prev_i == 0) {\n                want.add(c);\n                continue;\n            }\n            prevv.put(c, prev_i - 1);\n        }\n\n        prevv.forEach((s1, integer) -> {\n            for (int i = 0; i < integer; i++) {\n                prev.add(s1);\n            }\n        });\n\n        Collections.sort(prev);\n        Collections.sort(want);\n\n        long ans = 0;\n\n        for (int i = 0; i < prev.size(); i++) {\n            char[] psc = prev.get(i).toCharArray();\n            char[] wsc = want.get(i).toCharArray();\n            for (int j = 0; j < psc.length; j++) {\n                if (psc[j] != wsc[j])\n                    ans++;\n            }\n        }\n\n        System.out.println(ans);\n    }\n\n\n    public static void main(String[] args) {\n        new Main().run();\n    }\n\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nold = []\nnew = []\nfor i in range(0, n):\n    old.append(input())\nfor i in range(0, n):\n    new.append(input())\nold.sort()\nnew.sort()\nfor i in old[:]:\n    if i in new:\n        old.remove(i)\n        new.remove(i)\nprint(len(old))\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long N = 2e5 + 30, Mod = 1e9 + 7;\nconst long long SQ = 330;\nconst long long INF = 1e17;\nlong long a[N];\nmap<string, long long> cnt;\nint main() {\n  ios::sync_with_stdio(0), cin.tie(0);\n  long long n;\n  cin >> n;\n  long long ans = 0;\n  for (int i = 0; i < n; i++) {\n    string s;\n    cin >> s;\n    cnt[s]++;\n  }\n  for (int i = 0; i < n; i++) {\n    string s;\n    cin >> s;\n    cnt[s]--;\n  }\n  for (auto u : cnt) ans += abs(u.second);\n  ans >>= 1;\n  cout << ans << endl;\n  return (0);\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nAr=[]\nfor i in range(n):\n    Ar.append(input())\ncnt=0\nfor i in range(n):\n    x=input()\n    try:Ar.remove(x)\n    except: \n        cnt+=1\nprint(cnt)"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\n\nn = int(input())\nfirst = Counter([input() for _ in range(n)])\nsecond = Counter([input() for _ in range(n)])\ndiff = [first.get(key, 0) - second.get(key, 0)  for key in set(first.keys()) | set(second.keys())]\nprint(sum(filter(lambda x: x > 0, diff)))\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.math.*;\nimport java.io.*; \n public class A{\n\nstatic FastReader scan=new FastReader();\n public static PrintWriter out = new PrintWriter (new BufferedOutputStream(System.out));\n  static LinkedList<Edge>edges[];\n  static boolean stdin = true;\n    static String filein = \"input\";\n    static String fileout = \"output\";\nstatic int dx[] = { -1, 0, 1, 0 };\nstatic int dy[] = { 0, 1, 0, -1 };\nint dx_8[]={1,1,1,0,0,-1,-1,-1};\nint dy_8[]={-1,0,1,-1,1,-1,0,1};\nstatic char sts[]={'U','R','D','L'};\nstatic boolean prime[];\nstatic long LCM(long a,long b){\n    return (Math.abs(a*b))/gcd(a,b);\n   }\n    public static int upperBound(long[] array, int length, long value) {\n        int low = 0;\n        int high = length;\n        while (low < high) {\n            final int mid = low+(high-low) / 2;\n            if ( array[mid]>value) {\n                high = mid ;\n            } else {\n                low = mid+1;\n            }\n        }\n        return low;\n    }\n   static long gcd(long a, long b) {\n    if(a!=0&&b!=0)\n        while((a%=b)!=0&&(b%=a)!=0);\n    return a^b;\n}\nstatic int countSetBits(int n) \n    { \n        int count = 0; \n        while (n > 0) { \n            count += n & 1; \n            n >>= 1; \n        } \n        return count; \n    } \n static void sieve(long n) \n    { \n        \n        prime = new boolean[(int)n+1]; \n        for(int i=0;i<n;i++) \n            prime[i] = true; \n          \n        for(int p = 2; p*p <=n; p++) \n        { \n           \n            if(prime[p] == true) \n            { \n                \n                for(int i = p*p; i <= n; i += p) \n                    prime[i] = false; \n            } \n        } \n    }  \n  \n \n \n           static boolean isprime(long x)\n           {\n            for(long i=2;i*i<=x;i++)\n                if(x%i==0)\n                    return false;\n                return true;\n           }\n           static int perm=0,FOR=0;\n           \n     \n\nstatic boolean flag=false;\nstatic int len=100000000;\n\nstatic ArrayList<Pair>inters=new ArrayList<Pair>();\n\n\n\n\n\nstatic StringBuilder sb;\nstatic void swap(int i,int j,StringBuilder st)\n{\n    char tmp=st.charAt(i);\n    st.setCharAt(i,st.charAt(j));\n    st.setCharAt(j,tmp);\n}\n\n\n private static int next(int[] arr, int target)  \n    {  \n        int start = 0, end = arr.length - 1;  \n    \n        int ans = -1;  \n        while (start <= end) {  \n            int mid = (start + end) / 2;  \n    \n            // Move to right side if target is  \n            // greater.  \n            if(arr[mid]==target)\n                return mid;\n            if (arr[mid] <target) {  \n                start = mid + 1;  \n            }  \n    \n            // Move left side.  \n            else {  \n                ans = mid;  \n                end = mid - 1;  \n            }  \n        }  \n        return ans;  \n    }  \n//static boolean vis[][];\n    static long solve(int h,long n,int cur)\n    {\n        if(h==0)\n            return 0;\n        long half=1L<<(h-1);\n        if(n<=half)\n        {\n            if((cur^1)==0)\n                return 1+solve(h-1,n,0);\n            else \n                return 2*half+solve(h-1,n,0);\n        }\n        else \n        {\n              if((cur^1)==0)\n             return 2*half+solve(h-1,n-half,1);\n            else \n                return 1+solve(h-1,n-half,1);\n        }\n    }\nstatic int dist[][];\npublic static String removeLeadingZeroes(String str) {\n      String strPattern = \"^0+(?!$)\";\n      str = str.replaceAll(strPattern, \"\");\n      return str;\n   }\n\n    static String gcd(String str1, String str2)\n    {\n        // If str1 length is less than\n        // that of str2 then recur\n        // with gcd(str2, str1)\n        if (str1.length() < str2.length()) {\n            return gcd(str2, str1);\n        }\n \n        // If str1 is not the\n        // concatenation of str2\n        else if (!str1.startsWith(str2)) {\n            return \"\";\n        }\n \n        else if (str2.isEmpty()) {\n \n            // GCD string is found\n            return str1;\n        }\n        else {\n \n            // Cut off the common prefix\n            // part of str1 & then recur\n            return gcd(str1.substring(str2.length()),\n                       str2);\n        }\n    }\n   static ArrayList<Long>luckies=new ArrayList<Long>();\n  static int n;\n  static long cnt=0;\nstatic void d(long x)\n{\n    if(String.valueOf(x).length()>n)\n        return;\n    cnt++;\n    luckies.add(x);\n     d(x*10+7);\n     d(x*10+8);\n}\n\npublic static class comp1 implements Comparator<String>{  \npublic int compare(String o1,String o2){\nreturn o1.length()-o2.length(); \n}\n  }\n  public static class comp2 implements Comparator<String>{  \npublic int compare(String o1,String o2){\nreturn o1.compareTo(o2); \n}\n  }\n\npublic static void main(String[] args)  throws Exception \n{\n//SUCK IT UP AND DO IT ALRIGHT\n//scan=new FastReader(\"input.txt\");\n//out = new PrintWriter (\"output.txt\");\n   // System.out.println(pow((long)1e9,(long)1e9));\n    //int elem[]={1,2,3,4,5};\n  //  System.out.println(upperBound(elem,elem.length,5));\nint tt=1;\n//tt=scan.nextInt();\nouter:while(tt-->0)\n{\nint n=scan.nextInt();\nString orig[]=new String[n];\nString sorted[]=new String[n];\nMap<String,Integer>map=new HashMap<String,Integer>();\nMap<String,Integer>map2=new HashMap<String,Integer>();\nfor(int i=0;i<n;i++){\norig[i]=scan.next();\nmap.put(orig[i],map.getOrDefault(orig[i],0)+1);\n}\nfor(int i=0;i<n;i++){\nsorted[i]=scan.next();\nmap2.put(sorted[i],map.getOrDefault(orig[i],0)+1);\n}\nint cnt=0;\n\n   for (String s:sorted)  \n         {\n            if(map.containsKey(s)&&map.get(s)>0)\n            {\n              map.put(s,map.getOrDefault(s,0)-1);\n            }\n            else{\n             cnt++;\n             //map2.put(entry.getKey(),map2.getOrDefault(entry.getKey(),0)+1);\n            }\n         }\n         out.println(cnt);\n}\nout.close();\n\n//SEE UP \n\n}\nstatic long binexp(long a,long n)\n{\n    if(n==0)\n        return 1;\n    long res=binexp(a,n/2);\n    if(n%2==1)\n        return res*res*a;\n    else \n        return res*res;\n}\nstatic long powMod(long base, long exp, long mod) {\n       if (base == 0 || base == 1) return base;\n       if (exp == 0) return 1;\n       if (exp == 1) return base % mod;\n       long R = powMod(base, exp/2, mod) % mod;\n       R *= R;\n       R %= mod;\n       if ((exp & 1) == 1) {\n           return base * R % mod;\n       }\n       else return R % mod;\n   }\nstatic double dis(double x1,double y1,double x2,double y2)\n{\n    return Math.sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2));\n}\nstatic long mod(long x,long y)\n    {\n        if(x<0)\n            x=x+(-x/y+1)*y;\n        return x%y;\n    }\n public static  long pow(long b, long e) {\n            long r = 1;\n            while (e > 0) {\n                if (e % 2 == 1) r = r * b ;\n                b = b * b;\n                e >>= 1;\n            }\n            return r;\n        }\nprivate static void sort(long[] arr) {\n        List<Long> list = new ArrayList<>();\n        for (long object : arr) list.add(object);\n        Collections.sort(list);\n        for (int i = 0; i < list.size(); ++i) arr[i] = list.get(i);\n    }\n public static class FastReader {\n        BufferedReader br;\n        StringTokenizer root;\n        \n \n        public FastReader() {\n            br = new BufferedReader(new InputStreamReader(System.in));\n        }\n        FastReader(String filename)throws Exception\n        {\n\n            br=new BufferedReader(new FileReader(filename));\n        }\n\n        boolean hasNext(){\n            String line;\n            while(root.hasMoreTokens())\n                return true;\n            return false;\n        }\n \n        String next() {\n            while (root == null || !root.hasMoreTokens()) {\n                try {\n                    root = new StringTokenizer(br.readLine());\n                } catch (Exception addd) {\n                    addd.printStackTrace();\n                }\n            }\n            return root.nextToken();\n        }\n \n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n \n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n \n        long nextLong() {\n            return Long.parseLong(next());\n        }\n \n        String nextLine() {\n            String str = \"\";\n            try {\n                str = br.readLine();\n            } catch (Exception addd) {\n                addd.printStackTrace();\n            }\n            return str;\n        }\n         public int[] nextIntArray(int arraySize) {\n            int array[] = new int[arraySize];\n \n            for (int i = 0; i < arraySize; i++) {\n                array[i] = nextInt();\n            }\n \n            return array;\n        }\n}\n static class Pair implements Comparable<Pair>{\n        public int x, y;\n        public Pair(int x1, int y1) {\n            x=x1;\n            y=y1;\n        }\n        @Override\n        public int hashCode() {\n            return (int)(x + 31 * y);\n        }\n        public String toString() {\n            return x + \" \" + y;\n        }\n        @Override\n        public boolean equals(Object o){\n            if (o == this) return true;\n            if (o.getClass() != getClass()) return false;\n            Pair t = (Pair)o;\n            return t.x == x && t.y == y;\n        }\npublic int compareTo(Pair o)\n{\n    return (x-o.x);\n\n    }\n\nstatic class pair{\n    int i;\n    int j;\npair(int i,int j){\n    this.i=i;\n    this.j=j;\n}}}\n static class tuple{\n        int x,y,z;\n        tuple(int a,int b,int c){\n            x=a;\n            y=b;\n            z=c;\n        }\n    }\n    static class Edge{\n        int d,w;\n        Edge(int d,int w)\n        {\n            this.d=d;\n            this.w=w;\n        }\n    }\n}\n\n\n\n\n\n\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nL = 0\nM = 0\nS = 0\nXS = 0\nXL = 0\nXXL = 0\nXXS = 0\nXXXL = 0\nXXXS = 0\n\ndef Counter(s, L, S, M, XS, XL, XXS, XXL, XXXS, XXXL):\n    if s == 'L':\n        L += 1\n    elif s == 'S':\n        S += 1\n    elif s == 'M':\n        M += 1\n    elif s == 'XS':\n        XS += 1\n    elif s == 'XL':\n        XL += 1\n    elif s == 'XXS':\n        XXS += 1\n    elif s == 'XXL':\n        XXL += 1\n    elif s == 'XXXS':\n        XXXS += 1\n    elif s == 'XXXL':\n        XXXL += 1\n    return L, S, M, XS, XL, XXS, XXL, XXXS, XXXL\n\nfor i in range(n):\n    L, S, M, XS, XL, XXS, XXL, XXXS, XXXL = Counter(input(), L, S, M, XS, XL, XXS, XXL, XXXS, XXXL)\n_L = 0\n_M = 0\n_S = 0\n_XS = 0\n_XL = 0\n_XXL = 0\n_XXS = 0\n_XXXL = 0\n_XXXS = 0\nfor i in range(n):\n    _L, _S, _M, _XS, _XL, _XXS, _XXL, _XXXS, _XXXL = Counter(input(), _L, _S, _M, _XS, _XL, _XXS, _XXL, _XXXS, _XXXL)\nres = abs(S - _S) + abs(L - _L) + abs(M - _M) + abs(XS - _XS) + abs(XL - _XL) + abs(XXS - _XXS) + abs(XXL - _XXL) + abs(XXXS - _XXXS) +abs(XXXL - _XXXL)\nprint(res // 2)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nlist_pre, list_cur = [], []\nfor i in range(n):\n    list_pre.append(input())\nfor i in range(n):\n    list_cur.append(input())\n\nfor i in range(n):\n    size_pre = list_pre[i]\n    for i in range(n):\n        if size_pre == list_cur[i]:\n            list_cur[i] = 0\n            break\n\ncount = 0\nfor i in range(n):\n    if list_cur[i] == 0:\n        count += 1\n\nprint(n-count)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nlast=[]\nfor i in range(n):\n    last.append(input())\ncurrent=[]\nfor i in range(n):\n    current.append(input())\nfor i in current:\n    if i in last:\n        last.remove(i)\nprint(len(last))\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  map<string, int> pre;\n  map<string, int> aft;\n  int n;\n  string tmp;\n  cin >> n;\n  for (int i = 1; i <= n; i++) {\n    cin >> tmp;\n    pre[tmp]++;\n  }\n  for (int i = 1; i <= n; i++) {\n    cin >> tmp;\n    if (pre[tmp] > 0)\n      pre[tmp]--;\n    else {\n      aft[tmp]++;\n    }\n  }\n  int res = 0;\n  map<string, int>::iterator it;\n  for (it = pre.begin(); it != pre.end(); it++) res += it->second;\n  cout << res << endl;\n}\n"
        },
        {
            "language": 4,
            "solution": "///package math_codet;\nimport java.io.*;\nimport java.util.*;\n\npublic class lets_do {\n    public static void main(String[] args)\n    {\n        InputReader in=new InputReader(System.in);\n        StringBuffer str=new StringBuffer();\n        int n=in.nextInt();\n        int i=0,j=0;\n        String[] arr1=new String[n];\n        boolean[] visited=new boolean[n];\n        for(i=0;i<n;i++)\n            arr1[i]=in.next();\n        String[] arr2=new String[n];\n        for(i=0;i<n;i++)\n            arr2[i]=in.next();\n        int count=0;\n        for(i=0;i<n;i++){\n            boolean flag=false;\n            for(j=0;j<n;j++){\n                if(!visited[j] && arr2[i].equals(arr1[j])){\n                    visited[j]=true;\n                    count++;\n                    break;\n                }\n            }\n        }\n        System.out.println(n-count-1+1);\n    }\n    static class InputReader{\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n \n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n \n        public int read() {\n            if (numChars == -1)\n                throw new UnknownError();\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new UnknownError();\n                }\n                if (numChars <= 0)\n                    return -1;\n            }\n            return buf[curChar++];\n        }\n \n        public int peek() {\n            if (numChars == -1)\n                return -1;\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    return -1;\n                }\n                if (numChars <= 0)\n                    return -1;\n            }\n            return buf[curChar];\n        }\n \n        public void skip(int x) {\n            while (x-- > 0)\n                read();\n        }\n \n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n \n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n \n        public String nextString() {\n            return next();\n        }\n \n        public String next() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            StringBuffer res = new StringBuffer();\n            do {\n                res.appendCodePoint(c);\n                c = read();\n            } while (!isSpaceChar(c));\n \n            return res.toString();\n        }\n \n        public String nextLine() {\n            StringBuffer buf = new StringBuffer();\n            int c = read();\n            while (c != '\\n' && c != -1) {\n                if (c != '\\r')\n                    buf.appendCodePoint(c);\n                c = read();\n            }\n            return buf.toString();\n        }\n \n        public double nextDouble() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            double res = 0;\n            while (!isSpaceChar(c) && c != '.') {\n                if (c == 'e' || c == 'E')\n                    return res * Math.pow(10, nextInt());\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            if (c == '.') {\n                c = read();\n                double m = 1;\n                while (!isSpaceChar(c)) {\n                    if (c == 'e' || c == 'E')\n                        return res * Math.pow(10, nextInt());\n                    if (c < '0' || c > '9')\n                        throw new InputMismatchException();\n                    m /= 10;\n                    res += (c - '0') * m;\n                    c = read();\n                }\n            }\n            return res * sgn;\n        }\n \n        public boolean hasNext() {\n            int value;\n            while (isSpaceChar(value = peek()) && value != -1)\n                read();\n            return value != -1;\n        }\n \n        private boolean isSpaceChar(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n    }\n} "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  char a[105][10], s[105][10];\n  int vis[105];\n  memset(vis, 0, sizeof(vis));\n  int num = n;\n  for (int i = 0; i < n; i++) cin >> a[i];\n  for (int i = 0; i < n; i++) {\n    cin >> s[i];\n    for (int j = 0; j < n; j++) {\n      if (strcmp(s[i], a[j]) == 0 && vis[j] == 0) {\n        num--;\n        vis[j] = 1;\n        break;\n      }\n    }\n  }\n  cout << num << endl;\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "//package com.swiggy.dijkstra;\n\nimport com.sun.org.apache.bcel.internal.generic.ARRAYLENGTH;\n\nimport java.awt.event.TextEvent;\nimport java.io.*;\nimport java.util.*;\n\npublic class ModifyLongest {\n    InputStream is;\n    PrintWriter out;\n    String INPUT = \"\";\n    //boolean codechef=true;\n    boolean codechef=true;\n\n\n    void solve()\n    {\n        int n=ni();\n        String[] a=new String[n];\n        String[] b=new String[n];\n        int[][] cnta=new int[4][3];\n        int[][] cntb=new int[4][3];\n        for(int i=0;i<n;i++)\n        {\n            a[i]=ns();\n            int len=a[i].length();\n            if(a[i].charAt(len-1)=='S')\n            {\n                cnta[len-1][0]++;\n            }\n            else if(a[i].charAt(len-1)=='M')\n            {\n                cnta[len-1][1]++;\n            }\n            else\n            {\n                cnta[len-1][2]++;\n            }\n        }\n        for(int i=0;i<n;i++)\n        {\n            b[i]=ns();\n            int len=b[i].length();\n            if(b[i].charAt(len-1)=='S')\n            {\n                cntb[len-1][0]++;\n            }\n            else if(b[i].charAt(len-1)=='M')\n            {\n                cntb[len-1][1]++;\n            }\n            else\n            {\n                cntb[len-1][2]++;\n            }\n        }\n        int ans=0;\n        for(int i=0;i<4;i++)\n        {\n            for(int j=0;j<3;j++)\n            {\n                if(cnta[i][j]>cntb[i][j])ans+=cnta[i][j]-cntb[i][j];\n            }\n        }\n        System.out.println(ans);\n    }\n\n    static int ans;\n\n    static int comp(int u,boolean[] vis,Edge[][] g)\n    {\n        vis[u]=true;\n        int sum=0;\n        for(Edge ed:g[u])\n        {\n            int end=ed.end;\n            if(!vis[end])\n            {\n                int val=comp(ed.end,vis,g);\n                if(val%2==0)\n                {\n                    ans++;\n                }\n                else sum+=val;\n            }\n        }\n        return sum+1;\n    }\n\n\n    static class Edge\n    {\n        int end;\n        int odd;\n        int sum;\n    }\n\n\n    static int[][] packD(int[] from,int[] to,int n)\n    {\n        int len=from.length;\n        int[] cnt=new int[n];\n        for(int i=0;i<len;i++)\n        {\n            cnt[from[i]]++;\n        }\n        int[][] graph=new int[n][];\n        for(int i=0;i<n;i++)\n        {\n            graph[i]=new int[cnt[i]];\n        }\n        int[] ind=new int[n];\n        for(int i=0;i<len;i++)\n        {\n            graph[from[i]][ind[from[i]]++]=to[i];\n        }\n        return graph;\n    }\n\n\n\n    static class Temp\n    {\n        int ind;\n        int val;\n\n        public Temp(int ind,int val)\n        {\n            this.ind=ind;\n            this.val=val;\n        }\n\n    }\n\n    static HashMap<Integer,Integer> map;\n\n    static void rev(char[] arr,int st,int end)\n    {\n        int len=(end-st+1);\n        for(int i=st;i<st+len/2;i++)\n        {\n            char tmp=arr[i];\n            arr[i]=arr[end];\n            arr[end]=tmp;\n            end--;\n        }\n    }\n\n    static long fnc(int a,int b)\n    {\n        long val=Math.min(a,b)*1000000007;\n        val+=Math.max(a,b);\n        return val;\n    }\n\n    static long fnc2(int a,int b)\n    {\n        long val=a*1000000007;\n        val+=b;\n        return val;\n    }\n\n    static class Pair\n    {\n        int a,b;\n        public Pair(int a,int b)\n        {\n            this.a=a;\n            this.b=b;\n        }\n    }\n\n    static int bit[];\n\n    static void add(int x,int d,int n)\n    {\n        for(int i=x;i<=n;i+=i&-i)bit[i]+=d;\n    }\n\n    static int query(int x)\n    {\n        int ret=0;\n        for(int i=x;i>0;i-=i&-i)\n            ret+=bit[i];\n        return ret;\n    }\n\n    static long lcm(int a,int b)\n    {\n        long val=a;\n        val*=b;\n        return (val/gcd(a,b));\n    }\n\n    static int gcd(int a,int b)\n    {\n        if(a==0)return b;\n        return gcd(b%a,a);\n    }\n\n    static int pow(int a, int b, int p)\n    {\n        long ans = 1, base = a;\n        while (b!=0)\n        {\n            if ((b & 1)!=0)\n            {\n                ans *= base;\n                ans%= p;\n            }\n            base *= base;\n            base%= p;\n            b >>= 1;\n        }\n        return (int)ans;\n    }\n\n    static int inv(int x, int p)\n    {\n        return pow(x, p - 2, p);\n    }\n\n\n    void run() throws Exception\n    {\n        if(codechef)oj=true;\n        is = oj ? System.in : new ByteArrayInputStream(INPUT.getBytes());\n        out = new PrintWriter(System.out);\n\n        long s = System.currentTimeMillis();\n        solve();\n        out.flush();\n        tr(System.currentTimeMillis()-s+\"ms\");\n    }\n\n    public static void main(String[] args) throws Exception {new ModifyLongest().run();}\n\n    private byte[] inbuf = new byte[1024];\n    public int lenbuf = 0, ptrbuf = 0;\n\n    private int readByte()\n    {\n        if(lenbuf == -1)throw new InputMismatchException();\n        if(ptrbuf >= lenbuf){\n            ptrbuf = 0;\n            try { lenbuf = is.read(inbuf); } catch (IOException e) { throw new InputMismatchException(); }\n            if(lenbuf <= 0)return -1;\n        }\n        return inbuf[ptrbuf++];\n    }\n\n    private boolean isSpaceChar(int c) { return !(c >= 33 && c <= 126); }\n    private int skip() { int b; while((b = readByte()) != -1 && isSpaceChar(b)); return b; }\n\n    private double nd() { return Double.parseDouble(ns()); }\n    private char nc() { return (char)skip(); }\n\n    private String ns()\n    {\n        int b = skip();\n        StringBuilder sb = new StringBuilder();\n        while(!(isSpaceChar(b))){ // when nextLine, (isSpaceChar(b) && b != ' ')\n            sb.appendCodePoint(b);\n            b = readByte();\n        }\n        return sb.toString();\n    }\n\n    private char[] ns(int n)\n    {\n        char[] buf = new char[n];\n        int b = skip(), p = 0;\n        while(p < n && !(isSpaceChar(b))){\n            buf[p++] = (char)b;\n            b = readByte();\n        }\n        return n == p ? buf : Arrays.copyOf(buf, p);\n    }\n\n    private char[][] nm(int n, int m)\n    {\n        char[][] map = new char[n][];\n        for(int i = 0;i < n;i++)map[i] = ns(m);\n        return map;\n    }\n\n    private int[] na(int n)\n    {\n        int[] a = new int[n];\n        for(int i = 0;i < n;i++)a[i] = ni();\n        return a;\n    }\n\n    private int ni()\n    {\n        int num = 0, b;\n        boolean minus = false;\n        while((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));\n        if(b == '-'){\n            minus = true;\n            b = readByte();\n        }\n\n        while(true){\n            if(b >= '0' && b <= '9'){\n                num = num * 10 + (b - '0');\n            }else{\n                return minus ? -num : num;\n            }\n            b = readByte();\n        }\n    }\n\n    private long nl()\n    {\n        long num = 0;\n        int b;\n        boolean minus = false;\n        while((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));\n        if(b == '-'){\n            minus = true;\n            b = readByte();\n        }\n\n        while(true){\n            if(b >= '0' && b <= '9'){\n                num = num * 10 + (b - '0');\n            }else{\n                return minus ? -num : num;\n            }\n            b = readByte();\n        }\n    }\n\n    private boolean oj = System.getProperty(\"ONLINE_JUDGE\") != null;\n    private void tr(Object... o) { if(!oj)System.out.println(Arrays.deepToString(o)); }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint scale(char c) {\n  if (c <= '9' && c >= '0') return c - '0';\n  if (c <= 'Z' && c >= 'A') return c - 'A' + 1;\n  return c - 'a' + 1;\n}\nint main() {\n  int n;\n  cin >> n;\n  string t;\n  map<string, int> m;\n  for (int i = 0; i < n; ++i) {\n    cin >> t;\n    m[t]++;\n  }\n  for (int i = 0; i < n; ++i) {\n    cin >> t;\n    if (m[t]) {\n      m[t]--;\n    }\n  }\n  long long sum = 0;\n  for (auto u : m) {\n    sum += u.second;\n  }\n  cout << sum << '\\n';\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  string s;\n  unordered_map<string, int> myMap;\n  for (int i = 0; i < n; i++) {\n    cin >> s;\n    if (myMap.find(s) == myMap.end()) {\n      myMap[s] = 1;\n    } else {\n      myMap[s] += 1;\n    }\n  }\n  int count = 0;\n  for (int i = 0; i < n; i++) {\n    cin >> s;\n    if (myMap.find(s) == myMap.end()) {\n      count++;\n    } else {\n      if (myMap[s] != 0) {\n        myMap[s] -= 1;\n      } else {\n        count++;\n      }\n    }\n  }\n  cout << count << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint N, ans;\nstring s;\nmap<string, int> mp;\nint main() {\n  cin.tie(0);\n  ios_base::sync_with_stdio(0);\n  cin >> N;\n  for (int i = 1; i <= N; i++) {\n    cin >> s;\n    ans++;\n    mp[s]++;\n  }\n  for (int i = 1; i <= N; i++) {\n    cin >> s;\n    if (mp[s] > 0)\n      ans--;\n    else\n      ans++;\n    mp[s]--;\n  }\n  cout << ans / 2;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ninline long long int modadd(long long int n, long long int m,\n                            long long int p = 1000000007) {\n  return ((n + m) % p + p) % p;\n}\ninline long long int modsub(long long int n, long long int m,\n                            long long int p = 1000000007) {\n  return ((n - m + p) % p + p) % p;\n}\ninline long long int modpro(long long int n, long long int m,\n                            long long int p = 1000000007) {\n  return (((n % p) * (m % p)) % p + p) % p;\n}\ninline unsigned long long int powe(long long int first, long long int second) {\n  unsigned long long int res = 1;\n  while (second > 0) {\n    if (second & 1) res = res * first;\n    second = second >> 1;\n    first = first * first;\n  }\n  return res;\n}\ninline long long int modpow(long long int first, long long int second,\n                            long long int p = 1000000007) {\n  long long int res = 1;\n  while (second > 0) {\n    if (second & 1) res = modpro(res, first, p);\n    second = second >> 1;\n    first = modpro(first, first, p);\n  }\n  return res;\n}\ninline long long int modInverse(long long int n, long long int p = 1000000007) {\n  if (n == 1) return 1;\n  return modpow(n, p - 2, p);\n}\ninline long long int moddiv(long long int n, long long int m,\n                            long long int p = 1000000007) {\n  return modpro(n, modInverse(m, p), p);\n}\ninline long long int modadd3(long long int first, long long int second,\n                             long long int z, long long int p = 1000000007) {\n  return modadd(modadd(first, second, p), z, p);\n}\ninline long long int modadd4(long long int first, long long int second,\n                             long long int z, long long int w,\n                             long long int p = 1000000007) {\n  return modadd(modadd(first, second, p), modadd(z, w, p), p);\n}\ntemplate <typename T>\ninline T max3(T first, T second, T z) {\n  return max(max(first, second), z);\n}\ntemplate <typename T>\ninline T max4(T first, T second, T z, T w) {\n  return max(max3(first, second, w), z);\n}\ntemplate <typename T>\ninline T min3(T first, T second, T z) {\n  return min(min(first, second), z);\n}\ntemplate <typename T>\ninline T min4(T first, T second, T z, T w) {\n  return min(min3(first, second, w), z);\n}\ntemplate <typename T>\nvoid printArr(T *arr, int s, int n) {\n  for (int i = s; i <= n; i++) {\n    cout << arr[i] << \" \";\n  }\n  cout << endl;\n}\nint main() {\n  std::ios::sync_with_stdio(false);\n  cin.tie(NULL);\n  int erer = 1;\n  for (int(erer2) = (1); (erer2) < (erer + 1); (erer2)++) {\n    int n;\n    cin >> n;\n    string s;\n    int a[10][3] = {};\n    for (int(i) = (0); (i) < (n); (i)++) {\n      cin >> s;\n      if (s.back() == 'M')\n        a[((long long int)(s).size())][0]++;\n      else if (s.back() == 'L')\n        a[((long long int)(s).size())][1]++;\n      else\n        a[((long long int)(s).size())][2]++;\n    }\n    int ans = 0;\n    for (int(i) = (0); (i) < (n); (i)++) {\n      cin >> s;\n      if (s.back() == 'M')\n        if (a[((long long int)(s).size())][0]) {\n          a[((long long int)(s).size())][0]--;\n        } else\n          ans++;\n      else if (s.back() == 'L')\n        if (a[((long long int)(s).size())][1]) {\n          a[((long long int)(s).size())][1]--;\n        } else\n          ans++;\n      else if (a[((long long int)(s).size())][2]) {\n        a[((long long int)(s).size())][2]--;\n      } else\n        ans++;\n    }\n    cout << ans << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "r=[0]*int(input())\na=[*(input()for _ in r)]\nc=0\nfor _ in r:\n try:a.remove(input())\n except:c+=1\nprint(c)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  long long int t, n, q, i, j, k, x = 0, y, z;\n  map<string, long long int> m;\n  map<string, long long int>::iterator it;\n  cin >> n;\n  string st;\n  for (i = 0; i < n; i++) {\n    cin >> st;\n    m[st]++;\n  }\n  for (i = 0; i < n; i++) {\n    cin >> st;\n    m[st]--;\n  }\n  for (it = m.begin(); it != m.end(); it++) {\n    if (it->second > 0) x += it->second;\n  }\n  cout << x;\n}\n"
        },
        {
            "language": 3,
            "solution": "l1 = [0,0,0,0,0,0,0,0,0]\nl2 = [0,0,0,0,0,0,0,0,0]\na= int(input())\nfor i in range(a):\n    k=input()\n    if k=='XXXS':\n        l1[0]+=1\n    if k=='XXS':\n        l1[1]+=1\n    if k=='XS':\n        l1[2]+=1\n    if k=='S':\n        l1[3]+=1\n    if k=='M':\n        l1[4]+=1\n    if k=='L':\n        l1[5]+=1\n    if k=='XL':\n        l1[6]+=1\n    if k=='XXL':\n        l1[7]+=1\n    if k=='XXXL':\n        l1[8]+=1\nfor i in range(a):\n    k=input()\n    if k=='XXXS':\n        l2[0]+=1\n    if k=='XXS':\n        l2[1]+=1\n    if k=='XS':\n        l2[2]+=1\n    if k=='S':\n        l2[3]+=1\n    if k=='M':\n        l2[4]+=1\n    if k=='L':\n        l2[5]+=1\n    if k=='XL':\n        l2[6]+=1\n    if k=='XXL':\n        l2[7]+=1\n    if k=='XXXL':\n        l2[8]+=1\ns=0\nfor i in range(len(l1)):\n    if((l1[i]<l2[i])):\n        s+=(l2[i]-l1[i])\nprint(s)\n\n\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class A{\n  public static void main(String[] args){\n    Scanner sb = new Scanner(System.in);\n    int n;\n    n = sb.nextInt();\n    String[] a = new String[n];\n    HashMap<String, Integer> tallas = new HashMap<>(9);\n    for(int i = 0; i < n; i++){\n      a[i] = sb.next();\n      if(!tallas.containsKey(a[i])) tallas.put(a[i], 1);\n      else tallas.put(a[i], tallas.get(a[i])+1);\n    }\n    String[] b = new String[n];\n    for(int i = 0; i < n; i++){\n      b[i] = sb.next();\n      if(tallas.containsKey(b[i])) {\n        if(tallas.get(b[i]) == 0) tallas.remove(b[i]);\n        else tallas.put(b[i], tallas.get(b[i])-1);\n      }\n    }\n    int total_left = 0;\n    for(Integer i: tallas.values()){\n      total_left += i;\n    }\n    System.out.println(total_left);\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "T=int(input())\nb={}\nfor i in range(T):\n    p=input()\n    if(p not in b):\n        b[p]=0\n    b[p]+=1\nfor i in range(T):\n    p=input()\n    if(p not in b):\n        b[p]=0\n    b[p]-=1\nanswer=0\nfor j in b:\n    if(b[j]>0):\n        answer+=b[j]\nprint(answer)\n"
        },
        {
            "language": 1,
            "solution": "if __name__ == \"__main__\":\n    n = int(raw_input())\n    old = [raw_input() for _ in range(n)]\n    new = [raw_input() for _ in range(n)]\n\n    sizes = (\n        \"M\",\n        \"S\",\n        \"L\",\n        \"XS\",\n        \"XL\",\n        \"XXS\",\n        \"XXL\",\n        \"XXXS\",\n        \"XXXL\",\n    )\n\n    changes = 0\n    sizes_dict = {\n        size: {\n            \"old\": [s for s in old if s == size].count(size),\n            \"new\": [s for s in new if s == size].count(size)\n        } for size in sizes\n    }\n\n    for size, counts in sizes_dict.items():\n        changes += abs(counts[\"old\"] - counts[\"new\"])\n    print(changes / 2)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\ns1 = []\ns2 = []\n\nfor a in range(n):\n\ts1.append(input())\nfor a in range(n):\n\tx = input()\n\tif x in s1:\n\t\ts1.remove(x)\n\telse:\n\t\ts2.append(x)\n\nprint(len(s1))\n"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\n\ndef printArr(arr):\n    for i in arr:\n        print(i,end=\" \")\ndef proA(arr1,arr2):\n    dic2=Counter(arr2)\n    ans=0\n    for i in arr1:\n        if(i in dic2):\n            if(dic2[i]!=0):\n                dic2[i]-=1\n                continue\n        ans+=1\n    return ans\nt=int(input())\narr1,arr2=[],[]\n\nfor i in range(t):\n    n=(input())\n    arr1.append(n)\n    \nfor i in range(t):\n    n=(input())\n    arr2.append(n)\nprint(proA(arr1,arr2))"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\n#pragma warning(disable 4996)\n#pragma warning(disable 4996)\nconst int dr[]{-1, -1, 0, 1, 1, 1, 0, -1};\nconst int dc[]{0, 1, 1, 1, 0, -1, -1, -1};\nconst double PI = acos(-1), EPS = 1e-7;\nconst int OO = 0x3f3f3f3f, N = 1e7 + 5, mod = 1e9 + 7;\nusing namespace std;\nstruct point {\n  long long x, y;\n};\nlong long power(long long x, long long y) {\n  if (y == 0) return 1;\n  if (y == 1) return x;\n  long long r = power(x, y / 2);\n  return r * r * power(x, y % 2);\n}\nlong long dis(point a, point b) {\n  long long x = a.x - b.x, y = a.y - b.y;\n  return x * x + y * y;\n}\nvoid fast() {\n  std::ios_base::sync_with_stdio(0);\n  cin.tie(NULL);\n  cout.tie(NULL);\n}\nbool cmp(pair<int, int> p1, pair<int, int> p2) {\n  if (p1.first != p2.first) return p1.second < p2.second;\n}\nlong long gcd(long long n, long long m) { return !m ? n : gcd(m, n % m); }\nint main() {\n  fast();\n  long long n;\n  cin >> n;\n  string s;\n  vector<string> v(n);\n  vector<string> v1(n);\n  for (int i = 0; i < n; i++) cin >> v[i];\n  for (int i = 0; i < n; i++) cin >> v1[i];\n  long long ans = 0;\n  for (int i = 0; i < n; i++) {\n    long long ok = 1;\n    for (int j = 0; j < n; j++) {\n      if (v[i] == v1[j] && v1[j] != \"0\" && v[i] != \"0\") {\n        v[i] = \"0\";\n        v1[j] = \"0\";\n        ok = 0;\n      }\n    }\n    if (ok == 1) ans++;\n  }\n  cout << ans << \"\\n\";\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nsizes = [\"M\",\"XL\",\"XS\",\"XXL\",\"XXS\",\"XXXL\",\"XXXS\",\"L\",\"S\"]\ndef find(ai):\n    for i in range(9):\n        if sizes[i] == ai:\n            return i\n    return -1\ns2 = [0] * 9\nfor i in range(n):\n    ai = input()\n    s2[find(ai)] += 1\n    \nfor i in range(n):\n    bi = input()\n    s2[find(bi)] -= 1\nans = 0\nfor i in range(9):\n    ans += abs(s2[i])\nprint(ans // 2)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nold = []\nnew = []\nneededTime = 0\nfor i in range(n):\n    old.append(input())\n\nfor i in range(n):\n    new.append(input())\nfor i in range(len(old)):\n    for j in range(len(new)):\n        if old[i] == new[j]:\n            old[i] = ''\n            new[j] = ''\nfor i in range(len(old)):\n    if old[i] == '':\n        continue\n    for j in range(len(new)):\n        if new[j] == '':\n            continue\n        if len(old[i]) == len(new[j]) == 1 and old[i] != new[j]:\n            neededTime += 1\n            old[i] = ''\n            new[j] = ''\n            break\n        elif len(old[i]) == len(new[j]) == 2 and old[i] != new[j]:\n            neededTime += 1\n            old[i] = ''\n            new[j] = ''\n            break\n        elif len(old[i]) == len(new[j]) == 3 and old[i] != new[j]:\n            neededTime += 1\n            old[i] = ''\n            new[j] = ''\n            break\n        elif len(old[i]) == len(new[j]) == 4 and old[i] != new[j]:\n            neededTime += 1\n            old[i] = ''\n            new[j] = ''\n            break\nprint(neededTime)\n"
        },
        {
            "language": 3,
            "solution": "import math\nn=int(input())\na={\"L\":0,\"M\":0,\"S\":0,\"XL\":0,\"XS\":0,\"XXL\":0,\"XXS\":0,\"XXXL\":0,\"XXXS\":0};\nb={\"L\":0,\"M\":0,\"S\":0,\"XL\":0,\"XS\":0,\"XXL\":0,\"XXS\":0,\"XXXL\":0,\"XXXS\":0};\nfor i in range(n):\n\ts=input()\n\ta[s]+=1\nfor i in range(n):\n\ts=input()\n\tb[s]+=1\nans=0\na=list(a.values())\nb=list(b.values())\nfor i in range(len(a)):\n\tif a[i]<b[i]:\n\t\tans+=b[i]-a[i]\nprint(ans)"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.math.*;\nimport java.util.regex.*;\npublic class App {\n\nstatic class InputReader\n\t{\n\t    private final InputStream stream;\n\t    private final byte[] buf = new byte[8192];\n\t    private int curChar, snumChars;\n\n\t    public InputReader(InputStream st) {\n\t      this.stream = st;\n\t    }\n\n\t    public int read() {\n\t      if (snumChars == -1)\n\t        throw new InputMismatchException();\n\t      if (curChar >= snumChars) {\n\t        curChar = 0;\n\t        try {\n\t          snumChars = stream.read(buf);\n\t        } catch (IOException e) {\n\t          throw new InputMismatchException();\n\t        }\n\t        if (snumChars <= 0)\n\t          return -1;\n\t      }\n\t      return buf[curChar++];\n\t    }\n\n\t    public int nextInt() {\n\t      int c = read();\n\t      while (isSpaceChar(c)) {\n\t        c = read();\n\t      }\n\t      int sgn = 1;\n\t      if (c == '-') {\n\t        sgn = -1;\n\t        c = read();\n\t      }\n\t      int res = 0;\n\t      do {\n\t        res *= 10;\n\t        res += c - '0';\n\t        c = read();\n\t      } while (!isSpaceChar(c));\n\t      return res * sgn;\n\t    }\n\n\t    public long nextLong() {\n\t      int c = read();\n\t      while (isSpaceChar(c)) {\n\t        c = read();\n\t      }\n\t      int sgn = 1;\n\t      if (c == '-') {\n\t        sgn = -1;\n\t        c = read();\n\t      }\n\t      long res = 0;\n\t      do {\n\t        res *= 10;\n\t        res += c - '0';\n\t        c = read();\n\t      } while (!isSpaceChar(c));\n\t      return res * sgn;\n\t    }\n\n\t    public int[] nextIntArray(int n) {\n\t      int a[] = new int[n];\n\t      for (int i = 0; i < n; i++) {\n\t        a[i] = nextInt();\n\t      }\n\t      return a;\n\t    }\n\n\t    public String readString() {\n\t      int c = read();\n\t      while (isSpaceChar(c)) {\n\t        c = read();\n\t      }\n\t      StringBuilder res = new StringBuilder();\n\t      do {\n\t        res.appendCodePoint(c);\n\t        c = read();\n\t      } while (!isSpaceChar(c));\n\t      return res.toString();\n\t    }\n\n\t    public String nextLine() {\n\t      int c = read();\n\t      while (isSpaceChar(c))\n\t        c = read();\n\t      StringBuilder res = new StringBuilder();\n\t      do {\n\t        res.appendCodePoint(c);\n\t        c = read();\n\t      } while (!isEndOfLine(c));\n\t      return res.toString();\n\t    }\n\n\t    public boolean isSpaceChar(int c) {\n\t      return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n\t    }\n\n\t    private boolean isEndOfLine(int c) {\n\t      return c == '\\n' || c == '\\r' || c == -1;\n\t    }\n\t}\n\tpublic static void main(String[] args) throws Exception\n\t{\n\t\tInputReader in = new InputReader(System.in);\n\t\tint n = in.nextInt();\n\t\tString[] arr = new String[n];\n\t\tfor(int i=0;i<n;i++)\n\t\t\tarr[i] = in.readString();\n\t\tString[] brr = new String[n];\n\t\tfor(int i=0;i<n;i++)\n\t\t\tbrr[i] = in.readString();\n\t\tint pre = 0;\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t\tString temp = brr[i];\n\t\t\tboolean done = false;\n\t\t\tfor(int j=0;j<n;j++)\n\t\t\t{\n\t\t\t\tif(temp.equals(arr[j]))\n\t\t\t\t{\n\t\t\t\t\tarr[j] = \"krit\";\n\t\t\t\t\tpre++;\n\t\t\t\t\tdone = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tint ans = n - pre;\n\t\tSystem.out.println(ans);\n\t}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint N;\nstring str;\nint l, l1, l2, l3, s, s1, s2, s3, m;\nint main() {\n  cin >> N;\n  for (int i = 1, I = N; i <= I; ++i) {\n    cin >> str;\n    if (str == \"XXXS\")\n      ++s3;\n    else if (str == \"XXS\")\n      ++s2;\n    else if (str == \"XS\")\n      ++s1;\n    else if (str == \"S\")\n      ++s;\n    else if (str == \"M\")\n      ++m;\n    else if (str == \"L\")\n      ++l;\n    else if (str == \"XL\")\n      ++l1;\n    else if (str == \"XXL\")\n      ++l2;\n    else if (str == \"XXXL\")\n      ++l3;\n  }\n  for (int i = 1, I = N; i <= I; ++i) {\n    cin >> str;\n    if (str == \"XXXS\")\n      --s3;\n    else if (str == \"XXS\")\n      --s2;\n    else if (str == \"XS\")\n      --s1;\n    else if (str == \"S\")\n      --s;\n    else if (str == \"M\")\n      --m;\n    else if (str == \"L\")\n      --l;\n    else if (str == \"XL\")\n      --l1;\n    else if (str == \"XXL\")\n      --l2;\n    else if (str == \"XXXL\")\n      --l3;\n  }\n  int ans = abs(s3) + abs(s2) + abs(s1);\n  if (s * l >= 0)\n    ans += abs(m);\n  else if (s * m >= 0)\n    ans += abs(l);\n  else\n    ans += abs(s);\n  printf(\"%d\\n\", ans);\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nimport time\n\nn   = int(input())\n\nstart = time.time()\n\nda = {'S':0, 'XS':0, 'XXS':0, 'XXXS':0, 'M':0, 'L':0, 'XL':0, 'XXL':0, 'XXXL':0 }\ndb = da.copy()\n\nfor i in range(n):\n    da[input()] += 1\n\nfor j in range(n):\n    db[input()] += 1\n\nans = abs(da['XXXL'] - db['XXXL'])+abs(da['XXL'] - db['XXL'])+abs(da['XL']-db['XL'])\ns   = da['S']-db['S']\nm   = da['M']-db['M']\nl   = da['L']-db['L']\n\nif s > 0:\n    ans += s\nif m > 0:\n    ans += m\nif l > 0:\n    ans += l\n\nprint(ans)\nfinish = time.time()\n#print(finish - start)\n\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nd=dict()\nd1=dict()\nfor i in range(n):\n    l=input()\n    if l not in d:\n        d[l]=1\n    else:\n        d[l]+=1\nx=0\nfor i in range(n):\n    l=input()\n    if l in d1:\n        d1[l]+=1\n    else:\n        d1[l]=1\nfor i in d1:\n    if i in d:\n        x+=max(d1[i]-d[i],0)\n    else:\n        x+=d1[i]\nprint(x)\n        \n        \n        \n        \n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.ArrayList;\nimport java.util.StringTokenizer;\n\npublic class CF {\n\n    public static void main(String[] args) throws IOException {\n        Scanner sc = new Scanner(System.in);\n        PrintWriter out = new PrintWriter(System.out);\n        int n = sc.nextInt();\n        String[] have = new String[n];\n        String[] need = new String[n];\n        for (int i = 0; i < n; i++)\n            have[i] = sc.next();\n        for (int j = 0; j < n; j++)\n            need[j] = sc.next();\n        int ans = 0;\n        for (int k = 0; k <= 4; k++) {\n            for (int i = 0; i < n; i++) {\n                if (have[i].isEmpty()) continue;\n                for (int j = 0; j < n; j++) {\n                    if (need[j].isEmpty()) continue;\n                    if (have[i].length() != need[j].length()) continue;\n                    if (change(have[i], need[j]) == k) {\n                        ans += k;\n                        have[i] = \"\";\n                        need[j] = \"\";\n                    }\n                }\n            }\n        }\n        out.println(ans);\n        out.flush();\n        out.close();\n    }\n\n    static ArrayList<String> len(String[] x, int n) {\n        ArrayList<String> ans = new ArrayList<>();\n        for (String y : x)\n            if (y.length() == n)\n                ans.add(y);\n        return ans;\n    }\n\n    static int change(String x, String y) {\n        int counter = 0;\n        for (int i = 0; i < x.length(); i++)\n            if (x.charAt(i) != y.charAt(i))\n                counter++;\n        return counter;\n    }\n\n    static class Scanner {\n        StringTokenizer st;\n        BufferedReader br;\n\n        public Scanner(InputStream s) {\n            br = new BufferedReader(new InputStreamReader(s));\n        }\n\n        public String next() throws IOException {\n            while (st == null || !st.hasMoreTokens())\n                st = new StringTokenizer(br.readLine());\n            return st.nextToken();\n        }\n\n        public int nextInt() throws IOException {\n            return Integer.parseInt(next());\n        }\n\n        public long nextLong() throws IOException {\n            return Long.parseLong(next());\n        }\n\n        public String nextLine() throws IOException {\n            return br.readLine();\n        }\n\n        public double nextDouble() throws IOException {\n            String x = next();\n            StringBuilder sb = new StringBuilder(\"0\");\n            double res = 0, f = 1;\n            boolean dec = false, neg = false;\n            int start = 0;\n            if (x.charAt(0) == '-') {\n                neg = true;\n                start++;\n            }\n            for (int i = start; i < x.length(); i++)\n                if (x.charAt(i) == '.') {\n                    res = Long.parseLong(sb.toString());\n                    sb = new StringBuilder(\"0\");\n                    dec = true;\n                } else {\n                    sb.append(x.charAt(i));\n                    if (dec)\n                        f *= 10;\n                }\n            res += Long.parseLong(sb.toString()) / f;\n            return res * (neg ? -1 : 1);\n        }\n\n        public boolean ready() throws IOException {\n            return br.ready();\n        }\n\n    }\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.HashMap;\nimport java.util.StringTokenizer;\n\npublic class Problem1000A {\n\n\tpublic static void main(String[] args) throws Exception {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tInputReader in = new InputReader(inputStream);\n\t\tPrintWriter out = new PrintWriter(outputStream);\n\n\t\tint n = in.nextInt();\n\t\tHashMap<String, Integer> map = new HashMap<String, Integer>();\n\t\tmap.put(\"XXXS\", 0);\n\t\tmap.put(\"XXS\", 0);\n\t\tmap.put(\"XS\", 0);\n\t\tmap.put(\"S\", 0);\n\t\tmap.put(\"M\", 0);\n\t\tmap.put(\"L\", 0);\n\t\tmap.put(\"XL\", 0);\n\t\tmap.put(\"XXL\", 0);\n\t\tmap.put(\"XXXL\", 0);\n\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tString s = in.nextLine();\n\t\t\tInteger q = map.get(s);\n\t\t\tmap.put(s, ++q);\n\t\t}\n\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tString s = in.nextLine();\n\t\t\tInteger q = map.get(s);\n\t\t\tmap.put(s, --q);\n\t\t}\n\n\t\tout.println(map.values().stream().mapToInt(a -> Math.abs(a)).sum() / 2);\n\t\tout.close();\n\t\treturn;\n\t}\n\n\tstatic long conv(long num, long base) {\n\t\tlong res = 0;\n\t\tlong p = 0;\n\t\twhile (num != 0) {\n\t\t\tres += p * (num % base);\n\t\t\tnum /= base;\n\t\t\tp = p * 10;\n\t\t}\n\n\t\treturn res;\n\t}\n\n\tstatic class InputReader {\n\t\tBufferedReader reader;\n\n\t\tStringTokenizer tokenizer;\n\n\t\tpublic InputReader(InputStream stream) {\n\t\t\treader = new BufferedReader(new InputStreamReader(stream), 32768);\n\t\t\ttokenizer = null;\n\t\t}\n\n\t\tprivate String next() {\n\t\t\twhile (tokenizer == null || !tokenizer.hasMoreTokens()) {\n\t\t\t\ttry {\n\t\t\t\t\ttokenizer = new StringTokenizer(reader.readLine(), \" \\t\\n\\r\\f,\");\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tthrow new RuntimeException(e);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn tokenizer.nextToken();\n\t\t}\n\n\t\tpublic int nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tpublic long nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tpublic int[] nextIntArray(int n) {\n\t\t\treturn nextIntArray(n, 0);\n\t\t}\n\n\t\tpublic int[] nextIntArray(int n, int offset) {\n\t\t\tint[] a = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\ta[i] = nextInt() + offset;\n\t\t\t}\n\t\t\treturn a;\n\t\t}\n\n\t\tpublic int[][] nextIntMatrix(int n, int m) {\n\t\t\tint[][] a = new int[n][m];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tfor (int j = 0; j < m; j++) {\n\t\t\t\t\ta[i][j] = nextInt();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn a;\n\t\t}\n\n\t\tpublic String nextLine() {\n\t\t\treturn next();\n\t\t}\n\n\t\tpublic char[] nextLineCharArray() {\n\t\t\treturn next().toCharArray();\n\t\t}\n\t}\n\n}"
        },
        {
            "language": 4,
            "solution": "import static java.lang.Math.max;\nimport static java.lang.Math.min;\nimport static java.lang.Math.abs;\nimport java.util.*;\nimport java.io.*;\n\npublic class x1000A\n{\n    public static void main(String hi[]) throws Exception\n    {\n        BufferedReader infile = new BufferedReader(new InputStreamReader(System.in));\n        StringTokenizer st = new StringTokenizer(infile.readLine());\n        int N = Integer.parseInt(st.nextToken());\n        String[] arr = new String[N];\n        for(int i=0; i < N; i++)\n            arr[i] = infile.readLine();\n        String[] brr = new String[N];\n        for(int i=0; i < N; i++)\n            brr[i] = infile.readLine();\n        int[] map = new int[420];\n        map['S'] = 1; map['M'] = 2;\n        int[][] freq1 = new int[3][5];\n        for(String s: arr)\n        {\n            int size = s.length();\n            char c = s.charAt(size-1);\n            freq1[map[c]][size]++;\n        }\n        int[][] freq2 = new int[3][5];\n        for(String s: brr)\n        {\n            int size = s.length();\n            char c = s.charAt(size-1);\n            freq2[map[c]][size]++;\n        }\n        int res = 0;\n        for(int size=1; size <= 4; size++)\n        {\n            int diff = 0;\n            for(int i=0; i < 3; i++)\n                diff = max(diff, abs(freq1[i][size]-freq2[i][size]));\n            res += diff;\n        }\n        System.out.println(res);\n    }\n    public static int[] readArr(int N, BufferedReader infile, StringTokenizer st) throws Exception\n    {\n        int[] arr = new int[N];\n        st = new StringTokenizer(infile.readLine());\n        for(int i=0; i < N; i++)\n            arr[i] = Integer.parseInt(st.nextToken());\n        return arr;\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 10;\nchar s[maxn];\nmap<string, int> a, b;\nbool cmp(const string& a, const string& b) {\n  if (a.length() == b.length()) {\n    if (a == \"M\") {\n      return false;\n    } else if (b == \"M\") {\n      return true;\n    }\n    return a < b;\n  }\n  return a.length() < b.length();\n}\nint main() {\n  int n;\n  scanf(\"%d\", &n);\n  for (int i = 0; i < n; ++i) {\n    scanf(\"%s\", s);\n    ++a[s];\n  }\n  for (int i = 0; i < n; ++i) {\n    scanf(\"%s\", s);\n    ++b[s];\n  }\n  int ans = 0;\n  ans += max(max(abs(a[\"S\"] - b[\"S\"]), abs(a[\"M\"] - b[\"M\"])),\n             abs(a[\"L\"] - b[\"L\"]));\n  ans += abs(a[\"XS\"] - b[\"XS\"]);\n  ans += abs(a[\"XXS\"] - b[\"XXS\"]);\n  ans += abs(a[\"XXXS\"] - b[\"XXXS\"]);\n  printf(\"%d\\n\", ans);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  ;\n  long long int n;\n  cin >> n;\n  string s;\n  map<string, int> mp;\n  mp[\"M\"] = 0;\n  mp[\"L\"] = 0;\n  mp[\"S\"] = 0;\n  mp[\"XS\"] = 0;\n  mp[\"XXS\"] = 0;\n  mp[\"XXXS\"] = 0;\n  mp[\"XL\"] = 0;\n  mp[\"XXL\"] = 0;\n  mp[\"XXXL\"] = 0;\n  for (int i = 0; i < n; i++) {\n    cin >> s;\n    mp[s]++;\n  }\n  map<string, int> mp1;\n  mp1[\"M\"] = 0;\n  mp1[\"L\"] = 0;\n  mp1[\"S\"] = 0;\n  mp1[\"XS\"] = 0;\n  mp1[\"XXS\"] = 0;\n  mp1[\"XXXS\"] = 0;\n  mp1[\"XL\"] = 0;\n  mp1[\"XXL\"] = 0;\n  mp1[\"XXXL\"] = 0;\n  for (int i = 0; i < n; i++) {\n    cin >> s;\n    mp1[s]++;\n  }\n  long long int ans = 0;\n  if (mp1[\"M\"] - mp[\"M\"] > 0) ans = mp1[\"M\"] - mp[\"M\"];\n  if (mp1[\"L\"] - mp[\"L\"] > 0) ans += mp1[\"L\"] - mp[\"L\"];\n  if (mp1[\"S\"] - mp[\"S\"] > 0) ans += mp1[\"S\"] - mp[\"S\"];\n  if (mp1[\"XS\"] - mp[\"XS\"] > 0) ans += mp1[\"XS\"] - mp[\"XS\"];\n  if (mp1[\"XXS\"] - mp[\"XXS\"] > 0) ans += mp1[\"XXS\"] - mp[\"XXS\"];\n  if (mp1[\"XXXS\"] - mp[\"XXXS\"] > 0) ans += mp1[\"XXXS\"] - mp[\"XXXS\"];\n  if (mp1[\"XL\"] - mp[\"XL\"] > 0) ans += mp1[\"XL\"] - mp[\"XL\"];\n  if (mp1[\"XXL\"] - mp[\"XXL\"] > 0) ans += mp1[\"XXL\"] - mp[\"XXL\"];\n  if (mp1[\"XXXL\"] - mp[\"XXXL\"] > 0) ans += mp1[\"XXXL\"] - mp[\"XXXL\"];\n  cout << ans << \"\\n\";\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nold = sorted([input() for i in range(n)])\nnew = sorted([input() for i in range(n)])\ns = 0\n\nfor t in new:\n    if(t in old):\n        old.remove(t)\n    else:\n        s += 1\n\nprint(s)"
        },
        {
            "language": 3,
            "solution": "import collections\nn = int(input())\na = []\nb = []\nfor i in range(n):\n    s = input()\n    a.append(s)\n\nfor i in range(n):\n    s = input()\n    b.append(s)\n\n\n\n\nan = dict(collections.Counter(a))\nbn = dict(collections.Counter(b))\n\np = n\nfor i,j in an.items():\n    if i in bn.keys():\n        p -= min(j, bn[i])\n#print(an,bn)\n\nprint(p)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nold = [input() for _ in range(n)]\nnew = [input() for _ in range(n)]\n\ncnt = 0\nfor i in old:\n    if i in new:\n        new.remove(i)\n        cnt += 1\n\nprint(n - cnt)"
        },
        {
            "language": 3,
            "solution": "def main():\n\tn = int(input())\n\ta = [input() for i in range(n)]\n\tb = [input() for i in range(n)]\n\tdct = {\"M\":0, \"XXXL\":0, \"XXXS\":0, \"XXS\":0, \"XXL\":0, \"XL\":0, \"XS\":0, \"S\":0, \"L\":0}\n\tdct2 = {\"M\":0, \"XXXL\":0, \"XXXS\":0, \"XXS\":0, \"XXL\":0, \"XL\":0, \"XS\":0, \"S\":0, \"L\":0}\n\tfor i in range(n):\n\t\tdct[a[i]] += 1\n\t\tdct2[b[i]] += 1\n\tret = 0\n\tfor i in dct:\n\t\tret += abs(dct[i] - dct2[i])\n\tret = ret // 2\n\tprint(ret)\n\treturn 0\nmain()"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nclothes = {}\nfor i in range(n):\n    size = input()\n    if size not in clothes:\n        clothes[size] = 0\n    clothes[size] += 1\n    \nans = 0\nfor i in range(n):\n    size = input()\n    if size not in clothes or clothes[size] == 0:\n        ans += 1\n    else:\n        clothes[size] -= 1 \n\nprint(ans)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long MAX = 1000000000000000001;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  int n;\n  cin >> n;\n  string s[n], s1[n];\n  map<string, int> x;\n  for (int i = 0; i < n; i++) {\n    cin >> s[i];\n    x[s[i]]++;\n  }\n  int cnt = 0;\n  for (int i = 0; i < n; i++) {\n    cin >> s1[i];\n    if (x[s1[i]] != 0) {\n      x[s1[i]]--;\n    } else {\n      cnt++;\n    }\n  }\n  cout << cnt;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nold = []\nnew = []\nfor i in range(n):\n    old.append(input())\nfor i in range(n):\n    x = input()\n    if(x not in old):\n        new.append(x)\n    else:\n        old.remove(x)\nprint(len(new))"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl1=[]\nfor i in range(n):\n    s=str(input())\n    l1.append(s)\nl2=[]\nfor i in range(n):\n    s=str(input())\n    l2.append(s)\nfor t in l1:\n    if t in l2:\n        l2.remove(t)\nprint (len(l2))\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class q1\n{\n\tpublic static void main(String[] args) \n\t{\n\t\tScanner s=new Scanner(System.in);\n\t\tint n=s.nextInt();\n\t\tint[] arr1=new int[9];\n\t\tint[] arr2=new int[9];\n\t\tString ss;\n\t\ts.nextLine();\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t\tss=s.nextLine();\n\t\t\tif(ss.equals(\"M\"))\n\t\t\t\tarr1[0]++;\n\t\t\telse if(ss.equals(\"S\"))\n\t\t\t\tarr1[1]++;\n\t\t\telse if(ss.equals(\"L\"))\n\t\t\t\tarr1[2]++;\n\t\t\telse if(ss.equals(\"XS\"))\n\t\t\t\tarr1[3]++;\n\t\t\telse if(ss.equals(\"XL\"))\n\t\t\t\tarr1[4]++;\n\t\t\telse if(ss.equals(\"XXS\"))\n\t\t\t\tarr1[5]++;\n\t\t\telse if(ss.equals(\"XXL\"))\n\t\t\t\tarr1[6]++;\n\t\t\telse if(ss.equals(\"XXXS\"))\n\t\t\t\tarr1[7]++;\n\t\t\telse if(ss.equals(\"XXXL\"))\n\t\t\t\tarr1[8]++;\n\t\t}\t\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t\tss=s.nextLine();\n\t\t\tif(ss.equals(\"M\"))\n\t\t\t\tarr2[0]++;\n\t\t\telse if(ss.equals(\"S\"))\n\t\t\t\tarr2[1]++;\n\t\t\telse if(ss.equals(\"L\"))\n\t\t\t\tarr2[2]++;\n\t\t\telse if(ss.equals(\"XS\"))\n\t\t\t\tarr2[3]++;\n\t\t\telse if(ss.equals(\"XL\"))\n\t\t\t\tarr2[4]++;\n\t\t\telse if(ss.equals(\"XXS\"))\n\t\t\t\tarr2[5]++;\n\t\t\telse if(ss.equals(\"XXL\"))\n\t\t\t\tarr2[6]++;\n\t\t\telse if(ss.equals(\"XXXS\"))\n\t\t\t\tarr2[7]++;\n\t\t\telse if(ss.equals(\"XXXL\"))\n\t\t\t\tarr2[8]++;\n\t\t}\t\n\t\tint min;\n\t\tfor(int i=0;i<9;i++)\n\t\t{\n\t\t\tif(arr1[i]<arr2[i])\n\t\t\t\tmin=arr1[i];\n\t\t\telse\n\t\t\t\tmin=arr2[i];\n\t\t\tarr1[i]-=min;\n\t\t\tarr2[i]-=min;\n\t\t}\n\t\tint sum=0;\n\t\tfor(int i=0;i<9;i++)\n\t\t{\n\t\t\tsum+=arr1[i];\n\t\t}\n\t\tSystem.out.println(sum);\n\t\t//System.out.println(Arrays.toString(arr2));\n\t}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nmap<string, int> ma;\nint main() {\n  int n;\n  cin >> n;\n  for (int d = -1; d <= 1; d += 2) {\n    for (int i = 0; i < n; ++i) {\n      string s;\n      cin >> s;\n      ma[s] += d;\n    }\n  }\n  int ans = 0;\n  for (auto e : ma) ans += abs(e.second);\n  printf(\"%d\\n\", ans / 2);\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\no = {}\nfor i in range(n):\n    s = input()\n    if s in o:\n        o[s] += 1\n    else:\n        o[s] = 1\n\nfor i in range(n):\n    s = input()\n    if s in o:\n        o[s] -= 1\n    else:\n        o[s] = -1\n\ntotal = 0\nfor key in o:\n    total += abs(o[key])\n\nprint(str(int(total / 2)))"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nnum = []\nfor i in range(n):\n    s = input()\n    num.append(s)\nnum2 = []\nfor i in range(n):\n    s = input()\n    num2.append(s)\ni = 0\nans = 0\nwhile i < len(num):\n    if num[i] in num2:\n        num2.pop(num2.index(num[i]))\n        num.pop(i)\n    else:\n        i += 1\nwhile len(num):\n    x = num[0]\n    if True:\n        best = -1\n        min_el = 10000\n        for i in range(len(num2)):\n            if (len(num2[i]) == len(x)):\n                ans += 1\n                num2.pop(i)\n                num.pop(0)\n                break\nprint(ans)"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class cfedu46a{\n\tpublic static void main(String [] args) throws IOException{\n\t\tInputReader in = new InputReader(\"cfedu46a.in\");\n\t\t\n\t\tint [] arr = new int[9];\n\t\tint [] arr2 = new int[9];\n\t\tint [] size = {4, 3, 2, 1, 1, 1, 2, 3, 4};\n\t\tint n = in.nextInt();\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tString s = in.next();\n\t\t\tswitch(s.length()){\n\t\t\t\tcase 1: \n\t\t\t\t\tif(s.charAt(0) == 'S')\n\t\t\t\t\t\tarr[3]++;\n\t\t\t\t\tif(s.charAt(0) == 'M')\n\t\t\t\t\t\tarr[4]++;\n\t\t\t\t\tif(s.charAt(0) == 'L')\n\t\t\t\t\t\tarr[5]++;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif(s.charAt(s.length() - 1) == 'S'){\n\t\t\t\t\t\tarr[3 - (s.length() - 1)]++;\n\t\t\t\t\t}\n\t\t\t\t\tif(s.charAt(s.length() - 1) == 'L'){\n\t\t\t\t\t\tarr[5 + (s.length() - 1)]++;\n\t\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tString s = in.next();\n\t\t\tswitch(s.length()){\n\t\t\t\tcase 1: \n\t\t\t\t\tif(s.charAt(0) == 'S')\n\t\t\t\t\t\tarr2[3]++;\n\t\t\t\t\tif(s.charAt(0) == 'M')\n\t\t\t\t\t\tarr2[4]++;\n\t\t\t\t\tif(s.charAt(0) == 'L')\n\t\t\t\t\t\tarr2[5]++;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif(s.charAt(s.length() - 1) == 'S'){\n\t\t\t\t\t\tarr2[3 - (s.length() - 1)]++;\n\t\t\t\t\t}\n\t\t\t\t\tif(s.charAt(s.length() - 1) == 'L'){\n\t\t\t\t\t\tarr2[5 + (s.length() - 1)]++;\n\t\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t\tint cnt = 0;\n\t\tfor(int i = 0; i < 9; i++){\n\t\t\tif(arr[i] == arr2[i])\n\t\t\t\tcontinue;\n\t\t\telse{\n\t\t\t\tcnt += (arr2[i] - arr[i] > 0? arr2[i] - arr[i]: 0);\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(cnt);\n\t}\n\n\tstatic class InputReader {\n\t\tpublic BufferedReader reader;\n\t\tpublic StringTokenizer tokenizer;\n\n\t\tpublic InputReader(String s) {\n\t\t\ttry{\n\t\t\t\treader = new BufferedReader(new FileReader(s), 32768);\n\t\t\t}\n\t\t\tcatch (Exception e){\t\t\n\t\t\t\treader = new BufferedReader(new InputStreamReader(System.in), 32768);\n\t\t\t}\n\t\t\ttokenizer = null;\n\t\t}\n\t\tpublic String next() {\n\t\t\twhile (tokenizer == null || !tokenizer.hasMoreTokens()) {\n\t\t\t\ttry {\n\t\t\t\t    tokenizer = new StringTokenizer(reader.readLine());\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t    throw new RuntimeException(e);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn tokenizer.nextToken();\n\t\t}\n\n\t\tpublic int nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\t}\n}"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nlast=[input() for i in range(n)]\nnew=[input() for i in range(n)]\nresult=0\nfor i,x in enumerate(new):\n    for j,y in enumerate(last):\n        if x==y:\n            new[i]=''\n            last[j]=''\n            break\nfor i,x in enumerate(new):\n    if x!='':\n        res,ind=100000000000000000,0\n        for j,y in enumerate(last):\n            if len(x)==len(y):\n                cout=0\n                for item1,item2 in zip(x,y):\n                    if item1!=item2:cout+=1\n                if cout<res:\n                    res=cout\n                    ind=j\n        result+=res\n        last[ind]=''\nprint(result)"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.math.*;\nimport java.io.*;\npublic class Solution {\n\n    public static void main(String[] args) {\n        \n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int[] nb = new int[9];\n        for(int i=0;i<n;i++){\n            String s = sc.next();\n            if(s.equals(\"XS\")) nb[0]++;\n            if(s.equals(\"S\")) nb[1]++;\n            if(s.equals(\"XXS\")) nb[2]++;\n            if(s.equals(\"XXXS\")) nb[3]++;\n            if(s.equals(\"XL\")) nb[4]++;\n            if(s.equals(\"L\")) nb[5]++;\n            if(s.equals(\"XXL\")) nb[6]++;\n            if(s.equals(\"XXXL\")) nb[7]++;\n            if(s.equals(\"M\")) nb[8]++;\n            \n        }\n        for(int i=0;i<n;i++){\n            String s = sc.next();\n            if(s.equals(\"XS\")) nb[0]--;\n            if(s.equals(\"S\")) nb[1]--;\n            if(s.equals(\"XXS\")) nb[2]--;\n            if(s.equals(\"XXXS\")) nb[3]--;\n            if(s.equals(\"XL\")) nb[4]--;\n            if(s.equals(\"L\")) nb[5]--;\n            if(s.equals(\"XXL\")) nb[6]--;\n            if(s.equals(\"XXXL\")) nb[7]--;\n            if(s.equals(\"M\")) nb[8]--;\n            \n        }\n        int rep = 0;\n        for(int i=0;i<9;i++){\n            if(nb[i]>0) rep += nb[i];\n        }\n        System.out.println(rep);\n        \n\t}\n\n\n}"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class problem1000A {\n\tpublic static void main(String[] args) {\n\t\tScanner console = new Scanner(System.in);\n\t\tList<String> oldShirts = new ArrayList<>();\t\t\n\t\tList<String> newShirts = new ArrayList<>();\n\t\tint size = console.nextInt();\n\t\tfor (int i = 0; i<size; i++)\n\t\t\toldShirts.add(console.next());\n\t\tfor (int i = 0; i<size; i++)\n\t\t\tnewShirts.add(console.next());\n\t\tfor (String sizeOf: oldShirts)\n\t\t\tif (newShirts.contains(sizeOf))\n\t\t\t\tnewShirts.remove(sizeOf);\n\t\tSystem.out.println(newShirts.size());\n\t}\n}"
        },
        {
            "language": 3,
            "solution": "n = int(input().strip())\nold_lst = []\nfor i in range(n):\n    size = input().strip()\n    old_lst.append(size)\nnew_lst = []\nfor i in range(n):\n    size = input().strip()\n    new_lst.append(size)\ntime = 0\nfor size in old_lst:\n    if size in new_lst:\n        new_lst.remove(size)\n    else:\n        time += 1\nprint(time)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstring a[101], b[101];\nmap<string, int> Map;\nint main() {\n  int n, i, res = 0, j;\n  cin >> n;\n  for (i = 0; i < n; i++) {\n    cin >> a[i];\n    Map[a[i]]++;\n  }\n  for (j = 0; j < n; j++) {\n    cin >> b[i];\n    if (!Map[b[i]])\n      res++;\n    else\n      Map[b[i]]--;\n  }\n  cout << res << endl;\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "n = input()\nl1 = []\ni=0\nwhile i<n:\n\ts = raw_input()\n\tl1.append(s)\n\ti+=1\ni=0\nwhile i<n:\n\ts = raw_input()\n\tif s in l1:\n\t\tl1.remove(s)\n\ti+=1\n\nprint len(l1)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nold = []\nfor i in range(n):\n    old.append(input())\nnew = []\nold.sort()\nfor i in range(n):\n    new.append(input())\nnew.sort()\noldstr = ''\nfor i in old:\n    oldstr += i\nnewstr = ''\nfor i in new:\n    newstr += i\nOld = [[], [], [], []]\nNew = [[], [], [], []]\nlength = 1\nfor i in range(n):\n    if len(old[i]) == length:\n        pass\n    else:\n        length += 1\n    Old[length - 1].append(old[i])\nlength = 1\nfor i in range(n):\n    if len(new[i]) == length:\n        pass\n    else:\n        length += 1\n    New[length - 1].append(new[i])\n#print(Old)\n#print(New)\ncount = 0\nfor i in range(4):\n    numsO = [0, 0, 0]\n    numsN = [0, 0, 0]\n    for j in range(len(Old[i])):\n        if 'S' in Old[i][j]:\n            numsO[0] += 1\n        elif 'M' in Old[i][j]:\n            numsO[1] += 1\n        elif 'L' in Old[i][j]:\n            numsO[2] += 1\n    for j in range(len(New[i])):\n        if 'S' in New[i][j]:\n            numsN[0] += 1\n        elif 'M' in New[i][j]:\n            numsN[1] += 1\n        elif 'L' in New[i][j]:\n            numsN[2] += 1\n    #print(numsO, numsN)\n    for j in range(3):\n        if numsN[j] > numsO[j]:\n            count += numsN[j] - numsO[j]\nprint(count)\n'''\nOld = [0, 0, 0]\nfor i in range(len(old)):\n    if 'S' in old[i]:\n        Old[0] += 1\n    if 'M' in old[i]:\n        Old[1] += 1\n    if 'L' in old[i]:\n        Old[2] += 1\nNew = [0, 0, 0]\nfor i in range(len(new)):\n    if 'S' in new[i]:\n        New[0] += 1\n    if 'M' in new[i]:\n        New[1] += 1\n    if 'L' in new[i]:\n        New[2] += 1\nprint(Old, New)\ncount = 0\nfor i in range(3):\n    if New[i] > Old[i]:\n        count += New[i] - Old[i]\nprint(count)'''\n"
        },
        {
            "language": 3,
            "solution": "n = input()\nn = int(n)\ndircPre = {}\ndircAft = {}\nfor x in range(n):\n\tstri = input()\n\tif stri in dircPre:\n\t\tdircPre[stri] += 1\n\telse:\n\n\t\tdircPre.update({stri:1})\nfor x in range(n):\n\tstri = input()\n\tif stri in dircAft:\n\t\tdircAft[stri] += 1\n\telse:\n\n\t\tdircAft.update({stri:1})\n\nans = 0\n# print(dircAft)\n# print(dircPre)\nfor x in dircAft:\n\t# print(x)\n\tif x in dircPre:\n\t\tif dircPre.get(x) > dircAft.get(x):\n\t\t\tpass\n\t\telse:\n\t\t\tans += dircAft.get(x) - dircPre.get(x)\n\t\t# print(\"\u52a0\u4e0a,\u4e24\u8005\u4e4b\u5dee:\", dircAft.get(x) - dircPre.get(x))\n\telse:\n\t\tans += dircAft.get(x)\n\t\t# print(\"\u52a0\u4e0a,\u5355\u72ec:\", dircAft.get(x))\n\nprint(ans)\n\t \t \t\t\t\t  \t\t  \t  \t\t \t   \t \t\t\t"
        },
        {
            "language": 3,
            "solution": "# http://codeforces.com/problemset/problem/1000/A\nn = int(input())\nold = [input() for i in range(n)]\ncount = 0 \nfor i in range(n):\n    try :\n        old.remove(input())\n    except :\n        count+=1\nprint(count)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na1=[]\na2=[]\nfor _ in range(n):\n    s=input()\n    a1.append(s)\nfor _ in range(n):\n    s=input()\n    a2.append(s);\nk=0\nfor x in a1:\n    if(x in a2):\n        k+=1\n        a2.pop(a2.index(x))\n        \nprint(len(a1)-k)\n"
        },
        {
            "language": 3,
            "solution": "import sys\n\nn = int(sys.stdin.readline())\ns = list()\nt = n\nfor z in range(n):\n\ta = sys.stdin.readline()\n\tfind = False\n\tfor loop in range(len(s)):\n\t\tif s[loop][0] == a:\n\t\t\tfind = True\n\t\t\ts[loop][1] += 1\n\tif not find:\n\t\ts.append([a, 1])\nfor z in range(n):\n\ta = sys.stdin.readline()\n\tfind = False\n\tfor loop in range(len(s)):\n\t\tif s[loop][0] == a and s[loop][1] > 0:\n\t\t\tfind = True\n\t\t\ts[loop][1] -= 1\n\t\t\tt-=1\nprint(t)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int INF = 0x3f3f3f3f;\nconst int MaxN = 100;\nchar a[MaxN + 5][MaxN + 5], b[MaxN + 5][MaxN + 5];\nbool vis1[MaxN + 5], vis2[MaxN + 5];\nint main() {\n  int n;\n  scanf(\"%d\", &n);\n  int cnt = 0;\n  for (int i = 1; i <= n; i++) scanf(\"%s\", a[i] + 1);\n  for (int i = 1; i <= n; i++) scanf(\"%s\", b[i] + 1);\n  for (int i = 1; i <= n; i++) {\n    for (int j = 1; j <= n; j++) {\n      int flag = 0;\n      if (strlen(a[i] + 1) == strlen(b[j] + 1) && vis1[i] == 0 &&\n          vis2[j] == 0) {\n        for (int k = 1; k <= strlen(a[i] + 1); k++) {\n          if (a[i][k] != b[j][k]) {\n            flag = 1;\n            break;\n          }\n        }\n        if (flag == 0) {\n          vis1[i] = 1;\n          vis2[j] = 1;\n          cnt++;\n        }\n        if (flag == 1) flag = 0;\n      } else\n        continue;\n    }\n  }\n  printf(\"%d\\n\", n - cnt);\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Map.Entry;\nimport java.util.Scanner;\n\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner in=new Scanner(System.in);\n\t\twhile(in.hasNextLine()){\n\t\t\tint length=Integer.valueOf(in.nextLine());\n\t\t\tMap<String, Integer> map=new HashMap<String, Integer>();\n\t\t\tfor (int i = 0; i < length; i++) {\n\t\t\t\tString s=in.nextLine();\n\t\t\t\tif(map.get(s)==null){\n\t\t\t\t\tmap.put(s, 1);\n\t\t\t\t}else{\n\t\t\t\t\tmap.put(s, map.get(s)+1);\n\t\t\t\t}\n\t\t\t}\n\t\t\tint count=0;\n\t\t\tfor (int i = 0; i < length; i++) {\n\t\t\t\tString s=in.nextLine();\n\t\t\t\tif(map.get(s)!=null){\n\t\t\t\t\tmap.put(s, map.get(s)-1);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (Entry<String, Integer> string : map.entrySet()) {\n//\t\t\t\tSystem.out.print(string+\" \");\n\t\t\t\tif(string.getValue()>0){\n\t\t\t\t\tcount+=string.getValue();\n\t\t\t\t}\n\t\t\t}\n//\t\t\tSystem.out.println();\n\t\t\tSystem.out.println(count);\n\t\t}\n\t}\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.io.BufferedWriter;\nimport java.io.Writer;\nimport java.io.OutputStreamWriter;\nimport java.util.InputMismatchException;\nimport java.io.IOException;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n *\n * @author prakhar897\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        OutputWriter out = new OutputWriter(outputStream);\n        TaskA solver = new TaskA();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class TaskA {\n        public void solve(int testNumber, InputReader in, OutputWriter out) {\n            int n = in.nextInt();\n            String arr1[] = new String[n];\n            String arr2[] = new String[n];\n            int i, j, count = 0;\n            for (i = 0; i < n; i++) {\n                arr1[i] = in.nextString();\n            }\n            for (i = 0; i < n; i++) {\n                arr2[i] = in.nextString();\n                for (j = 0; j < n; j++) {\n                    if (arr2[i].equals(arr1[j])) {\n                        arr1[j] = \"\";\n                        count++;\n                        break;\n                    }\n                }\n            }\n            out.println(n - count);\n        }\n\n    }\n\n    static class InputReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private InputReader.SpaceCharFilter filter;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int read() {\n            if (numChars == -1) {\n                throw new InputMismatchException();\n            }\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (numChars <= 0) {\n                    return -1;\n                }\n            }\n            return buf[curChar++];\n        }\n\n        public int nextInt() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do {\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public String nextString() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            StringBuilder res = new StringBuilder();\n            do {\n                if (Character.isValidCodePoint(c)) {\n                    res.appendCodePoint(c);\n                }\n                c = read();\n            } while (!isSpaceChar(c));\n            return res.toString();\n        }\n\n        public boolean isSpaceChar(int c) {\n            if (filter != null) {\n                return filter.isSpaceChar(c);\n            }\n            return isWhitespace(c);\n        }\n\n        public static boolean isWhitespace(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        public interface SpaceCharFilter {\n            public boolean isSpaceChar(int ch);\n\n        }\n\n    }\n\n    static class OutputWriter {\n        private final PrintWriter writer;\n\n        public OutputWriter(OutputStream outputStream) {\n            writer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));\n        }\n\n        public OutputWriter(Writer writer) {\n            this.writer = new PrintWriter(writer);\n        }\n\n        public void close() {\n            writer.close();\n        }\n\n        public void println(int i) {\n            writer.println(i);\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nprev_yr = []\ncur_yr = []\nfor i in range(n):\n   prev_yr.append(input())\nfor i in range(n):\n    cur_yr.append(input())\nfor i in range(len(prev_yr)) :\n    if prev_yr[i] in cur_yr:\n        cur_yr.pop(cur_yr.index(prev_yr[i]))\nprint(len(cur_yr))"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl1=[input()for _ in range(n)]\nfor i in range(n):\n\ts=input()\n\tif s in l1:\n\t\tl1.remove(s)\nprint(len(l1))"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\narr = []\narr2 = []\nfor i in range(n):\n  arr.append(raw_input())\nfor i in range(n):\n  temp = raw_input()\n  if temp in arr:\n    arr.pop(arr.index(temp))\n  else:\n    arr2.append(temp)\nprint len(arr)"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.HashMap;\nimport java.util.InputMismatchException;\nimport java.io.IOException;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n *\n * @author Puskar\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskA solver = new TaskA();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class TaskA {\n        public void solve(int testNumber, InputReader in, PrintWriter out) {\n            int n = in.nextInt();\n            String[] a = new String[n];\n            for (int i = 0; i < n; i++)\n                a[i] = in.nextString();\n            HashMap<String, Integer> hm1 = new HashMap<>();\n            hm1.put(\"XXXS\",0); hm1.put(\"XXS\",0); hm1.put(\"XS\",0); hm1.put(\"S\",0);\n            hm1.put(\"XXXL\",0); hm1.put(\"XXL\",0); hm1.put(\"XL\",0); hm1.put(\"L\",0);\n            hm1.put(\"M\",0);\n            for (int i = 0; i < n; i++) {\n                hm1.put(a[i], hm1.get(a[i]) + 1);\n            }\n            int c = 0;\n            for (int i = 0; i < n; i++) {\n                a[0] = in.nextString();\n                if(hm1.get(a[0]) > 0)\n                  \thm1.put(a[0], hm1.get(a[0]) - 1);\n                else\n                   \tc++;\n            }\n            out.println(c);\n        }\n\n    }\n\n    static class InputReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private InputReader.SpaceCharFilter filter;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int read() {\n            if (numChars == -1) {\n                throw new InputMismatchException();\n            }\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (numChars <= 0) {\n                    return -1;\n                }\n            }\n            return buf[curChar++];\n        }\n\n        public int nextInt() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do {\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public String nextString() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            StringBuilder res = new StringBuilder();\n            do {\n                if (Character.isValidCodePoint(c)) {\n                    res.appendCodePoint(c);\n                }\n                c = read();\n            } while (!isSpaceChar(c));\n            return res.toString();\n        }\n\n        public boolean isSpaceChar(int c) {\n            if (filter != null) {\n                return filter.isSpaceChar(c);\n            }\n            return isWhitespace(c);\n        }\n\n        public static boolean isWhitespace(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        public interface SpaceCharFilter {\n            public boolean isSpaceChar(int ch);\n\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 3,
            "solution": "#1\nn = int(input())\na = []\nb = []\nd = 0\nfor i in range(n):\n    a.append(input())\nfor i in range(n):\n    b.append(input())\nfor i in range(n):\n    if(not(a[i] in b)):\n        d+=1\n    else:\n        for j in range(n):\n            if(b[j] == a[i]):\n                b.remove(b[j])\n                break\nprint(d)\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class Main\n{\n\tpublic static void main(String[] args)\n\t{\n\t\tFastReader reader = new FastReader();\n\t\tPrintWriter writer = new PrintWriter(System.out);\n\n\t\tint n = reader.nextInt();\n\t\tTreeMap<String, Integer> one = new TreeMap<String, Integer>();\n\t\tTreeMap<String, Integer> two = new TreeMap<String, Integer>();\n\t\t\n\t\tString[] array = {\"L\", \"M\", \"S\"};\n\t\tfor (int i=0; i<3; i++)\n\t\t{\n\t\t\tone.put(array[i], 0);\n\t\t\ttwo.put(array[i], 0);\n\t\t}\n\n\t\tString x = \"\";\n\t\tfor (int i=0; i<3; i++)\n\t\t{\n\t\t\tx = x + \"X\";\n\t\t\tone.put(x+\"L\", 0);\n\t\t\tone.put(x+\"S\", 0);\n\t\t\ttwo.put(x+\"L\", 0);\n\t\t\ttwo.put(x+\"S\", 0);\n\t\t}\n\n\t\tfor (int i=0; i<n; i++)\n\t\t{\n\t\t\tString input = reader.nextLine();\n\t\t\tint got = one.get(input);\n\t\t\tone.put(input, got+1);\n\t\t}\n\n\t\tfor (int i=0; i<n; i++)\n\t\t{\n\t\t\tString input = reader.nextLine();\n\t\t\tint got = two.get(input);\n\t\t\ttwo.put(input, got+1);\n\t\t}\n\n\t\tint ans=0;\n\t\tfor (Map.Entry<String, Integer> entry : one.entrySet())\n\t\t{\n\t\t\tint val1 = entry.getValue();\n\t\t\tint val2 = two.get(entry.getKey());\n\n\t\t\tans += Math.abs(val1-val2);\n\t\t}\n\n\t\twriter.println(ans/2);\n\t\twriter.close();\n\t}\n\n\tstatic class FastReader\n\t{\n\t\tBufferedReader br;\n\t\tStringTokenizer st;\n\n\t\tpublic FastReader()\n\t\t{\n\t\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t\t}\n\n\t\tString next()\n\t\t{\n\t\t\twhile (st == null || !st.hasMoreElements())\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\t}\n\t\t\t\tcatch (IOException e)\n\t\t\t\t{\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tint nextInt()\n\t\t{\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tlong nextLong()\n\t\t{\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tdouble nextDouble()\n\t\t{\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tString nextLine()\n\t\t{\n\t\t\tString str = \"\";\n\t\t\ttry\n\t\t\t{\n\t\t\t\tstr = br.readLine();\n\t\t\t}\n\t\t\tcatch (IOException e)\n\t\t\t{\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\treturn str;\n\t\t}\n\t}\n}"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\n\nn = int(input())\na = Counter(input() for i in range(n))\nb = Counter(input() for i in range(n))\nres = 0\n\nfor c in \"MLS\":\n    res+= abs(a[c] - b[c])\n    res+= abs(a[\"X\"+c] - b[\"X\"+c])\n    res+= abs(a[\"XX\"+c] - b[\"XX\"+c])\n    res+= abs(a[\"XXX\"+c] - b[\"XXX\"+c])\nprint(res//2)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nmap<string, int> a;\nint main() {\n  int n;\n  string s;\n  cin >> n;\n  for (int i = 0; i < n; i++) cin >> s, a[s]++;\n  for (int i = 0; i < n; i++) cin >> s, a[s]--;\n  int ans = 0;\n  for (map<string, int>::iterator i = a.begin(); i != a.end(); i++)\n    if (i->second > 0) ans += i->second;\n  cout << ans << endl;\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\nprev = []\ncurr = []\nfor i in xrange(0, n):\n\tprev.append(raw_input().strip())\nfor i in xrange(0, n):\n\tcurr.append(raw_input().strip())\n\nprev_count = {}\ncurr_count = {}\nsizes = ['S', 'M', 'L', 'XS', 'XXS', 'XXXS', 'XL', 'XXL', 'XXXL']\nfor s in sizes:\n\tprev_count[s] = 0\n\tcurr_count[s] = 0\n\nfor t in prev:\n\tprev_count[t] += 1\n\nfor t in curr:\n\tcurr_count[t] += 1\n\t\nres = 0\nfor s in sizes:\n\tres += abs(prev_count[s] - curr_count[s])\nres /= 2\nprint res \n\n\n"
        },
        {
            "language": 4,
            "solution": "import java.io.DataInputStream;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.StringTokenizer;\nimport java.util.*;\n\npublic class string\n{\n    static class Reader\n    {\n        final private int BUFFER_SIZE = 1 << 16;\n        private DataInputStream din;\n        private byte[] buffer;\n        private int bufferPointer, bytesRead;\n \n        public Reader()\n        {\n            din = new DataInputStream(System.in);\n            buffer = new byte[BUFFER_SIZE];\n            bufferPointer = bytesRead = 0;\n        }\n \n        public Reader(String file_name) throws IOException\n        {\n            din = new DataInputStream(new FileInputStream(file_name));\n            buffer = new byte[BUFFER_SIZE];\n            bufferPointer = bytesRead = 0;\n        }\n \n        public String readLine() throws IOException\n        {\n            byte[] buf = new byte[64]; // line length\n            int cnt = 0, c;\n            while ((c = read()) != -1)\n            {\n                if (c == '\\n')\n                    break;\n                buf[cnt++] = (byte) c;\n            }\n            return new String(buf, 0, cnt);\n        }\n \n        public int nextInt() throws IOException\n        {\n            int ret = 0;\n            byte c = read();\n            while (c <= ' ')\n                c = read();\n            boolean neg = (c == '-');\n            if (neg)\n                c = read();\n            do\n            {\n                ret = ret * 10 + c - '0';\n            }  while ((c = read()) >= '0' && c <= '9');\n \n            if (neg)\n                return -ret;\n            return ret;\n        }\n \n        public long nextLong() throws IOException\n        {\n            long ret = 0;\n            byte c = read();\n            while (c <= ' ')\n                c = read();\n            boolean neg = (c == '-');\n            if (neg)\n                c = read();\n            do {\n                ret = ret * 10 + c - '0';\n            }\n            while ((c = read()) >= '0' && c <= '9');\n            if (neg)\n                return -ret;\n            return ret;\n        }\n \n        public double nextDouble() throws IOException\n        {\n            double ret = 0, div = 1;\n            byte c = read();\n            while (c <= ' ')\n                c = read();\n            boolean neg = (c == '-');\n            if (neg)\n                c = read();\n \n            do {\n                ret = ret * 10 + c - '0';\n            }\n            while ((c = read()) >= '0' && c <= '9');\n \n            if (c == '.')\n            {\n                while ((c = read()) >= '0' && c <= '9')\n                {\n                    ret += (c - '0') / (div *= 10);\n                }\n            }\n \n            if (neg)\n                return -ret;\n            return ret;\n        }\n \n        private void fillBuffer() throws IOException\n        {\n            bytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE);\n            if (bytesRead == -1)\n                buffer[0] = -1;\n        }\n \n        private byte read() throws IOException\n        {\n            if (bufferPointer == bytesRead)\n                fillBuffer();\n            return buffer[bufferPointer++];\n        }\n \n        public void close() throws IOException\n        {\n            if (din == null)\n                return;\n            din.close();\n        }\n    }\n  \n    \n    public static void main(String[] args) throws IOException\n    {\n        Scanner s = new Scanner(System.in);\n        int n = s.nextInt();\n        String[] a = new String[n];\n        String[] b = new String[n];\n        for(int i=0;i<n;i++)\n        {\n            a[i] = s.next();\n        }\n        for(int i=0;i<n;i++)\n        {\n            b[i] = s.next();\n        }\n\n        int c=n;\n        for(int i=0;i<n;i++)\n        {\n            for(int k=0;k<n;k++)\n            {\n                if(a[i].equals(b[k]))\n                {\n                    b[k] = \"\";\n                    c-=1;\n                    break;\n                }\n            }\n        }\n        System.out.println(c);\n\n       \n    }\n}"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Scanner;\n\npublic class CShirts {\n\n\tpublic static void main(String[] args) \n\t{\n\t\tScanner jk = new Scanner(System.in);\n\t\tint x = jk.nextInt();\n\t\tArrayList<String> l1 = new ArrayList<String>();\n\t\tArrayList<String> l2 = new ArrayList<String>();\n\t\tjk.nextLine();\n\t\tArrayList<Integer> n1 = new ArrayList<Integer>();\n\t\tArrayList<Integer> n2 = new ArrayList<Integer>();\n\t\tfor (int i=0; i<2*x; i++)\n\t\t{\n\t\t\tString ko = jk.nextLine();\n\t\t\tif (i>x-1)\n\t\t\t{\n\t\t\t\tl2.add(ko);\n\t\t\t\tn2.add(ko.length());\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tl1.add(ko);\n\t\t\t\tn1.add(ko.length());\n\t\t\t}\n\t\t}\n\t\tCollections.sort(n1);\n\t\tCollections.sort(n2);\n\t\tint trig = 1;\n\t\tfor (int i=0; i<x; i++)\n\t\t{\n\t\t\tif (!(n1.get(i)==n2.get(i)))\n\t\t\t{\n\t\t\t\ttrig = 0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t//System.out.println(n1);\n\t\t//System.out.println(n2);\n\t\tif (trig==0)\n\t\t{\n\t\t\tSystem.out.println(trig);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor (String i:l1)\n\t\t\t{\n\t\t\t\tif (l2.contains(i))\n\t\t\t\t{\n\t\t\t\t\tl2.remove(l2.indexOf(i));\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(l2.size());\n\t\t}\n\t\t\n\n\t}\n\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\n\npublic class Ksenia{\n\tpublic static void main(String args[]){\n\t\tScanner sc = new Scanner(System.in);\n\t\tString s;\n\t\tArrayList<String> al = new ArrayList<>();\n\t\tint n = sc.nextInt();\n\t\tfor(int i = 0;i<n;i++){\n\t\t\ts=sc.next();\n\t\t\tal.add(s);\n\t\t}\n\t\tfor(int i=0;i<n;i++){\n\t\t\ts = sc.next();\n\t\t\tif(al.contains(s)) al.remove(s);\n\t\t}\n\t\tSystem.out.print(al.size());\n\t}\n}"
        },
        {
            "language": 1,
            "solution": "from collections import Counter\nn = int(raw_input())\na = Counter([raw_input().strip() for _ in range(n)])\nb = Counter([raw_input().strip() for _ in range(n)])\nc = a & b\nprint sum(a.values()) - sum(c.values())\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\naa = [input() for i in range(n)]\nbb = [input() for i in range(n)]\n\nres = 0\nfor size in ['XL', 'XXL', 'XXXL']:\n    c1 = aa.count(size)\n    c2 = bb.count(size)\n    res += abs(c1 - c2)\n\ntemp = 0\nfor size in 'MLS':\n    temp = max(temp, abs(aa.count(size) - bb.count(size)))\n\nres += temp\n\nprint(res)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\n\na = []\nb = []\nfor i in range(n):\n    a.append(input())\n\nfor i in range(n):\n    el = input()\n    if(el in a):\n        a.remove(el)\n    else:\n        b.append(el)\nprint(len(a))"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nd =[]\nfor i in range(n):\n    d.append(input())\ne =[]\nfor i in range(n):\n    e.append(input())\nf=e.copy()\nfor i in range(0,len(f)):\n    if f[i] in d and f[i] in e:\n            d.remove(f[i])\n            e.remove(f[i])\nprint(len(d))"
        },
        {
            "language": 4,
            "solution": "import java.io.IOException;\nimport java.io.InputStream;\n\nimport java.math.BigInteger;\nimport java.util.*;\n\npublic class Main {\n    public static void main(String[] args) throws IOException {\n\n        Scan scan = new Scan();\n        int a[]=new int[9];//\n//        0 M   1 S   2XS  3XXS 4 XXXS 5 XL 6 XXL 7 XXXL: 8 L\n        int n = scan.scanInt();\n        for(int i=0;i<n;i++){\n            String str=scan.scanString();\n            if(str.length()==1){\n                if(str.equals(\"M\")){\n                    a[0]++;\n                }\n                if(str.equals(\"S\")){\n\n                    a[1]++;\n                }\n                if(str.equals(\"L\")){\n                    a[8]++;\n\n                }\n            }else if(str.length()==2){\n//                b[2]++;\n                if(str.equals(\"XS\")){\n                    a[2]++;\n                }\n                if(str.equals(\"XL\")){\n                    a[5]++;\n                }\n            }else if(str.length()==3){\n//                b[3]++;\n                if(str.equals(\"XXL\")){\n                    a[6]++;\n                }\n                if(str.equals(\"XXS\")){a[3]++;\n\n                }\n            }else if(str.length()==4){\n//                b[4]++;\n                if(str.equals(\"XXXL\")){a[7]++;\n\n                }\n                if(str.equals(\"XXXS\")){a[4]++;\n\n                }\n            }\n        }\n        int ans=0;\n\n//        0 M   1 S   2XS  3XXS 4 XXXS 5 XL 6 XXL 7 XXXL: 8 L\n        for(int i=0;i<n;i++){\n            String str=scan.scanString();\n            if(str.length()==1){\n                if(str.equals(\"M\")){\n                    if(a[0]>0){\n                        a[0]--;\n                    }else{\n                        ans++;\n                    }\n                }\n                if(str.equals(\"S\")){\n                    if(a[1]>0){\n                        a[1]--;\n                    }else{ans++;}\n                }\n                if(str.equals(\"L\")){\n                    if(a[8]>0) a[8]--;else ans++;\n                }\n            }else if(str.length()==2){\n                if(str.equals(\"XS\")){if(a[2]>0)a[2]--;else ans++;\n                }\n                if(str.equals(\"XL\")){if(a[5]>0)a[5]--;else ans++;\n\n                }\n            }else if(str.length()==3){\n                if(str.equals(\"XXL\")){ if(a[6]>0)a[6]--;else ans++;}\n                if(str.equals(\"XXS\")){ if(a[3]>0)a[3]--;else ans++;\n                }\n            }else if(str.length()==4){\n                if(str.equals(\"XXXL\")){if(a[7]>0)a[7]--;else ans++;\n\n                }\n                if(str.equals(\"XXXS\")){if(a[4]>0)a[4]--;else ans++;\n\n                }\n            }\n        }\n        System.out.println(ans);\n\n    }\n\n    static double dis(long a,long b){\n        return Math.sqrt((a*a)+(b*b));\n    }\n\n\n\n    static class Scan\n    {\n        private byte[] buf=new byte[1024];\n        private int index;\n        private InputStream in;\n        private int total;\n        public Scan()\n        {\n            in=System.in;\n        }\n        public int scan()throws IOException\n        {\n            if(total<0)\n                throw new InputMismatchException();\n            if(index>=total)\n            {\n                index=0;\n                total=in.read(buf);\n                if(total<=0)\n                    return -1;\n            }\n            return buf[index++];\n        }\n        public int scanInt()throws IOException\n        {\n            int integer=0;\n            int n=scan();\n            while(isWhiteSpace(n))\n                n=scan();\n            int neg=1;\n            if(n=='-')\n            {\n                neg=-1;\n                n=scan();\n            }\n            while(!isWhiteSpace(n))\n            {\n                if(n>='0'&&n<='9')\n                {\n                    integer*=10;\n                    integer+=n-'0';\n                    n=scan();\n                }\n                else throw new InputMismatchException();\n            }\n            return neg*integer;\n        }\n\n\n        public char scanchar()throws IOException\n        {\n            int n=scan();\n            while(isWhiteSpace(n))\n                n=scan();\n            return (char)n;\n//            int neg=1;\n//            while(!isWhiteSpace(n))\n//            {\n//                if(n>='0'&&n<='9')\n//                {\n//                    integer*=10;\n//                    integer+=n-'0';\n//                    n=scan();\n//                }\n//                else throw new InputMismatchException();\n//            }\n//            return neg*integer;\n        }\n\n        public long scanLong()throws IOException\n        {\n            long lng=0;\n            int n=scan();\n            while(isWhiteSpace(n))\n                n=scan();\n            int neg=1;\n            if(n=='-')\n            {\n                neg=-1;\n                n=scan();\n            }\n            while(!isWhiteSpace(n) && n!='.')\n            {\n                if(n>='0'&&n<='9')\n                {\n                    lng*=10;\n                    lng+=n-'0';\n                    n=scan();\n                }\n                else throw new InputMismatchException();\n            }\n            if(n=='.')\n            {\n                n=scan();\n                long temp=1;\n                while(!isWhiteSpace(n))\n                {\n                    if(n>='0'&&n<='9')\n                    {\n                        temp/=10;\n                        lng+=(n-'0')*temp;\n                        n=scan();\n                    }\n                    else throw new InputMismatchException();\n                }\n            }\n            return neg*lng;\n        }\n        public double scanDouble()throws IOException\n        {\n            double doub=0;\n            int n=scan();\n            while(isWhiteSpace(n))\n                n=scan();\n            int neg=1;\n            if(n=='-')\n            {\n                neg=-1;\n                n=scan();\n            }\n            while(!isWhiteSpace(n)&&n!='.')\n            {\n                if(n>='0'&&n<='9')\n                {\n                    doub*=10;\n                    doub+=n-'0';\n                    n=scan();\n                }\n                else throw new InputMismatchException();\n            }\n            if(n=='.')\n            {\n                n=scan();\n                double temp=1;\n                while(!isWhiteSpace(n))\n                {\n                    if(n>='0'&&n<='9')\n                    {\n                        temp/=10;\n                        doub+=(n-'0')*temp;\n                        n=scan();\n                    }\n                    else throw new InputMismatchException();\n                }\n            }\n            return doub*neg;\n        }\n        public String scanString()throws IOException\n        {\n            StringBuilder sb=new StringBuilder();\n            int n=scan();\n            while(isWhiteSpace(n))\n                n=scan();\n            while(!isWhiteSpace(n))\n            {\n                sb.append((char)n);\n                n=scan();\n            }\n            return sb.toString();\n        }\n        private boolean isWhiteSpace(int n)\n        {\n            if(n==' '||n=='\\n'||n=='\\r'||n=='\\t'||n==-1)\n                return true;\n            return false;\n        }\n    }\n\n}"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[]\nfor i in range(n):\n\ta.append(input())\nans=0\nfor i in range(n):\n\ttry:\n\t\ta.remove(input())\n\texcept:\n\t\tans+=1\nprint(ans)"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\npublic class CodehorsesTshirts {\n    \n    \n    \n    /************************ SOLUTION STARTS HERE ************************/\n    \n    \n    private static void solve() {\n        \n        \n        int n = nextInt();\n        \n        HashMap<String, Integer> a = new HashMap<>();\n        HashMap<String, Integer> b = new HashMap<>();\n        \n        for(int i = 0; i < n; i++)\n            a.merge(nextLine(), 1, Integer::sum);\n        \n        for(int i = 0; i < n; i++)\n            b.merge(nextLine(), 1, Integer::sum);\n        \n        b.forEach((k , v) -> {\n            if(a.containsKey(k))\n                a.put(k, a.get(k) - Math.min(v , a.get(k)));\n        });\n        \n        int cost = a.values().stream().reduce(0, Integer::sum);\n        \n        println(cost);  \n        \n    }\n    \n    \n    \n    /************************ SOLUTION ENDS HERE ************************/\n    \n    \n    \n    \n    \n    /************************ TEMPLATE STARTS HERE **********************/\n    \n    public static void main(String[] args) throws IOException {\n        reader = new BufferedReader(new InputStreamReader(System.in));\n        writer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)), false);\n        st     = null;\n        solve();\n        reader.close();\n        writer.close();\n    }\n    \n    static BufferedReader reader;\n    static PrintWriter    writer;\n    static StringTokenizer st;\n    \n    static String next()\n    {while(st == null || !st.hasMoreTokens()){try{String line = reader.readLine();if(line == null){return null;}            \n    st = new StringTokenizer(line);}catch (Exception e){throw new RuntimeException();}}return st.nextToken();}\n    static String nextLine()  {String s=null;try{s=reader.readLine();}catch(IOException e){e.printStackTrace();}return s;}             \n    static int    nextInt()   {return Integer.parseInt(next());}\n    static long   nextLong()  {return Long.parseLong(next());}     \n    static double nextDouble(){return Double.parseDouble(next());}\n    static char   nextChar()  {return next().charAt(0);}\n    static int[]  nextIntArray(int n)         {int[] a= new int[n];   int i=0;while(i<n){a[i++]=nextInt();}  return a;}\n    static long[] nextLongArray(int n)        {long[]a= new long[n];  int i=0;while(i<n){a[i++]=nextLong();} return a;}    \n    static int[]  nextIntArrayOneBased(int n) {int[] a= new int[n+1]; int i=1;while(i<=n){a[i++]=nextInt();} return a;}            \n    static long[] nextLongArrayOneBased(int n){long[]a= new long[n+1];int i=1;while(i<=n){a[i++]=nextLong();}return a;}            \n    static void   print(Object o)  { writer.print(o);  }\n    static void   println(Object o){ writer.println(o);}\n    \n    /************************ TEMPLATE ENDS HERE ************************/\n    \n}"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nk = ['L','M','S','XS','XL','XXS','XXL','XXXS','XXXL']\n\nd = {'L':0,'M':0,'S':0,'XS':0,'XL':0,'XXS':0,'XXL':0,'XXXS':0,'XXXL':0}\n\nfor i in range(n):\n    s = input()\n    d[s] = d[s]+1\n\nq = {'L':0,'M':0,'S':0,'XS':0,'XL':0,'XXS':0,'XXL':0,'XXXS':0,'XXXL':0}\n\nfor i in range(n):\n    s = input()\n    q[s] = q[s] +1\n\nfor s in k:\n    p = min(d[s],q[s])\n    d[s]-= p\n    q[s]-= p\n\nc = 0\nfor s in k:\n    if d[s]!=0:\n        c+=d[s]\nprint(c)\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nbool comp(string a, string b) {\n  if (a.size() < b.size())\n    return true;\n  else if (a.size() == b.size()) {\n    if (a < b)\n      return true;\n    else\n      return false;\n  } else\n    return false;\n}\nvoid solve() {\n  long long n;\n  cin >> n;\n  vector<string> v(n), s(n);\n  for (long long i = 0; i < n; i++) {\n    cin >> v[i];\n  }\n  for (long long i = 0; i < n; i++) cin >> s[i];\n  sort((s).begin(), (s).end(), comp);\n  sort((v).begin(), (v).end(), comp);\n  long long ans = 0;\n  for (long long i = 0; i < n; i++) {\n    auto it1 = find(s.begin() + i, s.end(), v[i]);\n    auto it2 = find(v.begin() + i, v.end(), s[i]);\n    if (it1 != s.end()) {\n      string p = s[i];\n      s[i] = v[i];\n      *it1 = p;\n    } else if (it2 != v.end()) {\n      string p = v[i];\n      v[i] = s[i];\n      *it2 = p;\n    } else {\n      if (s[i] != v[i]) {\n        s[i] = v[i];\n        ans++;\n      }\n    }\n  }\n  cout << ans;\n}\nsigned main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  long long q = 1;\n  while (q--) {\n    solve();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.*;\nimport java.util.*;\n\npublic class CF_1000_A_CODEHORCES_TSHIRTS {\n\n\tpublic static void main(String[] args) throws Exception{\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\tint n = sc.nextInt();\n\t\t\n\t\tTreeMap<Integer,TreeMap<String,Integer>> map1 = new TreeMap<>();\n\t\tTreeMap<Integer,TreeMap<String,Integer>> map2 = new TreeMap<>();\n\t\t\n\t\tfor(int i = 0 ; i < n ; i++)\n\t\t{\t\n\t\t\tString s = sc.next();\n\t\t\tTreeMap<String , Integer> ma = map1.getOrDefault(s.length(), new TreeMap<>());\n\t\t\tma.put(s, ma.getOrDefault(s, 0)+1);\n\t\t\tmap1.put(s.length(),ma);\n\t\t}\n\t\t\n\t\t\n\t\tfor(int i = 0 ; i < n ; i++)\n\t\t{\n\t\t\tString s = sc.next();\n\t\t\tTreeMap<String , Integer> ma = map2.getOrDefault(s.length(), new TreeMap<>());\n\t\t\tma.put(s, ma.getOrDefault(s, 0)+1);\n\t\t\tmap2.put(s.length(),ma);\n\t\t}\n\t\t\n\t\tint ans = 0 ;\n\t\t\n\t\tfor(Map.Entry<Integer,TreeMap<String,Integer>> e : map2.entrySet())\n\t\t{\n\t\t\tTreeMap<String , Integer> m1 = map1.get(e.getKey());\n\t\t\tTreeMap<String , Integer> m2 = map2.get(e.getKey());\n\t\t\t\n\t\t\tfor(Map.Entry<String, Integer> e2 : m1.entrySet())\n\t\t\t{\n\t\t\t\tint occ1 = e2.getValue();\n\t\t\t\tint occ2 = m2.getOrDefault(e2.getKey(),0);\n\t\t\t\tans += Math.max(0, occ1 - occ2);\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tSystem.out.println(ans);\n\n\t}\n\n\t\n\tstatic class Scanner {\n\t\tStringTokenizer st;\n\t\tBufferedReader br;\n\n\t\tpublic Scanner(InputStream s) {\n\t\t\tbr = new BufferedReader(new InputStreamReader(s));\n\t\t}\n\n\t\tpublic String next() throws IOException {\n\t\t\twhile (st == null || !st.hasMoreTokens())\n\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tpublic int nextInt() throws IOException {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tpublic long nextLong() throws IOException {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tpublic String nextLine() throws IOException {\n\t\t\treturn br.readLine();\n\t\t}\n\n\t\tpublic double nextDouble() throws IOException {\n\t\t\tString x = next();\n\t\t\tStringBuilder sb = new StringBuilder(\"0\");\n\t\t\tdouble res = 0, f = 1;\n\t\t\tboolean dec = false, neg = false;\n\t\t\tint start = 0;\n\t\t\tif (x.charAt(0) == '-') {\n\t\t\t\tneg = true;\n\t\t\t\tstart++;\n\t\t\t}\n\t\t\tfor (int i = start; i < x.length(); i++)\n\t\t\t\tif (x.charAt(i) == '.') {\n\t\t\t\t\tres = Long.parseLong(sb.toString());\n\t\t\t\t\tsb = new StringBuilder(\"0\");\n\t\t\t\t\tdec = true;\n\t\t\t\t} else {\n\t\t\t\t\tsb.append(x.charAt(i));\n\t\t\t\t\tif (dec)\n\t\t\t\t\t\tf *= 10;\n\t\t\t\t}\n\t\t\tres += Long.parseLong(sb.toString()) / f;\n\t\t\treturn res * (neg ? -1 : 1);\n\t\t}\n\n\t\tpublic boolean ready() throws IOException {\n\t\t\treturn br.ready();\n\t\t}\n\n\t}\n\n\n}\n"
        },
        {
            "language": 3,
            "solution": "'''\nS -    0\nM -    1\nL -    2\nXS -   3\nXXS -  4\nXXXS - 5\nXL -   6\nXXL -  7\nXXXL - 8\n\n'''\n\nn = int(input())\nprev = []\nfor _ in range(n):\n    prev.append(input().strip())\ncurrent = []\nfor _ in range(n):\n    current.append(input().strip())\nprev_counts = [0] * 9\nfor s in prev:\n    if (s == 'S'):\n        prev_counts[0] += 1\n    elif (s == 'M'):\n        prev_counts[1] += 1\n    elif (s == 'L'):\n        prev_counts[2] += 1\n    elif (s == 'XS'):\n        prev_counts[3] += 1\n    elif (s == 'XXS'):\n        prev_counts[4] += 1\n    elif (s == 'XXXS'):\n        prev_counts[5] += 1\n    elif (s == 'XL'):\n        prev_counts[6] += 1\n    elif (s == 'XXL'):\n        prev_counts[7] += 1\n    elif (s == 'XXXL'):\n        prev_counts[8] += 1\n\ncurr_counts = [0] * 9\nfor s in current:\n    if (s == 'S'):\n        curr_counts[0] += 1\n    elif (s == 'M'):\n        curr_counts[1] += 1\n    elif (s == 'L'):\n        curr_counts[2] += 1\n    elif (s == 'XS'):\n        curr_counts[3] += 1\n    elif (s == 'XXS'):\n        curr_counts[4] += 1\n    elif (s == 'XXXS'):\n        curr_counts[5] += 1\n    elif (s == 'XL'):\n        curr_counts[6] += 1\n    elif (s == 'XXL'):\n        curr_counts[7] += 1\n    elif (s == 'XXXL'):\n        curr_counts[8] += 1\nseconds = 0\ndiff1 = prev_counts[0] - curr_counts[0]\ndiff2 = prev_counts[1] - curr_counts[1]\ndiff3 = prev_counts[2] - curr_counts[2]\nseconds += max (abs(diff1), abs(diff2), abs(diff3))\nseconds += abs(prev_counts[3] - curr_counts[3])\nseconds += abs(prev_counts[4] - curr_counts[4])\nseconds += abs(prev_counts[5] - curr_counts[5])\nprint(seconds)"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOError;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.*;\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        int n = Integer.parseInt(br.readLine());\n        String[][] strings = new String[2][n];\n        for(int i=0;i<2;i++){\n            for(int j=0;j<n;j++){\n                strings[i][j] = br.readLine();\n            }\n        }\n        HashSet<String> set = new HashSet<>();\n        boolean[] check = new boolean[n];\n        boolean[] check1 = new boolean[n];\n        int ans = 0 ;\n        for(int i=0;i<n;i++){\n           for(int j=0;j<n;j++){\n               if(check[j]) continue;\n               if(strings[0][i].equals(strings[1][j])){\n                   check[j] = true;\n                   check1[i] = true;\n                   break;\n               }\n           }\n        }\n        int[] dp = new int[n];\n        Arrays.fill(dp,10000000);\n        for(int i=0;i<n;i++){\n            if(check1[i]) continue;\n            int min = 1000000000;\n            int minIndex = -1;\n            for(int j=0;j<n;j++){\n                if(check[j]) continue;\n                if(strings[0][i].length() == strings[1][j].length()){\n                    int cnt = 0 ;\n                    for(int k=0;k<strings[1][j].length();k++){\n                        if(strings[0][i].charAt(k)!=strings[1][j].charAt(k)){\n                            cnt ++;\n                        }\n                    }\n                    dp[j] = Math.min(dp[j],cnt);\n                }\n            }\n        }\n        for(int i=0;i<n;i++){\n            if(dp[i]!=10000000)\n                ans+=dp[i];\n        }\n        System.out.println(ans);\n    }\n}"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\n\nn = int(input())\na = Counter()\nb = Counter()\nfor _ in range(n):    \n    a[input().strip()] += 1\nfor _ in range(n):\n    b[input().strip()] += 1\nans = 0\nfor key in b:\n    ans += max(b[key] - a[key], 0)\n# print(a)\n# print(b)\nprint(ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  map<string, int> m;\n  int i;\n  for (i = 0; i < n; i++) {\n    string s;\n    cin >> s;\n    m[s]++;\n  }\n  int c = 0;\n  for (i = 0; i < n; i++) {\n    string s;\n    cin >> s;\n    if (m[s])\n      m[s]--;\n    else\n      c++;\n  }\n  cout << c << endl;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nmultiset<string> M;\nmultiset<string>::iterator it;\nstring s;\nint main() {\n  int n;\n  cin >> n;\n  for (int i = 1; i <= n; i++) {\n    cin >> s;\n    M.insert(s);\n  }\n  for (int i = 1; i <= n; i++) {\n    cin >> s;\n    it = M.find(s);\n    if (it != M.end()) M.erase(it);\n  }\n  cout << M.size() << \"\\n\";\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "//package jsr.codeforces;\n\nimport java.util.HashMap;\nimport java.util.Scanner;\n\npublic class AMatchLists {\n\n\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        int N = in.nextInt();\n        HashMap<String, Integer> map = new HashMap<>();\n        for(int i=0; i<N; i++){\n            String str = in.next();\n            if(map.get(str)==null){\n                map.put(str, 0);\n            }\n            map.put(str, map.get(str)+1);\n        }\n\n        HashMap<String, Integer> map2 = new HashMap<>();\n        for(int i=0; i<N; i++){\n            String str = in.next();\n            if(map.get(str)!=null){\n                if(map.get(str)==1)\n                    map.remove(str);\n                else\n                    map.put(str, map.get(str)-1);\n            }\n            else{\n                if(map2.get(str)==null){\n                    map2.put(str, 0);\n                }\n                map2.put(str, map2.get(str)+1);\n            }\n        }\n        int[] count= {0};\n\n        map2.forEach((key, value)->{\n                count[0] += value;\n                });\n\n        System.out.println(count[0]);\n\n        //M, XS, XXS, XXXS, L, XL, XXl, XXXL\n    }\n\n}\n"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\na = [raw_input().strip() for _ in xrange(n)]\nb = [raw_input().strip() for _ in xrange(n)]\nf = [0] * 9\nfor x in a:\n    f[x.count('X') * 2 + (x[-1] == 'S') + (x[-1] != 'M')] += 1\nfor x in b:\n    f[x.count('X') * 2 + (x[-1] == 'S') + (x[-1] != 'M')] -= 1\nprint sum(abs(x) for x in f) / 2\n"
        },
        {
            "language": 3,
            "solution": "size=int(input())\nlist=[]\nfor a in range(size):\n        m=input()\n        list.append(m)\nfor a in range(size):\n        m=input()\n        if m in list:\n            list.remove(m)\nprint(len(list))"
        },
        {
            "language": 1,
            "solution": "#coding=utf-8\nimport sys\nif __name__ == \"__main__\":\n\tn = int(raw_input())\n\tdic = {}\n\tfor i in xrange(n):\n\t\ts = raw_input()\n\t\tif not dic.has_key(s):\n\t\t\tdic[s] = 1\n\t\telse:\n\t\t\tdic[s] += 1\n\tans = 0\n\tfor i in xrange(n):\n\t\ts = raw_input()\n\t\tif dic.has_key(s) and dic[s] > 0:\n\t\t\tdic[s] -= 1\n\t\telse:\n\t\t\tans += 1\n\tprint(ans)\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.math.*;\nimport java.util.regex.*;\n\n\n \npublic class Try\n{\n    \n    static class InputReader {\n \n\t\tprivate final InputStream stream;\n\t\tprivate final byte[] buf = new byte[8192];\n\t\tprivate int curChar, snumChars;\n \n\t\tpublic InputReader(InputStream st) {\n\t\t\tthis.stream = st;\n\t\t}\n \n\t\tpublic int read() {\n\t\t\tif (snumChars == -1)\n\t\t\t\tthrow new InputMismatchException();\n\t\t\tif (curChar >= snumChars) {\n\t\t\t\tcurChar = 0;\n\t\t\t\ttry {\n\t\t\t\t\tsnumChars = stream.read(buf);\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t}\n\t\t\t\tif (snumChars <= 0)\n\t\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn buf[curChar++];\n\t\t}\n \n\t\tpublic int ni() {\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c)) {\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tint sgn = 1;\n\t\t\tif (c == '-') {\n\t\t\t\tsgn = -1;\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tint res = 0;\n\t\t\tdo {\n\t\t\t\tres *= 10;\n\t\t\t\tres += c - '0';\n\t\t\t\tc = read();\n\t\t\t} while (!isSpaceChar(c));\n\t\t\treturn res * sgn;\n\t\t}\n \n\t\tpublic long nl() {\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c)) {\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tint sgn = 1;\n\t\t\tif (c == '-') {\n\t\t\t\tsgn = -1;\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tlong res = 0;\n\t\t\tdo {\n\t\t\t\tres *= 10;\n\t\t\t\tres += c - '0';\n\t\t\t\tc = read();\n\t\t\t} while (!isSpaceChar(c));\n\t\t\treturn res * sgn;\n\t\t}\n \n\t\tpublic int[] nia(int n) {\n\t\t\tint a[] = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\ta[i] = ni();\n\t\t\t}\n\t\t\treturn a;\n\t\t}\n \n\t\tpublic String rs() {\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c)) {\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tdo {\n\t\t\t\tres.appendCodePoint(c);\n\t\t\t\tc = read();\n\t\t\t} while (!isSpaceChar(c));\n\t\t\treturn res.toString();\n\t\t}\n \n\t\tpublic String nextLine() {\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = read();\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tdo {\n\t\t\t\tres.appendCodePoint(c);\n\t\t\t\tc = read();\n\t\t\t} while (!isEndOfLine(c));\n\t\t\treturn res.toString();\n\t\t}\n \n\t\tpublic boolean isSpaceChar(int c) {\n\t\t\treturn c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n\t\t}\n \n\t\tprivate boolean isEndOfLine(int c) {\n\t\t\treturn c == '\\n' || c == '\\r' || c == -1;\n\t\t}\n \n\t}\n\t\n\n\t\n\t\n\t\n    static long mod=1000000007;\n    static BigInteger bigInteger = new BigInteger(\"1000000007\");\n    static int n = (int)1e6;\n    static boolean[] prime;\n    static ArrayList<Integer> as;\n    static void sieve() {\n\t\t\tArrays.fill(prime\t, true);\n\t\t\tprime[0] = prime[1] = false;\n\t\t\tfor(int i = 2 ; i * i <= n ; ++i) {\n\t\t\t\tif(prime[i]) {\n\t\t\t\t\tfor(int k = i * i; k< n ; k+=i) {\n\t\t\t\t\t\tprime[k] = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t}\n\t\tstatic PrintWriter w = new PrintWriter(System.out);\n static char [][]sol;\n    public static void main(String[] args)\n    {\n        \n        InputReader sc = new InputReader(System.in);\n        //PrintWriter w = new PrintWriter(System.out);\n    \n       /* \n        prime  = new boolean[n + 1];\n\t\tsieve();\n\t\tprime[1] = false;\n\t\t*/\n\t\t/*\n\t\tas = new ArrayList<>();\n\t\tfor(int i=2;i<=1000000;i++)\n\t\t{\n\t\t    if(prime[i])\n\t\t    as.add(i);\n\t\t}\n\t\t*/\n\t\t\n       /* \n\t\t\n\tlong a = sc.nl();\n\t \n            BigInteger ans = new BigInteger(\"1\");\n            for (long i = 1; i < Math.sqrt(a); i++) {\n                if (a % i == 0) {\n                    if (a / i == i) {\n                        ans = ans.multiply(BigInteger.valueOf(phi(i)));\n                        \n                    } else {\n                        ans = ans.multiply(BigInteger.valueOf(phi(i)));\n                        ans = ans.multiply(BigInteger.valueOf(phi(a / i)));\n \n                        \n                    }\n \n \n                }\n            }\n            w.println(ans.mod(bigInteger));\n            */\n          \n         // MergeSort ob = new MergeSort();\n       // ob.sort(arr, 0, arr.length-1);\n       \n    // Student []st = new Student[x];    \n   // st[i] = new Student(i,d[i]);\n     //Arrays.sort(st,(p,q)->p.diff-q.diff);\n     \nint x = sc.ni();\nArrayList<String> at = new ArrayList<>();\nArrayList<String> at1 = new ArrayList<>();\nHashSet<String> hs = new HashSet<>();\nint res = 0;\nint p = 0;\nfor(int i=0;i<x;i++)\n{\n    at.add(sc.rs());\n}\nfor(int i=0;i<x;i++)\n{\n    \n    at1.add(sc.rs());\n}\nres = x;\nfor(int i=0;i<at1.size();i++)\n{\n    for(int j=0;j<at.size();j++)\n    {\n        if(at1.get(i).equals(at.get(j)))\n        {\n         \n            at.remove(at.get(j));\n            break;\n        }\n    }\n}\n    w.println(at.size()); \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n   \n      w.close();\n        \n    \n    \n    \n    \n    \n   \n  \n    \n    }\n   \n     static class Student\n    {\n        \n        int index;\n        int diff;\n        Student(int index,int diff)\n        {\n            this.index = index;\n            this.diff = diff;\n            \n            \n        }\n        \n    }\n     \n     public static long modMultiply(long one, long two) {\n \n\t\treturn (one % mod * two % mod) % mod;\n\t}\n    static long fx(int m)\n    {\n        long re = 0;\n        for(int i=1;i<=m;i++)\n        {\n            re += (long) (i / gcd(i,m));\n        }\n        return re;\n    }\n     static long gcd(long a, long b)\n    {\n\t if (a == 0)\n\t  return b;\n\t\t\t\t         \n\treturn gcd(b%a, a);\n    }\n    \n   \n    \n     static long phi(long nx)\n    {\n        // Initialize result as n\n        double result = nx; \n        \n     \n        // Consider all prime factors of n and for \n        // every prime factor p, multiply result\n        // with (1 - 1/p)\n        for (int p = 0; as.get(p) * as.get(p) <= nx; ++p)\n        {\n            // Check if p is a prime factor.\n            if (nx % as.get(p) == 0)\n            {\n                // If yes, then update n and result\n                while (nx % as.get(p) == 0)\n                    nx /= as.get(p);\n                result *= (1.0 - (1.0 / (double) as.get(p)));\n            }\n        }\n     \n        // If n has a prime factor greater than sqrt(n)\n        // (There can be at-most one such prime factor)\n        if (nx > 1)\n            result *= (1.0 - (1.0 / (double) nx));\n     \n        return (long)result;\n    \n        \n        //return(phi((long)result,k-1));\n        \n    }\n    \n    public static int primeFactors(int n,int x)\n    {\n        as = new ArrayList<>();\n        int sum = 0;\n        // Print the number of 2s that divide n\n        while (n%2==0)\n        {\n            \n            if(sum == x-1)\n                break;\n            as.add(2);\n            //System.out.print(2 + \" \");\n            n /= 2;\n            sum++;\n        }\n \n        // n must be odd at this point.  So we can\n        // skip one element (Note i = i +2)\n        for (int i = 3; i <= Math.sqrt(n); i+= 2)\n        {\n            // While i divides n, print i and divide n\n            while (n%i == 0)\n            {\n            \n               // System.out.print(i + \" \");\n                if(sum == x-1)\n                break;\n                as.add(i);\n                n /= i;\n                sum++;\n                \n            }\n            \n        }\n \n        // This condition is to handle the case whien\n        // n is a prime number greater than 2\n        if (n >= 2)\n        {\n            sum++;\n            as.add(n);\n        }\n            return sum;\n    }\n    static int digitsum(int x)\n    \n    {    \n \n        int sum = 0;\n        while(x > 0)\n        {\n            int temp = x % 10;\n            sum += temp;\n            x /= 10;\n        }\n        return sum;\n        \n    }\n    static int countDivisors(int n)\n    {\n        int cnt = 0;\n        for (int i = 1; i*i <=n; i++)\n        {\n             if (n % i == 0 && i<=1000000)\n             {\n                // If divisors are equal,\n                // count only one\n                if (n / i == i)\n                   cnt++;\n      \n                else // Otherwise count both\n                    cnt = cnt + 2;\n             }\n         }\n        return cnt;\n    }\n   \n    static boolean isprime(int n)\n    {\n    \n    if(n == 2)\n        return true;\n    if(n == 3)\n        return true;\n    if(n % 2 == 0)\n        return false;\n    if(n % 3 == 0)\n        return false;\n \n    int i = 5;\n   int w = 2;\n \n    while(i * i <= n)\n    {\n        if(n % i == 0)\n            return false;\n    \n \n        i += w;\n        w = 6 - w;\n    }\n \n    return true;\n    }\n    \n    static long log2(long value) {\n    return Long.SIZE-Long.numberOfLeadingZeros(value);\n}\n \n \n \n \n    \n    \n    static boolean binarysearch(int []arr,int p,int n)\n    {\n        //ArrayList<Integer> as = new ArrayList<>();\n        //as.addAll(0,at);\n        //Collections.sort(as);\n        boolean re = false;\n        int st = 0;\n        int end = n-1;\n        \n        \n        \n        while(st <= end)\n        { \n            int mid = st + (end-st)/2;\n        \n            if(p > arr[mid])\n            {\n                st = mid+1;\n                \n            }\n            else if(p < arr[mid])\n            {\n                end = mid-1;\n                \n            }\n            else if(p == arr[mid])\n            {\n            \n            re = true;\n            break;\n            }\n           \n            \n            \n        }\n         return re;\n        \n    }\n    \n   \n    \n    /* Java program for Merge Sort */\nstatic class MergeSort\n{\n    // Merges two subarrays of arr[].\n    // First subarray is arr[l..m]\n    // Second subarray is arr[m+1..r]\n    void merge(int arr[], int l, int m, int r)\n    {\n        // Find sizes of two subarrays to be merged\n        int n1 = m - l + 1;\n        int n2 = r - m;\n \n        /* Create temp arrays */\n        int L[] = new int [n1];\n        int R[] = new int [n2];\n \n        /*Copy data to temp arrays*/\n        for (int i=0; i<n1; ++i)\n            L[i] = arr[l + i];\n        for (int j=0; j<n2; ++j)\n            R[j] = arr[m + 1+ j];\n \n \n        /* Merge the temp arrays */\n \n        // Initial indexes of first and second subarrays\n        int i = 0, j = 0;\n \n        // Initial index of merged subarry array\n        int k = l;\n        while (i < n1 && j < n2)\n        {\n            if (L[i] <= R[j])\n            {\n                arr[k] = L[i];\n                i++;\n            }\n            else\n            {\n                arr[k] = R[j];\n                j++;\n            }\n            k++;\n        }\n \n        /* Copy remaining elements of L[] if any */\n        while (i < n1)\n        {\n            arr[k] = L[i];\n            i++;\n            k++;\n        }\n \n        /* Copy remaining elements of R[] if any */\n        while (j < n2)\n        {\n            arr[k] = R[j];\n            j++;\n            k++;\n        }\n    }\n \n    // Main function that sorts arr[l..r] using\n    // merge()\n    void sort(int arr[], int l, int r)\n    {\n        if (l < r)\n        {\n            // Find the middle point\n            int m = (l+r)/2;\n \n            // Sort first and second halves\n            sort(arr, l, m);\n            sort(arr , m+1, r);\n \n            // Merge the sorted halves\n            merge(arr, l, m, r);\n        }\n    }\n \n    /* A utility function to print array of size n */\n    \n \n   \n}\n    \n\n    \n    \n    \n    public static int ip(String s){\n\t\treturn Integer.parseInt(s);\n\t}\n\t public static String ips(int s){\n\t\treturn Integer.toString(s);\n\t}\n\t\n    \n\t\t\t\t\t \n}"
        },
        {
            "language": 3,
            "solution": "prev, curr = [], []\nt = int(input())\nfor i in range(t):\n    prev.append(input())\nfor i in range(t):\n    curr.append(input())\nprev = sorted(prev)\ncurr = sorted(curr)\nrem = []\nfor i in prev:\n    if i in curr:\n        rem.append(i)\nfor i in rem:\n    if i in prev and i in curr:\n        prev.remove(i)\n        curr.remove(i)\nif curr == [] and prev == []:\n    print(0)\nelse:\n    print(len(prev))\n        \n"
        },
        {
            "language": 3,
            "solution": "c = {}\nd = {}\na = int(input())\nfor i in range(a):\n    b = input()\n    if c.get(b) != None:\n        c[b] += 1\n    else:\n        c[b] = 1\nfor i in range(a):\n    b = input()\n    if d.get(b) != None:\n        d[b] += 1\n    else:\n        d[b] = 1\nres = 0\nfor i in c:\n    if d.get(i) != None:\n        k = min(d[i], c[i])\n        d[i] -= k\n        c[i] -= k\nfor j in d:\n    res += d[j]\n\nprint(res)"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class dummy\n{\n    public static void main(String args[])throws Exception\n    {\n        Scanner sc=new Scanner(System.in);\n        int n = sc.nextInt();\n        String[][] ar = new String[n][2];\n        String dummy;\n        int i,j;\n        for(i=0;i<n;i++)\n        {\n            ar[i][0] = sc.next();   \n            ar[i][1] = null;\n        }\n        int sum=n;\n        for(i=0;i<n;i++)\n        {\n            dummy = sc.next();\n            for(j=0;j<n;j++)\n            {\n                if(ar[j][1]==null)\n                {\n                    if(ar[j][0].equals(dummy))\n                    {\n                        ar[j][1]=\"h\";\n                        sum--;\n                        break;\n                    }\n                }\n            }\n        }\n        System.out.println(sum);\n    }\n}"
        },
        {
            "language": 4,
            "solution": "/* package whatever; // don't place package name! */\n\nimport java.util.*;\nimport java.lang.*;\nimport java.io.*;\nimport java.util.Collections;\nimport java.util.HashSet;\n\n/* Name of the class has to be \"Main\" only if the class is public. */\npublic class Ideone\n{\n\tpublic static void main (String[] args) throws java.lang.Exception\n\t{\n\t\tScanner sc=new Scanner(System.in);\n\t\tint n=sc.nextInt();\n\t\tArrayList<String> s1=new ArrayList<String> ();\n\t\tArrayList<String> s2=new ArrayList<String> ();\n\t\t\tArrayList<String> s3=new ArrayList<String> ();\n\t\t\tint i;\n\t\tfor(i=0;i<n;i++)\n\t\ts1.add(sc.next());\n\t\t\n\t\tfor(i=0;i<n;i++)\n\t\ts2.add(sc.next());\n\t\ts3.addAll(s2);\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tif(s2.contains(s1.get(i)))\n\t\t\ts3.remove(s1.get(i));\n\t\t\t\n\t\t\t\n\t\t}\n\tSystem.out.println(s3.size());\n\t\t\n\t}\n}"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class prob1 {\n    public static void main(String[] args)\n    {\n        Scanner sc = new Scanner(System.in);\n        int amt = sc.nextInt();\n        String prevYear[] = new String[amt];\n        String thisYear[] = new String[amt];\n        boolean marked[] = new boolean[amt];\n        for(int i = 0; i < amt; i++)\n        {\n            prevYear[i] = sc.next();\n        }\n        for(int j = 0; j < amt; j++)\n        {\n            thisYear[j] = sc.next();\n            marked[j] = false;\n        }\n        int count = 0;\n        for(int i = 0; i < amt; i++)\n        {\n            boolean existsAMatch = false;\n            for(int j = 0; j < amt; j++)\n            {\n                if(marked[j] == false && prevYear[i].equals(thisYear[j]))\n                {\n                    existsAMatch = true;\n                    marked[j] = true;\n                    break;\n                }\n            }\n            if(existsAMatch == false)\n            {\n                count++;\n            }\n        }\n        System.out.println(count);\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\n\npublic class A1000{\n\tpublic static void main(String args[])throws IOException{\n\t\tScanner sc=new Scanner(new BufferedReader(new InputStreamReader(System.in)));\n\t\tint n=sc.nextInt();\n\t\tint a[]=new int[9];\n\t\tint b[]=new int[9];\n\t\tfor(int i=0;i<n;i++){\n\n\t\t\tString s=sc.next();\n\t\t\tif(s.equals(\"XXXS\"))\n\t\t\t\ta[0]++;\n\t\t\telse if(s.equals(\"XXS\"))\n\t\t\t\ta[1]++;\n\t\t\telse\n\t\t\t\tif(s.equals(\"XS\"))\n\t\t\t\ta[2]++;\n\t\t\telse if(s.equals(\"S\"))\n\t\t\t\ta[3]++;\n\t\t\telse if(s.equals(\"M\"))\n\t\t\t\ta[4]++;\n\t\t\telse if(s.equals(\"L\"))\n\t\t\t\ta[5]++;\n\t\t\telse if(s.equals(\"XL\"))\n\t\t\t\ta[6]++;\n\t\t\telse if(s.equals(\"XXL\"))\n\t\t\t\ta[7]++;\n\t\t\telse if(s.equals(\"XXXL\"))\n\t\t\t\ta[8]++;\n\t\t}\n\t\tfor(int i=0;i<n;i++){\n\n\t\t\tString s=sc.next();\n\t\t\tif(s.equals(\"XXXS\"))\n\t\t\t\tb[0]++;\n\t\t\telse if(s.equals(\"XXS\"))\n\t\t\t\tb[1]++;\n\t\t\telse\n\t\t\t\tif(s.equals(\"XS\"))\n\t\t\t\tb[2]++;\n\t\t\telse if(s.equals(\"S\"))\n\t\t\t\tb[3]++;\n\t\t\telse if(s.equals(\"M\"))\n\t\t\t\tb[4]++;\n\t\t\telse if(s.equals(\"L\"))\n\t\t\t\tb[5]++;\n\t\t\telse if(s.equals(\"XL\"))\n\t\t\t\tb[6]++;\n\t\t\telse if(s.equals(\"XXL\"))\n\t\t\t\tb[7]++;\n\t\t\telse if(s.equals(\"XXXL\"))\n\t\t\t\tb[8]++;\n\t\t}\n\t\tint count=0;\n\t\tfor(int i=0;i<9;i++){\n\t\t\tcount+=Math.abs(a[i]-b[i]);\n\t\t}\n\t\tSystem.out.println(count/2);\n\t}\n}"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=[]\nl1=[]\nfor i in range(n):\n    l.append(input())\nfor i in range(n):\n    l1.append(input())\ncount=0\nfor i in l1:\n    if i in l:\n        l.remove(i)\n    else:\n        count=count+1\nprint(count)"
        },
        {
            "language": 3,
            "solution": "\"\"\"\n3\nXS\nXS\nM\nXL\nS\nXS\n\n\"\"\"\nfrom collections import defaultdict \n\nn=int(input())\nprev=defaultdict(lambda:0,{})\nnow=[]\nfor i in range(n):\n\tele=input()\n\tprev[ele]+=1 \n\nfor i in range(n):\n\tele=input()\n\tif(prev[ele]>0):\n\t\tprev[ele]-=1 \n\telif(prev[ele]==0):\n\t\tnow.append(ele)\n\nprev1=[] \nfor ele in prev:\n\tif(prev[ele]>0):\n\t\tprev1.append(ele) \n\nl1=len(prev1)\nl2=len(now)\n\nprint(l2)\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios::sync_with_stdio(false), cin.tie(0);\n  int n, c = 0;\n  cin >> n;\n  string a[n], b[n];\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n  }\n  for (int i = 0; i < n; i++) {\n    cin >> b[i];\n  }\n  sort(a, a + n);\n  sort(b, b + n);\n  for (int i = 0; i < n; i++) {\n    for (int j = 0; j < n; j++) {\n      if (a[i] == b[j]) {\n        b[j] = -1;\n        c++;\n        break;\n      }\n    }\n  }\n  cout << n - c;\n}\n"
        },
        {
            "language": 3,
            "solution": "# coding: utf-8\n\n# /*\n#  * @Author: zwh\n#  * @Date: 2018-06-27 22:36:16\n#  * @LastEditors: zwh\n#  * @LastEditTime: 2018-06-27 22:36:16\n#  * @Description:\n#  */\n\ndef main():\n    num = int(input())\n    newshirts, oldshirts = [], []\n    seconds = 0\n    for k in range(num):\n        newshirts.append(input())\n    for k in range(num):\n        oldshirts.append(input())\n    for i in range(len(newshirts)):\n        if newshirts[i] in oldshirts:\n            oldshirts[oldshirts.index(newshirts[i])] = None\n            newshirts[i] = None\n\n\n    # assert len(newshirts) == len(oldshirts) and len(newshirts) % 2 == 0\n    return len(newshirts) - newshirts.count(None)\n\n\nif __name__ == '__main__':\n    print(main())"
        },
        {
            "language": 3,
            "solution": "import os\nimport sys\nimport math\nif __name__==\"__main__\":\n    n=int(input())\n    c=list()\n    d=list()\n    for x in range(0,n):\n        c.append(str(input()))\n    for x in range(0,n):\n        d.append(str(input()))\n    ans=0\n    for i in range(0,len(c)):\n        if c[i] not in d:\n            ans+=1\n        elif c[i] in d:\n            d.remove(c[i])\n    print(ans)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nold = []\nfor a0 in range(n):\n\told.append(input())\nnew = []\nfor a0 in range(n):\n\tnew.append(input())\n\t\nans = 0\nans += abs(old.count(\"XS\")-new.count(\"XS\"))\nans += abs(old.count(\"XXS\")-new.count(\"XXS\"))\nans += abs(old.count(\"XXXS\")-new.count(\"XXXS\"))\nif new.count(\"S\") > old.count(\"S\"):\n\tans += abs(old.count(\"S\")-new.count(\"S\"))\nif new.count(\"M\") > old.count(\"M\"):\n\tans += abs(old.count(\"M\")-new.count(\"M\"))\nif new.count(\"L\") > old.count(\"L\"):\n\tans += abs(old.count(\"L\")-new.count(\"L\"))\n\t\nprint(ans)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\n\n\na={'S':0,'XS':0,'XXS':0,'XXXS':0,'M':0,'L':0,'XL':0,'XXL':0,'XXXL':0}\nb={'S':0,'XS':0,'XXS':0,'XXXS':0,'M':0,'L':0,'XL':0,'XXL':0,'XXXL':0}\n\nfor i in range(n):\n    s=str(input())\n    a[s]+=1\n    \n\nfor i in range(n):\n    s=str(input())\n    b[s]+=1\n\nresult=0\nresult+=abs(a['XL']-b['XL'])\n\nresult+=abs(a['XXL']-b['XXL'])\nresult+=abs(a['XXXL']-b['XXXL'])\n\nresult+=max(abs(a['L']-b['L']),\nabs(a['M']-b['M']),\nabs(a['S']-b['S']))\nprint(result)\n"
        },
        {
            "language": 1,
            "solution": "n=int(raw_input().strip())\nl=[]\nl1=[]\nl2=[]\nl3=[]\nl4=[]\ncount1=0\ncount2=0\ncount3=0\ncount4=0\ncount=0\nfor i in range(n):\n    s=str(raw_input().strip())\n    l.append(s)\nfor j in range(n):\n    s=str(raw_input().strip())\n    if s in l:\n        l.remove(s)\nprint len(l)\n\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.lang.*;\nimport java.math.*;\nimport java.io.*;\n\n/* spar5h */\n\npublic class cf1 implements Runnable{    \n\t\n\tpublic void run() {\n\n\t\tInputReader s = new InputReader(System.in);\n\t\tPrintWriter w = new PrintWriter(System.out);\n\t\t\n\t\tint n = s.nextInt();\n\t\t\n\t\tHashMap<String, Integer> a = new HashMap<String, Integer>();\n\t\t\n\t\tfor(int i = 0; i < n; i++) {\n\t\t\t\n\t\t\tString str = s.next();\n\t\t\t\n\t\t\tif(a.get(str) == null)\n\t\t\t\ta.put(str, 1);\n\t\t\telse\n\t\t\t\ta.put(str, a.get(str) + 1);\n\t\t}\n\t\t\n\t\tHashMap<String, Integer> b = new HashMap<String, Integer>();\n\t\t\n\t\tfor(int i = 0; i < n; i++) {\n\t\t\t\n\t\t\tString str = s.next();\n\t\t\t\n\t\t\tif(b.get(str) == null)\n\t\t\t\tb.put(str, 1);\n\t\t\telse\n\t\t\t\tb.put(str, b.get(str) + 1);\n\t\t}\n\t\t\t\n\t\tint res = 0;\n\t\t\n\t\tfor(Map.Entry<String, Integer> entry : b.entrySet()) {\n\t\t\t\n\t\t\tint v1 = entry.getValue();\n\t\t\t\n\t\t\tint v2;\n\t\t\t\n\t\t\tif(a.get(entry.getKey()) == null)\n\t\t\t\tv2 = 0;\n\t\t\telse\n\t\t\t\tv2 = a.get(entry.getKey());\n\t\t\t\n\t\t\tif(v2 < v1)\n\t\t\t\tres += v1 - v2;\n\t\t}\n\t\t\n\t\tw.println(res);\n\t\t\n\t\tw.close();\n\t}\n\t\n\tstatic class InputReader {\n\t\t\n\t\tprivate InputStream stream;\n\t\tprivate byte[] buf = new byte[1024];\n\t\tprivate int curChar;\n\t\tprivate int numChars;\n\t\tprivate SpaceCharFilter filter;\n\t\t\n\t\tpublic InputReader(InputStream stream)\n\t\t{\n\t\t\tthis.stream = stream;\n\t\t}\n\t\t\n\t\tpublic int read()\n\t\t{\n\t\t\tif (numChars==-1) \n\t\t\t\tthrow new InputMismatchException();\n\t\t\t\n\t\t\tif (curChar >= numChars)\n\t\t\t{\n\t\t\t\tcurChar = 0;\n\t\t\t\ttry \n\t\t\t\t{\n\t\t\t\t\tnumChars = stream.read(buf);\n\t\t\t\t}\n\t\t\t\tcatch (IOException e)\n\t\t\t\t{\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(numChars <= 0)\t\t\t\t\n\t\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn buf[curChar++];\n\t\t}\n\t \n\t\tpublic String nextLine()\n\t\t{\n\t\t\tBufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n\t\t\tString str = \"\";\n            try\n            {\n                str = br.readLine();\n            }\n            catch (IOException e)\n            {\n                e.printStackTrace();\n            }\n            return str;\n\t\t}\n\t\tpublic int nextInt()\n\t\t{\n\t\t\tint c = read();\n\t\t\t\n\t\t\twhile(isSpaceChar(c)) \n\t\t\t\tc = read();\n\t\t\t\n\t\t\tint sgn = 1;\n\t\t\t\n\t\t\tif (c == '-') \n\t\t\t{\n\t\t\t\tsgn = -1;\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\t\n\t\t\tint res = 0;\n\t\t\tdo \n\t\t\t{\n\t\t\t\tif(c<'0'||c>'9') \n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\tres *= 10;\n\t\t\t\tres += c - '0';\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\twhile (!isSpaceChar(c)); \n\t\t\t\n\t\t\treturn res * sgn;\n\t\t}\n\t\t\n\t\tpublic long nextLong() \n\t\t{\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = read();\n\t\t\tint sgn = 1;\n\t\t\tif (c == '-') \n\t\t\t{\n\t\t\t\tsgn = -1;\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tlong res = 0;\n\t\t\t\n\t\t\tdo \n\t\t\t{\n\t\t\t\tif (c < '0' || c > '9')\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\tres *= 10;\n\t\t\t\tres += c - '0';\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\twhile (!isSpaceChar(c));\n\t\t\t\treturn res * sgn;\n\t\t}\n\t\t\n\t\tpublic double nextDouble() \n\t\t{\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = read();\n\t\t\tint sgn = 1;\n\t\t\tif (c == '-') \n\t\t\t{\n\t\t\t\tsgn = -1;\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tdouble res = 0;\n\t\t\twhile (!isSpaceChar(c) && c != '.') \n\t\t\t{\n\t\t\t\tif (c == 'e' || c == 'E')\n\t\t\t\t\treturn res * Math.pow(10, nextInt());\n\t\t\t\tif (c < '0' || c > '9')\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\tres *= 10;\n\t\t\t\tres += c - '0';\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tif (c == '.') \n\t\t\t{\n\t\t\t\tc = read();\n\t\t\t\tdouble m = 1;\n\t\t\t\twhile (!isSpaceChar(c)) \n\t\t\t\t{\n\t\t\t\t\tif (c == 'e' || c == 'E')\n\t\t\t\t\t\treturn res * Math.pow(10, nextInt());\n\t\t\t\t\tif (c < '0' || c > '9')\n\t\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t\tm /= 10;\n\t\t\t\t\tres += (c - '0') * m;\n\t\t\t\t\tc = read();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn res * sgn;\n\t\t}\n\t\t\n\t\tpublic String readString() \n\t\t{\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = read();\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tdo \n\t\t\t{\n\t\t\t\tres.appendCodePoint(c);\n\t\t\t\tc = read();\n\t\t\t} \n\t\t\twhile (!isSpaceChar(c));\n\t\t\t\n\t\t\treturn res.toString();\n\t\t}\n\t \n\t\tpublic boolean isSpaceChar(int c) \n\t\t{\n\t\t\tif (filter != null)\n\t\t\t\treturn filter.isSpaceChar(c);\n\t\t\treturn c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n\t\t}\n\t \n\t\tpublic String next() \n\t\t{\n\t\t\treturn readString();\n\t\t}\n\t\t\n\t\tpublic interface SpaceCharFilter \n\t\t{\n\t\t\tpublic boolean isSpaceChar(int ch);\n\t\t}\n\t}\n    \n\tpublic static void main(String args[]) throws Exception\n\t{\n\t\tnew Thread(null, new cf1(),\"cf1\",1<<26).start();\n\t}\n}   "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, res;\nmap<string, int> M;\nstring s;\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin >> n;\n  for (int i = 1; i <= n; i++) {\n    cin >> s;\n    M[s]++;\n  }\n  for (int i = 1; i <= n; i++) {\n    cin >> s;\n    if (M[s])\n      M[s]--;\n    else\n      res++;\n  }\n  cout << res;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na,b=[],[]\n\nfor i in range(n):\n\ta.append(str(input()))\n\t\nfor i in range(n):\n\tb.append(str(input()))\n\t\nc,f=0,[False for i in range(n)]\nfor i in range(n):\n\tl=len(b)\n\tfor j in range(l):\n\t\tif a[i]==b[j]:\n\t\t\tf[i]=True\n\t\t\tb.pop(j)\n\t\t\tbreak\n\t\t\n#print(a,b,f)\nl=len(b)\nfor i in range(l):\n\tmn=len(b[i])\n\tfor j in range(n):\n\t\tif f[j]==False:\n\t\t\tif len(b[i])==len(a[j]):\n\t\t\t\t#print(i,j)\n\t\t\t\tc1,lb=0,len(b[i]) \n\t\t\t\tfor k in range(lb):\n\t\t\t\t\tif b[i][k]!=a[j][k]:\n\t\t\t\t\t\tc1+=1 \n\t\t\t\tif mn>=c1:\n\t\t\t\t\tmn=c1\n\t\t\t\t\tind=j \n\t\t\t\t\t\n\t#print(mn)\t\n\tf[ind]=True\n\tc+=mn \n\t\t\nprint(c)\n\t\n\t\n\t\n\t\n\t\n\t\n\t\t\t\n"
        },
        {
            "language": 4,
            "solution": "\n\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.Scanner;\n\npublic class settingzeros {\n\n\tpublic static void main(String args[])\n\t{\n\t\tScanner scan=new Scanner(System.in);\n\t\tint n=scan.nextInt();\n\t\tHashMap<String,Integer> set1=new HashMap<String,Integer>();\n\t\t\n\t\t\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t\tString g=scan.next();\n\t\t\tif(set1.containsKey(g)){\n\t\t\t\tset1.replace(g, set1.get(g)+1);\n\t\t\t}else{\n\t\t\t\tset1.put(g, 1);\n\t\t\t}\n\t\t}\n\t\tint count=0;\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t\tString f=scan.next();\n\t\t\tif(set1.containsKey(f) && set1.get(f)>=1)\n\t\t\t{\n\t\t\t\tset1.replace(f,set1.get(f)-1);\n\t\t\t\t\n\t\t\t}else{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\n\t\t\t\n\t\t}\n\t\tSystem.out.println(count);\n\t}\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[]\nb=[]\nfor i in range(2*n):\n    s=input()\n    if i<n:\n        a.append(s)\n    else:\n        b.append(s)\nc=0\ni=0\n\nwhile(i<len(a)):\n    \n    if a[i] in b:\n        ind=b.index(a[i])\n        del a[i]\n        del b[ind]\n    else:\n        i+=1\n        c+=1\n    \nprint(c)\n    \n\n           \n        \n    "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint N;\nstd::map<std::string, int> ma;\nint main() {\n  std::cin >> N;\n  for (int i = 0; i < N; ++i) {\n    std::string s;\n    std::cin >> s;\n    ma[s]++;\n  }\n  int ans = N;\n  for (int i = 0; i < N; ++i) {\n    std::string s;\n    std::cin >> s;\n    if (ma[s]) {\n      ma[s]--;\n      ans--;\n    }\n  }\n  std::cout << ans << \"\\n\";\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\npyear = []\nfor i in range(n):\n    pyear.append(input())\n\nyear = []\nfor i in range(n):\n    year.append(input())\n\ncounter = 0\nfor x in pyear:\n    if x in year:\n        year.remove(x)\n        counter += 1\n\n\nprint(n - counter)\n"
        },
        {
            "language": 1,
            "solution": "#import resource\n#import sys\n#resource.setrlimit(resource.RLIMIT_STACK, [0x100000000, resource.RLIM_INFINITY])\n#sys.setrecursionlimit(0x10000000)\nfrom sys import stdin, stdout\ndef modinv(n,p):\n    return pow(n,p-2,p)\ndef ncr(n,r,p,f):\n    t=((f[n])*(modinv(f[r],p)%p)*(modinv(f[n-r],p)%p))%p\n    return t\nmod=(10**9)+7\ndef GCD(x, y):\n   while(y):\n       x, y = y, x % y\n   return x\ndef BS(arr, l, r, x):\n    if r >= l:\n        mid = l + (r - l)/2\n        if arr[mid] == x:\n            return mid\n        elif arr[mid] > x:\n            return BS(arr, l, mid-1, x)\n        else:\n            return BS(arr, mid+1, r, x)\n    else:\n        return -1\nfrom bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nimport itertools\nimport math\nfrom Queue import Queue as Q\n\"\"\"---------------------------------------------------------------------\"\"\"\nn=input()\nb=[]\nfor i in range(n):\n    b.append(raw_input())\ne=[]\nfor j in range(n):\n    a=raw_input()\n    t=0\n    for i in range(len(b)):\n        if(b[i]==a):\n            t=1\n            del b[i]\n            break\nprint len(b)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nchar buf[25];\nconst int maxn = 110;\nstring a[maxn], b[maxn];\nint n, ans;\nint read() {\n  int x = 0, f = 0;\n  char ch = getchar();\n  while (ch < '0' || ch > '9') {\n    if (ch == '-') f = 1;\n    ch = getchar();\n  }\n  while (ch >= '0' && ch <= '9') {\n    x = (x << 1) + (x << 3) + (ch ^ 48);\n    ch = getchar();\n  }\n  return f ? -x : x;\n}\nvoid write(int x) {\n  if (!x) {\n    putchar('0');\n    return;\n  }\n  if (x < 0) {\n    putchar('-');\n    x = -x;\n  }\n  int cnt = 0;\n  while (x) {\n    buf[++cnt] = '0' + x % 10;\n    x /= 10;\n  }\n  for (int i = cnt; i >= 1; --i) putchar(buf[i]);\n}\nstring Getline() {\n  char ch = getchar();\n  string s = \"\";\n  while (ch != '\\n') {\n    s += ch;\n    ch = getchar();\n  }\n  return s;\n}\nint main() {\n  n = read();\n  for (int i = 1; i <= n; ++i) a[i] = Getline();\n  sort(a + 1, a + 1 + n);\n  for (int i = 1; i <= n; ++i) b[i] = Getline();\n  sort(b + 1, b + 1 + n);\n  int t1 = 1, t2 = 1;\n  while (t1 <= n && t2 <= n) {\n    if (a[t1] == b[t2]) {\n      ++ans;\n      ++t1;\n      ++t2;\n    } else if (a[t1] < b[t2])\n      ++t1;\n    else\n      ++t2;\n  }\n  write(n - ans);\n  putchar('\\n');\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nlast=[]\ncurrent=[]\nfor i in range(n):\n\ttemp=input()\n\tlast.append(temp)\nfor i in range(n):\n\ttemp=input()\n\tif temp in last:\n\t\tlast.remove(temp)\n\telse:\n\t\tcurrent.append(temp)\nprint(len(current))"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MOD = 1000000007;\nconst int N = 100005;\nconst int M = 1000005;\nint main() {\n  int n;\n  scanf(\"%d\", &n);\n  vector<string> a, b;\n  for (int i = 0; i < n; i++) {\n    string str;\n    cin >> str;\n    a.push_back(str);\n  }\n  for (int i = 0; i < n; i++) {\n    string str;\n    cin >> str;\n    b.push_back(str);\n  }\n  int ans = 0;\n  for (int i = 0; i < a.size(); i++) {\n    for (int j = 0; j < b.size(); j++) {\n      if (a[i] == b[j]) {\n        b.erase(b.begin() + j);\n        break;\n      }\n    }\n  }\n  cout << b.size() << endl;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "#codeforces_1000A_live\nn = int(input())\ns = []\ntemp = \"\"\nfor k in range(n):\n\ttemp = input()\n\ts.append(temp)\nans = 0;\ns2 = []\nfor k in range(n):\n\ttemp = input()\n\tif temp in s:\n\t\ts.remove(temp)\n\telse:\n\t\ts2.append(temp)\ns.sort(key = lambda s: len(s))\ns2.sort(key = lambda s: len(s))\nfor k in range(len(s)):\n\tans += sum(1 for a, b in zip(s[k], s2[k]) if a != b)\nprint(ans)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = [input() for i in range(n)]\nb = [input() for i in range(n)]\nxxxc = abs(a.count('XXXS') - b.count('XXXS'))\nxxc = abs(a.count('XXS') - b.count('XXS'))\nxc = abs(a.count('XS') - b.count('XS'))\ncs = a.count('S') - b.count('S')\ncm = a.count('M') - b.count('M')\ncl = a.count('L') - b.count('L')\nc = 0\nif cs > 0:\n  c += cs\nif cm > 0:\n  c += cm\nif cl > 0:\n  c += cl\nprint(xxxc+xxc+xc+c)"
        },
        {
            "language": 1,
            "solution": "n=int(raw_input())\n\ndic={}\nfor _ in range(n):\n\n    s = raw_input()\n    if s in dic:\n        dic[s]+=1\n    else:\n        dic[s]=1\nfor _ in range(n):\n\n    s = raw_input()\n    if s in dic:\n        dic[s]-=1\n    else:\n        dic[s]=-1\nct=0\nfor key in dic:\n    ct+=abs(dic[key])\n\nprint ct/2\nexit()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nbool st(string x, string y) {\n  if (x == \"-1\" && y == \"-1\")\n    return false;\n  else if (x == \"-1\")\n    return false;\n  else if (y == \"-1\")\n    return true;\n  else\n    return x.length() > y.length();\n}\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  ;\n  int n;\n  cin >> n;\n  long long int ans = 0;\n  string a[n], b[n];\n  for (int i = 0; i < n; i++) cin >> a[i];\n  for (int i = 0; i < n; i++) cin >> b[i];\n  for (int i = 0; i < n; i++) {\n    if (a[i] == \"-1\") continue;\n    for (int j = 0; j < n; j++) {\n      if (a[i] == b[j]) {\n        a[i] = \"-1\";\n        b[j] = \"-1\";\n        break;\n      }\n    }\n  }\n  sort(a, a + n, st);\n  sort(b, b + n, st);\n  for (int i = 0; i < n; i++) {\n    int l = a[i].length();\n    if (a[i] == \"-1\") break;\n    for (int j = 0; j < l; j++) {\n      if (a[i][j] != b[i][j]) ++ans;\n    }\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nusing ll = int64_t;\nusing ld = long double;\nusing ul = uint64_t;\nusing vi = vector<int>;\nusing vl = vector<ll>;\nusing vvi = vector<vi>;\nusing vvl = vector<vl>;\nusing pi = pair<int, int>;\nusing pl = pair<ll, ll>;\nusing vpi = vector<pi>;\nstatic constexpr int inf = (int)1e9 + 5;\nstatic constexpr ll infl = (ll)1e18 + 5;\nstatic constexpr ll M = (ll)1e9 + 7;\nstatic mt19937 rng((uint32_t)chrono::duration_cast<chrono::nanoseconds>(\n                       chrono::high_resolution_clock::now().time_since_epoch())\n                       .count());\nint cpmlen(const string &a, const string &b) {\n  if (a.size() == b.size()) return a < b;\n  return a.size() < b.size();\n}\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.precision(10);\n  int n;\n  cin >> n;\n  vector<string> a(n), b(n);\n  for (auto &ai : a) cin >> ai;\n  for (auto &bi : b) cin >> bi;\n  sort((a).begin(), (a).end(), cpmlen);\n  sort((b).begin(), (b).end(), cpmlen);\n  map<char, int> m;\n  for (int i = 0; i < (n); ++i)\n    if (a[i].size() == 1) m[a[i][0]]++, m[b[i][0]]--;\n  int ans = abs(m['M']) + abs(m['L']) + abs(m['S']);\n  ans /= 2;\n  for (int i = 0; i < (n); ++i)\n    if (a[i].size() > 1) ans += a[i] != b[i];\n  cout << ans;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 1000;\nstring a[maxn], b[maxn];\nint main() {\n  int n;\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; ++i) cin >> a[i];\n  for (int i = 1; i <= n; ++i) cin >> b[i];\n  int ans = 0;\n  for (int i = 1; i <= n; ++i) {\n    for (int j = 1; j <= n; ++j) {\n      if (a[i] == b[j]) {\n        a[i] = b[j] = \"\";\n        break;\n      }\n    }\n  }\n  for (int i = 1; i <= n; ++i) {\n    if (a[i] == \"\") continue;\n    int tm = 1000, p = 0;\n    for (int j = 1; j <= n; ++j) {\n      if (a[i].size() == b[j].size()) {\n        int cnt = 0;\n        for (int k = 0; k < a[i].size(); ++k)\n          if (a[i][k] != b[j][k]) cnt++;\n        if (tm > cnt) tm = cnt, p = j;\n      }\n    }\n    ans += tm;\n    b[p] = \"\";\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "from collections import*\nn=int(input())\nI=lambda:Counter(input()for _ in[0]*n)\na,b=I(),I()\nprint(sum(max(0,v-b[k])for k,v in a.items()))"
        },
        {
            "language": 4,
            "solution": "import java.util.HashMap;\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int N = sc.nextInt();\n        HashMap<String, Integer> map = new HashMap<>();\n        for (int i = 0; i < N; i++) {\n            String ts = sc.next();\n            map.put(ts, map.getOrDefault(ts, 0) + 1);\n        }\n        for (int i = 0; i < N; i++) {\n            String ts = sc.next();\n            map.put(ts, map.getOrDefault(ts, 0) - 1);\n        }\n\n        int ans = 0;\n        for (int count: map.values()) {\n            ans += Math.abs(count);\n        }\n        System.out.println(ans/2);\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.io.BufferedWriter;\nimport java.util.HashMap;\nimport java.util.InputMismatchException;\nimport java.io.IOException;\nimport java.util.Map;\nimport java.util.Map.Entry;\nimport java.io.Writer;\nimport java.io.OutputStreamWriter;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        OutputWriter out = new OutputWriter(outputStream);\n        TaskA solver = new TaskA();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class TaskA {\n        public void solve(int testNumber, InputReader in, OutputWriter out) {\n            int n = in.nextInt();\n            HashMap<String, Integer> map = new HashMap<>();\n            for (int i = 0; i < n; i++) {\n                String next = in.next();\n                map.put(next, map.getOrDefault(next, 0) + 1);\n            }\n            int ct = 0;\n            for (int i = 0; i < n; i++) {\n                String next = in.next();\n                if (map.containsKey(next)) {\n                    map.put(next, map.get(next) - 1);\n                    if (map.get(next) <= 0) {\n                        map.remove(next);\n                    }\n                }\n            }\n            for (Map.Entry<String, Integer> entry : map.entrySet()) {\n                ct += entry.getValue();\n            }\n            out.println(ct);\n        }\n\n    }\n\n    static class OutputWriter {\n        private final PrintWriter writer;\n\n        public OutputWriter(OutputStream outputStream) {\n            writer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));\n        }\n\n        public OutputWriter(Writer writer) {\n            this.writer = new PrintWriter(writer);\n        }\n\n        public void close() {\n            writer.close();\n        }\n\n        public void println(int i) {\n            writer.println(i);\n        }\n\n    }\n\n    static class InputReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private InputReader.SpaceCharFilter filter;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int read() {\n            if (numChars == -1) {\n                throw new InputMismatchException();\n            }\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (numChars <= 0) {\n                    return -1;\n                }\n            }\n            return buf[curChar++];\n        }\n\n        public int readInt() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do {\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public String readString() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            StringBuilder res = new StringBuilder();\n            do {\n                if (Character.isValidCodePoint(c)) {\n                    res.appendCodePoint(c);\n                }\n                c = read();\n            } while (!isSpaceChar(c));\n            return res.toString();\n        }\n\n        public boolean isSpaceChar(int c) {\n            if (filter != null) {\n                return filter.isSpaceChar(c);\n            }\n            return isWhitespace(c);\n        }\n\n        public static boolean isWhitespace(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        public String next() {\n            return readString();\n        }\n\n        public int nextInt() {\n            return readInt();\n        }\n\n        public interface SpaceCharFilter {\n            public boolean isSpaceChar(int ch);\n\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\n\nprevsp = []\nnewsp = []\nam = 0\n\nfor i in range(n):\n    prevsp.append(input())\n\nfor i in range(n):\n    newsp.append(input())\n\nfor i in range(n):\n    try:\n        t = prevsp.index(newsp[i])\n        if(t != -1):\n            prevsp.pop(t)\n            am += 1\n    except Exception:\n        continue\n\nprint(n-am)\n\n\n"
        },
        {
            "language": 1,
            "solution": "n=int(raw_input())\nl1,l2=[],[]\nfor i in range(n):\n    s=raw_input()\n    l1.append(s)\nfor i in range(n):\n    s=raw_input()\n    if s  in l1:\n        l1.remove(s)\nprint len(l1)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = []\nb = []\nfor i in range(n):\n    a.append(input())\nfor i in range(n):\n    b.append(input())\nanswer = 0\nfor i in range(n):\n    if b[i] not in a:\n        answer += 1\n    else:\n        a[a.index(b[i])] = ''\nprint(answer)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long int m, n, i, j, k, z = 0, x, y;\n  long long int ans = 0;\n  scanf(\"%lld\", &(n));\n  string s[2 * n];\n  for (i = 0; i < 2 * n; i++) cin >> (s[i]);\n  std::map<string, long long int> make_pair, mpp;\n  for (i = 0; i < n; ++i) {\n    make_pair[s[i]]++;\n  }\n  for (i = n; i < 2 * n; ++i) {\n    mpp[s[i]]++;\n  }\n  ans += abs(make_pair[\"S\"] - mpp[\"S\"]);\n  ans += abs(make_pair[\"XS\"] - mpp[\"XS\"]);\n  ans += abs(make_pair[\"XXXS\"] - mpp[\"XXXS\"]);\n  ans += abs(make_pair[\"XXS\"] - mpp[\"XXS\"]);\n  ans += abs(make_pair[\"L\"] - mpp[\"L\"]);\n  ans += abs(make_pair[\"XL\"] - mpp[\"XL\"]);\n  ans += abs(make_pair[\"XXL\"] - mpp[\"XXL\"]);\n  ans += abs(make_pair[\"XXXL\"] - mpp[\"XXXL\"]);\n  ans += abs(make_pair[\"M\"] - mpp[\"M\"]);\n  printf(\"%lld\\n\", (ans / 2));\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[*(input()for _ in[0]*n)]\nc=0\nfor _ in[0]*n:\n try:a.remove(input())\n except:c+=1\nprint(c)\n\n\n\n# Made By Mostafa_Khaled"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long n;\n  cin >> n;\n  map<string, long> mp1, mp2;\n  for (long i = 1; i <= n; i++) {\n    string s;\n    cin >> s;\n    mp1[s]++;\n  }\n  for (long i = 1; i <= n; i++) {\n    string s;\n    cin >> s;\n    mp2[s]++;\n  }\n  long cnt = 0;\n  cnt += abs(mp1[\"XS\"] - mp2[\"XS\"]);\n  cnt += abs(mp1[\"XXS\"] - mp2[\"XXS\"]);\n  cnt += abs(mp1[\"XXXS\"] - mp2[\"XXXS\"]);\n  cnt += max(abs(mp1[\"S\"] - mp2[\"S\"]),\n             max(abs(mp1[\"M\"] - mp2[\"M\"]), abs(mp1[\"L\"] - mp2[\"L\"])));\n  cout << cnt;\n}\n"
        },
        {
            "language": 4,
            "solution": "/* Author: Ronak Agarwal, reader part not written by me*/\nimport java.io.* ; import java.util.* ;\nimport static java.lang.Math.min ; import static java.lang.Math.max ;\nimport static java.lang.Math.abs ; import static java.lang.Math.log ;\nimport static java.lang.Math.pow ; import static java.lang.Math.sqrt ;\n/* Thread is created here to increase the stack size of the java code so that recursive dfs can be performed */\npublic class Contest{\n\tpublic static void main(String[] args) throws IOException{\n\t\tnew Thread(null,new Runnable(){\tpublic void run(){ exec_Code() ;} },\"Solver\",1l<<27).start() ;\n\t}\n\tstatic void exec_Code(){\n\t\ttry{\n\t\t\tSolver Machine = new Solver() ;\n\t\t\tMachine.Solve() ; Machine.Finish() ;}\n\t\tcatch(Exception e){ e.printStackTrace() ; print_and_exit() ;}\n\t\tcatch(Error e){ e.printStackTrace() ; print_and_exit() ; }\n\t}\n\tstatic void print_and_exit(){ System.out.flush() ; System.exit(-1) ;}\n}\n/* Implementation of the Reader class */\nclass Reader { \n\tprivate InputStream mIs;\n\tprivate byte[] buf = new byte[1024];\n\tprivate int curChar,numChars;\n\tpublic Reader() { this(System.in); } \n\tpublic Reader(InputStream is) { mIs = is;} \n\tpublic int read() {\n\t\tif (numChars == -1) throw new InputMismatchException();    \n\t\tif (curChar >= numChars) {\n\t\t\tcurChar = 0;\n\t\t\ttry { numChars = mIs.read(buf);} catch (IOException e) { throw new InputMismatchException();}\n\t\t\tif (numChars <= 0) return -1;            \n\t\t}\n\t\treturn buf[curChar++];\n\t} \n\tpublic String nextLine(){\n\t\tint c = read();\n\t\twhile (isSpaceChar(c)) c = read();        \n\t\tStringBuilder res = new StringBuilder();\n\t\tdo {\n\t\t\tres.appendCodePoint(c);\n\t\t\tc = read();\n\t\t} while (!isEndOfLine(c));\n\t\treturn res.toString() ;\n\t} \n\tpublic String s(){\n\t\tint c = read();\n\t\twhile (isSpaceChar(c)) c = read();        \n\t\tStringBuilder res = new StringBuilder();\n\t\tdo {\n\t\t\tres.appendCodePoint(c);\n\t\t\tc = read();\n\t\t}while (!isSpaceChar(c));\n\t\treturn res.toString();\n\t} \n\tpublic long l(){\n\t\tint c = read();\n\t\twhile (isSpaceChar(c)) c = read();        \n\t\tint sgn = 1;\n\t\tif (c == '-') { sgn = -1 ; c = read() ; }\n\t\tlong res = 0;\n\t\tdo{\n\t\t\tif (c < '0' || c > '9') throw new InputMismatchException();\n\t\t\tres *= 10 ; res += c - '0' ; c = read();\n\t\t}while(!isSpaceChar(c));\n\t\treturn res * sgn;\n\t} \n\tpublic int i(){\n\t\tint c = read() ;\n\t\twhile (isSpaceChar(c)) c = read();        \n\t\tint sgn = 1;\n\t\tif (c == '-') { sgn = -1 ; c = read() ; }\n\t\tint res = 0;\n\t\tdo{\n\t\t\tif (c < '0' || c > '9') throw new InputMismatchException();\n\t\t\tres *= 10 ; res += c - '0' ; c = read() ;\n\t\t}while(!isSpaceChar(c));\n\t\treturn res * sgn;\n\t} \n\tpublic boolean isSpaceChar(int c) { return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1; } \n\tpublic boolean isEndOfLine(int c) { return c == '\\n' || c == '\\r' || c == -1; } \n}   \n/* All the useful functions,constants,renamings are here*/\nclass Template{\n\t/* Constants Section */\n\tfinal int INT_MIN = Integer.MIN_VALUE ; final int INT_MAX = Integer.MAX_VALUE ;\n\tfinal long LONG_MIN = Long.MIN_VALUE ; final long LONG_MAX = Long.MAX_VALUE ;\n\tstatic long MOD = 1000000007 ;\n\tstatic Reader ip = new Reader() ;\t\n\tstatic PrintWriter op = new PrintWriter(System.out) ;\n\t/* Methods for writing */\n\tstatic void p(Object o){ op.print(o) ; }\n\tstatic void pln(Object o){ op.println(o) ;}\n\tstatic void Finish(){ op.flush(); op.close(); }\n\t/* Implementation of operations modulo MOD */\n\tstatic long inv(long a){ return powM(a,MOD-2) ; }\n\tstatic long m(long a,long b){ return (a*b)%MOD ; }\n\tstatic long d(long a,long b){ return (a*inv(b))%MOD ; }\n\tstatic long powM(long a,long b){\n\t\tif(b<0) return powM(inv(a),-b) ;\n\t\tlong ans=1 ;\n\t\tfor( ; b!=0 ; a=(a*a)%MOD , b/=2) if((b&1)==1) ans = (ans*a)%MOD ;\n\t\treturn ans ;\n\t}\n\t/* Renaming of some generic utility classes */\n\tfinal static class mylist extends ArrayList<Integer>{}\n\tfinal static class myset extends HashSet<Integer>{}\n\tfinal static class mystack extends Stack<Integer>{}\n\tfinal static class mymap extends TreeMap<Integer,Integer>{}\n}\n/* Implementation of the pair class, useful for every other problem */\nclass pair implements Comparable<pair>{\n\tint x ; int y ;\n\tpair(int _x,int _y){ x=_x ; y=_y ;} \n\tpublic int compareTo(pair p){\n\t\treturn (this.x<p.x ? -1 : (this.x>p.x ? 1 : (this.y<p.y ? -1 : (this.y>p.y ? 1 : 0)))) ;\n\t}\n}\n/* Main code starts here */\nclass Solver extends Template{\n\tint mapIt(char c){\n\t\tif(c=='S') return 0 ;\n\t\tif(c=='M') return 1 ;\n\t\treturn 2 ;\n\t}\n\tpublic void Solve() throws IOException{\n\t\tint n = ip.i() ;\n\t\tint a[][] = new int[4][3] ;\n\t\tint b[][] = new int[4][3] ;\n\t\tfor(int i=0 ; i<n ; i++){\n\t\t\tchar c[] = ip.s().toCharArray() ;\n\t\t\tint cnt=0 ;\n\t\t\tfor(char cr : c) cnt+=(cr == 'X' ? 1 : 0) ;\n\t\t\ta[cnt][mapIt(c[c.length-1])]++ ;\n\t\t}\n\t\tfor(int i=0 ; i<n ; i++){\n\t\t\tchar c[] = ip.s().toCharArray() ;\n\t\t\tint cnt=0 ;\n\t\t\tfor(char cr : c) cnt+=(cr == 'X' ? 1 : 0) ;\n\t\t\tb[cnt][mapIt(c[c.length-1])]++ ;\n\t\t}\t\n\t\tint res=0 ;\n\t\tfor(int i=0 ; i<4 ; i++){\n\t\t\tfor(int j=0 ; j<3 ; j++){\n\t\t\t\tres+=abs(a[i][j]-b[i][j]) ;\n\t\t\t}\n\t\t}\t\n\t\tpln(res/2);\n\t}\n} "
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\nimport java.math.*;\nimport java.lang.*;\n\nimport static java.lang.Math.*;\n\npublic class Main implements Runnable {\n    static class InputReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private SpaceCharFilter filter;\n        private BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int read() {\n            if (numChars==-1)\n                throw new InputMismatchException();\n\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                }\n                catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n\n                if(numChars <= 0)\n                    return -1;\n            }\n            return buf[curChar++];\n        }\n\n        public String nextLine() {\n            String str = \"\";\n            try {\n                str = br.readLine();\n            }\n            catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n        public int nextInt() {\n            int c = read();\n\n            while(isSpaceChar(c))\n                c = read();\n\n            int sgn = 1;\n\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n\n            int res = 0;\n            do {\n                if(c<'0'||c>'9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            while (!isSpaceChar(c));\n\n            return res * sgn;\n        }\n\n        public long nextLong() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            long res = 0;\n\n            do {\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public double nextDouble() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            double res = 0;\n            while (!isSpaceChar(c) && c != '.') {\n                if (c == 'e' || c == 'E')\n                    return res * Math.pow(10, nextInt());\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            if (c == '.') {\n                c = read();\n                double m = 1;\n                while (!isSpaceChar(c)) {\n                    if (c == 'e' || c == 'E')\n                        return res * Math.pow(10, nextInt());\n                    if (c < '0' || c > '9')\n                        throw new InputMismatchException();\n                    m /= 10;\n                    res += (c - '0') * m;\n                    c = read();\n                }\n            }\n            return res * sgn;\n        }\n\n        public String readString() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            StringBuilder res = new StringBuilder();\n            do {\n                res.appendCodePoint(c);\n                c = read();\n            }\n            while (!isSpaceChar(c));\n\n            return res.toString();\n        }\n\n        public boolean isSpaceChar(int c) {\n            if (filter != null)\n                return filter.isSpaceChar(c);\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        public String next() {\n            return readString();\n        }\n\n        public interface SpaceCharFilter {\n            public boolean isSpaceChar(int ch);\n        }\n    }\n    public static void main(String args[]) throws Exception {\n        new Thread(null, new Main(),\"Main\",1<<26).start();\n    }\n\n\n    public void run() {\n        InputReader sc = new InputReader(System.in);\n        PrintWriter out = new PrintWriter(System.out);\n\n        int n=sc.nextInt();\n        String a[]=new String[n];\n        String b[]=new String[n];\n        int freaa[][]=new int[5][4];\n        for (int i = 0; i <n ; i++) {\n            a[i]=sc.next();\n            int ll=a[i].length();\n            for (int j = 0; j <a[i].length() ; j++) {\n                if(a[i].charAt(j)=='X')\n                    freaa[ll][0]++;\n                if(a[i].charAt(j)=='L')\n                    freaa[ll][1]++;\n                if(a[i].charAt(j)=='M')\n                    freaa[ll][2]++;\n                if(a[i].charAt(j)=='S')\n                    freaa[ll][3]++;\n            }\n        }\n        int frebb[][]=new int[5][4];\n        for (int i = 0; i <n ; i++) {\n            b[i]=sc.next();\n            int ll=b[i].length();\n            for (int j = 0; j <b[i].length() ; j++) {\n                if(b[i].charAt(j)=='X')\n                    frebb[ll][0]++;\n                if(b[i].charAt(j)=='L')\n                    frebb[ll][1]++;\n                if(b[i].charAt(j)=='M')\n                    frebb[ll][2]++;\n                if(b[i].charAt(j)=='S')\n                    frebb[ll][3]++;\n            }\n        }\n        int ans=0;\n        for (int i = 1; i <5 ; i++) {\n            for (int j = 0; j <4 ; j++) {\n                if(freaa[i][j]<frebb[i][j]){\n                    ans+=frebb[i][j]-freaa[i][j];\n                }\n            }\n        }\n        out.println(ans);\n        out.close();\n    }\n\n\n}"
        },
        {
            "language": 1,
            "solution": "from fractions import gcd\nfrom math import factorial, ceil, sqrt, atan2, log, pi, e, asin,acos, cos, sin, floor\nfrom itertools import *\nfrom fractions import Fraction\nimport string\nimport copy\nimport random\nimport bisect\nfrom decimal import *\nfrom collections import deque\ndef id_generator(size=20, chars=string.digits):\n    return ''.join(random.choice(chars) for _ in range(size))\n \ndef mp():\n    return map(int,str(raw_input()).split())\n\nn=input()\na=[]\nb=[]\nfor i in range(n):\n\ta+=[raw_input()]\nfor i in range(n):\n\tb+=[raw_input()]\na.sort()\nb.sort()\na.reverse()\nb.reverse()\nans=0\nfor i in range(n):\n\tif len(a[i])!=1:\n\t\tfor j in range(len(a[i])):\n\t\t\tif a[i][j]!=b[i][j]:\n\t\t\t\tans+=1\nx=[]\ny=[]\nfor i in range(n):\n\tif len(a[i])==1:\n\t\tx+=[a[i]]\n\t\ty+=[b[i]]\nans+=max(x.count('M')-y.count('M'),0)+max(x.count('S')-y.count('S'),0)+max(x.count('L')-y.count('L'),0)\nprint ans"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = dict()\nb = dict()\nfor i in range(0, n):\n\ts = input()\n\tif s in a:\n\t\ta[s] += 1\n\telse:\n\t\ta[s] = 1\n\t\tb[s] = 0\nfor i in range(0, n):\n\ts = input()\n\tif s in b:\n\t\tb[s] += 1\n\nans = 0\nfor k, v in a.items():\n\tif a[k] > b[k]:\n\t\tans += a[k]-b[k]\nprint(ans)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main(void) {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  int n;\n  cin >> n;\n  string a[n], b[n];\n  map<string, int> m;\n  for (int i = 0; i < n; ++i) {\n    cin >> a[i];\n    ++m[a[i]];\n  }\n  for (int i = 0; i < n; ++i) {\n    cin >> b[i];\n    --m[b[i]];\n  }\n  int ans = 0;\n  vector<string> v = {\"XXXL\", \"XXXS\", \"XXL\", \"XXS\", \"XL\", \"XS\", \"S\", \"L\", \"M\"};\n  ans = (abs(m[\"XXXL\"]) + abs(m[\"XXXS\"])) / 2;\n  ans += (abs(m[\"XXL\"]) + abs(m[\"XXS\"])) / 2;\n  ans += (abs(m[\"XL\"]) + abs(m[\"XS\"])) / 2;\n  ans += (abs(m[\"S\"]) + abs(m[\"L\"]) + abs(m[\"M\"])) / 2;\n  cout << ans;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys,math\nn = int(input())\nls1,ls2 = [],[]\nfor i in range(n):\n    s = input()\n    ls1.append(s)\nfor i in range(n):\n    s = input()\n    ls2.append(s)\nc = 0\nfor i in range(n):\n    if ls1[i] in ls2:\n        c+=1\n        ls2[ls2.index(ls1[i])] = None\nprint(n-c)\n\n\n"
        },
        {
            "language": 1,
            "solution": "from sys import stdin\nn = int(stdin.readline())\na = []\nb = []\nfor i in xrange(n):\n    a.append(stdin.readline().strip())\nfor i in xrange(n):\n    b.append(stdin.readline().strip())\nfound = set()\nfor i in xrange(n):\n    for j in xrange(n):\n        if a[i]==b[j] and j not in found:\n            found.add(j)\n            break\nprint n - len(found)"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\na = []\nb = []\nfor i in range(n):\n    a.append(raw_input())\n\nfor i in range(n):\n    b.append(raw_input())\n    \n\n\npossible = ['M', 'L', 'XL', 'XXL', 'XXXL', 'S', 'XS', 'XXS', 'XXXS'] \n\ndiff_dict = {}\n\nfor p in possible:\n    a_count = a.count(p)\n    b_count = b.count(p)\n    diff_dict[p] = (a_count, b_count)\n\n#print diff_dict\n\ndiff_1 = abs(diff_dict['M'][0]-diff_dict['M'][1]) + abs(diff_dict['S'][0]-diff_dict['S'][1]) + abs(diff_dict['L'][0]-diff_dict['L'][1])\ndiff_2 = abs(diff_dict['XL'][0]-diff_dict['XL'][1]) + abs(diff_dict['XS'][0]-diff_dict['XS'][1])\ndiff_3 = abs(diff_dict['XXL'][0]-diff_dict['XXL'][1]) + abs(diff_dict['XXS'][0]-diff_dict['XXS'][1])\ndiff_4 = abs(diff_dict['XXXL'][0]-diff_dict['XXXL'][1]) + abs(diff_dict['XXXS'][0]-diff_dict['XXXS'][1])\n\n#print diff_1/2\n#print diff_2/2\n#print diff_3/2\n#print diff_4/2\nprint (diff_1+diff_2+diff_3+diff_4)/2"
        },
        {
            "language": 1,
            "solution": "import sys\n\ndef record(shirts, read):\n    if read == \"XXXS\":\n        shirts[0] += 1\n    elif read == \"XXS\":\n        shirts[1] += 1\n    elif read == \"XS\":\n        shirts[2] += 1\n    elif read == \"S\":\n        shirts[3] += 1\n    elif read == \"M\":\n        shirts[4] += 1\n    elif read == \"L\":\n        shirts[5] += 1\n    elif read == \"XL\":\n        shirts[6] += 1\n    elif read == \"XXL\":\n        shirts[7] += 1\n    else:\n        shirts[8] += 1\n\nlistLen = int(raw_input().strip())\noldShirts = [0] * 9\nnewShirts = [0] * 9\n\nfor i in xrange(listLen):\n    read = str(raw_input().strip())\n    record(oldShirts, read)\nfor i in xrange(listLen):\n    read = str(raw_input().strip())\n    record(newShirts, read)\n    \nbaseDiff = abs(oldShirts[0] - newShirts[0])\nbaseDiff += abs(oldShirts[1] - newShirts[1])\nbaseDiff += abs(oldShirts[2] - newShirts[2])\n\nmidDiff = abs(oldShirts[3] - newShirts[3])    \nmidDiff += abs(oldShirts[4] - newShirts[4]) \nmidDiff += abs(oldShirts[5] - newShirts[5])\n\nprint baseDiff + midDiff / 2"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  int n;\n  cin >> n;\n  vector<string> arr;\n  vector<string> brr;\n  string temp;\n  for (int i = 0; i < n; ++i) {\n    cin >> temp;\n    arr.push_back(temp);\n  }\n  for (int i = 0; i < n; ++i) {\n    cin >> temp;\n    vector<string>::iterator it = std::find(arr.begin(), arr.end(), temp);\n    if (it != arr.end()) {\n      arr.erase(it);\n    }\n  }\n  cout << arr.size();\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long n;\nint main() {\n  long long n, ans = 0;\n  string c;\n  cin >> n;\n  set<string> ss;\n  std::set<string>::iterator it;\n  map<string, int> m1;\n  map<string, int> m2;\n  for (int i = 0; i < n; i++) {\n    cin >> c;\n    m1[c]++;\n  }\n  for (int i = 0; i < n; i++) {\n    cin >> c;\n    ss.insert(c);\n    m2[c]++;\n  }\n  for (it = ss.begin(); it != ss.end(); ++it) {\n    if (m2[*it] > m1[*it]) {\n      ans += m2[*it] - m1[*it];\n    }\n  }\n  cout << ans;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstring a[105], b[105];\nbool vis[105];\nint n;\nbool cmp(string a, string b) {\n  if (a.length() != b.length()) {\n    return a.length() < b.length();\n  } else {\n    return a > b;\n  }\n}\nint main() {\n  while (cin >> n) {\n    string m;\n    memset(vis, false, sizeof(vis));\n    for (int i = 0; i < n; i++) {\n      cin >> m;\n      a[i] = m;\n    }\n    for (int j = 0; j < n; j++) {\n      cin >> m;\n      b[j] = m;\n    }\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < n; j++) {\n        if (vis[j]) continue;\n        if (a[i] == b[j]) {\n          vis[j] = true;\n          ans++;\n          break;\n        }\n      }\n    }\n    cout << n - ans << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[]\nb=[]\nfor i in range(n):\n    x=input()\n    a.append(x)\nfor i in range(n):\n    x=input()\n    if not x in a:\n        b.append(x)\n    if x in a:\n        d=a.index(x)\n        a.pop(d)\nprint(len(b))\n        \n            \n        \n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\npre = []\ncur = []\nfor i in range(n):\n    pre.append(input())\n\nfor i in range(n):\n    cur.append(input())\n\nnum = 0\nfor i in range(n):\n    if pre[i] in cur:\n        cur.remove(pre[i])\n    else:\n        num += 1\nprint(num)"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class virtual1{\n\n    static InputReader in = new InputReader();\n    static PrintWriter out = new PrintWriter(System.out);\n    \n    static void randomShuffle(String ar[]){\n\t\tint l = ar.length;\n\t\tRandom rd = new Random();\n\t\tint cnt = 50;\n\t\twhile(cnt-->0){\n\t\t\tint n1 = rd.nextInt(l);\n\t\t\tint n2 = rd.nextInt(l);\n\t\t\tString temp = ar[n1];\n\t\t\tar[n1] = ar[n2];\n\t\t\tar[n2] = temp;\n\t\t}\n\n\t}\n    public static void main(String[] args) {\n        int n = in.nextInt();\n        HashMap<String,Integer>hmp = new HashMap<>();\n        hmp.put(\"L\",0);\n        hmp.put(\"M\",1);\n        hmp.put(\"S\",2);\n        hmp.put(\"XL\",3);\n        hmp.put(\"XXL\",4);\n        hmp.put(\"XXXL\",5);\n        hmp.put(\"XS\",6);\n        hmp.put(\"XXS\",7);\n        hmp.put(\"XXXS\",8);\n        \n        int cnt[] = new int[9];\n        for(int i=0;i<n;i++){\n            String z = in.nextLine();\n            cnt[hmp.get(z)]++;\n        }\n        for(int i=0;i<n;i++){\n            String z = in.nextLine();\n            cnt[hmp.get(z)]--;\n        }\n        int ans = 0;\n        for(int i=0;i<9;i++)\n        {\n            if(cnt[i]>0)\n            ans+=cnt[i];\n        }\n        out.println(ans);\n        out.close();    \n    }\n\n    static void debug(Object ...o){\n        System.out.println(Arrays.deepToString(o));\n    }\n    static class InputReader{\n        BufferedReader br;\n        StringTokenizer st;\n \n        public InputReader()\n        {\n            br = new BufferedReader(new\n                     InputStreamReader(System.in));\n        }\n \n        String next()\n        {\n            while (st == null || !st.hasMoreElements())\n            {\n                try\n                {\n                    st = new StringTokenizer(br.readLine());\n                }\n                catch (IOException  e)\n                {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n \n        int nextInt()\n        {\n            return Integer.parseInt(next());\n        }\n \n        long nextLong()\n        {\n            return Long.parseLong(next());\n        }\n \n        double nextDouble()\n        {\n            return Double.parseDouble(next());\n        }\n \n        String nextLine()\n        {\n            String str = \"\";\n            try\n            {\n                str = br.readLine();\n            }\n            catch (IOException e)\n            {\n                e.printStackTrace();\n            }\n            return str;\n        }\n    }\n}"
        },
        {
            "language": 3,
            "solution": "from copy import deepcopy\nimport itertools\nfrom bisect import bisect_left\nfrom bisect import bisect_right\nimport math\nfrom collections import deque\n\n\ndef read():\n    return int(input())\n\n\ndef readmap():\n    return map(int, input().split())\n\n\ndef readlist():\n    return list(map(int, input().split()))\n\n\nN = read()\nA = []\nB = []\nfor _ in range(N):\n    A.append(input())\nfor _ in range(N):\n    B.append(input())\n\nA.sort()\nB.sort()\nA_remove = [False] * N\nB_remove = [False] * N\ni = 0\nj = 0\nwhile i < N and j < N:\n    if A[i] == B[j]:\n        A_remove[i] = True\n        B_remove[j] = True\n        i += 1\n        j += 1\n    elif A[i] < B[j]:\n        i += 1\n    else:\n        j += 1\n\nA_new = []\nB_new = []\nfor i in range(N):\n    if not A_remove[i]:\n        A_new.append(A[i])\nfor i in range(N):\n    if not B_remove[i]:\n        B_new.append(B[i])\n\nprint(len(A_new))"
        },
        {
            "language": 3,
            "solution": "n=int(input());a=[];i=0\nfor i in range(n):\n\ts=input()\n\ta.append(s)\nfor i in range(n):\n\ts=input()\n\tif s in a:a.remove(s)\nprint(len(a))"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nifstream fin(\"AAtest.in.txt\");\nlong long n, p, t[4]['T'], su;\nstring s;\nint main() {\n  ios::sync_with_stdio(0);\n  cin >> n;\n  for (int(i) = (0); ((i)) < ((n)); ((i))++) {\n    cin >> s;\n    p = s.size();\n    p--;\n    t[p][s[p]]++;\n    su++;\n  }\n  for (int(i) = (0); ((i)) < ((n)); ((i))++) {\n    cin >> s;\n    p = s.size();\n    p--;\n    su -= abs(t[p][s[p]]);\n    t[p][s[p]]--;\n    su += abs(t[p][s[p]]);\n  }\n  cout << su / 2;\n}\n"
        },
        {
            "language": 1,
            "solution": "t = input()\nl = []\ndiction = {}\nfor i in range(t):\n\ttemp = raw_input()\n\tl.append(temp)\ncount = 0\nfor j in range(t):\n\ttemp2 = raw_input()\n\tif temp2 in diction:\n\t\tdiction[temp2]+=1\n\telse:\n\t\tdiction[temp2] = 1\nfor size in l:\n\tif size in diction:\n\t\tif diction[size] == 1:\n\t\t\tdiction.pop(size)\n\t\t\tcontinue\n\t\telse:\n\t\t\tdiction[size] -= 1\n\telse:\n\t\tcount+=1\nprint count"
        },
        {
            "language": 3,
            "solution": "from sys import stdin, stdout\nfrom collections import deque\n\nn = int(stdin.readline())\na, b = [], []\n\nfor i in range(n):\n    a.append(stdin.readline().strip())\n\nfor i in range(n):\n    b.append(stdin.readline().strip())\n\n\ndef comp(s, f):\n    cnt = 0\n    \n    for i in range(len(s)):\n        if s[i] != f[i]:\n            cnt += 1\n    \n    return cnt\n\nans = 0\n\nwhile b:\n    ind1, ind2, cnt = -1, -1, float('inf')\n    i = -1\n    \n    for s in b:\n        i += 1\n        j = -1\n        \n        for f in a:\n            j += 1\n            \n            if len(s) != len(f):\n                continue\n            elif cnt > comp(s, f):\n                ind1, ind2, cnt = j, i, comp(s, f)\n    \n    ans += cnt\n    a.pop(ind1)\n    b.pop(ind2)\n    \nstdout.write(str(ans))"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na, b = [], []\nfor i in range(n):\n    a.append(input())\nfor i in range(n):\n    b.append(input())\nfor s in b.copy():\n    if s in a:\n        a.remove(s)\n        b.remove(s)\ndef count_corrections(a, b):\n    s = 0\n    for i in range(len(a)):\n        s += int(a[i] != b[i])\n    return s\nif len(a) == 0:\n    print(0)\n    exit(0)\nans = 0\nfor t in range(min([len(s) for s in a]), max([len(s) for s in a]) + 1):\n    x = [s for s in a if len(s) == t]\n    y = [s for s in b if len(s) == t]\n    x.sort()\n    y.sort()\n    for i in range(len(x)):\n        ans += count_corrections(x[i], y[i])\nprint(ans)"
        },
        {
            "language": 3,
            "solution": "x = int(input())\n\nsizes = []\nfor i in range(x):\n    y = input()\n    sizes.append(y)\n\nfor j in range(x):\n    x = input()\n    if x in sizes:\n        sizes.remove(x)\nprint(len(sizes))\n"
        },
        {
            "language": 1,
            "solution": "a = {}\na['M'] = 0\na['L'] = 0\na['XL'] = 0\na['XXL'] = 0\na['XXXL'] = 0\na['S'] = 0\na['XS'] = 0\na['XXS'] = 0\na['XXXS'] = 0\n\nn = input()\n\nfor i in xrange(0,n):\n    s = raw_input()\n    a[s] += 1\nfor i in xrange(0,n):\n    s = raw_input()\n    a[s] -= 1\n\nans = 0\nfor i in a:\n    if a[i] > 0:\n        ans += a[i]\nprint ans"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class MyFile {\n\n\tpublic static void main(String[] args) {\n\t\t\n\t\tInteger n;\n\t\tScanner sc = new Scanner(System.in);\n\t\tList<String> a = new ArrayList<String>();\n\t\tList<String> b = new ArrayList<String>();\n\t\tboolean[] visit = new boolean[1000];\n\t\twhile (sc.hasNextInt()) \n\t\t{\n\t\t    n = sc.nextInt();\t\n\t\t    sc.nextLine();\n\t\t    a.clear();\n\t\t    b.clear();\n\t\t    for(int i=1;i<=n;i++)\n\t\t    {\n\t\t    \tString str = sc.nextLine();\n\t\t    \ta.add(str);\n\t\t    }\n\t\t    \n\t\t    for(int i=0;i<=a.size();i++)visit[i]=false;\n\t\t    \n\t\t    for(int i=1;i<=n;i++)\n\t\t    {\n\t\t    \tString str = sc.nextLine();\n\t\t    \tb.add(str);\n\t\t    }\n\t\t    int ans=0;\n\t\t    for(int i=0;i<b.size();i++)\n\t\t    {\n\t\t    \tboolean found=false;\n\t\t    \tfor(int j=0;j<a.size();j++)\n\t\t    \t{\n\t\t    \t\tString s1 = b.get(i);\n\t\t    \t\tString s2 = a.get(j);\n\t\t    \t\t\n\t\t    \t\t//System.out.println(s1+\" \"+s2+\" \"+visit[j]);\n\t\t    \t\tif(s1.equals(s2) && visit[j]==false)\n\t\t    \t\t{\n\t\t    \t\t\tfound=true;\n\t\t    \t\t\tvisit[j]=true;\n\t\t    \t\t\tbreak;\n\t\t    \t\t}\n\t\t    \t}\n\t\t    \tif(found==false)\n\t\t    \t\tans++;\n\t\t    \t\t\n\t\t    }\n\t\t    System.out.println(ans);\n\t\t}\n\t}\n\n}\n"
        },
        {
            "language": 3,
            "solution": "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Tue Jul 24 10:32:33 2018\n\n@author: haoqianqiong\n\nKeep going !!! Walking to Lose Weight!!!\n\"\"\"\n\nfrom collections import Counter\nk = int(input())\na=[]\nb=[]\nfor i in range(k):\n    a.append(input())\nfor j in range(k):\n    b.append(input())\na = Counter(a)\nb = Counter(b)\nno = 0\nfor c in b:\n    if c in a:\n        no += max(b[c]-a[c],0)\n    else:\n        no += b[c]\nprint(no)"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.StringTokenizer;\n\n/**\n *\n * @author thachlp\n */\npublic class Main {\n\n    /**\n     * @param args the command line arguments\n     */\n    public static void main(String[] args) {\n        // TODO code application logic here\n        FastReader fr = new FastReader();\n        int n = fr.nextInt();\n        Map<String, Integer> map1 = new HashMap<>();\n        Map<String, Integer> map2 = new HashMap<>();\n\n        for (int i = 0; i < n; i++) {\n            String key = fr.next();\n            Integer value = map1.get(key);\n            if (value == null) {\n                map1.put(key, 1);\n            } else {\n                map1.put(key, ++value);\n            }\n        }\n\n        for (int i = 0; i < n; i++) {\n            String key = fr.next();\n            Integer value = map2.get(key);\n            if (value == null) {\n                map2.put(key, 1);\n            } else {\n                map2.put(key, ++value);\n            }\n        }\n\n        int result = n;\n        for (Map.Entry<String, Integer> entry : map1.entrySet()) {\n            String key = entry.getKey();\n            Integer value = entry.getValue();\n            Integer value2 = map2.get(key);\n\n            if (value2 == null) {\n                value2 = 0;\n            }\n\n            result -= Math.min(value, value2);\n        }\n        System.out.println(result);\n\n    }\n}\n\nclass FastReader {\n\n    BufferedReader br;\n    StringTokenizer st;\n\n    public FastReader() {\n        br = new BufferedReader(new InputStreamReader(System.in));\n    }\n\n    String next() {\n        while (st == null || !st.hasMoreElements()) {\n            try {\n                st = new StringTokenizer(br.readLine());\n            } catch (IOException e) {\n            }\n        }\n        return st.nextToken();\n    }\n\n    int nextInt() {\n        return Integer.parseInt(next());\n    }\n\n    long nextLong() {\n        return Long.parseLong(next());\n    }\n\n    double nextDouble() {\n        return Double.parseDouble(next());\n    }\n\n    String nextLine() {\n        String str = \"\";\n        try {\n            str = br.readLine();\n        } catch (IOException e) {\n        }\n        return str;\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\nimport java.io.IOException;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskA solver = new TaskA();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class TaskA {\n        public void solve(int testNumber, InputReader in, PrintWriter out) {\n            int n = in.ni();\n            int[] ar1 = new int[9];\n            int[] ar2 = new int[9];\n            for (int i = 0; i < n; ++i) {\n                String x = in.next();\n                if (x.equals(\"S\")) ar1[0]++;\n                else if (x.equals(\"L\")) ar1[1]++;\n                else if (x.equals(\"M\")) ar1[2]++;\n                else if (x.equals(\"XS\")) ar1[3]++;\n                else if (x.equals(\"XL\")) ar1[4]++;\n                else if (x.equals(\"XXS\")) ar1[5]++;\n                else if (x.equals(\"XXL\")) ar1[6]++;\n                else if (x.equals(\"XXXS\")) ar1[7]++;\n                else ar1[8]++;\n            }\n            for (int i = 0; i < n; ++i) {\n                String x = in.next();\n                if (x.equals(\"S\")) ar2[0]++;\n                else if (x.equals(\"L\")) ar2[1]++;\n                else if (x.equals(\"M\")) ar2[2]++;\n                else if (x.equals(\"XS\")) ar2[3]++;\n                else if (x.equals(\"XL\")) ar2[4]++;\n                else if (x.equals(\"XXS\")) ar2[5]++;\n                else if (x.equals(\"XXL\")) ar2[6]++;\n                else if (x.equals(\"XXXS\")) ar2[7]++;\n                else ar2[8]++;\n            }\n            int count = 0;\n            for (int i = 0; i < 9; ++i) {\n                count += Math.abs(ar1[i] - ar2[i]);\n            }\n            out.print(count / 2);\n        }\n\n    }\n//\n    static class InputReader {\n        public BufferedReader reader;\n        public StringTokenizer tokenizer;\n\n        public InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\n            tokenizer = null;\n        }\n\n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        public int ni() {\n            return Integer.parseInt(next());\n        }\n\n    }\n}"
        },
        {
            "language": 1,
            "solution": "\ndef solve():\n    n=input()\n    d={'S':0,'M':0,'L':0,'XL':0,'XS':0,'XXL':0,'XXS':0,'XXXL':0,'XXXS':0}\n    for x in xrange(n):\n        inp=raw_input()\n        d[inp]+=1\n    count=0\n    for x in xrange(n):\n        inp=raw_input()\n        if d[inp]==0:\n            count+=1\n        else:\n            d[inp]-=1\n    print count\nsolve()\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\n\na = {}\nb = {}\nfor _ in range(n):\n    s = input()\n    if s in a:\n        a[s] += 1\n    else:\n        a[s] = 1\n\nfor _ in range(n):\n    s = input()\n    if s in b:\n        b[s] += 1\n    else:\n        b[s] = 1\n\nans = n\n\nfor s in b:\n    ans -= min(b[s], a.get(s, 0))\n\nprint(ans)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nf = 0\nmas = []\ngas = []\nfor a in range(n):\n    mas.append(input())\n\nfor b in range(n):\n    k = input()\n    if k in mas:\n        del mas[mas.index(k)]\n    else:\n        gas.append(k)\nfor a in mas:\n    for b in gas:\n        if len(a) == len(b) and b[-2:] != \"OK\":\n            for i in range(len(a)):\n                if a[i] != b[i]:\n                    f += 1\n            b += \"OK\"\n            break\nprint(f)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nmap<string, int> mp;\nset<string> st;\nint main(int argc, char *argv[]) {\n  int n;\n  string s;\n  int ans = 0;\n  cin >> n;\n  for (int i = 1; i <= n; i++) cin >> s, mp[s]++, st.insert(s);\n  for (int i = 1; i <= n; i++) cin >> s, mp[s]--;\n  set<string>::iterator it;\n  for (it = st.begin(); it != st.end(); it++) {\n    if (mp[*it] > 0) ans += mp[*it];\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "from typing import Counter\nn = int(input())\nc = [Counter() for _ in range(4)]\nfor i in range(n) :\n    s = input()\n    c[len(s)-1][s[-1]] += 1\nfor i in range(n) :\n    s = input()\n    c[len(s)-1][s[-1]] -= 1\nres = 0\nfor i in range(4) :\n    res += max(0, c[i]['S']) + max(0, c[i]['M']) + max(0, c[i]['L'])\nprint(res)\n \t\t  \t\t\t  \t         \t   \t   \t\t\t"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na={'M':0,'S':0,'L':0,'XL':0,'XXL':0,'XXXL':0,'XS':0,'XXS':0,'XXXS':0}\nb={'M':0,'S':0,'L':0,'XL':0,'XXL':0,'XXXL':0,'XS':0,'XXS':0,'XXXS':0}\nans=0\nfor i in range(n):\n    a[input()]+=1\nfor i in range(n):\n    b[input()]+=1\nfor i in a:\n    a[i]=max(a[i]-b[i],0)\nfor i in a:\n    ans+=a[i]\nprint(ans)\n    \n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string a;\n  int i, n, vis1[10], vis2[10], ans = 0;\n  scanf(\"%d\", &n);\n  memset(vis1, 0, sizeof(vis1));\n  memset(vis2, 0, sizeof(vis2));\n  for (i = 0; i < n; i++) {\n    cin >> a;\n    if (a == \"M\") vis1[0]++;\n    if (a == \"S\") vis1[1]++;\n    if (a == \"L\") vis1[2]++;\n    if (a == \"XS\") vis1[3]++;\n    if (a == \"XL\") vis1[4]++;\n    if (a == \"XXS\") vis1[5]++;\n    if (a == \"XXL\") vis1[6]++;\n    if (a == \"XXXS\") vis1[7]++;\n    if (a == \"XXXL\") vis1[8]++;\n  }\n  for (i = 0; i < n; i++) {\n    cin >> a;\n    if (a == \"M\") vis2[0]++;\n    if (a == \"S\") vis2[1]++;\n    if (a == \"L\") vis2[2]++;\n    if (a == \"XS\") vis2[3]++;\n    if (a == \"XL\") vis2[4]++;\n    if (a == \"XXS\") vis2[5]++;\n    if (a == \"XXL\") vis2[6]++;\n    if (a == \"XXXS\") vis2[7]++;\n    if (a == \"XXXL\") vis2[8]++;\n  }\n  for (i = 0; i <= 8; i++) {\n    ans += abs(vis1[i] - vis2[i]);\n  }\n  printf(\"%d\\n\", ans / 2);\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "l1,l2=[],[]\nn=int(input())\nfor _ in range(n):\n\ts=input()\n\tl1.append(s)\nfor _ in range(n):\n\ts=input()\n\tl2.append(s)\ntemp=['L','M','S']\nfor i in range(1,4):\n\tf='X'*i\n\tx=f+'S'\n\ty=f+'L'\n\ttemp.append(x)\n\ttemp.append(y)\nd1,d2={},{}\nfor i in temp:\n\td1.update({i:0})\n\td2.update({i:0})\nfor i in l1:\n\td1[i]+=1\nfor i in l2:\n\td2[i]+=1\nc=0\nfor i in temp:\n\tc=c+abs(d1[i]-d2[i])\nprint(c//2)"
        },
        {
            "language": 1,
            "solution": "#####################################   \nimport atexit, io, sys, collections\nbuffer = io.BytesIO() \nsys.stdout = buffer\n@atexit.register \ndef write(): sys.__stdout__.write(buffer.getvalue())   \n##################################### \nimport collections, math\n\ndef f(a,b,n):\n\tc = 0\n\tcc = collections.Counter(a)\n\th = {'M': ['S','L'],'L': ['M','S'],'S': ['M','L'],'XL': ['XS'],'XS': ['XL'],'XXL': ['XXS'],'XXS': ['XXL'],'XXXL': ['XXXS'],'XXXS': ['XXXL']}\n\tleft = []\n\tfor v in b:\n\t\tif cc[v]:\n\t\t\tcc[v]-=1\n\t\telse:\n\t\t\tleft.append(v)\n\tfor v in left:\n\t\tfor vv in h[v]:\n\t\t\tif cc[vv]:\n\t\t\t\tcc[vv]-=1\n\t\t\t\tc+=1\n\t\t\t\tbreak\n\n\treturn c\nn = int(raw_input())\na = [raw_input() for _ in range(n)]\na.sort()\n\nb = [raw_input() for _ in range(n)]\nb.sort()\nprint f(a,b,n)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 2e5 + 10;\nconst long long MAXN = 1e9 + 10;\nconst int MAX = 1e4 + 10;\nconst int inf = 0x3f3f3f3f;\nconst long long INF = 0x3f3f3f3f3f3f3f3f;\nconst int mod = 998244353;\nconst double eps = 1e-6;\nchar a[200][20], b[200][20];\nbool v[200], z[200];\ninline void solve() {\n  int n;\n  scanf(\"%d\", &n);\n  for (int i = 0; i < n; ++i) {\n    scanf(\"%s\", a[i]);\n  }\n  for (int i = 0; i < n; ++i) {\n    scanf(\"%s\", b[i]);\n    bool flag = false;\n    for (int j = 0; j < n; ++j) {\n      if (strcmp(a[j], b[i]) == 0 && !v[j]) {\n        v[j] = true;\n        z[i] = true;\n        flag = true;\n        break;\n      }\n    }\n  }\n  int ans = 0;\n  for (int i = 0; i < n; ++i) {\n    if (!v[i]) {\n      for (int j = 0; j < n; ++j) {\n        if (strlen(b[j]) == strlen(a[i]) && !z[j]) {\n          ans++;\n          v[i] = true;\n          z[j] = true;\n        }\n      }\n    }\n  }\n  printf(\"%d\\n\", ans);\n  return;\n}\nint main() {\n  int casen = 1;\n  while (casen--) {\n    solve();\n  }\n  fclose(stdin);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long mod = 1e9 + 7;\nvoid solve() {\n  long long n;\n  cin >> n;\n  string a[n], b[n];\n  for (long long i = 0; i < n; ++i) cin >> a[i];\n  for (long long i = 0; i < n; ++i) cin >> b[i];\n  map<string, long long> ma;\n  map<string, long long> mb;\n  for (auto it : a) ma[it]++;\n  for (auto it : b) mb[it]++;\n  long long ans = n;\n  for (auto it : ma) {\n    ans -= min(mb[it.first], it.second);\n  }\n  cout << ans << '\\n';\n}\nint32_t main() {\n  ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);\n  long long t = 1;\n  while (t--) {\n    solve();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "l=[[] for i in range(4)]\nl1=[[] for i in range(4)]\nn=int(input())\nfor i in range(n):\n\tcount=0\n\tr=input()\n\tfor j in r:\n\t\tif j==\"X\":\n\t\t\tcount=count+1\n\t\telse:\n\t\t\tbreak\n\tl[count].append(r)\nfor i in range(n):\n\tcount=0\n\tr=input()\n\tfor j in r:\n\t\tif j==\"X\":\n\t\t\tcount=count+1\n\t\telse:\n\t\t\tbreak\n\tl1[count].append(r)\nans=0\nfor i in range(4):\n\tfor k in l[i]:\n\t\tr=len(l1[i])\n\t\tfor u in range(r):\n\t\t\tif l1[i][u]==k:\n\t\t\t\tl1[i].pop(u)\n\t\t\t\tbreak\n\tans=ans+len(l1[i])\nprint (ans)\n\n\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\ns1=[]\ns2=[]\nfor i in range(n):\n    s1.append(input() )\nfor i in range(n):\n    s2.append(input() )\nd1={'M':0,'S':0, 'L':0, 'XS':0, 'XL':0, 'XXS':0, 'XXL':0, 'XXXS':0, 'XXXL':0}\nd2={'M':0,'S':0, 'L':0, 'XS':0, 'XL':0, 'XXS':0, 'XXL':0, 'XXXS':0, 'XXXL':0}\nfor i in range(n):\n    d1[s1[i]]+=1\nfor i in range(n):\n    d2[s2[i]]+=1\n\nfor i in list(d1.keys() ):\n    if d1[i]>=d2[i]:\n        d1[i]-=d2[i]\n        d2[i]=0\n    else:\n        d1[i]=0\nprint(sum(list(d1.values() ) ))"
        },
        {
            "language": 3,
            "solution": "# 1000A. Codehorses T-shirts\n\nn = int(input())\nPreT = []\nfor i in range(n):\n    PreT.append(input())\n\nfor j in range(n):\n    size = input()\n    if size in PreT:\n        PreT.remove(size)\n\nprint(len(PreT))"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  vector<string> a(n), b(n);\n  for (int i = 0; i < int(n); i++) cin >> a[i];\n  for (int i = 0; i < int(n); i++) cin >> b[i];\n  map<string, int> cnta, cntb;\n  for (int i = 0; i < int(n); i++) ++cnta[a[i]];\n  for (int i = 0; i < int(n); i++) ++cntb[b[i]];\n  int ans = n;\n  for (auto it : cnta) ans -= min(it.second, cntb[it.first]);\n  cout << ans << endl;\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "l1=[]\nl2=[]\nl3=[]\nl4=[]\nl5=[]\nl6=[]\nl7=[]\nl8=[]\nn=input()\nfor _ in range(n):\n\ta=raw_input()\n\tif len(a)==1:\n\t\tl1.append(a)\n\tif len(a)==2:\n\t\tl3.append(a)\n\tif len(a)==3:\n\t\tl4.append(a)\n\tif len(a)==4:\n\t\tl5.append(a)\nfor _ in range(n):\n\ta=raw_input()\n\tif len(a)==1:\n\t\tl2.append(a)\n\tif len(a)==2:\n\t\tl6.append(a)\n\tif len(a)==3:\n\t\tl7.append(a)\n\tif len(a)==4:\n\t\tl8.append(a)\n\ncount=0\n\ncount+=abs(l1.count('M')-l2.count('M'))\ncount+=abs(l1.count('L')-l2.count('L'))\ncount+=abs(l1.count('S')-l2.count('S'))\ncount=count/2\nl3=sorted(l3)\nl4=sorted(l4)\nl5=sorted(l5)\nl6=sorted(l6)\nl7=sorted(l7)\nl8=sorted(l8)\nfor i in range(len(l3)):\n\tif l3[i]!=l6[i]:\t\n\t\tcount+=1\nfor i in range(len(l7)):\n\tif l4[i]!=l7[i]:\t\n\t\tcount+=1\nfor i in range(len(l5)):\n\tif l5[i]!=l8[i]:\t\n\t\tcount+=1\nprint count\n\t\t\t\t\n\t\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\n\nimport java.util.*;\n\n\npublic class Soly\n{\n    static final int INF = Integer.MAX_VALUE;\n\n    static int mergeSort(int[] a,int [] c, int begin, int end)\n    {\n        int inversion=0;\n        if(begin < end)\n        {\n            inversion=0;\n            int mid = (begin + end) >>1;\n           inversion+= mergeSort(a,c, begin, mid);\n            inversion+=mergeSort(a, c,mid + 1, end);\n            inversion+=merge(a,c, begin, mid, end);\n        }\n        return inversion;\n    }\n\n\n    static int  merge(int[] a,int[]c, int b, int mid, int e)\n    {\n        int n1 = mid - b + 1;\n        int n2 = e - mid;\n        int[] L = new int[n1+1], R = new int[n2+1];\n        int[] L1 = new int[n1+1], R1 = new int[n2+1];\n        //inversion\n        int inversion=0;\n\n        for(int i = 0; i < n1; i++) {\n            L[i] = a[b + i];\n            L1[i] = c[b + i];\n        }\n        for(int i = 0; i < n2; i++)  {\n            R[i] = a[mid + 1 + i];\n            R1[i] = c[mid + 1 + i];\n        }\n        L[n1] = R[n2] = INF;\n\n        for(int k = b, i = 0, j = 0; k <= e; k++)\n            if(L[i] <= R[j]){\n                a[k] = L[i];\n                c[k] = L1[i++];\n            }\n\n            else\n            {\n                a[k] = R[j];\n                c[k] = R1[j++];\n                inversion=inversion+(n1-i);\n\n            }\n            return inversion;\n\n    }\n\n\n\n    public static void main(String[] args) throws IOException {\n        Scanner in = new Scanner(System.in);\n        try (PrintWriter or = new PrintWriter(System.out)) {\n            int n = in.nextInt();\n            TreeMap<String,Integer> map = new TreeMap<>();\n           String[] a= new String[n];\n            for (int i = 0; i < n; i++) {\n                a[i]=in.next();\n            }\n            for (int i = 0; i < n; i++) {\n                map.merge(in.next(),1,Integer::sum);\n            }\n            int ans=0;\n            for (int i = 0; i < n; i++) {\n                if (map.containsKey(a[i])){\n                    if (map.get(a[i])==1)map.remove(a[i]);\n                    else map.put(a[i],map.get(a[i])-1);\n                }\n                else ++ans;\n            }\n            or.println(ans);\n\n\n        }\n    }\n\n\n\n\n\n\n\n\n\n\n\n    static class Scanner {\n\n        StringTokenizer st;\n        BufferedReader br;\n\n        public Scanner(InputStream s) {\n            br = new BufferedReader(new InputStreamReader(s));\n        }\n\n        public String next() throws IOException {\n            while (st == null || !st.hasMoreTokens()) {\n                st = new StringTokenizer(br.readLine());\n            }\n            return st.nextToken();\n        }\n\n        public int nextInt() throws IOException {\n            return Integer.parseInt(next());\n        }\n\n        public long nextLong() throws IOException {\n            return Long.parseLong(next());\n        }\n\n        public String nextLine() throws IOException {\n            return br.readLine();\n        }\n\n        public double nextDouble() throws IOException {\n            String x = next();\n            StringBuilder sb = new StringBuilder(\"0\");\n            double res = 0, f = 1;\n            boolean dec = false, neg = false;\n            int start = 0;\n            if (x.charAt(0) == '-') {\n                neg = true;\n                start++;\n            }\n            for (int i = start; i < x.length(); i++) {\n                if (x.charAt(i) == '.') {\n                    res = Long.parseLong(sb.toString());\n                    sb = new StringBuilder(\"0\");\n                    dec = true;\n                } else {\n                    sb.append(x.charAt(i));\n                    if (dec) {\n                        f *= 10;\n                    }\n                }\n            }\n            res += Long.parseLong(sb.toString()) / f;\n            return res * (neg ? -1 : 1);\n        }\n\n        public boolean ready() throws IOException {\n            return br.ready();\n        }\n\n    }\n\n\n\n}\nclass coooo implements Comparable<coooo> {\n\n    int a,c,index;\n\n    public coooo(int a, int c, int index) {\n        this.a = a;\n        this.c = c;\n        this.index = index;\n    }\n\n    @Override\n    public int compareTo(coooo o) {\n        if (c!=o.c)return c-o.c;\n        return index-o.index;\n    }\n}"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nli_a = []\nli_b = []\nflag = 0\nfor i in range(n):\n    li_a.append(input())\nfor i in range(n):\n    li_b.append(input())\n    \nfor i in range(n):\n    if li_a[i] in li_b:\n        li_b.remove(li_a[i])\n    else:\n        flag+=1\nprint(flag)\n\n\n"
        },
        {
            "language": 4,
            "solution": "import java.io.IOException;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\n\npublic class Main{\n    public static void main(String[] args)throws IOException{\n\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\tPrintWriter out = new PrintWriter(System.out);\n\tint n = Integer.parseInt(br.readLine());\n\tString a[] = new String[n];\n\tString b[] = new String[n];\t\n\tfor(int i = 0; i<n;i++){\n\t    a[i] = br.readLine();\n\t}\n\tfor(int i = 0; i<n;i++){\n\t    b[i] = br.readLine();\n\t}\n\tfor(int i = 0; i<n;i++){\n\t    for(int j = 0; j<n;j++){\n\t\tif(a[i].equals(b[j])){\n\t\t    a[i] = \"-1\";\n\t\t    b[j] = \"-1\";\n\t\t    break;\n\t\t}\n\t    }\n\t}\n\tint ans = 0;\n\tfor(int i = 0; i<n;i++){\n\t    if(a[i].equals(\"-1\"))continue;\n\t    int me = 100, ix = 0;\n\t    for(int j = 0; j<n;j++){\n\t\tint d = 0;\n\t\tif(b[j].equals(\"-1\"))continue;\n\t\tfor(int k = 0;k<a[i].length() && k<b[j].length();k++){\n\t\t    if(a[i].charAt(k)!=b[j].charAt(k)){\n\t\t\td++;\n\t\t    }\n\t\t}\n\t\td+=Math.abs(a[i].length()-b[j].length());\n\t\tif(d<me){\n\t\t    me = d;\n\t\t    ix = j;\n\t\t}\n\t    }\n\t    b[ix] = \"-1\";\n\t    ans+=me;\n\t}\n\tout.println(ans);\n\tout.close();\n    }\n}\n"
        },
        {
            "language": 1,
            "solution": "n=input()\nl1=[]\nl2=[]\nl3=[['S',0],['M',0],['L',0],['XS',0],['XL',0],['XXS',0],['XXL',0],['XXXS',0],['XXXL',0]]\nl4=[['S',0],['M',0],['L',0],['XS',0],['XL',0],['XXS',0],['XXL',0],['XXXS',0],['XXXL',0]]\nl5=['S','M','L','XS','XL','XXS','XXL','XXXS','XXXL']\nfor i in range(2*n):\n    if i<n:\n        s=raw_input()\n        l3[l5.index(s)][1]+=1\n    else:\n        s=raw_input()\n        l4[l5.index(s)][1]+=1\ncount=0\nfor i in range(9):\n    if l3[i][1]-l4[i][1]>0:\n        count+=l3[i][1]-l4[i][1]\nprint count\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  int n, cnt = 0;\n  cin >> n;\n  string a[n], b[n];\n  for (int i = 0; i < n; i++) cin >> a[i];\n  for (int i = 0; i < n; i++) cin >> b[i];\n  for (int i = 0; i < n; i++)\n    for (int j = 0; j < n; j++)\n      if (a[i] == b[j]) {\n        b[j] = \"N\";\n        cnt++;\n        break;\n      }\n  cout << n - cnt << endl;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nA, B = dict(), dict()\nss = ['XXXS', 'XXS', 'XS', 'S', 'M', 'L', 'XL', 'XXL', 'XXXL']\nfor s in ss:\n    A[s] = 0\n    B[s] = 0\nfor i in range(n):\n    s = input()\n    A[s] += 1\nfor i in range(n):\n    s = input()\n    B[s] += 1\n\nprint(n - sum([min(A[s], B[s]) for s in ss]))\n    "
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.OutputStreamWriter;\nimport java.io.PrintWriter;\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.StringTokenizer;\n\n\npublic class A {\n\n\tstatic StringTokenizer st;\n\tstatic BufferedReader br;\n\tstatic PrintWriter pw;\n\tpublic static void main(String[] args) throws IOException {\n\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t\tpw = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));\n\t\tint n = nextInt();\n\t\tString[]a = new String[n], b = new String[n];\n\t\tMap<String, Integer> map = new HashMap<String, Integer>();\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\ta[i] = next();\n\t\t\tif (!map.containsKey(a[i]))\n\t\t\t\tmap.put(a[i], 0);\n\t\t\tmap.put(a[i], map.get(a[i])+1);\n\t\t}\n\t\tint  ans = 0;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tb[i] = next();\n\t\t\tif (!map.containsKey(b[i]))\n\t\t\t\tans++;\n\t\t\telse {\n\t\t\t\tmap.put(b[i], map.get(b[i])-1);\n\t\t\t\tif (map.get(b[i])==0)\n\t\t\t\t\tmap.remove(b[i]);\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(ans);\n\t\tpw.close();\n\t}\n\tprivate static int nextInt() throws IOException {\n\t\treturn Integer.parseInt(next());\n\t}\n\tprivate static long nextLong() throws IOException {\n\t\treturn Long.parseLong(next());\n\t}\n\tprivate static double nextDouble() throws IOException {\n\t\treturn Double.parseDouble(next());\n\t}\n\tprivate static String next() throws IOException {\n\t\twhile (st==null || !st.hasMoreTokens())\n\t\t\tst = new StringTokenizer(br.readLine());\n\t\treturn st.nextToken();\n\t}\n}"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\ndic = {}\nfor i in xrange(n):\n\ts = raw_input()\n\tif not dic.has_key(s):\n\t\tdic[s] = 1\n\telse:\n\t\tdic[s] += 1\nnumber_of_seconds = 0\nfor i in xrange(n):\n\ts = raw_input()\n\tif dic.has_key(s) and dic[s] > 0:\n\t\tdic[s] -= 1\n\telse:\n\t\tnumber_of_seconds += 1\nprint number_of_seconds"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long n;\n  cin >> n;\n  long long m = n, c = 0;\n  map<string, int> mp;\n  map<string, int>::iterator it;\n  while (n--) {\n    string s;\n    cin >> s;\n    mp[s]++;\n  }\n  while (m--) {\n    string s;\n    cin >> s;\n    if (mp[s] >= 1)\n      mp[s]--;\n    else\n      c++;\n  }\n  cout << c << endl;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  multiset<string> old;\n  multiset<string> curr;\n  int n;\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    string s;\n    cin >> s;\n    old.insert(s);\n  }\n  for (int i = 0; i < n; i++) {\n    string s;\n    cin >> s;\n    auto it = old.find(s);\n    if (it != old.end()) {\n      old.erase(it);\n    } else {\n      curr.insert(s);\n    }\n  }\n  cout << old.size() << \"\\n\";\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e5 + 5;\nconst int mod = 1e9 + 7;\nchar size[10][10] = {\"S\", \"XS\", \"XXS\", \"XXXS\", \"L\", \"XL\", \"XXL\", \"XXXL\", \"M\"};\nint cnt[10];\nint cnt2[10];\nint main() {\n  int n;\n  char s[5];\n  scanf(\"%d\", &n);\n  for (int nn = (0); nn < (n); nn++) {\n    scanf(\"%s\", s);\n    for (int i = (0); i < (9); i++) {\n      if (strcmp(size[i], s) == 0) {\n        cnt[i]++;\n        break;\n      }\n    }\n  }\n  for (int nn = (0); nn < (n); nn++) {\n    scanf(\"%s\", s);\n    for (int i = (0); i < (9); i++) {\n      if (strcmp(size[i], s) == 0) {\n        cnt2[i]++;\n        break;\n      }\n    }\n  }\n  int pan = 0;\n  int ans = 0, p[4] = {0};\n  for (int i = (0); i < (4); i++) {\n    for (int j = i; j < 9; j += 4) {\n      p[i] += cnt[j] - cnt2[j];\n      ans += abs(cnt[j] - cnt2[j]);\n    }\n    if (p[i] != 0) pan = 1;\n  }\n  if (pan) ans = 0;\n  printf(\"%d\\n\", ans / 2);\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\nimport java.math.*;\nimport java.lang.*;\n \nimport static java.lang.Math.*;\n \npublic class Main implements Runnable {\n    static class InputReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private SpaceCharFilter filter;\n        private BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n \n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n        \n        public int read() {\n            if (numChars==-1) \n                throw new InputMismatchException();\n            \n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                }\n                catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                \n                if(numChars <= 0)               \n                    return -1;\n            }\n            return buf[curChar++];\n        }\n     \n        public String nextLine() {\n            String str = \"\";\n            try {\n                str = br.readLine();\n            }\n            catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n        public int nextInt() {\n            int c = read();\n            \n            while(isSpaceChar(c)) \n                c = read();\n            \n            int sgn = 1;\n            \n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            \n            int res = 0;\n            do {\n                if(c<'0'||c>'9') \n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            while (!isSpaceChar(c)); \n            \n            return res * sgn;\n        }\n        \n        public long nextLong() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            long res = 0;\n            \n            do {\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            while (!isSpaceChar(c));\n                return res * sgn;\n        }\n        \n        public double nextDouble() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            double res = 0;\n            while (!isSpaceChar(c) && c != '.') {\n                if (c == 'e' || c == 'E')\n                    return res * Math.pow(10, nextInt());\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            if (c == '.') {\n                c = read();\n                double m = 1;\n                while (!isSpaceChar(c)) {\n                    if (c == 'e' || c == 'E')\n                        return res * Math.pow(10, nextInt());\n                    if (c < '0' || c > '9')\n                        throw new InputMismatchException();\n                    m /= 10;\n                    res += (c - '0') * m;\n                    c = read();\n                }\n            }\n            return res * sgn;\n        }\n        \n        public String readString() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            StringBuilder res = new StringBuilder();\n            do {\n                res.appendCodePoint(c);\n                c = read();\n            } \n            while (!isSpaceChar(c));\n            \n            return res.toString();\n        }\n     \n        public boolean isSpaceChar(int c) {\n            if (filter != null)\n                return filter.isSpaceChar(c);\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n     \n        public String next() {\n            return readString();\n        }\n        \n        public interface SpaceCharFilter {\n            public boolean isSpaceChar(int ch);\n        }\n    }\n    public static void main(String args[]) throws Exception {\n        new Thread(null, new Main(),\"Main\",1<<26).start();\n    }\n    public void run() {\n        InputReader sc = new InputReader(System.in);\n        PrintWriter w = new PrintWriter(System.out);\n \n        int n = sc.nextInt();\n    \n        HashMap<String, Integer> map = new HashMap<>();\n\n        for(int i = 0; i < n; ++i) {\n            String s = sc.next();\n\n            if(map.get(s) == null)\n                map.put(s, 1);\n            else\n                map.put(s, map.get(s) + 1);\n        } \n\n        for(int i = 0; i < n; ++i) {\n            String s = sc.next();\n\n            if(map.get(s) == null)\n                map.put(s, -1);\n            else\n                map.put(s, map.get(s) - 1);\n        }\n\n        int ans = 0;\n        for(String i : map.keySet()) {\n            if(map.get(i) > 0)\n                ans += map.get(i);\n        }\n\n        w.print(ans);\n\n        w.close();      \n    }\n}"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nsizeDict = {\"XXXS\":0,\n            \"XXS\": 0,\n            \"XS\":  0,\n            \"S\":   0,\n            \"M\":   0,\n            \"L\":   0,\n            \"XL\":  0,\n            \"XXL\": 0,\n            \"XXXL\":0}\n\nfor i in range(n):\n    sizeDict[input()] += 1\n\ncount = 0\n\nfor i in range(n):\n    current = input()\n    if sizeDict[current]:\n        sizeDict[current] -= 1\n    else:\n        count += 1\n\nprint(count)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  map<string, int> a, b;\n  for (int i = 0; i < n; ++i) {\n    string tmp;\n    cin >> tmp;\n    ++a[tmp];\n  }\n  for (int i = 0; i < n; ++i) {\n    string tmp;\n    cin >> tmp;\n    ++b[tmp];\n  }\n  int cs;\n  cs = max(abs(a[\"S\"] - b[\"S\"]), abs(a[\"M\"] - b[\"M\"]));\n  cs = max(cs, abs(a[\"L\"] - b[\"L\"]));\n  cs += max(abs(a[\"XS\"] - b[\"XS\"]), abs(a[\"XL\"] - b[\"XL\"]));\n  cs += max(abs(a[\"XXS\"] - b[\"XXS\"]), abs(a[\"XXL\"] - b[\"XXL\"]));\n  cs += max(abs(a[\"XXXS\"] - b[\"XXXS\"]), abs(a[\"XXXL\"] - b[\"XXXL\"]));\n  cout << cs;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  long long int n, count = 0;\n  vector<string> a;\n  vector<string> b;\n  cin >> n;\n  long long int i, j;\n  for (i = 0; i < n; i++) {\n    string x;\n    cin >> x;\n    a.push_back(x);\n  }\n  for (i = 0; i < n; i++) {\n    string y;\n    cin >> y;\n    b.push_back(y);\n  }\n  for (i = 0; i < n; i++) {\n    for (j = 0; j < n; j++) {\n      if (a[i] == b[j]) {\n        count++;\n        b[j] = '0';\n        break;\n      }\n    }\n  }\n  cout << n - count;\n}\n"
        },
        {
            "language": 1,
            "solution": "\n# Author : raj1307 - Raj Singh\n# Date   : 17.04.2020\n\nfrom __future__ import division, print_function\n\nimport os,sys\nfrom io import BytesIO, IOBase\n\nif sys.version_info[0] < 3:\n    from __builtin__ import xrange as range\n    from future_builtins import ascii, filter, hex, map, oct, zip\n\n\ndef ii(): return int(input())\ndef si(): return input()\ndef mi(): return map(int,input().strip().split(\" \"))\ndef msi(): return map(str,input().strip().split(\" \"))\ndef li(): return list(mi())\n\ndef dmain():\n    sys.setrecursionlimit(100000000)\n    threading.stack_size(40960000)\n    thread = threading.Thread(target=main)\n    thread.start()\n    \n#from collections import deque, Counter, OrderedDict,defaultdict\n#from heapq import nsmallest, nlargest, heapify,heappop ,heappush, heapreplace\n#from math import ceil,floor,log,sqrt,factorial\n#from bisect import bisect,bisect_left,bisect_right,insort,insort_left,insort_right\n#from decimal import *,threading\n#from itertools import permutations\n#Copy 2D list  m = [x[:] for x in mark] .. Avoid Using Deepcopy\n\nabc='abcdefghijklmnopqrstuvwxyz'\nabd={'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': 7, 'i': 8, 'j': 9, 'k': 10, 'l': 11, 'm': 12, 'n': 13, 'o': 14, 'p': 15, 'q': 16, 'r': 17, 's': 18, 't': 19, 'u': 20, 'v': 21, 'w': 22, 'x': 23, 'y': 24, 'z': 25}\nmod=1000000007\n#mod=998244353\ninf = float(\"inf\")\nvow=['a','e','i','o','u']\ndx,dy=[-1,1,0,0],[0,0,1,-1]\ndef getKey(item): return item[1] \ndef sort2(l):return sorted(l, key=getKey,reverse=True)\ndef d2(n,m,num):return [[num for x in range(m)] for y in range(n)]\ndef isPowerOfTwo (x): return (x and (not(x & (x - 1))) )\ndef decimalToBinary(n): return bin(n).replace(\"0b\",\"\")\ndef ntl(n):return [int(i) for i in str(n)]\ndef ncr(n,r): return factorial(n)//(factorial(r)*factorial(n-r))\n\ndef powerMod(x,y,p):\n    res = 1\n    x %= p\n    while y > 0:\n        if y&1:\n            res = (res*x)%p\n        y = y>>1\n        x = (x*x)%p\n    return res\n\ndef gcd(x, y):\n    while y:\n        x, y = y, x % y\n    return x\n    \ndef isPrime(n) : # Check Prime Number or not \n    if (n <= 1) : return False\n    if (n <= 3) : return True\n    if (n % 2 == 0 or n % 3 == 0) : return False\n    i = 5\n    while(i * i <= n) : \n        if (n % i == 0 or n % (i + 2) == 0) : \n            return False\n        i = i + 6\n    return True\n\n\n\ndef read():\n    sys.stdin = open('input.txt', 'r')  \n    sys.stdout = open('output.txt', 'w') \n\n\ndef main():\n        \n\n    #for _ in range(ii()):\n    \n    \n    n=ii()\n    a=[]\n    b=[]\n    for i in range(n):\n        a.append(si())\n\n    for i in range(n):\n        b.append(si())\n\n    f=[0]*n\n    g=[0]*n\n    for i in range(n):\n\n        x=a[i]\n        flag=0\n        for j in range(n):\n\n            if f[j]==1:\n                continue\n\n\n            if b[j]==x:\n                flag=1\n                f[j]=1\n                g[i]=1\n                break\n\n\n    ans=0\n\n    for i in range(n):\n\n        if g[i]==0:\n\n            for j in range(n):\n\n                if f[j]==0:\n\n                    if len(a[i])==len(b[j]):\n\n\n\n                        f[j]=1\n                        g[i]=1\n                        ans+=1\n                        break\n\n\n    print(ans)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n    \n       \n\n\n\n    \n\n\n\n\n\n\n# region fastio\n# template taken from https://github.com/cheran-senthil/PyRival/blob/master/templates/template.py\n\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\ndef print(*args, **kwargs):\n    \"\"\"Prints the values to a stream, or to sys.stdout by default.\"\"\"\n    sep, file = kwargs.pop(\"sep\", \" \"), kwargs.pop(\"file\", sys.stdout)\n    at_start = True\n    for x in args:\n        if not at_start:\n            file.write(sep)\n        file.write(str(x))\n        at_start = False\n    file.write(kwargs.pop(\"end\", \"\\n\"))\n    if kwargs.pop(\"flush\", False):\n        file.flush()\n\n\nif sys.version_info[0] < 3:\n    sys.stdin, sys.stdout = FastIO(sys.stdin), FastIO(sys.stdout)\nelse:\n    sys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\n\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\n# endregion\n\n\nif __name__ == \"__main__\":\n    #read()\n    main()\n    #dmain()\n\n# Comment Read()\n"
        },
        {
            "language": 1,
            "solution": "n = input()\nprev_year = []\nthis_year = []\nfor i in range(n):\n\tprev_year.append(raw_input())\nfor i in range(n):\n\tr = raw_input()\n\tif r not in prev_year:\n\t\tthis_year.append(r)\n\telse :\n\t\tprev_year.remove(r)\t\n\nthis_year.sort(lambda x, y : cmp(len(x), len(y)))\nprint(len(this_year))"
        },
        {
            "language": 3,
            "solution": "def check(a,b):\n    if a==None or b==None:\n        return 0\n    count=0\n    if len(a)==len(b):\n        count+=1\n    elif len(b)>len(a):\n        if b[len(b)-1]!=a[len(a)-1]:\n            count+=1\n        count=count+len(b)-len(a)\n    else:\n        check(b,a)\n    return count\n        \n\nn=int(input())\na=[]\nb=[]\nn=2*n\nfor i in range(1,n+1):\n    if i <= n//2:\n        t=str(input())\n        a.append(t)\n    else:\n        z=str(input())\n        if a.count(z)==0:\n            b.append(z)\n        else:\n            a.remove(z)\n            \n        \na.sort()\nb.sort()\n#print(a,b)\nsum=0\nfor i in range(len(a)):\n    sum=sum+check(a[i],b[i])\nprint(sum)\n    \n#print(a,b)`\n"
        },
        {
            "language": 3,
            "solution": "arr = \"M S L XL XS XXL XXS XXXL XXXS\"\narr.split(\" \")\nn = int(input())\na=[]\nb=[]\nfor i in range(n):\n  s=input()\n  a.append(s)\n\nfor i in range(n):\n  s=input()\n  b.append(s)\nlol=[]\nfor i in b:\n  if(i in a):\n    a[a.index(i)]='1'\n  else:\n    lol.append(i)\nprint(len(lol))\n\n\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = {}\nb = {}\nfor i in range(n):\n    s = input()\n    if s not in a:\n        a[s] = 0\n    a[s] += 1\nfor i in range(n):\n    s = input()\n    if s not in b:\n        b[s] = 0\n    b[s] += 1\ncnt = 0\nfor x in a:\n    cnt += max(0, a[x] - (0 if x not in b else b[x]))\nprint(cnt)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nmap<string, int> ma;\nint main() {\n  int n, ans = 0;\n  string s;\n  cin >> n;\n  for (int i = 1; i <= n; i++) {\n    cin >> s;\n    ma[s]++;\n  }\n  for (int i = 1; i <= n; i++) {\n    cin >> s;\n    if (ma[s] == 0)\n      ans++;\n    else\n      ma[s]--;\n  }\n  cout << ans;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "a=int(input())\nz,z1=[],[]\nfor i in range(2*a):\n    if i<a:z+=[input()]\n    else:z1+=[input()]\nr=z.copy()\nfor i in range(a):\n    if z[i] in z1:\n        r.remove(z[i])\n        z1.remove(z[i])\nr=sorted(r)\nz1=sorted(z1)\ns=0\nfor i in range(len(r)):\n    for j in range(len(r[i])):\n        s+=r[i][j]!=z1[i][j]\nprint(s)"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class Codehorses {\n\n\tpublic static void main(String[] args) {\n\t\tScanner input = new Scanner(System.in);\n\t\tint n = input.nextInt();\n\t\tinput.nextLine();\n\t\t\n\t\tArrayList<String> oldshirts = new ArrayList<String>();\n\t\tArrayList<String> newshirts = new ArrayList<String>();\n\t\t\n\t\tfor (int i = 0; i<n; i++) {\n\t\t\tnewshirts.add(input.nextLine());\n\t\t}\n\t\t\n\t\tfor (int i = 0; i<n; i++) {\n\t\t\toldshirts.add(input.nextLine());\n\t\t}\n\t\t\n\t\t\n\t\tfor (int i = 0; i<n; i++) {\n\t\t\t\tfor (int j = 0; j<n; j++) {\n\t\t\t\t\tif (j<newshirts.size()) {\n\t\t\t\t\t\tif (oldshirts.get(i).equals(newshirts.get(j))) {\n\t\t\t\t\t\t\toldshirts.set(i, \" \");\n\t\t\t\t\t\t\tnewshirts.remove(newshirts.get(j));\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t}\n\t\tSystem.out.println(newshirts.size());\n\n\t}\n\t\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class CodeHorses {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int N = scanner.nextInt();\n        String[] curList = new String[N];\n        String[] nextList = new String[N];\n        for(int i = 0; i < N; i++) {\n            curList[i] = scanner.next();\n        }\n        for(int i = 0; i < N; i++) {\n            nextList[i] = scanner.next();\n        }\n        int[] arrDiff = new int[9];\n        for(int i = 0; i < N; i++) {\n            String cur = curList[i];\n            if(cur.equals(\"S\")) {\n                arrDiff[0]++;\n            }\n            else if (cur.equals(\"M\")) {\n                arrDiff[1]++;\n            }\n            else if (cur.equals(\"L\")) {\n                arrDiff[2]++;\n            }\n            else if (cur.equals(\"XS\")) {\n                arrDiff[3]++;\n            }\n            else if (cur.equals(\"XL\")) {\n                arrDiff[4]++;\n            }\n            else if (cur.equals(\"XXS\")) {\n                arrDiff[5]++;\n            }\n            else if (cur.equals(\"XXL\")) {\n                arrDiff[6]++;\n            }\n            else if (cur.equals(\"XXXS\")) {\n                arrDiff[7]++;\n            }\n            else if (cur.equals(\"XXXL\")) {\n                arrDiff[8]++;\n            }\n        }\n        for(int i = 0; i < N; i++) {\n            String cur = nextList[i];\n            if(cur.equals(\"S\")) {\n                arrDiff[0]--;\n            }\n            else if (cur.equals(\"M\")) {\n                arrDiff[1]--;\n            }\n            else if (cur.equals(\"L\")) {\n                arrDiff[2]--;\n            }\n            else if (cur.equals(\"XS\")) {\n                arrDiff[3]--;\n            }\n            else if (cur.equals(\"XL\")) {\n                arrDiff[4]--;\n            }\n            else if (cur.equals(\"XXS\")) {\n                arrDiff[5]--;\n            }\n            else if (cur.equals(\"XXL\")) {\n                arrDiff[6]--;\n            }\n            else if (cur.equals(\"XXXS\")) {\n                arrDiff[7]--;\n            }\n            else if (cur.equals(\"XXXL\")) {\n                arrDiff[8]--;\n            }\n        }\n        int sum = 0;\n        for(int i = 0; i < 9; i++) {\n            sum += Math.max(0, arrDiff[i]);\n        }\n        System.out.println(sum);\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint getCount(string a, string b) {\n  int c = 0;\n  for (int i = 0; i < a.size(); i++)\n    if (a[i] != b[i]) c++;\n  return c;\n}\nint Ans(vector<string>& a, vector<string>& b) {\n  int ans = 0;\n  map<string, int> mp;\n  for (int i = 0; i < a.size(); i++) mp[a[i]]++;\n  vector<string> res;\n  vector<string> temp;\n  for (int j = 0; j < b.size(); j++) {\n    if (mp[b[j]] > 0)\n      mp[b[j]]--;\n    else\n      res.push_back(b[j]);\n  }\n  for (auto it : mp) {\n    for (int i = 0; i < it.second; i++) temp.push_back(it.first);\n  }\n  for (int i = 0; i < res.size(); i++) {\n    string k = res[i];\n    int curr_min = INT_MAX;\n    int idx = -1;\n    for (int j = 0; j < temp.size(); j++) {\n      string l = temp[j];\n      if (l.size() && k.size() == l.size()) {\n        int c = getCount(k, l);\n        if (c < curr_min) {\n          idx = j;\n          curr_min = c;\n        }\n      }\n    }\n    if (idx != -1) {\n      temp[idx] = \"\";\n      ans += curr_min;\n    }\n  }\n  return ans;\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  int n;\n  cin >> n;\n  vector<string> a(n);\n  vector<string> b(n);\n  for (int i = 0; i < n; i++) cin >> a[i];\n  for (int i = 0; i < n; i++) cin >> b[i];\n  cout << Ans(a, b) << endl;\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.lang.reflect.Array;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.Scanner;\nimport java.util.Stack;\n\npublic class CodeChef {\n    public static void main(String[] args) {\n        Scanner input = new Scanner(System.in);\n       int n=input.nextInt();\n       String s;\n        ArrayList<String>a1=new ArrayList<>();\n        for (int i=0;i<n;i++){\n            s=input.next();\n            a1.add(s);\n        }\n        for(int i=0;i<n;i++){\n            s=input.next();\n            if (a1.contains(s)) a1.remove(s);\n        }\n        System.out.println(a1.size());\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\n#pragma comment(linker, \"/STACK:167772160000\")\nusing namespace std;\nmap<string, int> cnt;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  int n;\n  cin >> n;\n  for (int i = (0); i < (n); i++) {\n    string s;\n    cin >> s;\n    cnt[s]++;\n  }\n  for (int i = (0); i < (n); i++) {\n    string s;\n    cin >> s;\n    cnt[s]--;\n  }\n  int ans = 0;\n  for (auto e : cnt) {\n    if (e.second <= 0) continue;\n    ans += e.second;\n  }\n  cout << ans;\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class algo121\n{\n    public static void main(String args[])\n    {\n        Scanner ex=new Scanner(System.in);\n        int n=ex.nextInt();\n        String a[]=new String[n];\n        String b[]=new String[n];\n        for(int i=0;i<n;i++)\n        a[i]=ex.next();\n        for(int i=0;i<n;i++)\n        b[i]=ex.next();\n        String valid[]={\"S\",\"M\",\"L\",\"XS\",\"XL\",\"XXS\",\"XXL\",\"XXXS\",\"XXXL\"};\n        int ai[]=new int[9];\n        int bi[]=new int[9];\n        for(int i=0;i<n;i++)\n        {\n            for(int j=0;j<9;j++)\n            {\n                if(a[i].equals(valid[j]))\n                ai[j]++;\n                if(b[i].equals(valid[j]))\n                bi[j]++;\n            }\n        }\n        int ans=0;\n        for(int i=0;i<9;i++)\n        {\n            if(ai[i]>bi[i])\n            ans=ans+ai[i]-bi[i];\n        }\n        System.out.println(ans);\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nconst long long sze = 2e5 + 50, psze = 30, INF = 1e18;\nconst double eps = 1e-9;\nusing namespace std;\nvector<long long> vertices[sze];\nvector<char> visit(sze);\nvector<long long> dp(sze);\nvector<long long> arr(sze);\nbool did_dp[100];\nbool checker[sze];\nlong long n;\nlong long m;\nlong long k;\nlong long cnt = 0;\nchar tbl[100][100];\nlong long cnts[sze];\nmap<string, long long> first;\nmap<string, long long> second;\nsigned main() {\n  ios::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  cin >> n;\n  for (long long i = 0; i < n; i++) {\n    string s;\n    cin >> s;\n    first[s]++;\n  }\n  for (long long i = 0; i < n; i++) {\n    string s;\n    cin >> s;\n    second[s]++;\n  }\n  for (auto it : second) {\n    if (first.find(it.first) != first.end()) {\n      if (it.second >= first[it.first]) {\n        first.erase(it.first);\n      } else {\n        first[it.first] -= it.second;\n      }\n    }\n  }\n  for (auto it : first) {\n    cnt += it.second;\n  }\n  cout << cnt;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  int n;\n  cin >> n;\n  string ele;\n  vector<int> ff(9, 0), ss(9, 0);\n  for (register int i = 0; i < n; i++) {\n    cin >> ele;\n    if (ele == \"M\")\n      ff[0]++;\n    else if (ele == \"L\")\n      ff[1]++;\n    else if (ele == \"S\")\n      ff[2]++;\n    else if (ele == \"XS\")\n      ff[3]++;\n    else if (ele == \"XXS\")\n      ff[4]++;\n    else if (ele == \"XXXS\")\n      ff[5]++;\n    else if (ele == \"XL\")\n      ff[6]++;\n    else if (ele == \"XXL\")\n      ff[7]++;\n    else if (ele == \"XXXL\")\n      ff[8]++;\n  }\n  for (register int i = 0; i < n; i++) {\n    cin >> ele;\n    if (ele == \"M\")\n      ss[0]++;\n    else if (ele == \"L\")\n      ss[1]++;\n    else if (ele == \"S\")\n      ss[2]++;\n    else if (ele == \"XS\")\n      ss[3]++;\n    else if (ele == \"XXS\")\n      ss[4]++;\n    else if (ele == \"XXXS\")\n      ss[5]++;\n    else if (ele == \"XL\")\n      ss[6]++;\n    else if (ele == \"XXL\")\n      ss[7]++;\n    else if (ele == \"XXXL\")\n      ss[8]++;\n  }\n  int ans{0};\n  for (register int i = 0; i < 9; i++) {\n    ans += abs(ff[i] - ss[i]);\n  }\n  cout << ans / 2 << endl;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\n\nager = []\nporer = []\n\nfor i in range(n):\n  x = str(input())\n  ager.append(x)\nfor i in range(n):\n  y = str(input())\n  porer.append(y)\n\nuttar = 0\n\nfor i in range(n):\n  if ager[i] in porer:\n    porer.remove(ager[i])\nprint(len(porer))  \n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\nusing namespace std;\ntemplate <typename X>\ninline X abs(const X& a) {\n  return a < 0 ? -a : a;\n}\ntemplate <typename X>\ninline X sqr(const X& a) {\n  return a * a;\n}\nconst int size = 1e5 + 2;\nconst double eps = 0.0001;\nconst long double PI = 3.1415926535897932384626433832795;\nconst long long MOD = 1000000007;\nconst long long INF = 1LL << 60;\nconst long long MAX5 = 100001;\nconst long long MAX6 = 1000001;\nconst long long MAX17 = 99999999999999999;\nconst double DMAX = 2e18 + 5;\nvoid solution();\nvoid include_file();\nint main() {\n  ios_base::sync_with_stdio(false);\n  solution();\n  return 0;\n}\nvoid include_file() {\n  ios_base::sync_with_stdio(true);\n  freopen(\"input.txt\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n}\ninline bool isPrime(long long n) {\n  for (int i = 2; i * i <= n; ++i)\n    if (n % i == 0) return false;\n  return true;\n}\nstring ekv(string a) {\n  if (a.size() & 1) return a;\n  string x = ekv(a.substr(0, a.size() / 2));\n  string y = ekv(a.substr(a.size() / 2));\n  return min(x + y, y + x);\n}\nlong long cubic_root(long long x) {\n  long long l = 0, r = MAX6;\n  while (l != r) {\n    long long m = (l + r + 1) / 2;\n    if (m * m * m > x)\n      r = m - 1;\n    else\n      l = m;\n  }\n  return l;\n}\nfloat FastInvSqrt(float x) {\n  float xhalf = 0.5f * x;\n  int i = *(int*)&x;\n  i = 0x5f3759df - (i >> 1);\n  x = *(float*)&i;\n  x = x * (1.5f - (xhalf * x * x));\n  return x;\n}\nlong long gcd(long long a, long long b) {\n  if (a == 0) return b;\n  return gcd(b % a, a);\n}\nlong long lcm(long long a, long long b) { return a / gcd(a, b) * b; }\nvoid yes() { cout << \"YES\"; }\nvoid no() { cout << \"NO\"; }\nvoid yes(bool res) {\n  if (res)\n    cout << \"YES\";\n  else\n    cout << \"NO\";\n}\nvoid dabl(double x) { printf(\"%.10lf\", x); }\nnamespace bits {\ntemplate <typename X>\ninline X MAX(const X& a, const X& b) {\n  return b & ((a - b) >> 31) | a & (~(a - b) >> 31);\n}\ntemplate <typename X>\ninline X MIN(const X& a, const X& b) {\n  return a & ((a - b) >> 31) | b & (~(a - b) >> 31);\n}\nbool check2(const long long n) { return n > 0 && (n & (n - 1)); }\nlong long ostatok2(const long long n, const long long m) { return m & (n - 1); }\ntemplate <typename X>\nvoid SWAP(X& a, X& b) {\n  a ^= b;\n  b ^= a;\n  a ^= b;\n}\nsize_t count_1_in_LL(unsigned long long n) {\n  std::size_t i(0);\n  for (; n; ++i) n &= n - 1;\n  return i;\n}\n}  // namespace bits\nvector<vector<int> > g;\ninline void solution() {\n  int n;\n  cin >> n;\n  map<string, int> q;\n  for (long long i = 0; i < n; ++i) {\n    string s;\n    cin >> s;\n    q[s]++;\n  }\n  int res = 0;\n  for (long long i = 0; i < n; ++i) {\n    string s;\n    cin >> s;\n    if (q[s] > 0)\n      q[s]--;\n    else\n      res++;\n  };\n  cout << res;\n  ;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na=[];count=0;\nfor i in range(n):\n    a.append(input())\n\nfor i in range(n):\n    try:a.remove(input())\n    except:count+=1\n\nprint(count)\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic final class ideone {\n\t\n\tpublic static void main(String []args) throws java.lang.Exception {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\t\tHashMap<String,Integer> mapu = new HashMap<String,Integer>();\n\n\t\tint n = Integer.parseInt(br.readLine());\n\n\t\tfor(int i = 0 ; i < n ; i = 1 + i) {\n\t\t\tString inu = br.readLine();\n\t\t\tif(!mapu.containsKey(inu)) {\n\t\t\t\tmapu.put(inu, 1);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmapu.put(inu , mapu.get(inu) + 1);\n\t\t\t}\n\t\t}\n\n\t\tint ans = 0 ; \n\n\t\tfor(int i = 0 ; i < n ; i = i + 1 ) {\n\t\t\tString inu = br.readLine();\n\t\t\tif(mapu.containsKey(inu)) {\n\t\t\t\tmapu.put(inu, mapu.get(inu) - 1); \n\t\t\t\tif(mapu.get(inu) == 0) {\n\t\t\t\t\tmapu.remove(inu);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\telse ans = ans + 1;\n\t\t}\n\n\t\tSystem.out.println(ans);\n\t}\n}"
        },
        {
            "language": 3,
            "solution": "n=int(input())\narr1=[]\narr2=[]\nfor _ in range(n):\n    arr1+=[input()]\nfor _ in range(n):\n    arr2+=[input()]\n\nfor word in arr1:\n    if word in arr2:\n        arr2.remove(word)\nprint(len(arr2))\n    \n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class P3{\n\n  public void print(String [] arr){\n    StringBuilder sb = new StringBuilder();\n    for(String x : arr){\n      sb.append(x).append(\" \");\n    }\n    System.out.println(sb.toString().trim());\n  }\n\n  public void ans(String [] prev, String [] next){\n    //print(prev);\n    //print(next);\n    List<List<String>> prevBucket = new ArrayList<>();\n    List<List<String>> curBucket = new ArrayList<>();\n    for(int i = 0; i < 5; ++i){\n      prevBucket.add(new ArrayList<>());\n      curBucket.add(new ArrayList<>());\n    }\n\n    for(String s : prev){\n      //System.out.println(s.length());\n      prevBucket.get(s.trim().length()).add(s);\n    }\n\n    for(String s : next){\n      curBucket.get(s.trim().length()).add(s);\n    }\n    //System.out.println(prevBucket);\n    //System.out.println(curBucket);\n\n    for(int i = 0; i < curBucket.size(); ++i){\n      Collections.sort(curBucket.get(i));\n      Collections.sort(prevBucket.get(i));\n    }\n\n    /*if(prev[0].equals(\"S\")){\n      System.out.println(prevBucket);\n      System.out.println(curBucket);\n    } */\n\n    int sol = 0;\n    for(int i = 0; i < curBucket.size(); ++i){\n      int siz = curBucket.get(i).size();\n      for(int j = 0; j < siz; ++j){\n          if(!curBucket.get(i).get(j).equals(prevBucket.get(i).get(j))){\n            ++sol;\n          }\n        }\n      }\n\n\n    System.out.println(sol);\n\n  }\n\n  public void ans(String [] prev, String [] cur, int x){\n      Map<String, Integer> map = new HashMap<>();\n      for(String p : prev) map.put(p, map.getOrDefault(p, 0) + 1);\n      int ctr = 0;\n      for(String p : cur) {\n        if(map.containsKey(p)){\n          map.put(p, map.get(p) - 1);\n          if(map.get(p) == 0) map.remove(p);\n        } else {\n          ++ctr;\n        }\n      }\n      System.out.println(ctr);\n  }\n\n\n\n   public static void main(String[] args) {\n    P3 main = new P3();\n    Scanner scanner = new Scanner(System.in);\n    /*String [] firstLine = scanner.nextLine().split(\" \");\n    String [] secondLine = scanner.nextLine().split(\" \");\n\n    int [] firstLineArr = new int[firstLine.length];\n    int [] arr = new int[secondLine.length];\n    for(int i = 0; i < firstLine.length; ++i) firstLineArr[i] = Integer.parseInt(firstLine[i]);\n    for(int i = 0; i < arr.length; ++i) arr[i] = Integer.parseInt(secondLine[i]); */\n    int n = Integer.parseInt(scanner.nextLine());\n    String [] prev = new String[n];\n    String [] cur = new String[n];\n    List<String> input = new ArrayList<>();\n    int ptr = 0;\n\n    for(int i = 0; i < 2*n; ++i){\n      String nxt = scanner.nextLine();\n      if(i == n) ptr = 0;\n      if(i < n){\n        prev[ptr++] = nxt;\n      } else {\n        cur[ptr++] = nxt;\n      }\n      input.add(nxt);\n    }\n    //main.ans(prev, cur);\n    main.ans(prev, cur, 1);\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint main() {\n  int n, l, temp, step, c = 0, c1 = 0, c2 = 0, c3 = 0, c4 = 0, c5 = 0, c6 = 0,\n                        c7 = 0, c8 = 0, c9 = 0, c10 = 0, c11 = 0, c12 = 0,\n                        c13 = 0, c14 = 0, c15 = 0, c16 = 0, c17 = 0, c18 = 0;\n  scanf(\"%d\", &n);\n  int a[n], b[n], i, j, p = 0, fre[100];\n  char t[100];\n  char s1[200][4], s2[200][4],\n      s3[10][10] = {\"S\", \"M\", \"XL\", \"XS\", \"XXL\", \"XXS\", \"XXXL\", \"XXXS\", \"L\"};\n  for (i = 0; i < n; i++) {\n    scanf(\"%s\", s1[i]);\n    a[i] = strlen(s1[i]);\n    if (strcmp(s1[i], s3[0]) == 0) {\n      c1++;\n    } else if (strcmp(s1[i], s3[1]) == 0) {\n      c2++;\n    } else if (strcmp(s1[i], s3[2]) == 0) {\n      c3++;\n    } else if (strcmp(s1[i], s3[3]) == 0) {\n      c4++;\n    } else if (strcmp(s1[i], s3[4]) == 0) {\n      c5++;\n    } else if (strcmp(s1[i], s3[5]) == 0) {\n      c6++;\n    } else if (strcmp(s1[i], s3[6]) == 0) {\n      c7++;\n    } else if (strcmp(s1[i], s3[7]) == 0) {\n      c8++;\n    } else if (strcmp(s1[i], s3[8]) == 0) {\n      c17++;\n    }\n  }\n  for (i = 0; i < n; i++) {\n    scanf(\"%s\", s2[i]);\n    b[i] = strlen(s2[i]);\n    if (strcmp(s2[i], s3[0]) == 0) {\n      c9++;\n    } else if (strcmp(s2[i], s3[1]) == 0) {\n      c10++;\n    } else if (strcmp(s2[i], s3[2]) == 0) {\n      c11++;\n    } else if (strcmp(s2[i], s3[3]) == 0) {\n      c12++;\n    } else if (strcmp(s2[i], s3[4]) == 0) {\n      c13++;\n    } else if (strcmp(s2[i], s3[5]) == 0) {\n      c14++;\n    } else if (strcmp(s2[i], s3[6]) == 0) {\n      c15++;\n    } else if (strcmp(s2[i], s3[7]) == 0) {\n      c16++;\n    } else if (strcmp(s2[i], s3[8]) == 0) {\n      c18++;\n    }\n  }\n  if (c9 > c1) {\n    c += (c9 - c1);\n  }\n  if (c10 > c2) {\n    c += (c10 - c2);\n  }\n  if (c11 > c3) {\n    c += (c11 - c3);\n  }\n  if (c12 > c4) {\n    c += (c12 - c4);\n  }\n  if (c13 > c5) {\n    c += (c13 - c5);\n  }\n  if (c14 > c6) {\n    c += (c14 - c6);\n  }\n  if (c15 > c7) {\n    c += (c15 - c7);\n  }\n  if (c16 > c8) {\n    c += (c16 - c8);\n  }\n  if (c18 > c17) {\n    c += (c18 - c17);\n  }\n  printf(\"%d\\n\", c);\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "# cook your dish here\n# cook your dish here\n# cook your dish here\n# cook your dish here\n# cook your dish here\n# cook your dish here\n# cook your dish here\nn=int(input())\ny=[]\nfor i in range(n):\n    a=input()\n    y.append(a)\n\ny1=[]\nfor j in range(n):\n    b=input()\n    y1.append(b)\n\ny=sorted(y)\ny1=sorted(y1)\n#print(y,y1)\n\nj=0\nwhile j<n:\n    k=0\n    while k<n:\n        if y[j]==y1[k]:\n            y[j]=\"0\"\n            y1[k]=\"-1\"\n            break\n        k+=1\n    j+=1\n\ny=sorted(y)\ny1=sorted(y1)\n\n\ncount=0\nj=n-1\nwhile j>=0 and y[j]!=\"0\" and y1[j]!=\"-1\":\n    i=0\n    while i<len(y[j]):\n        if y[j][i]!=y1[j][i]:\n            count+=1\n        i+=1\n\n    j-=1\n\nprint(count)\n                    \n                \n\n    "
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[[0,0,0],[0,0,0],[0,0,0],[0,0,0]]\nb='SLM'\no=0\nfor i in range(n):\n    i=input()\n    a[len(i)-1][b.index(i[-1])]+=1\nfor i in range(n):\n    i=input()\n    o+=1\n    if a[len(i)-1][b.index(i[-1])]>0:\n        a[len(i)-1][b.index(i[-1])]-=1\n        o-=1\nprint(o)\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.awt.List;\nimport java.io.*;\nimport java.lang.*;\n\t\npublic class code1\n\t{\n \n\t\tpublic static boolean[] vis;\n\t\tpublic static int[] a;\n\t\tpublic static int[] rev;\n\t\tpublic static ArrayList[] adj;\n\t\t\n\t\tpublic static int n;\n\t\tpublic static int count;\n\t\tpublic static long ans;\n\t\t\n\t\tpublic static void main(String[] args)\n\t\t{\n\t\t\tInputReader in = new InputReader(System.in);\n\t\t\tPrintWriter pw = new PrintWriter(System.out);\n\t\t\t\n\t\t\t//Code starts..\n\t\t\n\t\t\n\t\t\n\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tArrayList<String> l = new ArrayList<>();\n\t\t\tint n = in.nextInt();\n\t\t\tfor(int i = 0;i<n;i++){\n\t\t\t\tString s= in.nextLine();\n\t\t\t\tl.add(s);\n\t\t\t}\n\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\tString s  = in.nextLine();\n\t\t\t\tif(l.contains(s))\n\t\t\t\t\tl.remove(s);\n\t\t\t//\tpw.print(s);\n\t\t\t}\n\t\t\t\n\t\t\tpw.println(l.size());\n\t        \n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t//Code ends....\n\t\t\t\n\t\t\tpw.flush();\n\t\t\tpw.close();\n\t\t}\n\t\t\n\t\tpublic static void fun(long l)\n\t\t{\n\t\t long tmp = l;\n\t\t\twhile(tmp>0)\n\t\t\t{\n\t\t\t\n\t\t\t\tSystem.out.print(tmp%2);\n\t\t\t\ttmp /= 2;\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t\t\n\t\tstatic void fillOrder(int v, Stack stack)\n\t    {\n\t        vis[v] = true;\n\t \n\t           \n\t        int k = a[v];\n\t            \n\t        if(!vis[k])\n\t                fillOrder(n, stack);\n\t \n\t\t\tstack.push(v);\n\t \n\t    \n\t\t}\n\t \n\t    public static void fun()\n\t    {\n\t        Stack<Integer> stack = new Stack<>();\n\t        for (int i = 1; i <= n; i++)\n\t            if (!vis[i])\n\t                fillOrder(i, stack);\n\t \n\t       for(int i=0; i<n; i++)\n\t    \t   vis[i+1] = false;\n\t        \n\t       System.out.println(stack);\n\t        while (!stack.empty())\n\t        {\n\t            int v = (int)stack.pop();\n\t            if (!vis[v])\n\t            {\n\t            \t\tcount = 0;\n\t            \t\tdfs(v);\n\t            \t\tSystem.out.println(count);\n\t            }\n\t        }\n\t    }\n\t    \n\t    public static void dfs(int v)\n\t    {\n\t        vis[v] = true;\n\t      \n\t        int n;\n\t        count++;\n\t        System.out.println(v+\"-\"+adj[v]);\n\t        Iterator<Integer> i =adj[v].iterator();\n\t        \n\t        while (i.hasNext())\n\t        {\n\t            n = i.next();\n\t            if (!vis[n])\n\t                dfs(n);\n\t        }\n\t    }\n\t\t\n\t\t\n\t/*\tpublic static int lcs( int[] X, int[] Y, int m, int n )\n\t\t  {\n\t\t    if (m == 0 || n) == 0)\n\t\t      return 0;\n\t\t    if (X[m-1] == Y[n-1])\n\t\t      return 1 + lcs(X, Y, m-1, n-1);\n\t\t    else\n\t\t      return Math.max(lcs(X, Y, m, n-1), lcs(X, Y, m-1, n));\n\t\t  }\n\t\t\n\t\t*/\n\t\tstatic class InputReader \n\t\t{\n\t\t\t \n\t\t\tprivate final InputStream stream;\n\t\t\tprivate final byte[] buf = new byte[8192];\n\t\t\tprivate int curChar, snumChars;\n\t\t\tprivate SpaceCharFilter filter;\n\t \n\t\t\tpublic InputReader(InputStream stream) \n\t\t\t{\n\t\t\t\tthis.stream = stream;\n\t\t\t}\n\t \n\t\t\tpublic int snext() \n\t\t\t{\n\t\t\t\tif (snumChars == -1)\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\tif (curChar >= snumChars) \n\t\t\t\t{\n\t\t\t\t\tcurChar = 0;\n\t\t\t\t\ttry \n\t\t\t\t\t{\n\t\t\t\t\t\tsnumChars = stream.read(buf);\n\t\t\t\t\t} \n\t\t\t\t\tcatch (IOException e) \n\t\t\t\t\t{\n\t\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t\t}\n\t\t\t\t\tif (snumChars <= 0)\n\t\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\treturn buf[curChar++];\n\t\t\t}\n\t \n\t\t\tpublic int nextInt() \n\t\t    {\n\t\t\t\tint c = snext();\n\t\t\t\twhile (isSpaceChar(c)) \n\t\t\t\t{\n\t\t\t\t\tc = snext();\n\t\t\t\t}\n\t\t\t\tint sgn = 1;\n\t\t\t\tif (c == '-')\n\t\t\t    {\n\t\t\t\t\tsgn = -1;\n\t\t\t\t\tc = snext();\n\t\t\t\t}\n\t\t\t\tint res = 0;\n\t\t\t\tdo \n\t\t\t\t{\n\t\t\t\t\tif (c < '0' || c > '9')\n\t\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t\tres *= 10;\n\t\t\t\t\tres += c - '0';\n\t\t\t\t\tc = snext();\n\t\t\t\t} while (!isSpaceChar(c));\n\t\t\t\treturn res * sgn;\n\t\t\t}\n\t \n\t\t\tpublic long nextLong()\n\t\t    {\n\t\t\t\tint c = snext();\n\t\t\t\twhile (isSpaceChar(c)) \n\t\t\t\t{\n\t\t\t\t\tc = snext();\n\t\t\t\t}\n\t\t\t\tint sgn = 1;\n\t\t\t\tif (c == '-') \n\t\t\t\t{\n\t\t\t\t\tsgn = -1;\n\t\t\t\t\tc = snext();\n\t\t\t\t}\n\t\t\t\tlong res = 0;\n\t\t\t\tdo \n\t\t\t\t{\n\t\t\t\t\tif (c < '0' || c > '9')\n\t\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t\tres *= 10;\n\t\t\t\t\tres += c - '0';\n\t\t\t\t\tc = snext();\n\t\t\t\t} while (!isSpaceChar(c));\n\t\t\t\treturn res * sgn;\n\t\t\t}\n\t \n\t\t\tpublic int[] nextIntArray(int n) \n\t\t\t{\n\t\t\t\tint a[] = new int[n];\n\t\t\t\tfor (int i = 0; i < n; i++) \n\t\t\t\t{\n\t\t\t\t\ta[i] = nextInt();\n\t\t\t\t}\n\t\t\t\treturn a;\n\t\t\t}\n\t \n\t\t\tpublic String readString()\n\t\t    {\n\t\t\t\tint c = snext();\n\t\t\t\twhile (isSpaceChar(c)) \n\t\t\t\t{\n\t\t\t\t\tc = snext();\n\t\t\t\t}\n\t\t\t\tStringBuilder res = new StringBuilder();\n\t\t\t\tdo \n\t\t\t\t{\n\t\t\t\t\tres.appendCodePoint(c);\n\t\t\t\t\tc = snext();\n\t\t\t\t} while (!isSpaceChar(c));\n\t\t\t\treturn res.toString();\n\t\t\t}\n\t \n\t\t\tpublic String nextLine() \n\t\t\t{\n\t\t\t\tint c = snext();\n\t\t\t\twhile (isSpaceChar(c))\n\t\t\t\t\tc = snext();\n\t\t\t\tStringBuilder res = new StringBuilder();\n\t\t\t\tdo \n\t\t\t\t{\n\t\t\t\t\tres.appendCodePoint(c);\n\t\t\t\t\tc = snext();\n\t\t\t\t} while (!isEndOfLine(c));\n\t\t\t\treturn res.toString();\n\t\t\t}\n\t \n\t\t\tpublic boolean isSpaceChar(int c) \n\t\t\t{\n\t\t\t\tif (filter != null)\n\t\t\t\t\treturn filter.isSpaceChar(c);\n\t\t\t\treturn c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n\t\t\t}\n\t \n\t\t\tprivate boolean isEndOfLine(int c) \n\t\t\t{\n\t\t\t\treturn c == '\\n' || c == '\\r' || c == -1;\n\t\t\t}\n\t \n\t\t\tpublic interface SpaceCharFilter\n\t\t    {\n\t\t\t\tpublic boolean isSpaceChar(int ch);\n\t\t\t}\n\t\t}\n\t\tpublic static long c = 0;\n\t\t\n\t\tpublic static long mod = 1000000007;\n\t\tpublic static int d;\n\t\tpublic static int p;\n\t\tpublic static int q;\n\t\tpublic static boolean flag;\n\t\tpublic static long INF= Long.MAX_VALUE;\n\t\t\n\t\tpublic static long fun(int[] a, int[] b, int m,int n) {\n\t\t\tlong result =0;\n\t\t\tfor(int i=0; i<m; i++)\n\t\t\t\tfor(int j=0; j<m; j++)\n\t\t\t\t{\n\t\t\t\t\tlong[] fib  = new long[Math.max(2, n+2)];\n\t\t\t\t\tfib[1] = a[i];\n\t\t\t\t\tfib[2] = b[j];\n\t\t\t\t\tfor(int k=3; k<=n; k++)\n\t\t\t\t\t\tfib[k] = (fib[k-1]%mod + fib[k-2]%mod)%mod;\n\t\t\t\t\tresult = (result%mod + fib[n]%mod)%mod;\n\t\t\t\t}\n\t\t\t\n\t\t\treturn result;\n\t\t\t\n\t\t}\n\t\t\n\t\t\n\t\tpublic static double slope(pair p1, pair p2)\n\t\t{\n\t\t\tdouble m = INF;\n\t\t\tif((p1.x - p2.x)!=0)\n\t\t\tm =  p1.y - p2.y/(p1.x - p2.x); \n\t\t\t\n\t\t\t\n\t\t\treturn Math.abs(m);\n\t\t\t\n\t\t}\n\t\t\n\t\t\n\t\tpublic static int count(String[] s, int f)\n\t\t{\n\t\t\tint count = 0;\n\t\t\tint n = s[0].length();\n\t\t\t\n\t\t\tif(f==1)\n\t\t\t{\n\t\t\tfor(int i = 0; i<n; i++)\n\t\t\t{\n\t\t\t\tfor(int j=0; j<n; j++)\n\t\t\t\t{\n\t\t\t\t\tif(i%2==0)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(j%2==0 && s[i].charAt(j)=='0')\n\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\tif(j%2==1 && s[i].charAt(j)=='1')\n\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\t\t\t\tif(i%2==1)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(j%2==1 && s[i].charAt(j)=='0')\n\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\tif(j%2==0 && s[i].charAt(j)=='1')\n\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\n\t\t\t count = 0;\n\t\t\t\n\t\t\tfor(int i = 0; i<n; i++)\n\t\t\t{\n\t\t\t\tfor(int j=0; j<n; j++)\n\t\t\t\t{\n\t\t\t\t\tif(i%2==1)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(j%2==0 && s[i].charAt(j)=='0')\n\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\tif(j%2==1 && s[i].charAt(j)=='1')\n\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\t\t\t\tif(i%2==0)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(j%2==1 && s[i].charAt(j)=='0')\n\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\tif(j%2==0 && s[i].charAt(j)=='1')\n\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n \n\t\t\t}\t\n\t\t\t\t\n\t\t\n\t\t\treturn count;\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t}\n\t\t\t\t\n\t\tpublic static  int gcd(int p2, int p22)\n\t\t{\n\t\t    if (p2 == 0)\n\t\t        return (int) p22;\n\t\t    return gcd(p22%p2, p2);\n\t\t}\n\t\t\n\t\t\t\n\t\n\t\t\n\t\t\n\t\tpublic static int findGCD(int arr[], int n)\n\t\t{\n\t\t    int result = arr[0];\n\t\t    for (int i=1; i<n; i++)\n\t\t        result = gcd(arr[i], result);\n\t\t \n\t\t    return result;\n\t\t}\n\t\t\n\t\n \n\t\tpublic static void nextGreater(long[] a, int[] ans)\n\t\t{\n\t\t\t\n\t\t\tStack<Integer> stk = new Stack<>();\n\t\t\tstk.push(0);\n\t\t\t\n\t\t\t\n\t\t\tfor(int i=1; i<a.length; i++)\n\t\t\t{\n\t\t\t\t\n\t\t\t\tif(!stk.isEmpty())\n\t\t\t\t{\n\t\t\t\tint s = stk.pop();\n\t\t\t\twhile(a[s]<a[i])\n\t\t\t\t{\n\t\t\t\t\tans[s] = i;\n\t\t\t\t\tif(!stk.isEmpty())\n\t\t\t\t\t\ts = stk.pop();\n\t\t\t\t\telse\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(a[s]>=a[i])\n\t\t\t\t\tstk.push(s);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tstk.push(i);\n\t\t\t\t\n\t\t\t}\n\t\t\treturn;\n\t\t\t\n\t\t}\n\t\t\n\t\tpublic static void nextGreaterRev(long[] a, int[] ans)\n\t\t{\n\t\t\t\n\t\t\tint n = a.length;\n\t\t\tint[] pans = new int[n];\n\t\t\tArrays.fill(pans, -1);\n\t\t\tlong[] arev = new long[n];\n\t\t\tfor(int i=0; i<n; i++)\n\t\t\t\tarev[i] = a[n-1-i];\n\t\t\t\n\t\t\tStack<Integer> stk = new Stack<>();\n\t\t\tstk.push(0);\n\t\t\t\n\t\t\t\n\t\t\tfor(int i=1; i<n; i++)\n\t\t\t{\n\t\t\t\t\n\t\t\t\tif(!stk.isEmpty())\n\t\t\t\t{\n\t\t\t\tint s = stk.pop();\n\t\t\t\twhile(arev[s]<arev[i])\n\t\t\t\t{\n\t\t\t\t\tpans[s] = n - i-1;\n\t\t\t\t\tif(!stk.isEmpty())\n\t\t\t\t\t\ts = stk.pop();\n\t\t\t\t\telse\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(arev[s]>=arev[i])\n\t\t\t\t\tstk.push(s);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tstk.push(i);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t//for(int i=0; i<n; i++)\n\t\t\t\t//System.out.print(pans[i]+\" \");\n\t\t\t\n\t\t\tfor(int i=0; i<n; i++)\n\t\t\t\tans[i] = pans[n-i-1];\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\treturn;\n\t\t\t\n\t\t}\n\t\t\n\t\t\n\t\tpublic static void nextSmaller(long[] a, int[] ans)\n\t\t{\n\t\t\t\n\t\t\tStack<Integer> stk = new Stack<>();\n\t\t\tstk.push(0);\n\t\t\t\n\t\t\t\n\t\t\tfor(int i=1; i<a.length; i++)\n\t\t\t{\n\t\t\t\t\n\t\t\t\tif(!stk.isEmpty())\n\t\t\t\t{\n\t\t\t\tint s = stk.pop();\n\t\t\t\twhile(a[s]>a[i])\n\t\t\t\t{\n\t\t\t\t\tans[s] = i;\n\t\t\t\t\tif(!stk.isEmpty())\n\t\t\t\t\t\ts = stk.pop();\n\t\t\t\t\telse\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(a[s]<=a[i])\n\t\t\t\t\tstk.push(s);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tstk.push(i);\n\t\t\t\t\n\t\t\t}\n\t\t\treturn;\n\t\t\t\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\t\n\t    public static long lcm(int[] numbers) {\n\t        long lcm = 1;\n\t        int divisor = 2;\n\t        while (true) {\n\t            int cnt = 0;\n\t            boolean divisible = false;\n\t            for (int i = 0; i < numbers.length; i++) {\n\t                if (numbers[i] == 0) {\n\t                    return 0;\n\t                } else if (numbers[i] < 0) {\n\t                    numbers[i] = numbers[i] * (-1);\n\t                }\n\t                if (numbers[i] == 1) {\n\t                    cnt++;\n\t                }\n\t                if (numbers[i] % divisor == 0) {\n\t                    divisible = true;\n\t                    numbers[i] = numbers[i] / divisor;\n\t                }\n\t            }\n\t            if (divisible) {\n\t                lcm = lcm * divisor;\n\t            } else {\n\t                divisor++;\n\t            }\n\t            if (cnt == numbers.length) {\n\t                return lcm;\n\t            }\n\t        }\n\t    }\n\t\tpublic static long fact(long n) {\n\t\t\t\n\t\t\tlong factorial = 1;\n\t\t\t for(int i = 1; i <= n; i++)\n\t\t        {\n\t\t            factorial *= i;\n\t\t        }\n\t\t\t return factorial;\n\t\t}\n\t\t\npublic static void factSieve(int[] a, int n) {\n\t\t\t\n\t\t\t\n\t\t\tfor(int i=2; i<=n; i+=2)\n\t\t\t\ta[i] = 2;\n\t\t\t\n\t\t\t\n\t\t\tfor(int i=3; i<=n; i+=2)\n\t\t\t{\n\t\t\t\tif(a[i]==0)\n\t\t\t\t{\n\t\t\t\t\ta[i] = i;\n\t\t\t\t\t\n\t\t\t\t\tfor(int j=i; j*i<=n; j++)\n\t\t\t\t\t{\n\t\t\t\t\t\ta[i*j] = i;\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tint k = 1000;\n\t\t\twhile(k!=1)\n\t\t\t{\n\t\t\t\tSystem.out.print(a[k]+\" \");\n\t\t\t\tk /= a[k];\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t\n\t\t\n\t\tpublic static int lowerLimit(int[] a, int n) {\n\t\t\tint ans = 0;\n\t\t\t\n\t\t\tint ll = 0;\n\t\t\tint rl = a.length-1;\n\t\t//\tSystem.out.println(a[rl]+\" \"+n);\n\t\t\tif(a[0]>n)\n\t\t\t\treturn 0;\n\t\t\tif(a[0]==n)\n\t\t\t\treturn 1;\n\t\t\telse if(a[rl]<=n)\n\t\t\t\treturn rl+1;\n\t\t\n\t\t\twhile(ll<=rl)\n\t\t\t{\n\t\t\t\t\n\t\t\t\tint mid = (ll+rl)/2;\n\t\t\t\tif(a[mid]==n)\n\t\t\t\t{\n\t\t\t\t\tans = mid + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\telse if(a[mid]>n)\n\t\t\t\t{\n\t\t\t\t\trl = mid-1;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tans = mid+1;\n\t\t\t\t\tll = mid+1;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\treturn ans; \n\t\t}\n\t\t\n\t\t\n\t\tpublic static long choose(long total, long choose){\n\t\t    if(total < choose)\n\t\t        return 0;\n\t\t    if(choose == 0 || choose == total)\n\t\t        return 1;\n\t\t    return (choose(total-1,choose-1)+choose(total-1,choose))%mod;\n\t\t}\n\t\t\n\t\tpublic static int[] suffle(int[] a,Random gen)\n\t\t{\n\t\t\tint n = a.length;\n\t\t\tfor(int i=0;i<n;i++)\n\t\t\t{\n\t\t\t\tint ind = gen.nextInt(n-i)+i;\n\t\t\t\tint temp = a[ind];\n\t\t\t\ta[ind] = a[i];\n\t\t\t\ta[i] = temp;\n\t\t\t}\n\t\t\treturn a;\n\t\t}\n\t\t\n\t\tpublic static long[] sort(long[] a)\n\t\t{\n\t\t\tRandom gen = new Random();\n\t\t\tint n = a.length;\n\t\t\tfor(int i=0;i<n;i++)\n\t\t\t{\n\t\t\t\tint ind = gen.nextInt(n-i)+i;\n\t\t\t\tlong temp = a[ind];\n\t\t\t\ta[ind] = a[i];\n\t\t\t\ta[i] = temp;\n\t\t\t}\n\t\t\t\n\t\t\tArrays.sort(a);\n\t\t\treturn a;\n\t\t}\n\t\t\n\t\tpublic static pair[] sort(pair[] a)\n\t\t{\n\t\t\tRandom gen = new Random();\n\t\t\tint n = a.length;\n\t\t\tfor(int i=0;i<n;i++)\n\t\t\t{\n\t\t\t\tint ind = gen.nextInt(n-i)+i;\n\t\t\t\tpair temp = a[ind];\n\t\t\t\ta[ind] = a[i];\n\t\t\t\ta[i] = temp;\n\t\t\t}\n\t\t\t\n\t\t\tArrays.sort(a);\n\t\t\treturn a;\n\t\t}\n\t\t\n\t\t\n\t\tpublic static int[] sort(int[] a)\n\t\t{\n\t\t\tRandom gen = new Random();\n\t\t\tint n = a.length;\n\t\t\tfor(int i=0;i<n;i++)\n\t\t\t{\n\t\t\t\tint ind = gen.nextInt(n-i)+i;\n\t\t\t\tint temp = a[ind];\n\t\t\t\ta[ind] = a[i];\n\t\t\t\ta[i] = temp;\n\t\t\t}\n\t\t\t\n\t\t\tArrays.sort(a);\n\t\t\treturn a;\n\t\t}\n\t\t\n\t\tpublic static int floorSearch(int arr[], int low, int high, int x)\n\t\t{\n\t\t    if (low > high)\n\t\t        return -1;\n\t\t \n\t\t    if (x > arr[high])\n\t\t        return high;\n\t\t    int mid = (low+high)/2;\n\t\t \n\t\t \n\t\t    if (mid > 0 && arr[mid-1] < x && x < arr[mid])\n\t\t        return mid-1;\n\t\t \n\t\t    if (x < arr[mid])\n\t\t        return floorSearch(arr, low, mid-1, x);\n\t\t \n\t\t    return floorSearch(arr, mid+1, high, x);\n\t\t}\n\t\t\n\t\t\n\t\tpublic static void swap(int a, int b){\n\t\t\tint temp = a;\n\t\t\ta = b;\n\t\t\tb = temp;\n\t\t}\n\t\tpublic static ArrayList<Integer> primeFactorization(int n)\n\t\t{\n\t\t\tArrayList<Integer> a =new ArrayList<Integer>();\n\t\t\tfor(int i=2;i*i<=n;i++)\n\t\t\t{\n\t\t\t\twhile(n%i==0)\n\t\t\t\t{\n\t\t\t\t\ta.add(i);\n\t\t\t\t\tn/=i;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(n!=1)\n\t\t\t\ta.add(n);\n\t\t\treturn a;\n\t\t}\n\t\t\n\t\t\n\t\tpublic static void sieve(boolean[] isPrime,int n)\n\t\t{\n\t\t\tfor(int i=1;i<n;i++)\n\t\t\t\tisPrime[i] = true;\n\t\t\t\n\t\t\tisPrime[0] = false;\n\t\t\tisPrime[1] = false;\n\t\t\t\n\t\t\tfor(int i=2;i*i<n;i++)\n\t\t\t{\n\t\t\t\tif(isPrime[i] == true)\n\t\t\t\t{\n\t\t\t\t\tfor(int j=(2*i);j<n;j+=i)\n\t\t\t\t\t\tisPrime[j] = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tpublic static int lowerbound(ArrayList<Long> net, long c2) {\n\t\t\tint i=Collections.binarySearch(net, c2);\n\t\t\tif(i<0)\n\t\t\t\ti = -(i+2);\n\t\t\treturn i;\n\t\t\t\n\t\t\t\n\t\t}\n\t\t\n\t\tpublic static int lowerboundArray(long[] psum, long c2) {\n\t\t\tint i=Arrays.binarySearch(psum, c2);\n\t\t\tif(i<0)\n\t\t\t\ti = -(i+2);\n\t\t\treturn i;\n\t\t\t\n\t\t\t\n\t\t}\n\t\t\n\t\tpublic static int lowerboundArray(int[] psum, int c2) {\n\t\t\tint i=Arrays.binarySearch(psum, c2);\n\t\t\tif(i<0)\n\t\t\t\ti = -(i+2);\n\t\t\treturn i;\n\t\t\t\n\t\t\t\n\t\t}\n\t\t\n\t\t\n\t\tpublic static int uperboundArray(long[] psum, long c2) {\n\t\t\tint i=Arrays.binarySearch(psum, c2);\n\t\t\tif(i<0)\n\t\t\t\ti = -(i+1);\n\t\t\treturn i;\n\t\t\t\n\t\t\t\n\t\t}\n\t\t\n\t\t\n\t\tpublic static int uperbound(ArrayList<Long> net, long c2) {\n\t\t\tint i=Collections.binarySearch(net, c2);\n\t\t\tif(i<0)\n\t\t\t\ti = -(i+1);\n\t\t\treturn i;\n\t\t\t\n\t\t\t\n\t\t}\n\t\t\n\t\t\n\t\tpublic static int GCD(int a,int b)\n\t\t{\n\t\t\tif(b==0)\n\t\t\t\treturn a;\n\t\t\telse\n\t\t\t\treturn GCD(b,a%b);\n\t\t}\n\t\t\n\t\tpublic static long GCD(long a,long b)\n\t\t{\n\t\t\tif(b==0)\n\t\t\t\treturn a;\n\t\t\telse\n\t\t\t\treturn GCD(b,a%b);\n\t\t}\n\t\t\n\t\tpublic static void extendedEuclid(int A,int B)\n\t\t{\n\t\t\tif(B==0)\n\t\t\t{\n\t\t\t\td = A;\n\t\t\t\tp = 1 ;\n\t\t\t\tq = 0;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\textendedEuclid(B, A%B);\n\t\t\t\tint temp = p;\n\t\t\t\tp = q;\n\t\t\t\tq = temp - (A/B)*q;\n\t\t\t}\n\t\t}\n\t\t\n\t\tpublic static long LCM(long a,long b)\n\t\t{\n\t\t\treturn (a*b)/GCD(a,b);\n\t\t}\n\t\t\n\t\tpublic static int LCM(int a,int b)\n\t\t{\n\t\t\treturn (a*b)/GCD(a,b);\n\t\t}\n\t\t\n\t\tpublic static int binaryExponentiation(int x,int n)\n\t\t{\n\t\t    int result=1;\n\t\t    while(n>0)\n\t\t    {\n\t\t        if(n % 2 ==1)\n\t\t            result=result * x;\n\t\t        x=x*x;\n\t\t        n=n/2;\n\t\t    }\n\t\t    return result;\n\t\t}\n\t\t\n\t\t\n\t\tpublic static int[] countDer(int n)\n\t    {\n\t        int der[] = new int[n + 1];\n\t     \n\t        der[0] = 1;\n\t        der[1] = 0;\n\t        der[2] = 1;\n\t     \n\t        for (int i = 3; i <= n; ++i)\n\t            der[i] = (i - 1) * (der[i - 1] + der[i - 2]);\n\t     \n\t        // Return result for n\n\t        return der;\n\t    }\n\t\t\n\t\t\n\t\t static long binomialCoeff(int n, int k)\n\t\t    {\n\t\t    long C[][] = new long[n+1][k+1];\n\t\t    int i, j;\n\t\t     \n\t\t        // Calculate  value of Binomial Coefficient in bottom up manner\n\t\t    for (i = 0; i <= n; i++)\n\t\t    {\n\t\t        for (j = 0; j <= Math.min(i, k); j++)\n\t\t        {\n\t\t            // Base Cases\n\t\t            if (j == 0 || j == i)\n\t\t                C[i][j] = 1;\n\t\t      \n\t\t            // Calculate value using previosly stored values\n\t\t            else\n\t\t                C[i][j] = C[i-1][j-1] + C[i-1][j];\n\t\t          }\n\t\t     }\n\t\t      \n\t\t    return C[n][k];\n\t\t    }\n\t\t\n\t\tpublic static long binaryExponentiation(long x,long n)\n\t\t{\n\t\t    long result=1;\n\t\t    while(n>0)\n\t\t    {\n\t\t        if(n % 2 ==1)\n\t\t            result=result * x;\n\t\t        x=(x%mod * x%mod)%mod;\n\t\t        n=n/2;\n\t\t    }\n\t\t    return result;\n\t\t}\n\t\t\n\t\tpublic static int modularExponentiation(int x,int n,int M)\n\t\t{\n\t\t    int result=1;\n\t\t    while(n>0)\n\t\t    {\n\t\t        if(n % 2 ==1)\n\t\t            result=(result * x)%M;\n\t\t        x=(x%M*x%M)%M;\n\t\t        n=n/2;\n\t\t    }\n\t\t    return result;\n\t\t}\n\t\t\n\t\tpublic static long modularExponentiation(long x,long n,long M)\n\t\t{\n\t\t    long result=1;\n\t\t    while(n>0)\n\t\t    {\n\t\t        if(n % 2 ==1)\n\t\t            result=(result %M* x%M)%M;\n\t\t        x=(x*x)%M;\n\t\t        n=n/2;\n\t\t    }\n\t\t    return result;\n\t\t}\n\t\t\n\t\tpublic static int modInverse(int A,int M)\n\t\t{\n\t\t    return modularExponentiation(A,M-2,M);\n\t\t}\n\t\t\n\t\tpublic static long modInverse(long A,long M)\n\t\t{\n\t\t    return modularExponentiation(A,M-2,M);\n\t\t}\n\t\t\n\t\t\n\t\tpublic static boolean checkYear(int year)\n\t    {\n\t\t\tif (year % 400 == 0)\n\t            return true;\n\t     \n\t        if (year % 100 == 0)\n\t            return false;\n\t     \n\t        if (year % 4 == 0)\n\t            return true;\n\t        return false;\n\t    }\n\t\t\n\t\tpublic static boolean isPrime(int n)\n\t\t{\n\t\t    \n\t\t    if (n <= 1)  return false;\n\t\t    if (n <= 3)  return true;\n\t\t    \n\t\t    if (n%2 == 0 || n%3 == 0) \n\t\t    \treturn false;\n\t\t \n\t\t    for (int i=5; i*i<=n; i=i+6)\n\t\t    {\n\t\t        if (n%i == 0 || n%(i+2) == 0)\n\t\t           return false;\n\t\t    }\n\t\t    \n\t\t    return true;\n\t\t}\n\t\t\n\t\tstatic class pair implements Comparable<pair>\n \n\t\t{\n\t\t\tLong x;\n\t\t\tInteger y;\n\t\t\tpair(long a,int y)\n\t\t\t{\n\t\t\t\tthis.x=a;\n\t\t\t\tthis.y=y;\n\t\t\t}\n\t\t\t\n\t\t\tpublic int compareTo(pair o) {\n\t\t\t\tint result = x.compareTo(o.x);\n\t\t\t\tif(result==0)\n\t\t\t\t\tresult = y.compareTo(o.y);\n\t\t\t\t\n\t\t\t\treturn result;\n\t\t\t}  \n\t\t\t\n\t\t\tpublic String toString()\n\t\t\t{\n\t\t\t\treturn x+\" \"+y;\n\t\t\t}\n\t\t\t\n\t\t\tpublic boolean equals(Object o)\n\t\t\t{\n\t\t\t\tif (o instanceof pair)\n\t\t\t    {\n\t\t\t\t\tpair p = (pair)o;\n\t\t\t\t\treturn p.x == x && p.y == y ;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t\n\t\t\tpublic int hashCode()\n\t\t\t{\n\t\t\t\treturn new Long(x).hashCode()*31 + new Long(y).hashCode();\n\t\t\t}\n\t\t}\n\t\n\t\t\n\t\tstatic class triplet implements Comparable<triplet>\n\t\t{\n\t\t\tInteger x,y,z;\n\t\t\ttriplet(int x,int y,int z)\n\t\t\t{\n\t\t\t\tthis.x = x;\n\t\t\t\tthis.y = y;\n\t\t\t\tthis.z = z;\n\t\t\t}\n\t\t\t\n\t\t\tpublic  int compareTo(triplet o)\n\t\t\t{\n\t\t\t\tint result = x.compareTo(o.x);\n\t\t\t\tif(result==0)\n\t\t\t\t\tresult =  y.compareTo(o.y);\n\t\t\t\tif(result==0)\n\t\t\t\t\tresult = z.compareTo(o.z);\n \n\t\t\t\treturn result;\n\t\t\t}\n\t\t\t\n\t\t\tpublic boolean equlas(Object o)\n\t\t\t{\n\t\t\t\tif(o instanceof triplet)\n\t\t\t\t{\n\t\t\t\t\ttriplet p = (triplet)o;\n\t\t\t\t\treturn x==p.x && y==p.y && z==p.z;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t\n\t\t\tpublic String toString()\n\t\t\t{\n\t\t\t\treturn x+\" \"+y+\" \"+z;\n\t\t\t}\n\t\t\tpublic int hashCode()\n\t\t\t{\n\t\t\t\treturn new Long(x).hashCode()*31 + new Long(y).hashCode() + new Long(z).hashCode(); \n\t\t\t}\n\t\t}\n\t\t\n \n\t\t\n\t\t\n\t\t\n\t\n\t\t/*static class node implements Comparable<node>\n \n\t\t{\n\t\t\tInteger x, y, z;\n\t\t\tnode(int x,int y, int z)\n\t\t\t{\n\t\t\t\tthis.x=x;\n\t\t\t\tthis.y=y;\n\t\t\t\tthis.z=z;\n\t\t\t}\n\t\t\t\n\t\t\tpublic int compareTo(pair o) {\n\t\t\t\tint result = x.compareTo(o.x);\n\t\t\t\tif(result==0)\n\t\t\t\t\tresult = y.compareTo(o.y);\n\t\t\t\tif(result==0)\n\t\t\t\t\tresult = z.compareTo(z); \n\t\t\t\treturn result;\n\t\t\t}\n \n\t\t\t@Override\n\t\t\tpublic int compareTo(node o) {\n\t\t\t\t// TODO Auto-generated method stub\n\t\t\t\treturn 0;\n\t\t\t}  \n\t\t}\n\t\t*/\n\t}\n\t\n\t\t"
        },
        {
            "language": 3,
            "solution": "prev = {'XXXS':0,'XXS':0,'XS':0,'S':0,'M':0,'L':0,'XL':0,'XXL':0,'XXXL':0}\ncurr = {'XXXS':0,'XXS':0,'XS':0,'S':0,'M':0,'L':0,'XL':0,'XXL':0,'XXXL':0}\n\nn = int(input())\n\nfor i in range(n):\n\tval = input()\n\tprev[val]+=1\nfor i in range(n):\n\tval = input()\n\tcurr[val]+=1\n\ndiff = 0\n\nfor i in prev.keys():\n        diff+=abs(prev[i] - curr[i])\n\nprint(diff//2)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 101;\nint pen[N][N];\nint n;\nchar a[N][N], b[N][N];\nint cal(int x, int y) {\n  int n = strlen(b[x] + 1), m = strlen(a[y] + 1);\n  if (n != m) return 1000000007;\n  int res = 0;\n  for (int i = (1); i <= (n); i++) res += (b[x][i] != a[y][i]);\n  return res;\n}\nvoid solve(int testcase) {\n  cin >> n;\n  for (int i = (1); i <= (n); i++) cin >> b[i] + 1;\n  for (int i = (1); i <= (n); i++) cin >> a[i] + 1;\n  for (int i = (1); i <= (n); i++) {\n    for (int j = (1); j <= (n); j++) {\n      pen[i][j] = cal(i, j);\n    }\n  }\n  int ans = 0;\n  set<int> s;\n  for (int j = (1); j <= (n); j++) {\n    int mn = 1000000007, idx = -1;\n    for (int i = (1); i <= (n); i++) {\n      if (s.count(i)) continue;\n      if (pen[i][j] < mn) {\n        mn = pen[i][j];\n        idx = i;\n      }\n    }\n    ans += mn;\n    s.insert(idx);\n  }\n  int ans1 = 0;\n  set<int> s1;\n  for (int i = (1); i <= (n); i++) {\n    int mn = 1000000007, idx = -1;\n    for (int j = (1); j <= (n); j++) {\n      if (s1.count(j)) continue;\n      if (pen[i][j] < mn) {\n        mn = pen[i][j];\n        idx = j;\n      }\n    }\n    ans1 += mn;\n    s1.insert(idx);\n  }\n  cout << min(ans, ans1);\n}\nsigned main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  cout << setprecision(10);\n  clock_t b = clock();\n  int t = 1;\n  for (int tt = (1); tt <= (t); tt++) solve(tt);\n  clock_t e = clock();\n  cerr << (double(e - b) / CLOCKS_PER_SEC) << \" sec\";\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na,b = [],[]\nfor _ in range(n):\n    a.append(input())\nfor _ in range(n):\n    b.append(input())\nans = []\nfor i in b:\n    if i not in a:\n        ans.append(i)\n    else: a[a.index(i)]=''\nprint(len(ans))\n"
        },
        {
            "language": 3,
            "solution": "# your code goes here\n\ndef call(x,y):\n    #print(x)\n    #print(y)\n    n = len(x)\n    i = 0\n    while(i<len(x)):\n        j = 0\n        flag = 0\n        while(j<len(y)):\n            if (x[i] == y[j]):\n                x.pop(i)\n                y.pop(j)\n                flag = 1\n                break\n            else:\n                #i = i + 1\n                j = j + 1\n        if(flag == 0):\n            i = i+1\n        #print(x)\n        #print(y)\n        #print(\"-----------\")\n                \n#    print(len(x)) \n    \n    return(len(x))\n    \ndef main():\n    \n    n = input()\n    n = int(n)\n    d = dict()\n    d['S'] = 0\n    d['M'] = 1\n    d['L'] = 2\n    \n    d['XS'] = 3\n    d['XL'] = 4\n    \n    d['XXS'] = 5\n    d['XXL'] = 6\n    \n    d['XXXS'] = 7\n    d['XXXL'] = 8\n    \n\n    #print(a)\n    a = []\n    b = []\n    for i in range(0,n):\n        a.append(d[input()])\n    #print(a)    \n    for i in range(0,n):\n        b.append(d[input()])\n        \n    #print(b)    \n#    b = a\n    a.sort()\n    b.sort()\n    \n    #print(a)\n    \n    c1 = [i for i in a if 0<= i <3 ]\n    c2 = [i for i in b if 0<= i <3 ]\n    \n    d1 = [i for i in a if 3<= i <5 ]\n    d2 = [i for i in b if 3<= i <5 ]\n    \n    e1 = [i for i in a if 5<= i <7 ]\n    e2 = [i for i in b if 5<= i <7 ]\n    \n    f1 = [i for i in a if 7<= i <9 ]\n    f2 = [i for i in b if 7<= i <9 ]\n    \n    #print(c1)\n    #print(c2)\n    #print(zip(c1,c2))\n        #print(c3)\n    \n    #print(d1)\n    #print(d2)\n    \n    #print(e1)\n    #print(e2)\n    \n    #print(f1)\n    #print(f2)\n    \n    #print(len(c1)-len(c2))\n    #print(len(d1)-len(d2))\n    #print(len(e1)-len(e2))\n    #print(len(f1)-len(f2))\n    l1 = 0\n    #print(a)\n    #print(b)\n    if(len(c1) == len(c2) and len(d1) == len(d2) and len(e1) == len(e2) and len(f1) == len(f2)):\n        l1 = call(c1,c2) +  call(d1,d2) + call(e1,e2) + call(f1,f2)  \n        print(l1)\n    else:\n        print(0)    \n        #print(\"hello only \")\n    #print(c1)\n    #print(c2)\n    \n    \nmain()\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na, b = [], []\nfor i in range(n):\n    a += [ [input(), 0] ]\nfor i in range(n):\n    b += [ [input(), 0] ]\n\nl = len(a)\nfor i in range(l):\n    for j in range(l):\n        if a[i][0] == b[j][0] and a[i][1] == 0 and b[j][1] == 0:\n            a[i][1] = 1\n            b[j][1] = 1\n\nc = 0\nfor i in range(l):\n    if a[i][1] == 0:\n        c+=1\n\nprint(c)\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class Solver{\npublic static void main(String[] args) {\n  Scanner sc=new Scanner(System.in);\n  int n=sc.nextInt();\n  String a[]=new String[n];\n  String b[]=new String[n];\n  for(int i=0;i<n;i++){\n    a[i]=sc.next();\n  }\n\n  for(int i=0;i<n;i++){\n    b[i]=sc.next();\n  }\nint count=0;\n  for(int i=0;i<n;i++){\n    for(int j=0;j<n;j++){\n    if(a[i].equals(b[j])){\n      b[j]=\"000\";\n      count++;\n      break;\n    }\n  }\n  }\n  System.out.println(n-count);\n}\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <class T>\nvoid dbs(string str, T t) {\n  cerr << str << \" : \" << t << \"\\n\";\n}\ntemplate <class T, class... S>\nvoid dbs(string str, T t, S... s) {\n  int idx = str.find(',');\n  cerr << str.substr(0, idx) << \" : \" << t << \", \";\n  dbs(str.substr(idx + 1), s...);\n}\ntemplate <class S, class T>\nostream& operator<<(ostream& os, const pair<S, T>& p) {\n  return os << \"(\" << p.first << \", \" << p.second << \")\";\n}\ntemplate <class T>\nostream& operator<<(ostream& os, const vector<T>& p) {\n  os << \"[ \";\n  for (auto& it : p) os << it << \" \";\n  return os << \"]\";\n}\ntemplate <class T>\nostream& operator<<(ostream& os, const set<T>& p) {\n  os << \"[ \";\n  for (auto& it : p) os << it << \" \";\n  return os << \"]\";\n}\ntemplate <class S, class T>\nostream& operator<<(ostream& os, const map<S, T>& p) {\n  os << \"[ \";\n  for (auto& it : p) os << it << \" \";\n  return os << \"]\";\n}\ntemplate <class T>\nvoid prc(T a, T b) {\n  cerr << \"[\";\n  for (T i = a; i != b; ++i) {\n    if (i != a) cerr << \", \";\n    cerr << *i;\n  }\n  cerr << \"]\\n\";\n}\nvoid code() {\n  long long n;\n  cin >> n;\n  vector<long long> cnt(4);\n  long long a, b, c;\n  a = b = c = 0;\n  for (long long i = 0; i < (long long)(n); ++i) {\n    string s;\n    cin >> s;\n    if (s == \"M\") a++;\n    if (s == \"S\") b++;\n    if (s == \"L\")\n      c++;\n    else if (s == \"XS\")\n      cnt[1]++;\n    else if (s == \"XXS\")\n      cnt[2]++;\n    else if (s == \"XXXS\")\n      cnt[3]++;\n  }\n  for (long long i = 0; i < (long long)(n); ++i) {\n    string s;\n    cin >> s;\n    if (s == \"M\") a--;\n    if (s == \"S\") b--;\n    if (s == \"L\")\n      c--;\n    else if (s == \"XS\")\n      cnt[1]--;\n    else if (s == \"XXS\")\n      cnt[2]--;\n    else if (s == \"XXXS\")\n      cnt[3]--;\n  }\n  long long ans = 0;\n  ans += abs(a) + abs(b) + abs(c);\n  ans /= 2;\n  ans += abs(cnt[1]) + abs(cnt[2]) + abs(cnt[3]);\n  cout << ans;\n}\nint main() {\n  int t = 1;\n  for (auto i = (1); i != (t + 1); i++) {\n    code();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.beans.Visibility;\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.math.BigDecimal;\nimport java.math.RoundingMode;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Comparator;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Map.Entry;\nimport java.util.StringTokenizer;\n\npublic class Main implements Runnable{\n\t\t\n\t\t public static void main(String[] args) throws IOException {\n\t\t\tnew Thread(null , new Main(),\"Main\", 1<<26).start();\n\t\t\t\n\t\t }\n\t\t \n\t\t \n\t\tpublic void run(){\n\t\t\ttry {\n\t\t\tPrintWriter out = new PrintWriter(System.out);\n\t\t\tMyScanner sc = new MyScanner();\n\t\t\tsolve(out, sc);\n\t\t\tout.flush();\n\t\t\tout.close();\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\te.printStackTrace();\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\tvoid solve(PrintWriter out, MyScanner sc) throws IOException{\t\n\t\t\t\n\t\t\tint n = sc.nextInt();\n\t\t\t\n\t\t\tMap<String, Integer> a = new HashMap();\n\t\t\tString s;\n\t\t\tfor(int i = 0 ; i < n ; ++i) {\n\t\t\t\ts = sc.nextLine();\n\t\t\t\ta.put(s, a.getOrDefault(s, 0) + 1);\n\t\t\t}\n\t\t\t\n\t\t\tfor(int i = 0 ; i < n ; ++i) {\n\t\t\t\ts = sc.nextLine();\n\t\t\t\ta.put(s, a.getOrDefault(s, 0) - 1);\n\t\t\t}\n\t\t\t\n\t\t\tint c = 0;\n\t\t\tfor(int cc : a.values()) {\n\t\t\t\tif(cc > 0) c += cc;\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tout.print(c);\n\t\t\t\n\t\t\t\n\t\t}\n\t\n\n\t\t\n\t\t\t\n\t\t\n\t\n\n\n}\t\n\nclass MyScanner {\n    BufferedReader br;\n    StringTokenizer st;\n\n    public MyScanner() {\n       br = new BufferedReader(new InputStreamReader(System.in));\n    }\n\n    String next() {\n        while (st == null || !st.hasMoreElements()) {\n            try {\n                st = new StringTokenizer(br.readLine());\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n        return st.nextToken();\n    } \n\n    int nextInt() { return Integer.parseInt(next());}\n\n    long nextLong() {return Long.parseLong(next());}\n\n    double nextDouble() {return Double.parseDouble(next());}\n\n    String nextLine(){\n        String str = \"\";\n\t  try {\n\t     str = br.readLine();\n\t  } catch (IOException e) {\n\t     e.printStackTrace();\n\t  }\n\t  return str;\n    }\n    \n\n}\n\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e5 + 10, M = 1e5 + 3;\nconst double Pi = acos(-1.0);\nstring a[105];\nstring b[105];\nstruct node {\n  int v;\n  int x, y;\n} c[105 * 105];\nbool cmp(node n, node m) { return n.v < m.v; }\nint v1[105], v2[105];\nint main() {\n  ios::sync_with_stdio(false);\n  int n;\n  cin >> n;\n  for (int i = 1; i <= n; i++) cin >> a[i];\n  for (int i = 1; i <= n; i++) cin >> b[i];\n  int t = 0;\n  for (int i = 1; i <= n; i++) {\n    for (int j = 1; j <= n; j++) {\n      if (a[i].size() == b[j].size()) {\n        int num = 0;\n        for (int k = 0; k < (int)a[i].size(); k++) {\n          if (a[i][k] != b[j][k]) num++;\n        }\n        c[++t].v = num;\n        c[t].x = i;\n        c[t].y = j;\n      }\n    }\n  }\n  sort(c + 1, c + t + 1, cmp);\n  int ans = 0;\n  memset(v1, 0, sizeof(v1));\n  memset(v2, 0, sizeof(v2));\n  for (int i = 1; i <= t; i++) {\n    if (v1[c[i].x]) continue;\n    if (v2[c[i].y]) continue;\n    ans += c[i].v;\n    v1[c[i].x] = 1;\n    v2[c[i].y] = 1;\n  }\n  cout << ans << endl;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, k1, k2, k3, k4, k5, k6, k7, k8, k9;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  cin >> n;\n  for (int i = 1; i <= n; ++i) {\n    string s;\n    cin >> s;\n    if (s == \"S\") k1++;\n    if (s == \"XS\") k2++;\n    if (s == \"XXS\") k3++;\n    if (s == \"XXXS\") k4++;\n    if (s == \"L\") k5++;\n    if (s == \"XL\") k6++;\n    if (s == \"XXL\") k7++;\n    if (s == \"XXXL\") k8++;\n    if (s == \"M\") k9++;\n  }\n  for (int i = 1; i <= n; ++i) {\n    string s;\n    cin >> s;\n    if (s == \"S\") k1--;\n    if (s == \"XS\") k2--;\n    if (s == \"XXS\") k3--;\n    if (s == \"XXXS\") k4--;\n    if (s == \"L\") k5--;\n    if (s == \"XL\") k6--;\n    if (s == \"XXL\") k7--;\n    if (s == \"XXXL\") k8--;\n    if (s == \"M\") k9--;\n  }\n  int ans = 0, x;\n  ans = abs(k2) + abs(k3) + abs(k4);\n  if (k1 > 0) ans += k1;\n  if (k5 > 0) ans += k5;\n  if (k9 > 0) ans += k9;\n  cout << ans;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int TAM = 1e5 + 5;\nint n;\nvector<string> arr, fin;\nbool cmp(string a, string b) {\n  if (a.size() != b.size()) return a.size() < b.size();\n  return a < b;\n}\nint dif(string a, string b) {\n  int ret = 0;\n  for (int i = 0; i < a.size(); i++) {\n    if (a[i] != b[i]) ret++;\n  }\n  return ret;\n}\nmap<char, int> pos;\nint last(string s) { return pos[s[s.size() - 1]]; }\nint tms[5][4];\nint tmb[5][4];\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  pos['S'] = 0;\n  pos['M'] = 1;\n  pos['L'] = 2;\n  string x;\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> x;\n    tms[x.size()][last(x)]++;\n  }\n  for (int i = 0; i < n; i++) {\n    cin >> x;\n    tmb[x.size()][last(x)]++;\n  }\n  int ans = 0;\n  for (int i = 1; i < 5; i++) {\n    int cr = abs(tms[i][0] - tmb[i][0]) + abs(tms[i][1] - tmb[i][1]) +\n             abs(tms[i][2] - tmb[i][2]);\n    cr /= 2;\n    ans += cr;\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "#!/usr/bin/env python3\nfrom sys import stdin, stdout\n\ndef rint():\n    return map(int, stdin.readline().split())\n#lines = stdin.readlines()\n\n\nn = int(input())\n\npt = [[] for i in range(4)]\nfor i in range(n):\n    tmp = input()\n    pt[len(tmp)-1].append(tmp[-1])\n\nct = [[] for i in range(4)]\nfor i in range(n):\n    tmp = input()\n    ct[len(tmp)-1].append(tmp[-1])\n\ncnt = 0\nfor i in range(4):\n    pt[i].sort()\n    ct[i].sort()\n    if i == 0:\n        cnt += (abs(pt[i].count('M') - ct[i].count('M')) + abs(pt[i].count('S') - ct[i].count('S')) + abs(pt[i].count('L') - ct[i].count('L')))//2\n    else:\n        cnt += abs(pt[i].count('S') - ct[i].count('S'))\n\n\nprint(cnt)\n"
        },
        {
            "language": 3,
            "solution": "n = input()\nn = int(n)\nmp = {}\nfor i in range(n):\n    s = input()\n    if s in mp:\n        mp[s] += 1\n    else:\n        mp[s] = 1\nfor i in range(n):\n    s = input()\n    if s in mp:\n        mp[s] -= 1\n    else:\n        mp[s] = -1\n\nans = 0\nfor i in mp.values():\n    ans += abs(i)\nprint(ans // 2)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  long long n, x, y;\n  multiset<string> s;\n  cin >> n;\n  long long i;\n  string a;\n  long long ans = 0;\n  for (i = 0; i < n; i++) {\n    cin >> a;\n    s.insert(a);\n  }\n  for (i = 0; i < n; i++) {\n    cin >> a;\n    if (s.find(a) != s.end()) s.erase(s.find(a));\n  }\n  cout << s.size() << endl;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[]\nfor k in range(n):\n    t=input()\n    a.append(t)\nfor k in range(n):\n    t=input()\n    if t in a:\n        a.remove(t)\nprint(len(a))"
        },
        {
            "language": 1,
            "solution": "x=int(raw_input())\nl = []\nw = []\nans=0\nfor i in range(x):\n  l.append(raw_input())\nfor i in range(x):\n  w.append(raw_input())\nfor i in range(x-1,-1,-1):\n  if l[i] in w:\n    w.pop(w.index(l[i]))\n    l.pop(l.index(l[i]))\nprint len(w)\n\n  "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, i, j, count, ans = 0;\n  cin >> n;\n  string s1[n], s2[n];\n  for (i = 0; i < n; i++) cin >> s1[i];\n  for (i = 0; i < n; i++) cin >> s2[i];\n  sort(s1, s1 + n);\n  sort(s2, s2 + n);\n  for (i = 0; i < n; i++) {\n    count = 0;\n    int k = 0;\n    for (j = 0; j < n; j++)\n      if (s1[i] != s2[j])\n        count++;\n      else if (k == 0) {\n        s2[j] = '0';\n        k++;\n      }\n    if (count == n) {\n      ans++;\n    }\n  }\n  cout << ans;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstring tab1[105], tab2[105];\nbool odw1[105], odw2[105];\nint n, res;\nbool done;\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin >> n;\n  for (int i = 0; i < n; i++) cin >> tab1[i];\n  for (int i = 0; i < n; i++) cin >> tab2[i];\n  for (int i = 0; i < n; i++) {\n    for (int j = 0; j < n; j++) {\n      if (!odw1[j] && tab1[j].compare(tab2[i]) == 0) {\n        odw1[j] = true;\n        odw2[i] = true;\n        break;\n      }\n    }\n  }\n  for (int i = 0; i < n; i++) {\n    if (odw2[i]) continue;\n    for (int j = 0; j < n; j++) {\n      if (!odw1[j] && tab1[j].size() == tab2[i].size()) {\n        odw1[j] = true;\n        odw2[i] = true;\n        res++;\n        break;\n      }\n    }\n  }\n  cout << res << \"\\n\";\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\narr1=[]\narr2=[]\nc=0\nfor i in range(n):\n\tarr1.append(input())\nfor i in range(n):\n\tarr2.append(input())\nfor i in range(n):\n\tfor j in range(n):\n\t\tif(arr1[i]!=-1 and arr2[j]!=-1 and arr1[i]==arr2[j]):\n\t\t\tarr1[i]=-1\n\t\t\tarr2[j]=-1\nfor i in range(n):\n\tif(arr1[i]!=-1):\n\t\tc+=1\nprint(c)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[input()for _ in range(n)]\nk=0\nfor _ in range(n):\n    try:a.remove(input())\n    except:k+=1\nprint(k)\nz = 9\n\t\t\t  \t \t\t    \t\t  \t\t\t \t  \t\t \t\t\t\t"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nmap<long long int, long long int> v;\nmap<string, long long int> u;\nint main() {\n  long long int n, m, i, j, k, p, q, o, l, s, t;\n  string a;\n  cin >> n;\n  for (i = 0; i < n; i++) {\n    cin >> a;\n    u[a]++;\n    v[a.size()]++;\n  }\n  for (i = 0, k = 0; i < n; i++) {\n    cin >> a;\n    if (u[a] > 0) {\n      u[a]--;\n      v[a.size()]--;\n    } else {\n      if (v[a.size()] > 0) {\n        k++;\n      }\n    }\n  }\n  cout << k << endl;\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "n = input()\n\nold = []\nnew = []\n\nall_types = {'M', 'S', 'L', 'XS', 'XL', 'XXS', 'XXL', 'XXXS', 'XXXL'}\n\n\ndef to_map(tees):\n    mp = {t: 0 for t in all_types}\n    for t in tees:\n        mp[t] += 1\n    return mp\n\n\nfor i in range(n):\n    old.append(raw_input())\n\nfor i in range(n):\n    new.append(raw_input())\n\nold_map = to_map(old)\n\nnew_map = to_map(new)\n\ncost = 0\n\nfor tee in new_map:\n    common = min(old_map[tee], new_map[tee])\n    old_map[tee] -= common\n    new_map[tee] -= common\n    cost += new_map[tee]\n\nprint(cost)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nconst int inf = 0x3f3f3f3f;\nusing namespace std;\nchar a[105][10], b[105][10];\nint bookb[105], booka[105];\nint n;\nint ans;\nint main() {\n  while (~scanf(\"%d\", &n)) {\n    getchar();\n    ans = 0;\n    memset(booka, 0, sizeof(booka));\n    memset(bookb, 0, sizeof(bookb));\n    for (int i = 0; i < n; i++) {\n      scanf(\"%s\", a[i]);\n    }\n    for (int i = 0; i < n; i++) {\n      scanf(\"%s\", b[i]);\n    }\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < n; j++) {\n        if (strcmp(a[i], b[j]) == 0 && !bookb[j] && !booka[i]) {\n          booka[i] = 1;\n          bookb[j] = 1;\n        }\n      }\n    }\n    for (int i = 0; i < n; i++) {\n      if (!bookb[i]) ans++;\n    }\n    printf(\"%d\\n\", ans);\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nmap<string, int> cnt[2];\nint main() {\n  int n;\n  cin >> n;\n  for (int lnum = 0; lnum < 2; ++lnum)\n    for (int i = 0; i < n; ++i) {\n      string cur;\n      cin >> cur;\n      cnt[lnum][cur]++;\n    }\n  int ans = 0;\n  for (pair<string, int> cp : cnt[0])\n    ans += max(0, cp.second - cnt[1][cp.first]);\n  cout << ans;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "\nn=int(input())\nl=[]\nll=[]\nfor i in range(n):\n        nn = input()\n        l.append(nn)\nfor i in range(n):\n        nn = input()\n        ll.append(nn)\nl.sort()\nll.sort()\nc=0\nfor i in range(n):\n    if l[i] in ll:\n        ll.remove(l[i])\n    else:\n        c+=1\n        \n\nprint(c)\n        \n"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.*;\n\npublic class DomParserDemo{\n\n    public static void main(String[] args) {\n\n        Scanner s = new Scanner(System.in);\n        int N  = s.nextInt();\n        LinkedList<String> arr = new LinkedList<>();\n        for (int i = 0; i < N; i++) {\n            arr.add(s.next());\n        }\n        int res = 0;\n        for (int i = 0; i < N; i++) {\n            String str = s.next();\n            int ind = arr.indexOf(str);\n            if (ind == -1) {\n               res++; \n            } else {\n            arr.remove(ind);\n            }\n        }\n        System.out.println(res);\n    }\n\n}"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class A1000CodeHorses {\n\n    public static class Shirt implements Comparable<Shirt> {\n        public String s;\n\n        public Shirt(String s) {\n            this.s = s;\n        }\n\n        public int compareTo(Shirt sh) {\n            if (s.length() == sh.s.length()) {\n                return s.compareTo(sh.s);\n            } else {\n                return s.length() - sh.s.length();\n            }\n        }\n    }\n\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n\n        int n = in.nextInt();\n        in.nextLine();\n\n        ArrayList<String> init = new ArrayList<>();\n        ArrayList<String> goal = new ArrayList<>();\n        HashSet<String> hs = new HashSet<>();\n        for (int i = 0; i < n; i++) {\n            String s = in.nextLine();\n            init.add(s);\n        }\n        for (int i = 0; i < n; i++) {\n            String s = in.nextLine();\n            goal.add(s);\n        }\n\n        for (int i = 0; i < n; i++) {\n            if (goal.contains(init.get(i))) {\n                goal.remove(init.get(i));\n                init.remove(i);\n                n--;\n                i--;\n            }\n        }\n        ArrayList<Shirt> init2 = new ArrayList<>();\n        ArrayList<Shirt> goal2 = new ArrayList<>();\n        for (String s : init) {\n            init2.add(new Shirt(s));\n        }\n        for (String s : goal) {\n            goal2.add(new Shirt(s));\n        }\n        Collections.sort(init2);\n        Collections.sort(goal2);\n        int answer = 0;\n        for (int i = 0; i < init2.size(); i++) {\n            int counter = 0;\n            if (init2.get(i).s.length() != goal2.get(i).s.length()) {\n                System.out.println(\"ERROR\");\n                break;\n            }\n            for (int j = 0; j < init2.get(i).s.length(); j++) {\n                if (init2.get(i).s.charAt(j) != goal2.get(i).s.charAt(j)) {\n                    counter++;\n                }\n            }\n            answer += counter;\n        }\n        System.out.println(answer);\n    }\n\n\n}\n"
        },
        {
            "language": 3,
            "solution": "N = int(input())\na = [input().strip() for i in range(N)]\nc = [input().strip() for i in range(N)]\na= sorted(a)\nc = sorted(c)\nans = 0\nsabu = (abs(a.count(\"L\") - c.count(\"L\")) + abs(a.count(\"S\") - c.count(\"S\")) + abs(a.count(\"M\") - c.count(\"M\")))/2\nans += int(sabu)\ntann = a.count(\"L\") + a.count(\"M\") + a.count(\"S\")\nfor i in range(tann,N):\n    if a[i] != c[i]:\n        ans += 1\nprint(ans)"
        },
        {
            "language": 3,
            "solution": "from collections import*\nn=int(input())\nI=lambda:Counter(input()for _ in[0]*n)\na,b=I(),I()\nr=0\nfor i in range(4):\n for c in 'SML':\n  s='X'*i+c;r+=max(0,a[s]-b[s])\nprint(r)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nbool cmp(string a, string b) { return a.compare(b) > 0; }\nstring s[110], c[110];\nint main() {\n  int n, i, j, k, num = 0;\n  cin >> n;\n  for (i = 0; i < n; i++) {\n    cin >> s[i];\n  }\n  for (i = 0; i < n; i++) {\n    cin >> c[i];\n  }\n  sort(s, s + n, cmp);\n  sort(c, c + n, cmp);\n  for (i = 0; i < n; i++) {\n    for (j = 0; j < n; j++) {\n      if (s[i].compare(\"-\") != 0 && c[j].compare(\"-\") != 0 &&\n          s[i].compare(c[j]) == 0) {\n        s[i] = \"-\";\n        c[j] = \"-\";\n        num++;\n        break;\n      }\n    }\n  }\n  cout << n - num << endl;\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Codehorses_TShirts {\n\n\tpublic static void main(String[] args) {\n\t\tScanner in = new Scanner(System.in);\n\t\tint x = Integer.parseInt(in.nextLine());\n\t\tString arr[] = new String[x];\n\t\tString arr2[] = new String[x];\n\t\tfor(int i = 0; i < x*2; i++) {\n\t\t\tif(i >= x) {\n\t\t\t\tarr2[i-x] = in.nextLine();\n\t\t\t}else {\n\t\t\t\tarr[i] = in.nextLine();\n\t\t\t}\n\t\t}\n\t\tArrayList<String> al = new ArrayList<String>(Arrays.asList(arr));\n\t\tfor(int i = 0; i < arr.length; i++) {\n\t\t\tfor(int j = 0; j < arr.length; j++) {\n\t\t\t\tif(arr[i].equals(arr2[j])) {\n\t\t\t\t\tarr2[j] = \"\";\n\t\t\t\t\tal.remove(arr[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t//System.out.println(al);\n\t\tSystem.out.println(al.size());\n\n\t}\n\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\n\nfirst=[]\nsecond=[]\n\nfor i in range(n):\n    first.append(input())\nfor i in range(n):\n    second.append(input())\n    \ncount=0\n\nfor i in range(n):\n    if first[i] in second:\n        count+=1\n        second.remove(first[i])\nprint(n-count)"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class ProbA {\n\n\tpublic static void main(String[] args) {\n\t\tScanner in = new Scanner(System.in);\n\t\tint numShirts = in.nextInt();\n\t\tArrayList<String> shirtSizes1 = new ArrayList<String>();\n\t\tArrayList<String> shirtSizes2 = new ArrayList<String>();\n\t\tfor(int i = 0;  i < numShirts; i ++){\n\t\t\tshirtSizes1.add(in.next());\n\t\t}\n\t\tfor(int i = 0;  i < numShirts; i ++){\n\t\t\tshirtSizes2.add(in.next());\n\t\t}\n\t\t\n\t\tfor(String size:shirtSizes2){\n\t\t\tif(shirtSizes1.contains(size)){\n\t\t\t\tshirtSizes1.remove(size);\n\t\t\t}\n\t\t}\n\t\t\n\t\tSystem.out.println(shirtSizes1.size());\n\t}\n\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[5][4];\nint b[5][4];\nint main() {\n  int n, ans = 0;\n  cin >> n;\n  char s[10];\n  for (int i = 0; i < n; ++i) {\n    cin >> s;\n    for (int i = 0, j = strlen(s); i < j; ++i) {\n      if (s[i] == 'M')\n        a[j][0] += 1;\n      else if (s[i] == 'X')\n        a[j][1] += 1;\n      else if (s[i] == 'S')\n        a[j][2] += 1;\n      else if (s[i] == 'L')\n        a[j][3] += 1;\n    }\n  }\n  for (int i = 0; i < n; ++i) {\n    cin >> s;\n    for (int i = 0, j = strlen(s); i < j; ++i) {\n      if (s[i] == 'M')\n        b[j][0] += 1;\n      else if (s[i] == 'X')\n        b[j][1] += 1;\n      else if (s[i] == 'S')\n        b[j][2] += 1;\n      else if (s[i] == 'L')\n        b[j][3] += 1;\n    }\n  }\n  for (int i = 1; i < 5; ++i) {\n    for (int j = 0; j < 4; ++j) {\n      ans += abs(a[i][j] - b[i][j]);\n    }\n  }\n  ans /= 2;\n  cout << ans << endl;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\nimport java.io.IOException;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.InputStream;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.LinkedHashMap;\nimport java.util.Map;\n\n/**\n * Built using CHelper plug-in Actual solution is at the top\n */\npublic class Practice {\n\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskA solver = new TaskA();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class TaskA {\n\n        public void solve(int testNumber, InputReader in, PrintWriter out) {\n            int n = in.nextInt();\n            String[] arr1 = new String[n];\n            String[] arr2 = new String[n];\n            for (int i = 0; i < n; i++) {\n                arr1[i] = in.next();\n            }\n            for (int i = 0; i < n; i++) {\n                arr2[i] = in.next();\n            }\n            int ans = 0;\n            boolean arr[]=new boolean[n];\n            boolean found=false;\n            for (int i = 0; i < arr1.length; i++) {\n                for(int j=0;j<arr1.length;j++){\n                    found=false;\n                    if(arr1[i].equals(arr2[j]) && !arr[j]){\n                        found=true;\n                        arr[j]=true;\n                        break;\n                    }\n                }\n                if(!found){\n                    ans++;\n                }\n            }\n            out.println(ans);\n        }\n    }\n\n    public static boolean checkPrime(int n, int p) {\n        for (int i = 2; i <= Math.sqrt(n) && i <= p; i++) {\n            if (n % i == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    public static void mergeArrays(int[] arr1, int[] arr2, int n1,\n            int n2, int[] arr3) {\n        int i = 0, j = 0, k = 0;\n        while (i < n1 && j < n2) {\n            if (arr1[i] < arr2[j]) {\n                arr3[k++] = arr1[i++];\n            } else {\n                arr3[k++] = arr2[j++];\n            }\n        }\n        while (i < n1) {\n            arr3[k++] = arr1[i++];\n        }\n        while (j < n2) {\n            arr3[k++] = arr2[j++];\n        }\n    }\n\n    public long GCD(long a, long b) {\n        if (b == 0) {\n            return a;\n        }\n        return GCD(b, a % b);\n    }\n\n    public static long nCr(int n, int r) {\n        return n * (n - 1) / 2;\n    }\n\n    static class InputReader {\n\n        public BufferedReader reader;\n        public StringTokenizer tokenizer;\n\n        public InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\n            tokenizer = null;\n        }\n\n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        public double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n    }\n\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nd = {}\nb = []\nfor i in range(n):\n    a = input()\n    if a not in d:\n        d[a] = 0\n    d[a] += 1\nfor i in range(n):\n    b.append(input())\nl = d.keys()\nc = 0\nfor i in l:\n    k = b.count(i)\n    if d[i] > k:\n        c += d[i]-k\nprint(c)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nprevious = []\nfor i in range(n):\n    previous.append(input())\ncurrent = []\nfor i in range(n):\n    current.append(input())\n    if (previous.count(current[-1]) > 0):\n        del previous[previous.index(current[-1])]\n        del current[-1]\nprevious.sort()\ncurrent.sort()\nans = 0\nfor i in range(len(previous)):\n    for j in range(len(previous[i])):\n        if (previous[i][j] != current[i][j]):\n            ans += 1\nprint(ans)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\n\na = list()\nb = list()\nfor i in range(n):\n    a.append(input())\nwhile True:\n    try:\n        b.append(input())\n    except:\n        break\nres = 0\nfor elem in a:\n    if elem not in b:\n        res += 1\n    else:\n        del (b[b.index(elem)])   \nprint(res)"
        },
        {
            "language": 1,
            "solution": "n=int(raw_input())\nsizes=[\"M\"]+[\"X\"*k+\"S\" for k in range(4)]+[\"X\"*k+\"L\" for k in range(4)]\nd=dict(zip(sizes,[[0,0] for i in range(len(sizes))]))\nfor i in range(n):\n    d[raw_input()][0]+=1\nfor i in range(n):\n    d[raw_input()][1]+=1\n\nprint n-sum([min(k) for k in d.values()])\n    "
        },
        {
            "language": 3,
            "solution": "from math import ceil, log\nt = 1\nfor test in range(t):\n    n = int(input())\n    arr = []\n    arr2 = []\n    for i in range(n):\n        arr.append(input())\n    for i in range(n):\n        arr2.append(input())\n    ans = n\n    counter = 0\n    for i in arr2:\n        counter = 0\n        for j in arr:\n            if i==j:\n                ans-=1\n                arr.pop(counter)\n                break\n            counter+=1\n    print(ans)\n\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nA = []\nB = []\nans = 0\nfor i in range(n):\n\tA.append(input())\nfor i in range(n):\n\tst = input()\n\tif st in A:\n\t\tA.remove(st)\n\telse:\n\t\tans += 1\nprint(ans)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nlst1=[]\nfor i in range(n):\n    lst1.append(input())\nlst2=[]\nfor i in range(n):\n    lst2.append(input())\nlst1.sort()\nlst2.sort()\nfor i in range(n):\n    if lst1[i] in lst2:\n        lst2.remove(lst1[i])\nprint(len(lst2))"
        },
        {
            "language": 4,
            "solution": "import javax.xml.bind.SchemaOutputResolver;\nimport java.util.Scanner;\nimport java.lang.Math;\n\npublic class CodeHorses {\n    public static void main(String[] args) {\n        Scanner scn = new Scanner(System.in);\n        int[] lastYear = new int[6];\n        int[] currentYear = new int[6];\n        int n = scn.nextInt();\n        String tSize;\n        for (int i =0 ; i < n; i++){\n            tSize = scn.next();\n            switch(tSize) {\n                case \"M\":\n                    lastYear[0] +=1;\n                    break;\n                case \"L\":\n                    lastYear[1] +=1;\n                    break;\n                case \"S\":\n                    lastYear[2] +=1;\n                    break;\n                case \"XS\":\n                    lastYear[3] +=1;\n                    break;\n                case \"XXS\":\n                    lastYear[4] +=1;\n                    break;\n                case \"XXXS\":\n                    lastYear[5] +=1;\n                    break;\n                default:\n                    // code block\n            }\n\n        }\n        for (int i =0 ; i<n; i++){\n            tSize = scn.next();\n            switch(tSize) {\n                case \"M\":\n                    currentYear[0] +=1;\n                    break;\n                case \"L\":\n                    currentYear[1] +=1;\n                    break;\n                case \"S\":\n                    currentYear[2] +=1;\n                    break;\n                case \"XS\":\n                    currentYear[3] +=1;\n                    break;\n                case \"XXS\":\n                    currentYear[4] +=1;\n                    break;\n                case \"XXXS\":\n                    currentYear[5] +=1;\n                    break;\n                default:\n                    // code block\n            }\n\n        }\n        int asnwer = ((Math.abs(lastYear[0]-currentYear[0]))+\n                (Math.abs(lastYear[1]-currentYear[1]))+(Math.abs(lastYear[2]-currentYear[2])))/2\n                +Math.abs(lastYear[3]- currentYear[3])\n                +Math.abs(lastYear[4]-currentYear[4])\n                +Math.abs(lastYear[5]-currentYear[5]);\n\n\n        System.out.println(asnwer);\n\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nres = 0\nx1,m1,l1,s1 = [0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0]\nx2,m2,l2,s2 = [0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0]\nfor i in range(n):\n    inpt = input()\n    index = len(inpt)-1\n    x1[index]+= inpt.count(\"X\")\n    m1[index]+= inpt.count(\"M\")\n    l1[index]+= inpt.count(\"L\")\n    s1[index]+= inpt.count(\"S\")\nfor i in range(n):\n    inpt = input()\n    index = len(inpt)-1\n    x2[index]+= inpt.count(\"X\")\n    m2[index]+= inpt.count(\"M\")\n    l2[index]+= inpt.count(\"L\")\n    s2[index]+= inpt.count(\"S\")\n\nfor i in range(4):\n    res += abs(x1[i]-x2[i])\n    res += abs(m1[i]-m2[i])\n    res += abs(l1[i]-l2[i])\n    res += abs(s1[i]-s2[i])\n#print(x1,x2,m1,m2,l1,l2)\nprint(res//2)\n"
        },
        {
            "language": 3,
            "solution": "from math import sqrt\nfor _ in range(1):\n    n=int(input())\n    a=[]\n    b=[]\n    for i in range(n):\n        a.append(input())\n    for i in range(n):\n        b.append(input())    \n    diff=[]\n    for i in b:\n        if i not in a:\n            diff.append(b)\n        else:\n            a.remove(i)\n    if(len(diff)==0):\n        print(0)\n    \n    else:\n        print(len(a))"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class Codehorses {\n public static void main(String[]args){\n   Scanner input = new Scanner(System.in);\n   int n = input.nextInt();\n   String dummy = input.nextLine();\n   String s;\n   String[] s1 = new String[n];\n   String[] s2 = new String[n];\n   for(int i = 0;i < n;i++){\n     s1[i] = input.nextLine();\n \n   }\n   for(int i = 0;i < n;i++){\n     s2[i] = input.nextLine();\n   }\n   \n   int sec = 0;\n   for(int i = 0;i < n;i++){\n   boolean con = false;\n     String t1 = s2[i];\n     for(int j = 0;j < n;j++){\n       if(t1.equals(s1[j])){\n         s1[j] = \"\";\n         con = true;\n         break;\n       }\n     }\n     if(!con){\n       sec++;\n     }\n   }\n   System.out.println(sec);\n }\n\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.lang.*;\nimport java.io.*;\nimport java.math.BigDecimal;\n\npublic class ER46A {\n    public static void main (String[] args) throws java.lang.Exception {\n        InputReader in = new InputReader(System.in);\n        PrintWriter w = new PrintWriter(System.out);\n\n        int n = in.nextInt();\n        HashMap<String, Integer> hm1 = new HashMap<>(), hm2 = new HashMap<>();\n        for (int i = 0; i < n; i++) {\n            String s = in.next();\n            if (!hm1.containsKey(s))\n                hm1.put(s, 0);\n            hm1.put(s, hm1.get(s) + 1);\n        }\n        for (int i = 0; i < n; i++) {\n            String s = in.next();\n            if (!hm2.containsKey(s))\n                hm2.put(s, 0);\n            hm2.put(s, hm2.get(s) + 1);\n        }\n        int ans = 0;\n        for (String x : hm2.keySet()) {\n            if (hm1.containsKey(x))\n                hm2.put(x, hm2.get(x) - Math.min(hm2.get(x), hm1.get(x)));\n            ans += hm2.get(x);\n        }\n        w.println(ans);\n        w.close();\n    }\n\n    static class InputReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int read() {\n            if (numChars == -1)\n                throw new UnknownError();\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new UnknownError();\n                }\n                if (numChars <= 0)\n                    return -1;\n            }\n            return buf[curChar++];\n        }\n\n        public int peek() {\n            if (numChars == -1)\n                return -1;\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    return -1;\n                }\n                if (numChars <= 0)\n                    return -1;\n            }\n            return buf[curChar];\n        }\n\n        public void skip(int x) {\n            while (x-- > 0)\n                read();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        public String nextString() {\n            return next();\n        }\n\n        public String next() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            StringBuffer res = new StringBuffer();\n            do {\n                res.appendCodePoint(c);\n                c = read();\n            } while (!isSpaceChar(c));\n\n            return res.toString();\n        }\n\n        public String nextLine() {\n            StringBuffer buf = new StringBuffer();\n            int c = read();\n            while (c != '\\n' && c != -1) {\n                if (c != '\\r')\n                    buf.appendCodePoint(c);\n                c = read();\n            }\n            return buf.toString();\n        }\n\n        public double nextDouble() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            double res = 0;\n            while (!isSpaceChar(c) && c != '.') {\n                if (c == 'e' || c == 'E')\n                    return res * Math.pow(10, nextInt());\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            if (c == '.') {\n                c = read();\n                double m = 1;\n                while (!isSpaceChar(c)) {\n                    if (c == 'e' || c == 'E')\n                        return res * Math.pow(10, nextInt());\n                    if (c < '0' || c > '9')\n                        throw new InputMismatchException();\n                    m /= 10;\n                    res += (c - '0') * m;\n                    c = read();\n                }\n            }\n            return res * sgn;\n        }\n        public int[] nextIntArray(int n) {\n            int[] a = new int[n];\n            for (int i = 0; i < n; i++)\n                a[i] = nextInt();\n            return a;\n        }\n        public long[] nextLongArray(int n) {\n            long[] a = new long[n];\n            for (int i = 0; i < n; i++)\n                a[i] = nextLong();\n            return a;\n        }\n        public boolean hasNext() {\n            int value;\n            while (isSpaceChar(value = peek()) && value != -1)\n                read();\n            return value != -1;\n        }\n\n        private boolean isSpaceChar(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint dif(string s1, string s2) {\n  if (int(s1.length()) > int(s2.length())) {\n    string t = s2;\n    s2 = s1;\n    s1 = t;\n  }\n  int d = int(s2.length()) - int(s1.length());\n  for (int i = int(s2.length()) - 1, j = int(s1.length()) - 1; i >= 0;\n       i--, j--) {\n    if (s2[i] != s1[j]) d++;\n  }\n  return d;\n}\nint main() {\n  cin.tie(0);\n  cin.sync_with_stdio(0);\n  int n;\n  cin >> n;\n  string s1[n];\n  string s2[n];\n  multiset<string> se1;\n  multiset<string> se2;\n  bool v1[n];\n  bool v2[n];\n  for (int i = 0; i < n; i++) {\n    cin >> s1[i];\n    se1.insert(s1[i]);\n    v1[i] = true;\n    v2[i] = true;\n  }\n  for (int i = 0; i < n; i++) {\n    cin >> s2[i];\n    if (se1.find(s2[i]) == se1.end()) {\n      se2.insert(s2[i]);\n    } else {\n      se1.erase(se1.find(s2[i]));\n    }\n  }\n  int ans = 0;\n  for (auto i = se1.begin(); i != se1.end(); i++) {\n    int max = 100000;\n    auto idx = se2.end();\n    for (auto j = se2.begin(); j != se2.end(); j++) {\n      if (int(i->length()) != int(j->length())) {\n        continue;\n      }\n      int cost = dif(*i, *j);\n      if (cost < max) {\n        max = cost;\n        idx = j;\n      }\n    }\n    ans += max;\n    se2.erase(idx);\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long n, cnt = 0;\n  vector<string> a, b;\n  cin >> n;\n  for (long long i = 0; i < n; i++) {\n    string s;\n    cin >> s;\n    a.push_back(s);\n  }\n  for (long long i = 0; i < n; i++) {\n    string s;\n    cin >> s;\n    for (long long j = 0; j < a.size(); j++) {\n      if (s == a[j]) {\n        a.erase(a.begin() + j);\n        break;\n      }\n    }\n  }\n  cout << a.size();\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.StringTokenizer;\n\npublic class codehorses\n{\n\tpublic static void main(String args[])throws IOException\n\t{\n\t\tBufferedReader BR=new BufferedReader (new InputStreamReader(System.in));\n\t\tint n=Integer.parseInt(BR.readLine());\n\t\t//int[] arr= new int[2*n];\n\t\t\n\t\t/*String str=BR.readLine();\n\t\tStringTokenizer st=new StringTokenizer(str);*/\n\t\t\n\t\tArrayList<String> a=new ArrayList<String>();\n\t\tArrayList<String> b=new ArrayList<String>();\n\t\t\n\t\tint t=0;\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t\ta.add(BR.readLine());\n\t\t}\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t\tb.add(BR.readLine());\n\t\t}\n\t\tint y=0;\n\t\tfor(int i=0;i<b.size();i++)\n\t\t{\n\t\t\tString s=b.get(i);\n\t\t\tif(a.contains(s))\n\t\t\t{\n\t\t\t\tint x=a.indexOf(s);\n\t\t\t\ta.remove(x);\n\t\t\t\tb.remove(i);\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(b.size());\n\t\t/*for(int i=0;i<b.size();i++)\n\t\t{\n\t\t\tString s=b.remove(i);\n\t\t\tif(s.length()==1)\n\t\t\t{\n\t\t\t\tString q=\"M\";\n\t\t\t\tif(a.contains(q))\n\t\t\t\t{\n\t\t\t\t\tint x=a.indexOf(q);\n\t\t\t\t\ta.remove(x);\n\t\t\t\t\ti--;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tq=\"S\";\n\t\t\t\tif(a.contains(q))\n\t\t\t\t{\n\t\t\t\t\tint x=a.indexOf(q);\n\t\t\t\t\ta.remove(x);\n\t\t\t\t\ti--;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tq=\"L\";\n\t\t\t\tif(a.contains(q))\n\t\t\t\t{\n\t\t\t\t\tint x=a.indexOf(q);\n\t\t\t\t\ta.remove(x);\n\t\t\t\t\ti--;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (s.length()==2)\n\t\t\t{\n\t\t\t\tString q=\"XS\";\n\t\t\t\tif(a.contains(q))\n\t\t\t\t{\n\t\t\t\t\tint x=a.indexOf(q);\n\t\t\t\t\ta.remove(x);\n\t\t\t\t\ti--;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tq=\"XL\";\n\t\t\t\tif(a.contains(q))\n\t\t\t\t{\n\t\t\t\t\tint x=a.indexOf(q);\n\t\t\t\t\ta.remove(x);\n\t\t\t\t\ti--;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (s.length()==3)\n\t\t\t{\n\t\t\t\tString q=\"XXL\";\n\t\t\t\tif(a.contains(q))\n\t\t\t\t{\n\t\t\t\t\tint x=a.indexOf(q);\n\t\t\t\t\ta.remove(x);\n\t\t\t\t\ti--;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tq=\"XXS\";\n\t\t\t\tif(a.contains(q))\n\t\t\t\t{\n\t\t\t\t\tint x=a.indexOf(q);\n\t\t\t\t\ta.remove(x);\n\t\t\t\t\ti--;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (s.length()==4)\n\t\t\t{\n\t\t\t\tString q=\"XXXL\";\n\t\t\t\tif(a.contains(q))\n\t\t\t\t{\n\t\t\t\t\tint x=a.indexOf(q);\n\t\t\t\t\ta.remove(x);\n\t\t\t\t\ti--;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tq=\"XXXS\";\n\t\t\t\tif(a.contains(q))\n\t\t\t\t{\n\t\t\t\t\tint x=a.indexOf(q);\n\t\t\t\t\ta.remove(x);\n\t\t\t\t\ti--;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\t\t\n\t\t\t}\n\t\t\t}*/\n\t\t}\n\t\t\n\t}\n\n"
        },
        {
            "language": 1,
            "solution": "import math\nt=input()\np=[]\nn=[]\nfor i in range(t):\n    x=raw_input()\n    p.append(x)\nfor i in range(t):\n    x=raw_input()\n    if x in p:\n        p.remove(x)\nprint len(p)\n"
        },
        {
            "language": 3,
            "solution": "from collections import defaultdict\n\nn = int(input())\nd = defaultdict(int)\n\nfor _ in range(n):\n    d[input()] += 1\n\nfor _ in range(n):\n    d[input()] -= 1\n\nprint(sum(v for v in d.values() if v > 0))"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[]\nfor i in range(0,2*n):\n    a.append(input())\nc=0\nfor i in range(0,n):\n    flag=0\n    for j in range(n,2*n):\n        if a[i]==a[j]:\n            flag=1\n            a[j]='0'\n            break\n    if flag==0:\n        c+=1\nprint(c)"
        },
        {
            "language": 3,
            "solution": "import re\nimport math\nimport decimal\nimport bisect\n\ndef read():\n\treturn input().strip()\n\ndef iread():\n\treturn int(input().strip())\n\ndef viread():\n\treturn list(map(int, input().strip().split()))\n\n# code goes here\nn = iread()\nlastyr = []\nfor i in range(n):\n\tlastyr.append(read())\ncuryr = []\nops = 0\nfor i in range(n):\n\tshirt = read()\n\tif shirt in lastyr:\n\t\tlastyr.remove(shirt)\n\telse:\n\t\tcuryr.append(shirt)\n# print(lastyr)\n# print(curyr)\nwhile len(lastyr) > 0:\n\ts = lastyr.pop()\n\tbest = [10000000, None]\n\tfor other in curyr:\n\t\tif len(other) != len(s):\n\t\t\tcontinue\n\t\tdiff = 0\n\t\tfor i in range(len(s)):\n\t\t\tif s[i] != other[i]:\n\t\t\t\tdiff += 1\n\t\tif diff < best[0]:\n\t\t\tbest[0] = diff\n\t\t\tbest[1] = other\n\tcuryr.remove(best[1])\n\tops += best[0]\nprint(ops)\n\n"
        },
        {
            "language": 3,
            "solution": "# your code goes here\nn = int(input())\n\ns1 = []\ns2 = []\n\nfor i in range(n):\n\ts1.append(input())\n\nfor i in range(n):\n\ts2.append(input())\n\nfor v in s1:\n\tif v in s2:\n\t\ts2.remove(v)\n#print(s2)\nprint('{}'.format(len(s2)))"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[[],[],[],[]]; b=[[],[],[],[]]\nfor i in range(n):\n    s=input()\n    a[len(s)-1].append(s)\nfor i in range(n):\n    s=input()\n    b[len(s)-1].append(s)\ncnt=0\nfor i in range(4):\n    for item in b[i]:\n        if item in a[i]: a[i].remove(item)\n    cnt+=len(a[i])\nprint(cnt)"
        },
        {
            "language": 3,
            "solution": "x=int(input())\nlistik=[]\nfor _ in range(x):\n    listik+=[input()]\nlistik.sort()\nlistik2=[]\nfor _ in range(x):\n    listik2+=[input()]\nlistik2.sort()\ncounter=0\nfor i in range(x):\n    if listik[i] not in listik2:\n        counter+=1\n    else:\n        listik2.remove(listik[i])\nprint(counter)"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.*;\nimport java.util.stream.Collectors;\nimport java.lang.*;\nimport java.io.*;\n \npublic class Problem {\n\t\n\tpublic static void main (String[] args) throws java.lang.Exception\n\t{\n\t    Scanner sc = new Scanner(System.in);\n\t   int n = sc.nextInt();\n\t   List<String> l1 = new ArrayList<String>();\n\t   List<String> l2 = new ArrayList<String>();\n\t   for(int i=0;i<n;i++)l1.add(sc.next());\n\t   for(int i=0;i<n;i++)l2.add(sc.next());\n\t   \n\t   Iterator<String> itr = l1.iterator();\n\t   while(itr.hasNext())\n\t   {\n\t\t   String s = itr.next();\n\t\t   if(l2.indexOf(s)==-1)continue;\n\t\t   else\n\t\t   {\n\t\t\t   itr.remove();\n\t\t\t   l2.remove(l2.indexOf(s));\n\t\t   }\n\t   }\n\t   System.out.println(l1.size());\n\t  \n\t}\n\t\n\t\n\n}"
        },
        {
            "language": 3,
            "solution": "# -*- coding: utf-8 -*-\n\nn = int(input())\nA = [input() for _ in range(n)]\nB = [input() for _ in range(n)]\nfor i in ['M', 'S', 'XS', 'XXS', 'XXXS', 'L', 'XL', 'XXL', 'XXXL']:\n    while i in A and i in B:\n        del A[A.index(i)]\n        del B[B.index(i)]\nprint(len(A))\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nbool compare(string a, string b) {\n  if (a.size() == b.size()) {\n    return a < b;\n  }\n  return a.size() < b.size();\n}\nint main() {\n  int n;\n  cin >> n;\n  vector<string> prev(n);\n  for (int i = 0; i < n; i++) {\n    cin >> prev[i];\n  }\n  vector<string> cur(n);\n  for (int i = 0; i < n; i++) {\n    cin >> cur[i];\n  }\n  for (int i = 0; i < n; i++) {\n    for (int j = 0; j < n; j++) {\n      if (prev[i] == cur[j]) {\n        prev[i] = \"\";\n        cur[j] = \"\";\n        break;\n      }\n    }\n  }\n  sort(prev.begin(), prev.end(), compare);\n  sort(cur.begin(), cur.end(), compare);\n  int ans = 0;\n  for (int i = 0; i < n; i++) {\n    if (prev[i] != cur[i]) {\n      ans++;\n    }\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "//package math_codet;\nimport java.io.*;\nimport java.util.*;\n\npublic class lets_do {\n    public static void main(String[] args)\n    {\n        InputReader in=new InputReader(System.in);\n        StringBuffer str=new StringBuffer();\n        int n=in.nextInt();\n        int i=0,j=0;\n        String[] arr1=new String[n];\n        boolean[] visited=new boolean[n];\n        for(i=0;i<n;i++)\n            arr1[i]=in.next();\n        String[] arr2=new String[n];\n        for(i=0;i<n;i++)\n            arr2[i]=in.next();\n        int count=0;\n        for(i=0;i<n;i++){\n            boolean flag=false;\n            for(j=0;j<n;j++){\n                if(!visited[j] && arr2[i].equals(arr1[j])){\n                    visited[j]=true;\n                    count++;\n                    break;\n                }\n            }\n        }\n        System.out.println(n-count);\n    }\n    static class InputReader{\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n \n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n \n        public int read() {\n            if (numChars == -1)\n                throw new UnknownError();\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new UnknownError();\n                }\n                if (numChars <= 0)\n                    return -1;\n            }\n            return buf[curChar++];\n        }\n \n        public int peek() {\n            if (numChars == -1)\n                return -1;\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    return -1;\n                }\n                if (numChars <= 0)\n                    return -1;\n            }\n            return buf[curChar];\n        }\n \n        public void skip(int x) {\n            while (x-- > 0)\n                read();\n        }\n \n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n \n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n \n        public String nextString() {\n            return next();\n        }\n \n        public String next() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            StringBuffer res = new StringBuffer();\n            do {\n                res.appendCodePoint(c);\n                c = read();\n            } while (!isSpaceChar(c));\n \n            return res.toString();\n        }\n \n        public String nextLine() {\n            StringBuffer buf = new StringBuffer();\n            int c = read();\n            while (c != '\\n' && c != -1) {\n                if (c != '\\r')\n                    buf.appendCodePoint(c);\n                c = read();\n            }\n            return buf.toString();\n        }\n \n        public double nextDouble() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            double res = 0;\n            while (!isSpaceChar(c) && c != '.') {\n                if (c == 'e' || c == 'E')\n                    return res * Math.pow(10, nextInt());\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            if (c == '.') {\n                c = read();\n                double m = 1;\n                while (!isSpaceChar(c)) {\n                    if (c == 'e' || c == 'E')\n                        return res * Math.pow(10, nextInt());\n                    if (c < '0' || c > '9')\n                        throw new InputMismatchException();\n                    m /= 10;\n                    res += (c - '0') * m;\n                    c = read();\n                }\n            }\n            return res * sgn;\n        }\n \n        public boolean hasNext() {\n            int value;\n            while (isSpaceChar(value = peek()) && value != -1)\n                read();\n            return value != -1;\n        }\n \n        private boolean isSpaceChar(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n    }\n} "
        },
        {
            "language": 3,
            "solution": "import sys\nimport io\n\nstream_enable = 0\n\ninpstream = \"\"\"\n3\nXS\nXS\nM\nXL\nS\nXS\n\"\"\"\n\nif stream_enable:\n    sys.stdin = io.StringIO(inpstream)\n    input()\n\ndef inpmap():\n    return list(map(int, input().split()))\n\nn = int(input())\na = []\nb = []\nfor i in range(n):\n    a.append(input())\nfor i in range(n):\n    b.append(input())\nm = 0\nfor x in a:\n    if x in b:\n        b.remove(x)\n    else:\n        m += 1\nprint(m)\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class file{\n    public static void main(String[] args){\n        Scanner scn=new Scanner(System.in);\n        int n=scn.nextInt();\n        scn.nextLine();\n        HashMap<String,Integer> map=new HashMap<>();\n        for(int i=0;i<n;i++){\n        String str=scn.nextLine();\n        map.put(str,map.getOrDefault(str,0)+1);\n        }\n        \n        for(int i=0;i<n;i++){\n            String stri=scn.nextLine();\n            if(map.containsKey(stri)){\n                if(map.get(stri)==1){\n                    map.remove(stri);\n                }else{\n                        map.put(stri,map.get(stri)-1);  \n                }\n          \n            }\n        }\n        int sum=0;\n        \n        for(String i:map.keySet()){\n            sum+=(map.get(i));\n        }\n        System.out.println(sum);\n    }\n}"
        },
        {
            "language": 3,
            "solution": "from collections import defaultdict\nn = int(input())\nA, B = defaultdict(int), defaultdict(int)\nfor L in (A,B):\n    for i in range(n):\n        L[input().strip()]+=1\n\nanswer = n\n\nsizes1let = ('L', 'M', 'S')\nanswer -= sum([min(A[size], B[size]) for size in sizes1let])\n\nsizes2let = ('L', 'S')\nfor x in ('X', 'XX', 'XXX'):\n    sizes = [x+s for s in sizes2let]\n    answer -= sum([min(A[size], B[size]) for size in sizes])\n\nprint(answer)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nprev = []\nthis = []\nfor i in range(n):\n    prev.append(input())\nfor i in range(n):\n    this.append(input())\nfor i in range(n):\n    if prev[i] in this:\n        this.remove(prev[i])\nprint(len(this))\n"
        },
        {
            "language": 1,
            "solution": "n = input()\nl1, l2 = [], []\nfor i in range(n):\n    s = raw_input()\n    l1.append(s)\nfor i in range(n):\n    s = raw_input()\n    if s in l1:\n        l1.remove(s)\n    else:\n        l2.append(s)\n\nans = 0\nmn = 10000\nl1 = sorted(l1, key=lambda k: (len(k), k))\nl2 = sorted(l2, key=lambda k: (len(k), k))\ni, j = 0, 0\nwhile i < len(l1) and j < len(l2):\n    x, y = 0, 0\n    while x < len(l1[i]) and y < len(l2[j]):\n        if(l1[i][x] != l2[j][y]):\n            ans += 1\n        x += 1\n        y += 1\n    i += 1\n    j += 1\nprint(ans)\n"
        },
        {
            "language": 3,
            "solution": "m = 0\nc = 0\nl = 0\nxl = 0\nxxl = 0\nxxxl = 0\nxs = 0\nxxs = 0\nxxxs = 0\no = 0\nn = int(input())\nfor i in range (n):\n    s = input()\n    if s == 'M': m = m+1\n    if s == 'S': c = c+1\n    if s == 'L': l = l+1\n    if s == 'XS': xs = xs+1\n    if s == 'XXS': xxs = xxs+1\n    if s == 'XXXS': xxxs = xxxs+1\n    if s == 'XL': xl = xl+1\n    if s == 'XXL': xxl = xxl+1\n    if s == 'XXXL': xxxl = xxxl+1\nfor i in range (n):\n    s = input()\n    if s == 'M' and m > 0: m = m-1\n    if s == 'S'and c > 0: c = c-1\n    if s == 'L'and l > 0: l = l-1\n    if s == 'XS'and xs > 0: xs = xs-1\n    if s == 'XXS'and xxs > 0: xxs = xxs-1\n    if s == 'XXXS'and xxxs > 0: xxxs = xxxs-1\n    if s == 'XL'and xl > 0: xl = xl-1\n    if s == 'XXL'and xxl > 0: xxl = xxl-1\n    if s == 'XXXL'and xxxl > 0: xxxl = xxxl-1  \no = m +c+l+xl+xxl+xxxl+xs+xxs+xxxs\nprint (o)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\n\na = {}\nfor i in range(n):\n    x = input()\n    if x in a:\n        a[x] += 1\n    else:\n        a[x] = 1\n\nans = 0\nfor i in range(n):\n    x = input()\n    if x in a and a[x] != 0:\n        a[x] = a[x]-1\n        ans += 1\n\nprint(n-ans)\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  signed long long int n;\n  cin >> n;\n  map<string, signed long long int> my1, my2;\n  for (signed long long int i = 0; i < n; i++) {\n    string s;\n    cin >> s;\n    my1[s]++;\n  }\n  for (signed long long int i = 0; i < n; i++) {\n    string s;\n    cin >> s;\n    my2[s]++;\n  }\n  signed long long int ans = 0;\n  map<string, signed long long int>::iterator it;\n  for (it = my1.begin(); it != my1.end(); it++) {\n    string s = it->first;\n    if (my1[s] > my2[s]) ans += (my1[s] - my2[s]);\n  }\n  cout << ans << \"\\n\";\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na1 = [[],[],[],[],[]]\nfor _ in range(n):\n\ta = input()\n\ta1[len(a)-1].append(a)\na2 = [[],[],[],[],[]]\nfor _ in range(n):\n\ta = input()\n\ta2[len(a)-1].append(a)\nx1 = a1[0]\nx2 = a2[0]\nn1 = x1.count('S')\nn2 = x1.count('M')\nm1 = x2.count('S')\nm2 = x2.count('M')\nnn1 = n1-m1\nnn2 = n2-m2\ncount = max(abs(nn1),abs(nn2),abs(nn1+nn2))\nfor i in range(1, 5):\n  a1[i].sort()\n  a2[i].sort()\n  x1 = a1[i]\n  x2 = a2[i]\n  for j in range(len(x1)):\n    if x1[j] != x2[j]:\n      count += 1\nprint(count)"
        },
        {
            "language": 3,
            "solution": "l=['S','X',\"M\",\"L\"]\ndly={i:[] for i in l}\ndty={i:[] for i in l}\nn=int(input())\nly=[input() for i in range(n)]\nfor i in ly:\n    dly[i[0]].append(i[1:])\nty=[input() for i in range(n)]\nfor i in ty:\n    dty[i[0]].append(i[1:])\n# print(dly)\n# print(dty)\nt=0\nfor i in dly:\n    if len(dly[i])!=0:\n        for j in dly[i]:\n            for k in dty[i]:\n                if j==k:\n                    dty[i].remove(k)\n                    break\n            else:\n                t+=1\n# print(dly)\n# print(dty)\nprint(t)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na, b = {}, {}\nfor i in range(0, n):\n    s = input()\n    a[s] = a[s] + 1 if s in a else 1\nfor i in range(0, n):\n    s = input()\n    b[s] = b[s] + 1 if s in b else 1\n\nans = 0\nfor t in ['M', 'S', 'L', 'XS', 'XL', 'XXS', 'XXL', 'XXXS', 'XXXL']:\n    x = a[t] if t in a else 0\n    y = b[t] if t in b else 0\n    ans += abs(x - y)\n\nprint(ans // 2)"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.InputStream;\nimport java.util.HashMap;\n\npublic class Sport_Coding\n{\n    static IO io=new IO(System.in);\n    static String[] s1, s2;\n    static int n;\n    \n    public static void main(String[] args)throws Exception\n    {\n        int i;\n        s1 = new String[n = io.nextInt()];\n        s2 = new String[n];\n        \n        for(i = 0; i < n; ++i)\n            s1[i] = io.next();\n        for(i = 0; i < n; ++i)\n            s2[i] = io.next();\n        \n        int ans = 0;\n        for(i = 1; i < 10; ++i)\n        {\n            HashMap<Character, Integer> f1 = new HashMap<>(), f2 = new HashMap<>();\n            ini(f1);    ini(f2);\n            for(int j = 0; j < n; ++j)\n            {\n                if(s1[j].length() == i)\n                    for(int k = 0; k < s1[j].length(); ++k)\n                        f1.put(s1[j].charAt(k), 1+f1.get(s1[j].charAt(k)));\n                if(s2[j].length() == i)\n                    for(int k = 0; k < s2[j].length(); ++k)\n                        f2.put(s2[j].charAt(k), 1+f2.get(s2[j].charAt(k)));\n            }\n            ans += count(f1, f2);\n        }\n        System.out.println(ans);\n    }\n    static void ini(HashMap<Character, Integer> m)\n    {\n        for(char i = 'A'; i <= 'Z'; ++i)\n            m.put(i, 0);\n    }\n    static int count(HashMap<Character, Integer> m1, HashMap<Character, Integer> m2)\n    {\n        int ret = 0;\n        for(char i = 'A'; i <= 'Z'; ++i)\n            ret += Math.abs(m1.get(i) - m2.get(i));\n        return ret >> 1;\n    }\n}\nclass IO\n{\n    static byte[] buf = new byte[2048];\n    static int index, total;\n    static InputStream in;\n    static StringBuilder sb = new StringBuilder();\n    \n \n    IO(InputStream is)\n    {\n        in = is;\n    }\n \n    int scan() throws Exception\n    {\n        if(index>=total){\n            index = 0;\n            total = in.read(buf);\n            if(total<=0)\n                return -1;\n        }\n        return buf[index++];\n    }\n \n    String next() throws Exception\n    {\n        int c;\n        for(c=scan(); c<=32; c=scan());\n        StringBuilder sb = new StringBuilder();\n        for(; c>32; c=scan())\n            sb.append((char)c);\n        return sb.toString();\n    }\n \n    int nextInt() throws Exception\n    {\n        int c, val = 0;\n        for(c=scan(); c<=32; c=scan());\n        boolean neg = c=='-';\n        if(c=='-' || c=='+')\n            c = scan();\n        for(; c>='0' && c<='9'; c=scan())\n            val = (val<<3) + (val<<1) + (c&15);\n        return neg?-val:val;\n    }\n    long nextLong() throws Exception\n    {\n        int c;long val = 0;\n        for(c=scan(); c<=32; c=scan());\n        boolean neg = c=='-';\n        if(c=='-' || c=='+')\n            c = scan();\n        for(; c>='0' && c<='9'; c=scan())\n            val = (val<<3) + (val<<1) + (c&15);\n        return neg?-val:val;\n    }\n    void print(Object a)\n    {\n        sb.append(a.toString());\n    }\n    void println(Object a)\n    {\n        sb.append(a.toString()).append(\"\\n\");\n    }\n    void println()\n    {\n        sb.append(\"\\n\");\n    }\n    void flush()\n    {\n        System.out.print(sb);\n        sb = new StringBuilder();\n    }\n}"
        },
        {
            "language": 1,
            "solution": "n = input()\na = []\nfor i in range(n):\n    a.append(raw_input())\n\nb = []\nfor i in range(n):\n    b.append(raw_input())\n\nma = {}\nma[1] = [0,0,0]\nma[2] = [0,0]\nma[3] = [0,0]\nma[4] = [0,0]\nfor i in a:\n    if(len(i)==1):\n        if(i == \"M\"):\n            ma[1][0]+=1\n        elif(i == \"L\"):\n            ma[1][1]+=1\n        else:\n            ma[1][2]+=1\n    elif(len(i)==2):\n        if(i == \"XL\"):\n            ma[2][0]+=1\n        else:\n            ma[2][1]+=1\n    elif(len(i)==3):\n        if(i == \"XXL\"):\n            ma[3][0]+=1\n        else:\n            ma[3][1]+=1\n    else:\n        if(i == \"XXXL\"):\n            ma[4][0]+=1\n        else:\n            ma[4][1]+=1\n\ncount = 0\nfor i in b:\n    if(len(i)==1):\n        if(i == \"M\"):\n            if(ma[1][0]<=0):\n                count+=1\n            else:\n                ma[1][0] -=1 \n        elif(i == \"L\"):\n            if(ma[1][1]<=0):\n                count+=1\n            else:\n                ma[1][1] -=1\n        else:\n            if(ma[1][2]<=0):\n                count+=1\n            else:\n                ma[1][2] -=1\n    elif(len(i)==2):\n        if(i == \"XL\"):\n            if(ma[2][0]<=0):\n                count+=1\n            else:\n                ma[2][0] -=1\n        else:\n            if(ma[2][1]<=0):\n                count+=1\n            else:\n                ma[2][1] -=1\n    elif(len(i)==3):\n        if(i == \"XXL\"):\n            if(ma[3][0]<=0):\n                count+=1\n            else:\n                ma[3][0] -=1\n        else:\n            if(ma[3][1]<=0):\n                count+=1\n            else:\n                ma[3][1] -=1\n    else:\n        if(i == \"XXXL\"):\n            if(ma[4][0]<=0):\n                count+=1\n            else:\n                ma[4][0] -=1\n        else:\n            if(ma[4][1]<=0):\n                count+=1\n            else:\n                ma[4][1] -=1\n\n\nprint count"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na={}\nb={}\nfor i in range(n):\n    c=list(input().split())\n    for r in c:\n        if r in a:\n            a[r]+=1\n        else:\n            a[r]=1    \nfor i in range(n):\n    c=list(input().split())\n    for r in c:\n        if r in b:\n            b[r]+=1\n        else:\n            b[r]=1\nx=0\nfor r in a:\n    if r not in b:\n        b[r]=0\nfor r in b:\n    if r in a:\n        x+=abs(a[r]-b[r])\n    else:\n        x+=b[r]\nprint(x//2)\n    \n    \n\n\n    \n    \n"
        },
        {
            "language": 1,
            "solution": "from collections import Counter\nn = input()\na = []\nb = []\nfor i in xrange(n):\n\ta.append(raw_input())\nfor i in xrange(n):\n\tb.append(raw_input())\na = Counter(a)\nb = Counter(b)\n#print a,b\nc = 0\nfor b1 in b:\n\tif b1 in a:\n\t\tc+=max(b[b1]-a[b1],0)\n\telse:\n\t\tc+=b[b1]\nprint c\n\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.math.*;\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.StringTokenizer;\n\n     //--------------->>>>IF YOU ARE HERE FOR QUICKSORT HACK THEN SORRY NO HACK FOR YOU<<<-------------------\n\npublic class a{ \n     static long[] count,count1,count2;\n     static Node[] nodes;\n     static int[] arr;\n     static int[] dp;\n     static char[] ch,ch1;\n     static long[] darr,farr;\n     static Character[][] mat,mat1;\n     static long x,h;\n     static long maxl;\n     static double dec;\n     static String s;\n     static long minl;\n     static int mx = (int)1e9+5;\n     static long mod = 998244353l;\n     // static int minl = -1;\n     // static long n;\n     static int n,n1,n2;\n     static long a;\n     static long b;\n     static long c;\n     static long d;\n     static long y,z;\n     static int m;\n     static long k;\n     static String[] str,str1;\n     static Set<Long> set,set1,set2;\n     static List<Integer> list,list1,list2,list3;\n     static LinkedList<Node> ll;\n     static Map<String,Integer> map,map1;\n     static StringBuilder sb,sb1,sb2;\n     static int[] dx = {0,-1,0,1};\n     static int[] dy = {-1,0,1,0};\n\n     // public static void solve(){\n\n     //    FastScanner sc = new FastScanner();\n\n     //    int n = sc.nextInt();\n     //    long m = sc.nextLong();\n\n     //    list  = new ArrayList<>();\n     //    long sum = 0;\n     //    for(int i = 0 ; i < n ; i++){\n\n     //        long a = sc.nextLong();\n     //        long b = sc.nextLong();\n\n     //        list.add(a-b);\n     //        sum += a;\n\n     //    }\n\n     //    if(sum <= m){\n     //        System.out.println(\"0\");\n     //        return;\n     //    }\n\n     //    Collections.sort(list);\n\n     //    for(int i = n-1 ; i > -1 ; i--){\n     //        sum -= list.get(i);\n     //        if(sum <= m){\n     //            System.out.println(n-i);\n     //            return;\n     //        }\n     //    }\n\n     //    System.out.println(\"-1\");\n\n        \n     // }\n\n     //--------------->>>>IF YOU ARE HERE FOR QUICKSORT HACK THEN SORRY NO HACK FOR YOU<<<-------------------\n\n\n     public static void solve(){\n\n        map = new HashMap<>();\n        map1 = new HashMap<>();\n        for(int i = 0 ; i < n/2 ; i++){\n            map.put(str[i],map.getOrDefault(str[i],0)+1);\n        } \n\n        int seconds = 0;\n        for(int i = n/2 ; i < n ; i++){\n            if(map.containsKey(str[i]) && (map.get(str[i]) > 0)){\n                map.put(str[i],map.get(str[i])-1);\n            }\n            else{\n                seconds += 1;\n                map1.put(str[i],map1.getOrDefault(str[i],0)+1);\n            }\n        } \n\n        System.out.println(seconds);\n\n     }\n\n     public static void main(String[] args) {\n\n            FastScanner sc = new FastScanner();\n            // Scanner sc = new Scanner(System.in);\n            // int t = sc.nextInt();\n            int t = 1;\n            // int l = 1;\n            while(t > 0){\n                \n                // n = sc.nextInt();\n                // n = sc.nextLong();\n                // a = sc.nextLong();\n                // b = sc.nextLong();\n                // c = sc.nextLong();\n                // d = sc.nextLong();\n\n                // x = sc.nextLong();\n                // y = sc.nextLong();\n                \n                // n = sc.nextLong();\n                n = 2*sc.nextInt();\n                // n1 = sc.nextInt();\n\n                // m = sc.nextInt();\n\n                // k = sc.nextLong();\n                // s = sc.next();\n\n                // ch = sc.next().toCharArray();\n                // ch1 = sc.next().toCharArray();\n\n                // arr = new int[n];\n                // for(int i = 0 ; i < n ; i++){\n                //     arr[i] = sc.nextInt();\n                // }\n                // m = n;\n                // darr = new int[m];\n                // for(int i = 0; i < m ; i++){\n                //     darr[i] = sc.nextInt();\n                // }\n\n                // farr = new int[n];\n                // for(int i = 0; i < n ; i++){\n                //     farr[i] = sc.nextInt();\n                // }\n\n                // mat = new Character[n][n];\n                // for(int i = 0 ; i < n ; i++){\n                //     String s = sc.next();\n                //     for(int j = 0 ; j < n ; j++){\n                //         mat[i][j] = s.charAt(j);\n                //     }\n                // }\n                str = new String[n];\n                for(int i = 0 ; i < n ; i++)\n                    str[i] = sc.next();\n\n                // nodes = new Node[n];\n                // for(int i = 0 ; i < n ;i++)\n                //     nodes[i] = new Node(sc.nextInt(),sc.nextInt());\n\n                // System.out.println(solve()?\"YES\":\"NO\");\n                 solve();       \n                 // System.out.println(solve());\n                 t -= 1;\n            }\n\n     }\n\n    public static int log(long n){\n\n         if(n == 0 || n == 1)\n             return 0;\n\n         if(n == 2)\n             return 1;\n\n         double num = Math.log(n);\n         double den = Math.log(2);\n\n         if(den == 0)\n             return 0;\n\n         return (int)(num/den);\n     }\n\n    public static boolean isPrime(long n) { \n    // Corner cases \n        if (n <= 1)  \n            return false; \n\n        if (n <= 3)  \n            return true; \n      \n        // This is checked so that we can skip  \n        // middle five numbers in below loop \n        if (n%2 == 0 || n%3 == 0) \n            return false; \n      \n        for (int i=5; i*i<=n; i=i+6) \n            if (n%i == 0 || n%(i+2) == 0) \n               return false; \n      \n        return true; \n    } \n\n     public static long gcd(long a,long b){\n\n        if(b%a == 0){\n            return a;\n        }\n        return gcd(b%a,a);\n\n     }\n\n     // public static void swap(int i,int j){\n     //     long temp = arr[j];\n     //     arr[j] = arr[i];\n     //     arr[i] = temp;\n     // } \n\n    static final Random random=new Random();\n    \n    static void ruffleSort(long[] a) {\n        int n=a.length;//shuffle, then sort \n        for (int i=0; i<n; i++) {\n            int oi=random.nextInt(n);\n            long temp=a[oi];\n            a[oi]=a[i]; a[i]=temp;\n        }\n        Arrays.sort(a);\n    }\n\n    static class Node{\n        int first;\n        int second;\n        Node(int f,int s){\n            this.first = f;\n            this.second = s;\n        }\n    }\n\n     static class FastScanner {\n\n                BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n                StringTokenizer st=new StringTokenizer(\"\");\n                String next() {\n                        while (!st.hasMoreTokens())\n                                try {\n                                        st=new StringTokenizer(br.readLine());\n                                } catch (IOException e) {\n                                        e.printStackTrace();\n                                }\n                        return st.nextToken();\n                }\n                \n                int nextInt() {\n                        return Integer.parseInt(next());\n                }\n                int[] readArray(int n) {\n                        int[] a=new int[n];\n                        for (int i=0; i<n; i++) a[i]=nextInt();\n                        return a;\n                }\n                long nextLong() {\n                        return Long.parseLong(next());\n                }\n        }\n\n}"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl = [input()for x in range(n)]\nans=  0\nfor _ in range(n):\n    x = input()\n    if l.count(x) >=1: l.remove(x)\n    else: ans +=1\nprint(ans)"
        },
        {
            "language": 4,
            "solution": "//package contest_488;\n\nimport java.util.*;\nimport java.io.*;\npublic class q1\n{\npublic static void main(String[] args)\n{\n    InputReader in=new InputReader(System.in);\n   OutputWriter out=new OutputWriter(System.out);\n   Scanner sc=new Scanner(System.in);\n\tint n=in.readInt();\n\tString[] arr=new String[n];\n\tString[] str=new String[n];\n\tHashMap<String,Integer> h=new HashMap();\n\tHashMap<String,Integer> h1=new HashMap();\n\tHashMap<String,Integer> h2=new HashMap();\n\tVector<String>[] v=new Vector[5];\n\tVector<String>[] v1=new Vector[5];\n\t//ArrayList<String> s=new ArrayList();\n\tfor(int i=1;i<=4;i++)\n\t{\n\t\tv[i]=new Vector();\n\t\tv1[i]=new Vector();\n\t}\n\tfor(int i=0;i<n;i++)\n\t{\n\t\t//System.out.println(i);\n\t\tarr[i]=in.readString();\n\t\t//System.out.println(arr[i]);\n\t\tint l=arr[i].length();\n\t\th2.put(arr[i], 0);\n\t\t\n\t\tif(v[l].isEmpty())\n\t\t\th.put(arr[i],1);\n\t\telse if(v[l].contains(arr[i])==false)\n\t\t{\n\t\t\th.put(arr[i],1);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tint num=h.get(arr[i]);\n\t\t\th.remove(arr[i]);\n\t\t\th.put(arr[i],num+1);\n\t\t\t\n\t\t}\n\t\tv[l].add(arr[i]);\n\t}\n\tfor(int i=0;i<n;i++)\n\t{\n\t\t\tstr[i]=in.readString();\n\t\t\t//s.add(str[i]);\n\t\t\n\t\tif(v1[str[i].length()].isEmpty())\n\t\t\th1.put(str[i],1);\n\t\telse if(v1[str[i].length()].contains(str[i])==false)\n\t\t{\n\t\t\th1.put(str[i], 1);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tint num=h1.get(str[i]);\n\t\t\th1.remove(str[i]);\n\t\t\th1.put(str[i],num+1);\n\t\t}\n\t\tv1[str[i].length()].add(str[i]);\n\t}\n\tint count=0;\n\tfor(int i=1;i<=4;i++)\n\t{\n\t\t\n\t\tIterator<String> it=v[i].iterator();\n\t\twhile(it.hasNext())\n\t\t{\n\t\t\tString st=it.next();\n\t\t\tint num=h2.get(st);\n\t\t\th2.remove(st);\n\t\t\th2.put(st,num+1);\n\t\t\tif(v1[i].contains(st)&&h2.get(st)<=h1.get(st))\n\t\t\t continue;\n\t\t\telse \n\t\t\t\tcount++;\n\t\t\t\t\n\t\t\n\t\t}\n\t}\n\t\n\tout.print(count);\n\tout.flush();\n\tout.close();\n}\n}\nclass InputReader {\n\n    private InputStream stream;\n    private byte[] buf = new byte[1024];\n    private int curChar;\n    private int numChars;\n    private SpaceCharFilter filter;\n\n    public InputReader(InputStream stream) {\n        this.stream = stream;\n    }\n\n    public int read() {\n        if (numChars == -1)\n            throw new InputMismatchException();\n        if (curChar >= numChars) {\n            curChar = 0;\n            try {\n                numChars = stream.read(buf);\n            } catch (IOException e) {\n                throw new InputMismatchException();\n            }\n            if (numChars <= 0)\n                return -1;\n        }\n        return buf[curChar++];\n    }\n\n    public int readInt() {\n        int c = read();\n        while (isSpaceChar(c))\n            c = read();\n        int sgn = 1;\n        if (c == '-') {\n            sgn = -1;\n            c = read();\n        }\n        int res = 0;\n        do {\n            if (c < '0' || c > '9')\n                throw new InputMismatchException();\n            res *= 10;\n            res += c - '0';\n            c = read();\n        } while (!isSpaceChar(c));\n        return res * sgn;\n    }\n\n    public String readString() {\n        int c = read();\n        while (isSpaceChar(c))\n            c = read();\n        StringBuilder res = new StringBuilder();\n        do {\n            res.appendCodePoint(c);\n            c = read();\n        } while (!isSpaceChar(c));\n        return res.toString();\n    }\n\n    public boolean isSpaceChar(int c) {\n        if (filter != null)\n            return filter.isSpaceChar(c);\n        return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n    }\n\n    public String next() {\n        return readString();\n    }\n\n    public interface SpaceCharFilter {\n        public boolean isSpaceChar(int ch);\n    }\n}\n\nclass OutputWriter {\n    private final PrintWriter writer;\n\n    public OutputWriter(OutputStream outputStream) {\n        writer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));\n    }\n\n    public OutputWriter(Writer writer) {\n        this.writer = new PrintWriter(writer);\n    }\n\n    public void print(Object... objects) {\n        for (int i = 0; i < objects.length; i++) {\n            if (i != 0)\n                writer.print(' ');\n            writer.print(objects[i]);\n        }\n    }\n\n    public void printLine(Object... objects) {\n        print(objects);\n        writer.println();\n    }\n\n    public void close() {\n        writer.close();\n    }\n\n    public void flush() {\n        writer.flush();\n    }\n\n}\n\nclass IOUtils {\n\n    public static int[] readIntArray(InputReader in, int size) {\n        int[] array = new int[size];\n        for (int i = 0; i < size; i++)\n            array[i] = in.readInt();\n        return array;\n    }\n\n}\n\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[]\naa=[]\nbb=[]\nfor i in range(0,9):\n\taa.append(0)\nfor i in range(0,9):\n\tbb.append(0)\nfor i in range(0,n):\n\ts=input()\n\tif(s==\"M\"):\n\t\taa[0]+=1\n\telif(s==\"S\"):\n\t\taa[1]+=1\n\telif(s==\"L\"):\n\t\taa[2]+=1\n\telif(s==\"XS\"):\n\t\taa[3]+=1\n\telif(s==\"XL\"):\n\t\taa[4]+=1\n\telif(s==\"XXS\"):\n\t\taa[5]+=1\n\telif(s==\"XXL\"):\n\t\taa[6]+=1\n\telif(s==\"XXXS\"):\n\t\taa[7]+=1\n\telif(s==\"XXXL\"):\n\t\taa[8]+=1\n\ta.append(s)\nb=[]\nfor i in range(0,n):\n\ts=input()\n\tif(s==\"M\"):\n\t\tbb[0]+=1\n\telif(s==\"S\"):\n\t\tbb[1]+=1\n\telif(s==\"L\"):\n\t\tbb[2]+=1\n\telif(s==\"XS\"):\n\t\tbb[3]+=1\n\telif(s==\"XL\"):\n\t\tbb[4]+=1\n\telif(s==\"XXS\"):\n\t\tbb[5]+=1\n\telif(s==\"XXL\"):\n\t\tbb[6]+=1\n\telif(s==\"XXXS\"):\n\t\tbb[7]+=1\n\telif(s==\"XXXL\"):\n\t\tbb[8]+=1\n\tb.append(s)\ncount1=0\nfor i in range(0,9):\n\tif(aa[i]>bb[i]):\n\t\tcount1+=aa[i]-bb[i]\n\telse:\n\t\tcount1+=bb[i]-aa[i]\ncount1=count1/2\nprint(int(count1))\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class A\n{\t\n\t\n\t\n\t\tpublic static void main(String[] args) throws IOException \n\t\t{\n\t\t\t\t\n\t\t\t\tScanner sc=new Scanner(System.in);\n\t\t\t\tPrintWriter pw=new PrintWriter(System.out);\n\t\t\t\tint n=sc.nextInt();\n\t\t\t\tString []a=new String[n];\n\t\t\t\tString []b=new String[n];\n\t\t\t\t\n\t\t\t\tTreeMap<String,Integer> map1=new TreeMap(),map2=new TreeMap();\n\t\t\t\tfor(int i=0;i<n;i++)\n\t\t\t\t{\n\t\t\t\t\tString s=sc.next();\n\t\t\t\t\tmap1.put(s, map1.getOrDefault(s, 0)+1);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\tfor(int i=0;i<n;i++)\n\t\t\t\t{\n\t\t\t\t\tString s=sc.next();\n\t\t\t\t\tmap2.put(s, map2.getOrDefault(s, 0)+1);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\tint ans=0;\n\t\t\t\tfor(String s:map2.keySet())\n\t\t\t\t{\n\t\t\t\t\tint cnt=map1.getOrDefault(s, 0);\n\t\t\t\t\tans+=Math.max(0, map2.get(s)-cnt);\n\t\t\t\t}\n\t\t\t\tpw.println(ans);\n\t\t\t\tpw.close();\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\tstatic class Scanner\n\t\t{\n\t\tStringTokenizer st;\n\t\tBufferedReader br;\n\n\t\tpublic Scanner(InputStream s) {\n\t\t\tbr = new BufferedReader(new InputStreamReader(s));\n\t\t}\n\t\tpublic String next() throws IOException {\n\t\t\twhile (st == null || !st.hasMoreTokens())\n\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\treturn st.nextToken();\n\t\t}\n\t\tpublic Scanner(String s) throws FileNotFoundException {\n\t\t\tbr = new BufferedReader(new FileReader(s));\n\t\t}\n\t\tpublic int nextInt() throws IOException {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\t\tpublic double nextDouble() throws IOException {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tpublic long nextLong() throws IOException {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tpublic String nextLine() throws IOException {\n\t\t\treturn br.readLine();\n\t\t}\n\n\t\tpublic boolean ready() throws IOException {\n\t\t\treturn br.ready();\n\t\t}\n\t}\n\n\t\t\n\t\t\n}"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.Arrays;\nimport java.util.Scanner;\nimport java.util.Comparator;\n\npublic class Main {\n\t\tpublic static void main(String[] args) {\n\t\t\tScanner cin = new Scanner(System.in);\n\t\t\tint n = cin.nextInt();\n\t\t\tString []s1 = new String [101];\n\t\t\tString []s2 = new String [101];\n\t\t\tfor(int i=0; i<n; i++)\n\t\t\t\ts1[i] = cin.next();\n\t\t\tfor(int i=0; i<n; i++)\n\t\t\t\ts2[i] = cin.next();\n\t\t\tint m = n;\n\t\t\tfor(int i=0; i<n; i++)\n\t\t\t{\n\t\t\t\tfor(int j=0; j<n; j++)\n\t\t\t\t{\n\t\t\t\t\t//System.out.println(s1[i] + \" \" + s2[j]);\n\t\t\t\t\tif(s1[i].equals(s2[j]))\n\t\t\t\t\t{\n\t\t\t\t\t//\tSystem.out.println(m+\"h\");\n\t\t\t\t\t\ts2[j] = \"gfdgdfg\";\n\t\t\t\t\t\tm--;\n\t\t\t\t\t\t\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(m);\n\t\t}\n}\n"
        },
        {
            "language": 3,
            "solution": "from collections import defaultdict\nn=int(input())\nd=defaultdict(int)\nc=0\nfor i in range(n):\n    d[input()]+=1\nfor i in range(n):\n    s=input()\n    if(d[s]>0):\n        d[s]-=1\n    else:\n        c+=1\nprint(c)"
        },
        {
            "language": 3,
            "solution": "\nsize_dic = {\n    \"XXXS\": 0,\n    \"XXS\": 0,\n    \"XS\": 0,\n    \"S\": 0,\n    \"M\": 0,\n    \"L\": 0,\n    \"XL\": 0,\n    \"XXL\": 0,\n    \"XXXL\": 0\n}\n\ncount = int(input())\nresult = 0\nfor i in range(0, count):\n    size = input()\n    size_dic[size] += 1\n    \nfor i in range(0, count):\n    size = input()\n    if size_dic[size] > 0:\n        size_dic[size] -= 1\n        \nfor size in size_dic:\n    result += size_dic[size]\n    \nprint(result)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nmap<string, int> mapi;\nstring s;\nint main() {\n  std::ios::sync_with_stdio(false);\n  int n;\n  cin >> n;\n  int i;\n  for (i = 0; i < n; i++) {\n    cin >> s;\n    mapi[s]++;\n  }\n  for (i = 0; i < n; i++) {\n    cin >> s;\n    mapi[s]--;\n  }\n  map<string, int>::iterator it;\n  int ans = 0;\n  for (it = mapi.begin(); it != mapi.end(); it++) {\n    if (it->second > 0) {\n      ans += it->second;\n    }\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.InputMismatchException;\nimport java.io.IOException;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n *\n * @author ankur\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskA solver = new TaskA();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class TaskA {\n        public void solve(int testNumber, InputReader in, PrintWriter out) {\n            int n = in.nextInt();\n            int ar[][] = new int[4][3];\n            for (int i = 0; i < n; i++) {\n                String str = in.readString();\n                if (str.charAt(str.length() - 1) == 'M') {\n                    ar[str.length() - 1][0]++;\n                } else {\n                    if (str.charAt(str.length() - 1) == 'S') {\n                        ar[str.length() - 1][1]++;\n                    } else {\n                        ar[str.length() - 1][2]++;\n                    }\n                }\n            }\n            for (int i = 0; i < n; i++) {\n                String str = in.readString();\n                if (str.charAt(str.length() - 1) == 'M') {\n                    ar[str.length() - 1][0]--;\n                } else {\n                    if (str.charAt(str.length() - 1) == 'S') {\n                        ar[str.length() - 1][1]--;\n                    } else {\n                        ar[str.length() - 1][2]--;\n                    }\n                }\n            }\n            int ans = 0;\n\n            for (int i = 0; i < 4; i++) {\n                for (int j = 0; j < 3; j++) {\n                    if (ar[i][j] > 0)\n                        ans += ar[i][j];\n                }\n            }\n            out.print(ans);\n        }\n\n    }\n\n    static class InputReader {\n        private final InputStream stream;\n        private final byte[] buf = new byte[8192];\n        private int curChar;\n        private int snumChars;\n\n        public InputReader(InputStream st) {\n            this.stream = st;\n        }\n\n        public int read() {\n            //*-*------clare------\n//remeber while comparing 2 non primitive data type not to use ==\n//remember Arrays.sort for primitive data has worst time case complexity of 0(n^2) bcoz it uses quick sort\n//again silly mistakes ,yr kb tk krta rhega ye mistakes\n//try to write simple codes ,break it into simple things\n//knowledge>rating\n        /*\n        public class Main\n        implements Runnable{\n    public static void main(String[] args) {\n        new Thread(null,new Main(),\"Main\",1<<26).start();\n\n    }\n    public void run() {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskC solver = new TaskC();//chenge the name of task\n        solver.solve(1, in, out);\n        out.close();\n    }\n         */\n\n            if (snumChars == -1)\n                throw new InputMismatchException();\n            if (curChar >= snumChars) {\n                curChar = 0;\n                try {\n                    snumChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (snumChars <= 0)\n                    return -1;\n            }\n            return buf[curChar++];\n        }\n\n        public int nextInt() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do {\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public String readString() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            StringBuilder res = new StringBuilder();\n            do {\n                res.appendCodePoint(c);\n                c = read();\n            } while (!isSpaceChar(c));\n            return res.toString();\n        }\n\n        public boolean isSpaceChar(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 3,
            "solution": "\nfrom collections import Counter\n\nn = int(input())\na = Counter(input() for _ in range(n))\nb = Counter(input() for _ in range(n))\n\nprint(sum((b - a).values()))"
        },
        {
            "language": 4,
            "solution": "/*\n    ######  ######    #####  ######  ######  #####\n    #    #  #    #      #    #    #  #    #    #\n    #    #  # #  #      #    # ## #  # ## #    #\n    #    #  #  #    #   #    #    #  #    #    #\n    ######  #   #   # # #    #    #  #    #    #\n*/\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.*;\nimport java.io.*;\nimport java.math.*;\nimport java.util.StringTokenizer;\npublic class edu46APRA {\n    static PrintStream p = System.out;\n    public static void main(String args[] ) throws Exception {\n        int t=nextInt();\n        ArrayList<String> obj = new ArrayList<String>();\n        for(int i=0;i<t;i++) obj.add(next());\n        for(int i=0;i<t;i++){\n            String str = nextLine();\n            if(obj.contains(str)){\n                obj.remove(str);\n            }\n        }\n       p.println(obj.size());\n    }\n\n\n\n//-------------------------------------------------fast Method---------------------------------------------------------------\\\\\n    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));;\n    static StringTokenizer st;\n    private static int[] inta(int n){\n        int [] a = new int[n];\n        for(int i = 0;i < n;i++)a[i] = nextInt();\n            return a;\n    }\n    private static long[] longa(long n){\n    long[] a = new long[(int)n];\n        for(int i = 0;i < n;i++)a[i] = nextLong();\n            return a;\n    }\n    private static void pla(long[] a){\n        for(int i = 0;i <a.length;i++)\n            p.print(a[i]+\" \");\n    }\n    private static void pia(int[] a){\n        for(int i = 0;i <a.length;i++)\n            p.print(a[i]+\" \");\n    }\n    private static String next(){\n        while (st == null || !st.hasMoreElements()){\n            try{\n                st = new StringTokenizer(br.readLine());\n            }\n            catch (IOException  e){\n                e.printStackTrace();\n            }\n        }\n        return st.nextToken();\n    }\n    private static int nextInt(){\n        return Integer.parseInt(next());\n    }\n\n    private static long nextLong(){\n        return Long.parseLong(next());\n    }\n\n    private static double nextDouble(){\n        return Double.parseDouble(next());\n    }\n    private static String nextLine(){\n        String str = \"\";\n        try{\n            str = br.readLine();\n        }\n        catch (IOException e){\n            e.printStackTrace();\n        }\n        return str;\n    }\n//-------------------------------------------------fast Method---------------------------------------------------------------\\\\\n} "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid solve() {\n  long long n, i, ans = 0, pos;\n  cin >> n;\n  vector<string> v1(n), v2(n);\n  map<string, long long> m;\n  for (i = 0; i < 2 * n; i++) {\n    if (i < n) {\n      cin >> v1[i];\n      m[v1[i]]++;\n    } else\n      cin >> v2[i - n];\n  }\n  for (i = 0; i < n; i++) {\n    if (m[v2[i]] > 0) {\n      m[v2[i]]--;\n    }\n  }\n  for (auto it = m.begin(); it != m.end(); it++) ans += (it->second);\n  cout << ans << endl;\n}\nint main() {\n  int t = 1;\n  while (t--) solve();\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <typename T>\nusing v = vector<T>;\nconst long long inf = 4611686018427387903;\nvoid read() {}\ntemplate <typename Arg, typename... Args>\nvoid read(Arg& arg, Args&... args) {\n  cin >> (arg);\n  read(args...);\n}\nvoid print() {}\ntemplate <typename Arg, typename... Args>\nvoid print(Arg arg, Args... args) {\n  cout << (arg) << \" \";\n  print(args...);\n}\nvoid debug() { cout << endl; }\ntemplate <typename Arg, typename... Args>\nvoid debug(Arg arg, Args... args) {\n  cout << (arg) << \" \";\n  debug(args...);\n}\nlong long getInt() {\n  long long a;\n  cin >> a;\n  return a;\n}\nvoid run() {\n  long long n;\n  cin >> n;\n  long long ss[] = {0, 0, 0, 0}, m = 0, l[] = {0, 0, 0, 0};\n  for (long long i = (0); i < (n); i++) {\n    string s;\n    cin >> s;\n    if (s.back() == 'M')\n      m++;\n    else if (s.back() == 'S')\n      ss[((long long)s.size()) - 1]++;\n    else {\n      l[((long long)s.size()) - 1]++;\n    }\n  }\n  for (long long i = (0); i < (n); i++) {\n    string s;\n    cin >> s;\n    if (s.back() == 'M')\n      m--;\n    else if (s.back() == 'S')\n      ss[((long long)s.size()) - 1]--;\n    else {\n      l[((long long)s.size()) - 1]--;\n    }\n  }\n  long long ans = 0;\n  for (long long i = (0); i < (4); i++) {\n    ss[i] = max(ss[i], 0ll);\n    l[i] = max(l[i], 0ll);\n  }\n  m = max(m, 0ll);\n  for (long long i = (0); i < (4); i++) ans += (ss[i] + l[i]);\n  ans += m;\n  cout << ans;\n}\nint32_t main() {\n  srand(time(0));\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  cout << setprecision(15);\n  run();\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\nn=int(input())\nd=['XXXS',\"XXS\",'XS',\"S\",'M','L','XL','XXL','XXXL']\ne={'S','M','L'}\nans=0\nA=Counter()\nB=Counter()\nfor i in range(n):\n    s=input()\n    if s in d:\n        A[s]+=1\n\nfor i in range(n):\n    s=input()\n    if s in d:\n        B[s]+=1\nC=B-A#needed\nD=A-B\nfor i in d:\n    for j in e-{i[-1]}:\n        j=i[:-1]+j\n        c=min(C[i],D[j])\n        #print(i,j,C[i],D[j],)\n        C[i]-=c\n        D[j]-=c\n        ans+=c\nprint (ans)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl1 = {u:[] for u in range(1,5)}\n\nfor i in range(n):\n\ts = input()\n\tl1[len(s)].append(s)\narr = []\nfor j in range(n):\n\tarr.append(input())\narr.sort(key = lambda x: len(x))\ncount = 0 \nfor j in arr:\n\tif j  in l1[len(j)] :\n\t\tl1[len(j)].remove(j)\n\telse:\n\t\tcount += 1\nprint(count)\n\n"
        },
        {
            "language": 4,
            "solution": "/* \n * UMANG PANCHAL\n * DAIICT\n */\n\nimport java.util.*;\nimport java.io.*;\nimport java.math.*;\nimport java.util.Comparator;\npublic class Main\n{\n \n\tprivate static final Comparator<? super Integer> Comparator = null;\n\tstatic LinkedList<Integer> adj[];\n\tstatic ArrayList<Integer> adj1[];\n\tstatic int[] color,visited1;\n\tstatic boolean b[],visited[],possible;\n\tstatic int level[];\n\tstatic Map<Integer,HashSet<Integer>> s;\n\tstatic int totalnodes,colored;\n\tstatic int count[];\n\tstatic long sum[];\n\tstatic int nodes;\n\tstatic long ans=0;\n\tstatic long[] as=new long[10001];\n\tstatic long c1=0,c2=0;\n\tstatic int[] a,d,k;\n\tstatic int max=100000000;\n\tstatic long MOD = 1000000007,sm=0,m=Long.MIN_VALUE;\n\tstatic boolean[] prime=new boolean[1000005];\n\tstatic int[] levl;\n    static int[] eat;\n    static int price[];\n    static int res[],par[],co[];\n    static int result=0;\n    static int[] root,size,du,dv;\n    static long p=Long.MAX_VALUE;\n    static int start,end,r=0;\n    static boolean[] vis1,vis2;\n    static int to;\n    static HashMap<Pair,Integer> hs;\n    static boolean ns;\n    static Node head;\n    static String st,t;\n    static long n;\n  \n\t// --------------------My Code Starts Here----------------------\n\t\n\tpublic static void main(String[] args) throws IOException\n\t{\n\t\tin=new InputReader(System.in);\n\t    w=new PrintWriter(System.out);\n\n\t   int n=ni();\n\t   HashMap<String,Integer> hm=new HashMap<String,Integer>();\n\t   for(int i=0;i<n;i++)\n\t   {\n\t\t   String s=ns();\n\t\t   if(hm.containsKey(s))\n\t\t\t   hm.put(s,hm.get(s)+1);\n\t\t   else\n\t\t\t   hm.put(s,1);\n\t   }\n\t    \n\t   int ans=0;\n\t   for(int i=0;i<n;i++)\n\t   {\n\t\t   String s=ns();\n\t\t   if(hm.containsKey(s))\n\t\t   {\n\t\t\t   if(hm.get(s)==1)\n\t\t\t\t   hm.remove(s);\n\t\t\t   else\n\t\t\t\t   hm.put(s,hm.get(s)-1);\n\t\t   }\n\t\t   else\n\t\t   {\n\t\t\t   ans++;\n\t\t\t/*   if(s.length()==1)\n\t\t\t   {\n\t\t\t\t   if(s.equals(\"M\"))\n\t\t\t\t   {\n\t\t\t\t\t   if(hm.containsKey(\"S\"))\n\t\t\t\t\t   {\n\t\t\t\t\t\t   if(hm.get(\"S\")==1)\n\t\t\t\t\t\t\t   hm.remove(\"S\");\n\t\t\t\t\t\t   else\n\t\t\t\t\t\t\t   hm.put(s,hm.get(\"S\")-1);\n\t\t\t\t\t   }\n\t\t\t\t\t   else if(hm.containsKey(\"L\"))\n\t\t\t\t\t   {\n\t\t\t\t\t\t   if(hm.get(\"L\")==1)\n\t\t\t\t\t\t\t   hm.remove(\"L\");\n\t\t\t\t\t\t   else\n\t\t\t\t\t\t\t   hm.put(s,hm.get(\"L\")-1);\n\t\t\t\t\t   }\n\t\t\t\t   }\n\t\t\t\t   else if()\n\t\t\t\t   \n\t\t\t   }*/\n\t\t   }\n\t   }\n\t   w.print(ans);\n       w.close();\n\t}\n\t\n\t\n\t\n\t// --------------------My Code Ends Here------------------------\n\n\tpublic static void dfs(int n,boolean[] vis,int cl,int[] c)\n\t{\n\t\n\t\tvis[n]=true;\n\t\tif(c[n]!=cl)\n\t\t\tns=false;\n\t\tfor(int i:adj[n])\n\t\t{\n\t\t\tif(!vis[i])\n\t\t\t{\n\t\t\t\t dfs(i,vis,cl,c);\n\t\t\t}\n\t\t}\n\t\t\n\t}\n\n\tstatic long pow(long a, long b, long c) {\n\t\tif (b == 0)\n\t\t\treturn 1;\n\t\tlong p = pow(a, b / 2, c);\n\t\tp = (p * p) % c;\n\t\treturn (b % 2 == 0) ? p : (a * p) % c;\n\t}\n\t\n\tpublic static long kadane(long[] a,int n)\n\t{\n\t\t long max_here=0,max_so_far=-Long.MAX_VALUE;\n\t        for(int i=0;i<n;i++)\n\t        {\n\t        \t if(max_here<0)\n\t                   max_here=0;\n\t        \t\n\t        \t max_here+=a[i];\n\t          \n\t             \n\t      \n\t           if(max_here>max_so_far)\n\t                    max_so_far=max_here;\n\t          \n\t                  \n\t        }\n\t\treturn max_so_far;\n\t}\n\tpublic static class SegmentTreeRMQ\n\t{\n\t    int st[]; //array to store segment tree\n\t \n\t    // A utility function to get minimum of two numbers\n\t    int minVal(int x, int y) {\n\t        return (x < y) ? y : x;\n\t    }\n\t \n\t    // A utility function to get the middle index from corner\n\t    // indexes.\n\t    int getMid(int s, int e) {\n\t        return s + (e - s) / 2;\n\t    }\n\t \n\t    /*  A recursive function to get the minimum value in a given\n\t        range of array indexes. The following are parameters for\n\t        this function.\n\t \n\t        st    --> Pointer to segment tree\n\t        index --> Index of current node in the segment tree. Initially\n\t                   0 is passed as root is always at index 0\n\t        ss & se  --> Starting and ending indexes of the segment\n\t                     represented by current node, i.e., st[index]\n\t        qs & qe  --> Starting and ending indexes of query range */\n\t    int RMQUtil(int ss, int se, int qs, int qe, int index)\n\t    {\n\t        // If segment of this node is a part of given range, then\n\t        // return the min of the segment\n\t        if (qs <= ss && qe >= se)\n\t            return st[index];\n\t \n\t        // If segment of this node is outside the given range\n\t        if (se < qs || ss > qe)\n\t            return Integer.MIN_VALUE;\n\t \n\t        // If a part of this segment overlaps with the given range\n\t        int mid = getMid(ss, se);\n\t        return minVal(RMQUtil(ss, mid, qs, qe, 2 * index + 1),\n\t                RMQUtil(mid + 1, se, qs, qe, 2 * index + 2));\n\t    }\n\t \n\t    // Return minimum of elements in range from index qs (quey\n\t    // start) to qe (query end).  It mainly uses RMQUtil()\n\t    int RMQ(int n, int qs, int qe)\n\t    {\n\t        // Check for erroneous input values\n\t        if (qs < 0 || qe > n-1 || qs > qe) {\n\t            System.out.println(\"Invalid Input\");\n\t            return 1;\n\t        }\n\t \n\t        return RMQUtil(0, n - 1, qs, qe, 0);\n\t    }\n\t \n\t    // A recursive function that constructs Segment Tree for\n\t    // array[ss..se]. si is index of current node in segment tree st\n\t    int constructSTUtil(int arr[], int ss, int se, int si)\n\t    {\n\t        // If there is one element in array, store it in current\n\t        //  node of segment tree and return\n\t        if (ss == se) {\n\t            st[si] = arr[ss];\n\t            return arr[ss];\n\t        }\n\t \n\t        // If there are more than one elements, then recur for left and\n\t        // right subtrees and store the minimum of two values in this node\n\t        int mid = getMid(ss, se);\n\t        st[si] = minVal(constructSTUtil(arr, ss, mid, si * 2 + 1),\n\t                constructSTUtil(arr, mid + 1, se, si * 2 + 2));\n\t        return st[si];\n\t    }\n\t \n\t    /* Function to construct segment tree from given array. This function\n\t       allocates memory for segment tree and calls constructSTUtil() to\n\t       fill the allocated memory */\n\t    void constructST(int arr[], int n)\n\t    {\n\t        // Allocate memory for segment tree\n\t \n\t        //Height of segment tree\n\t        int x = (int) (Math.ceil(Math.log(n) / Math.log(2)));\n\t \n\t        //Maximum size of segment tree\n\t        int max_size = 2 * (int) Math.pow(2, x) - 1;\n\t        st = new int[max_size]; // allocate memory\n\t \n\t        // Fill the allocated memory st\n\t        constructSTUtil(arr, 0, n - 1, 0);\n\t    }\n\t \n\t    // Driver program to test above functions\n\t\n\t}\n\t\n\tpublic static int fact(int n)\n\t{\n\t\tHashMap<Integer,Integer> hm=new HashMap<Integer,Integer>();\n\t\tboolean ans=true;\n\t\t while (n%2==0)\n\t        {\n\t            if(hm.containsKey(2))\n\t            {\thm.put(2,hm.get(2)+1);\n\t            ans=false;\n\t            }\n\t            else\n\t            \thm.put(2,1);\n\t            n /= 2;\n\t        }\n\t \n\t        // n must be odd at this point.  So we can\n\t        // skip one element (Note i = i +2)\n\t        for (int i = 3; i <= Math.sqrt(n); i+= 2)\n\t        {\n\t            // While i divides n, print i and divide n\n\t            while (n%i == 0)\n\t            {\n\t            \t  if(hm.containsKey(i))\n\t  \t            \t{hm.put(i,hm.get(i)+1);\n\t  \t            \tans=false;\n\t  \t            \t}\n\t  \t            else\n\t  \t            \thm.put(i,1);\n\t                n /= i;\n\t            }\n\t        }\n\t \n\t        // This condition is to handle the case whien\n\t        // n is a prime number greater than 2\n\t        if (n > 2)\n\t        \t if(hm.containsKey(n))\n\t  \t            \t{hm.put(n,hm.get(n)+1);\n\t  \t            \tans=false;\n\t  \t            \t}\n\t  \t            else\n\t  \t            \thm.put(n,1);\n\t\tif(ans)\n\t\t\treturn hm.size();\n\t\telse\n\t\t\treturn -1;\n\t}\n\tpublic static int binary_search(long[] a,long k,int l,int r)\n\t{\n\t\t\n\t\twhile(l<=r)\n\t\t{\n\t\t\tint mid=(l+r)/2;\n\t\t\t if(a[mid]>=k)\n\t\t\t{\n\t\t\t\tr=mid-1;\n\t\t\t}\n\t\t\telse\n\t\t\t\tl=mid+1;\n\t\t}\n\t\treturn l;\n\t}\n\n\tstatic class Pair implements Comparable<Pair>\n\t {\n\t\t Long x;\n\t\t Long y;\n\t     \n\t        Pair(long x,long y)\n\t        {\n\t            this.x=x;\n\t            this.y=y;\n\t     \n\t        }\n\t        public int compareTo(Pair p)\n\t        {\n\t            return Long.compare(this.y,p.y);\n\t        }\n\t\t\n\t}\n\t   public static void removeDuplicates()\n\t    {\n\t         Node cur=head;\n\t         while(cur!=null)\n\t         {\n\t        \t// w.println(1);\n\t             int k=cur.data;\n\t             Node p=cur.next;\n\t             Node pre=cur;\n\t             while(p!=null)\n\t             {\n\t            \t// w.println(2);\n\t                 if(p.data==k)\n\t                 {\n\t                     pre.next=p.next;\n\t                     p=pre.next;\n\t                 }\n\t                 else\n\t                 {\n\t                     p=p.next;\n\t                     pre=pre.next;\n\t                 }\n\t             }\n\t             cur=cur.next;\n\t         }\n\t     \n\t    }\n\n\tpublic static void insert_front(int x)\n\t{\n\t\tNode f=new Node(x);\n\t\tf.next=head;\n\t\thead=f;\n\t}\n\tpublic static void insert_mid(Node x,int d)\n\t{\n\t\tif(x==null)\n\t\t{\n\t\t\tw.println(\"Nothing can be shown\");\n\t\t\treturn;\n\t\t}\n\t\tNode nex=x.next;\n\t\tNode ne=new Node(d);\n\t\tx.next=ne;\n\t\tne.next=nex;\n\t}\n\tpublic static void insert_end(int x)\n\t{\n\t\tNode f=new Node(x);\n\t\tNode temp=head;\n\t\twhile(temp.next!=null)\n\t\t\ttemp=temp.next;\n\t\ttemp.next=f;\n\t\t\t\n\t}\n\tpublic static class Node\n\t{\n\t\tint data;\n\t\tNode next;\n\t\tNode(int d)\n\t\t{\n\t\t\tthis.data=d;\n\t\t\tthis.next=null;\n\t\t}\n\t}\n\n\n     \n\n\t\n\t\n\t/*\n\t *  PriorityQueue<Integer> pq = new PriorityQueue<Integer>(new Comparator<Integer>()\n  \t\t\t{\n  \t\t\t\tpublic int compare(Integer o1, Integer o2)\n  \t\t\t\t{\n  \t\t\t\t\treturn Intege\n  \t\t\t\t\tr.compare(o2,o1);\n  \t\t\t\t}\n  \t\t\t});\n\t * \n\t * \n\t */\n\t\n\tpublic static void shuffle(long[] a,int n)\n\t{\n\t\tRandom r=new Random();\n\t\tfor(int i=n-1;i>0;i--)\n\t\t{\n\t\t\tint j=r.nextInt(i);\n\t\t\tlong t=a[j];\n\t\t\ta[j]=a[i];\n\t\t\ta[i]=t;\n\t\t}\n\t}\n\tpublic static void bfs1(int u)\n\t{\n\t    Queue<Integer> q=new LinkedList();\n\t    q.add(u);\n\t    visited[u]=true;\n\t    while(!q.isEmpty())\n\t    {\n\t    \t//w.print(1);\n\t    \tint p=q.poll();\n\t      for(int i=0;i<adj[p].size();i++)\n\t     { \n\t    \t  if(!visited[adj[p].get(i)])\n\t    \t  {\n\t    \tq.add(adj[p].get(i));\n\t    \tvisited[adj[p].get(i)]=true;\n\t    \t  }\n\t    \t  levl[adj[p].get(i)]=levl[p]+1;\n\t    \t  }\n\t    }\n\t    \n\t}\n\tpublic static void bfs2(int u)\n\t{\n\t    Queue<Integer> q=new LinkedList();\n\t    q.add(u);\n\t    vis2[u]=true;\n\t    while(!q.isEmpty())\n\t    {\n\t    \tint p=q.poll();\n\t      for(int i=0;i<adj[p].size();i++)\n\t     { \n\t    \t  if(!vis2[adj[p].get(i)])\n\t    \t  {\n\t    \tdv[adj[p].get(i)]=dv[p]+1;\n\t    \tq.add(adj[p].get(i));\n\t    \t  \n\t    \tvis2[adj[p].get(i)]=true;\n\t    \t  }\n\t    \t  }\n\t    }\n\t    \n\t}\n\t public static void buildgraph(int n)\n\t {\n         adj=new LinkedList[n+1];\n         visited=new boolean[n];\n         level=new int[n];\n         par=new int[n];\n         for(int i=0;i<=n;i++)\n         \t{\n        \t adj[i]=new LinkedList<Integer>();\n         \t\n         \t}\n      \n\t }\n\t\n\t/*public static long kruskal(Pair[] p)\n\t{\n\t\tlong ans=0;\n\t\tint w=0,x=0,y=0;\n\t\tfor(int i=0;i<p.length;i++)\n\t\t{\n\t\t\tw=p[i].w;\n\t\t\tx=p[i].x;\n\t\t\ty=p[i].y;\n\t\t\tif(root(x)!=root(y))\n\t\t\t{\n\t\t\t\tans+=w;\n\t\t\t\tunion(x,y);\n\t\t\t}\n\t\t}\n\t\treturn ans;\n\t}*/\n\t\n\n\t static  class npair implements Comparable<npair>\n\t {\n\t     int a,b;\n\t     \n\t\n\t\tnpair(int a,int b)\n\t\t{\n\t\t\tthis.a=a;\n\t\t\tthis.b=b;\n\t\t\t//this.index=index;\n\t\t}\n\n\n\t\tpublic int compareTo(npair o) {\n\t\t\t// TODO Auto-generated method stub\n\t\t\treturn Integer.compare(this.a,o.a);\n\t\t}\n\n\n\t\n\t\t\n\t}\n\tpublic static int root(int i)\n\t{\n\t\twhile(root[i]!=i)\n\t\t{\n\t\t\troot[i]=root[root[i]];\n\t\t\ti=root[i];\n\t\t}\n\t\treturn i;\n\t}\n\t\n\tpublic static void init(int n)\n\t{\n\t\troot=new int[n+1];\n\t\tfor(int i=1;i<=n;i++)\n\t\t\troot[i]=i;\n\t}\n\tpublic static void union(int a,int b)\n\t{\n\t    int root_a=root(a);\t\n\t    int root_b=root(b);\n\t    root[root_a]=root_b;\n\t   // size[root_b]+=size[root_a];\n\t}\n\n\n\t\n\tpublic static boolean isPrime(long n)\n\t{\n\t    // Corner cases\n\t    if (n <= 1)  return false;\n\t    if (n <= 3)  return true;\n\t \n\t    // This is checked so that we can skip \n\t    // middle five numbers in below loop\n\t    if (n%2 == 0 || n%3 == 0)\n\t    \treturn false;\n\t \n\t    for (long i=5; i*i<=n; i=i+6)\n\t        if (n%i == 0 || n%(i+2) == 0)\n\t           return false;\n\t \n\t    return true;\n\t}\n\t\n\n\t\n\tpublic static String ns()\n\t{\n\t\treturn in.nextLine();\n\t}\n\tpublic static int ni()\n\t{\n\t\treturn in.nextInt();\n\t}\n\tpublic static long nl()\n\t{\n\t\treturn in.nextLong();\n\t}\n\tpublic static int[] na(int n)\n\t{\n\t\tint[] a=new int[n];\n\t\tfor(int i=0;i<n;i++)\n\t\ta[i]=ni();\n\t\treturn a;\n\t}\n\tpublic static long[] nla(int n)\n\t{\n\t\tlong[] a=new long[n];\n\t\tfor(int i=0;i<n;i++)\n\t\ta[i]=nl();\n\t\treturn a;\n\t}\n\tpublic static void sieve()\n\t    {\n\t       int n=prime.length;\n\t        for(int i=0;i<n;i++)\n\t            prime[i] = true;\n\t         \n\t        for(int p = 2; p*p <=n; p++)\n\t        {\n\t            if(prime[p] == true)\n\t            {\n\t                for(int i = p*2; i <n; i += p)\n\t                    prime[i] = false;\n\t            }\n\t        }\n\t    }\n\n  public static String rev(String s)\n\t{\n\t\tStringBuilder sb=new StringBuilder(s);\n\t\tsb.reverse();\n\t\treturn sb.toString();\n\t}\n\tstatic long lcm(long a, long b)\n\t{\n\t    return a * (b / gcd(a, b));\n\t}\n\tstatic long gcd(long a, long b)\n\t{\n\t    while (b > 0)\n\t    {\n\t        long temp = b;\n\t        b = a % b; // % is remainder\n\t        a = temp;\n\t    }\n\t    return a;\n\t}\n\tstatic InputReader in;\n\tstatic PrintWriter w;\nstatic class InputReader \n{\n \nprivate final InputStream stream;\nprivate final byte[] buf = new byte[8192];\nprivate int curChar, snumChars;\nprivate SpaceCharFilter filter;\n \npublic InputReader(InputStream stream)\n{\n  this.stream = stream;\n}\n \npublic int snext()\n{\n  if (snumChars == -1)\n    throw new InputMismatchException();\n  if (curChar >= snumChars)\n  {\n    curChar = 0;\n    try \n    {\n      snumChars = stream.read(buf);\n    }\n    catch (IOException e)\n    {\n      throw new InputMismatchException();\n    }\n    if (snumChars <= 0)\n      return -1;\n  }\n  return buf[curChar++];\n}\n \npublic int nextInt() \n{\n  int c = snext();\n  while (isSpaceChar(c)) \n  {\n    c = snext();\n  }\n  int sgn = 1;\n  if (c == '-')\n  {\n    sgn = -1;\n    c = snext();\n  }\n  int res = 0;\n  do\n  {\n    if (c < '0' || c > '9')\n      throw new InputMismatchException();\n    res *= 10;\n    res += c - '0';\n    c = snext();\n  }\n  while (!isSpaceChar(c));\n  return res * sgn;\n}\n \npublic long nextLong() \n{\n  int c = snext();\n  while (isSpaceChar(c)) \n  {\n    c = snext();\n  }\n  int sgn = 1;\n  if (c == '-')\n  {\n    sgn = -1;\n    c = snext();\n  }\n  long res = 0;\n  do\n  {\n    if (c < '0' || c > '9')\n      throw new InputMismatchException();\n    res *= 10;\n    res += c - '0';\n    c = snext();\n  }\n  while (!isSpaceChar(c));\n  return res * sgn;\n}\t    \npublic String readString() \n{\n  int c = snext();\n  while (isSpaceChar(c)) \n  {\n    c = snext();\n  }\n  StringBuilder res = new StringBuilder();\n  do\n  {\n    res.appendCodePoint(c);\n    c = snext();\n  }\n  while (!isSpaceChar(c));\n  return res.toString();\n}\n \npublic String nextLine() \n{\n  int c = snext();\n  while (isSpaceChar(c))\n    c = snext();\n  StringBuilder res = new StringBuilder();\n  do\n  {\n    res.appendCodePoint(c);\n    c = snext();\n  }\n  while (!isEndOfLine(c));\n  return res.toString();\n}\n \npublic boolean isSpaceChar(int c)\n{\n  if (filter != null)\n    return filter.isSpaceChar(c);\n  return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n}\n \nprivate boolean isEndOfLine(int c) \n{\n  return c == '\\n' || c == '\\r' || c == -1;\n}\n \npublic interface SpaceCharFilter\n{\n  public boolean isSpaceChar(int ch);\n}\n}\n\t\n}"
        },
        {
            "language": 3,
            "solution": "#\n#           _____                    _____                    _____          \n#          /\\    \\                  /\\    \\                  /\\    \\         \n#         /::\\____\\                /::\\    \\                /::\\____\\        \n#        /:::/    /               /::::\\    \\              /:::/    /        \n#       /:::/    /               /::::::\\    \\            /:::/    /         \n#      /:::/    /               /:::/\\:::\\    \\          /:::/    /          \n#     /:::/____/               /:::/__\\:::\\    \\        /:::/____/           \n#    /::::\\    \\               \\:::\\   \\:::\\    \\      /::::\\    \\           \n#   /::::::\\    \\   _____    ___\\:::\\   \\:::\\    \\    /::::::\\    \\   _____  \n#  /:::/\\:::\\    \\ /\\    \\  /\\   \\:::\\   \\:::\\    \\  /:::/\\:::\\    \\ /\\    \\ \n# /:::/  \\:::\\    /::\\____\\/::\\   \\:::\\   \\:::\\____\\/:::/  \\:::\\    /::\\____\\\n# \\::/    \\:::\\  /:::/    /\\:::\\   \\:::\\   \\::/    /\\::/    \\:::\\  /:::/    /\n#  \\/____/ \\:::\\/:::/    /  \\:::\\   \\:::\\   \\/____/  \\/____/ \\:::\\/:::/    / \n#           \\::::::/    /    \\:::\\   \\:::\\    \\               \\::::::/    /  \n#            \\::::/    /      \\:::\\   \\:::\\____\\               \\::::/    /   \n#            /:::/    /        \\:::\\  /:::/    /               /:::/    /    \n#           /:::/    /          \\:::\\/:::/    /               /:::/    /     \n#          /:::/    /            \\::::::/    /               /:::/    /      \n#         /:::/    /              \\::::/    /               /:::/    /       \n#         \\::/    /                \\::/    /                \\::/    /        \n#          \\/____/                  \\/____/                  \\/____/         \n#\nn = int(input())\npre = [[0 for i in range(3)] for i in range(4)]\ncur = [[0 for i in range(3)] for i in range(4)]\nfor i in range(n):\n    s = input()\n    l = len(s)\n    if s[l-1] == 'S':\n        pre[l-1][0] += 1\n    elif s[l-1] == 'M':\n        pre[l-1][1] += 1\n    else:\n        pre[l-1][2] += 1\nfor i in range(n):\n    s = input()\n    l = len(s)\n    if s[l-1] == 'S':\n        cur[l-1][0] += 1\n    elif s[l-1] == 'M':\n        cur[l-1][1] += 1\n    else:\n        cur[l-1][2] += 1\nans = 0\nfor i in range(4):\n    for j in range(3):\n        if cur[i][j] > pre[i][j]:\n            ans += cur[i][j]-pre[i][j]\nprint(ans)\n"
        },
        {
            "language": 3,
            "solution": "import heapq\n\nclass MinCostFlow:\n    def __init__(self, n, INF=float('inf')):\n        self.n = n\n        self.INF = INF\n        self.G = [[] for i in range(n)]\n\n    def add_edge(self, fr, to, cap, cost):\n        forward = [to, cap, cost, None]\n        backward = forward[3] = [fr, 0, -cost, forward]\n        self.G[fr].append(forward)\n        self.G[to].append(backward)\n\n    def flow(self, s, t, f):\n        res = 0\n        H = [0]*self.n\n        prevv = [0]*self.n\n        preve = [None]*self.n\n\n        d0 = [self.INF]*self.n\n        dist = [self.INF]*self.n\n\n        while f:\n            dist[:] = d0\n            dist[s] = 0\n            que = [(0, s)]\n            heapq.heapify(que)\n\n            while que:\n                c, v = heapq.heappop(que)\n                if dist[v] < c:\n                    continue\n                r0 = dist[v]+H[v]\n                for e in self.G[v]:\n                    w, cap, cost, _ = e\n                    if cap > 0 and r0+cost-H[w] < dist[w]:\n                        dist[w] = r = r0+cost-H[w]\n                        prevv[w] = v\n                        preve[w] = e\n                        heapq.heappush(que, (r, w))\n            if dist[t] == self.INF:\n                return -1\n\n            for i in range(self.n):\n                H[i] += dist[i]\n\n            d = f\n            v = t\n            while v != s:\n                d = min(d, preve[v][1])\n                v = prevv[v]\n            f -= d\n            res += d*H[t]\n            v = t\n            while v != s:\n                e = preve[v]\n                e[1] -= d\n                e[3][1] += d\n                v = prevv[v]\n        return res\n\nINF = 10**18\nimport sys\nimport io, os\ninput = sys.stdin.readline\n\nn = int(input())\nd = {'M':0}\nidx = 0\nfor i in range(4):\n    idx += 1\n    d['X'*i+'S'] = idx\n    idx += 1\n    d['X'*i+'L'] = idx\n#print(d)\nfrom collections import Counter\nA = [str(input().rstrip()) for i in range(n)]\nB = [str(input().rstrip()) for i in range(n)]\nCA = Counter(A)\nCB = Counter(B)\nmf = MinCostFlow(20)\ns = 18\nt = 19\nfor k, v in CA.items():\n    mf.add_edge(s, d[k], v, 0)\nfor k, v in CB.items():\n    mf.add_edge(d[k]+9, t, v, 0)\nfor i in range(3):\n    for j in range(3):\n        if i == j:\n            mf.add_edge(i, j+9, INF, 0)\n        else:\n            mf.add_edge(i, j+9, INF, 1)\nfor i in range(3, 5):\n    for j in range(3, 5):\n        if i == j:\n            mf.add_edge(i, j+9, INF, 0)\n        else:\n            mf.add_edge(i, j+9, INF, 1)\nfor i in range(5, 7):\n    for j in range(5, 7):\n        if i == j:\n            mf.add_edge(i, j+9, INF, 0)\n        else:\n            mf.add_edge(i, j+9, INF, 1)\nfor i in range(7, 9):\n    for j in range(7, 9):\n        if i == j:\n            mf.add_edge(i, j+9, INF, 0)\n        else:\n            mf.add_edge(i, j+9, INF, 1)\nans = mf.flow(s, t, n)\nprint(ans)\n"
        },
        {
            "language": 3,
            "solution": "def totalTime(prev_year , curr_year):\n    for i in curr_year:\n        if i in prev_year:\n            prev_year.remove(i)\n    return len(prev_year)\n\n\nsize = int(input())\nprev_year = [input() for _ in range(size)]\ncurr_year = [input() for _ in range(size)]\nprint(totalTime(prev_year , curr_year))"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint main() {\n  int n, a[9] = {}, b[9] = {}, i, o;\n  char in[5];\n  scanf(\"%d\", &o);\n  n = o;\n  while (n--) {\n    scanf(\"%s\", in);\n    if (strlen(in) == 4)\n      if (in[3] == 'S')\n        a[8]++;\n      else\n        a[0]++;\n    else if (strlen(in) == 3)\n      if (in[2] == 'S')\n        a[7]++;\n      else\n        a[1]++;\n    else if (strlen(in) == 2)\n      if (in[1] == 'S')\n        a[6]++;\n      else\n        a[2]++;\n    else if (in[0] == 'S')\n      a[5]++;\n    else if (in[0] == 'M')\n      a[4]++;\n    else\n      a[3]++;\n  }\n  n = o;\n  while (n--) {\n    scanf(\"%s\", in);\n    if (strlen(in) == 4)\n      if (in[3] == 'S')\n        b[8]++;\n      else\n        b[0]++;\n    else if (strlen(in) == 3)\n      if (in[2] == 'S')\n        b[7]++;\n      else\n        b[1]++;\n    else if (strlen(in) == 2)\n      if (in[1] == 'S')\n        b[6]++;\n      else\n        b[2]++;\n    else if (in[0] == 'S')\n      b[5]++;\n    else if (in[0] == 'M')\n      b[4]++;\n    else\n      b[3]++;\n  }\n  int sum = 0;\n  for (i = 0; i < 9; i++) sum += abs(a[i] - b[i]);\n  printf(\"%d\\n\", sum / 2);\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nls1 = list()\nls2 = list()\nls1div = list()\nls2div = list()\ncount = 0\nfor i in range(0,n):\n    ls1.append(input())\nfor i in range(0,n):\n    ls2.append(input())\n \nfor i in range(1,5):\n    ls1div.append([x[-1] for x in ls1 if len(x) == i])\n    ls2div.append([x[-1] for x in ls2 if len(x) == i])\n    count += abs(ls1div[i-1].count('S')-ls2div[i-1].count('S'))+abs(ls1div[i-1].count('M')-ls2div[i-1].count('M'))+abs(ls1div[i-1].count('L')-ls2div[i-1].count('L'))\n    \nprint(int(count/2))"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long t, i, j, k, l, m, e, n, p, q, r, s = 0, a, b, c, d, ans = 0;\n  cin >> n;\n  vector<string> A(n);\n  vector<string> B(n);\n  map<string, long long> mp;\n  for (i = 0; i < n; i++) {\n    cin >> A[i];\n    mp[A[i]]++;\n  }\n  for (i = 0; i < n; i++) cin >> B[i];\n  sort(A.begin(), A.end());\n  sort(B.begin(), B.end());\n  long long flag = 0;\n  for (i = 0; i < n; i++) {\n    if (A[i] != B[i]) {\n      flag = 1;\n      break;\n    }\n  }\n  if (!flag) {\n    cout << \"0\\n\";\n    return 0;\n  }\n  for (i = 0; i < n; i++) {\n    if (mp[B[i]] > 0) {\n      mp[B[i]]--;\n    } else {\n      ans++;\n    }\n  }\n  cout << ans << endl;\n}\n"
        },
        {
            "language": 3,
            "solution": "num = int(input())\nold, new = list(), list()\n\nfor i in range(num):\n    old.append(input())\n\nfor i in range(num):\n    new.append(input())\n\nold_map = {i: 0 for i in old}\nnew_map = {i: 0 for i in new}\n\nfor i in range(num):\n    old_map[old[i]] += 1\n    new_map[new[i]] += 1\n\n#old_map = sorted(old_map.items(), key = lambda item: return len(item[0]))\n#new_map = sorted(new_map.items(), key = lambda item: return len(item[0]))\n\nans = num\n\nfor i in old_map.items():\n    try:\n        ans -= min(i[1], new_map[i[0]])\n    except:\n        pass\n\nprint(ans)\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.lang.*;\nimport java.io.*;\n\npublic class CodehorsesTShirt {\n\n    public static void main(String args[]) throws IOException {\n        FastReader in = new FastReader();\n        OutputStream outputStream = System.out;\n        PrintWriter out = new PrintWriter(outputStream);\n        Task.solve(in, out);\n        out.close();\n    }\n\n    static class Task {\n\n        public static void solve(FastReader in, PrintWriter out) {\n            int n = in.nextInt();\n            HashMap<String , Integer> hm1 = new HashMap<>();\n            HashMap<String , Integer> hm2 = new HashMap<>();\n\n            for(int i=0;i<n;i++){\n                String val = in.next();\n                if(hm1.containsKey(val)){\n                    hm1.put(val, hm1.get(val)+1);\n                }else{\n                    hm1.put(val,1);\n                }\n            }\n\n            for(int i=0;i<n;i++){\n                String val = in.next();\n                if(hm1.containsKey(val)){\n                    int x = hm1.get(val);\n                    if(x==1){\n                        hm1.remove(val);\n                    }else{\n                        hm1.put(val,hm1.get(val)-1);\n                    }\n                }else{\n                    if(hm2.containsKey(val)){\n                        hm2.put(val, hm2.get(val)+1);\n                    }else{\n                        hm2.put(val,1);\n                    }\n                }\n            }\n            int ans = 0;\n            for(Map.Entry<String , Integer> row: hm1.entrySet()){\n                ans += row.getValue();\n            }\n            System.out.println(ans);\n\n        }\n    }\n\n    static class FastReader {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public FastReader() {\n            br = new BufferedReader(new\n                    InputStreamReader(System.in));\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine() {\n            String str = \"\";\n            try {\n                str = br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nly=[]\nty=[]\nr=0\nfor i in range(n):\n        x=input()\n        ly.append(x)\nfor i in range(n):\n        y=input()\n        ty.append(y)\nfor i in range(n):\n        if ty[i] not in ly:\n                r=r+1\n        else:\n                ly.remove(ty[i])\nprint(r)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nchar s1[205][20], s2[205][20];\nbool mark1[205], mark2[205];\nint main() {\n  int n;\n  scanf(\"%d\", &n);\n  for (int i = 0; i < n; i++) scanf(\"%s\", s1[i]);\n  for (int i = 0; i < n; i++) {\n    mark1[i] = true;\n    mark2[i] = true;\n  }\n  for (int i = 0; i < n; i++) scanf(\"%s\", s2[i]);\n  int cnt = 0;\n  for (int i = 0; i < n; i++) {\n    for (int j = 0; j < n; j++) {\n      if (!mark2[j]) continue;\n      if (strcmp(s1[i], s2[j]) == 0) {\n        mark1[i] = mark2[j] = false;\n        cnt++;\n        break;\n      }\n    }\n  }\n  printf(\"%d\\n\", n - cnt);\n}\n"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\n\ncnt = Counter()\nn = int(input())\nfor _ in range(n):\n\tcnt[input()] += 1\nfor __ in range(n):\n\tcnt[input()] -= 1\nprint(sum(map(abs, cnt.values()))//2)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint arr[10], brr[10];\nint a1[5], b1[5];\nint main() {\n  int n;\n  cin >> n;\n  vector<string> s[5], a, b;\n  int i, j;\n  int ar[101], br[101];\n  for (i = 0; i < 10; i++) arr[i] = 0;\n  for (i = 0; i < n; i++) {\n    string p;\n    cin >> p;\n    a.push_back(p);\n    if (p == \"M\") {\n      arr[1]++;\n      a1[1]++;\n    } else if (p == \"S\") {\n      arr[2]++;\n      a1[1]++;\n    } else if (p == \"L\") {\n      arr[3]++;\n      a1[1]++;\n    } else if (p == \"XS\") {\n      arr[4]++;\n      a1[2]++;\n    } else if (p == \"XL\") {\n      arr[5]++;\n      a1[2]++;\n    } else if (p == \"XXS\") {\n      arr[6]++;\n      a1[3]++;\n    } else if (p == \"XXL\") {\n      arr[7]++;\n      a1[3]++;\n    } else if (p == \"XXXS\") {\n      arr[8]++;\n      a1[4]++;\n    } else if (p == \"XXXL\") {\n      arr[9]++;\n      a1[4]++;\n    }\n  }\n  for (i = 0; i < n; i++) {\n    string p;\n    cin >> p;\n    b.push_back(p);\n    if (p == \"M\") {\n      brr[1]++;\n      b1[1]++;\n    } else if (p == \"S\") {\n      brr[2]++;\n      b1[1]++;\n    } else if (p == \"L\") {\n      brr[3]++;\n      b1[1]++;\n    } else if (p == \"XS\") {\n      brr[4]++;\n      b1[2]++;\n    } else if (p == \"XL\") {\n      brr[5]++;\n      b1[2]++;\n    } else if (p == \"XXS\") {\n      brr[6]++;\n      b1[3]++;\n    } else if (p == \"XXL\") {\n      brr[7]++;\n      b1[3]++;\n    } else if (p == \"XXXS\") {\n      brr[8]++;\n      b1[4]++;\n    } else if (p == \"XXXL\") {\n      brr[9]++;\n      b1[4]++;\n    }\n  }\n  int ans = 0;\n  for (i = 1; i < 10; i++) {\n    if (brr[i] > 0 && arr[i] < brr[i]) {\n      ans += abs(brr[i] - arr[i]);\n    }\n  }\n  cout << ans << '\\n';\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\nimport java.io.IOException;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskA solver = new TaskA();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class TaskA {\n        public void solve(int testNumber, InputReader in, PrintWriter out) {\n            int n = in.ni();\n            int[] ar1 = new int[9];\n            int[] ar2 = new int[9];\n            for (int i = 0; i < n; ++i) {\n                String x = in.next();\n                if (x.equals(\"S\")) ar1[0]++;\n                else if (x.equals(\"L\")) ar1[1]++;\n                else if (x.equals(\"M\")) ar1[2]++;\n                else if (x.equals(\"XS\")) ar1[3]++;\n                else if (x.equals(\"XL\")) ar1[4]++;\n                else if (x.equals(\"XXS\")) ar1[5]++;\n                else if (x.equals(\"XXL\")) ar1[6]++;\n                else if (x.equals(\"XXXS\")) ar1[7]++;\n                else ar1[8]++;\n            }\n            for (int i = 0; i < n; ++i) {\n                String x = in.next();\n                if (x.equals(\"S\")) ar2[0]++;\n                else if (x.equals(\"L\")) ar2[1]++;\n                else if (x.equals(\"M\")) ar2[2]++;\n                else if (x.equals(\"XS\")) ar2[3]++;\n                else if (x.equals(\"XL\")) ar2[4]++;\n                else if (x.equals(\"XXS\")) ar2[5]++;\n                else if (x.equals(\"XXL\")) ar2[6]++;\n                else if (x.equals(\"XXXS\")) ar2[7]++;\n                else ar2[8]++;\n            }\n            int count = 0;\n            for (int i = 0; i < 9; ++i) {\n                count += Math.abs(ar1[i] - ar2[i]);\n            }\n            out.print(count / 2);\n        }\n\n    }\n\n    static class InputReader {\n        public BufferedReader reader;\n        public StringTokenizer tokenizer;\n\n        public InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\n            tokenizer = null;\n        }\n\n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        public int ni() {\n            return Integer.parseInt(next());\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 1,
            "solution": "n = input()\nt1=[0]*9\nwyn = 0\na = ''\nfor x in range(0,n,+1):\n    a = str(raw_input())\n    if a == 'S':\n        t1[0] += 1\n    elif a == 'M':\n        t1[1] += 1\n    elif a == 'L':\n        t1[2] += 1\n    elif a == 'XS':\n        t1[3] += 1\n    elif a == 'XL':\n        t1[4] += 1\n    elif a == 'XXS':\n        t1[5] += 1\n    elif a == 'XXL':\n        t1[6] += 1\n    elif a == 'XXXS':\n        t1[7] += 1\n    elif a == 'XXXL':\n        t1[8] += 1\nfor x in range(0,n,+1):\n    a = str(raw_input())\n    if a == 'S':\n        t1[0] -= 1\n    elif a == 'M':\n        t1[1] -= 1\n    elif a == 'L':\n        t1[2] -= 1\n    elif a == 'XS':\n        t1[3] -= 1\n    elif a == 'XL':\n        t1[4] -= 1\n    elif a == 'XXS':\n        t1[5] -= 1\n    elif a == 'XXL':\n        t1[6] -= 1\n    elif a == 'XXXS':\n        t1[7] -= 1\n    elif a == 'XXXL':\n        t1[8] -= 1\nfor x in range(0, len(t1), +1):\n    if t1[x] < 0:\n        wyn += abs(t1[x])\nprint wyn"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na, b = {}, {}\nfor i in range(0, n):\n    s = input()\n    a[s] = a[s] + 1 if s in a else 1\nfor i in range(0, n):\n    s = input()\n    b[s] = b[s] + 1 if s in b else 1\n\nprint(sum(map(lambda t: abs(a.get(t, 0) - b.get(t, 0)),\n               ['M', 'S', 'L', 'XS', 'XL', 'XXS', 'XXL', 'XXXS', 'XXXL'])) // 2)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nL = [\"M\", \"S\", \"XS\", \"XXS\", \"XXXS\", \"L\", \"XL\", \"XXL\", \"XXXL\"]\nL1 = []\ndA = {}\ndB = {}\nfor i in L:\n    dA[i] = 0\n    dB[i] = 0\nfor i in range(n):\n    x = input()\n    dA[x] += 1\nfor i in range(n):\n    x = input()\n    dB[x] += 1\ncount = 0\nfor i in L:\n    x = dB[i] - dA[i]\n    if x > 0:\n        count += x\nprint(count)"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\nimport static java.lang.Math.*;\npublic class mm {\n\n\n    public static void main(String[] args) throws IOException {\n        int n;\n        Scanner in=new Scanner(System.in);\n        n=in.nextInt();\n        Map<String,Integer> ma1=new HashMap<String,Integer>();\n        String s=\"\";\n        for(int i=1;i<=n;i++)\n        {\n            s=in.next();\n            int val;\n            if(ma1.get(s)==null)\n            {\n                val=1;\n            }\n            else val=ma1.get(s)+1;\n            ma1.put(s,val);\n        }\n        for(int i=1;i<=n;i++)\n        {\n            s=in.next();\n            int val;\n            if(ma1.get(s)==null)\n            {\n                val=-1;\n            }\n            else val=ma1.get(s)-1;\n            ma1.put(s,val);\n        }\n        int res=0;\n        for(Map.Entry<String,Integer> p:ma1.entrySet())\n        {\n            String key=p.getKey();\n            int val=p.getValue();\n            if(val>0)res+=val;\n        }\n        System.out.println(res);\n\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "r = int(input())\na = [*(input()for _ in range(r))]\nans = 0\nfor _ in range(r):\n    try:\n        a.remove(input())\n    except:\n        ans += 1\nprint(ans)"
        },
        {
            "language": 1,
            "solution": "n=int(raw_input())\ntemp=[]\ntt=[]\nfor i in xrange(n):\n    st=raw_input()\n    temp.append(st)\nfor i in xrange(n):\n    ss=raw_input()\n    if ss in temp:\n        temp.remove(ss)\nprint len(temp)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = []\nb = []\nfor i in range(0,n):\n    a.append(str(input()))\nfor i in range(0,n):\n    b.append(str(input()))\nc = 0\nfor i in range(0,n):\n    if a[i] in b:\n        b.pop(b.index(a[i]))\n        c = c + 1\nprint(len(a)-c)"
        },
        {
            "language": 4,
            "solution": "import java.awt.Point;\nimport java.util.*;\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.*;\nimport java.util.*;\n\npublic class Main {\n\t//////\n\tstatic class FastReader {\n\t\tBufferedReader br;\n\t\tStringTokenizer st;\n\n\t\tpublic FastReader() {\n\t\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t\t}\n\n\t\tString next() {\n\t\t\twhile (st == null || !st.hasMoreElements()) {\n\t\t\t\ttry {\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tdouble nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tString nextLine() {\n\t\t\tString str = \"\";\n\t\t\ttry {\n\t\t\t\tstr = br.readLine();\n\t\t\t} catch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\treturn str;\n\t\t}\n\t}\n\n\t//////\n\tpublic static long modularExponentiation(long x, long n, long M) {\n\t\tlong result = 1;\n\t\twhile (n > 0) {\n\t\t\tif (n % 2 == 1)\n\t\t\t\tresult = (result * x) % M;\n\t\t\tx = (x * x) % M;\n\t\t\tn = n / 2;\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic static long modularExponentiation1(long x, long n) {\n\t\tlong result = 1;\n\t\twhile (n > 0) {\n\t\t\tif (n % 2 == 1)\n\t\t\t\tresult = (result * x);\n\t\t\tx = (x * x);\n\t\t\tn = n / 2;\n\t\t}\n\t\treturn result;\n\t}\n\n\t/////\n\n\tpublic static void main(String[] args) throws IOException {\n\n\t\tFastReader scan = new FastReader();\n\t\tPrintWriter pw = new PrintWriter(System.out);\n\n\t\tint N = scan.nextInt();\n\t\tString[] A = new String[N];\n\t\tString[] B = new String[N];\n\n\t\tfor (int i = 0; i < N; i++) {\n\t\t\tA[i] = scan.next();\n\t\t}\n\t\tfor (int i = 0; i < N; i++) {\n\t\t\tB[i] = scan.next();\n\t\t}\n\t\t\n\t\tboolean[] visited=new boolean[N];\n\t\tArrays.sort(A);\n\t\tArrays.sort(B);\n\t\t\n\t\t\n\t\t\n//\t\tlong count=0;\n//\t\tfor(int i=0;i<N;i++){\n//\t\t\tif(!(A[i].equals(B[i]))){\n//\t\t\t\tcount++;\n//\t\t\t}\n//\t\t}\n\t\t\n\t\t//System.out.println(count);\n\t\tArrays.fill(visited,false);\n\t\tboolean flag=false;long count=0;\n\t\tfor(int i=0;i<N;i++){\n\t\t\tflag=false;\n\t\t\tfor(int j=0;j<N;j++){\n\t\t\t\tif(visited[j]==false&&B[i].equals(A[j])){\n\t\t\t\t\tflag=true;\n\t\t\t\t\tvisited[j]=true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(flag==false){\n\t\t\t\tfor(int j=0;j<N;j++){\n\t\t\t\t\tif(visited[j]==false&&B[i].length()==A[j].length()){\n\t\t\t\t\t\tvisited[j]=true;\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tArrays.fill(visited,false);\n\t\tflag=false;long count1=0;\n\t\tfor(int i=0;i<N;i++){\n\t\t\tflag=false;\n\t\t\tfor(int j=0;j<N;j++){\n\t\t\t\tif(visited[j]==false&&B[j].equals(A[i])){\n\t\t\t\t\tflag=true;\n\t\t\t\t\tvisited[j]=true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(flag==false){\n\t\t\t\tfor(int j=0;j<N;j++){\n\t\t\t\t\tif(visited[j]==false&&B[j].length()==A[i].length()){\n\t\t\t\t\t\tvisited[j]=true;\n\t\t\t\t\t\tcount1++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t\n\t\tSystem.out.println(Math.min(count,count1));\n\n\t\tpw.close();\n\t}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n;\nstring a[110], b[110];\nmap<string, int> dem;\nint main() {\n  cin >> n;\n  for (int i = 1; i <= n; i++) {\n    cin >> a[i];\n    dem[a[i]]++;\n  }\n  for (int i = 1; i <= n; i++) {\n    cin >> b[i];\n    dem[b[i]]--;\n  }\n  int res = 0;\n  for (int i = 1; i <= n; i++) {\n    res += max(dem[a[i]], 0);\n    dem[a[i]] = 0;\n  }\n  cout << res;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\npublic class test {\n\n\tpublic static void main(String[] args) throws IOException{\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\t//StringTokenizer st = new StringTokenizer(br.readLine());\n\t\tint n = Integer.parseInt(br.readLine());\n\t\tString [] arr = new String[n];\n\t\tString [] brr = new String[n];\n\t\tfor(int i =0;i<n;i++){\n\t\t\tarr[i] = br.readLine();\n\t\t}\n\t\tfor(int j = 0;j<n;j++){\n\t\t\tbrr[j] = br.readLine();\n\t\t}\n\t\tint count = 0;\n\t\tfor(int i = 0;i<n;i++){\n\t\t\tfor(int j = 0;j<n;j++){\n\t\t\t\tif(arr[i].equals(brr[j])){\n\t\t\t\t\tcount++;\n\t\t\t\t\tarr[i] = \"\";\n\t\t\t\t\tbrr[j] = \"\";\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(n-count);\n\t}\n}\n"
        },
        {
            "language": 1,
            "solution": "#!/usr/bin/env python2\n\"\"\"\nThis file is part of https://github.com/cheran-senthil/PyRival\nCopyright 2019 Cheran Senthilkumar <hello@cheran.io>\n\n\"\"\"\nfrom __future__ import division, print_function\n\nimport itertools\nimport os\nimport sys\nfrom atexit import register\nfrom collections import Counter\nfrom io import BytesIO\n\n\nclass dict(dict):\n    \"\"\" dict() -> new empty dictionary \"\"\"\n\n    def items(self):\n        \"\"\" D.items() -> a set-like object providing a view on D's items \"\"\"\n        return dict.iteritems(self)\n\n    def keys(self):\n        \"\"\" D.keys() -> a set-like object providing a view on D's keys \"\"\"\n        return dict.iterkeys(self)\n\n    def values(self):\n        \"\"\" D.values() -> an object providing a view on D's values \"\"\"\n        return dict.itervalues(self)\n\n\ndef gcd(x, y):\n    \"\"\" greatest common divisor of x and y \"\"\"\n    while y:\n        x, y = y, x % y\n    return x\n\n\nrange = xrange\n\nfilter = itertools.ifilter\nmap = itertools.imap\nzip = itertools.izip\n\nsys.stdin = BytesIO(os.read(0, os.fstat(0).st_size))\nsys.stdout = BytesIO()\nregister(lambda: os.write(1, sys.stdout.getvalue()))\n\ninput = lambda: sys.stdin.readline().rstrip('\\r\\n')\n\n\ndef main():\n    n = int(input())\n    a = Counter(input() for _ in range(n))\n    b = Counter(input() for _ in range(n))\n\n    common = a & b\n    a -= common\n\n    print(len(list(a.elements())))\n\n\nif __name__ == '__main__':\n    main()\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, cnt = 0;\n  string s1[105], s2[105];\n  cin >> n;\n  for (int i = 0; i < n; i++) cin >> s1[i];\n  for (int i = 0; i < n; i++) cin >> s2[i];\n  for (int i = 0; i < n; i++) {\n    for (int j = 0; j < n; j++) {\n      if (s1[i].find(s2[j]) == 0) {\n        cnt++;\n        s2[j] = '5';\n        break;\n      }\n    }\n  }\n  cout << n - cnt;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 1e5 + 10;\nint num[4][3], num2[4][3];\nchar s[100];\nint mp[100000];\nint main() {\n  mp['S'] = 0;\n  mp['M'] = 1;\n  mp['L'] = 2;\n  int n;\n  scanf(\"%d\", &n);\n  for (int i = 0; i < n; i++) {\n    scanf(\"%s\", s);\n    int len = strlen(s), cnt = 0;\n    for (int j = 0; j < len; j++) {\n      if (s[j] == 'X')\n        cnt++;\n      else\n        num[cnt][mp[s[j]]]++;\n    }\n  }\n  for (int i = 0; i < n; i++) {\n    scanf(\"%s\", s);\n    int len = strlen(s), cnt = 0;\n    for (int j = 0; j < len; j++) {\n      if (s[j] == 'X')\n        cnt++;\n      else\n        num2[cnt][mp[s[j]]]++;\n    }\n  }\n  int sum = 0;\n  for (int i = 0; i < 4; i++) {\n    for (int j = 0; j < 3; j++) {\n      num[i][j] -= min(num[i][j], num2[i][j]);\n      sum += num[i][j];\n    }\n  }\n  printf(\"%d\\n\", sum);\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class DIV46 {\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tScanner s = new Scanner(System.in);\n\t\tint n = s.nextInt();\n\t\tArrayList<String> ll = new ArrayList<>();\n\t\tArrayList<String> l = new ArrayList<>();\n\n\t\tString[] str = new String[n];\n\t\tString[] st = new String[n];\n\t\tString temp;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tstr[i] = s.next();\n            ll.add(str[i]);\n\t\t}\n\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tst[i] = s.next();\n\t\t\tif(ll.contains(st[i])) {\n\t\t\t\tll.remove(st[i]);\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(ll.size());\n\t\t\n\t}\n\n}\n"
        },
        {
            "language": 3,
            "solution": "#def binarySearch(alist, item):\n\t#first=0\n\t#last=len(alist)-1\n\t#found = False\n\t#while first<=last and not found:\n\t\t#midpoint = (first + last)//2\n\t\t#if alist[midpoint] == item:\n\t\t\t#found = True\n\t\t#else:\n\t\t\t#if item < alist[midpoint]:\n\t\t\t\t#last = midpoint-1\n\t\t\t#else:\n\t\t\t\t#first = midpoint+1\n\n\t#return found, midpoint\n\nn=int(input())\na=[]\nb=[]\nfor i in range(n):\n\ta.append(input())\nfor j in range(n):\n\ts=input()\n#\tg=binarySearch(a, s)\n\t#print(g)\n\tif s in a:\n\t\ta.remove(s)\nprint(len(a))\n\t\t\n    "
        },
        {
            "language": 4,
            "solution": "/*\n * @author romit17\n */\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.InputMismatchException;\n\npublic class A1000{\n    \n    void solve() throws IOException {\n        PrintWriter out = new PrintWriter(System.out);\n        StringBuilder sb = new StringBuilder(\"\");        \n        int n = ni();\n        HashMap<String,Integer> a = new HashMap<>();\n        HashSet<String> b = new HashSet<>();\n        for(int i =0;i<n;i++)\n        {\n            String ss = ns();\n            int v = a.getOrDefault(ss, 0);\n            a.put(ss, v+1);\n        }\n        int count = 0;\n        for(int i=0;i<n;i++)\n        {\n            String ss = ns();\n            if(a.containsKey(ss)&&a.get(ss)>0)\n            {\n                a.put(ss, a.get(ss)-1);\n            }\n            else\n                count++;\n        }\n        System.out.println(count);\n    }\n    \n    public static void main(String[] args) throws IOException {\n        new A1000().solve();\n    }    \n    \n    private byte[] inbuf = new byte[1024];\n    public int lenbuf = 0, ptrbuf = 0;    \n    InputStream is = System.in;\n\n    private int readByte() {\n        if (lenbuf == -1) {\n            throw new InputMismatchException();\n        }\n        if (ptrbuf >= lenbuf) {\n            ptrbuf = 0;\n            try {\n                lenbuf = is.read(inbuf);\n            } catch (IOException e) {\n                throw new InputMismatchException();\n            }\n            if (lenbuf <= 0) {\n                return -1;\n            }\n        }\n        return inbuf[ptrbuf++];\n    }\n    \n    private boolean isSpaceChar(int c) {\n        return !(c >= 33 && c <= 126);\n    }\n    \n    private int skip() {\n        int b;\n        while ((b = readByte()) != -1 && isSpaceChar(b));\n        return b;\n    }\n    \n    private double nd() {\n        return Double.parseDouble(ns());\n    }\n    \n    private char nc() {\n        return (char) skip();\n    }\n    \n    private String ns() {\n        int b = skip();\n        StringBuilder sb = new StringBuilder();\n        while (!(isSpaceChar(b))) { // when nextLine, (isSpaceChar(b) && b != ' ')\n            sb.appendCodePoint(b);\n            b = readByte();\n        }\n        return sb.toString();\n    }\n    \n    private char[] ns(int n) {\n        char[] buf = new char[n];\n        int b = skip(), p = 0;\n        while (p < n && !(isSpaceChar(b))) {\n            buf[p++] = (char) b;\n            b = readByte();\n        }\n        return n == p ? buf : Arrays.copyOf(buf, p);\n    }\n    \n    private char[][] nm(int n, int m) {\n        char[][] map = new char[n][];\n        for (int i = 0; i < n; i++) {\n            map[i] = ns(m);\n        }\n        return map;\n    }\n    \n    private int[] na(int n) {\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = ni();\n        }\n        return a;\n    }\n    \n    private int ni() {\n        int num = 0, b;\n        boolean minus = false;\n        while ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));\n        if (b == '-') {\n            minus = true;\n            b = readByte();\n        }\n        \n        while (true) {\n            if (b >= '0' && b <= '9') {\n                num = num * 10 + (b - '0');\n            } else {\n                return minus ? -num : num;\n            }\n            b = readByte();\n        }\n    }\n    \n    private long nl() {\n        long num = 0;\n        int b;\n        boolean minus = false;\n        while ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));\n        if (b == '-') {\n            minus = true;\n            b = readByte();\n        }\n        \n        while (true) {\n            if (b >= '0' && b <= '9') {\n                num = num * 10 + (b - '0');\n            } else {\n                return minus ? -num : num;\n            }\n            b = readByte();\n        }\n    }\n    \n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, a[10][10], b[10][10];\nchar s[10];\nint main() {\n  for (; scanf(\"%d\", &n) != EOF;) {\n    for (int i = 1; i <= 4; i++)\n      for (int j = 0; j < 3; j++) a[i][j] = b[i][j] = 0;\n    for (int i = 1; i <= n; i++) {\n      scanf(\"%s\", s);\n      int len = strlen(s);\n      if (s[len - 1] == 'M')\n        a[len][0]++;\n      else if (s[len - 1] == 'S')\n        a[len][1]++;\n      else\n        a[len][2]++;\n    }\n    for (int i = 1; i <= n; i++) {\n      scanf(\"%s\", s);\n      int len = strlen(s);\n      if (s[len - 1] == 'M')\n        b[len][0]++;\n      else if (s[len - 1] == 'S')\n        b[len][1]++;\n      else\n        b[len][2]++;\n    }\n    for (int i = 1; i <= 4; i++)\n      for (int j = 0; j < 3; j++) a[i][j] -= min(a[i][j], b[i][j]);\n    int ans = 0;\n    for (int i = 1; i <= 4; i++)\n      for (int j = 0; j < 3; j++) ans += a[i][j];\n    printf(\"%d\\n\", ans);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "def go():\n    n = int(input())\n    a = []\n    b = []\n    a_d = {}\n    for i in range(n):\n        x = input()\n        a.append(x)\n        a_d.setdefault(x, 0)\n        a_d[x] += 1\n    for i in range(n):\n        x = input()\n        if x in a_d:\n            a_d[x] -= 1\n            a.remove(x)\n            if a_d[x] == 0:\n                a_d.pop(x)\n        else:\n            b.append(x)\n    if len(b) == 0:\n        return 0\n    total = 0\n    a = list(sorted(a, key=lambda x: len(x)))\n    b = list(sorted(b, key=lambda x: len(x)))\n    for i in range(len(a)):\n        if a[i] == 1:\n            total += 1\n        else:\n            for j in range(len(a[i])):\n                if a[i][j] != b[i][j]:\n                   total += 1\n    return total\nprint(go())\n"
        },
        {
            "language": 1,
            "solution": "import sys\nrange = xrange\ninput = raw_input\n\nn= int(input())\n\n\nA = []\nfor _ in range(n):\n    A.append(input())\n\nB = []\nfor _ in range(n):\n    B.append(input())\n\nA1 = [a[0] for a in A if len(a)==1]\nA2 = [a[1] for a in A if len(a)==2]\nA3 = [a[2] for a in A if len(a)==3]\nA4 = [a[3] for a in A if len(a)==4]\n\nB1 = [a[0] for a in B if len(a)==1]\nB2 = [a[1] for a in B if len(a)==2]\nB3 = [a[2] for a in B if len(a)==3]\nB4 = [a[3] for a in B if len(a)==4]\n\nA = [A1,A2,A3,A4]\nB = [B1,B2,B3,B4]\n\ntot = 0\nfor i in range(4):\n    Ai = A[i]\n    Bi = B[i]\n\n    for a in Ai:\n        if a in Bi:\n            Bi.remove(a)\n        else:\n            tot += 1\n\nprint tot\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid initialize();\nvoid find_xyz();\nvoid display();\nlong n;\nvector<string> a, b;\nvector<bool> used;\nvector<int> sz;\nint main() {\n  std::ios::sync_with_stdio(false);\n  cin.tie(NULL);\n  initialize();\n  find_xyz();\n  display();\n  return 0;\n}\nvoid initialize() {\n  cin >> n;\n  int s;\n  sz.resize(1000);\n  a.resize(n);\n  for (int i = 0; i <= n - 1; i++) {\n    s = 0;\n    cin >> a[i];\n    for (int j = 0; j <= a[i].size() - 1; j++) s += a[i][j];\n    sz[s]++;\n  }\n  b.resize(n);\n  for (int i = 0; i <= n - 1; i++) cin >> b[i];\n}\nvoid find_xyz() {\n  int s = 0, ans = 0;\n  ;\n  for (int i = 0; i <= n - 1; i++) {\n    s = 0;\n    for (int j = 0; j <= b[i].size() - 1; j++) s += b[i][j];\n    if (sz[s] > 0)\n      sz[s]--;\n    else\n      ans++;\n  }\n  cout << ans;\n}\nvoid display() {}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) throws Exception {\n\t\tScanner scan = new Scanner(System.in);\n\t\tint n = scan.nextInt();\n\t\tString[] str1 = new String[n];\n\t\tString[] str2 = new String[n];\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tstr1[i] = scan.next();\n\t\t\t//System.out.println(str1[i]);\n\t\t}\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tstr2[i] = scan.next();\n\t\t\t//System.out.println(str2[i]);\n\t\t}\n\t\t\n\t\tint ans = 0; \n\t\tfor(int i = 0; i < n; i++){\n\t\t\tfor(int k = 0; k < n; k++){\n\t\t\t\tif(str1[i].equals(str2[k])){\n\t\t\t\t\tans++;\n\t\t\t\t\tstr1[i] = \"2\";\n\t\t\t\t\tstr2[k] = \"3\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(n-ans);\n\t}\t\n}\n"
        },
        {
            "language": 3,
            "solution": "class CodeforcesTask1000ASolution:\n    def __init__(self):\n        self.result = ''\n        self.n = 0\n        self.prev = []\n        self.curr = []\n\n    def read_input(self):\n        self.n = int(input())\n        for x in range(self.n):\n            self.prev.append(input())\n        for x in range(self.n):\n            self.curr.append(input())\n\n    def process_task(self):\n        sizes = [\"M\", \"L\", \"S\", \"XL\", \"XS\", \"XXL\", \"XXS\", \"XXXL\", \"XXXS\"]\n        from_s = [self.prev.count(x) for x in sizes]\n        to_s = [self.curr.count(x) for x in sizes]\n        needed = [abs(to_s[x] - from_s[x]) for x in range(len(sizes))]\n        c = sum(needed[:3]) // 2 + needed[3] + needed[5] + needed[7]\n        self.result = str(c)\n\n    def get_result(self):\n        return self.result\n\n\nif __name__ == \"__main__\":\n    Solution = CodeforcesTask1000ASolution()\n    Solution.read_input()\n    Solution.process_task()\n    print(Solution.get_result())\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.io.BufferedWriter;\nimport java.util.InputMismatchException;\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.io.Writer;\nimport java.io.OutputStreamWriter;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        OutputWriter out = new OutputWriter(outputStream);\n        ACodehorsesTShirts solver = new ACodehorsesTShirts();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class ACodehorsesTShirts {\n        public void solve(int testNumber, InputReader in, OutputWriter out) {\n            int n = in.nextInt();\n            String[] s1 = new String[n];\n            String[] s2 = new String[n];\n            //O(n^2)\n//        for(int i = 0; i < n; ++i)\n//            s1[i] = in.next();\n//        for(int i = 0; i < n; ++i)\n//            s2[i] = in.next();\n//\n//        Arrays.sort(s1);\n//        Arrays.sort(s2);\n//\n//        int count = n;\n//        for(int i = 0; i < n; ++i){\n//            for(int j = 0; j < n; ++j) {\n//                if(s1[i].equals(s2[j])) {\n//                    s2[j] = \"\";\n//                    count--;\n//                    break;\n//                }\n//            }\n//        }\n//        out.print(count);\n\n            //alternative solution\n            ArrayList<String> list = new ArrayList<>();\n            for (int i = 0; i < n; ++i)\n                list.add(in.next());\n            for (int i = 0; i < n; ++i) {\n                String s = in.next();\n                if (list.contains(s))\n                    list.remove(s);\n            }\n            out.print(list.size());\n        }\n\n    }\n\n    static class OutputWriter {\n        private final PrintWriter writer;\n\n        public OutputWriter(OutputStream outputStream) {\n            writer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));\n        }\n\n        public OutputWriter(Writer writer) {\n            this.writer = new PrintWriter(writer);\n        }\n\n        public void print(Object... objects) {\n            for (int i = 0; i < objects.length; i++) {\n                if (i != 0) {\n                    writer.print(' ');\n                }\n                writer.print(objects[i]);\n            }\n        }\n\n        public void close() {\n            writer.close();\n        }\n\n    }\n\n    static class InputReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private InputReader.SpaceCharFilter filter;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int read() {\n            if (numChars == -1) {\n                throw new InputMismatchException();\n            }\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (numChars <= 0) {\n                    return -1;\n                }\n            }\n            return buf[curChar++];\n        }\n\n        public int nextInt() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do {\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public String nextString() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            StringBuilder res = new StringBuilder();\n            do {\n                if (Character.isValidCodePoint(c)) {\n                    res.appendCodePoint(c);\n                }\n                c = read();\n            } while (!isSpaceChar(c));\n            return res.toString();\n        }\n\n        public boolean isSpaceChar(int c) {\n            if (filter != null) {\n                return filter.isSpaceChar(c);\n            }\n            return isWhitespace(c);\n        }\n\n        public static boolean isWhitespace(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        public String next() {\n            return nextString();\n        }\n\n        public interface SpaceCharFilter {\n            public boolean isSpaceChar(int ch);\n\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\n\nseta = []\nsetb = []\n\nfor i in range(n):\n\tseta.append(input())\n\nfor i in range(n):\n\tsetb.append(input())\n\nans = 0;\n\nfor sa in seta:\n\tif (sa in setb):\n\t\tsetb.remove(sa);\n\telse:\n\t\tans+=1;\n\nprint(ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstruct p {\n  int x, y, dis, cn;\n} c[100001];\nint n, m, s, t = 5000, num, tot, tot1;\nint h[5001], d1[5001], pre[5001];\nbool use[5001], use1[5001];\nint D[101][101];\nstring a[101], b[101], aa[101], bb[101];\nint main() {\n  cin >> n;\n  memset(D, 1, sizeof(D));\n  for (int i = 1; i <= n; ++i) cin >> a[i];\n  sort(a + 1, a + 1 + n);\n  for (int i = 1; i <= n; ++i) cin >> b[i];\n  sort(b + 1, b + 1 + n);\n  for (int i = 1; i <= n; ++i)\n    for (int j = 1; j <= n; ++j)\n      if (a[i] == b[j] && !use[i] && !use1[j]) use[i] = use1[j] = 1;\n  for (int i = n; i >= 1; --i) {\n    if (!use[i]) aa[++tot] = a[i];\n    if (!use1[i]) bb[++tot1] = b[i];\n  }\n  int ans = 0;\n  for (int i = 1; i <= tot; ++i)\n    if (aa[i] != bb[i]) ++ans;\n  cout << ans << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid fast() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n}\nint main() {\n  fast();\n  int n;\n  cin >> n;\n  map<string, int> m;\n  for (int i = 0; i < n; ++i) {\n    string temp;\n    cin >> temp;\n    m[temp]++;\n  }\n  long long c = 0;\n  for (int i = 0; i < n; ++i) {\n    string temp;\n    cin >> temp;\n    if (m[temp] > 0)\n      m[temp]--;\n    else\n      c++;\n  }\n  cout << c << '\\n';\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class Main \n{\n\tpublic static void main(String[] args) \n\t{\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tsc.nextLine();\n\t\t\n\t\tHashMap<String, Integer> g = new HashMap<String, Integer>();\n\t\tHashMap<String, Integer> r = new HashMap<String, Integer>();\n\t\t\n\t\tfor(int i=0; i<n; i++)\n\t\t{\n\t\t\tString str = sc.nextLine();\n\t\t\tif(!g.containsKey(str))\n\t\t\t\tg.put(str, 1);\n\t\t\telse\n\t\t\t\tg.put(str, g.get(str)+1);\n\t\t}\n\t\t\n\t\tfor(int i=0; i<n; i++)\n\t\t{\n\t\t\tString str = sc.nextLine();\n\t\t\tif(g.containsKey(str) && g.get(str)>0)\n\t\t\t\tg.put(str, g.get(str)-1);\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(r.containsKey(str))\n\t\t\t\t\tr.put(str, r.get(str)+1);\n\t\t\t\telse\n\t\t\t\t\tr.put(str, 1);\n\t\t\t}\n\t\t}\n\t\tIterator iter = r.entrySet().iterator();\n\t\tint count = 0;\n\t\twhile(iter.hasNext())\n\t\t\tcount += (Integer)((Map.Entry)iter.next()).getValue();\n\t\tSystem.out.println(count);\n\t}\n}"
        },
        {
            "language": 3,
            "solution": "dct1 = {'M':0, 'S':0, 'L':0, 'XS':0, 'XL':0,'XXS':0, 'XXL':0,'XXXS':0, 'XXXL':0}\ndct2 = {'M':0, 'S':0, 'L':0, 'XS':0, 'XL':0,'XXS':0, 'XXL':0,'XXXS':0, 'XXXL':0}\nr = int(input())\n\nfor i in range(0, r):\n    s = input()\n    dct1[s] += 1\nfor i in range(0, r):\n    s = input()\n    dct2[s] += 1\n\nsu = 0\n\nfor k in dct1.keys():\n    if dct1[k]>dct2[k]:\n        su += dct1[k]-dct2[k]\n\nprint(su)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\n\na = []\nb = []\n\nfor i in range(n):\n    a.append(input())\n\nfor i in range(n):\n    b.append(input())\n\nseconds = n\n\nfor i in range(n):\n    if a[i] in b:\n        index = b.index(a[i])\n        del b[index]\n        seconds -= 1\n\nprint(seconds)"
        },
        {
            "language": 1,
            "solution": "from collections import Counter as mset\nN = int(input())\na = []\nb = []\nfor i in range(N):\n   a.append(raw_input())\nfor i in range(N):\n   b.append(raw_input())\nprint(N - len(list((mset(a) & mset(b)).elements())))"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nbool comp(string &a, string &b) {\n  if (a.length() > b.length())\n    return a.length() > b.length();\n  else if (a.length() == b.length() && a > b)\n    return a > b;\n  return a > b;\n}\nvoid show_vec(vector<pair<long long, long long> > v) {\n  for (int i = 0; i < v.size(); i++)\n    cout << v[i].first << \" \" << v[i].second << \"\\n\";\n  ;\n  cout << \"\\n\";\n}\nlong long gcd(long long a, long long b) {\n  if (a == 0) return b;\n  return gcd(b % a, a);\n}\nlong long lcm(long long a, long long b) { return ((a * b) / gcd(a, b)); }\nvoid solve() {\n  long long n;\n  string tmp;\n  cin >> n;\n  map<string, long long> m, m1;\n  for (int i = 0; i < n; i++) {\n    cin >> tmp;\n    m[tmp]++;\n  }\n  for (int i = 0; i < n; i++) {\n    cin >> tmp;\n    m1[tmp]++;\n  }\n  long long ans = 0;\n  for (auto a : m1) {\n    if (m.count(a.first) > 0 && a.second > m[a.first]) {\n      ans += (a.second - m[a.first]);\n    } else if (m.count(a.first) == 0)\n      ans += a.second;\n  }\n  cout << ans << \"\\n\";\n}\nint main() {\n  ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);\n  int t = 1;\n  while (t--) {\n    solve();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "\nn=int(input())\na,b=[],[]\nfor _ in range(n):\n    a.append(input())\nfor _ in range(n):\n    b.append(input())\n\nfor i in a:\n    if i in b:\n        b.remove(i)\n    \nprint(len(b))"
        },
        {
            "language": 3,
            "solution": "import sys\nimport collections\n\n\ndef readArray(type= int):\n    line = input()\n    return [type(x) for x in line.split()]\n\ndef getFreq(array):\n    freq = collections.defaultdict(int)\n    for x in array:\n        freq[x]+= 1\n\n    return freq\n\ndef solve():\n    cost = 0\n\n    n=  int(input())\n    ap = [input() for x in range(n)]\n    ac = [input() for x in range(n)]\n\n    apf = getFreq(ap)\n    acf = getFreq(ac)\n\n    for k in acf.keys():\n        # print(apf[k], acf[k])\n        diff = abs(apf[k] - acf[k])\n\n        if apf[k] < acf[k]:\n            cost += diff\n            apf[k]-= diff\n\n    print(cost)\n\nif __name__ == '__main__':\n    # sys.stdin = open('input.txt')\n    solve()\n\n"
        },
        {
            "language": 4,
            "solution": "\n\nimport java.util.*;\nimport java.io.*;\n\npublic class Solution2 {\n\n    private void solve() throws IOException {\n        int n = in.nextInt();\n        String[] map = {\"M\", \"S\", \"L\", \"XS\", \"XXS\", \"XXXS\", \"XL\", \"XXL\", \"XXXL\"};\n        int[] mapCont = {0, 0, 0, 0, 0, 0, 0, 0, 0};\n        for (int i = 0; i < n; i++) {\n            String next = in.next();\n            for (int j = 0; j < map.length; j++) {\n                if (map[j].equals(next)) {\n                    mapCont[j]++;\n                    break;\n                }\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            String next = in.next();\n            for (int j = 0; j < map.length; j++) {\n                if (map[j].equals(next)) {\n                    mapCont[j]--;\n                    break;\n                }\n            }\n        }\n        int ans = 0;\n        for (int i = 0; i < mapCont.length; i++) {\n            ans += Math.max(0, mapCont[i]);\n        }\n        System.out.println(ans);\n\n    }\n\n    private PrintWriter out;\n    MyScanner in;\n\n    private void run() throws IOException {\n        in = new MyScanner();\n        out = new PrintWriter(System.out);\n        solve();\n        in.close();\n        out.close();\n    }\n\n    private class MyScanner {\n        private BufferedReader br;\n        private StringTokenizer st;\n\n        public MyScanner() throws IOException {\n            this.br = new BufferedReader(new InputStreamReader(System.in));\n        }\n\n        public MyScanner(String fileTitle) throws IOException {\n            this.br = new BufferedReader(new FileReader(fileTitle));\n        }\n\n        public String nextLine() throws IOException {\n            String s = br.readLine();\n            return s == null ? \"-1\" : s;\n        }\n\n        public String next() throws IOException {\n            while (st == null || !st.hasMoreTokens()) {\n                String s = br.readLine();\n                if (s == null) {\n                    return \"-1\";\n                }\n                st = new StringTokenizer(s);\n            }\n            return st.nextToken();\n        }\n\n        public Integer nextInt() throws IOException {\n            return Integer.parseInt(this.next());\n        }\n\n        public Long nextLong() throws IOException {\n            return Long.parseLong(this.next());\n        }\n\n        public Double nextDouble() throws IOException {\n            return Double.parseDouble(this.next());\n        }\n\n        public void close() throws IOException {\n            this.br.close();\n        }\n    }\n\n    public static void main(String[] args) throws IOException {\n        Locale.setDefault(Locale.US);\n        new Solution2().run();\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na,b=[],[]\nfor i in range(n):\n\ta.append(input())\nfor i in range(n):\n\tb.append(input())\nC=['S','M','L','XL','XXL','XXXL','XS','XXS','XXXS']\nd=[]\nfor s in C:\n\tif(a.count(s)-b.count(s))<0:\n\t\td.append(-(a.count(s)-b.count(s)))\nprint(sum(d))\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst double PI = acos(-1);\nconst int mod = 1e9 + 7;\nconst long long INF = 1e18;\nconst long long MAX = 1e5 + 10, N = 1e6 + 10;\nconst int lim = 1 << 18;\nint main() {\n  ios_base::sync_with_stdio(0);\n  int n;\n  while (cin >> n) {\n    map<string, int> mp;\n    for (int i = 0; i < n; i++) {\n      string s;\n      cin >> s;\n      mp[s]++;\n    }\n    map<string, int> tmp;\n    for (int i = 0; i < n; i++) {\n      string s;\n      cin >> s;\n      if (mp[s])\n        mp[s]--;\n      else\n        tmp[s]++;\n    }\n    int cnt = 0;\n    for (map<string, int>::iterator it = tmp.begin(); it != tmp.end(); it++) {\n      for (int i = 0; i < it->second; i++) {\n        for (map<string, int>::iterator itt = mp.begin(); itt != mp.end();\n             itt++) {\n          if (!itt->second) continue;\n          if (it->first.size() == itt->first.size()) cnt++, mp[itt->first]--;\n        }\n      }\n    }\n    cout << cnt << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\n \na = [input() for _ in range(n)]\nb = [input() for _ in range(n)]\n \ncost = 0\nfor s in [\"M\", \"S\", \"XS\", \"XXS\", \"XXXS\", \"L\", \"XL\", \"XXL\", \"XXXL\"]:\n    ca = a.count(s)\n    cb = b.count(s)\n    cost += ca - min(ca, cb)\n    \nprint(cost)"
        },
        {
            "language": 3,
            "solution": "# Author: \u03c0\u03b1\n\nn = int(input())\norig, new = [], []\nfor i in range(n):\n    orig.append(input())\nfor i in range(n):\n    new.append(input())\ncp = orig[:]\n\nfor tee in cp:\n    if tee in new:\n        orig.remove(tee)\n        new.remove(tee)\norig.sort()\nnew.sort()\n\ncount = 0\nfor i in range(len(orig)):\n    if orig[i] != new[i]:\n        count += 1\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = []\nfor i in range(n):\n    s = input()\n    a.append(s)\nb = []\nfor i in range(n):\n    s = input()\n    b.append(s)\nd = dict()\nd2 = dict()\nres = 0\nfor elem in a:\n    if elem in d:\n        d[elem] += 1\n    else:\n        d[elem] = 1\nfor elem in b:\n    if elem in d2:\n        d2[elem] += 1\n    else:\n        d2[elem] = 1\nfor elem in d:\n    if elem not in d2:\n        d2[elem] = 0\n    res += min(d[elem], d2[elem])\nprint(n - res)"
        },
        {
            "language": 4,
            "solution": "///package math_codet;\nimport java.io.*;\nimport java.util.*;\n\npublic class lets_do {\n    public static void main(String[] args)\n    {\n        InputReader in=new InputReader(System.in);\n        StringBuffer str=new StringBuffer();\n        int n=in.nextInt();\n        int i=0,j=0;\n        String[] arr1=new String[n];\n        boolean[] visited=new boolean[n];\n        for(i=0;i<n;i++)\n            arr1[i]=in.next();\n        String[] arr2=new String[n];\n        for(i=0;i<n;i++)\n            arr2[i]=in.next();\n        int count=0;\n        for(i=0;i<n;i++){\n            boolean flag=false;\n            for(j=0;j<n;j++){\n                if(!visited[j] && arr2[i].equals(arr1[j])){\n                    visited[j]=true;\n                    count++;\n                    break;\n                }\n            }\n        }\n        System.out.println(n-count);\n    }\n    static class InputReader{\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n \n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n \n        public int read() {\n            if (numChars == -1)\n                throw new UnknownError();\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new UnknownError();\n                }\n                if (numChars <= 0)\n                    return -1;\n            }\n            return buf[curChar++];\n        }\n \n        public int peek() {\n            if (numChars == -1)\n                return -1;\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    return -1;\n                }\n                if (numChars <= 0)\n                    return -1;\n            }\n            return buf[curChar];\n        }\n \n        public void skip(int x) {\n            while (x-- > 0)\n                read();\n        }\n \n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n \n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n \n        public String nextString() {\n            return next();\n        }\n \n        public String next() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            StringBuffer res = new StringBuffer();\n            do {\n                res.appendCodePoint(c);\n                c = read();\n            } while (!isSpaceChar(c));\n \n            return res.toString();\n        }\n \n        public String nextLine() {\n            StringBuffer buf = new StringBuffer();\n            int c = read();\n            while (c != '\\n' && c != -1) {\n                if (c != '\\r')\n                    buf.appendCodePoint(c);\n                c = read();\n            }\n            return buf.toString();\n        }\n \n        public double nextDouble() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            double res = 0;\n            while (!isSpaceChar(c) && c != '.') {\n                if (c == 'e' || c == 'E')\n                    return res * Math.pow(10, nextInt());\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            if (c == '.') {\n                c = read();\n                double m = 1;\n                while (!isSpaceChar(c)) {\n                    if (c == 'e' || c == 'E')\n                        return res * Math.pow(10, nextInt());\n                    if (c < '0' || c > '9')\n                        throw new InputMismatchException();\n                    m /= 10;\n                    res += (c - '0') * m;\n                    c = read();\n                }\n            }\n            return res * sgn;\n        }\n \n        public boolean hasNext() {\n            int value;\n            while (isSpaceChar(value = peek()) && value != -1)\n                read();\n            return value != -1;\n        }\n \n        private boolean isSpaceChar(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n    }\n} "
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=[]\nfor i in range(n):\n    l+=[input()]\nnl=[]\nfor i in range(n):        \n    nl+=[input()]\ncount={ i : 0 for i in l}\ncount2={ i : 0 for i in nl}\nfor i in l:\n    count[i]+=1\nfor i in nl:\n    count2[i]+=1\n\nkl=[]\ncnt=0\nfor i in nl:\n    if i in l and i not in kl:\n        cnt+=min(count[i],count2[i])\n        kl+=[i]\nprint(n-cnt)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=[{},{},{},{}]\nl[0]={\n    'M': 0,\n    'L': 0,\n    'S': 0,\n}\nl[1]={\n    'XS': 0,\n    'XL': 0,\n}\nl[2]={\n    'XXS': 0,\n    'XXL': 0,\n}\nl[3]={\n    'XXXS': 0,\n    'XXXL': 0,\n}\nfor i in range(0,n):\n    b=input()\n    l[b.count('X')][b]+=1\nfor i in range(0,n):\n    b=input()\n    l[b.count('X')][b]-=1\nsc=0\nfor d in l:\n    for k,v in d.items():\n        if v>0:\n            sc+=v\nprint(sc)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  long long int n;\n  cin >> n;\n  long long int k = 2 * n;\n  string s[k];\n  long long int i;\n  vector<string> v[5], v1[5];\n  for (i = 0; i < k; i++) {\n    cin >> s[i];\n  }\n  for (i = 0; i < n; i++) {\n    v[s[i].length()].push_back(s[i]);\n  }\n  for (i = n; i < k; i++) {\n    v1[s[i].length()].push_back(s[i]);\n  }\n  string s1 = \"SLM\";\n  long long int c = 0, j;\n  for (i = 1; i <= 4; i++) {\n    map<char, long long int> m, m1;\n    for (j = 0; j < v[i].size(); j++) {\n      string s2 = v[i][j];\n      m[s2[i - 1]]++;\n    }\n    for (j = 0; j < v1[i].size(); j++) {\n      string s2 = v1[i][j];\n      m1[s2[i - 1]]++;\n    }\n    for (j = 0; j < 3; j++) {\n      if (m[s1[j]] - m1[s1[j]] > 0) {\n        c += m[s1[j]] - m1[s1[j]];\n      }\n    }\n  }\n  cout << c << endl;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  long long n;\n  cin >> n;\n  map<string, long long> ma;\n  for (long long i = 0; i < n; i++) {\n    string s;\n    cin >> s;\n    ma[s]++;\n  }\n  map<string, long long> mb;\n  for (long long i = 0; i < n; i++) {\n    string s;\n    cin >> s;\n    mb[s]++;\n  }\n  long long ans = 0;\n  for (auto it : ma) {\n    if (mb[it.first] < it.second) {\n      ans += it.second - mb[it.first];\n    }\n  }\n  cout << ans << \"\\n\";\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <typename T, typename U>\ninline void smin(T &a, U b) {\n  if (a > b) a = b;\n}\ntemplate <typename T, typename U>\ninline void smax(T &a, U b) {\n  if (a < b) a = b;\n}\ntemplate <typename T>\ninline void gn(T &first) {\n  char c, sg = 0;\n  while (c = getchar(), (c > '9' || c < '0') && c != '-')\n    ;\n  for ((c == '-' ? sg = 1, c = getchar() : 0), first = 0; c >= '0' && c <= '9';\n       c = getchar())\n    first = (first << 1) + (first << 3) + c - '0';\n  if (sg) first = -first;\n}\ntemplate <class T, class T1>\ninline void gn(T &first, T1 &second) {\n  gn(first);\n  gn(second);\n}\ntemplate <class T, class T1, class T2>\ninline void gn(T &first, T1 &second, T2 &z) {\n  gn(first);\n  gn(second);\n  gn(z);\n}\ntemplate <typename T>\ninline void print(T first) {\n  if (first < 0) {\n    putchar('-');\n    return print(-first);\n  }\n  if (first < 10) {\n    putchar('0' + first);\n    return;\n  }\n  print(first / 10);\n  putchar(first % 10 + '0');\n}\ntemplate <typename T>\ninline void println(T first) {\n  print(first), putchar('\\n');\n}\ntemplate <typename T>\ninline void printsp(T first) {\n  print(first), putchar(' ');\n}\ntemplate <class T, class T1>\ninline void print(T first, T1 second) {\n  printsp(first), println(second);\n}\ntemplate <class T, class T1, class T2>\ninline void print(T first, T1 second, T2 z) {\n  printsp(first), printsp(second), println(z);\n}\nint power(int a, int b, int m, int ans = 1) {\n  for (; b; b >>= 1, a = 1LL * a * a % m)\n    if (b & 1) ans = 1LL * ans * a % m;\n  return ans;\n}\nmap<string, int> mp;\nint main() {\n  int n;\n  gn(n);\n  char s[11];\n  for (int i = 0; i < n; i++) scanf(\"%s\", s), mp[s]++;\n  for (int i = 0; i < n; i++) scanf(\"%s\", s), mp[s]--;\n  int ans = 0;\n  for (map<string, int>::iterator it = mp.begin(); it != mp.end(); it++)\n    ans += abs(it->second);\n  println(ans >> 1);\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\n\nL1 = ['M','S','L','X']\nL2 = ['XS','XL','XX']\nL3 = ['XXS','XXL','XXX']\nL4 = ['XXXS','XXXL']\n\nS = [L1,L2,L3,L4]\nD = {}\nL = []\n\nfor _ in range(n):\n    x = input()\n    if x in D:\n        D[x] += 1\n    else:\n        D[x] = 1\n\nfor _ in range(n):\n    L.append(input())\n    \n\ns = 0\nD2 = D.copy()\n\nfor i in D:\n    D[i] = max(0,D[i]-L.count(i))\n    \n\nfor j in range(n):\n    if L[j] in D2:\n        if D2[L[j]] > 0:\n            D2[L[j]] -= 1\n            L[j] = 0\n\nfor i in L:\n    if i != 0:\n        if i in D:\n            if D[i] > 0:\n                D[i] -= 1\n            else:\n                for j in S[len(i)-1]:\n                    if D.get(j,0) > 0:\n                        D[j] -= 1\n                        s += 1\n                        break\n        else:\n            for j in S[len(i)-1]:\n                    if D.get(j,0) > 0:\n                        D[j] -= 1\n                        s += 1\n                        break\nprint(s)\n        "
        },
        {
            "language": 3,
            "solution": "n=int(input())\nli1=[]\nli2=[]\nfor i in range(n):\n\tli1.append(input())\nfor i in range(n):\n\tli2.append(input())\t\na1=max((li1.count('XXXS')-li2.count('XXXS')),0)\na2=max((li1.count('XXS')-li2.count('XXS')),0)\na3=max((li1.count('XS')-li2.count('XS')),0)\na4=max((li1.count('S')-li2.count('S')),0)\na5=max((li1.count('M')-li2.count('M')),0)\na6=max((li1.count('L')-li2.count('L')),0)\na7=max((li1.count('XL')-li2.count('XL')),0)\na8=max((li1.count('XXL')-li2.count('XXL')),0)\na9=max((li1.count('XXXL')-li2.count('XXXL')),0)\nprint(a1+a2+a3+a4+a5+a6+a7+a8+a9)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long int INF = 1e18 + 1;\nconst long long int MOD = 1000000007L;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  long long int n;\n  cin >> n;\n  vector<long long int> a(n);\n  vector<long long int> b(n);\n  string temps;\n  map<string, int> sa, sb;\n  sa[\"M\"] = 0;\n  sb[\"M\"] = 0;\n  sa[\"S\"] = 0;\n  sb[\"S\"] = 0;\n  sa[\"L\"] = 0;\n  sb[\"L\"] = 0;\n  string sax = \"\", sbx = \"\", saxx = \"\", sbxx = \"\", saxxx = \"\", sbxxx = \"\";\n  for (int i = 0; i < (n); ++i) {\n    cin >> temps;\n    switch (temps.length()) {\n      case 1:\n        sa[temps]++;\n        break;\n      case 2:\n        sax += temps;\n        break;\n      case 3:\n        saxx += temps;\n        break;\n      case 4:\n        saxxx += temps;\n        break;\n    }\n  }\n  for (int i = 0; i < (n); ++i) {\n    cin >> temps;\n    switch (temps.length()) {\n      case 1:\n        sb[temps]++;\n        break;\n      case 2:\n        sbx += temps;\n        break;\n      case 3:\n        sbxx += temps;\n        break;\n      case 4:\n        sbxxx += temps;\n        break;\n    }\n  }\n  long long int count = 0;\n  count += abs(sa[\"M\"] - sb[\"M\"]);\n  count += abs(sa[\"S\"] - sb[\"S\"]);\n  count += abs(sa[\"L\"] - sb[\"L\"]);\n  count /= 2;\n  count += abs(std::count(sax.begin(), sax.end(), 'S') -\n               std::count(sbx.begin(), sbx.end(), 'S'));\n  count += abs(std::count(saxx.begin(), saxx.end(), 'S') -\n               std::count(sbxx.begin(), sbxx.end(), 'S'));\n  count += abs(std::count(saxxx.begin(), saxxx.end(), 'S') -\n               std::count(sbxxx.begin(), sbxxx.end(), 'S'));\n  cout << count;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 100010;\nint main() {\n  int n;\n  while (cin >> n) {\n    string s;\n    vector<string> v1;\n    vector<string> v2;\n    vector<string>::iterator it;\n    for (int i = 0; i < n; i++) {\n      cin >> s;\n      v1.push_back(s);\n    }\n    for (int i = 0; i < n; i++) {\n      cin >> s;\n      v2.push_back(s);\n    }\n    int sum = 0;\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < n; j++) {\n        if (v1[i] == v2[j]) {\n          v2[j] = '0';\n          break;\n        }\n        if (j == n - 1) sum++;\n      }\n    }\n    cout << sum << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n= int(input())\na=0; coun=0\nli1=[]; li2=[]; li3=[]\nfor i in range(1,2*n+1):\n    if i<=n:\n        inp=input()\n        if len(inp)==1: li1.append(inp)\n        elif len(inp)!=1: li2.append(inp)\n        \n    elif i>n:\n        inp=input(); leng= len(inp)\n        if leng==1 and inp in li1:\n            a=0\n            b=li1.index(inp)\n            li1[b]=''\n        elif leng==1 and inp not in li1:\n            coun+=1\n        elif leng!=1 and inp in li2:\n            a=0\n            b=li2.index(inp);li2[b]=''\n        elif leng!=1 and inp not in li2:\n            coun+=1\n            \n            \nprint(coun)"
        },
        {
            "language": 3,
            "solution": "def razmery(lst1, lst2):\n    for elem in lst2:\n        if elem in lst1:\n            lst1.remove(elem)\n    return len(lst1)\n\n\nn = int(input())\na = list()\nb = list()\nfor i in range(n):\n    s = input()\n    a.append(s)\nfor j in range(n):\n    t = input()\n    b.append(t)\nprint(razmery(a, b))\n"
        },
        {
            "language": 4,
            "solution": "\n\nimport java.io.*;\nimport java.nio.charset.Charset;\nimport java.util.Comparator;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class CR46A {\n    public static void main(String[] args) throws FileNotFoundException {\n        boolean local = System.getProperty(\"ONLINE_JUDGE\") == null;\n        IOUtil io;\n        long begin = 0;\n        long end = 0;\n        if (local) {\n            io = new IOUtil(new FileInputStream(\"E:\\\\DATABASE\\\\TESTCASE\\\\CR46A.in\"), new FileOutputStream(\"E:\\\\DATABASE\\\\TESTCASE\\\\CR46A.out\"));\n            begin = System.currentTimeMillis();\n        } else {\n            io = new IOUtil(System.in, System.out);\n        }\n\n        Task task = new Task(io);\n        task.run();\n\n        if (local) {\n            end = System.currentTimeMillis();\n            io.write(String.format(\"\\ntime:%d\\n\", end - begin));\n            io.write(String.format(\"memory:%d\\n\", Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory()));\n        }\n\n        io.flush();\n    }\n\n    public static class Task implements Runnable {\n        IOUtil io;\n\n        public Task(IOUtil io) {\n            this.io = io;\n        }\n\n        @Override\n        public void run() {\n            int n = io.readInt();\n\n            Map<String, Integer> map = new HashMap<>(n);\n            for (int i = 0; i < n; i++) {\n                String s = io.readString();\n                map.put(s, map.getOrDefault(s, 0) + 1);\n            }\n\n            for (int i = 0; i < n; i++) {\n                String s = io.readString();\n                if (map.containsKey(s)) {\n                    int val = map.get(s);\n                    if (val == 1) {\n                        map.remove(s);\n                    } else {\n                        map.put(s, val - 1);\n                    }\n                }\n            }\n\n            int sum = 0;\n            for (Integer i : map.values()) {\n                sum += i;\n            }\n            io.write(sum);\n        }\n    }\n\n    public static class Mathematics {\n        /**\n         * Get the greatest common divisor of a and b\n         */\n        public static int gcd(int a, int b) {\n            return a >= b ? gcd0(a, b) : gcd0(b, a);\n        }\n\n        private static int gcd0(int a, int b) {\n            return b == 0 ? a : gcd0(b, a % b);\n        }\n\n        public static int extgcd(int a, int b, int[] coe) {\n            return a >= b ? extgcd0(a, b, coe) : extgcd0(b, a, coe);\n        }\n\n        private static int extgcd0(int a, int b, int[] coe) {\n            if (b == 0) {\n                coe[0] = 1;\n                coe[1] = 0;\n                return a;\n            }\n            int g = extgcd0(b, a % b, coe);\n            int n = coe[0];\n            int m = coe[1];\n            coe[0] = m;\n            coe[1] = n - m * (a / b);\n            return g;\n        }\n\n        /**\n         * Get the greatest common divisor of a and b\n         */\n        public static long gcd(long a, long b) {\n            return a >= b ? gcd0(a, b) : gcd0(b, a);\n        }\n\n        private static long gcd0(long a, long b) {\n            return b == 0 ? a : gcd0(b, a % b);\n        }\n\n        public static long extgcd(long a, long b, long[] coe) {\n            return a >= b ? extgcd0(a, b, coe) : extgcd0(b, a, coe);\n        }\n\n        private static long extgcd0(long a, long b, long[] coe) {\n            if (b == 0) {\n                coe[0] = 1;\n                coe[1] = 0;\n                return a;\n            }\n            long g = extgcd0(b, a % b, coe);\n            long n = coe[0];\n            long m = coe[1];\n            coe[0] = m;\n            coe[1] = n - m * (a / b);\n            return g;\n        }\n\n        /**\n         * Get y where x * y = 1 (% mod)\n         */\n        public static int inverse(int x, int mod) {\n            return pow(x, mod - 2, mod);\n        }\n\n        /**\n         * Get x^n(% mod)\n         */\n        public static int pow(int x, int n, int mod) {\n            n = mod(n, mod - 1);\n            x = mod(x, mod);\n            int bit = 31 - Integer.numberOfLeadingZeros(n);\n            long product = 1;\n            for (; bit >= 0; bit--) {\n                product = product * product % mod;\n                if (((1 << bit) & n) != 0) {\n                    product = product * x % mod;\n                }\n            }\n            return (int) product;\n        }\n\n        /**\n         * Get x % mod\n         */\n        public static int mod(int x, int mod) {\n            return x >= 0 ? x % mod : (((x % mod) + mod) % mod);\n        }\n\n        /**\n         * Get n!/(n-m)!\n         */\n        public static long permute(int n, int m) {\n            return m == 0 ? 1 : n * permute(n - 1, m - 1);\n        }\n\n        /**\n         * Put all primes less or equal to limit into primes after offset\n         */\n        public static int eulerSieve(int limit, int[] primes, int offset) {\n            boolean[] isComp = new boolean[limit + 1];\n            int wpos = offset;\n            for (int i = 2; i <= limit; i++) {\n                if (!isComp[i]) {\n                    primes[wpos++] = i;\n                }\n                for (int j = offset, until = limit / i; j < wpos && primes[j] <= until; j++) {\n                    int pi = primes[j] * i;\n                    isComp[pi] = true;\n                    if (i % primes[j] == 0) {\n                        break;\n                    }\n                }\n            }\n            return wpos - offset;\n        }\n\n        /**\n         * Round x into integer\n         */\n        public static int intRound(double x) {\n            if (x < 0) {\n                return -(int) (-x + 0.5);\n            }\n            return (int) (x + 0.5);\n        }\n\n        /**\n         * Round x into long\n         */\n        public static long longRound(double x) {\n            if (x < 0) {\n                return -(long) (-x + 0.5);\n            }\n            return (long) (x + 0.5);\n        }\n    }\n\n    public static class IOUtil {\n        private static int BUF_SIZE = 1 << 13;\n\n        private byte[] r_buf = new byte[BUF_SIZE];\n        private int r_cur;\n        private int r_total;\n        private int r_next;\n        private final InputStream in;\n        private StringBuilder temporary = new StringBuilder();\n\n        StringBuilder w_buf = new StringBuilder();\n        private final OutputStream out;\n\n        public IOUtil(InputStream in, OutputStream out) {\n            this.in = in;\n            this.out = out;\n        }\n\n        private void skipBlank() {\n            while (r_next >= 0 && r_next <= 32) {\n                r_next = read();\n            }\n        }\n\n        public int readString(char[] data, int offset, int limit) {\n            skipBlank();\n\n            int originalLimit = limit;\n            while (limit > 0 && r_next > 32) {\n                data[offset++] = (char) r_next;\n                limit--;\n                r_next = read();\n            }\n\n            return originalLimit - limit;\n        }\n\n        public String readString(StringBuilder builder) {\n            skipBlank();\n\n            while (r_next > 32) {\n                builder.append((char) r_next);\n                r_next = read();\n            }\n\n            return builder.toString();\n        }\n\n        public String readString() {\n            temporary.setLength(0);\n            return readString(temporary);\n        }\n\n        public long readUnsignedLong() {\n            skipBlank();\n\n            long num = 0;\n            while (r_next >= '0' && r_next <= '9') {\n                num = num * 10 + r_next - '0';\n                r_next = read();\n            }\n            return num;\n        }\n\n        public long readLong() {\n            skipBlank();\n\n            int sign = 1;\n            while (r_next == '+' || r_next == '-') {\n                if (r_next == '-') {\n                    sign *= -1;\n                }\n                r_next = read();\n            }\n\n            return sign == 1 ? readUnsignedLong() : readNegativeLong();\n        }\n\n        public long readNegativeLong() {\n            skipBlank();\n\n            long num = 0;\n            while (r_next >= '0' && r_next <= '9') {\n                num = num * 10 - r_next + '0';\n                r_next = read();\n            }\n            return num;\n        }\n\n        public int readUnsignedInt() {\n            skipBlank();\n\n            int num = 0;\n            while (r_next >= '0' && r_next <= '9') {\n                num = num * 10 + r_next - '0';\n                r_next = read();\n            }\n            return num;\n        }\n\n        public int readNegativeInt() {\n            skipBlank();\n\n            int num = 0;\n            while (r_next >= '0' && r_next <= '9') {\n                num = num * 10 - r_next + '0';\n                r_next = read();\n            }\n            return num;\n        }\n\n        public int readInt() {\n            skipBlank();\n\n            int sign = 1;\n            while (r_next == '+' || r_next == '-') {\n                if (r_next == '-') {\n                    sign *= -1;\n                }\n                r_next = read();\n            }\n\n            return sign == 1 ? readUnsignedInt() : readNegativeInt();\n        }\n\n        public int read() {\n            while (r_total <= r_cur) {\n                try {\n                    r_total = in.read(r_buf);\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n                r_cur = 0;\n                if (r_total == -1) {\n                    return -1;\n                }\n            }\n            return r_buf[r_cur++];\n        }\n\n        public boolean hasMore() {\n            skipBlank();\n            return r_next != -1;\n        }\n\n        public void write(char c) {\n            w_buf.append(c);\n        }\n\n        public void write(int n) {\n            w_buf.append(n);\n        }\n\n        public void write(String s) {\n            w_buf.append(s);\n        }\n\n        public void write(long s) {\n            w_buf.append(s);\n        }\n\n        public void write(double s) {\n            w_buf.append(s);\n        }\n\n        public void write(float s) {\n            w_buf.append(s);\n        }\n\n        public void write(Object s) {\n            w_buf.append(s);\n        }\n\n        public void write(char[] data, int offset, int cnt) {\n            for (int i = offset, until = offset + cnt; i < until; i++) {\n                write(data[i]);\n            }\n        }\n\n        public void flush() {\n            try {\n                out.write(w_buf.toString().getBytes(Charset.forName(\"ascii\")));\n                w_buf.setLength(0);\n                out.flush();\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n\n        public double readDouble() {\n            return Double.parseDouble(readString());\n        }\n    }\n\n    public static class Utils {\n        public static <T> void swap(T[] data, int i, int j) {\n            T tmp = data[i];\n            data[i] = data[j];\n            data[j] = tmp;\n        }\n\n        public static <T> int min(T[] data, int from, int to, Comparator<T> cmp) {\n            int m = from;\n            for (int i = from + 1; i < to; i++) {\n                if (cmp.compare(data[m], data[i]) > 0) {\n                    m = i;\n                }\n            }\n            return m;\n        }\n\n        public static <T> void move(T[] data, int from, int to, int step) {\n            int len = to - from;\n            step = len - (step % len + len) % len;\n            Object[] buf = new Object[len];\n            for (int i = 0; i < len; i++) {\n                buf[i] = data[(i + step) % len + from];\n            }\n            System.arraycopy(buf, 0, data, from, len);\n        }\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nmoves = 0\nT_shorts_old = {'M':0, 'S':0, 'L':0, 'XS':0, 'XL':0, 'XXS':0, 'XXL':0, 'XXXS':0, 'XXXL':0}\nT_shorts_new = {'M':0, 'S':0, 'L':0, 'XS':0, 'XL':0, 'XXS':0, 'XXL':0, 'XXXS':0, 'XXXL':0}\nfor i in range(n):\n\tT_shorts_old[str(input())] += 1\nfor i in range(n):\n\tT_shorts_new[str(input())] += 1\nfor i in range(9):\n\tmoves += abs(T_shorts_new[tuple(T_shorts_new)[i]] - T_shorts_old[tuple(T_shorts_new)[i]])\nmoves *= 0.5\nprint(int(moves))"
        },
        {
            "language": 3,
            "solution": "#m,...s,...l\n\nt = int(input())\nz = t\nprevious=[]\ncurrent=[]\na = [0]*10\nb = [0]*10\nc = [0]*10\ncount,count1,count2=0,0,0\nwhile t:\n    r = input()\n    previous.append(r)\n    t-=1\nwhile z:\n    r = input()\n    current.append(r)\n    z-=1\nfor i in previous:\n    if i == 'M':\n        a[0]+=1\n    if i == 'S':\n        a[1]+=1\n    if i == 'XS':\n        a[3]+=1\n    if i == 'XXS':\n        a[5]+=1\n    if i == 'XXXS':\n        a[7]+=1\n    if i == 'L':\n        a[2]+=1\n    if i == 'XL':\n        a[4]+=1\n    if i == 'XXL':\n        a[6]+=1\n    if i == 'XXXL':\n        a[8]+=1\nfor i in current:\n    if i == 'M':\n        b[0]+=1\n    if i == 'S':\n        b[1]+=1\n    if i == 'XS':\n        b[3]+=1\n    if i == 'XXS':\n        b[5]+=1\n    if i == 'XXXS':\n        b[7]+=1\n    if i == 'L':\n        b[2]+=1\n    if i == 'XL':\n        b[4]+=1\n    if i == 'XXL':\n        b[6]+=1\n    if i == 'XXXL':\n        b[8]+=1\nfor i in range(9):\n    c[i] =abs(a[i]-b[i])\nfor i in range(3):\n    count1+=c[i]\ncount+= int(count1/2)\ncount1,count2 = 0,0 \nfor i in range(3,9):\n    count1+=c[i]\ncount+=int(count1/2)\nprint(count)\n"
        },
        {
            "language": 1,
            "solution": "from sys import stdin, stdout\nti = lambda : stdin.readline().strip()\nma = lambda fxn, ti : map(fxn, ti.split())\nol = lambda arr : stdout.write(' '.join(str(i) for i in arr) + '\\n')\nos = lambda i : stdout.write(str(i) + '\\n')\nolws = lambda arr : stdout.write(''.join(str(i) for i in arr) + '\\n')\n\n\nn = int(ti())\nprev = []\ncur = []\nfor i in range(n):\n\tprev.append(ti())\nfor i in range(n):\n\tcur.append(ti())\nsizes = ['M', 'L', 'S', 'XS', 'XL', 'XXS', 'XXL', 'XXXL', 'XXXS']\nans = 0\nfor size in sizes:\n\ttemp = prev.count(size) - cur.count(size)\n\tif temp > 0:\n\t\tans += temp\nos(ans) "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nmap<string, int> mm1, mm2;\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  int n;\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    string s;\n    cin >> s;\n    mm1[s]++;\n  }\n  for (int i = 0; i < n; i++) {\n    string s;\n    cin >> s;\n    mm2[s]++;\n  }\n  int ans = 0;\n  ans = ans + max(max(abs(mm1[\"S\"] - mm2[\"S\"]), abs(mm1[\"M\"] - mm2[\"M\"])),\n                  abs(mm1[\"L\"] - mm2[\"L\"]));\n  ans = ans + max(abs(mm1[\"XXL\"] - mm2[\"XXL\"]), abs(mm1[\"XXS\"] - mm2[\"XXS\"]));\n  ans =\n      ans + max(abs(mm1[\"XXXL\"] - mm2[\"XXXL\"]), abs(mm1[\"XXXS\"] - mm2[\"XXXS\"]));\n  ans = ans + max(abs(mm1[\"XL\"] - mm2[\"XL\"]), abs(mm1[\"XS\"] - mm2[\"XS\"]));\n  cout << ans;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = dict()\nfor i in ['S', 'XS', 'XXS', 'XXXS', 'M', 'L', 'XL', 'XXL', 'XXXL']: a[i] = 0\nfor _ in ' ' * n: a[input()] += 1\nfor _ in ' ' * n: a[input()] -= 1\ns = 0\nfor i in a: s += abs(a[i])\nprint(s // 2)\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.math.*;\nimport java.util.*;\nimport java.util.stream.*;\n\n@SuppressWarnings(\"unchecked\")\npublic class P1000A {\n\n  int diff(String a, String b) {\n    int d = 0;\n    \n    for (int i = a.length() - 1; i >= 0; i--) {\n      d += (a.charAt(i) != b.charAt(i)) ? 1 : 0;\n    }\n\n    return d;\n  }\n\n  public void run() throws Exception {\n    int n = nextInt(), md, mi = 0, td = 0;\n\n    List<String> a = new ArrayList(n), b = new ArrayList(n);\n    for (int i = n; i > 0; a.add(next()), i--);\n    for (int i = n; i > 0; b.add(next()), i--);\n\n    for (int bi = n - 1; bi >= 0; bi--) {\n      int ai = a.lastIndexOf(b.get(bi));\n      \n      if (ai >= 0) {\n        a.remove(ai);\n        b.remove(bi);\n      }\n    }\n\n    for (int bi = b.size() - 1; bi >= 0; bi--) {\n      md = Integer.MAX_VALUE;\n\n      for (int ai = a.size() - 1; ai >= 0; ai--) {\n        if (a.get(ai).length() == b.get(bi).length()) {\n          int d = diff(a.get(ai), b.get(bi));\n\n          if (d < md) {\n            md = d;\n            mi = ai;\n          }\n        }\n      }\n\n      td += md;\n      a.remove(mi);\n    }\n\n    println(td);\n  }\n\n  public static void main(String... args) throws Exception {\n    br = new BufferedReader(new InputStreamReader(System.in));\n    pw = new PrintWriter(new BufferedOutputStream(System.out));\n    new P1000A().run();\n    br.close();\n    pw.close();\n    System.err.println(\"\\n[Time : \" + (System.currentTimeMillis() - startTime) + \" ms]\");\n  }\n\n  static long startTime = System.currentTimeMillis();\n  static BufferedReader br;\n  static PrintWriter pw;\n  StringTokenizer stok;\n\n  String nextToken() throws IOException {\n    while (stok == null || !stok.hasMoreTokens()) {\n      String s = br.readLine();\n      if (s == null) { return null; }\n      stok = new StringTokenizer(s);\n    }\n    return stok.nextToken();\n  }\n\n  void print(byte b) { print(\"\" + b); }\n  void print(int i) { print(\"\" + i); }\n  void print(long l) { print(\"\" + l); }\n  void print(double d) { print(\"\" + d); }\n  void print(char c) { print(\"\" + c); }\n  void print(Object o) {\n    if (o instanceof int[]) { print(Arrays.toString((int [])o));\n    } else if (o instanceof long[]) { print(Arrays.toString((long [])o));\n    } else if (o instanceof char[]) { print(Arrays.toString((char [])o));\n    } else if (o instanceof byte[]) { print(Arrays.toString((byte [])o));\n    } else if (o instanceof short[]) { print(Arrays.toString((short [])o));\n    } else if (o instanceof boolean[]) { print(Arrays.toString((boolean [])o));\n    } else if (o instanceof float[]) { print(Arrays.toString((float [])o));\n    } else if (o instanceof double[]) { print(Arrays.toString((double [])o));\n    } else if (o instanceof Object[]) { print(Arrays.toString((Object [])o));\n    } else { print(\"\" + o); }\n  }\n  void print(String s) { pw.print(s); }\n  void println() { println(\"\"); }\n  void println(byte b) { println(\"\" + b); }\n  void println(int i) { println(\"\" + i); }\n  void println(long l) { println(\"\" + l); }\n  void println(double d) { println(\"\" + d); }\n  void println(char c) { println(\"\" + c); }\n  void println(Object o) { print(o); println(); }\n  void println(String s) { pw.println(s); }\n  int nextInt() throws IOException { return Integer.parseInt(nextToken()); }\n  long nextLong() throws IOException { return Long.parseLong(nextToken()); }\n  double nextDouble() throws IOException { return Double.parseDouble(nextToken()); }\n  char nextChar() throws IOException { return (char) (br.read()); }\n  String next() throws IOException { return nextToken(); }\n  String nextLine() throws IOException { return br.readLine(); }\n  int [] readInt(int size) throws IOException {\n    int [] array = new int [size];\n    for (int i = 0; i < size; i++) { array[i] = nextInt(); }\n    return array;\n  }\n  long [] readLong(int size) throws IOException {\n    long [] array = new long [size];\n    for (int i = 0; i < size; i++) { array[i] = nextLong(); }\n    return array;\n  }\n  double [] readDouble(int size) throws IOException {\n    double [] array = new double [size];\n    for (int i = 0; i < size; i++) { array[i] = nextDouble(); }\n    return array;\n  }\n  String [] readLines(int size) throws IOException {\n    String [] array = new String [size];\n    for (int i = 0; i < size; i++) { array[i] = nextLine(); }\n    return array;\n  }\n\n  int gcd(int a, int b) {\n    if (a == 0) return Math.abs(b); if (b == 0) return Math.abs(a);\n    a = Math.abs(a); b = Math.abs(b);\n    int az = Integer.numberOfTrailingZeros(a), bz = Integer.numberOfTrailingZeros(b);\n    a >>>= az; b >>>= bz;\n    while (a != b) {\n      if (a > b) { a -= b; a >>>= Integer.numberOfTrailingZeros(a); }\n            else { b -= a; b >>>= Integer.numberOfTrailingZeros(b); }\n    }\n    return (a << Math.min(az, bz));\n  }\n\n  long gcd(long a, long b) {\n    if (a == 0) return Math.abs(b); if (b == 0) return Math.abs(a);\n    a = Math.abs(a); b = Math.abs(b);\n    int az = Long.numberOfTrailingZeros(a), bz = Long.numberOfTrailingZeros(b);\n    a >>>= az; b >>>= bz;\n    while (a != b) {\n      if (a > b) { a -= b; a >>>= Long.numberOfTrailingZeros(a); }\n            else { b -= a; b >>>= Long.numberOfTrailingZeros(b); }\n    }\n    return (a << Math.min(az, bz));\n  }\n\n  void shuffle(int [] a) {\n    Random r = new Random();\n    for (int i = a.length - 1; i >= 0; i--) {\n      int j = r.nextInt(a.length);\n      int t = a[i]; a[i] = a[j]; a[j] = t;\n    }\n  }\n\n  void shuffle(long [] a) {\n    Random r = new Random();\n    for (int i = a.length - 1; i >= 0; i--) {\n      int j = r.nextInt(a.length);\n      long t = a[i]; a[i] = a[j]; a[j] = t;\n    }\n  }\n\n  void shuffle(Object [] a) {\n    Random r = new Random();\n    for (int i = a.length - 1; i >= 0; i--) {\n      int j = r.nextInt(a.length);\n      Object t = a[i]; a[i] = a[j]; a[j] = t;\n    }\n  }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nmap<string, int> mpa, mpb;\nint main() {\n  ios::sync_with_stdio(false);\n  int n;\n  while (cin >> n) {\n    mpa.clear();\n    mpb.clear();\n    string s;\n    for (int i = 1; i <= n; i++) {\n      cin >> s;\n      mpa[s]++;\n    }\n    for (int i = 1; i <= n; i++) {\n      cin >> s;\n      mpb[s]++;\n    }\n    int res = 0;\n    for (map<string, int>::iterator it = mpa.begin(); it != mpa.end(); it++) {\n      res += max(it->second - mpb[it->first], 0);\n    }\n    cout << res << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.math.BigInteger;\nimport java.math.RoundingMode;\nimport java.text.DecimalFormat;\nimport java.util.*;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\n\nimport javax.net.ssl.SSLContext;\n\npublic class Main\n{  \n   static long mod=(long)(1e+9) + 7;  \n   static int[] sieve;\n   static int ans=1;\n   static ArrayList<Integer> primes;\n\n   \n   public static void main(String[] args) throws java.lang.Exception\n   {\t  \t\n\t     fast s = new fast();\n\t     PrintWriter out=new PrintWriter(System.out);\n\t     Scanner sc=new Scanner(System.in);\n\t     StringBuilder fans = new StringBuilder();      \n \n\t     HashMap<String,Integer> hm=new HashMap<String,Integer>();\n\t     \n\t     int n=s.nextInt();\n\t     \n\t     for(int i=0;i<n;i++)\n\t     {\n\t    \t String str=s.nextLine();\n\t    \t if(hm.containsKey(str))\n\t    \t\t hm.put(str,hm.get(str)+1);\n\t    \t else\n\t    \t\t hm.put(str,1);\n\t     }\n\t     \n\t     int c=0;\n\t     \n\t     for(int i=0;i<n;i++)\n\t     {\n\t    \t String str=s.nextLine();\n\t    \t \n\t    \t if(hm.containsKey(str) && hm.get(str)>=1)\n\t    \t\t hm.put(str, hm.get(str)-1);\n\t    \t else c++;\n\t     }\n\t     \n\t     System.out.println(c);\n\t     \n   }\n   \n \n   static class fast {   \n\t\tprivate InputStream i;\n\t\tprivate byte[] buf = new byte[1024];\n\t\tprivate int curChar;\n\t\tprivate int numChars;\n\t\t\n\t\tpublic static boolean next_permutation(int a[])\n\t\t   {\n\t\t\t   int i=0,j=0;int index=-1;\t   \n\t\t\t   int n=a.length;\n\t\t\t   \n\t\t\t   for(i=0;i<n-1;i++)\n\t\t\t\t   if(a[i]<a[i+1]) index=i;\n\t\t\t   \n\t\t\t   if(index==-1) return false;\n\t\t\t   i=index;\n\n\t\t\t  \n\t\t\t   for(j=i+1;j<n && a[i]<a[j];j++);\n\n\t\t\t   int temp=a[i];\n\t\t\t   a[i]=a[j-1];\n\t\t\t   a[j-1]=temp;\n\t\t\t   \t   \n\t\t\t   for(int p=i+1,q=n-1;p<q;p++,q--)\n\t\t\t   {\n\t\t\t\t   temp=a[p];\n\t\t\t\t   a[p]=a[q];\n\t\t\t\t   a[q]=temp;\n\t\t\t   }\n\t\t\t   \n\t\t\t   return true;\n\t\t   }\n\t\t   \n\t\t   \n\t\tpublic static void division(char ch[],int divisor)\n\t\t   {\n\t\t\t   int div=Character.getNumericValue(ch[0]); int mul=10;int remainder=0;\n\t\t\t   StringBuilder quotient=new StringBuilder(\"\");\n\t\t\t   for(int i=1;i<ch.length;i++)\n\t\t\t   {\n\t\t\t\t   div=div*mul+Character.getNumericValue(ch[i]);\t\n\t\t\t\t   if(div<divisor) {quotient.append(\"0\");continue;}\n\t\t\t\t   quotient.append(div/divisor);\n\t\t\t\t   div=div%divisor;mul=10;\n\t\t\t\t   \n\t\t\t   } \n\t\t\t   remainder=div;\n\t\t\t   while(quotient.charAt(0)=='0')quotient.deleteCharAt(0);\t   \n\t\t\t   System.out.println(quotient+\" \"+remainder);\t  \n\t\t   }\n\t\t\n\t\tpublic static void sieve(int size)\n\t\t{\n\t\t\tsieve=new int[size+1];\n\t\t\tprimes=new ArrayList<Integer>();\n\t\t\tsieve[1]=1;\n\t\t\tfor(int i=2;i<=Math.sqrt(size);i++)\n\t\t\t{\n\t\t\t\tif(sieve[i]==0)\n\t\t\t\t {\n\t\t\t\t\tfor(int j=i*i;j<size;j+=i) sieve[j]=1;\n\t\t\t\t }\n\t\t\t}\n\t\t\t\n\t\t\tfor(int i=2;i<=size;i++)\n\t\t\t{\n\t\t\t\tif(sieve[i]==0) primes.add(i);\n\t\t\t}\n\t\t}\n\t\tpublic static long pow(long n, long b, long MOD)\n\t\t   {\n\t\t       long x=1;long y=n; \n\t\t       while(b > 0)\n\t\t       {\n\t\t           if(b%2 == 1)\n\t\t           {\n\t\t               x=x*y;\n\t\t               if(x>MOD) x=x%(MOD);\n\t\t           }\n\t\t           y = y*y;\n\t\t           if(y>MOD) y=y%(MOD); \n\t\t           b >>= 1;\n\t\t       }\n\t\t       return x;\n\t\t   }\n\n\t\t\n\t\t public static int upper(Integer[] a,int start,int end,int key)\n\t\t {\n\t\t\t   int mid=(start+end)>>1;\n\t\t\t   if(start==end && a[mid]<key) {return -1;}\n\t\t\t   if(start>end) return -1;\n\n\t\t\t   if(a[mid]>=key && (((mid-1)>=0 && a[mid-1]<key) || (mid-1)==0)) return mid;\n\t\t\t   else if(a[mid]== key && (mid-1)>=0 && a[mid-1]==key) return lower(a,start,mid-1,key);   \n\t\t\t   else if(key>a[mid]) return lower(a,mid+1,end,key);\n\t\t\t   else return lower(a,start,mid-1,key);\n\t\t}\n\t\t \n\t\t public static int lower(Integer a[],int start,int end,int key)\n\t\t {\n\t\t\t   int mid=(start+end)>>1;\n\t\t\t   if(start==end && a[mid]>key) {return -1;}\n\t\t\t   if(start>end) return -1;\n\n\t\t\t   if(a[mid]<=key && (((mid+1)<a.length && a[mid+1]>key) || (mid+1)==a.length)) return mid;\n\t\t\t   else if(a[mid]== key && (mid+1)<a.length && a[mid+1]==key) return upper(a,mid+1,end,key);   \n\t\t\t   else if(key>=a[mid]) return upper(a,mid+1,end,key);\n\t\t\t   else return upper(a,start,mid-1,key);\n\t\t} \n\t\t   \n\t\tpublic int gcd(int a,int b)\n\t\t{\n\t\t\tif(a==0) return b;\n\t\t\treturn gcd(b%a,a);\n\t\t}\n\t\tpublic fast() {\n\t\t\tthis(System.in);\n\t\t}\n\t\tpublic fast(InputStream is) {\n\t\t\ti = is;\n\t\t}\n\t\tpublic int read() {\n\t\t\tif (numChars == -1)\n\t\t\t\tthrow new InputMismatchException();\n\t\t\tif (curChar >= numChars) {\n\t\t\t\tcurChar = 0;\n\t\t\t\ttry {\n\t\t\t\t\tnumChars = i.read(buf);\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t}\n\t\t\t\tif (numChars <= 0)\n\t\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn buf[curChar++];\n\t\t}\n\t\tpublic String nextLine() {\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = read();\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tdo {\n\t\t\t\tres.appendCodePoint(c);\n\t\t\t\tc = read();\n\t\t\t} while (!isEndOfLine(c));\n\t\t\treturn res.toString();\n\t\t}\n\t\tpublic String nextString() {\n     \t\tint c = read();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = read();\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tdo {\n\t\t\t\tres.appendCodePoint(c);\n\t\t\t\tc = read();\n\t\t\t} while (!isSpaceChar(c));\n\t\t\treturn res.toString();\n\t\t}\n\t\tpublic long nextLong() {\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = read();\n\t\t\tint sgn = 1;\n\t\t\tif (c == '-') {\n\t\t\t\tsgn = -1;\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tlong res = 0;\n\t\t\tdo {\n\t\t\t\tif (c < '0' || c > '9')\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\tres *= 10;\n\t\t\t\tres += c - '0';\n\t\t\t\tc = read();\n\t\t\t} while (!isSpaceChar(c));\n\t\t\treturn res * sgn;\n\t\t}\n\t\tpublic int nextInt() {\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = read();\n\t\t\tint sgn = 1;\n\t\t\tif (c == '-') {\n\t\t\t\tsgn = -1;\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tint res = 0;\n\t\t\tdo {\n\t\t\t\tif (c < '0' || c > '9')\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\tres *= 10;\n\t\t\t\tres += c - '0';\n\t\t\t\tc = read();\n\t\t\t} while (!isSpaceChar(c));\n\t\t\treturn res * sgn;\n\t\t}\n\t\tpublic boolean isSpaceChar(int c) {\n\t\t\treturn c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n\t\t}\n\t\tpublic boolean isEndOfLine(int c) {\n\t\t\treturn c == '\\n' || c == '\\r' || c == -1;\n\t\t}\n\n\t}\t\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint c(char *a) {\n  int i, count;\n  count = 0;\n  for (i = 0; a[i] != '\\0'; i++) {\n    if (a[i] == 'X')\n      count++;\n    else\n      break;\n  }\n  return count;\n}\nint main() {\n  int n;\n  cin >> n;\n  char a[5];\n  int f1[4][3], f2[4][3], i;\n  for (i = 0; i < 4; i++) f1[i][0] = f1[i][1] = f1[i][2] = 0;\n  for (i = 0; i < 4; i++) f2[i][0] = f2[i][1] = f2[i][2] = 0;\n  int count;\n  for (i = 0; i < n; i++) {\n    cin >> a;\n    count = c(a);\n    if (a[count] == 'S')\n      f1[count][0]++;\n    else if (a[count] == 'M')\n      f1[count][1]++;\n    else\n      f1[count][2]++;\n  }\n  for (i = 0; i < n; i++) {\n    cin >> a;\n    count = c(a);\n    if (a[count] == 'S')\n      f2[count][0]++;\n    else if (a[count] == 'M')\n      f2[count][1]++;\n    else\n      f2[count][2]++;\n  }\n  int min, j;\n  for (i = 0; i < 4; i++) {\n    for (j = 0; j < 3; j++) {\n      if (f1[i][j] < f2[i][j])\n        min = f1[i][j];\n      else\n        min = f2[i][j];\n      f1[i][j] -= min;\n    }\n  }\n  count = 0;\n  for (i = 0; i < 4; i++) {\n    for (j = 0; j < 3; j++) count += f1[i][j];\n  }\n  cout << count << endl;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na , b = [] , []\n\nfor i in range(n):\n    x = input()\n    a.append(x)\n\nfor i in range(n):\n    x = input()\n    if x in a :\n        a.remove(x)\n\nprint(len(a))\n\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[]\nfor i in range(0,n):\n    p=input()\n    a.append(p)\nb=[]\nfor i in range(0,n):\n    p=input()\n    b.append(p)\nfor i in range(0,len(b)):\n    if b[i] in a:\n        a.remove(b[i])\nprint(len(a))\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Arrays;\nimport java.util.List;\nimport java.util.Scanner;\nimport java.util.stream.Collectors;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\n\t\tint n = sc.nextInt();\n\t\tString[] a = readArray(sc, n);\n\t\tString[] b = readArray(sc, n);\n\t\tSystem.out.println(solve(a, b));\n\n\t\tsc.close();\n\t}\n\n\tstatic String[] readArray(Scanner sc, int size) {\n\t\tString[] result = new String[size];\n\t\tfor (int i = 0; i < result.length; i++) {\n\t\t\tresult[i] = sc.next();\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tstatic int solve(String[] a, String[] b) {\n\t\tList<String> aList = Arrays.stream(a).collect(Collectors.toList());\n\n\t\tint result = 0;\n\t\tfor (String bi : b) {\n\t\t\tif (aList.contains(bi)) {\n\t\t\t\taList.remove(bi);\n\t\t\t} else {\n\t\t\t\tresult++;\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long n;\n  cin >> n;\n  map<string, long long> mp1, mp2;\n  for (long long i = 0; i < n; i++) {\n    string s;\n    cin >> s;\n    mp1[s]++;\n  }\n  for (long long i = 0; i < n; i++) {\n    string s;\n    cin >> s;\n    mp2[s]++;\n  }\n  for (auto it = mp1.begin(); it != mp1.end(); it++) {\n    mp2[it->first] -= min(it->second, mp2[it->first]);\n  }\n  long long ans = 0;\n  for (auto it = mp2.begin(); it != mp2.end(); it++) {\n    ans += it->second;\n  }\n  cout << ans;\n}\n"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\n\nN = int(input())\nPrevious = Counter(input() for i in range(N))\nThis = Counter(input() for i in range(N))\nCounter = 0\nfor i in This:\n    if Previous.get(i) != None:\n        Min = min(Previous[i], This[i])\n        Previous[i] -= Min\n        This[i] -= Min\nfor Key in Previous:\n    while Previous[Key] != 0:\n        MinKey, Count, Diff = 0, 0, 10 ** 9\n        for Key2 in This:\n            if len(Key) == len(Key2) and This[Key2] != 0:\n                ThisDiff = sum(1 for i in range(len(Key2)) if Key2[i] != Key[i])\n                if ThisDiff < Diff:\n                    Count = min(Previous[Key], This[Key2])\n                    MinKey = Key2\n                    Diff = ThisDiff\n        Previous[Key] -= Count\n        This[MinKey] -= Count\n        Counter += Diff * Count\nprint(Counter)\n\n# Hope the best for Ravens\n# Never give up\n"
        },
        {
            "language": 3,
            "solution": "l1=[]; l2=[]; l3=['L', 'M', 'S', 'XL', 'XS', 'XXL', 'XXS', 'XXXL', 'XXXS']; j=0\nn=int(input())\nfor i in range(n):\n    l1.append(input())\nfor i in range(n):\n    l2.append(input())\nfor i in l3:\n    j+=abs(l1.count(i)-l2.count(i))\nprint(j//2)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  multiset<string> a, b;\n  for (int i = 0; i < n; i++) {\n    string s;\n    cin >> s;\n    a.insert(s);\n  }\n  for (int i = 0; i < n; i++) {\n    string s;\n    cin >> s;\n    b.insert(s);\n  }\n  int count = 0;\n  for (auto p : b) {\n    for (auto q : a) {\n      if (p == q) {\n        count++;\n        a.erase(a.find(q));\n        break;\n      }\n    }\n  }\n  cout << n - count;\n}\n"
        },
        {
            "language": 3,
            "solution": "while True:\n\ttry:\n\t\tdef read():\n\t\t\tn = int(input())\n\t\t\tp = list()\n\t\t\tfor i in range(n):\n\t\t\t\tp.append(input())\n\t\t\tfor i in range(n):\n\t\t\t\tn = input()\n\t\t\t\tif n in p:\n\t\t\t\t\tp.remove(n)\n\t\t\tprint(len(p))\n\t\t\t\t\n\t\t\t\t\n\t\tif __name__ ==\"__main__\":\n\t\t\tread()\n\texcept EOFError:\n\t\tbreak"
        },
        {
            "language": 3,
            "solution": "n=int(input())\ng=[[\"\"]*4]*3\nc=[]\nr=[]\ne=0\nfor i in range(n):\n    c.append(input())\nfor i in range(n):\n    r.append(input())\nfor i in range(n):\n    for j in range(n):\n        if c[i]==r[j]:\n            r[j]=\"gorilla\"\n            c[i]=\"turo_rudi\"\n            e+=1\nprint(n-e)\n"
        },
        {
            "language": 3,
            "solution": "n = 0\nt1 = {}\nt2 = {}\nk = 0\nflag = False\n\nn = int(input())\nfor i in range(n):\n    s = input()\n    if len(s) not in t1.keys():\n        t1[len(s)] = [s]\n    else:\n        t1[len(s)].append(s)\nfor i in range(n):\n    s = input()\n    lst = []\n    for lst in t1.values():\n        if s in lst:\n            t1[len(s)].pop(t1[len(s)].index(s))\n            flag = True\n            break\n    if flag == True:\n        flag = False\n        continue\n    if len(s) not in t2.keys():\n        t2[len(s)] = [s]\n    else:\n        t2[len(s)].append(s)\n\nlst = []\nfor lst in t1.values():\n    k += len(lst)\n\nprint(k)"
        },
        {
            "language": 3,
            "solution": "def ii():\n    return int(input())\ndef mi():\n    return map(int, input().split())\ndef li():\n    return list(mi())\n\nn = int(input())\na = [input().strip() for i in range(n)]\nb = [input().strip() for i in range(n)]\n\nans = 0\nc = [0, 0, 0]\nd = [0, 0, 0]\nfor i, ss in enumerate(['S', 'L', 'M']):\n    c[i] = a.count(ss)\n    d[i] = b.count(ss)\n    x = min(c[i], d[i])\n    c[i] -= x\n    d[i] -= x\nans += sum(d)\nc = [0, 0]\nd = [0, 0]\nfor i, ss in enumerate(['XS', 'XL']):\n    c[i] = a.count(ss)\n    d[i] = b.count(ss)\n    x = min(c[i], d[i])\n    c[i] -= x\n    d[i] -= x\nans += sum(d)\nc = [0, 0]\nd = [0, 0]\nfor i, ss in enumerate(['XXS', 'XXL']):\n    c[i] = a.count(ss)\n    d[i] = b.count(ss)\n    x = min(c[i], d[i])\n    c[i] -= x\n    d[i] -= x\nans += sum(d)\nc = [0, 0]\nd = [0, 0]\nfor i, ss in enumerate(['XXXS', 'XXXL']):\n    c[i] = a.count(ss)\n    d[i] = b.count(ss)\n    x = min(c[i], d[i])\n    c[i] -= x\n    d[i] -= x\nans += sum(d)\n\nprint(ans)"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        InputReader in = new InputReader();\n        PrintWriter out = new PrintWriter(System.out);\n        int t = 1;\n        Solver s = new Solver();\n        for (int i = 1; i <= t; i++) {\n            s.solve(i, in, out);\n        }\n        out.close();\n    }\n}\n\nclass Solver {\n\n    void solve(int test, InputReader in, PrintWriter out) {\n        int n = in.nextInt();\n        String[] a = new String[n], b = new String[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = in.next();\n        }\n        for (int i = 0; i < n; i++) {\n            b[i] = in.next();\n        }\n        HashMap<String, Integer> map = new HashMap<>();\n        for (int i = 0; i < n; i++) map.put(b[i], map.getOrDefault(b[i], 0) + 1);\n        int ans = 0;\n        for (int i = 0; i < n; i++) {\n            if (map.containsKey(a[i])) {\n                if (map.get(a[i]) > 1) {\n                    map.put(a[i], map.get(a[i]) - 1);\n                } else map.remove(a[i]);\n                continue;\n            }\n            ans++;\n        }\n        out.println(ans);\n    }\n}\n\nclass InputReader {\n    BufferedReader br;\n    StringTokenizer st;\n\n    public InputReader() {\n        br = new BufferedReader(new InputStreamReader(System.in));\n    }\n\n    String next() {\n        while (st == null || !st.hasMoreElements()) {\n            try {\n                st = new StringTokenizer(br.readLine());\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n        return st.nextToken();\n    }\n\n    int nextInt() {\n        return Integer.parseInt(next());\n    }\n\n    long nextLong() {\n        return Long.parseLong(next());\n    }\n\n    double nextDouble() {\n        return Double.parseDouble(next());\n    }\n\n    String nextLine() {\n        String str = \"\";\n        try {\n            str = br.readLine();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        return str;\n    }\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\nimport java.util.StringTokenizer;\n\npublic class A {\n\n\tstatic class FastReader {\n\t\tBufferedReader reader;\n\t\tStringTokenizer tokenizer;\n\t\t\n\t\tpublic FastReader() {\n\t\t\treader = new BufferedReader(new InputStreamReader(System.in));\n\t\t}\n\t\t\n\t\tString next() {\n\t\t\twhile(tokenizer == null || !tokenizer.hasMoreTokens()) {\n\t\t\t\ttry {\n\t\t\t\t\ttokenizer = new StringTokenizer(reader.readLine());\n\t\t\t\t} catch(IOException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn tokenizer.nextToken();\n\t\t}\n\t\t\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tFastReader fr = new FastReader();\n\t\tint n = fr.nextInt();\n\t\tString a[] = new String[n];\n\t\tString b[] = new String[n];\n\t\tint[] singleCnt = new int[3];\n\t\t\n\t\tfor(int i=0; i<n; i++) {\n\t\t\ta[i] = fr.next();\n\t\t\tif(a[i].equals(\"S\")) {\n\t\t\t\tsingleCnt[0]++;\n\t\t\t} else if(a[i].equals(\"M\")) {\n\t\t\t\tsingleCnt[1]++;\n\t\t\t} else if(a[i].equals(\"L\")) {\n\t\t\t\tsingleCnt[2]++;\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor(int i=0; i<n; i++) {\n\t\t\tb[i] = fr.next();\n\t\t}\n\t\t\n\t\tArrays.sort(a);\n\t\tArrays.sort(b);\n\t\t\n\t\tint cnt = 0;\n\t\tfor(int i=0; i<n; i++) {\n\t\t\tif(b[i].length()==1) {\n\t\t\t\tif(b[i].equals(\"S\")) {\n\t\t\t\t\tsingleCnt[0]--;\n\t\t\t\t} else if(b[i].equals(\"M\")) {\n\t\t\t\t\tsingleCnt[1]--;\n\t\t\t\t} else if(b[i].equals(\"L\")) {\n\t\t\t\t\tsingleCnt[2]--;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(!a[i].equals(b[i])) {\n\t\t\t\tcnt++;\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor(int i=0; i<3; i++) {\n\t\t\tif(singleCnt[i] > 0)\n\t\t\t\tcnt += singleCnt[i];\n\t\t}\n\t\t\t\n\t\tSystem.out.println(cnt);\n\t}\n}\n"
        },
        {
            "language": 3,
            "solution": "import collections\nt=int(input())\na1=[]\nfor i in range(t):\n    a1.append(input())\n\na2=[]\nfor i in range(t):\n    a2.append(input())\n\n\nd1=collections.Counter(a1)\nd2=collections.Counter(a2)\nif(d1==d2):\n    print(0)\n\nelse:\n    c=0\n    p1={}\n    p2={}\n    for i in range(1,5):\n        p1[i]=[]\n        p2[i]=[]\n    for i in a1:\n        p1[len(i)].append(i[-1])\n    for i in a2:\n        p2[len(i)].append(i[-1])\n    #print(p1,p2)\n\n    for i in range(1,5):\n        k1=p1[i]\n        k2=p2[i]\n        l1=k1.count('L')\n        s1=k1.count('S')\n        m1=k1.count('M')\n        l2=k2.count('L')\n        s2=k2.count('S')\n        m2=k2.count('M')\n        ar1=[abs(l1-l2),abs(s1-s2),abs(m1-m2)]\n        #print(ar1)\n        mm=max(ar1)\n        c+=mm\n    print(c)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        \n        \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n    \n\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\nimport java.math.*;\n\npublic class A implements Runnable {\n\n    public void run() {\n        long startTime = System.nanoTime();\n\n        int n = nextInt();\n\n        String[] all = new String[9];\n        all[0] = \"M\";\n        for (int i = 0; i < 4; i++) {\n            String s = \"\";\n            for (int j = 0; j < i; j++) {\n                s += \"X\";\n            }\n            all[2 * i + 1] = s + \"S\";\n            all[2 * i + 2] = s + \"L\";\n        }\n\n        Map<String, Integer> map1 = new HashMap<>();\n        Map<String, Integer> map2 = new HashMap<>();\n        for (String s : all) {\n            map1.put(s, 0);\n            map2.put(s, 0);\n        }\n        for (int i = 0; i < n; i++) {\n            String s = nextToken();\n            map1.put(s, map1.get(s) + 1);\n        }\n        for (int i = 0; i < n; i++) {\n            String s = nextToken();\n            map2.put(s, map2.get(s) + 1);\n        }\n\n        int res = 0;\n        for (String s : all) {\n            int a = map1.get(s);\n            int b = map2.get(s);\n\n            if (a > b) {\n                res += a - b;\n            }\n        }\n        println(res);\n\n        if (fileIOMode) {\n            System.out.println((System.nanoTime() - startTime) / 1e9);\n        }\n        out.close();\n    }\n\n    //-----------------------------------------------------------------------------------\n\n    private static boolean fileIOMode;\n    private static BufferedReader in;\n    private static PrintWriter out;\n    private static StringTokenizer tokenizer;\n\n    public static void main(String[] args) throws Exception {\n        fileIOMode = args.length > 0 && args[0].equals(\"!\");\n        if (fileIOMode) {\n            in = new BufferedReader(new FileReader(\"a.in\"));\n            out = new PrintWriter(\"a.out\");\n        } else {\n            in = new BufferedReader(new InputStreamReader(System.in));\n            out = new PrintWriter(System.out);\n        }\n        tokenizer = new StringTokenizer(\"\");\n\n        new Thread(new A()).start();\n    }\n\n    private static String nextLine() {\n        try {\n            return in.readLine();\n        } catch (IOException e) {\n            return null;\n        }\n    }\n\n    private static String nextToken() {\n        while (!tokenizer.hasMoreTokens()) {\n            tokenizer = new StringTokenizer(nextLine());\n        }\n        return tokenizer.nextToken();\n    }\n\n    private static int nextInt() {\n        return Integer.parseInt(nextToken());\n    }\n\n    private static long nextLong() {\n        return Long.parseLong(nextToken());\n    }\n\n    private static double nextDouble() {\n        return Double.parseDouble(nextToken());\n    }\n\n    private static BigInteger nextBigInteger() {\n        return new BigInteger(nextToken());\n    }\n\n    private static void print(Object o) {\n        if (fileIOMode) {\n            System.out.print(o);\n        }\n        out.print(o);\n    }\n\n    private static void println(Object o) {\n        if (fileIOMode) {\n            System.out.println(o);\n        }\n        out.println(o);\n    }\n\n    private static void printf(String s, Object... o) {\n        if (fileIOMode) {\n            System.out.printf(s, o);\n        }\n        out.printf(s, o);\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios::sync_with_stdio(false);\n  int n, i, j, ans = 0, k = 0;\n  cin >> n;\n  string a[n], b[n];\n  for (i = 0; i < n; i++) cin >> a[i];\n  for (i = 0; i < n; i++) cin >> b[i];\n  for (i = 0; i < n; i++) {\n    k = 0;\n    for (j = 0; j < n; j++) {\n      if (a[i] == b[j]) {\n        k = 1;\n        b[j] = '0';\n        break;\n      }\n    }\n    if (k != 1) ans++;\n  }\n  cout << ans;\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.*;\n\npublic class practice {\n\t\tpublic static void main(String[] args) {\n\t\tFastScanner in=new FastScanner();\n                int n=in.nextInt();\n               \n                ArrayList<String> list1=new ArrayList<>();\n                for(int i=0;i<n;i++)\n                    list1.add(in.next());\n                \n                int time=0;\n                \n                ArrayList<String> list2=new ArrayList<>();\n                for(int i=0;i<n;i++){\n                    String s=in.next();\n                    if(list1.contains(s)){\n                        list1.remove(s);\n                    }\n                }\n                \n                \n                System.out.println(list1.size());\n\t\t}\n\t}\n\n\n\n\nclass FastScanner {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tStringTokenizer st = new StringTokenizer(\"\");\n \n\t\tString next() {\n\t\t\twhile (!st.hasMoreTokens())\n\t\t\t\ttry {\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n \n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n \n\t\tint[] readArray(int n) {\n\t\t\tint[] a = new int[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\ta[i] = nextInt();\n\t\t\treturn a;\n\t\t}\n \n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\t}"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nans=0\nold=[]\nfor i in range(n):old.append(input())\nfor i in range(n):\n    s=input()\n    try:\n        old.remove(s)\n    except:\n        ans+=1\nprint(ans)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = []\n\nfor i in range(n):\n\tt = input()\n\ta.append(t)\n\nfor i in range(n):\n\tt = input()\n\tif(t in a):\n\t\ta.remove(t)\n\nprint(len(a))"
        },
        {
            "language": 3,
            "solution": "n=int(input())\noldshirts=[]\nnewshirts=[]\ncounter=0\nfor k in range(n):\n    k=input()\n    oldshirts.append(k)\nfor i in range(n):\n    i=input()\n    newshirts.append(i)\nfor u in range(n):\n    if  newshirts[u] in oldshirts:\n        oldshirts.remove(newshirts[u])\nprint(len(oldshirts))\n\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  vector<string> a;\n  vector<string> b;\n  cin >> n;\n  map<string, int> a_count;\n  map<string, int> b_count;\n  for (int i = 0; i < n; i++) {\n    string s;\n    cin >> s;\n    a_count[s]++;\n    a.push_back(s);\n  }\n  for (int i = 0; i < n; i++) {\n    string s;\n    cin >> s;\n    b_count[s]++;\n    b.push_back(s);\n  }\n  for (auto &x : b_count) {\n    string a = x.first;\n    n = n - min(x.second, a_count[a]);\n  }\n  cout << n << endl;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\ndic={}\nfor i in range(n):\n\ts=input()\n\tif s in dic:\n\t\tdic[s]=dic[s]+1\n\telse:\n\t\tdic[s]=1\ncount=0\nfor i in range(n):\n\ts=input()\n\tif s in dic:\n\t\tif dic[s]<=0:\n\t\t\tcount+=1\n\t\tdic[s]-=1\n\telse:\n\t\tcount+=1\nprint(count)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long fpow(long long n, long long k, long long p = 1000000007) {\n  long long r = 1;\n  for (; k; k >>= 1) {\n    if (k & 1) r = r * n % p;\n    n = n * n % p;\n  }\n  return r;\n}\nlong long inv(long long a, long long p = 1000000007) {\n  return fpow(a, p - 2, p);\n}\nint main() {\n  ios_base::sync_with_stdio(false), cin.tie(NULL), cout.tie(NULL);\n  long long n;\n  map<string, long long> m;\n  map<string, long long>::iterator it;\n  cin >> n;\n  string a[n], b[n];\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n    m[a[i]]++;\n  }\n  for (int i = 0; i < n; i++) {\n    cin >> b[i];\n  }\n  long long count = 0;\n  for (int i = 0; i < n; i++) {\n    if (m[b[i]] > 0) {\n      m[b[i]]--;\n    } else {\n      count++;\n    }\n  }\n  cout << count << endl;\n}\n"
        },
        {
            "language": 3,
            "solution": "\ndef mi():\n\treturn map(int, input().split())\n\nn = int(input())\n\nold = [0]*n\nnew = [0]*n\n\nfor i in range(n):\n\told[i] = input()\nfor i in range(n):\n\tnew[i] = input()\n\n\nold.sort()\nnew.sort()\ncnt = 0\ni = 0\n\nwhile i<len(old):\n\tif old[i] in new:\n\t\tdel(new[new.index(old[i])])\n\t\tdel(old[i])\n\telse:\n\t\ti+=1\nfor i in range(len(old)):\n\told[i] = sorted(list(old[i]))\n\tnew[i] = sorted(list(new[i]))\n\tfor j in range(len(old[i])):\n\t\tif old[i][j]!=new[i][j]:\n\t\t\tcnt+=1\nprint (cnt)"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\nimport java.io.IOException;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n *\n * @author kessido\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        ACodehorsesTShirts solver = new ACodehorsesTShirts();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class ACodehorsesTShirts {\n        public void solve(int testNumber, InputReader in, PrintWriter out) {\n            int n = in.NextInt();\n            int[][] x = new int[4][3];\n            int[][] x1 = new int[4][3];\n\n            for (int i = 0; i < n; i++) {\n                char[] s = in.next().toCharArray();\n                int k = (s[s.length - 1] == 'L') ? 2 : ((s[s.length - 1] == 'M') ? 1 : 0);\n                x[s.length - 1][k]++;\n            }\n            for (int i = 0; i < n; i++) {\n                char[] s = in.next().toCharArray();\n                int k = (s[s.length - 1] == 'L') ? 2 : ((s[s.length - 1] == 'M') ? 1 : 0);\n                x1[s.length - 1][k]++;\n            }\n            int c = 0;\n            for (int i = 0; i < 4; i++) {\n\n                for (int j = 0; j < 3; j++) {\n                    x[i][j] -= x1[i][j];\n                    if (x[i][j] > 0) c += x[i][j];\n                }\n            }\n            out.println(c);\n\n        }\n\n    }\n\n    static class InputReader {\n        BufferedReader reader;\n        StringTokenizer tokenizer;\n\n        public InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\n            tokenizer = null;\n        }\n\n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine(), \" \\t\\n\\r\\f,\");\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        public int NextInt() {\n            return Integer.parseInt(next());\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst bool print = false;\nconst int N = 57;\nconst long long mod = 1e9 + 7;\nint decode(string in) {\n  if (in == \"M\") {\n    return 0;\n  }\n  if (in == \"S\") {\n    return 1;\n  }\n  if (in == \"L\") {\n    return 2;\n  }\n  if (in == \"XS\") {\n    return 3;\n  }\n  if (in == \"XL\") {\n    return 4;\n  }\n  if (in == \"XXS\") {\n    return 5;\n  }\n  if (in == \"XXL\") {\n    return 6;\n  }\n  if (in == \"XXXS\") {\n    return 7;\n  }\n  if (in == \"XXXL\") {\n    return 8;\n  }\n  return 9;\n}\nint main() {\n  int n;\n  cin >> n;\n  int category[10] = {0};\n  for (int i = 0; i < n; i++) {\n    string in;\n    cin >> in;\n    int decoded = decode(in);\n    category[decoded]++;\n  }\n  int seconds = 0;\n  for (int i = 0; i < n; i++) {\n    string in;\n    cin >> in;\n    int decoded = decode(in);\n    category[decoded]--;\n  }\n  for (int i = 0; i < 10; i++) {\n    seconds += max(0, category[i]);\n  }\n  cout << seconds << \"\\n\";\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.List;\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n\t// write your code here\n        Scanner in = new Scanner(System.in);\n        int n = in.nextInt();\n\n        List<String> oldList = new ArrayList<>();\n        for (int i = 0; i < n; i++) {\n            oldList.add(in.next());\n        }\n\n        List<String> newList = new ArrayList<>();\n        for (int i = 0; i < n; i++) {\n            newList.add(in.next());\n        }\n\n        List<String> toRemove = new ArrayList<>();\n        for (String s : newList) {\n            if (oldList.contains(s)) {\n                toRemove.add(s);\n                oldList.remove(s);\n            }\n        }\n\n        for (String s : toRemove) {\n            newList.remove(s);\n        }\n\n        int count = 0;\n        if (oldList.size() > 0) {\n            Collections.sort(oldList);\n            Collections.sort(newList);\n\n            String s1 = \"\";\n            String s2 = \"\";\n            for (String s : oldList) {\n                s1 += s;\n            }\n\n            for (String s : newList) {\n                s2 += s;\n            }\n\n\n            for (int i = 0; i < s1.length(); i++) {\n                if (s1.charAt(i) != s2.charAt(i)) {\n                    count++;\n                }\n            }\n        }\n        System.out.println(count);\n    }\n}\n"
        },
        {
            "language": 1,
            "solution": "#####################################   \nimport atexit, io, sys, collections\nbuffer = io.BytesIO() \nsys.stdout = buffer\n@atexit.register \ndef write(): sys.__stdout__.write(buffer.getvalue())   \n##################################### \nimport collections, math\n\ndef f(a,b,n):\n\tc = 0\n\tcc = collections.Counter(a)\n\th = {'M': ['S','L'],'L': ['M','S'],'S': ['M','L'],'XL': ['XS'],'XS': ['XL'],'XXL': ['XXS'],'XXS': ['XXL'],'XXXL': ['XXXS'],'XXXS': ['XXXL']}\n\tleft = []\n\tfor v in b:\n\t\tif cc[v]:\n\t\t\tcc[v]-=1\n\t\telse:\n\t\t\tc+=1\n\t\t\tleft.append(v)\n\t\n\treturn c\n\tfor v in left:\n\t\tfor vv in h[v]:\n\t\t\tif cc[vv]:\n\t\t\t\tcc[vv]-=1\n\t\t\t\tc+=1\n\t\t\t\tbreak\n\n\treturn c\nn = int(raw_input())\na = [raw_input() for _ in range(n)]\na.sort()\n\nb = [raw_input() for _ in range(n)]\nb.sort()\nprint f(a,b,n)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nold = []\nnew = []\nfor i in range(n):\n    old.append(input())\nfor j in range(n):\n    new.append(input())\nold.sort()\nc = 0\nfor o in old:\n    if o in new:\n        new.remove(o)\n    else:\n        c += 1\nprint(c)\n        "
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = [ input() for _ in range(n)]\nb = [ input() for _ in range(n)]\n\nt = 0\nimport collections\n\nda = collections.defaultdict(int)\ndb = collections.defaultdict(int)\nfor ai, bi in zip(a, b):\n    db[bi] += 1\n    da[ai] += 1\n\n\nprint(sum(abs(db[s] - da[s]) for s in set(a + b)) // 2)\n\n"
        },
        {
            "language": 3,
            "solution": "n, d = int(input()), {}\nfor i in range(n * 2):\n    s = input()\n    d[s] = d.get(s, 0) + (1, -1)[i < n]\nprint(sum(v for v in d.values() if v > 0))"
        },
        {
            "language": 1,
            "solution": "from collections import defaultdict\nn = int(raw_input())\nd = defaultdict(int)\nr = defaultdict(int)\nfor i in range(n):\n\ta = raw_input()\n\td[a] += 1\nfor i in range(n):\n\td[raw_input()] -= 1\n# l = []\n# l.append(\"M\")\n# for i in ['S','L']:\n# \tx = ''\n# \tfor j in range(4):\n# \t\tl.append(x+i)\n# \t\tx += 'X'\n# for i in l:\n# \tif r[i] \ns = 0\nfor i in d:\n\tif d[i] > 0:\n\t\ts += d[i]\nprint s"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  map<string, int> ct;\n  int N;\n  cin >> N;\n  for (int i = 0; i < N; i++) {\n    string s;\n    cin >> s;\n    ct[s]++;\n  }\n  for (int i = 0; i < N; i++) {\n    string s;\n    cin >> s;\n    if (ct[s]) ct[s]--;\n  }\n  int m = 0;\n  for (auto i : ct) {\n    m += i.second;\n  }\n  cout << m << endl;\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "\n\n\n\nimport static com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type.String;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.Iterator;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Scanner;\nimport java.util.Set;\nimport java.util.TreeSet;\n\n\npublic class Code {\n     public static void main(String[] args)  {\n\n        Scanner scanner = new Scanner(System.in);\n        int n = Integer.parseInt(scanner.nextLine());\n\n        \n        \n        int counter=0;\n        String [] S1 = new String[n];\n        String [] S2 = new String[n];\n        \n        \n        \n        \n        for (int i=0;i<S1.length;i++){\n        S1 [i]= scanner.nextLine();\n        }\n        for (int i=0;i<S2.length;i++){\n        S2 [i]= scanner.nextLine();\n        }\n        \n        \n        \n        List <String> list2 = new ArrayList <String>();\n        List <String> list1 = new ArrayList <String>();\n        List <String> list3 = new ArrayList <String>();\n        \n        for (int i=0;i<S1.length;i++){\n        list1.add(S1[i]);\n        }\n        \n        \n        \n        \n        for (int i=0;i<S2.length;i++){\n        list2.add(S2[i]);\n        }\n         \n        \n        \n        \n        \n        \n        \n        Collections.sort(list1);   \n         Collections.sort(list2);\n         \n         \n          for (String s : list1){\n              if (list2.contains(s)){\n                  list2.remove(s);\n                  counter +=0;\n              }else counter +=1;\n              \n          \n              \n          \n              \n          }\n         \n         \n            \n        \n              \n         \n             \n               \n             \n             \n              \n                 \n               \n                \n                                   \n         \n                 \n                 System.out.print(counter);\n        \n        /* for (int i=0;i<list1.size();i++){\n             System.out.print(list2.get(i)+ \" \");\n         }*/\n               \n          \n       \n        \n        \n        \n       \n      \n\n     }}"
        },
        {
            "language": 1,
            "solution": "no = int(raw_input())\nold = []\nnew = []\ni=0\nwhile i < no:\n    old.append(raw_input())\n    i=i+1\ni=0\nwhile i < no:\n    new.append(raw_input())\n    i=i+1\ncounter =0\nfor n in new:\n    if n in old:\n        counter +=1\n        old.remove(n)\n\nprint no-counter\n"
        },
        {
            "language": 3,
            "solution": "a=int(input())\n\n\n\n\n\n\n\n\n\n\ns=0\n\n\n\n\n\n\n\n\nz=[input() for _ in \" \"*a]\n\n\n\nfor _ in \" \"*a:\n\n\n\n\n\n\n\n\n    try:\n\n\n        z.remove(input())\n\n\n\n\n\n\n    except:\n\n\n\n\n\n\n        s+=1\n\n\n\n\n\n\nprint(s)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid Draganov47() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n}\nint main() {\n  Draganov47();\n  int n;\n  cin >> n;\n  vector<string> a(n), b(n);\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n  }\n  for (int j = 0; j < n; j++) {\n    cin >> b[j];\n  }\n  sort(a.begin(), a.end());\n  sort(b.begin(), b.end());\n  int ans = 0;\n  for (int i = 0; i < n; i++) {\n    for (int j = 0; j < n; j++) {\n      if (a[i] == b[j]) {\n        a[i] = \"-\";\n        b[j] = \"-\";\n        break;\n      }\n    }\n  }\n  for (int i = 0; i < n; i++) {\n    if (a[i] == \"-\") {\n      continue;\n    }\n    int mn = 1e9, imn = -1;\n    for (int j = 0; j < n; j++) {\n      if (a[i].size() == b[j].size() && a[i] != \"-\" && b[j] != \"-\") {\n        int now = 0;\n        for (int k = 0; k < a[i].size(); k++) {\n          if (a[i][k] != b[j][k]) {\n            now++;\n          }\n        }\n        if (now < mn) {\n          mn = now, imn = j;\n        }\n      }\n    }\n    ans += mn;\n    b[imn] = \"-\";\n  }\n  cout << ans;\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "/*\n * To change this license header, choose License Headers in Project Properties.\n * To change this template file, choose Tools | Templates\n * and open the template in the editor.\n */\n\n/**\n *\n * @author dipankar12\n */\nimport java.io.*;\nimport java.util.*;\npublic class r46a {\n    public static void main(String args[])\n    {\n        fastio in=new fastio(System.in);\n        PrintWriter pw=new PrintWriter(System.out);\n\n        int n=in.nextInt();\n        HashMap<String,Integer> olds=new HashMap<String,Integer>();\n        HashMap<String,Integer> news=new HashMap<String,Integer>();\n        ArrayList<String> one=new ArrayList<String>();\n        ArrayList<String> two=new ArrayList<String>();\n        ArrayList<String> three=new ArrayList<String>();\n        ArrayList<String> four=new ArrayList<String>();\n        \n        for(int i=0;i<n;i++)\n        {\n            String str=in.readString();\n            if(olds.containsKey(str))\n                olds.put(str, olds.get(str)+1);\n            else\n                olds.put(str, 1);\n        }\n        \n        for(int i=0;i<n;i++)\n        {\n            String str=in.readString();\n            if(olds.containsKey(str))\n            {\n                int x=olds.get(str);\n                x--;\n                if(x>0)\n                    olds.put(str,x);\n                else\n                    olds.remove(str);\n            }\n            else\n            {\n                if(news.containsKey(str))\n                    news.put(str, news.get(str)+1);\n                else\n                    news.put(str, 1);\n                \n                if(str.length()==1)\n                    one.add(str);\n                else if(str.length()==2)\n                    two.add(str);\n                else if(str.length()==3)\n                    three.add(str);\n                else\n                    four.add(str);\n            }\n        }\n        \n        int count=0;\n            Iterator it=olds.entrySet().iterator();\n            while(it.hasNext())\n            {\n                Map.Entry me=(Map.Entry)it.next();\n                String s=me.getKey().toString();\n                int val=(Integer)me.getValue();\n                \n                count+=val;\n            }\n            \n            pw.println(count);\n            pw.close();\n    }\n\n    static class fastio {\n     \n            private final InputStream stream;\n            private final byte[] buf = new byte[8192];\n            private int cchar, snchar;\n            private SpaceCharFilter filter;\n     \n            public fastio(InputStream stream) {\n                this.stream = stream;\n            }\n     \n            public int nxt() {\n                if (snchar == -1)\n                    throw new InputMismatchException();\n                if (cchar >= snchar) {\n                    cchar = 0;\n                    try {\n                        snchar = stream.read(buf);\n                    } catch (IOException e) {\n                        throw new InputMismatchException();\n                    }\n                    if (snchar <= 0)\n                        return -1;\n                }\n                return buf[cchar++];\n            }\n     \n            public int nextInt() {\n                int c = nxt();\n                while (isSpaceChar(c)) {\n                    c = nxt();\n                }\n                int sgn = 1;\n                if (c == '-') {\n                    sgn = -1;\n                    c = nxt();\n                }\n                int res = 0;\n                do {\n                    if (c < '0' || c > '9')\n                        throw new InputMismatchException();\n                    res *= 10;\n                    res += c - '0';\n                    c = nxt();\n                } while (!isSpaceChar(c));\n                return res * sgn;\n            }\n     \n            public long nextLong() {\n                int c = nxt();\n                while (isSpaceChar(c)) {\n                    c = nxt();\n                }\n                int sgn = 1;\n                if (c == '-') {\n                    sgn = -1;\n                    c = nxt();\n                }\n                long res = 0;\n                do {\n                    if (c < '0' || c > '9')\n                        throw new InputMismatchException();\n                    res *= 10;\n                    res += c - '0';\n                    c = nxt();\n                } while (!isSpaceChar(c));\n                return res * sgn;\n            }\n     \n            public int[] nextIntArray(int n) {\n                int a[] = new int[n];\n                for (int i = 0; i < n; i++) {\n                    a[i] = nextInt();\n                }\n                return a;\n            }\n     \n            public String readString() {\n                int c = nxt();\n                while (isSpaceChar(c)) {\n                    c = nxt();\n                }\n                StringBuilder res = new StringBuilder();\n                do {\n                    res.appendCodePoint(c);\n                    c = nxt();\n                } while (!isSpaceChar(c));\n                return res.toString();\n            }\n     \n            public String nextLine() {\n                int c = nxt();\n                while (isSpaceChar(c))\n                    c = nxt();\n                StringBuilder res = new StringBuilder();\n                do {\n                    res.appendCodePoint(c);\n                    c = nxt();\n                } while (!isEndOfLine(c));\n                return res.toString();\n            }\n     \n            public boolean isSpaceChar(int c) {\n                if (filter != null)\n                    return filter.isSpaceChar(c);\n                return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n            }\n     \n            private boolean isEndOfLine(int c) {\n                return c == '\\n' || c == '\\r' || c == -1;\n            }\n     \n            public interface SpaceCharFilter {\n                public boolean isSpaceChar(int ch);\n            }\n        }\n    \n\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint call(char* s) {\n  if (strcmp(s, \"S\") == 0)\n    return 0;\n  else if (strcmp(s, \"M\") == 0)\n    return 1;\n  else if (strcmp(s, \"L\") == 0)\n    return 2;\n  else if (strcmp(s, \"XS\") == 0)\n    return 3;\n  else if (strcmp(s, \"XL\") == 0)\n    return 4;\n  else if (strcmp(s, \"XXS\") == 0)\n    return 5;\n  else if (strcmp(s, \"XXL\") == 0)\n    return 6;\n  else if (strcmp(s, \"XXXS\") == 0)\n    return 7;\n  else\n    return 8;\n}\nint main() {\n  int n, k, i, t, ans = 0, j, f;\n  char s[100];\n  cin >> n;\n  int a[10], b[10], mark[10];\n  for (i = 0; i <= 10; i++) {\n    a[i] = 0;\n    b[i] = 0;\n  }\n  for (i = 0; i < n; i++) {\n    cin >> s;\n    a[call(s)]++;\n  }\n  for (i = 0; i < n; i++) {\n    cin >> s;\n    b[call(s)]++;\n  }\n  for (i = 0; i < 9; i++) {\n    if (a[i] && a[i] > b[i]) {\n      ans += a[i] - b[i];\n    }\n  }\n  cout << ans;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nx = [input() for i in range(n)]\ny = [input() for i in range(n)]\nx.sort()\ny.sort()\nans = 0\nwhile x:\n    if x[-1] not in y:\n        ans += 1\n    else:\n        y.pop(y.index(x[-1]))\n    x.pop()\nprint(ans)"
        },
        {
            "language": 3,
            "solution": "#!/usr/bin/python3\n\ndef solve(N, A, B):\n    ad = {'XXXS': 0, 'XXS': 0, 'XS': 0, 'S': 0, 'M': 0, 'L': 0,\n          'XL': 0, 'XXL': 0, 'XXXL': 0}\n    bd = dict(ad)\n    for a in A:\n        ad[a] += 1\n    for b in B:\n        bd[b] += 1\n\n    ans = 0\n    for k in ad:\n        c = min(ad[k], bd[k])\n        ans += ad[k] - c\n\n    return ans\n\n\ndef main():\n    N = int(input())\n\n    A = [input() for _ in range(N)]\n    B = [input() for _ in range(N)]\n\n    print(solve(N, A, B))\n\n\nif __name__ == '__main__':\n    main()\n"
        },
        {
            "language": 4,
            "solution": "\n\nimport java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class A {\n\n\tpublic static void main(String[] args){\n\t\tScanner s = new Scanner(System.in);\n\t\tint n = Integer.parseInt(s.nextLine());\n\t\t\n\t\tString[] as = new String[n];\n\t\tString[] bs = new String[n];\n\n\t\tfor(int i=0;i<n;i++){\n\t\t\tas[i] = s.nextLine();\n\t\t}\n\n\t\tfor(int i=0;i<n;i++){\n\t\t\tbs[i] = s.nextLine();\n\t\t}\n\t\t\n\t\tfinal String MARKED = \"MARKED\";\n\t\tfor(int i=0; i<as.length; i++){\n\t\t\tboolean markMade = false;\n\t\t\tfor(int j=0; j<bs.length && markMade == false; j++){\n\t\t\t\tif(as[i].equals(bs[j])){\n\t\t\t\t\t//System.out.println(\"Similar detected\");\n\t\t\t\t\tas[i] = MARKED;\n\t\t\t\t\tbs[j] = MARKED;\n\t\t\t\t\tmarkMade = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tArrayList<String> aal = new ArrayList<>();\n\t\tArrayList<String> bal = new ArrayList<>();\n\n\t\tfor(int i=0; i<n; i++){\n\t\t\tif(as[i] != MARKED)\n\t\t\t\taal.add(as[i]);\n\t\t\t\n\t\t\tif(bs[i] != MARKED)\n\t\t\t\tbal.add(bs[i]);\n\t\t}\n\n\n\t\t//override as and bs\n\t\tas = new String[aal.size()];\n\t\tbs = new String[bal.size()];\n\t\tfor(int i=0; i<aal.size(); i++){\n\t\t\tas[i] = aal.get(i);\n\t\t}\n\t\tfor(int i=0; i<bal.size(); i++){\n\t\t\tbs[i] = bal.get(i);\n\t\t}\n\n\n\t\tSystem.out.println(as.length);\n\t}\n\t\n}\n"
        },
        {
            "language": 4,
            "solution": "\n\nimport java.io.FileInputStream;\nimport java.io.FileNotFoundException;\nimport java.io.PrintStream;\nimport java.util.*;\n\n/**\n * Copyright \u00a9 2018 Chris. All rights reserved.\n *\n * @author Chris\n * 2018/6/27 22:35\n * @see ECR46\n */\npublic class Main {\n\n    private static void solve(Scanner sc) {\n        int n = sc.nextInt();\n\n        int cnt[] = new int[128 << 2];\n        for (int i = 0; i < n << 1; i++) {\n            char ch[] = sc.next().toCharArray();\n            for (int j = 0; j < ch.length; j++) {\n                cnt[ch[j] * ch.length] += i < n ? 1 : -1;\n            }\n        }\n\n        int sum = 0;\n        for (int i = 0; i < 128 << 2; i++) {\n            sum += Math.abs(cnt[i]);\n        }\n        System.out.println(sum / 2);\n    }\n\n    public static void main(String args[]) throws FileNotFoundException {\n        //System.setIn(new FileInputStream(\"in.txt\"));\n        //System.setOut(new PrintStream(\"out.txt\"));\n\n        solve(new Scanner(System.in));\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nl1=[]\n\nfor v in range(0,t):\n    x=input()\n    l1.append(x)\ns=0\nfor v in range(0,t):\n    y=input()\n    if y in l1:\n        l1.remove(y)\n    else:\n        s+=1\nprint(s)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 100;\nint n;\nstring a[maxn];\nstring b[maxn];\nbool cmp(string a, string b) {\n  if (a.length() < b.length())\n    return true;\n  else if (a.length() > b.length())\n    return false;\n  return a > b;\n}\nint cnt[4][3];\nint char2idx(char ch) {\n  switch (ch) {\n    case 'S':\n      return 0;\n    case 'M':\n      return 1;\n    case 'L':\n      return 2;\n    default:\n      return -1;\n  }\n  return -1;\n}\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  cin >> n;\n  for (int(i) = 0; (i) < (n); (i)++) {\n    cin >> a[i];\n    int idx = a[i].length() - 1;\n    int row = char2idx(a[i][idx]);\n    cnt[idx][row]++;\n  }\n  for (int(i) = 0; (i) < (n); (i)++) {\n    cin >> b[i];\n    int idx = b[i].length() - 1;\n    int row = char2idx(b[i][idx]);\n    cnt[idx][row]--;\n  }\n  int res = 0;\n  for (int(i) = 0; (i) < (4); (i)++) {\n    int sum = 0;\n    for (int(j) = 0; (j) < (3); (j)++) {\n      sum += abs(cnt[i][j]);\n    }\n    res += (sum / 2);\n  }\n  cout << res << endl;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "#!/usr/bin/env python3\n#-*- encoding: utf-8 -*-\n\nimport sys\nfrom collections import Counter\n\n#read_int = int(sys.stdin.readline())\n#read_list = map(int,sys.stdin.readline().split())\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = [sys.stdin.readline().strip() for _ in range(n)]\n    b = [sys.stdin.readline().strip() for _ in range(n)]\n    res = 0\n    for e in a:\n        if e in b:\n            b.remove(e)\n        else:\n            res += 1\n    print(res)\n\nmain()\n"
        },
        {
            "language": 3,
            "solution": "#      Educational Codeforces Round 46 (Rated for Div. 2)\nimport collections\nfrom functools import cmp_to_key\n#key=cmp_to_key(lambda x,y: 1 if x not in y else -1 )\nimport math\nimport sys\ndef getIntList():\n    return list(map(int, input().split()))    \n\nimport bisect \ntry :\n    import numpy\n    dprint = print\n    dprint('debug mode')\nexcept ModuleNotFoundError:\n    def dprint(*args, **kwargs):\n        pass\ndef makePair(z):\n    return  [(z[i], z[i+1]) for i in range(0,len(z),2) ]\ndef memo(func):  \n    cache={}  \n    def wrap(*args):  \n        if args not in cache:  \n            cache[args]=func(*args)  \n        return cache[args]  \n    return wrap\n\n@memo\ndef comb (n,k):\n    if k==0: return 1\n    if n==k: return 1\n    return comb(n-1,k-1) + comb(n-1,k)\n\nN , = getIntList()\nz1 = collections.Counter()\nz2 = collections.Counter()\nfor i in range(N):\n    a = input()\n    z1[a] +=1\nfor i in range(N):\n    a = input()\n    if z1[a] >0:\n        z1[a]-=1\n    else:\n        z2[a] +=1\n\nres = 0\nres = z1['M'] \nfor i in range(4):\n    res +=   z1['X'*i + 'L'] + z1['X'*i + 'S']\nprint(res)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = [input().strip() for _ in range(n)]\nb = [input().strip() for _ in range(n)]\n\nfrom collections import Counter\nac, bc = Counter(a), Counter(b)\n\ns = ['M', 'L', 'S', 'XL', 'XXL', 'XXXL', 'XS', 'XXS', 'XXXS']\nfor s1 in s:\n    if s1 in ac and s1 in bc:\n        m = min(ac[s1], bc[s1])\n        ac[s1] -= m\n\nprint(sum(ac[s1] for s1 in s if ac[s1] is not None))"
        },
        {
            "language": 3,
            "solution": "import sys\n\ndef enter_tshirts(tshirts, n):\n    for i in range(n):\n        tshirt = input()\n\n        if tshirt in tshirts:\n            tshirts[tshirt] += 1\n        else:\n            tshirts[tshirt] = 1\n\nn = int(input())\nold_tshirts = dict()\nnew_tshirts = dict()\n\nenter_tshirts(old_tshirts, n)\nenter_tshirts(new_tshirts, n)\n\nanswer = 0\nfor tshirt in old_tshirts:\n    if tshirt in new_tshirts:\n        dif = old_tshirts[tshirt] - new_tshirts[tshirt]\n        answer += dif if dif >= 0 else 0\n    else:\n        answer += old_tshirts[tshirt]\n\nprint(answer)\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = []\nfor i in range(n):\n    a.append(input())\n\nfor i in range(n):\n    s = input()\n    if s in a:\n        a.remove(s)\nprint(len(a))\n"
        },
        {
            "language": 3,
            "solution": "def cmp(x):\n\treturn [ len(x), x ]\n\nn = int(input())\na = [ input() for _ in range(n) ]\nb = [ input() for _ in range(n) ]\n\nm, l, s = a.count('M'), a.count('L'), a.count('S')\nxl, xs = a.count('XL'), a.count('XS')\nxxl, xxs = a.count('XXL'), a.count('XXS')\nxxxl, xxxs = a.count('XXXL'), a.count('XXXS')\n\nm1, l1, s1 = b.count('M'), b.count('L'), b.count('S')\nxl1, xs1 = b.count('XL'), b.count('XS')\nxxl1, xxs1 = b.count('XXL'), b.count('XXS')\nxxxl1, xxxs1 = b.count('XXXL'), b.count('XXXS')\n\nans = 0\nans += abs(xl - xl1)\nans += abs(xxl - xxl1)\nans += abs(xxxl - xxxl1)\nif m > m1:\n\tans += (m - m1)\nif l > l1:\n\tans += (l - l1)\nif s > s1:\n\tans += (s - s1)\n\nprint(ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  while (cin >> n) {\n    string pre[n];\n    string cur[n];\n    for (int i = 0; i < n; i++) cin >> pre[i];\n    for (int i = 0; i < n; i++) cin >> cur[i];\n    int req = n;\n    for (int i = 0; i < n; i++) {\n      for (int j = 0; j < n; j++) {\n        if (pre[i] == cur[j]) {\n          req--;\n          cur[j] = \"Fuck You\\n\";\n          break;\n        }\n      }\n    }\n    cout << req << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long n, i, j, k, l, sum = 0, flag = 0, t, a[1000000], ans = 0;\nmap<long long, long long> m;\nmap<string, long long> mm;\nstring s;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> s;\n    mm[s]++;\n  }\n  for (int i = 0; i < n; ++i) {\n    cin >> s;\n    if (mm[s] > 0) {\n      mm[s]--;\n    } else\n      ans++;\n  }\n  cout << ans << '\\n';\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\ns1 = []\n\nfor a in range(n):\n\ts1.append(input())\nfor a in range(n):\n\tx = input()\n\tif x in s1:\n\t\ts1.remove(x)\n\nprint(len(s1))\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nlong int a[10] = {0};\nlong int b[10] = {0};\nchar s[100];\nint main() {\n  long int i, j, k, l, t, n, x, y, count, flag, m;\n  scanf(\"%ld\", &n);\n  for (i = 0; i < n; i++) {\n    scanf(\"%s\", s);\n    j = strlen(s);\n    if (j == 1) {\n      if (s[0] == 'S')\n        a[3]++;\n      else if (s[0] == 'M')\n        a[4]++;\n      else if (s[0] == 'L')\n        a[5]++;\n    } else if (j == 2) {\n      if (s[1] == 'S')\n        a[2]++;\n      else if (s[1] == 'L')\n        a[6]++;\n    } else if (j == 3) {\n      if (s[2] == 'S')\n        a[1]++;\n      else if (s[2] == 'L')\n        a[7]++;\n    } else if (j == 4) {\n      if (s[3] == 'S')\n        a[0]++;\n      else if (s[3] == 'L')\n        a[8]++;\n    }\n  }\n  for (i = 0; i < n; i++) {\n    scanf(\"%s\", s);\n    j = strlen(s);\n    if (j == 1) {\n      if (s[0] == 'S')\n        b[3]++;\n      else if (s[0] == 'M')\n        b[4]++;\n      else if (s[0] == 'L')\n        b[5]++;\n    } else if (j == 2) {\n      if (s[1] == 'S')\n        b[2]++;\n      else if (s[1] == 'L')\n        b[6]++;\n    } else if (j == 3) {\n      if (s[2] == 'S')\n        b[1]++;\n      else if (s[2] == 'L')\n        b[7]++;\n    } else if (j == 4) {\n      if (s[3] == 'S')\n        b[0]++;\n      else if (s[3] == 'L')\n        b[8]++;\n    }\n  }\n  count = 0;\n  for (i = 0; i <= 8; i++) {\n    count += abs(a[i] - b[i]);\n  }\n  printf(\"%ld\\n\", count / 2);\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "\n\nA = [[0 for _ in range(len(\"SML\"))] for _ in range(4 + 1)]\nB = [[0 for _ in range(len(\"SML\"))] for _ in range(4 + 1)]\n\nn = int(input())\n\nMM = {\n    'S': 0,\n    'M': 1,\n    'L': 2\n}\n\nfor _ in range(n):\n    tmp = input()\n    A[len(tmp)][MM[tmp[-1]]] += 1\n\nfor _ in range(n):\n    tmp = input()\n    B[len(tmp)][MM[tmp[-1]]] += 1\n\nresult = 0\n\nfor i in range(len(A)):\n    for j in range(len(A[i])):\n        result += max([0, A[i][j] - B[i][j]])\n\n\nprint(result)\n"
        },
        {
            "language": 3,
            "solution": "oldArray, newArray = [], [] \nresult=0\nnumber=int(input())\nfor i in range (0,number):\n\tbar=input()\n\toldArray.append(bar)\nfor i in range (0,number):\n\tbar=input()\n\tif bar in set(oldArray):\n\t\toldArray.remove(bar)\n\telse:\n\t\tnewArray.append(bar)\n\n\n\nfor i in oldArray:\n\tif len(i)==1:\n\t\tresult+=1\n\telse:\n\t\tT=0\n\t\tv=len(i)\n\t\tfor g in newArray:\n\t\t\tif len(g)==v:\n\t\t\t\tt=0\n\t\t\t\t\n\t\t\t\tfor y in range(0,v):\n\t\t\t\t\tif i[y]==g[y]:\n\t\t\t\t\t\tt+=1\n\t\t\t\tif t>T:\n\t\t\t\t\tT=t\n\t\t\t\t\tk=g\n\t\t\t\t\tu=v\n\t\tnewArray.remove(k)\n\t\tresult+=(v-T)\nprint(result)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint vis[101];\nstring a[101], b[101];\nint main() {\n  int n;\n  while (cin >> n) {\n    memset(vis, 0, sizeof(vis));\n    for (int i = 0; i < n; ++i) {\n      cin >> a[i];\n    }\n    for (int i = 0; i < n; ++i) {\n      cin >> b[i];\n    }\n    int ans = 0;\n    for (int i = 0; i < n; ++i) {\n      for (int j = 0; j < n; ++j) {\n        if (a[i] == b[j] && !vis[j]) {\n          vis[j] = 1;\n          ans++;\n          break;\n        }\n      }\n    }\n    ans = n - ans;\n    cout << ans << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "\n\nimport java.util.Scanner;\n\npublic class Pro {\n    public static void main(String[] args) {\n       Scanner input= new Scanner(System.in);\n       String s2;\n       int i,j,k,n,sum;\n       boolean is;\n       while (input.hasNext()){\n           n = input.nextInt();  s2 = input.nextLine(); sum=0;\n           String[] s = new String[n];\n           String[] s1 =new String[n];\n           String[] s5 = new String[n];\n           for (i=0; i<n; i++){\n               s[i] = input.nextLine();//System.out.println(s[i]);\n           }//s2 = input.nextLine();\n           for (i=0; i<n; i++){\n               s1[i] = input.nextLine();//System.out.println(s1[i]);\n           }\n           int m=0; is = false;\n\n\n           for (i=0; i<n; i++) {\n               is = false;\n\n               for (j = 0; j < n; j++) {\n\n                   if (s1[i].equals(s[j])) {\n                       s[j] = \" \";\n                       is = true;\n                       break;\n                   }\n               }\n               if (!is) {\n                   sum++;\n               }\n           }\n\n\n\n\n               System.out.println(sum);\n           }\n\n\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.ArrayList;\nimport java.util.Scanner;\nimport java.lang.StringBuilder;\nimport java.util.Arrays;\nimport java.util.Stack;\nimport java.util.TreeMap;\npublic class Test11   {  \n    public static void main(String[] Args)   {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        String s0 = sc.nextLine();\n        int s = 0; // S\n        int m = 0;\n        int l = 0;\n        int s1 = 0;\n        int l1 = 0;\n        int s2 = 0;\n        int l2 = 0;\n        int s3 = 0;\n        int l3 = 0;\n        for (int i = 0; i < n; i++)  {\n            s0 = sc.nextLine();\n            if (s0.charAt(0) == 'S') s++;\n            if (s0.charAt(0) == 'M') m++;\n            if (s0.charAt(0) == 'L') l++;\n            if (s0.charAt(0) == 'X' && s0.length() == 2 && s0.charAt(s0.length() - 1) == 'S') s1++;\n            if (s0.charAt(0) == 'X' && s0.length() == 3 && s0.charAt(s0.length() - 1) == 'S') s2++;\n            if (s0.charAt(0) == 'X' && s0.length() == 4 && s0.charAt(s0.length() - 1) == 'S') s3++;\n            if (s0.charAt(0) == 'X' && s0.length() == 2 && s0.charAt(s0.length() - 1) == 'L') l1++;\n            if (s0.charAt(0) == 'X' && s0.length() == 3 && s0.charAt(s0.length() - 1) == 'L') l2++;\n            if (s0.charAt(0) == 'X' && s0.length() == 4 && s0.charAt(s0.length() - 1) == 'L') l3++;\n        }    \n        int rs = 0; // S\n        int rm = 0;\n        int rl = 0;\n        int rs1 = 0;\n        int rl1 = 0;\n        int rs2 = 0;\n        int rl2 = 0;\n        int rs3 = 0;\n        int rl3 = 0;\n        for (int i = 0; i < n; i++)  {\n            s0 = sc.nextLine();\n            if (s0.charAt(0) == 'S') rs++;\n            if (s0.charAt(0) == 'M') rm++;\n            if (s0.charAt(0) == 'L') rl++;\n            if (s0.charAt(0) == 'X' && s0.length() == 2 && s0.charAt(s0.length() - 1) == 'S') rs1++;\n            if (s0.charAt(0) == 'X' && s0.length() == 3 && s0.charAt(s0.length() - 1) == 'S') rs2++;\n            if (s0.charAt(0) == 'X' && s0.length() == 4 && s0.charAt(s0.length() - 1) == 'S') rs3++;\n            if (s0.charAt(0) == 'X' && s0.length() == 2 && s0.charAt(s0.length() - 1) == 'L') rl1++;\n            if (s0.charAt(0) == 'X' && s0.length() == 3 && s0.charAt(s0.length() - 1) == 'L') rl2++;\n            if (s0.charAt(0) == 'X' && s0.length() == 4 && s0.charAt(s0.length() - 1) == 'L') rl3++;\n        }     \n        int ans = Math.abs(s1 - rs1) + Math.abs(s2 - rs2) + Math.abs(s3 - rs3) + (Math.abs(s - rs) + Math.abs(l - rl) + Math.abs(m - rm))/2;\n        System.out.println(ans);\n            \n   }\n}"
        },
        {
            "language": 4,
            "solution": "    import java.io.*;\n    import java.math.*;\n    import java.util.*;\n    import java.util.Arrays;\n    public class Test1{\n        public static void main(String args[])throws IOException{\n            Scanner sc=new Scanner(System.in);\n            int n=sc.nextInt();\n            int a[]=new int[9];\n            int i,j;\n            for(i=0;i<n;i++)\n            {\n                String ch=sc.next();\n                if(ch.equals(\"XXXS\"))\n                a[0]++;\n                else if(ch.equals(\"XXS\"))\n                a[1]++;\n                else if(ch.equals(\"XS\"))\n                a[2]++;\n                else if(ch.equals(\"S\"))\n                a[3]++;\n                else if(ch.equals(\"M\"))\n                a[4]++;\n                else if(ch.equals(\"L\"))\n                a[5]++;\n                else if(ch.equals(\"XL\"))\n                a[6]++;\n                else if(ch.equals(\"XXL\"))\n                a[7]++;\n                else if(ch.equals(\"XXXL\"))\n                a[8]++;\n            }\n            int res=0;\n            int b[]=new int[9];\n            for(i=0;i<n;i++)\n            {\n                String ch=sc.next();\n                if(ch.equals(\"XXXS\"))\n                b[0]++;\n                else if(ch.equals(\"XXS\"))\n                b[1]++;\n                else if(ch.equals(\"XS\"))\n                b[2]++;\n                else if(ch.equals(\"S\"))\n                b[3]++;\n                else if(ch.equals(\"M\"))\n                b[4]++;\n                else if(ch.equals(\"L\"))\n                b[5]++;\n                else if(ch.equals(\"XL\"))\n                b[6]++;\n                else if(ch.equals(\"XXL\"))\n                b[7]++;\n                else if(ch.equals(\"XXXL\"))\n                b[8]++;\n            }\n            for(i=0;i<9;i++)\n            {\n                if(b[i]>a[i])\n                res+=(b[i]-a[i]);\n            }\n            System.out.println(res);\n        }\n    }"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstring a[105], b[105];\nmap<string, int> A, B;\nint main() {\n  int n;\n  cin >> n;\n  for (int i = 0; i < n; i++) cin >> a[i];\n  for (int i = 0; i < n; i++) cin >> b[i];\n  for (int i = 0; i < n; i++) {\n    A[a[i]]++;\n    B[b[i]]++;\n  }\n  map<string, int>::iterator it;\n  int ans = n;\n  for (it = A.begin(); it != A.end(); it++) {\n    ans -= min(it->second, B[it->first]);\n  }\n  cout << ans << endl;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long junger = 0, mid = 0, top = 0, bot = 0, result = 0, sum = 0, s = 0,\n          t = 0, d = 0, l = 0, sp = 0, k = 0, x, y, n, m, test, r;\nbool kt = false, t1 = false, t2 = false;\nstring s1, s2;\nlong long a[200050];\nint main() {\n  std::ios::sync_with_stdio(false);\n  while (cin >> n) {\n    long long a[5][255], b[5][255];\n    for (long long(i) = (0); (i) < (4); ++(i)) {\n      a[i]['M'] = 0;\n      a[i]['S'] = 0;\n      a[i]['L'] = 0;\n    }\n    for (long long(i) = (0); (i) < (4); ++(i)) {\n      b[i]['M'] = 0;\n      b[i]['S'] = 0;\n      b[i]['L'] = 0;\n    }\n    for (long long(i) = (0); (i) < (n); ++(i)) {\n      cin >> s1;\n      a[(s1.length() - 1)][s1[s1.length() - 1]]++;\n    }\n    for (long long(i) = (0); (i) < (n); ++(i)) {\n      cin >> s1;\n      b[(s1.length() - 1)][s1[s1.length() - 1]]++;\n    }\n    s = 0;\n    for (long long(i) = (0); (i) < (4); ++(i)) {\n      s += abs(b[i]['M'] - a[i]['M']);\n      s += abs(b[i]['S'] - a[i]['S']);\n      s += abs(b[i]['L'] - a[i]['L']);\n    }\n    cout << s / 2 << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": " import java.io.*;\n    import java.util.*;\n  \n \n  \n        public class Codeforces {\n    \t\n    \t\t   public static long log2(long x)\n    \t\t\t{\n    \t\t\t\tlong p=1;\n    \t\t\t\tlong ans=0;\n    \t\t\t\twhile(x>=p)\n    \t\t\t\t{\n    \t\t\t\t\tp*=2;\n    \t\t\t\t\tans++;\n    \t\t\t\t}\n    \t\t\t\treturn ans-1;\n    \t\t\t}\n    \t\t   \n    \t\t   \n    \t\t   public static void extendedgcd(int a, int b)\n    \t\t   {\n    \t\t\t   x=0;\n    \t\t\t   y=0;\n    \t\t\t   gc=0;\n    \t\t\t   xgcd(a,b);\n    \t\t\t   pw.println(a+\"*\"+x+\" + \"+b+\"*\"+y+\" = \"+gc);\n    \t\t\t   \n    \t\t   }\n    \t\t   \n    \t\t   \n    \t\t   public static long modex(long a, long b, long c)\n    \t\t   {\n    \t\t\t   if(b==0)\n    \t\t\t\t   return 1;\n    \t\t\t   else if(b==1)\n    \t\t\t\t   return a%c;\n    \t\t\t   else if(b%2==0)\n    \t\t\t   {\n    \t\t\t\t   \treturn modex((a*a)%c,b/2,c);\n    \t\t\t   }\n    \t\t\t   else\n    \t\t\t   {\n    \t\t\t\t   return (a*modex((a*a)%c,b/2,c))%c;\n    \t\t\t\t   \n    \t\t\t   }\n    \t\t\t   \n    \t\t\t   \n    \t\t   }\n    \t\t   \n    \t\t   \n    \t\t   public static void xgcd(int a, int b)\n    \t\t   {\n    \t\t\t   \n    \t\t\t   if(b==0)\n    \t\t\t   {\n    \t\t\t\t   x=1;\n    \t\t\t\t   y=0;\n    \t\t\t\t   gc=a;\n    \t\t\t\t   \n    \t\t\t\t   \n    \t\t\t   }\n    \t\t\t   else\n    \t\t\t   {\n    \t\t\t\t   xgcd(b,a%b);\n    \t\t\t\t   int temp = x;\n    \t\t\t\t   x=y;\n    \t\t\t\t   y = temp - ((a/b)*y);\n    \t\t\t\t   \n    \t\t\t   }\n    \t\t   }\n    \t\t   \n    \t\t   public static long gcd(long a, long b)\n    \t\t   {\n    \t\t\t   if(b==0)return a;\n    \t\t\t   else return gcd(b,a%b);\n    \t\t\t   \n    \t\t   }\n    \t\t   \n    \t\t   static int x,y,gc;\n    \t\t   \n    \t\t  \n    \t\t\n    \t\t   \n    \t\t   static HashSet<Character> set;\n    \t\t   \n    \t\t   \n    \t\t   \n    \t\t   public static long expmod(long a, long b, long mod)\n    \t\t   {\n    \t\t\t   if(b==0)return 1;\n    \t\t\t   if(b==1)return a;\n    \t\t\t   \n    \t\t\t   if(b%2==0)\n    \t\t\t   {\n    \t\t\t\t   return ((expmod(a,b/2,mod)%mod)*(expmod(a,b/2,mod)%mod))%mod;\n    \t\t\t   }\n    \t\t\t   else\n    \t\t\t   {\n    \t\t\t\t   return ((a%mod)*(expmod(a,b/2,mod)%mod)*(expmod(a,b/2,mod)%mod))%mod;\n    \t\t\t   }\n    \t\t   }\n    \t\t   \n    \t\t   static class Comp implements Comparator<Point>\n    \t\t   {\n\n\t\t\t\t@Override\n\t\t\t\tpublic int compare(Point arg0, Point arg1) {\n\t\t\t\t\t\n\t\t\t\t\tif(arg0.x>arg1.x)return 1;\n\t\t\t\t\tif(arg0.x<arg1.x)return -1;\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n    \t\t\t   \n    \t\t   }\n    \t\t   \n    \t\t   \n    \t\t   static class STComp implements Comparator<Integer>\n    \t\t   {\n\n\t\t\t\t@Override\n\t\t\t\tpublic int compare(Integer arg0, Integer arg1) {\n\t\t\t\t\t\n\t\t\t\t\treturn arg0.compareTo(arg1); \n\t\t\t\t}\n    \t\t\t   \n    \t\t   }\n    \t\t   \n    \t\t   static class Point\n    \t\t   {\n    \t\t\t   int x,y,ind;\n    \t\t\t   \n    \t\t\t    public Point(int a, int b)\n    \t\t\t    {\n    \t\t\t    \tx=a;\n    \t\t\t    \ty=b;\n    \t\t\t    \tind=0;\n    \t\t\t    }\n    \t\t\t   \n    \t\t\t    \n    \t\t   }\n    \t\t   \n    \t\t \n    \t\t   \n    \t\t  \n    \t\t   \n    \t\t   public static boolean issub(String s1, String s2)\n    \t\t   {\n    \t\t\t   if(s1.length()>s2.length())\n    \t\t\t   return false;\n    \t\t\t   \n    \t\t\t   int l1 = s1.length();\n    \t\t\t   int l2 = s2.length();\n    \t\t\t   \n    \t\t\t   \n    \t\t\t   for(int i=0;i<=l2-l1;i++)\n    \t\t\t   {\n    \t\t\t\t   String sub = s2.substring(i, i+l1);\n    \t\t\t\t   if(s1.equals(sub))return true;\n    \t\t\t   }\n    \t\t\t   \n    \t\t\t   return false;\n    \t\t   }\n    \t\t   \n    \t\t   \n    \t\t   \n    \t\t   public static String enc(String s, int n)\n    \t\t   {\n    \t\t\t   String s1 = s.substring(0,n);\n    \t\t\t   String s2 = s.substring(n, s.length());\n    \t\t\t   \n    \t\t\t  String re=\"\";\n    \t\t\t  for(int i=s1.length()-1;i>=0;i--)re+=s1.charAt(i);\n    \t\t\t  \n    \t\t\t  return re+s2;\n    \t\t\t   \n    \t\t\t   \n    \t\t\t   \n    \t\t   }\n    \t\t \n    \t\t   \n    \t\t   \n    \t\t   static int vis[];\n    \t\t   \n    \t\t   public static void dfs(int x)\n    \t\t   {\n    \t\t\t   vis[x]=1;\n    \t\t\t   \n    \t\t\t   ArrayList<Integer> li = adj[x];\n    \t\t\t   \n    \t\t\t   for(int ch:li)\n    \t\t\t   {\n    \t\t\t\t   \n    \t\t\t\t   if(vis[ch]==0)dfs(ch);\n    \t\t\t\t   \n    \t\t\t   }\n    \t\t\t   \n    \t\t   }\n    \t\t   /*\n    \t\t   public static void dfsm(int x, HashSet<Integer> set)\n    \t\t   {\n    \t\t\t   vis2[x]=1;\n    \t\t\t   \n    \t\t\t   ArrayList<Integer> li = adj[x];\n    \t\t\t   \n    \t\t\t   for(int ch:li)\n    \t\t\t   {\n    \t\t\t\t   //if(!set.contains(ch))continue;\n    \t\t\t\t   if(vis2[ch]==0)dfsm(ch,set);\n    \t\t\t\t   \n    \t\t\t   }\n    \t\t\t   \n    \t\t   }\n    \t\t   */\n    \t\t   \n    \t\t  \n    \t\t   \n    \t\t   static  ArrayList<Integer>[] adj;\n    \t\t   static int[] vis2;\n    \t\t   static int ct;\n    \t\t   \n    \t\t   static  ArrayList<Integer>[] paths;\n    \t\t   \n    \t\t   \n    \t\t   public static void countPaths(int s, int d, ArrayList<Integer> pa)\n    \t\t   {\n    \t\t\t   \n    \t\t\t   vis2[s]=1;\n    \t\t\t   if(s==d)\n    \t\t\t   {\n    \t\t\t\t   pa.add(s);\n    \t\t\t\t   paths[ct] = new ArrayList<Integer>(pa);\n    \t\t\t\t   ct++;\n    \t\t\t   }\n    \t\t\t   else\n    \t\t\t   {\n    \t\t\t\t   ArrayList<Integer> li = adj[s];\n    \t\t\t\t   pa.add(s);\n    \t\t\t\t   \n    \t\t\t\t   for(int ad: li)\n    \t\t\t\t   {\n    \t\t\t\t\t   if(vis2[ad]==0)countPaths(ad,d,pa);\n    \t\t\t\t   }\n    \t\t\t\t   \n    \t\t\t\t   \n    \t\t\t   }\n    \t\t\t   \n    \t\t\t   if(pa.size()>1)pa.remove(pa.size()-1);\n    \t\t\t   vis2[s]=0;\n    \t\t\t   return ;\n    \t\t   }\n    \t\t  \n    \t\t   \n    \t\t   \n    \t\t   public static boolean dif(String s1, String s2)\n    \t\t   {\n    \t\t\t   int ct=0;\n    \t\t\t   if(s1.length()!=s2.length())return false;\n    \t\t\t   for(int i=0;i<s1.length();i++)\n    \t\t\t   {\n    \t\t\t\t   if(s1.charAt(i)!=s2.charAt(i))ct++;\n    \t\t\t\t   \n    \t\t\t   }\n    \t\t\t   \n    \t\t\t   if(ct==1)return true;\n    \t\t\t   else return false;\n    \t\t\t   \n    \t\t\t   \n    \t\t   }\n    \t\t   \n    \t\t   \n    \t\t   public static void main(String[] args) \n    \t   {\n    \t\t\t\n    \t\t\t  int n = sc.nextInt();\n    \t\t\t  \n    \t\t\t  String[] old = new String[n];\n    \t\t\t  String[] ne = new String[n];\n    \t\t\t  for(int i=0;i<n;i++)\n    \t\t\t  {\n    \t\t\t\t  old[i]=sc.nextLine();\n    \t\t\t  }\n    \t\t\t  \n    \t\t\t  for(int i=0;i<n;i++)\n    \t\t\t  {\n    \t\t\t\t  ne[i]=sc.nextLine();\n    \t\t\t  }\n    \t\t\t  \n    \t\t\t  HashSet<Integer> s1 = new HashSet<Integer>();\n    \t\t\t  HashSet<Integer> s2 = new HashSet<Integer>();\n    \t\t\t  \n    \t\t\t  \n    \t\t\t  \n    \t\t\t  \n    \t\t\t  \n    \t\t\t  for(int i=0;i<n;i++)\n    \t\t\t  {\n    \t\t\t\t  for(int j=0;j<n;j++)\n    \t\t\t\t  {\n    \t\t\t\t\t  if(!s2.contains(j)&&old[i].equals(ne[j]))\n    \t\t\t\t\t  {\n    \t\t\t\t\t\t  s1.add(i);\n    \t\t\t\t\t\t  s2.add(j);\n    \t\t\t\t\t\t  break;\n    \t\t\t\t\t  }\n    \t\t\t\t\t  \n    \t\t\t\t  }\n    \t\t\t  }\n    \t\t\t  \n    \t\t\t  int[] mod2 = new int[n];\n    \t\t\t  \n    \t\t\t  /*\n    \t\t\t  for(int x : s1)pw.println(x);\n    \t\t\t  pw.println(\"**\");\n    \t\t\t  for(int x : s2)pw.println(x);\n    \t\t\t  */\n    \t\t\t  \n    \t\t\t  for(int x: s1)mod2[x]=1;\n    \t\t\t  int nas=0;\n    \t\t\t  \n    \t\t\t  \n    \t\t\t  for(int i=0;i<n;i++)\n    \t\t\t  {\n    \t\t\t\t  if(s1.contains(i))continue;\n    \t\t\t\t  \n    \t\t\t\t  for(int j=0;j<n;j++)\n    \t\t\t\t  {\n    \t\t\t\t\t  if(s2.contains(j))continue;\n    \t\t\t\t\t\n    \t\t\t\t\t  if(dif(old[i],ne[j]))\n    \t\t\t\t\t  {\n    \t\t\t\t\t\t  //pw.println(old[i]+\" \"+ne[j]);\n    \t\t\t\t\t\tnas++;\n    \t\t\t\t\t\t//s1.add(i);\n    \t\t\t\t\t\t // s2.add(j);\n    \t\t\t\t\t\t  break;\n    \t\t\t\t\t  }\n    \t\t\t\t\t  \n    \t\t\t\t  }\n    \t\t\t  }\n    \t\t\t  \n    \t\t\t  pw.println(nas);\n    \t\t\t  /*\n    \t\t\t  for(int x : s1)pw.println(x);\n    \t\t\t  pw.println(\"**\");\n    \t\t\t  for(int x : s2)pw.println(x);\n    \t\t\t  */\n    \t\t\t  \n    \t\t\t  \n    \t\t\t  \n    \t\t\t  \n    \t\t\t  \n    \t\t\t  \n    \t\t\t  \n    \t\t\t\n    \t\t\t  \n    \t\t\t  \n    \t\t\t   \n    \t\t\t   \n    \t\t\t   \n    \t\t\t   \n    \t\t\t   \n    \t\t\t   \n    \t\t\t   \n    \t\t\t   \n    \t\t\t   \n    \t\t\t   \n    \t\t\t   \n    \t\t\t   \n    \t\t\t   \n    \t\t\t   \n    \t\t\t   \n    \t\t\t   \n    \t\t\t   \n    \t\t\t   \n    \t\t\t   \n    \t\t\t   /*ct=0;\n    \t\t\t\n    \t\t\tpaths= new ArrayList[10];\n    \t\t\tadj = new ArrayList[4];\n    \t\t\tvis2 = new int[4];\n    \t\t\t\n    \t\t\tfor(int i=0;i<4;i++)adj[i] = new ArrayList<Integer>();\n    \t\t\t   \n    \t\t\tfor(int i=0;i<10;i++)paths[i] = new ArrayList<Integer>();\n    \t\t\t\n    \t\t\tadj[0].add(1);\n    \t\t\tadj[0].add(2);\n    \t\t\tadj[0].add(3);\n    \t\t\t\n    \t\t\tadj[1].add(3);\n    \t\t\t\n    \t\t\tadj[2].add(0);\n    \t\t\tadj[2].add(1);\n    \t\t\t\n    \t\t\tcountPaths(2,3, new ArrayList<Integer>());\n    \t\t\tpw.println(ct);\n    \t\t\t   \n    \t\t\tfor(int i=0;i<ct;i++)pw.println(paths[i]);\n    \t\t\t  */ \n    \t\t\t   \n    \t\t\t   \n    \t\t\t   \n    \t\t\t   /*\n    \t\t\t   int n = sc.nextInt();\n    \t\t\tint m = sc.nextInt();\n    \t\t\t\n    \t\t\tint arr[] = new int[n];\n    \t\t\t\n    \t\t\tfor(int i=0;i<n;i++)arr[i]=sc.nextInt();\n    \t\t\t\n    \t\t\tint req = n/m;\n    \t\t\t\n    \t\t\tint[] rem = new int[m];\n    \t\t\t\n    \t\t\t\n    \t\t\tHashMap<Integer, Integer> hm = new HashMap<Integer, Integer>();\n    \t\t\tfor(int i=0;i<n;i++)\n    \t\t\t{\n    \t\t\t\trem[arr[i]%m]++;\n    \t\t\t\t\n    \t\t\t}\n    \t\t\tint li=-1;\n    \t\t\tlong ans=0;\n    \t\t\tfor(int i=0;i<m;i++)\n    \t\t\t{\n    \t\t\t\tif(rem[i]>=req)\n    \t\t\t\t{\n    \t\t\t\t\trem[(i+1)%m]+=rem[i]-req;\n    \t\t\t\t\tans+=(rem[i]-req);\n    \t\t\t\t}\n    \t\t\t\telse\n    \t\t\t\t{\n    \t\t\t\t\tli=i;\n    \t\t\t\t\t\n    \t\t\t\t}\n    \t\t\t}\n    \t\t\t\n    \t\t\tfor(int i=0;i<li;i++)\n    \t\t\t{\n    \t\t\t\tif(rem[i]>=req)\n    \t\t\t\t{\n    \t\t\t\t\trem[(i+1)%m]+=rem[i]-req;\n    \t\t\t\t\tans+=(rem[i]-req);\n    \t\t\t\t}\n    \t\t\t\telse\n    \t\t\t\t{\n    \t\t\t\t\tli=i;\n    \t\t\t\t\t\n    \t\t\t\t}\n    \t\t\t}\n    \t\t\tpw.println(ans);\n    \t\t\t*/\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t   //pw.println(pa);\n    \t\t/*\t  NGE \n       \t\tint[] sto = {100,80,60,70,60,75,85};\n       \t\tint n = sto.length;\n       \t\t\n       \t\tint[] spa = new int[n];\n       \t\tspa[0]=1;\n       \t\t\n       \t\tStack<Integer> st = new Stack<Integer>();\n       \t\tst.push(0);\n       \t\t\n       \t\tfor(int i=1;i<n;i++)\n       \t\t{\n       \t\t\t\n       \t\t\twhile(!st.isEmpty()&&sto[st.peek()]<=sto[i])st.pop();\n       \t\t\t\n       \t\t\tspa[i]=(st.isEmpty())?i+1:i-st.peek();\n       \t\t\tst.push(i);\n       \t\t\t\n       \t\t}\n    \t\t\t  \n       \t\t\n       \t\tfor(int i=0;i<n;i++)pw.print(sto[i]+\" \");\n    \t\t\t   pw.println();\n    \t\t\t   for(int i=0;i<n;i++)pw.print(spa[i]+\" \");\n    \t\t\t  \n    \t\t\t   \n    \t\t\t   int[] nge = new int[n];\n    \t\t\t   \n    \t\t\t   st.clear();\n    \t\t\t   Stack<Point> st2 = new Stack<Point>();\n    \t\t\t   st2.push(new Point(sto[0],0));\n    \t\t\t   \n    \t\t\t   for(int i=1;i<n;i++)\n    \t\t\t   {\n    \t\t\t\t   while(!st2.isEmpty()&&st2.peek().x<sto[i])\n    \t\t\t\t   {\n    \t\t\t\t\t   Point pop = st2.pop();\n    \t\t\t\t\t   nge[pop.y]=sto[i];\n    \t\t\t\t   }\n    \t\t\t\t   st2.push(new Point(sto[i],i));\n    \t\t\t\t   \n    \t\t\t   }\n    \t\t\t   \n    \t\t\t   while(!st2.isEmpty())\n    \t\t\t   {\n    \t\t\t\t   nge[st2.pop().y]=-1;\n    \t\t\t   }\n    \t\t\t  \n    \t\t\t   pw.println();\n    \t\t\t   for(int i=0;i<n;i++)pw.print(sto[i]+\" \");\n    \t\t\t   pw.println();\n    \t\t\t   for(int i=0;i<n;i++)pw.print(nge[i]+\" \");\n    \t\t\t */ \n    \t\t\t   \n    \t\t\t   /*  int r = 2000000000;\n    \t\t\t  pw.println(r);\n    \t\t\tint n = sc.nextInt();\n    \t\t\tint k = sc.nextInt();\n    \t\t\tint l = sc.nextInt();\n    \t\t\tint m = n*k;\n    \t\t\tint arr[] = new int[m];\n    \t\t\t\n    \t\t\tfor(int i=0;i<m;i++)arr[i]=sc.nextInt();\n    \t\t\t\n    \t\t\tArrays.sort(arr);\n    \t\t\t\n    \t\t\tint limit = l+arr[0];\n    \t\t\tint li=-1;\n    \t\t\t\n    \t\t\tfor(int i=0;i<m;i++)\n    \t\t\t{\n    \t\t\t\t//pw.println(arr[i]);\n    \t\t\t\tif(arr[i]>limit)\n    \t\t\t\t{\n    \t\t\t\t\t//pw.println(arr[i]);\n    \t\t\t\t\tli=i; break;\n    \t\t\t\t}\n    \t\t\t}\n    \t\t\t//pw.println(limit+\" \"+li);\n    \t\t\tif(li==-1)li=n;\n    \t\t\t\n    \t\t\tint noofsmallest = li;\n    \t\t\t\n    \t\t\tif(noofsmallest<n)\n    \t\t\t{\n    \t\t\t\tpw.println(0);\n    \t\t\t}\n    \t\t\telse\n    \t\t\t{\n    \t\t\t\tli--;\n    \t\t\t\tlong ans=0;\n    \t\t\t\tfor(int i=0;i<n-1;i++)\n    \t\t\t\t{\n    \t\t\t\t\tans+=(long)arr[li];\n    \t\t\t\t\tli--;\n    \t\t\t\t}\n    \t\t\t\tans+=arr[0];\n    \t\t\t\tpw.println(ans);\n    \t\t\t\t\n    \t\t\t}\n    \t\t\t  */ \n    \t\t\t   \n    \t\t\t   \n    \t\t\t   \n    \t\t\n    \t\t\t \n    \t\t\t  \n    \t\t\tpw.close();  \n    \t\t\t   \n    \t   }\n    \t\t   \n    \t\t   \n    \t\t   \n    \t\t   static  class MyScanner \n    \t\t\t{\n    \t\n    \t\t\tBufferedReader br;\n    \t\t\tStringTokenizer st;\n    \t\n    \t\t\tpublic MyScanner() \n    \t\t\t{\n    \t\t\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n    \t\t\t}\n    \t\n    \t\t\tString next() \n    \t\t\t{\n    \t\t\t\t\n    \t\t\t\twhile (st == null || !st.hasMoreElements()) \n    \t\t\t\t{\n    \t\t\t\t\ttry \n    \t\t\t\t\t{\n    \t\t\t\t\t\tst = new StringTokenizer(br.readLine());\n    \t\t\t\t\t} catch (IOException e) \n    \t\t\t\t\t{\n    \t\t\t\t\t\te.printStackTrace();\n    \t\t\t\t\t}\n    \t\t\t\t}\n    \t\t\t\treturn st.nextToken();\n    \t\t\t}\n    \t\n    \t\t\tint nextInt() \n    \t\t\t{\n    \t\t\t\treturn Integer.parseInt(next());\n    \t\t\t}\n    \t\n    \t\t\tlong nextLong() \n    \t\t\t{\n    \t\t\t\treturn Long.parseLong(next());\n    \t\t\t}\n    \t\n    \t\t\tdouble nextDouble() \n    \t\t\t{\n    \t\t\t\treturn Double.parseDouble(next());\n    \t\t\t}\n    \t\n    \t\t\tString nextLine()\n    \t\t\t{\n    \t\t\t\tString str = \"\";\n    \t\t\t\ttry \n    \t\t\t\t{\n    \t\t\t\t\tstr = br.readLine();\n    \t\t\t\t} catch (IOException e) \n    \t\t\t\t{\n    \t\t\t\t\te.printStackTrace();\n    \t\t\t\t}\n    \t\t\t\treturn str;\n    \t\t\t}\n    \t\n    \t\t}\n    \t\n    \t\tstatic MyScanner sc = new  MyScanner();\n    \t\tstatic PrintWriter pw = new PrintWriter(System.out, true);\n    \t\t\n    \t\n    \t\n    \t\t\n    \t}  "
        },
        {
            "language": 3,
            "solution": "n = int(input())\ninp = 0\na = {}\nsumm = 0\nfor i in range(0, n):\n    inp = input()\n    if inp in a:\n        a[inp] += 1\n    else:\n        a[inp] = 1\nfor i in range(0, n):\n    inp = input()\n    if inp in a:\n        a[inp] -= 1\n    else:\n        a[inp] = -1\nfor elem in a:\n    summ += abs(int(a[elem]))\nprint(summ//2)\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.OutputStreamWriter;\nimport java.util.ArrayList;\n\n/**\n *\n * @author Julian_Miranda\n */\npublic class CodehorsesTShirts {\n\n    static BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n    static BufferedWriter br = new BufferedWriter(new OutputStreamWriter(System.out));\n            \n    public static void main(String[] args) throws IOException {\n        int n = Integer.parseInt(bf.readLine());\n        int res = 0;\n        ArrayList<String> a = new ArrayList<>();\n        ArrayList<String> b = new ArrayList<>();\n        for (int i = 0; i < n; i++) {\n            a.add(bf.readLine());\n        }\n        for (int i = 0; i < n; i++) {\n            b.add(bf.readLine());\n        }\n        for (int i = 0; i < a.size(); i++) {\n            if (b.contains(a.get(i))) {\n                b.remove(a.get(i));\n            }else{\n                res++;\n            }\n        }\n        br.write(String.valueOf(res));\n        br.newLine();\n        br.close();\n    }\n    \n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint main() {\n  int n, i, r, j;\n  char a[100][5], b[100][5];\n  scanf(\"%d\", &n);\n  for (i = 0; i < n; i++) {\n    scanf(\"%s\", a[i]);\n  }\n  for (i = 0; i < n; i++) {\n    scanf(\"%s\", b[i]);\n  }\n  r = n;\n  for (i = 0; i < n; i++) {\n    for (j = 0; j < n; j++) {\n      if (strcmp(a[i], b[j]) == 0) {\n        r--;\n        strcpy(b[j], \"0\");\n        break;\n      }\n    }\n  }\n  printf(\"%d\\n\", r);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  long long int n, countt = 0;\n  cin >> n;\n  vector<string> v1, v2;\n  string s;\n  for (long long int i = 0; i < n; i++) {\n    cin >> s;\n    v1.push_back(s);\n  }\n  for (long long int i = 0; i < n; i++) {\n    cin >> s;\n    v2.push_back(s);\n  }\n  std::sort(v1.begin(), v1.end());\n  std::sort(v2.begin(), v2.end());\n  std::vector<string> inter;\n  std::set_intersection(v1.begin(), v1.end(), v2.begin(), v2.end(),\n                        std::back_inserter(inter));\n  v1.erase(std::set_difference(v1.begin(), v1.end(), inter.begin(), inter.end(),\n                               v1.begin()),\n           v1.end());\n  v2.erase(std::set_difference(v2.begin(), v2.end(), inter.begin(), inter.end(),\n                               v2.begin()),\n           v2.end());\n  if (v1 == v2)\n    cout << 0;\n  else {\n    cout << v1.size();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "def main():\n    n = int(input())\n\n    a = []\n    b = []\n    for i in range(n):\n        a.append(input())\n    \n    a.sort()\n    ans = 0\n    for i in range(n):\n        t = input()\n        if t in a:\n            a[a.index(t)] = ''\n\n    print(sum([1 for i in a if i != '']))\n\nif __name__ == '__main__':\n    main()"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\npublic class A {\n    public static void main(String[] args)throws Throwable {\n        MyScanner sc=new MyScanner();\n        PrintWriter pw=new PrintWriter(System.out);\n\n        int n=sc.nextInt();\n\n        String [] s={\"M\",\"L\",\"S\",\"XL\",\"XS\",\"XXL\",\"XXS\",\"XXXL\",\"XXXS\"};\n        int [] cnt=new int [9];\n        for(int i=0;i<n;i++){\n            String t=sc.next();\n            for(int j=0;j<9;j++)\n                if(t.equals(s[j]))\n                    cnt[j]++;\n        }\n        for(int i=0;i<n;i++){\n            String t=sc.next();\n            for(int j=0;j<9;j++)\n                if(t.equals(s[j]))\n                    cnt[j]--;\n        }\n        for(int i=0;i<9;i++)\n            cnt[i]=Math.abs(cnt[i]);\n        int ans=0;\n        for(int i=0;i<9;i++)\n            ans+=cnt[i];\n        pw.println(ans/2);\n        pw.flush();\n        pw.close();\n    }\n\n    static class MyScanner {\n        BufferedReader br;\n        StringTokenizer st;\n        public MyScanner() {\n            br = new BufferedReader(new InputStreamReader(System.in));\n        }\n        String next() {while (st == null || !st.hasMoreElements()) {\n            try {st = new StringTokenizer(br.readLine());}\n            catch (IOException e) {e.printStackTrace();}}\n            return st.nextToken();}\n        int nextInt() {return Integer.parseInt(next());}\n        long nextLong() {return Long.parseLong(next());}\n        double nextDouble() {return Double.parseDouble(next());}\n        String nextLine(){String str = \"\";\n            try {str = br.readLine();}\n            catch (IOException e) {e.printStackTrace();}\n            return str;}\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, ans;\nstring s;\nmap<string, int> m[5];\nint main() {\n  cin >> n;\n  for (int i = 1; i <= n; i++) {\n    cin >> s;\n    m[s.length()][s]++;\n  }\n  for (int i = 1; i <= n; i++) {\n    cin >> s;\n    m[s.length()][s]--;\n  }\n  for (int i = 1; i <= 4; i++) {\n    for (auto w : m[i]) {\n      if (w.second > 0) ans += w.second;\n    }\n  }\n  cout << ans;\n}\n"
        },
        {
            "language": 4,
            "solution": "\n\n\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.Scanner;\n\npublic class Tshirt {\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\nScanner in=new Scanner(System.in);\nint n=in.nextInt();\nint t=0;\nMap<String, Integer> map=new HashMap<String,Integer>();\nmap.put(\"S\", 0);\nmap.put(\"XS\", 0);\nmap.put(\"XXS\", 0);\nmap.put(\"XXXS\", 0);\nmap.put(\"M\", 0);\nmap.put(\"L\", 0);\nmap.put(\"XL\", 0);\nmap.put(\"XXL\", 0);\nmap.put(\"XXXL\", 0);\nfor(int i=0; i<n; i++)\n{\n\tString te=in.next();\n\tmap.put(te,map.get(te)+1);\n}\nfor(int i=0; i<n; i++)\n{\n\tString te=in.next();\n\tmap.put(te,map.get(te)-1);\n}\nfor(int te:map.values())\n{\n\tt+=Math.max(te,0);\n}\nSystem.out.println(t);\nin.close();\n}\n\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvector<string> v1, v2, v3;\nstring s;\nint fun(int idx) {\n  int len = v3[idx].size();\n  int ret = 0;\n  for (int i = 0; i <= len - 1; i++) {\n    if (v3[idx][i] != v2[idx][i]) ret++;\n  }\n  return ret;\n}\nint main() {\n  int n;\n  cin >> n;\n  for (int i = 0; i <= n - 1; i++) {\n    cin >> s;\n    v1.push_back(s);\n  }\n  bool flag;\n  for (int i = 0; i <= n - 1; i++) {\n    cin >> s;\n    flag = false;\n    for (int j = 0; j < n; j++) {\n      if (s == v1[j]) {\n        v1[j] = \"bal\";\n        flag = true;\n        break;\n      }\n    }\n    if (flag == false) {\n      v2.push_back(s);\n    }\n  }\n  int cnt = 0;\n  for (int i = 0; i <= n - 1; i++) {\n    if (v1[i] == \"bal\") {\n      cnt++;\n    } else\n      v3.push_back(v1[i]);\n  }\n  sort(v3.begin(), v3.end());\n  sort(v2.begin(), v2.end());\n  int res = 0;\n  n = v3.size();\n  for (int i = 0; i <= n - 1; i++) {\n    res += fun(i);\n  }\n  printf(\"%d\\n\", res);\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "var n = +readline();\nvar ai = {};\nvar bi = {};\nvar same = 0;\n\nfor(var i = 0; i < n; i++) {\n    var size = readline();\n    ai[size] = ai[size] + 1 || 1;\n}\n\nfor(var i = 0; i < n; i++) {\n    var size = readline();\n    bi[size] = bi[size] + 1 || 1;\n}\n\nfor(var prop in ai) {\n    same += Math.min(ai[prop] || 0 , bi[prop] || 0);\n}\n\nprint(n - same);"
        },
        {
            "language": 3,
            "solution": "#!/usr/bin/env python3\nA = []\nB = []\nN = int(input())\nfor i in range(N):\n    A.append(input())\nfor i in range(N):\n    B.append(input())\nans = 0\nfor i in B:\n    if i in A:\n        x = A.index(i)\n        A = A[:x] + A[x + 1:]\n    else:\n        ans += 1\nprint(ans)\n"
        },
        {
            "language": 4,
            "solution": "import java.awt.Checkbox;\nimport java.awt.Point;\nimport java.io.*;\nimport java.lang.reflect.Array;\nimport java.math.*;\n                    import java.util.*;\nimport java.util.Map.Entry;\n\nimport javax.print.attribute.SetOfIntegerSyntax;    \nimport javax.swing.plaf.FontUIResource;\n\n\n             \n                    public class CODE2{\n                    \tprivate static InputStream stream;\n                        private static byte[] buf = new byte[1024];\n                        private static int curChar,MAX;\n                        private static int numChars;\n                        private static SpaceCharFilter filter;\n                        private static PrintWriter pw;\n                        private static long count = 0,mod=1000000007;\n                        static int BIT[];\n                        private static boolean primer[];\n                    //    private static TreeSet<Integer> ts=new TreeSet[200000];\npublic final static int INF = (int) 1E9;\n\npublic static void main(String args[]) {\n    InputReader(System.in);\n    pw = new PrintWriter(System.out); \n    new Thread(null ,new Runnable(){\n       public void run(){\n           try{\n               solve();\n               \n               pw.close();\n           } catch(Exception e){\n               e.printStackTrace();\n           }\n       }\n   },\"1\",1<<26).start();\n   }\n    static StringBuilder sb;\n    public static void test(){\n         sb=new StringBuilder();\n        int t=nextInt();\n        while(t-->0){\n            \n            solve();\n           \n        }\n        pw.println(sb);\n    }\n    public static long pow(long n, long p,long mod) {\n        if(p==0)\n            return 1;\n        if(p==1)\n            return n%mod;\n        if(p%2==0){\n            long temp=pow(n, p/2,mod);\n        return (temp*temp)%mod;\n        }else{\n                 long temp=pow(n,p/2,mod);\n                 temp=(temp*temp)%mod;\n                 return(temp*n)%mod;\n                 \n        }\n    }\n    public static long pow(long n, long p) {\n        if(p==0)\n            return 1;\n        if(p==1)\n            return n;\n        if(p%2==0){\n            long temp=pow(n, p/2);\n        return (temp*temp);\n        }else{\n                 long temp=pow(n,p/2);\n                 temp=(temp*temp);\n                 return(temp*n);\n                 \n        }\n    }\n    public static void Merge(long a[],int p,int r){\n        if(p<r){\n            int q = (p+r)/2;\n            Merge(a,p,q);\n            Merge(a,q+1,r);\n            Merge_Array(a,p,q,r);\n        }\n    }\n    public static void Merge_Array(long a[],int p,int q,int r){\n       long b[] = new long[q-p+1];\n        long c[] = new long[r-q];\n        for(int i=0;i<b.length;i++)\n            b[i] = a[p+i];\n        for(int i=0;i<c.length;i++)\n            c[i] = a[q+i+1];\n        int i = 0,j = 0;\n        for(int k=p;k<=r;k++){\n            if(i==b.length){\n                a[k] = c[j];\n                j++;\n            }\n            else if(j==c.length){\n                a[k] = b[i];\n                i++;\n            }\n            else if(b[i]<c[j]){\n                a[k] = b[i];\n                i++;\n            }\n            else{\n                a[k] = c[j];\n                j++;\n            }\n        }\n    }\n    \n  \n    public static long gcd(long x, long y) {\n        if (x == 0)\n            return y;\n        else\n            return gcd( y % x,x);\n    }    \n    \n    public static boolean isPrime(int n) {\n        if (n <= 1)\n            return false;\n        if (n <= 3)\n            return true;\n \n        if (n % 2 == 0 || n % 3 == 0)\n            return false;\n \n        for (int i = 5; i * i <= n; i = i + 6)\n            if (n % i == 0 || n % (i + 2) == 0)\n                return false;\n \n        return true;\n    }\n    \n        static LinkedList<Integer> adj[];\n        static boolean Visited[];\n        static HashSet<Integer> exc;\n        static long oddsum[]=new long[1000001];\n        static long co=0,ans=0;\n        static int parent[];\n        static int size[],color[],res[],k;\n        static ArrayList<Integer> al[];\n        static long MOD = (long)1e9 + 7;\n        private static void buildgraph(int n){\n            adj=new LinkedList[n+1];\n            Visited=new boolean[n+1];\n            levl=new int[n+1];\n            \n            for(int i=0;i<=n;i++){\n                adj[i]=new LinkedList<Integer>();\n            \n            }\n\n\n        }\n      \n       \n        static int[] levl;\n        static int[] eat;\n      //  static int n,m;\n        static int price[];\n        //ind frog crab\n   static  boolean check(char c)\n    {\n    \tif(c!='a' && c!='e' && c!='i' && c!='o' && c!='u' )\n    \t\treturn true;\n    \telse\n    \t\treturn false;\n    }\n   static boolean yes = true;\n   public static void sieve(int n){\n       prime=new boolean[n+1];\n       spf=new int[n+1];\n       \n      \n       Arrays.fill(prime, true);\n       prime[0]=false;\n   prime[1]=false;\n     \n       \n for(int i=2;i*i<=n;i++)\n {\n\t  if(prime[i])\n\t  {\n\t\t  for(int j=2*i;j<=n;j+=i)\n\t\t  {\n\t\t\t  prime[j]=false;\n\t\t  }\n\t  }\n }\n   \n       \n   }\n        public static void solve(){\n        \t\t\n        \tint n = nextInt();\n        \t\n        \t\n        \tString a[] = new String[n];\n        \tString b[] = new String[n];\n        \tfor(int i=0;i<n;i++)\n        \t\ta[i] = nextLine();\n        \tfor(int j=0;j<n;j++)\n        \t\tb[j] = nextLine();\n        \t\t\n        \t HashMap<String,Integer> hm=new HashMap<String,Integer>();\n      \t   for(int i=0;i<n;i++)\n      \t   {\n      \t\t   \n      \t\t   if(hm.containsKey(a[i]))\n      \t\t\t   hm.put(a[i],hm.get(a[i])+1);\n      \t\t   else\n      \t\t\t   hm.put(a[i],1);\n      \t   }\n      \t    \n      \t   int ans=0;\n      \t   for(int i=0;i<n;i++)\n      \t   {\n      \t\t   if(hm.containsKey(b[i]))\n      \t\t   {\n      \t\t\t   if(hm.get(b[i])==1)\n      \t\t\t\t   hm.remove(b[i]);\n      \t\t\t   else\n      \t\t\t\t   hm.put(b[i],hm.get(b[i])-1);\n      \t\t   }\n      \t\t   else\n      \t\t   {\n      \t\t\t   ans++;\n      \t\n      \t\t   }\n      \t   }\n      \t   System.out.println(ans);\n        \t\n        \t\n      \n      }\n        \n        static void randomize( long arr[], int n)\n        {\n            // Creating a object for Random class\n            Random r = new Random();\n             \n            // Start from the last element and swap one by one. We don't\n            // need to run for the first element that's why i > 0\n            for (int i = n-1; i > 0; i--) {\n                 \n                // Pick a random index from 0 to i\n                int j = r.nextInt(i);\n                 \n                // Swap arr[i] with the element at random index\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n            // Prints the random array\n          //  System.out.println(Arrays.toString(arr));\n        }  \n        \tstatic class pair implements Comparable<pair>{\n        \t\t\n        \t\tint r;int i;\n        \t\t\n        \t\tpublic pair(int r,int i)\n        \t\t{this.r = r;\n        \t\tthis.i= i;}\n        \t\t\n        \tpublic int compareTo(pair other)\n        \t{\n        \t\treturn 0;\n        \t}\n        \t}\n        static void dfsd(int i)\n        {\n        \tif(Visited[i])\n        \t\treturn;\n        \tVisited[i]=true;\n        \tif(adj[i].size()==1)\n        \t\treturn;\n        \tif(adj[i].size()<3)\n        \t{\n        \t\tyes = false;\n        \t\treturn;\n        \t}\n        \tint c=0;\n        \tfor(int j:adj[i])\n        \t{\n        \t\tif(adj[j].size()==1)\n        \t\t\tc++;\n        \t\tdfsd(j);\n        \t\t\n        \t}\n        \t\t\n        \tif(c<3)\n        \t{\n        \t\tyes = false;\n        \t\treturn;\n        \t}\n        \t\t\n        \t\n        \t\n        }\n        static void seive2(int n)\n        {\n        \tprimer=new boolean[n+1];\n        \tArrays.fill(primer,true);\n        \tprimer[0]=false;\n        \tprimer[1]=false;\n        \tprimer[2]=true;\n        \t\n        \tfor(int i=2;i*i<=n;i++)\n        \t{\n        \t\tif(primer[i])\n        \t\t{\n        \t\t\tfor(int j=2*i;j<=n;j=j+i)\n        \t\t\t{\n        \t\t\t\tprimer[j]=false;\n        \t\t\t}\n        \t\t}\n        \t}\n        }\n       \n        \n     /*   static void BITupdate(int x,int val)\n        {\n        \twhile(x<=n)\n        \t{\n        \t\tBIT[x]+=val;\n        \t\tx+= x & -x;\n        \t}\n        }*/\n     /*   static void update(int x,long val)\n        {\n      \n        \tval=val%MOD;\n        \twhile(x<=n)\n        \t{\n        \t\t// System.out.println(x);\n        \tBIT[x]=(BIT[x]+val)%MOD;\n        \tx+=(x & -x);\n        \t}\n        //\tSystem.out.println(\"dfd\");\n        }*/\n        static int BITsum(int x)\n        \t\t{\n        \tint sum=0;\n        \twhile(x>0)\n        \t{\n        \t\tsum+=BIT[x];\n        \t\tx-= (x & -x);\n        \t}\n        \t\treturn sum;\n        \t\t}\n  /*      static long sum(int x)\n        {\n        \tlong sum=0;\n        \twhile(x>0)\n        \t{\n        \t\tsum=(sum+BIT[x])%MOD;\n        \t\tx-=x & -x;\n        \t}\n        \treturn sum;\n        }*/\n        static boolean union(int x,int y)\n        {\n        \tint xr=find(x);\n        \tint yr=find(y);\n        \tif(xr==yr)\n        \t\treturn false;\n        \tif(size[xr]<size[yr])\n        \t{\n        \t\tsize[yr]+=size[xr];\n        \t\tparent[xr]=yr;\n        \t}\n        \telse\n        \t{\n        \t\tsize[xr]+=size[yr];\n        \t\tparent[yr]=xr;\n        \t\t\n        \t}\n        \treturn true;\n        \t\n        }\n        static int  find(int x)\n        {\n        \tif(parent[x]==x)\n        \t\treturn x;\n        \telse\n        \t{\n        \t\tparent[x]=find(parent[x]);\n        \t\treturn parent[x];\n        \t}\n        \t\n        }\n        public static class Edge implements Comparable<Edge>\n        {\n        \tint u, v;\n        \tdouble w;\n\t\t\tpublic Edge(int u, int v,double w) \n\t\t\t{\n\t\t\t\tthis.u = u;\n\t\t\t\tthis.v = v;\n\t\t\t\tthis.w = w;\n\t\t\t\t//this.s = s;\n\t\t\t}\n\t\t\tpublic int hashCode() \n\t\t\t{\n\t\t\t\treturn Objects.hash();\n\t\t\t}\n\t\t\tpublic int compareTo(Edge other) \n\t\t\t{\n\t\t\t\t\n\t\t\t\treturn (int)(this.w - other.w);\n\t\t\t//return (Integer.compare(u, other.u) != 0 ? (Integer.compare(u, other.u)):(Integer.compare(v, other.v)));\n\t\t\t\t//\t\t&((Long.compare(s, other.s) != 0 ? (Long.compare(s, other.s)):(Long.compare(u, other.v)!=0?Long.compare(u, other.v):Long.compare(v, other.u))));\n\t\t\t\t//return this.u-other.u;\n\t\t\t}\n\t\t\tpublic String toString()\n\t\t\t{\n\t\t\t\treturn this.u + \" \" + this.v;\n\t\t\t}\n        }\n       \n        static int col[];\n    public static boolean isVowel(char c){\n        if(c=='a' || c=='e'||c=='i' || c=='o' || c=='u')\n            return true;\n        return false;\n    }\nstatic int no_vert=0;\n\n  private static void dfs(int start){\n      Visited[start]=true;\n    if(al[color[start]].size()>=k)\n    {\n    \tres[start]=al[color[start]].get(al[color[start]].size()-k);\n    }\n    al[color[start]].add(start);\n      for(int i:adj[start]){\n          if(!Visited[i])\n              {\n              dfs(i);\n              }\n      }\n      (al[color[start]]).remove(al[color[start]].size()-1);\n      \n  }\n    \n    public static String reverseString(String s) {\n        StringBuilder sb = new StringBuilder(s);\n        sb.reverse();\n        return (sb.toString());\n    }\n    \n  /*  \n   private static void BFS(int sou){\n        Queue<Integer> q=new LinkedList<Integer>();\n        q.add(sou);\n        Visited[sou]=true;\n        levl[sou]=0;\n        while(!q.isEmpty()){\n            int top=q.poll();\n            \n            for(int i:adj[top]){\n                //pw.println(i+\" \"+top);\n            if(!Visited[i])\n            {\n                \n                q.add(i);\n                levl[i]=levl[top]+1;\n            }\n            \n            Visited[i]=true;\n            \n            }\n        }\n    }*/\n    \n\n\n\n                  static int indeg[];\n               /* private static void kahn(int n){\n                    \n                    PriorityQueue<Integer> q=new PriorityQueue<Integer>();\n                    for(int i=1;i<=n;i++){\n                        if(indeg[i]==0){\n                            q.add(i);\n                        }\n                    }\n                    while(!q.isEmpty()){\n                        int top=q.poll();\n                        st.push(top);\n                        for(Node i:adj[top]){\n                            indeg[i.to]--;\n                            if(indeg[i.to]==0){\n                                q.add(i.to);\n                            }\n                        }\n                    }\n                }\n                    \n                    static int state=1;\n                    static long no_exc=0,no_vert=0;\n                  static Stack<Integer> st;\n                  static HashSet<Integer> inset;\n                 /*   private static void topo(int curr){\n                        \n                        Visited[curr]=true;\n                        inset.add(curr);\n                        for(int x:adj[curr]){\n                            if(adj[x].contains(curr) || inset.contains(x)){\n                                state=0;\n                                return;\n                            }\n                            if(state==0)\n                                return;\n                            \n                        }\n                        st.push(curr);\n                        \n                        inset.remove(curr);\n                    }*/\n                    static HashSet<Integer> hs;\n                   \n                 \n                     static boolean prime[];\n                    static int spf[];\n                    \n                    \n                \n                     \n                    // To Get Input\n// Some Buffer Methods\n \n                     public static void sort(long a[]){\n                         Merge(a, 0, a.length-1);\n                     }\n                    public static void InputReader(InputStream stream1) {\n                        stream = stream1;\n                    }\n \n                    private static boolean isWhitespace(int c) {\n                        return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n                    }\n \n                    private static boolean isEndOfLine(int c) {\n                        return c == '\\n' || c == '\\r' || c == -1;\n                    }\n \n                    private static int read() {\n                        if (numChars == -1)\n                            throw new InputMismatchException();\n                        if (curChar >= numChars) {\n                            curChar = 0;\n                            try {\n                                numChars = stream.read(buf);\n                            } catch (IOException e) {\n                                throw new InputMismatchException();\n                            }\n                            if (numChars <= 0)\n                                return -1;\n                        }\n                        return buf[curChar++];\n                    }\n \n                    private static int nextInt() {\n                        int c = read();\n                        while (isSpaceChar(c))\n                            c = read();\n                        int sgn = 1;\n                        if (c == '-') {\n        sgn = -1;\n        c = read();\n    }\n    int res = 0;\n    do {\n        if (c < '0' || c > '9')\n            throw new InputMismatchException();\n        res *= 10;\n        res += c - '0';\n                            c = read();\n                        } while (!isSpaceChar(c));\n                        return res * sgn;\n                    }\n \n                    private static long nextLong() {\n                        int c = read();\n                        while (isSpaceChar(c))\n                            c = read();\n                        int sgn = 1;\n                        if (c == '-') {\n        sgn = -1;\n        c = read();\n    }\n    long res = 0;\n    do {\n        if (c < '0' || c > '9')\n            throw new InputMismatchException();\n        res *= 10;\n        res += c - '0';\n                            c = read();\n                        } while (!isSpaceChar(c));\n                        return res * sgn;\n                    }\n \n                    private static String nextToken() {\n                        int c = read();\n                        while (isSpaceChar(c))\n                            c = read();\n                        StringBuilder res = new StringBuilder();\n                        do {\n                            res.appendCodePoint(c);\n                            c = read();\n                        } while (!isSpaceChar(c));\n                        return res.toString();\n                    }\n \n                    private static String nextLine() {\n                        int c = read();\n                        while (isSpaceChar(c))\n                            c = read();\n                        StringBuilder res = new StringBuilder();\n                        do {\n                            res.appendCodePoint(c);\n                            c = read();\n                        } while (!isEndOfLine(c));\n                        return res.toString();\n                    }\n \n                    private static int[] nextIntArray(int n) {\n                        int[] arr = new int[n];\n                        for (int i = 0; i < n; i++) {\n                            arr[i] = nextInt();\n                        }\n                        return arr;\n                    }\n \n                    private static long[][] next2dArray(int n, int m) {\n                        long[][] arr = new long[n][m];\n                        for (int i = 0; i < n; i++) {\n                            for (int j = 0; j < m; j++) {\n                                arr[i][j] = nextLong();\n                            }\n                        }\n                        return arr;\n                    }\n                    private static char[][] nextCharArray(int n,int m){\n                        char [][]c=new char[n][m];\n                        for(int i=0;i<n;i++){\n                            String s=nextLine();\n                            for(int j=0;j<s.length();j++){\n                                c[i][j]=s.charAt(j);\n                            }\n                        }\n                        return c;\n                    }\n \n                    private static long[] nextLongArray(int n) {\n                        long[] arr = new long[n];\n                        for (int i = 0; i < n; i++) {\n                            arr[i] = nextLong();\n                        }\n                        return arr;\n                    }\n \n                    private static void pArray(int[] arr) {\n                        for (int i = 0; i < arr.length; i++) {\n                            pw.print(arr[i] + \" \");\n                        }\n                        pw.println();\n                        return;\n                    }\n \n                    private static void pArray(long[] arr) {\n                        for (int i = 0; i < arr.length; i++) {\n                            pw.print(arr[i] + \" \");\n                        }\n                        pw.println();\n                        return;\n                    }\n \n                    private static void pArray(boolean[] arr) {\n                        for (int i = 0; i < arr.length; i++) {\n                            pw.print(arr[i] + \" \");\n                        }\n                        pw.println();\n                        return;\n                    }\n \n                    private static boolean isSpaceChar(int c) {\n                        if (filter != null)\n                            return filter.isSpaceChar(c);\n                        return isWhitespace(c);\n                    }\n \n                    private interface SpaceCharFilter {\n                        public boolean isSpaceChar(int ch);\n                    }\n                    \n\n}"
        },
        {
            "language": 3,
            "solution": "#winners never quit, quiters never win\nfrom collections import deque as de\nimport math\nfrom collections import Counter as cnt\nclass My_stack():\n    def __init__(self):\n        self.data = []\n    def my_push(self, x):\n        return (self.data.append(x))\n    def my_pop(self):\n        return (self.data.pop())\n    def my_peak(self):\n        return (self.data[-1])\n    def my_contains(self, x):\n        return (self.data.count(x))\n    def my_show_all(self):\n        return (self.data)\n    def isEmpty(self):\n      return len(self.data)==0\n\narrStack = My_stack()    \n# A optimized school method based \n# Python3 program to check \n# if a number is prime \n\n\ndef isPrime(n) : \n\n\t# Corner cases \n\tif (n <= 1) : \n\t\treturn False\n\tif (n <= 3) : \n\t\treturn True\n\n\t# This is checked so that we can skip \n\t# middle five numbers in below loop \n\tif (n % 2 == 0 or n % 3 == 0) : \n\t\treturn False\n\n\ti = 5\n\twhile(i * i <= n) : \n\t\tif (n % i == 0 or n % (i + 2) == 0) : \n\t\t\treturn False\n\t\ti = i + 6\n\n\treturn True\n\ndef get_prime_factors(number):\n    # create an empty list and later I will\n    # run a for loop with range() function using the append() method to add elements to the list.\n    prime_factors = []\n\n    # First get the number of two's that divide number\n    # i.e the number of 2's that are in the factors\n    while number % 2 == 0:\n        prime_factors.append(2)\n        number = number / 2\n\n    # After the above while loop, when number has been\n    # divided by all the 2's - so the number must be odd at this point\n    # Otherwise it would be perfectly divisible by 2 another time\n    # so now that its odd I can skip 2 ( i = i + 2) for each increment\n    for i in range(3, int(math.sqrt(number)) + 1, 2):\n        while number % i == 0:\n            prime_factors.append(int(i))\n            number = number / i\n\n\n    # Here is the crucial part.\n    # First quick refreshment on the two key mathematical conjectures of Prime factorization of any non-Prime number\n    # Which is - 1. If n is not a prime number AT-LEAST one Prime factor would be less than sqrt(n)\n    # And - 2. If n is not a prime number - There can be AT-MOST 1 prime factor of n greater than sqrt(n).\n    # Like 7 is a prime-factor for 14 which is greater than sqrt(14)\n    # But if the above loop DOES NOT go beyond square root of the initial n.\n    # Then how does that greater than sqrt(n) prime-factor\n    # will be captured in my prime factorization function.\n    # ANS to that is - in my first for-loop I am dividing n with the prime number if that prime is a factor of n.\n    # Meaning, after this first for-loop gets executed completely, the adjusted initial n should become\n    # either 1 or greater than 1\n    # And if n has NOT become 1 after the previous for-loop, that means that\n    # The remaining n is that prime factor which is greater that the square root of initial n.\n    # And that's why in the next part of my algorithm, I need to check whether n becomes 1 or not,\n    #This code is taken by rohan paul's github\n    if number > 2:\n        prime_factors.append(int(number))\n\n    return prime_factors\ndef get_frequency(list):\n    dic={}\n    for ele in list:\n        if ele in dic:\n            dic[ele] += 1\n        else:\n            dic[ele] = 1\n    return dic\n#here we go......................\n#winners never quit, quitters never win\nn=int(input())\npp=n\nnn=n\n\npl=[]\nnl=[]\nwhile pp:\n    pp-=1\n    pl.append(input())\nwhile nn:\n    nn-=1\n    nl.append(input())\nans=0\npmc=pl.count(\"M\")\nmc=nl.count(\"M\")\nif pmc < mc:\n    ans+=mc -pmc\npsc=pl.count(\"S\")\nsc=nl.count(\"S\")\nif psc < sc:\n    ans+=sc -psc\n\nplc=pl.count(\"L\")\nlc=nl.count(\"L\")\nif plc < lc:\n    ans+=lc -plc\n\npxlc=pl.count(\"XL\")\nxlc=nl.count(\"XL\")\nif pxlc < xlc:\n    ans+=xlc -pxlc\n\npxxlc=pl.count(\"XXL\")\nxxlc=nl.count(\"XXL\")\nif pxxlc < xxlc:\n    ans+=xxlc -pxxlc\n\npxxxlc=pl.count(\"XXXL\")\nxxxlc=nl.count(\"XXXL\")\nif pxxxlc < xxxlc:\n    ans+=xxxlc -pxxxlc\n\npxsc=pl.count(\"XS\")\nxsc=nl.count(\"XS\")\nif pxsc < xsc:\n    ans+=xsc -pxsc\n\npxxsc=pl.count(\"XXS\")\nxxsc=nl.count(\"XXS\")\nif pxxsc < xxsc:\n    ans+=xxsc -pxxsc\n\npxxxsc=pl.count(\"XXXS\")\nxxxsc=nl.count(\"XXXS\")\nif pxxxsc < xxxsc:\n    ans+=xxxsc -pxxxsc\nprint(ans)\n\n"
        },
        {
            "language": 3,
            "solution": "def can_change(a,b):\n\treturn a.replace('S','') + 'L' == b or a.replace('S','') + 'M' == b or a.replace('M','') + 'S' == b or a.replace('M','') + 'L' == b or a.replace('L','') + 'S' == b or a.replace('L','') + 'M' == b \n\nn = int(input())\nlia = {}\n\nfor i in range(2 * n):\n\tif i >= n:\n\t\tb = input()\n\t\tif b in lia:lia[b]-=1\n\t\telse:lia[b]=0\n\telse:\n\t\ta = input()\n\t\tif a in lia:lia[a]+=1\n\t\telse:lia[a]=1\n\nans = 0\nfor v in lia.values():\n\tif v > 0:ans+=v\nprint(ans)\t"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl1=[]\nfor i in range(n):\n    l1.append(input())\n    l1[i]=l1[i].upper()\nl2=[]    \nfor i in range(n):\n    l2.append(input())\n    l2[i]=l2[i].upper()\nl1.sort()\nl2.sort()\ni=0\nx=n\ny=n\nwhile(i<x):\n    j=0\n    while(j<y):\n        count=0\n        if(l1[i]==l2[j]):\n            l1.remove(l1[i])\n            l2.remove(l2[j])\n            x=x-1\n            y=y-1\n            count=count+1\n            break\n\n        else:\n            j=j+1\n    if(count!=1):\n         i=i+1\nprint(len(l1))         \n         "
        },
        {
            "language": 1,
            "solution": "n = input()\nl1 = []\ncount = 0\nfor i in range(0,n):\n\ts = raw_input()\n\tl1.append(s)\nfor i in range(0,n):\n\ts = raw_input()\n\tif s in l1:\n\t    l1.remove(s)\nprint len(l1)\n\t\n"
        },
        {
            "language": 3,
            "solution": "R = lambda: map(int, input().split())\n\nn = int(input())\na = {}\n\nfor i in range(n):\n    k = input()\n    if k in a: a[k] += 1\n    else: a[k] = 1\n\nans = 0\nfor i in range(n):\n    k = input()\n    if k in a and a[k] > 0:\n        a[k] -= 1\n    else: ans += 1\n\nprint(ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvector<string> vec;\nint main() {\n  int t;\n  while (cin >> t) {\n    int totalNum = t;\n    string str;\n    for (int i = 0; i < t; i++) {\n      cin >> str;\n      vec.push_back(str);\n    }\n    for (int i = 0; i < t; i++) {\n      cin >> str;\n      for (int j = 0; j < vec.size(); j++) {\n        if (vec[j] == str) {\n          totalNum--;\n          vec.erase(vec.begin() + j);\n          break;\n        }\n      }\n    }\n    cout << totalNum << endl;\n    vec.clear();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class NewClass1 {\n    \n    public static void main(String[] args) {\n        Scanner sc=new Scanner(System.in);\n        int n=sc.nextInt();\n        TreeMap<String, Integer> map1=new TreeMap<String, Integer>();\n        TreeMap<String, Integer> map2=new TreeMap<String, Integer>();\n        map1.put(\"M\", 0);\n        map1.put(\"S\", 0);\n        map1.put(\"L\", 0);\n        map1.put(\"XS\", 0);\n        map1.put(\"XL\", 0);\n        map1.put(\"XXS\", 0);\n        map1.put(\"XXL\", 0);\n        map1.put(\"XXXS\", 0);\n        map1.put(\"XXXL\", 0);\n        map2.put(\"M\", 0);\n        map2.put(\"S\", 0);\n        map2.put(\"L\", 0);\n        map2.put(\"XS\", 0);\n        map2.put(\"XL\", 0);\n        map2.put(\"XXS\", 0);\n        map2.put(\"XXL\", 0);\n        map2.put(\"XXXS\", 0);\n        map2.put(\"XXXL\", 0);\n        for(int i=0;i<n;i++){\n            String s=sc.next();\n            int a=map1.get(s);\n            map1.put(s, a+1);\n        }\n        for(int i=0;i<n;i++){\n            String s=sc.next();\n            int a=map2.get(s);\n            map2.put(s, a+1);\n        }\n        int count=0;\n        for(Map.Entry<String,Integer> entry:map1.entrySet()){\n            int diff=entry.getValue()-map2.get(entry.getKey());\n            //System.out.println(\"key=\"+entry.getKey()+\" diff=\"+diff);\n            if(diff>=0){\n                count+=diff;\n            }\n        }\n        System.out.println(count);\n    }\n}"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\na, n, ans = {}, int(input()), 0\nfor i in range (n):\n    s = input()\n    if s in a.keys() : a[s] = a[s] + 1\n    else : a[s] = 1\nfor i in range(n):\n    s = input()\n    if s in a.keys() :\n        if a[s] > 0 : a[s] = a[s] - 1\n        else : ans += 1\n    else : ans += 1\nprint(ans)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = {}\nc = 0\nfor i in range(n):\n    k = input()\n    a[k] = a.get(k, 0) + 1\nfor i in range(n):\n    k = input()\n    if k in a and a[k] > 0:\n        a[k] -= 1\n    else:\n        c += 1\n\nprint(c)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base ::sync_with_stdio(false);\n  cin.tie(NULL);\n  long long int n;\n  cin >> n;\n  vector<string> vec1;\n  vector<string> vec2;\n  vector<string> vec3;\n  vector<string>::iterator it;\n  vector<string>::iterator it1;\n  for (long long int i = 0; i < n; i++) {\n    string s1;\n    cin >> s1;\n    vec1.push_back(s1);\n  }\n  for (long long int i = 0; i < n; i++) {\n    string s3;\n    cin >> s3;\n    vec2.push_back(s3);\n    vec3.push_back(s3);\n  }\n  for (long long int i = 0; i < n; i++) {\n    it = find(vec1.begin(), vec1.end(), vec3[i]);\n    it1 = find(vec2.begin(), vec2.end(), vec3[i]);\n    if (it == vec1.end()) {\n      continue;\n    } else if (it != vec1.end()) {\n      vec2.erase(it1);\n      vec1.erase(it);\n    }\n  }\n  cout << vec2.size();\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = []\nfor i in range(n):\n    a.append(input())\n\n\nfor i in range(n):\n    b_s = input()\n    if b_s in a:\n        a.remove(b_s)\n\nprint(len(a))\n"
        },
        {
            "language": 3,
            "solution": "from collections import defaultdict as dd, deque\n\nn = int(input())\nA = [input() for _ in range(n)]\nB = [input() for _ in range(n)]\n\n# prev\nsA = A.count('S')\nmA = A.count('M')\nlA = A.count('L')\nxsA = A.count('XS')\nxlA = A.count('XL')\nxxsA = A.count('XXS')\nxxlA = A.count('XXL')\nxxxsA = A.count('XXXS')\nxxxlA = A.count('XXXL')\n\n# cur\nsB = B.count('S')\nmB = B.count('M')\nlB = B.count('L')\nxsB = B.count('XS')\nxlB = B.count('XL')\nxxsB = B.count('XXS')\nxxlB = B.count('XXL')\nxxxsB = B.count('XXXS')\nxxxlB = B.count('XXXL')\n\nsB = sB - min(sB,sA)\nmB = mB - min(mB,mA)\nlB = lB - min(lB,lA)\nxsB = xsB - min(xsB,xsA)\nxxsB = xxsB - min(xxsB,xxsA)\nxxxsB = xxxsB - min(xxxsB,xxxsA)\nxlB = xlB - min(xlB,xlA)\nxxlB = xxlB - min(xxlB,xxlA)\nxxxlB = xxxlB - min(xxxlB,xxxlA)\n\nprint(sB+mB+lB+xsB+xxsB+xxxsB+xlB+xxlB+xxxlB)\n\n"
        },
        {
            "language": 1,
            "solution": "n=int(raw_input())\na=[]\nb=[]\nfor i in range(n):\n    a.append(raw_input())\nfor i in range(n):\n    b.append(raw_input())\nc=0\nfor i in a:\n    \n    if i in b:\n        c+=1\n        b.remove(i)\n        \n    \nprint (n-c)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint M;\nint XS[100100];\nint XL[100100];\nint main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  memset(XS, 0, sizeof XS);\n  memset(XL, 0, sizeof XL);\n  M = 0;\n  int n;\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    string s;\n    cin >> s;\n    if (s[s.size() - 1] == 'M')\n      M++;\n    else if (s[s.size() - 1] == 'S')\n      XS[s.size()]++;\n    else\n      XL[s.size()]++;\n  }\n  int ans = 0;\n  for (int i = 0; i < n; i++) {\n    string s;\n    cin >> s;\n    if (s[s.size() - 1] == 'M') {\n      if (M)\n        M--;\n      else\n        ans++;\n    } else if (s[s.size() - 1] == 'S') {\n      if (XS[s.size()])\n        XS[s.size()]--;\n      else\n        ans++;\n    } else {\n      if (XL[s.size()])\n        XL[s.size()]--;\n      else\n        ans++;\n    }\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid fast() {\n  std::ios_base::sync_with_stdio(0);\n  cin.tie(NULL);\n  cout.tie(NULL);\n}\nint main() {\n  fast();\n  int n, ans = 0;\n  string a[101], b[101];\n  map<string, int> mp;\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n    mp[a[i]]++;\n  }\n  for (int i = 0; i < n; i++) {\n    cin >> b[i];\n    if (mp[b[i]] != 0) {\n      mp[b[i]]--;\n      b[i] = '.';\n    }\n  }\n  for (int i = 0; i < n; i++) {\n    if (b[i] != \".\") ans++;\n  }\n  cout << ans << endl;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nbool compare(const string &a, const string &b) {\n  if (a.length() != b.length()) {\n    return a.length() < b.length();\n  } else {\n    return a < b;\n  }\n}\nint getsum(string &a, string &b) {\n  int ans = 0;\n  for (int i = 0; i < a.size(); ++i) {\n    if (a[i] != b[i]) ++ans;\n  }\n  return ans;\n}\nint main() {\n  int t;\n  string tmp;\n  cin >> t;\n  map<string, int> a;\n  for (int i = 0; i < t; ++i) {\n    cin >> tmp;\n    ++a[tmp];\n  }\n  int counter = 0;\n  for (int i = 0; i < t; ++i) {\n    cin >> tmp;\n    if (a[tmp] != 0) {\n      --a[tmp];\n    } else {\n      ++counter;\n    }\n  }\n  cout << counter << endl;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.HashMap;\nimport java.util.Scanner;\n\npublic class TaskA_1000 {\n    public static void main(String... args) {\n        Scanner scanner = new Scanner(System.in);\n\n        int n = scanner.nextInt();\n        HashMap<String, Integer> oldSizes = new HashMap<>();\n        for (int i = 0; i < n; i++) {\n            String val = scanner.next();\n            oldSizes.put(val, oldSizes.getOrDefault(val, 0)+1);\n        }\n        int res = 0;\n        for (int i = 0; i < n; i++) {\n            String newVal = scanner.next();\n            if (oldSizes.containsKey(newVal) && oldSizes.get(newVal) > 0) {\n                oldSizes.put(newVal, oldSizes.get(newVal)-1);\n            } else {\n                res++;\n            }\n        }\n\n        System.out.print(res);\n    }\n    //3 L M XL XS M S\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, a[9] = {0}, b[9] = {0}, cnt = 0;\n  scanf(\"%d\", &n);\n  for (int i = 0; i < n; i++) {\n    string s;\n    cin >> s;\n    if (s == \"L\") {\n      a[0]++;\n    } else if (s == \"M\") {\n      a[1]++;\n    } else if (s == \"S\") {\n      a[2]++;\n    } else if (s == \"XL\") {\n      a[3]++;\n    } else if (s == \"XS\") {\n      a[4]++;\n    } else if (s == \"XXL\") {\n      a[5]++;\n    } else if (s == \"XXS\") {\n      a[6]++;\n    } else if (s == \"XXXL\") {\n      a[7]++;\n    } else {\n      a[8]++;\n    }\n  }\n  for (int i = 0; i < n; i++) {\n    string s;\n    cin >> s;\n    if (s == \"L\") {\n      b[0]++;\n    } else if (s == \"M\") {\n      b[1]++;\n    } else if (s == \"S\") {\n      b[2]++;\n    } else if (s == \"XL\") {\n      b[3]++;\n    } else if (s == \"XS\") {\n      b[4]++;\n    } else if (s == \"XXL\") {\n      b[5]++;\n    } else if (s == \"XXS\") {\n      b[6]++;\n    } else if (s == \"XXXL\") {\n      b[7]++;\n    } else {\n      b[8]++;\n    }\n  }\n  for (int i = 0; i < 9; i++) {\n    if (a[i] < b[i]) {\n      cnt += b[i] - a[i];\n    }\n  }\n  printf(\"%d\", cnt);\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\npublic class A\n{\n\t\n\t\n\t/********* SOLUTION STARTS HERE ************/\n\t\n\t\n\t\n\tprivate static void solve(FastScanner sc, PrintWriter out)\n\t{\n\t\tint n = sc.nextInt(), i;\n\t\tint[] p = new int[9], c = new int[9];\n\t\tString s;\n\t\tfor(i = 0 ; i < n ; i++)\n\t\t{\n\t\t\ts = sc.next();\n\t\t\tif(s.equals(\"M\"))\t\t\tp[0]++;\n\t\t\telse if(s.equals(\"S\"))\t\tp[1]++;\n\t\t\telse if(s.equals(\"L\"))\t\tp[2]++;\n\t\t\telse if(s.equals(\"XS\"))\t\tp[3]++;\n\t\t\telse if(s.equals(\"XL\"))\t\tp[4]++;\n\t\t\telse if(s.equals(\"XXS\"))\t\tp[5]++;\n\t\t\telse if(s.equals(\"XXL\"))\t\tp[6]++;\n\t\t\telse if(s.equals(\"XXXS\"))\t\tp[7]++;\n\t\t\telse if(s.equals(\"XXXL\"))\t\tp[8]++;\n\t\t}\n\t\tfor(i = 0 ; i < n ; i++)\n\t\t{\n\t\t\ts = sc.next();\n\t\t\tif(s.equals(\"M\"))\t\t\tc[0]++;\n\t\t\telse if(s.equals(\"S\"))\t\tc[1]++;\n\t\t\telse if(s.equals(\"L\"))\t\tc[2]++;\n\t\t\telse if(s.equals(\"XS\"))\t\tc[3]++;\n\t\t\telse if(s.equals(\"XL\"))\t\tc[4]++;\n\t\t\telse if(s.equals(\"XXS\"))\t\tc[5]++;\n\t\t\telse if(s.equals(\"XXL\"))\t\tc[6]++;\n\t\t\telse if(s.equals(\"XXXS\"))\t\tc[7]++;\n\t\t\telse if(s.equals(\"XXXL\"))\t\tc[8]++;\n\t\t}\n\t\tint c1 = Math.abs(p[0] - c[0]) + Math.abs(p[1] - c[1]) + Math.abs(p[2] - c[2]);\n\t\tint c2 = Math.abs(p[3] - c[3]) + Math.abs(p[4] - c[4]);\n\t\tint c3 = Math.abs(p[5] - c[5]) + Math.abs(p[6] - c[6]);\n\t\tint c4 = Math.abs(p[7] - c[7]) + Math.abs(p[8] - c[8]);\n\t\tSystem.out.println((c1 / 2) + (c2 / 2) + (c3 / 2) + (c4 / 2));\n\t}\n\t\n\t\n\t\n\t/************* SOLUTION ENDS HERE **********/\n\t\n\t\n\t\n\t\n\t\n\t/********** TEMPLATE STARTS HERE ***********/\n\t\n\tpublic static void main(String []args) throws IOException \n\t{\n\t\tFastScanner in  = new FastScanner(System.in);\n\t\tPrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)), false); \n\t\tsolve(in, out);\n\t\tin.close();\n\t\tout.close();\n\t}    \n\t\n\tstatic class FastScanner\n\t{\n\t\tBufferedReader reader;\n\t\tStringTokenizer st;\n\t\tFastScanner(InputStream stream){reader=new BufferedReader(new InputStreamReader(stream));st=null;}\t\n\t\tString next()\n\t\t{while(st == null || !st.hasMoreTokens()){try{String line = reader.readLine();if(line == null){return null;}\t\t    \n\t\tst = new StringTokenizer(line);}catch (Exception e){throw new RuntimeException();}}return st.nextToken();}\n\t\tString nextLine()  {String s=null;try{s=reader.readLine();}catch(IOException e){e.printStackTrace();}return s;}\t    \t  \t\n\t\tint    nextInt()   {return Integer.parseInt(next());}\n\t\tlong   nextLong()  {return Long.parseLong(next());}\t\t\n\t\tdouble nextDouble(){return Double.parseDouble(next());}\n\t\tchar   nextChar()  {return next().charAt(0);}\n\t\tint[]  nextIntArray(int n)         {int[] arr= new int[n];   int i=0;while(i<n){arr[i++]=nextInt();}  return arr;}\n\t\tlong[] nextLongArray(int n)        {long[]arr= new long[n];  int i=0;while(i<n){arr[i++]=nextLong();} return arr;}\t\n\t\tint[]  nextIntArrayOneBased(int n) {int[] arr= new int[n+1]; int i=1;while(i<=n){arr[i++]=nextInt();} return arr;}\t    \t\n\t\tlong[] nextLongArrayOneBased(int n){long[]arr= new long[n+1];int i=1;while(i<=n){arr[i++]=nextLong();}return arr;}\t    \t\n\t\tvoid   close(){try{reader.close();}catch(IOException e){e.printStackTrace();}}\t\t\t\t\n\t}\n\t\n\t/*********** TEMPLATE ENDS HERE *************/\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nmap<string, int> m, m1;\nstring s;\nint n;\nint main() {\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> s;\n    m[s]++;\n  }\n  int p = 0;\n  for (int i = 0; i < n; i++) {\n    cin >> s;\n    if (!m[s])\n      p++;\n    else\n      m[s]--;\n  }\n  cout << p << endl;\n}\n"
        },
        {
            "language": 1,
            "solution": "n=input()\nA=[]\nB=[]\nAns=0\nfor i in range(n):\n\tA.append(raw_input())\nfor i in range(n):\n\tB.append(raw_input())\nfor i in range(n):\n\ttry:\n\t\tA.remove(B[i])\n\texcept:\n\t\tAns=Ans+1\nprint Ans"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class P3{\n\n  public void print(String [] arr){\n    StringBuilder sb = new StringBuilder();\n    for(String x : arr){\n      sb.append(x).append(\" \");\n    }\n    System.out.println(sb.toString().trim());\n  }\n\n  public void ans(String [] prev, String [] next){\n    //print(prev);\n    //print(next);\n    List<List<String>> prevBucket = new ArrayList<>();\n    List<List<String>> curBucket = new ArrayList<>();\n    for(int i = 0; i < 5; ++i){\n      prevBucket.add(new ArrayList<>());\n      curBucket.add(new ArrayList<>());\n    }\n\n    for(String s : prev){\n      //System.out.println(s.length());\n      prevBucket.get(s.trim().length()).add(s);\n    }\n\n    for(String s : next){\n      curBucket.get(s.trim().length()).add(s);\n    }\n    //System.out.println(prevBucket);\n    //System.out.println(curBucket);\n\n    for(int i = 0; i < curBucket.size(); ++i){\n      Collections.sort(curBucket.get(i));\n      Collections.sort(prevBucket.get(i));\n    }\n\n    /*if(prev[0].equals(\"S\")){\n      System.out.println(prevBucket);\n      System.out.println(curBucket);\n    } */\n\n    int sol = 0;\n    for(int i = 0; i < curBucket.size(); ++i){\n      int siz = curBucket.get(i).size();\n      for(int j = 0; j < siz; ++j){\n          if(!curBucket.get(i).get(j).equals(prevBucket.get(i).get(j))){\n            ++sol;\n          }\n        }\n      }\n\n\n    System.out.println(sol);\n\n  }\n\n  public void ans(String [] prev, String [] cur, int x){\n      Map<String, Integer> map = new HashMap<>();\n      for(String p : cur) map.put(p, map.getOrDefault(p, 0) + 1);\n      int ctr = 0;\n      for(String p : prev) {\n        if(map.containsKey(p)){\n          map.put(p, map.get(p) - 1);\n          if(map.get(p) == 0) map.remove(p);\n        } else {\n          ++ctr;\n        }\n      }\n      System.out.println(ctr);\n  }\n\n\n\n   public static void main(String[] args) {\n    P3 main = new P3();\n    Scanner scanner = new Scanner(System.in);\n    /*String [] firstLine = scanner.nextLine().split(\" \");\n    String [] secondLine = scanner.nextLine().split(\" \");\n\n    int [] firstLineArr = new int[firstLine.length];\n    int [] arr = new int[secondLine.length];\n    for(int i = 0; i < firstLine.length; ++i) firstLineArr[i] = Integer.parseInt(firstLine[i]);\n    for(int i = 0; i < arr.length; ++i) arr[i] = Integer.parseInt(secondLine[i]); */\n    int n = Integer.parseInt(scanner.nextLine());\n    String [] prev = new String[n];\n    String [] cur = new String[n];\n    List<String> input = new ArrayList<>();\n    int ptr = 0;\n\n    for(int i = 0; i < 2*n; ++i){\n      String nxt = scanner.nextLine();\n      if(i == n) ptr = 0;\n      if(i < n){\n        prev[ptr++] = nxt;\n      } else {\n        cur[ptr++] = nxt;\n      }\n      input.add(nxt);\n    }\n    //main.ans(prev, cur);\n    main.ans(prev, cur, 1);\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  vector<string> in, out, nin, nout;\n  map<string, int> ma;\n  for (int i = 0; i < n; i++) {\n    string s;\n    cin >> s;\n    ma[s]++;\n  }\n  for (int i = 0; i < n; i++) {\n    string s;\n    cin >> s;\n    if (ma[s] > 0) {\n      ma[s]--;\n    } else\n      out.push_back(s);\n  }\n  for (auto it = ma.begin(); it != ma.end(); it++) {\n    while (ma[it->first] > 0) {\n      in.push_back(it->first);\n      ma[it->first]--;\n    }\n  }\n  cout << in.size() << endl;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nprevious = []\nnext = []\nfor i in range(n):\n    previous.append(input())\n\nfor i in range(n):\n    next.append(input())\n\nsizes = [\"M\", \"S\", \"L\", \"XS\", \"XXS\", \"XXXS\", \"XL\", \"XXL\", \"XXXL\"]\ncount = 0\nfor size in sizes:\n    c1 = previous.count(size)\n    c2 = next.count(size)\n    if c1 < c2:\n        count += c2 - c1\n\nprint(count)\n"
        },
        {
            "language": 1,
            "solution": "if __name__ == '__main__':\n    n = int(raw_input())\n    old, new = {}, {}\n    for i in range(n):\n        tmp = raw_input()\n        old[tmp] = old.get(tmp, 0) + 1\n    for i in range(n):\n        tmp = raw_input()\n        new[tmp] = new.get(tmp, 0) + 1\n\n    ans = 0\n    for item in new:\n        ans += max(new.get(item, 0) - old.get(item, 0), 0)\n    print ans\n"
        },
        {
            "language": 3,
            "solution": "nos = int(input())\nlast_year = []\ncurr_year = []\nneeded = 0\nfor i in range(nos):\n    last_year.append(input())\nfor i in range(nos):\n    curr_year.append(input())\nfor i in last_year:\n    if i in curr_year:\n        curr_year.pop(curr_year.index(i))\nprint(len(curr_year))"
        },
        {
            "language": 3,
            "solution": "\"\"\"\n3\nXS\nXS\nM\nXL\nS\nXS\n\n\"\"\"\nfrom collections import defaultdict \n\nn=int(input())\nprev=defaultdict(lambda:0,{})\nnow=[]\nfor i in range(n):\n\tele=input()\n\tprev[ele]+=1 \n\nfor i in range(n):\n\tele=input()\n\tif(prev[ele]>0):\n\t\tprev[ele]-=1 \n\telif(prev[ele]==0):\n\t\tnow.append(ele)\n\n\nl=len(now)\n\nprint(l)\n\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[input() for i in range(n)]\nb=[input() for i in range(n)]\nc=0\nfor i in a:\n    if i in b:\n        c+=1\n        b.remove(i)\nprint(n-c)"
        },
        {
            "language": 4,
            "solution": "//package codeforces;\n\nimport java.io.BufferedReader;\nimport java.util.Scanner;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.StringTokenizer;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Comparator;\nimport java.util.HashMap;\n\n\npublic class Round46 {\n\tint INF = (int) 1e9;\n\tint MOD = 1000000007;\n\t\n\tvoid solve(InputReader in, PrintWriter out) throws IOException {\n\t\tint  n = in.nextInt();\n\t\tString arr []= new String[n];\n\t\tString brr []= new String[n];\n\t\tHashMap<String,Integer> map = new HashMap<>();\n\t\tint m=0;\n\t\tint s=0;\n\t\tint l=0;\n\t\tfor(int i=0;i<n;i++){\n\t\t\tarr[i] = in.next();\n\t\t\tif(arr[i].equals(\"S\"))\n\t\t\t\ts++;\n\t\t\telse if(arr[i].equals(\"M\"))\n\t\t\t\tm++;\n\t\t\telse if(arr[i].equals(\"L\"))\n\t\t\t\tl++;\n\t\t}\n\t\tint count=0;\n\t\tfor(int i=0;i<n;i++){\n\t\t\tbrr[i] = in.next();\n\t\t\tif(brr[i].equals(\"S\"))\n\t\t\t\ts--;\n\t\t\telse if(brr[i].equals(\"M\"))\n\t\t\t\tm--;\n\t\t\telse if(brr[i].equals(\"L\"))\n\t\t\t\tl--;\n\t\t\tif(brr[i].length()==1)\n\t\t\t\tcount++;\n\t\t}\n\t\tArrays.sort(arr);\n\t\tArrays.sort(brr);\n\t\tint ans=0;\n\t\tfor(int i=0;i<n;i++){\n\t\t\tif(arr[i].length()==1)\n\t\t\t\tcontinue;\n\t\t\tif(!arr[i].equals(brr[i]))\n\t\t\t\tans++;\n\t\t}\n\t\tif(m>0)\n\t\t\tans+=m;\n\t\tif(s>0)\n\t\t\tans+=s;\n\t\tif(l>0)\n\t\t\tans+=l;\n\t\t//System.out.println(Arrays.toString(arr));\n\t\t//System.out.println(Arrays.toString(brr));\n\t\tSystem.out.println(ans);\n\t}\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tInputReader in = new InputReader();\n\t\tPrintWriter out = new PrintWriter(System.out);\n\t\tint t = 1;//in.nextInt();\n\t\twhile (t-- > 0) {\n\t\t\tnew Round46().solve(in, out);\n\t\t}\n\t\tout.close();\n\t}\n\n\tstatic class InputReader {\n\t\tstatic BufferedReader br;\n\t\tstatic StringTokenizer st;\n\n\t\tpublic InputReader() {\n\t\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t\t}\n\n\t\tString next() {\n\t\t\twhile (st == null || !st.hasMoreTokens()) {\n\t\t\t\ttry {\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tdouble nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\t}\n}\n\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class CodehorsesTshirts {\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\t\n\t\tHashMap<String,Integer> hm1 = new HashMap<>();\n\t\tHashMap<String,Integer> hm2 = new HashMap<>();\n\t\tfor(int i=0;i<n;++i)\n\t\t{\n\t\t\tString s = sc.next();\n\t\t\tif(hm1.containsKey(s))\n\t\t\t{\n\t\t\t\tint x = hm1.get(s);\n\t\t\t\thm1.put(s, x+1);\n\t\t\t//\tSystem.out.println(s+\" \"+(x+1)+\" \"+hm1.get(s));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\thm1.put(s,1);\n\t\t\t//\tSystem.out.println(s+\" \"+1);\n\t\t\t}\n\t\t\tsc.nextLine();\n\t\t}\n\t\tint count= 0;\n\t\tfor(int j=0;j<n;++j)\n\t\t{\n\t\t\tString s = sc.nextLine();\n\t\t\tif(hm1.containsKey(s))\n\t\t\t{\n\t\t\t\tint x = hm1.get(s);\n\t\t\t\tif(x==1)\n\t\t\t\t\thm1.remove(s);\n\t\t\t\telse\n\t\t\t\t\thm1.put(s, x-1);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(count);\n\t}\n\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\nimport java.util.Map;\nimport java.util.HashMap;\nimport java.io.IOException;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n *\n * @author programajor\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskA solver = new TaskA();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class TaskA {\n        public void solve(int testNumber, InputReader in, PrintWriter out) {\n            int n = in.nextInt();\n            Map<String, Integer> map = new HashMap<>();\n            for (int i = 0; i < n; i++) {\n                String x = in.next();\n                map.put(x, map.getOrDefault(x, 0) + 1);\n            }\n            int ans = 0;\n            for (int i = 0; i < n; i++) {\n                String x = in.next();\n                if (map.containsKey(x)) {\n                    map.put(x, map.get(x) - 1);\n                    if (map.get(x) == 0) {\n                        map.remove(x);\n                    }\n                } else {\n                    ans++;\n                }\n            }\n            out.print(ans);\n        }\n\n    }\n\n    static class InputReader {\n        private BufferedReader reader;\n        private StringTokenizer tokenizer;\n\n        public InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\n            tokenizer = null;\n        }\n\n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 3,
            "solution": "i=(int(input().strip()))\nqi=[[],[],[],[]]\nqo=[[],[],[],[]]\nfor j in range(i):\n  q=list(input().strip())\n  qi[len(q)-1].append(q[len(q)-1])\nfor j in range(i):\n  q=list(input().strip())\n  qo[len(q)-1].append(q[len(q)-1])\nfor j in range(4):\n  for q in qi[j]:\n    if q in qo[j]:\n      del(qo[j][qo[j].index(q)])\nprint(len(qo[0])+len(qo[1])+len(qo[2])+len(qo[3]))"
        },
        {
            "language": 1,
            "solution": "d={}\nn=int(raw_input())\nfor i in xrange(n):\n\ta = raw_input()\n\tif d.has_key(a)==False:\n\t\td[a]=0\n\td[a]+=1\n\nt=0\nfor i in xrange(n):\n\tb = raw_input()\n\tif d.has_key(b):\n\t\tif d[b]>0:\n\t\t\td[b]-=1\n\t\telse:\n\t\t\tt+=1\n\telse:\n\t\tt+=1\n\nprint t"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n\n        int shirts = sc.nextInt();\n        sc.nextLine();\n\n        HashMap<String, Integer> found = new HashMap<>();\n\n        for (int i = 0; i < shirts; i++) {\n            String size = sc.nextLine();\n            if (found.containsKey(size))\n                found.put(size, found.get(size) + 1);\n            else\n                found.put(size, 1);\n\n        }\n        for (int i = 0; i < shirts; i++) {\n            String size = sc.nextLine();\n            if(!found.containsKey(size))\n                continue;\n            Integer occurrence = found.get(size);\n            if (occurrence > 1)\n                found.put(size, occurrence - 1);\n            else\n                found.remove(size);\n        }\n        int left = 0;\n        for (String key : found.keySet()) {\n            left += found.get(key);\n        }\n        System.out.println(left);\n\n    }\n}"
        },
        {
            "language": 4,
            "solution": "//package com.company;\n\nimport java.io.*;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class Main\n{\n    private static int findMinOperations(ArrayList<String> previousSizes[],ArrayList<String> currentSizes[],int tShirts)\n    {\n        int minOperations = 0;\n\n        for(int length = 1;length <= 4;length++)\n        {\n            if(previousSizes[length] != null && currentSizes[length] != null)\n            {\n                HashMap<String,Integer> map1 = new HashMap<>();\n                HashMap<String,Integer> map2 = new HashMap<>();\n\n                ArrayList<String> previousList = previousSizes[length];\n                ArrayList<String> currentList = currentSizes[length];\n\n                for(String size:previousList)\n                {\n                    if(map1.containsKey(size))\n                    {\n                        map1.put(size,map1.get(size)+1);\n                    }\n                    else\n                        map1.put(size,1);\n                }\n\n                for(String size:currentList)\n                {\n                    if(map2.containsKey(size))\n                    {\n                        map2.put(size,map2.get(size)+1);\n                    }\n                    else\n                        map2.put(size,1);\n                }\n\n                for(String size:map2.keySet())\n                {\n                    if(map1.containsKey(size))\n                    {\n                        int previousCount = map1.get(size);\n                        int currentCount = map2.get(size);\n\n                        if(previousCount != currentCount)\n                        {\n                            if(previousCount < currentCount)\n                            {\n                                minOperations += currentCount - previousCount;\n                            }\n                        }\n                    }\n                    else\n                    {\n                        minOperations += map2.get(size);\n                    }\n                }\n            }\n        }\n\n        return minOperations;\n    }\n\n    public static void main(String[] args) throws IOException\n    {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));\n        StringBuilder outputString = new StringBuilder();\n\n        int tShirts = Integer.parseInt(br.readLine());\n\n        ArrayList<String> previousSizes[] = new ArrayList[5];\n        ArrayList<String> currentSizes[] = new ArrayList[5];\n\n        for(int i = 0;i < tShirts;i++)\n        {\n            String data = br.readLine();\n\n            if(previousSizes[data.length()] == null)\n            {\n                previousSizes[data.length()] = new ArrayList<>();\n            }\n\n            previousSizes[data.length()].add(data);\n        }\n\n        for(int i = 0;i < tShirts;i++)\n        {\n            String data = br.readLine();\n\n            if(currentSizes[data.length()] == null)\n            {\n                currentSizes[data.length()] = new ArrayList<>();\n            }\n\n            currentSizes[data.length()].add(data);\n        }\n\n        outputString.append(findMinOperations(previousSizes,currentSizes,tShirts)).append(\"\\n\");\n\n        bw.write(outputString.toString());\n        bw.close();\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\nimport string\n\nfrom collections import Counter, defaultdict\nfrom math import fsum, sqrt, gcd, ceil, factorial\nfrom operator import add\n\ninf = float(\"inf\")\n# input = sys.stdin.readline\nflush = lambda: sys.stdout.flush\ncomb = lambda x, y: (factorial(x) // factorial(y)) // factorial(x - y)\n\n\n# inputs\n# ip = lambda : input().rstrip()\nip = lambda: input()\nii = lambda: int(input())\nr = lambda: map(int, input().split())\nrr = lambda: list(r())\n\n\nn = ii()\narr = [ip() for _ in range(n)]\nbrr = [ip() for _ in range(n)]\nc = 0\nfor i in brr:\n    try:\n        arr.remove(i)\n    except:\n        c += 1\nprint(c)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\ns = [input() for i in range(n)]\nt = [input() for i in range(n)]\nres = 0\nfor ln in range(1, 5):\n\tsv = list(filter(lambda x: len(x)==ln, s))\n\ttv = list(filter(lambda x: len(x)==ln, t))\n\tss = {x: len(list(filter(lambda p: p==x, sv))) for x in set(sv)}\n\tts = {x: len(list(filter(lambda p: p==x, tv))) for x in set(tv)}\n\tfor x in set(sv):\n\t\tif x not in ts.keys():\n\t\t\tres += ss[x]\n\t\telif ss[x]>ts[x]:\n\t\t\tres += ss[x]-ts[x]\nprint(res)\n\t\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\ntemp1 = []\ntemp2 = []\nfor i in range(n):\n    temp1.append(input())\nfor i in range(n):\n    temp2.append(input())\na = [[]] * 5\nb = [[]] * 5\n#print(a)\ncnt = 0\nfor i in temp1:\n    k = len(i) - 1\n    a[k] = a[k] + [i]\nfor i in temp2:\n    k = len(i) - 1\n    b[k] = b[k] + [i]\nfor i in range(5):\n    m1 = a[i].count('M')\n    m2 = b[i].count('M')\n    s1 = a[i].count('X'*i+'S')\n    s2 = b[i].count('X'*i+'S')\n    l1 = len(a) - m1 - s1\n    l2 = len(b) - m2 - s2\n    cnt += int((abs(m1-m2)+abs(s1-s2)+abs(l1-l2))/2)\nprint(cnt)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e5 + 3;\nlong long MOD = 1e9 + 7;\nint main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  int n;\n  cin >> n;\n  vector<string> a(n), b(n);\n  map<string, int> ma, mb;\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n    ma[a[i]]++;\n  }\n  for (int i = 0; i < n; i++) {\n    cin >> b[i];\n    mb[b[i]]++;\n  }\n  map<string, int>::iterator it = ma.begin();\n  int ans = n;\n  for (; it != ma.end(); it++) {\n    ans -= min(it->second, mb[it->first]);\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nprev=[0]*9\ncur=[0]*9\nfor i in range(n):\n    a=list(str(input()))\n    l=len(a)\n    if a[-1]=='S':\n        prev[4-l]+=1\n    elif a[-1]=='L':\n        prev[4+l]+=1\n    else:\n        prev[4]+=1\nfor i in range(n):\n    a=list(str(input()))\n    l=len(a)\n    if a[-1]=='S':\n        cur[4-l]+=1\n    elif a[-1]=='L':\n        cur[4+l]+=1\n    else:\n        cur[4]+=1\ncount=0\nfor i in range(9):\n    if cur[i]-prev[i]>0:\n        count+=cur[i]-prev[i]\nprint(count)"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.FileNotFoundException;\nimport java.io.FileReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\nimport java.util.Random;\nimport java.util.StringTokenizer;\nimport java.util.TreeMap;\n\npublic class fc_Edu {\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tTreeMap<String, Integer> ts = new TreeMap();\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tString s = sc.next();\n\t\t\tts.put(s, ts.getOrDefault(s, 0) + 1);\n\t\t}\n\t\tint k = 0;\n\t\twhile (n-- > 0) {\n\t\t\tString s = sc.next();\n\t\t\tif (!ts.containsKey(s))\n\t\t\t\tk++;\n\t\t\tts.put(s, ts.getOrDefault(s, 0) - 1);\n\t\t\tif (ts.get(s) <= 0)\n\t\t\t\tts.remove(s);\n\t\t}\n\t\tSystem.out.println(k);\n\t}\n\n\tstatic class Scanner {\n\t\tStringTokenizer st;\n\t\tBufferedReader br;\n\n\t\tpublic Scanner(InputStream s) {\n\t\t\tbr = new BufferedReader(new InputStreamReader(s));\n\t\t}\n\n\t\tpublic Scanner(String f) throws FileNotFoundException {\n\t\t\tbr = new BufferedReader(new FileReader(f));\n\t\t}\n\n\t\tpublic String next() throws IOException {\n\t\t\twhile (st == null || !st.hasMoreTokens())\n\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tpublic int nextInt() throws IOException {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tpublic long nextLong() throws IOException {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tpublic String nextLine() throws IOException {\n\t\t\treturn br.readLine();\n\t\t}\n\n\t\tpublic double nextDouble() throws IOException {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tpublic boolean ready() throws IOException {\n\t\t\treturn br.ready();\n\t\t}\n\n\t\tpublic int[] nextIntArray(int n) throws IOException {\n\t\t\tint[] a = new int[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\ta[i] = nextInt();\n\t\t\treturn a;\n\t\t}\n\n\t\tpublic int[] nextIntArray1(int n) throws IOException {\n\t\t\tint[] a = new int[n + 1];\n\t\t\tfor (int i = 1; i <= n; i++)\n\t\t\t\ta[i] = nextInt();\n\t\t\treturn a;\n\t\t}\n\n\t\tpublic int[] shuffle(int[] a, int n) {\n\t\t\tint[] b = new int[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tb[i] = a[i];\n\t\t\tRandom r = new Random();\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tint j = i + r.nextInt(n - i);\n\t\t\t\tint t = b[i];\n\t\t\t\tb[i] = b[j];\n\t\t\t\tb[j] = t;\n\t\t\t}\n\t\t\treturn b;\n\t\t}\n\n\t\tpublic int[] nextIntArraySorted(int n) throws IOException {\n\t\t\tint[] a = nextIntArray(n);\n\t\t\ta = shuffle(a, n);\n\t\t\tArrays.sort(a);\n\t\t\treturn a;\n\t\t}\n\n\t\tpublic long[] nextLongArray(int n) throws IOException {\n\t\t\tlong[] a = new long[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\ta[i] = nextLong();\n\t\t\treturn a;\n\t\t}\n\n\t\tpublic long[] nextLongArray1(int n) throws IOException {\n\t\t\tlong[] a = new long[n + 1];\n\t\t\tfor (int i = 1; i <= n; i++)\n\t\t\t\ta[i] = nextLong();\n\t\t\treturn a;\n\t\t}\n\n\t\tpublic long[] nextLongArraySorted(int n) throws IOException {\n\t\t\tlong[] a = nextLongArray(n);\n\t\t\tRandom r = new Random();\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tint j = i + r.nextInt(n - i);\n\t\t\t\tlong t = a[i];\n\t\t\t\ta[i] = a[j];\n\t\t\t\ta[j] = t;\n\t\t\t}\n\t\t\tArrays.sort(a);\n\t\t\treturn a;\n\t\t}\n\t}\n\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = [input() for _ in range(n)]\nb = [input() for _ in range(n)]\n\nres = 0\nfor i in a:\n    if i not in b:\n        res += 1\n    else:\n        del b[b.index(i)]\n            \nprint(res)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[]\nb=[]\nfor i in range(n):\n    a.append(input())\nfor i in range(n):\n    b.append(input())\nb=list(b)\nfor i in a:\n    if i in b:\n        n-=1\n        del b[b.index(i)]\nprint(n)\n\n"
        },
        {
            "language": 1,
            "solution": "from collections import*\nn=input()\nI=lambda:Counter(raw_input()for _ in[0]*n)\na,b=I(),I()\nprint(sum(max(0,v-b[k])for k,v in a.items()))"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class Sol {\n static class FastReader\n    {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public FastReader()\n        {\n            br = new BufferedReader(new\n                     InputStreamReader(System.in));\n        }\n\n        String next()\n        {\n            while (st == null || !st.hasMoreElements())\n            {\n                try\n                {\n                    st = new StringTokenizer(br.readLine());\n                }\n                catch (IOException  e)\n                {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt()\n        {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong()\n        {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble()\n        {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine()\n        {\n            String str = \"\";\n            try\n            {\n                str = br.readLine();\n            }\n            catch (IOException e)\n            {\n                e.printStackTrace();\n            }\n            return str;\n        }\n    }\n\tpublic static void main(String[] args) {\n\t\tFastReader sc=new FastReader();\n\t\tint n=sc.nextInt();\n\t\t/*int m=sc.nextInt();\n\t\tint arr[]=new int[n+2];\n\t\tarr[0]=0;\n\t\tlong sum=0;\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tarr[i]=sc.nextInt();\n\t\t\tif(i%2==1)\n\t\t\t\tsum+=arr[i]-arr[i-1];\n\t\t\t\n\t\t}\n\t\tarr[n+1]=m;\n\t\tif((n+1)%2==1)\n\t\t\tsum+=arr[n+1]-arr[n];\n\t\tSystem.out.println(sum);\n\t*/\n\tString valid[]={\"S\",\"M\",\"L\",\"XS\",\"XL\",\"XXS\",\"XXL\",\"XXXS\",\"XXXL\"};\n\tHashMap<String,Integer> map=new HashMap<String,Integer>();\n\tfor(int i=0;i<n;i++){\n\t\tString x=sc.next();\n\t\tif(!map.containsKey(x)){\n\t\t\tmap.put(x,1);\n\t\t}\n\t\telse\n\t\t\tmap.put(x,map.get(x)+1);\n\t}\n\tfor(int i=0;i<n;i++){\n\tString x=sc.next();\n\t\tif(!map.containsKey(x)){\n\t\t\tmap.put(x,-1);\n\t\t}\n\t\telse\n\t\t\tmap.put(x,map.get(x)-1);\n\t}\t\n\tint c1=0;\n\tint c2=0;\n\tfor(String x:map.keySet()){\n\t\tif(map.get(x)>0){\n\t\t\tc1+=map.get(x);\n\t\t}\n\t\tif(map.get(x)<0){\n\t\t\tc2+=map.get(x)*-1;\n\t\t}\n\t\t\n\t}\n\tString a[]=new String[c1];\n\tString b[]=new String[c2];\n\tc1=0;c2=0;\n\tfor(String x:map.keySet()){\n\t\tif(map.get(x)>0){\n\t\t\tfor(int j=0;j<map.get(x);j++)\n\t\t\t\ta[c1++]=x;\n\t\t}\n\t\tif(map.get(x)<0){\n\t\t\tfor(int j=0;j<map.get(x)*-1;j++)\n\t\t\t\tb[c2++]=x;\n\t\t}\n\t\t\n\t}\n\t\n\tArrays.sort(a,new Comparator<String>(){\n\tpublic int compare(String x,String y){\n\t\tif(x.length()!=y.length())\n\t\t\treturn x.length()-y.length();\n\t\tfor(int i=0;i<x.length();i++){\n\t\t\tif(x.charAt(i)-y.charAt(i)!=0)\n\t\t\t\treturn x.charAt(i)-y.charAt(i);\n\t\t}\n\t\treturn 0;\n\t}\n\t});\n\tArrays.sort(b,new Comparator<String>(){\n\t\n\tpublic int compare(String x,String y){\n\t\tif(x.length()!=y.length())\n\t\t\treturn x.length()-y.length();\n\t\tfor(int i=0;i<x.length();i++){\n\t\t\tif(x.charAt(i)-y.charAt(i)!=0)\n\t\t\t\treturn x.charAt(i)-y.charAt(i);\n\t\t}\n\t\treturn 0;\n\t}\n\t});\n\tint sum=0;\n\tint i1=0;\n\tint i2=0;\n\t\n\n\twhile(true){\n\t\t\tif(i1==c1||i2==c2)\n\t\t\t\tbreak;\n\t\tif(a[i1].equals(b[i2]))\n\t\t\t{i1++;i2++;\n\t\t\tcontinue;\n\t\t\t}\n\t\t\n\t\t\tint s1=a[i1].length();\n\t\t\tint s2=b[i2].length();\n\t\t\tif(s1<s2){\n\t\t\t\ti1++;\n\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(s2<s1)\n\t\t\t{\n\t\t\t\ti2++;\n\t\t\tcontinue;\n\t\t\t}\n\t\t\tfor(int j=0;j<s1;j++){\n\t\t\t\tif(a[i1].charAt(j)!=b[i2].charAt(j))\n\t\t\t\t\tsum++;\n\t\t\t}\n\t\t\ti1++;i2++;\n\t\t}\n\t\n\tSystem.out.println(sum);\n\t\n\t}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long n, x = 127, s = 0, t;\n  string ch, ch1;\n  cin >> n;\n  map<string, int> m;\n  for (int i = 0; i < n; i++) {\n    cin >> ch;\n    m[ch]++;\n  }\n  for (int i = 0; i < n; i++) {\n    cin >> ch;\n    if (m[ch] > 0)\n      m[ch]--;\n    else\n      s++;\n  }\n  cout << s << endl;\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.StringTokenizer;\n\npublic class codehorses {\n\tpublic class Word implements Comparable<Word> {\n\t\tpublic String s;\n\t\tpublic int len;\n\t\tpublic Word(String s) {\n\t\t\tthis.s = s;\n\t\t\tthis.len = s.length();\n\t\t}\n\t\tpublic int compareTo(Word other) {\n\t\t\tif (len < other.len) return -1;\n\t\t\tif (len > other.len) return 1;\n\t\t\treturn s.compareTo(other.s);\n\t\t}\n\t\tpublic String toString() {\n\t\t\treturn s;\n\t\t}\n\t}\n\n\tpublic static void main(String[] args) throws Exception {\n\t\tnew codehorses().run();\n\t}\n\n\tpublic void run() throws Exception {\n\t\tFastIO file = new FastIO();\n\t\tint n = file.nextInt();\n\t\tArrayList<Word> one = new ArrayList<Word>();\n\t\tArrayList<Word> two = new ArrayList<Word>();\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tone.add(new Word(file.nextLine()));\n\t\t}\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\ttwo.add(new Word(file.nextLine()));\n\t\t}\n\t\tfor (int i = one.size() - 1; i >= 0; i--) {\n\t\t\tfor (int j = two.size() - 1; j >= 0; j--) {\n\t\t\t\tif (one.get(i).s.equals(two.get(j).s)) {\n\t\t\t\t\tone.remove(i);\n\t\t\t\t\ttwo.remove(j);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tCollections.sort(one);\n\t\tCollections.sort(two);\n\t\tlong total = 0L;\n\t\tfor (int i = 0; i < one.size(); i++) {\n\t\t\tString a = one.get(i).s;\n\t\t\tString b = two.get(i).s;\n\t\t\tfor (int j = 0; j < a.length() && j < b.length(); j++) {\n\t\t\t\tif (a.charAt(j) != b.charAt(j)) total++;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(total);\n\t}\n\n\tpublic static class FastIO {\n\t\tBufferedReader br;\n\t\tStringTokenizer st;\n\n\t\tpublic FastIO() {\n\t\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t\t}\n\n\t\tString next() {\n\t\t\twhile (st == null || !st.hasMoreElements()) {\n\t\t\t\ttry {\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tdouble nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tString nextLine() {\n\t\t\tString str = \"\";\n\t\t\ttry {\n\t\t\t\tstr = br.readLine();\n\t\t\t} catch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\treturn str;\n\t\t}\n\t}\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskE solver = new TaskE();\n        solver.solve(1, in, out);\n        out.flush();out.close();\n    }\n        static class TaskE {\n         int cnt[][][],ans=0;\n         void cal(int id){\n          int have=0,need=0;\n          for(int i=0;i<3;i++){\n           if(cnt[0][id][i]<cnt[1][id][i]){\n            ans+=cnt[1][id][i]-cnt[0][id][i];\n           }\n          }\n         }\n         public void solve(int testNumber, InputReader in, PrintWriter out) {\n            int n=in.nextInt();\n            HashMap<Character,Integer> hm=new HashMap<>();\n            hm.put('M',0);\n            hm.put('S',1);\n            hm.put('L',2);\n            cnt=new int[2][4][3];\n            for(int i=0;i<n;i++){\n             String s=in.next().trim();\n             int l=s.length();\n             cnt[0][l-1][hm.get(s.charAt(l-1))]++;\n            }\n            for(int i=0;i<n;i++){\n             String s=in.next().trim();\n             int l=s.length();\n             cnt[1][l-1][hm.get(s.charAt(l-1))]++;\n            }\n            for(int i=0;i<4;i++)cal(i);\n            out.print(ans);\n         }\n          //          int ja[][],from[],to[],c[];\n    //              void make(int n,int m,InputReader in){\n    //               ja=new int[n+1][];from=new int[m];to=new int[m];c=new int[n+1];\n    //               for(int i=0;i<m;i++){\n    //                from[i]=in.nextInt();to[i]=in.nextInt();\n    //                c[from[i]]++;c[to[i]]++;\n    //               }\n    //               for(int i=1;i<=n;i++){\n    //                ja[i]=new int[c[i]];c[i]=0;\n    //               }\n    //               for(int i=0;i<m;i++){\n    //                ja[from[i]][c[from[i]]++]=to[i];\n    //                ja[to[i]][c[to[i]]++]=from[i];\n    //               }\n    //              }\n//            int[] radixSort(int[] f){ return radixSort(f, f.length); }\n//    \tint[] radixSort(int[] f, int n)\n//    \t{\n//    \t\tint[] to = new int[n];\n//    \t\t{\n//    \t\t\tint[] b = new int[65537];\n//    \t\t\tfor(int i = 0;i < n;i++)b[1+(f[i]&0xffff)]++;\n//    \t\t\tfor(int i = 1;i <= 65536;i++)b[i]+=b[i-1];\n//    \t\t\tfor(int i = 0;i < n;i++){\n//                             to[b[f[i]&0xffff]++] = f[i];\n//                            }\n//    \t\t\tint[] d = f; f = to;to = d;\n//    \t\t}\n//    \t\t{\n//    \t\t\tint[] b = new int[65537];\n//    \t\t\tfor(int i = 0;i < n;i++)b[1+(f[i]>>>16)]++;\n//    \t\t\tfor(int i = 1;i <= 65536;i++)b[i]+=b[i-1];\n//    \t\t\tfor(int i = 0;i < n;i++)to[b[f[i]>>>16]++] = f[i];\n//    \t\t\tint[] d = f; f = to;to = d;\n//    \t\t}\n//    \t\treturn f;\n//    \t}\n    \n       }\n        \n    static class InputReader {\n        BufferedReader br;\n        StringTokenizer st;\n        public InputReader(InputStream stream) {\n            br = new BufferedReader(new InputStreamReader(stream));\n            st = null;\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreTokens()) {\n                String s = null;\n                try {\n                    s = br.readLine();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n                if (s == null)\n                    return null;\n                st = new StringTokenizer(s);\n            }\n            return st.nextToken();\n        }\n\n        boolean hasMoreTokens() {\n            while (st == null || !st.hasMoreTokens()) {\n                String s = null;\n                try {\n                    s = br.readLine();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n                if (s == null)\n                    return false;\n                st = new StringTokenizer(s);\n            }\n            return true;\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n        public double nextDouble() {\n            return Double.parseDouble(next());\n        }\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long int cases = 1;\n  while (cases--) {\n    long long int n;\n    cin >> n;\n    vector<string> a(n), b(n);\n    map<string, long long int> m1, m2;\n    for (long long int i = 0; i < n; i++) {\n      cin >> a[i];\n      m1[a[i]]++;\n    }\n    for (long long int i = 0; i < n; i++) {\n      cin >> b[i];\n      m2[b[i]]++;\n    }\n    long long int c = n;\n    for (auto i : m1) {\n      c -= min(i.second, m2[i.first]);\n    }\n    cout << c << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class Solution {\n\tstatic class CmpClass implements Comparator<String>{\n\t\tpublic int compare(String s1,String s2){\n\t\t\tif(s1.length()!=s2.length()){\n\t\t\t\treturn s1.length()-s2.length();\n\t\t\t}\n\t\t\telse return s1.compareTo(s2);\n\t\t}\n\t}\n\tpublic static void main(String[] args)throws Exception {\n\t\tBufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n\t\tint num=Integer.parseInt(br.readLine());\n\t\tArrayList<String> input=new ArrayList<String>();\n\t\tArrayList<String> output=new ArrayList<String>();\n\t\tint S=0,M=0,L=0,XS=0,XXS=0,XXXS=0,XL=0,XXL=0,XXXL=0;\n\t\tfor(int i=0;i<num;i++){\n\t\t\tString temp=br.readLine();\n\t\t\tif(temp.equals(\"M\")){\n\t\t\t\tM++;\n\t\t\t}\n\t\t\telse if(temp.equals(\"XS\")){\n\t\t\t\tXS++;\n\t\t\t}\n\t\t\telse if(temp.equals(\"XXS\")){\n\t\t\t\tXXS++;\n\t\t\t}\n\t\t\telse if(temp.equals(\"XXXS\")){\n\t\t\t\tXXXS++;\n\t\t\t}\n\t\t\telse if(temp.equals(\"XL\")){\n\t\t\t\tXL++;\n\t\t\t}\n\t\t\telse if(temp.equals(\"XXL\")){\n\t\t\t\tXXL++;\n\t\t\t}\n\t\t\telse if(temp.equals(\"XXXL\")){\n\t\t\t\tXXXL++;\n\t\t\t}\n\t\t\telse if(temp.equals(\"S\")){\n\t\t\t\tS++;\n\t\t\t}\n\t\t\telse if(temp.equals(\"L\")){\n\t\t\t\tL++;\n\t\t\t}\n\t\t\tinput.add(temp);\n\t\t}\n\t\tfor(int i=0;i<num;i++){\n\t\t\tString temp=br.readLine();\n\t\t\tint flag=0;\n\t\t\tif(temp.equals(\"M\") && M>0){\n\t\t\t\tM--;\n\t\t\t\tflag=1;\n\t\t\t\tinput.remove(temp);\n\t\t\t}\n\t\t\telse if(temp.equals(\"XS\") && XS>0){\n\t\t\t\tXS--;\n\t\t\t\tflag=1;\n\t\t\t\tinput.remove(temp);\n\t\t\t}\n\t\t\telse if(temp.equals(\"XXS\") && XXS>0){\n\t\t\t\tXXS--;\n\t\t\t\tflag=1;\n\t\t\t\tinput.remove(temp);\n\t\t\t}\n\t\t\telse if(temp.equals(\"XXXS\") && XXXS>0){\n\t\t\t\tXXXS--;\n\t\t\t\tflag=1;\n\t\t\t\tinput.remove(temp);\n\t\t\t}\n\t\t\telse if(temp.equals(\"XL\") && XL>0){\n\t\t\t\tXL--;\n\t\t\t\tflag=1;\n\t\t\t\tinput.remove(temp);\n\t\t\t}\n\t\t\telse if(temp.equals(\"XXL\") && XXL>0){\n\t\t\t\tXXL--;\n\t\t\t\tflag=1;\n\t\t\t\tinput.remove(temp);\n\t\t\t}\n\t\t\telse if(temp.equals(\"XXXL\") && XXXL>0){\n\t\t\t\tXXXL--;\n\t\t\t\tflag=1;\n\t\t\t\tinput.remove(temp);\n\t\t\t}\n\t\t\telse if(temp.equals(\"S\") && S>0){\n\t\t\t\tS--;\n\t\t\t\tflag=1;\n\t\t\t\tinput.remove(temp);\n\t\t\t}\n\t\t\telse if(temp.equals(\"L\") && L>0){\n\t\t\t\tL--;\n\t\t\t\tflag=1;\n\t\t\t\tinput.remove(temp);\n\t\t\t}\n\t\t\tif(flag==0){\n\t\t\t\toutput.add(temp);\n\t\t\t}\n\t\t}\n\t\t\n\t\tCollections.sort(input,new CmpClass());\n\t\tCollections.sort(output,new CmpClass());\n\t\tint count=0;\n        int size=input.size();\n\t\tfor(int i=0;i<size;i++){\n\t\t\tif(!input.get(i).equals(output.get(i))){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(count);\n\t}\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.lang.*;\nimport java.util.*;\n\npublic class ques1  {\n\n    public static void reset(int[] arr) {\n        for (int i = 0; i < arr.length; i++)\n            arr[i] = 0;\n    }\n\n    public static void abs1(int[] arr)  {\n        for (int i =0 ; i < arr.length; i++)\n            arr[i] = Math.abs(arr[i]);\n    }\n\n    public static void prnt(List<String> list1)  {\n        for (int i = 0 ; i < list1.size(); i++) {\n            System.out.println(list1.get(i));\n        }\n    }\n\n\n    public static void main (String[] args) {\n        Scanner scan = new Scanner(System.in);\n        int n = scan.nextInt();\n        List<String> old = new ArrayList<String>();\n        List<String> New = new ArrayList<String>();\n\n        //to comsume the blank newline character\n        scan.nextLine();\n\n        for (int i = 0 ; i < n ; i++)   {\n            String a = scan.nextLine();\n            old.add(a);\n        }\n\n        for (int i = 0 ; i < n ; i++)   {\n            String a = scan.nextLine();\n            New.add(a);\n        }\n\n        Collections.sort(old);\n        Collections.sort(New);\n\n        int counter = 0;\n\n        int[] count = new int[6];\n        reset(count);\n\n        for (int i = 0 ; i < n ; i++)   {\n            String a = old.get(i);\n            if (a.length() == 1)    {\n                switch (a)  {\n                case \"S\" :\n                    count[0]++;\n                    break;\n                case \"M\" :\n                    count[1]++;\n                    break;\n                case\"L\" :\n                    count[2]++;\n                    break;\n                }\n            }\n\n            String b = New.get(i);\n            if (b.length() == 1)    {\n                switch (b)  {\n                case \"S\" :\n                    count[3]++;\n                    break;\n                case \"M\" :\n                    count[4]++;\n                    break;\n                case\"L\" :\n                    count[5]++;\n                    break;\n                }\n            }\n\n        }\n        int[] diff = new int[3];\n        diff[0] = count[0] - count[3];\n        diff[1] = count[1] - count[4];\n        diff[2] = count[2] - count[5];\n\n        abs1(diff);\n        // find the greatest\n        Arrays.sort(diff);\n        counter = diff[2];\n\n\n        // For the two digit ones\n        reset(count);\n\n        for (int i = 0 ; i < n ; i++)   {\n            String a = old.get(i);\n            if (a.length() == 2)    {\n                switch (a)  {\n                case \"XS\" :\n                    count[0]++;\n                    break;\n                case \"XL\" :\n                    count[1]++;\n                    break;\n                }\n            }\n\n            String b = New.get(i);\n            if (b.length() == 2)    {\n                switch (b)  {\n                case \"XS\" :\n                    count[3]++;\n                    break;\n                case \"XL\" :\n                    count[4]++;\n                    break;\n                }\n            }\n        }\n        diff[0] = count[0] - count[3];\n        diff[1] = count[1] - count[4];\n        if (diff[0] > diff[1])  {\n            counter += diff[0];\n        }\n        else\n            counter += diff[1];\n\n        reset(count);\n\n        for (int i = 0 ; i < n ; i++)   {\n            String a = old.get(i);\n            if (a.length() == 3)    {\n                switch (a)  {\n                case \"XXS\" :\n                    count[0]++;\n                    break;\n                case \"XXL\" :\n                    count[1]++;\n                    break;\n                }\n            }\n\n            String b = New.get(i);\n            if (b.length() == 3)    {\n                switch (b)  {\n                case \"XXS\" :\n                    count[3]++;\n                    break;\n                case \"XXL\" :\n                    count[4]++;\n                    break;\n                }\n            }\n        }\n        diff[0] = count[0] - count[3];\n        diff[1] = count[1] - count[4];\n        if (diff[0] > diff[1])  {\n            counter += diff[0];\n        }\n        else\n            counter += diff[1];\n\n        reset(count);\n\n        for (int i = 0 ; i < n ; i++)   {\n            String a = old.get(i);\n            if (a.length() == 4)    {\n                switch (a)  {\n                case \"XXXS\" :\n                    count[0]++;\n                    break;\n                case \"XXXL\" :\n                    count[1]++;\n                    break;\n                }\n            }\n\n            String b = New.get(i);\n            if (b.length() == 4)    {\n                switch (b)  {\n                case \"XXXS\" :\n                    count[3]++;\n                    break;\n                case \"XXXL\" :\n                    count[4]++;\n                    break;\n                }\n            }\n        }\n        diff[0] = count[0] - count[3];\n        diff[1] = count[1] - count[4];\n        if (diff[0] > diff[1])  {\n            counter += diff[0];\n        }\n        else\n            counter += diff[1];\n\n        System.out.println(counter);\n\n\n\n\n    }\n\n\n\n\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.util.stream.IntStream;\nimport java.util.stream.Stream;\n\npublic class codeforces {\n    public static void main(String[] args) {\n        Scanner inputStream = new Scanner(System.in);\n\n        int n = inputStream.nextInt();\n        inputStream.nextLine();\n\n        List<String> lastYear = new ArrayList();\n        List<String> thisYear = new ArrayList();\n\n        for (int i = 0; i < n; i++) {\n            lastYear.add(inputStream.nextLine());\n        }\n        for (int i = 0; i < n; i++) {\n            thisYear.add(inputStream.nextLine());\n        }\n        lastYear.sort(Comparator.naturalOrder());\n        thisYear.sort(Comparator.naturalOrder());\n\n        for (int i = 0; i < n; i++) {\n            String current = thisYear.remove(0);\n            int index = lastYear.indexOf(current);\n            if (index >= 0) {\n                lastYear.remove(index);\n            } else {\n                thisYear.add(current);\n            }\n        }\n\n        System.out.println(thisYear.size());\n\n//        int total = IntStream.range(1,n+1).boxed().reduce(0, (a,b) -> (int) (a+b*Math.pow(-1,b)));\n\n\n//        System.out.println(input.equals(new StringBuilder(input2).reverse().toString())?\"YES\":\"NO\");\n    }\n}"
        },
        {
            "language": 3,
            "solution": "num = int(input())\nsame = 0\na, visa = [], []\nb, visb = [], []\nfor i in range(num):\n    a.append(input())\n    visa.append(0)\nfor i in range(num):\n    b.append(input())\n    visb.append(0)\nfor i in range(num):\n    if visa[i]:\n        continue\n    for j in range(num):\n        if visb[j]:\n            continue\n        if a[i] == b[j]:\n            same += 1\n            visa[i] = 1\n            visb[j] = 1\n            break\nprint(num - same)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=b=[]\nk=0\nfor _ in range(n): \n\ta.append(input())\nfor i in range(n):\n\tt=input()\n\tif t in a:\n\t\ta.remove(t)\nprint(len(a))"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  int count = 0;\n  string s;\n  int a[9] = {0}, b[9] = {0};\n  for (int i = 0; i < n; i++) {\n    cin >> s;\n    if (s == \"M\") {\n      a[0]++;\n    } else if (s == \"L\") {\n      a[1]++;\n    } else if (s == \"S\") {\n      a[2]++;\n    } else if (s == \"XL\") {\n      a[3]++;\n    } else if (s == \"XS\") {\n      a[4]++;\n    } else if (s == \"XXL\") {\n      a[5]++;\n    } else if (s == \"XXS\") {\n      a[6]++;\n    } else if (s == \"XXXL\") {\n      a[7]++;\n    } else if (s == \"XXXS\") {\n      a[8]++;\n    }\n  }\n  for (int i = 0; i < n; i++) {\n    cin >> s;\n    if (s == \"M\") {\n      b[0]++;\n    } else if (s == \"L\") {\n      b[1]++;\n    } else if (s == \"S\") {\n      b[2]++;\n    } else if (s == \"XL\") {\n      b[3]++;\n    } else if (s == \"XS\") {\n      b[4]++;\n    } else if (s == \"XXL\") {\n      b[5]++;\n    } else if (s == \"XXS\") {\n      b[6]++;\n    } else if (s == \"XXXL\") {\n      b[7]++;\n    } else if (s == \"XXXS\") {\n      b[8]++;\n    }\n  }\n  for (int i = 0; i < 9; i++) {\n    if (a[i] > b[i]) count = count + a[i] - b[i];\n  }\n  cout << count;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[]\nfor i in range(n):\n    a.append(input())\nres=[]\nfor i in range(n):\n    t=input()\n    if t in a:\n        a.remove(t)\n    else:\n        res.append(t)\nprint(len(res))"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  ;\n  long long n, m = 4000000000000000007, i = 1, q, j = 0, u = 0, k = 0, l = 0,\n               r = 0, x = 4000000000000000007, y = 0;\n  cin >> n;\n  map<string, long long> p1, p2;\n  string s;\n  for (i = (1); i <= (n); i++) cin >> s, p1[s]++;\n  for (i = (1); i <= (n); i++) cin >> s, p2[s]++;\n  for (auto e : p1) u += min(e.second, p2[e.first]);\n  cout << n - u;\n}\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.*;\n\npublic class test\n{\t\n    private static Scanner sc = new Scanner(System.in);\n\tprivate static String abc[] = {\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\"};\n\t\n\t\n\t\n\tpublic static void main(String[] args)\n    {\t\n\t\t\n\t\tint n = sc.nextInt();\n\t\t\n\t\tint data1[] = new int[20];\n\t\tint data2[] = new int[20];\n\t\t\n\t\t\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t\tString s = sc.next();\n\t\t\t\n\t\t\tif(s.equals(\"XXXS\"))\n\t\t\t{\n\t\t\t\tdata1[1]++;\n\t\t\t}\n\t\t\tif(s.equals(\"XXXL\"))\n\t\t\t{\n\t\t\t\tdata1[2]++;\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\tif(s.equals(\"XXS\"))\n\t\t\t{\n\t\t\t\tdata1[3]++;\n\t\t\t}\n\t\t\tif(s.equals(\"XXL\"))\n\t\t\t{\n\t\t\t\tdata1[4]++;\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\tif(s.equals(\"XS\"))\n\t\t\t{\n\t\t\t\tdata1[5]++;\n\t\t\t}\n\t\t\tif(s.equals(\"XL\"))\n\t\t\t{\n\t\t\t\tdata1[6]++;\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\tif(s.equals(\"S\"))\n\t\t\t{\n\t\t\t\tdata1[7]++;\n\t\t\t}\n\t\t\tif(s.equals(\"M\"))\n\t\t\t{\n\t\t\t\tdata1[8]++;\n\t\t\t}\n\t\t\tif(s.equals(\"L\"))\n\t\t\t{\n\t\t\t\tdata1[9]++;\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t\tString s = sc.next();\n\t\t\t\n\t\t\tif(s.equals(\"XXXS\"))\n\t\t\t{\n\t\t\t\tdata2[1]++;\n\t\t\t}\n\t\t\tif(s.equals(\"XXXL\"))\n\t\t\t{\n\t\t\t\tdata2[2]++;\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\tif(s.equals(\"XXS\"))\n\t\t\t{\n\t\t\t\tdata2[3]++;\n\t\t\t}\n\t\t\tif(s.equals(\"XXL\"))\n\t\t\t{\n\t\t\t\tdata2[4]++;\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\tif(s.equals(\"XS\"))\n\t\t\t{\n\t\t\t\tdata2[5]++;\n\t\t\t}\n\t\t\tif(s.equals(\"XL\"))\n\t\t\t{\n\t\t\t\tdata2[6]++;\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\tif(s.equals(\"S\"))\n\t\t\t{\n\t\t\t\tdata2[7]++;\n\t\t\t}\n\t\t\tif(s.equals(\"M\"))\n\t\t\t{\n\t\t\t\tdata2[8]++;\n\t\t\t}\n\t\t\tif(s.equals(\"L\"))\n\t\t\t{\n\t\t\t\tdata2[9]++;\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\tint answer = 0;\n\t\t\n\t\tfor(int i=1;i<=9;i++)\n\t\t{\n\t\t\tanswer += Math.max(0,data2[i]-data1[i]);\n\t\t}\n\t\t\n\n\t\tSystem.out.print(answer);\n\t\t\n\t\t\n\n\t\t\n\t\t\n\n\t\t\n\t\t\n\t\t\n\t\t\t\t\n\t\t\n\t}\n}\n\n\n/*\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n\n\n\n\n7  8\n\n8  9\n9  21\n10 18\n11 46\n12 67\n13 69\n14 68\n15 75\n*/\n\n\n\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "from collections import defaultdict as di\nn = int(input())\nd = di(int)\nres = 0\nfor i in range(n):\n\td[input()]+= 1\nb = []\nfor i in range(n):\n\tb.append(input())\nfor i in range(n):\n\tif d.get(b[i], 0) != 0:\n\t\td[b[i]]-= 1\n\telse:\n\t\tres+= 1\nprint(res)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[*(input()for _ in[0]*n)]\nfor _ in[0]*n:\n try:a.remove(input())\n except:pass\nprint(len(a))"
        },
        {
            "language": 4,
            "solution": "/* package whatever; // don't place package name! */\n\nimport java.util.*;\nimport java.lang.*;\nimport java.io.*;\n\n/* Name of the class has to be \"Main\" only if the class is public. */\npublic class Ideone\n{\n\tpublic static void main (String[] args) throws java.lang.Exception\n\t{\n\t\t// your code goes here\n\t\tScanner scan=new Scanner(System.in);\n\t\tint n=scan.nextInt();\n\t\tHashMap<String,Integer> hm=new HashMap<String,Integer>();\n\t\tfor(int i=0;i<n;i++){\n\t\t\tString s=scan.next();\n\t\t\tif(hm.containsKey(s)){\n\t\t\t\thm.put(s,hm.get(s)+1);\n\t\t\t}\n\t\t\telse{\n\t\t\t\thm.put(s,1);\n\t\t\t}\n\t\t}\n\t\tint ans=0;\n\t\tfor(int i=0;i<n;i++){\n\t\t\tString s=scan.next();\n\t\t\tif(hm.containsKey(s)){\n\t\t\t\thm.put(s,hm.get(s)-1);\n\t\t\t\tif(hm.get(s)==0){\n\t\t\t\t\thm.remove(s);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\tans++;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(ans);\n\t}\n}"
        },
        {
            "language": 3,
            "solution": "n = int(input())\n\na = []\nb = []\n\nfor i in range(n):\n    a.append(input())\n\nfor i in range(n):\n    b.append(input())\ncounter = 0\nfor i in range(n):\n    if (a[i] not in b):\n        counter+=1\n    else:\n        b.remove(a[i])\n\nprint(counter)\n\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nL1 = [ [] for i in range(5) ]\nL2 = [ [] for i in range(5) ]\nans = 0\nfor i in range(n):\n    a = input()\n    L1[len(a)].append(a)\nfor j in range(n):\n    b = input()\n    L2[len(b)].append(b)\n\ns = 0\nm = 0\nl = 0\n\nfor i in L1[1]:\n    if i == 'S':\n        s += 1\n    elif i == 'M':\n        m += 1\n    else:\n        l += 1\ns1 = 0\nm1 = 0\nl1 = 0\nfor i in L2[1]:\n    if i == 'S':\n        s1 += 1\n    elif i == 'M':\n        m1 += 1\n    else:\n        l1 += 1\nans += (abs(m - m1) + abs(s - s1) + abs(l - l1)) // 2\n\nfor i in range(2, 5):\n    s = 0\n    l = 0\n    s1 = 0\n    l1 = 0\n    for j in range(len(L1[i])):\n        if L1[i][j][i - 1] == 'S':\n            s += 1\n        else:\n            l += 1\n        if L2[i][j][i - 1] == 'S':\n            s1 += 1\n        else:\n            l1 += 1\n    ans += (abs(l - l1) + abs(s - s1)) // 2\nprint(ans)\n"
        },
        {
            "language": 3,
            "solution": "import sys\nimport math\n\nn=int(input())\naa=[]\nbb=[]\nfor i in range(2*n):\n    ert=str(input())\n    if(i<n):\n        aa.append(ert)\n    else:\n        bb.append(ert)\nsa=sorted(aa)\nsb=sorted(bb)\nstra=[\"L\",\"M\",\"S\",\"XS\",\"XL\",\"XXS\",\"XXL\",\"XXXS\",\"XXXL\"]\nqaa=[0 for i in range(9)]\nqbb=[0 for j in range(9)]\ncnt=0\nfor i in range(len(stra)):\n    qaa[i]=sa.count(stra[i])\n    qbb[i]=sb.count(stra[i])\n    diff=qaa[i]-qbb[i]\n    if(i<3):\n        if(diff>0):\n            cnt+=diff\n    elif(i==3 or i==4):\n        if (diff > 0):\n            cnt += diff\n    elif(i==5 or i==6):\n        if (diff > 0):\n            cnt += diff\n    elif(i==7 or i==8):\n        if (diff > 0):\n            cnt += diff\n\nprint(cnt)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\narr10=[]\narr11=[]\narr12=[]\narr13=[]\narr20=[]\narr21=[]\narr22=[]\narr23=[]\nfor i in range(n):\n\ts=str(input())\n\tk=s.count('X')\n\tif(k==0):\n\t\tarr10.append(s)\n\telif(k==1):\n\t\tarr11.append(s)\n\telif(k==2):\n\t\tarr12.append(s)\n\telif(k==3):\n\t\tarr13.append(s)\t\nfor i in range(n):\n\ts=str(input())\n\tk=s.count('X')\n\tif(k==0):\n\t\tarr20.append(s)\n\telif(k==1):\n\t\tarr21.append(s)\n\telif(k==2):\n\t\tarr22.append(s)\n\telif(k==3):\n\t\tarr23.append(s)\nans=0\narr10.sort()\narr20.sort()\t\nfor i in range(len(arr10)):\n\tif(arr10[i] in arr20):\n\t\tz=arr20.index(arr10[i])\n\t\tarr20[z]='Z'\n\telse:\n\t\tans+=1\narr11.sort()\narr21.sort()\t\nfor i in range(len(arr11)):\n\tif(arr11[i] in arr21):\n\t\tz=arr21.index(arr11[i])\n\t\tarr21[z]='Z'\n\telse:\n\t\tans+=1\narr12.sort()\narr22.sort()\t\nfor i in range(len(arr12)):\n\tif(arr12[i] in arr22):\n\t\tz=arr22.index(arr12[i])\n\t\tarr22[z]='Z'\n\telse:\n\t\tans+=1\narr13.sort()\narr23.sort()\t\nfor i in range(len(arr13)):\n\tif(arr13[i] in arr23):\n\t\tz=arr23.index(arr13[i])\n\t\tarr23[z]='Z'\n\telse:\n\t\tans+=1\nprint(ans)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[*(input()for _ in[0]*n)]\nc=0\nfor _ in[0]*n:\n try:a.remove(input())\n except:c+=1\nprint(c)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nconst bool DEBUG = false;\nusing namespace std;\nconst long long maxn = 2e5 + 5;\nconst long long INF = 1e18 + 1;\nconst long long M = 1e9 + 7;\nconst int lg = 21;\nint ans, n;\nbool A[maxn], B[maxn];\nstring a[maxn], b[maxn];\nint main() {\n  ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);\n  cin >> n;\n  for (int i = 0; i < n; i++) cin >> a[i];\n  for (int i = 0; i < n; i++) cin >> b[i];\n  for (int i = 0; i < n; i++) {\n    for (int j = 0; j < n; j++) {\n      if (A[i] == 1 or B[j] == 1) continue;\n      if (a[i] == b[j]) A[i] = B[j] = 1;\n    }\n  }\n  for (int i = 0; i < n; i++)\n    if (!A[i]) ans++;\n  cout << ans << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint hh1[100], hh2[100];\nstring a[1005], b[110];\nbool vis[111];\nint main() {\n  int n, ans = 0, how, now, minn, maxn = 0;\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n    if (a[i].size() == 1) hh1[a[i][0] - 'A']++;\n  }\n  for (int i = 0; i < n; i++) {\n    cin >> b[i];\n    if (b[i].size() == 1) hh2[b[i][0] - 'A']++;\n  }\n  for (int i = 0; i < 100; i++) maxn = max(abs(hh1[i] - hh2[i]), maxn);\n  ans = maxn;\n  memset(vis, false, sizeof vis);\n  for (int i = 0; i < n; i++) {\n    minn = 1e9;\n    for (int j = 0; j < n; j++) {\n      if (b[i].size() != 1 && b[i].size() == a[j].size() && !vis[j]) {\n        now = 0;\n        for (int l = 0; l < a[j].size(); l++) {\n          if (b[i][l] != a[j][l]) {\n            now++;\n          }\n        }\n        if (now < minn) {\n          minn = now;\n          how = j;\n        }\n      }\n    }\n    if (minn == 1e9) continue;\n    ans += minn;\n    vis[how] = true;\n  }\n  cout << ans << endl;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint gcd(int x, int y) {\n  if (y == 0) {\n    return x;\n  }\n  return gcd(y, x % y);\n}\nlong long int lgcd(long long int x, long long int y) {\n  if (y == 0) {\n    return x;\n  }\n  return lgcd(y, x % y);\n}\nlong long int pow(long long int a, long long int b,\n                  long long int m = 1000000007) {\n  long long int res = 1;\n  while (b > 0) {\n    if (b & 1) {\n      res = (res * a) % m;\n    }\n    a = (a * a) % m;\n    b >>= 1;\n  }\n  return res;\n}\nstring a[110], b[110];\nmap<string, int> m;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  int n, i, cnt = 0;\n  cin >> n;\n  for (i = 0; i < n; i++) {\n    cin >> a[i];\n    m[a[i]]++;\n  }\n  for (i = 0; i < n; i++) {\n    cin >> b[i];\n    if (m.find(b[i]) != m.end()) {\n      if (m[b[i]] > 0)\n        m[b[i]]--;\n      else\n        cnt++;\n    } else\n      cnt++;\n  }\n  cout << cnt;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "#!/usr/bin/python3\n\nn = int(input())\na = {\"M\": 0, \"S\": 0, \"L\": 0, \"XS\": 0, \"XL\": 0, \"XXS\": 0, \"XXL\": 0, \"XXXS\": 0, \"XXXL\": 0}\nb = {\"M\": 0, \"S\": 0, \"L\": 0, \"XS\": 0, \"XL\": 0, \"XXS\": 0, \"XXL\": 0, \"XXXS\": 0, \"XXXL\": 0}\n\nfor i in range(n):\n    s = input().strip()\n    a[s] += 1\n\nfor i in range(n):\n    s = input().strip()\n    b[s] += 1\n\ncnt = 0\nfor key in a:\n    if (a[key] < b[key]):\n        cnt += b[key] - a[key]\n\nprint(cnt)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  std::ios_base::sync_with_stdio(0);\n  std::cin.tie(0);\n  int n;\n  std::string str;\n  std::map<std::string, int> mp;\n  cin >> n;\n  for (int ind = 0; ind < n; ++ind) {\n    cin >> str;\n    ++mp[str];\n  }\n  for (int ind = 0; ind < n; ++ind) {\n    cin >> str;\n    --mp[str];\n  }\n  int answer = 0;\n  for (auto it : mp) {\n    if (it.second > 0) {\n      answer += it.second;\n    }\n  }\n  cout << answer;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "r = int(input())\n#print(r)\na = [input()for _ in range(r)]\n# print(a)\nans = 0\nfor _ in range(r):\n    try:\n        a.remove(input())\n    except:\n        ans += 1\nprint(ans)\n\n# 3\n# XS\n# XS\n# M\n# XL\n# S\n# XS"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl1 = [input() for i in range(n)]\nl2 = [input() for i in range(n)]\ncount = 0\nfor item in l1:\n    if item in l2:\n        l2.remove(item)\n        count += 1\n\nprint(n - count)\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.lang.*;\nimport java.math.*;\nimport java.io.*;\nimport static java.lang.Math.*;\npublic class Solution{\n    static InputReader sc;\n    static PrintWriter w;\n    public static void main(String[] args) {\n        sc = new InputReader(System.in);\n        w = new PrintWriter(System.out);\n        int n=sc.nextInt();\n        String[] arr=new String[2*n];\n        String s;\n        int i;\n        for(i=0;i<n;i++){\n            arr[i]=sc.next();\n        }\n        int marked[]=new int[n];\n        int res=0,min=Integer.MAX_VALUE;\n        for(i=0;i<n;i++){\n            s=sc.next();\n            min=Integer.MAX_VALUE;\n            for(int j=0;j<n;j++){\n                if(s.length()==arr[j].length()){\n                    //w.println(s.length());\n                    if(s.equals(arr[j])&&marked[j]==0){\n                        min=0;\n                        marked[j]=1;\n                        break;\n                    }\n                    else if(min>1) min=1;\n                    //w.println(min);\n                }\n            }\n            res+=min;\n        }\n        w.println(res);\n\t\tw.close();\n    }\n    static class InputReader{\n        \n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private SpaceCharFilter filter;\n        \n        public InputReader(InputStream stream)\n        {\n            this.stream = stream;\n        }\n        \n        public int read()\n        {\n            if (numChars==-1) \n                throw new InputMismatchException();\n            \n            if (curChar >= numChars)\n            {\n                curChar = 0;\n                try \n                {\n                    numChars = stream.read(buf);\n                }\n                catch (IOException e)\n                {\n                    throw new InputMismatchException();\n                }\n                \n                if(numChars <= 0)               \n                    return -1;\n            }\n            return buf[curChar++];\n        }\n     \n        public String nextLine()\n        {\n            BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n            String str = \"\";\n            try\n            {\n                str = br.readLine();\n            }\n            catch (IOException e)\n            {\n                e.printStackTrace();\n            }\n            return str;\n        }\n        public int nextInt()\n        {\n            int c = read();\n            \n            while(isSpaceChar(c)) \n                c = read();\n            \n            int sgn = 1;\n            \n            if (c == '-') \n            {\n                sgn = -1;\n                c = read();\n            }\n            \n            int res = 0;\n            do \n            {\n                if(c<'0'||c>'9') \n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            while (!isSpaceChar(c)); \n            \n            return res * sgn;\n        }\n        \n        public long nextLong() \n        {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-') \n            {\n                sgn = -1;\n                c = read();\n            }\n            long res = 0;\n            \n            do \n            {\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            while (!isSpaceChar(c));\n                return res * sgn;\n        }\n        \n        public double nextDouble() \n        {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-') \n            {\n                sgn = -1;\n                c = read();\n            }\n            double res = 0;\n            while (!isSpaceChar(c) && c != '.') \n            {\n                if (c == 'e' || c == 'E')\n                    return res * Math.pow(10, nextInt());\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            if (c == '.') \n            {\n                c = read();\n                double m = 1;\n                while (!isSpaceChar(c)) \n                {\n                    if (c == 'e' || c == 'E')\n                        return res * Math.pow(10, nextInt());\n                    if (c < '0' || c > '9')\n                        throw new InputMismatchException();\n                    m /= 10;\n                    res += (c - '0') * m;\n                    c = read();\n                }\n            }\n            return res * sgn;\n        }\n        \n        public String readString() \n        {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            StringBuilder res = new StringBuilder();\n            do \n            {\n                res.appendCodePoint(c);\n                c = read();\n            } \n            while (!isSpaceChar(c));\n            \n            return res.toString();\n        }\n     \n        public boolean isSpaceChar(int c) \n        {\n            if (filter != null)\n                return filter.isSpaceChar(c);\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n     \n        public String next() \n        {\n            return readString();\n        }\n        \n        public interface SpaceCharFilter \n        {\n            public boolean isSpaceChar(int ch);\n        }\n    }\n    \n}"
        },
        {
            "language": 1,
            "solution": "import sys\nrange = xrange\ninput = raw_input\n\nn = int(input())\nA = [input() for _ in range(n)]\nB = [input() for _ in range(n)]\n\nA.sort()\nB.sort()\n\ntot = 0\nwhile A and B:\n    if A[-1]>B[-1]:\n        tot+=1\n        A.pop()\n    elif A[-1]<B[-1]:\n        tot+=1\n        B.pop()\n    else:\n        A.pop()\n        B.pop()\nprint (tot + len(A) + len(B))//2\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\n/**\n * @author m.popov\n */\npublic class ProblemA {\n  public static void main(String[] args) {\n    Scanner scanner = new Scanner(System.in);\n\n    int size = scanner.nextInt();\n    Map<String, Integer> oldMap = new HashMap<>();\n    for (int i = 0; i < size; ++i) {\n      String str = scanner.next();\n      oldMap.put(str, oldMap.getOrDefault(str, 0) + 1);\n    }\n    Map<String, Integer> newMap = new HashMap<>();\n    for (int i = 0; i < size; ++i) {\n      String str = scanner.next();\n      newMap.put(str, newMap.getOrDefault(str, 0) + 1);\n    }\n\n    int seconds = 0;\n    int m = oldMap.getOrDefault(\"M\", 0) - newMap.getOrDefault(\"M\", 0);\n    int s = oldMap.getOrDefault(\"S\", 0) - newMap.getOrDefault(\"S\", 0);\n    int l = oldMap.getOrDefault(\"L\", 0) - newMap.getOrDefault(\"L\", 0);\n\n    seconds += Math.max(Math.max(Math.abs(m), Math.abs(s)), Math.abs(l));\n\n    int xl = oldMap.getOrDefault(\"XL\", 0) - newMap.getOrDefault(\"XL\", 0);\n    seconds += Math.abs(xl);\n\n    int xxl = oldMap.getOrDefault(\"XXL\", 0) - newMap.getOrDefault(\"XXL\", 0);\n    seconds += Math.abs(xxl);\n\n    int xxxl = oldMap.getOrDefault(\"XXXL\", 0) - newMap.getOrDefault(\"XXXL\", 0);\n    seconds += Math.abs(xxxl);\n\n    System.out.println(seconds);\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "def dell(a,b):\n    for i in a:\n        if i in b:\n            b.remove(i)\n            a.remove(i)\n            x=dell(a,b)\n            a=x[0]\n            b=x[1]\n            break\n    return  [a,b]\nn=int(input())\nn1=[]\nn2=[]\nn3=[]\nn4=[]\nm1=[]\nm2=[]\nm3=[]\nm4=[]\nfor i in range(n):\n  s=input()\n  if len(s)==1:\n    n1.append(s)\n  elif len(s)==2:\n    n2.append(s)\n  elif len(s)==3:\n    n3.append(s)\n  else:\n    n4.append(s)\nfor i in range(n):\n  s=input()\n  if len(s)==1:\n    m1.append(s)\n  elif len(s)==2:\n    m2.append(s)\n  elif len(s)==3:\n    m3.append(s)\n  else:\n    m4.append(s)\nn1,m1=dell(n1,m1)\nn2,m2=dell(n2,m2)\nn3,m3=dell(n3,m3)\nn4,m4=dell(n4,m4)\ns=n1+n2+n3+n4\ns1=m1+m2+m3+m4\nprint(len(s))\n"
        },
        {
            "language": 1,
            "solution": "n = input()\nl1 = []\nfor i in range(0,n):\n\ts = raw_input()\n\tl1.append(s)\nfor i in range(0,n):\n\ts = raw_input()\n\tif s in l1:\n\t    l1.remove(s)\nprint len(l1)"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\nimport java.lang.*;\nimport java.math.*;\nimport static java.lang.Math.*;\nimport java.util.concurrent.ThreadLocalRandom;\n\npublic class Sol implements Runnable {\n\n    long mod = (long)1e9 + 7;\n    \n    void solve(InputReader in, PrintWriter w) {\n    \t\n    \tint n = in.nextInt();\n    \t\n    \tString ss = \"----------------\";\n    \t\n    \tString a[] = new String[n];\n    \tfor(int i=0;i<n;i++) a[i] = in.next();\n    \t\n    \tString b[] = new String[n];\n    \t\n    \tfor(int i=0;i<n;i++) b[i] = in.next(); \n    \t\n    \tint ans = 0;\n    \t\n    \tfor(int i=0;i<n;i++) {\n    \t\tfor(int j=0;j<n;j++) {\n    \t\t\tif(a[i].equals(b[j])) {\n    \t\t\t\ta[i] = ss;\n    \t\t\t\tb[j] = \"!\";\n    \t\t\t}\n    \t\t}\n    \t}\n    \t\n    \tfor(int i=0;i<n;i++) {\n    \t\tfor(int j=0;j<n;j++) {\n    \t\t\tif(!b[i].equals(\"!\")) {\n    \t\t\t\tif(a[j].length() == b[i].length()) {\n    \t\t\t\t\tans++;\n    \t\t\t\t\ta[j] = ss;\n    \t\t\t\t\tbreak;\n    \t\t\t\t}\n    \t\t\t}\n    \t\t}\n    \t}\n    \t\n    \tw.println(ans);\n    }\n    \n\n\t// ************* Code ends here ***************\n\n    void init() throws Exception {\n        //Scanner in;\n        InputReader in;\n        PrintWriter w;\n        boolean online = false;\n\n        String common_in_fileName = \"in\";\n        String common_out_fileName = \"\\\\out\";\n        int test_files = 0;\n\n        for(int file_no = 0; file_no <= test_files; file_no++) {\n\n            String x = \"\" + file_no;\n            if (x.length() == 1) x = \"0\" + x;\n\n            String in_fileName = common_in_fileName;// + \"\" + x;\n            String out_fileName = common_out_fileName;// + \"\" + x;\n\n            if (online) {\n                //in = new Scanner(new File(in_fileName + \".txt\"));\n                in = new InputReader(new FileInputStream(new File(in_fileName + \".txt\")));\n                w = new PrintWriter(new FileWriter(out_fileName + \".txt\"));\n            } else {\n                //in = new Scanner(System.in);\n                in = new InputReader(System.in);\n                w = new PrintWriter(System.out);\n            }\n\n            solve(in, w);\n            w.close();\n        }\n    }\n\n    public void run() {\n        try {\n            init();\n        }\n        catch(Exception e) {\n            System.out.println(e);\n            e.printStackTrace();\n        }\n    }\n\n    public static void main(String args[]) throws Exception {\n        new Thread(null, new Sol(),\"Sol\",1<<28).start();\n    }\n\n    static class InputReader {\n\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private SpaceCharFilter filter;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int read() {\n            if (numChars == -1) {\n                throw new InputMismatchException();\n            }\n\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n\n                if (numChars <= 0) {\n                    return -1;\n                }\n            }\n            return buf[curChar++];\n        }\n\n        public String nextLine() {\n            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n            String str = \"\";\n            try {\n                str = br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n\n        public int nextInt() {\n            int c = read();\n\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n\n            int sgn = 1;\n\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n\n            int res = 0;\n            do {\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n\n            return res * sgn;\n        }\n\n        public long nextLong() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            long res = 0;\n\n            do {\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public double nextDouble() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            double res = 0;\n            while (!isSpaceChar(c) && c != '.') {\n                if (c == 'e' || c == 'E') {\n                    return res * Math.pow(10, nextInt());\n                }\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            if (c == '.') {\n                c = read();\n                double m = 1;\n                while (!isSpaceChar(c)) {\n                    if (c == 'e' || c == 'E') {\n                        return res * Math.pow(10, nextInt());\n                    }\n                    if (c < '0' || c > '9') {\n                        throw new InputMismatchException();\n                    }\n                    m /= 10;\n                    res += (c - '0') * m;\n                    c = read();\n                }\n            }\n            return res * sgn;\n        }\n\n        public String readString() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            StringBuilder res = new StringBuilder();\n            do {\n                res.appendCodePoint(c);\n                c = read();\n            } while (!isSpaceChar(c));\n\n            return res.toString();\n        }\n\n        public boolean isSpaceChar(int c) {\n            if (filter != null) {\n                return filter.isSpaceChar(c);\n            }\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        public String next() {\n            return readString();\n        }\n\n        public interface SpaceCharFilter {\n\n            public boolean isSpaceChar(int ch);\n        }\n    }\n}"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na, b = [], []\nfor i in range(n):\n    a.append( input() )\nfor i in range(n):\n    b.append( input() )\n\nfor i in a:\n    try:\n        b.pop(b.index(i))\n    except Exception as e:\n        pass\n\nprint(len(b))\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, i, j, k, a = 0, b;\n  cin >> n;\n  map<string, int> m1, m2;\n  string s;\n  for (i = 0; i < n; i++) {\n    cin >> s;\n    m1[s]++;\n  }\n  for (i = 0; i < n; i++) {\n    cin >> s;\n    m2[s]++;\n  }\n  map<string, int>::iterator it, it1;\n  for (it1 = m2.begin(); it1 != m2.end(); it1++) {\n    if (m1.find(it1->first) != m1.end()) {\n      it = m1.find(it1->first);\n      if (it1->second > it->second) a += it1->second - it->second;\n    } else\n      a += it1->second;\n  }\n  cout << a;\n}\n"
        },
        {
            "language": 4,
            "solution": "  var n = parseInt(readline());\n  var a = [];\n  var b = [];\n  var t = [];\n  var tt = [];\n  tt['XXXL'] = 0;\n  tt['XXL'] = 0;\n  tt['XL'] = 0;\n  tt['L'] = 0;\n  tt['M'] = 0;\n  tt['XXXS'] = 0;\n  tt['XXS'] = 0;\n  tt['XS'] = 0;\n  tt['S'] = 0;\n\n  t['XXXL'] = 0;\n  t['XXL'] = 0;\n  t['XL'] = 0;\n  t['L'] = 0;\n  t['M'] = 0;\n  t['XXXS'] = 0;\n  t['XXS'] = 0;\n  t['XS'] = 0;\n  t['S'] = 0;\n\n  for(var i = 0; i < n; i += 1) {\n    a[i] = readline();\n    if(t[a[i]] === undefined) {\n      t[a[i]] = 1;\n    } else {\n      t[a[i]] += 1;\n    }\n  }\n  for(var i = 0; i < n; i += 1) {\n    b[i] = readline();\n    if(tt[b[i]] === undefined) {\n      tt[b[i]] = 1;\n    } else {\n      tt[b[i]] += 1;\n    }\n  }\n  var res = 0;\n  res += Math.abs(tt['XXXL'] - t['XXXL']);\n  res += Math.abs(tt['XXL'] - t['XXL']);\n  res += Math.abs(tt['XL'] - t['XL']);\n  var m = (tt['M'] - t['M']);\n  var s =  (tt['S'] - t['S']);\n  var l = (tt['L'] - t['L']);\n  res += m > 0 ? m : 0;\n  res += s > 0 ? s : 0;\n  res += l > 0 ? l : 0;\n  \n\n  print(res);"
        },
        {
            "language": 1,
            "solution": "from collections import defaultdict\nimport sys\n\ndef _read():\n    return sys.stdin.readline().strip()\n\ndef solve():\n    groups = (\n        ('S', 'M', 'L'),\n        ('XS', 'XM', 'XL'),\n        ('XXS', 'XXM', 'XXL'),\n        ('XXXS', 'XXXM', 'XXXL')\n    )\n\n    n = int(_read())\n    last_year = defaultdict(int)\n    this_year = defaultdict(int)\n\n    for i in range(n):\n        last_year[_read()] += 1\n\n    for i in range(n):\n        this_year[_read()] += 1\n\n    ans = 0\n    for letters in groups:\n        changes = 0\n        for letter in letters:\n            changes += abs(last_year[letter] - this_year[letter])\n\n        ans += (changes/2)\n\n    print ans\n\nsolve()\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 100010;\nconst int big = 2e9;\nint n, ans;\nstring s;\nmap<string, int> mem;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cin >> n;\n  ans = 0;\n  for (int i = 1; i <= n; i++) {\n    cin >> s;\n    mem[s]++;\n  }\n  for (int i = 1; i <= n; i++) {\n    cin >> s;\n    if (mem[s] == 0)\n      ans++;\n    else\n      mem[s]--;\n  }\n  cout << ans;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nfrom collections import Counter\na, b = [], []\nfor _ in range(n):\n\ta.append(input().strip())\nfor _ in range(n):\n\tb.append(input().strip())\n\na = Counter(a)\nb = Counter(b)\n\ncnt = 0\nfor x, c in a.items():\n\tif x not in b:\n\t\tcnt += c\n\telse:\n\t\tcnt += c - min(c, b[x])\n\nprint(cnt)"
        },
        {
            "language": 3,
            "solution": "# A. Codehorses T-shirts\n# Sended Three times :S\nn = [0]*int(input())\npastyear = [*(input() for _ in n)]\n# count ocurrences :\nfor i in range(len(n)):\n    tmp = input()\n    if tmp in pastyear:\n        pastyear.remove(tmp)\nprint(len(pastyear))\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\nimport static java.lang.Math.*;\npublic class Main\n{\n    static MyScanner scan;\n    static PrintWriter pw;\n    public static void main(String[] args) {\n        new Thread(null,null,\"_\",1<<25)\n        {\n            public void run()\n            {\n                try\n                {\n                    solve();\n                }\n                catch(Exception e)\n                {\n                    e.printStackTrace();\n                    System.exit(1);\n                }\n            }\n        }.start();\n    }\n    static void solve() throws IOException {\n        scan = new MyScanner();\n        pw = new PrintWriter(System.out, true);\n        StringBuilder sb = new StringBuilder();\n        Map<String,Integer> map = new HashMap<>();\n        map.put(\"M\",0);\n        map.put(\"L\",1);\n        map.put(\"S\",2);\n        map.put(\"XL\",3);\n        map.put(\"XS\",4);\n        map.put(\"XXL\",5);\n        map.put(\"XXS\",6);\n        map.put(\"XXXL\",7);\n        map.put(\"XXXS\",8);\n        int freqa[] = new int[9];\n        int freqb[] = new int[9];\n        int n = ni();\n        for(int i=0;i<n;++i)\n            ++freqa[map.get(ne())];\n        for(int i=0;i<n;++i)\n            ++freqb[map.get(ne())];\n        for(int i=0;i<9;++i)\n        {\n            int xx = min(freqa[i],freqb[i]);\n            freqa[i]-=xx;\n            freqb[i]-=xx;\n        }\n        long res = 0;\n        for(int i=0;i<9;++i)\n            res+=freqa[i]+freqb[i];\n        pl(res/2);\n        pw.flush();\n        pw.close();\n    }\n    static long MMI(long A,long MOD)\n    {\n        return modpow(A,MOD-2,MOD);\n    }\n    static long modpow(long x,long y,long MOD)\n    {\n        if(y==0)\n            return 1;\n        if((y&1)==0)\n            return modpow((x*x)%MOD,y>>1,MOD);\n        else return (x*modpow(x,y-1,MOD))%MOD;\n    }\n    static class Pair implements Comparable<Pair>\n    {\n        int x,y;\n        Pair(int x,int y)\n        {\n            this.x=x;\n            this.y=y;\n        }\n        public int compareTo(Pair other)\n        {\n            if(this.x!=other.x)\n                return this.x-other.x;\n            return this.y-other.y;\n        }\n        public String toString()\n        {\n            return \"{\"+x+\",\"+y+\"}\";\n        }\n    }\n    static int ni() throws IOException\n    {\n        return scan.nextInt();\n    }\n    static long nl() throws IOException\n    {\n        return scan.nextLong();\n    }\n    static double nd() throws IOException\n    {\n        return scan.nextDouble();\n    }\n    static String ne() throws IOException\n    {\n        return scan.next();\n    }\n    static String nel() throws IOException\n    {\n        return scan.nextLine();\n    }\n    static void pl()\n    {\n        pw.println();\n    }\n    static void p(Object o)\n    {\n        pw.print(o+\" \");\n    }\n    static void pl(Object o)\n    {\n        pw.println(o);\n    }\n    static void psb(StringBuilder sb)\n    {\n        pw.print(sb);\n    }\n    static class MyScanner\n    {\n        BufferedReader br;\n        StringTokenizer st;\n        MyScanner()\n        {\n            br = new BufferedReader(new InputStreamReader(System.in));\n        }\n        String nextLine()throws IOException\n        {\n            return br.readLine();\n        }\n        String next() throws IOException\n        {\n            if(st==null || !st.hasMoreTokens())\n                st = new StringTokenizer(br.readLine());\n            return st.nextToken();\n        }\n        int nextInt() throws IOException\n        {\n            return Integer.parseInt(next());\n        }\n        long nextLong() throws IOException\n        {\n            return Long.parseLong(next());\n        }\n        double nextDouble() throws IOException\n        {\n            return Double.parseDouble(next());\n        }\n    }\n}"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[]\nb=[]\nfor j in range(n):\n    a+=[input()]\nfor j in range(n):\n    i=input()\n    if i in a:\n        a.remove(i)\n    else:\n        b+=[i]\nprint(len(b))"
        }
    ]
}