{
    "name": "155_A. I_love_%username%",
    "source": "CODEFORCES",
    "description": "Vasya adores sport programming. He can't write programs but he loves to watch the contests' progress. Vasya even has a favorite coder and Vasya pays special attention to him.\n\nOne day Vasya decided to collect the results of all contests where his favorite coder participated and track the progress of his coolness. For each contest where this coder participated, he wrote out a single non-negative number \u2014 the number of points his favorite coder earned in the contest. Vasya wrote out the points for the contest in the order, in which the contests run (naturally, no two contests ran simultaneously).\n\nVasya considers a coder's performance in a contest amazing in two situations: he can break either his best or his worst performance record. First, it is amazing if during the contest the coder earns strictly more points that he earned on each past contest. Second, it is amazing if during the contest the coder earns strictly less points that he earned on each past contest. A coder's first contest isn't considered amazing. Now he wants to count the number of amazing performances the coder had throughout his whole history of participating in contests. But the list of earned points turned out long and Vasya can't code... That's why he asks you to help him.\n\nInput\n\nThe first line contains the single integer n (1 \u2264 n \u2264 1000) \u2014 the number of contests where the coder participated.\n\nThe next line contains n space-separated non-negative integer numbers \u2014 they are the points which the coder has earned. The points are given in the chronological order. All points do not exceed 10000.\n\nOutput\n\nPrint the single number \u2014 the number of amazing performances the coder has had during his whole history of participating in the contests.\n\nExamples\n\nInput\n\n5\n100 50 200 150 200\n\n\nOutput\n\n2\n\n\nInput\n\n10\n4664 6496 5814 7010 5762 5736 6944 4850 3698 7242\n\n\nOutput\n\n4\n\nNote\n\nIn the first sample the performances number 2 and 3 are amazing.\n\nIn the second sample the performances number 2, 4, 9 and 10 are amazing.",
    "difficulty": "A",
    "tags": [
        "brute force"
    ],
    "rating": 800,
    "public_test": [
        {
            "input": "10\n4664 6496 5814 7010 5762 5736 6944 4850 3698 7242\n",
            "output": "4\n"
        },
        {
            "input": "5\n100 50 200 150 200\n",
            "output": "2\n"
        }
    ],
    "generated_test": [
        {
            "input": "5\n100 65 53 7 81\n",
            "output": "3\n"
        },
        {
            "input": "5\n100 81 53 36 12\n",
            "output": "4\n"
        },
        {
            "input": "33\n1097 1132 1091 1104 1049 1038 1023 1080 1104 1029 1035 1061 1049 1060 1088 1106 1105 1087 1063 849 1054 1103 1047 1041 1028 1120 1126 1063 1117 1110 1044 1093 1101\n",
            "output": "6\n"
        },
        {
            "input": "34\n821 5536 2491 6074 7216 9885 764 1603 778 8736 8987 771 617 1587 8943 11806 439 7367 4115 8886 7878 6899 8811 5752 3184 3401 9760 9400 8995 4681 1323 6637 6554 6498\n",
            "output": "8\n"
        },
        {
            "input": "10\n1952 1862 306 1746 1675 1627 1488 1390 1324 1137\n",
            "output": "2\n"
        },
        {
            "input": "2\n10 13\n",
            "output": "1\n"
        },
        {
            "input": "1\n-1\n",
            "output": "0\n"
        },
        {
            "input": "100\n158 159 157 156 155 154 160 153 161 152 162 163 151 164 150 165 149 148 147 166 146 167 145 144 143 142 168 141 169 170 140 139 138 137 171 136 135 134 172 173 174 133 175 132 177 178 131 179 180 25 129 181 128 127 182 126 183 125 124 184 123 122 121 120 119 118 117 185 186 187 188 189 116 190 115 191 192 193 114 113 112 111 110 109 108 194 195 107 106 105 196 197 104 198 199 103 102 200 101 100\n",
            "output": "69\n"
        },
        {
            "input": "100\n9999 9999 9999 9998 9998 9998 9997 9996 9996 9995 9993 9993 9991 9990 9989 9986 9984 9984 9983 9981 9981 10079 9980 9980 9979 9977 9977 9977 9977 9977 9976 9976 9975 9975 9973 9972 9972 9972 9972 9971 9969 9969 9969 9968 9967 9965 9962 9962 9962 9962 9960 9958 9958 9955 9954 9954 9954 9954 9950 9949 9949 9947 9943 9943 9940 9940 9939 9937 9937 9937 9936 9935 9932 9932 9931 9929 9927 9927 9926 9923 9919 9919 9918 9918 9918 9917 9917 9916 9916 9915 9914 9911 9910 9907 9907 9906 9905 9905 9904 9901\n",
            "output": "58\n"
        },
        {
            "input": "68\n6764 6877 8079 6768 6839 6755 6726 6778 6699 6805 6777 6985 6821 6801 6791 6805 6940 6761 6677 6999 6911 6699 6959 6933 6903 6843 6972 6717 6997 6756 6789 6668 6735 6852 6735 6880 6723 6834 6810 6694 6780 6679 6698 6857 6826 6896 6979 6968 6957 6988 6960 6700 6919 6892 6984 6685 6813 6678 6715 6857 6976 6902 6780 6686 6777 6686 6842 6679\n",
            "output": "7\n"
        },
        {
            "input": "60\n9000 9014 9034 9081 9131 9162 9174 9199 9202 9220 9221 9223 9229 9235 9251 9260 9268 9269 9270 9298 9307 9309 9313 9323 9386 9399 9407 9495 9497 9529 9531 9544 9614 817 9627 9627 9643 9654 9656 9657 9685 9699 9701 9736 9745 9758 9799 9827 9843 9845 9854 9854 9885 9891 9896 9913 9942 9963 9986 9992\n",
            "output": "57\n"
        },
        {
            "input": "10\n4664 6496 5814 7010 5762 5736 7227 4850 3698 7242\n",
            "output": "5\n"
        },
        {
            "input": "100\n158 159 157 156 155 154 160 153 161 152 162 163 151 164 150 165 149 148 147 166 146 167 145 144 143 142 168 141 213 170 140 139 138 137 171 136 135 134 172 173 174 133 175 132 177 178 131 179 180 25 129 181 128 127 182 126 183 125 124 184 123 122 121 120 119 118 117 185 186 187 188 189 116 190 115 191 192 193 114 113 112 111 110 109 108 194 195 107 106 105 196 197 104 198 199 103 102 200 101 100\n",
            "output": "39\n"
        },
        {
            "input": "100\n9999 9999 9999 9998 9998 9998 9997 9996 9996 9995 9993 9993 9991 9990 9989 9986 9984 9984 9983 9981 9981 10079 9980 9980 9979 9977 9977 9977 9977 9977 9976 9976 9975 9975 9973 9972 9972 9972 9972 9971 9969 9969 9969 9968 9967 9965 9962 9962 9962 9962 9960 9958 9958 9955 9954 9954 9954 9954 9950 9949 9949 9947 9943 9943 9940 9940 9939 9937 9937 9937 9936 9935 9932 9932 9931 9929 402 9927 9926 9923 9919 9919 9918 9918 9918 9917 9917 9916 9916 9915 9914 9911 9910 9907 9907 9906 9905 9905 9904 9901\n",
            "output": "43\n"
        },
        {
            "input": "60\n9000 9014 9034 9081 9131 9162 9174 9199 9202 9220 9221 9223 9229 9235 9251 9260 9268 9269 9270 9298 9307 9309 9313 9323 9386 9399 9407 9495 9497 9529 9531 9544 9614 817 9627 9627 9643 9294 9656 9657 9685 9699 9701 9736 9745 9758 9799 9827 9843 9845 9854 9854 9885 9891 9896 9913 9942 9963 9986 9992\n",
            "output": "56\n"
        },
        {
            "input": "100\n158 159 157 156 155 154 160 153 161 152 162 163 151 267 150 165 149 148 147 166 146 167 145 144 143 142 168 141 213 170 140 139 138 137 171 136 135 134 172 173 174 133 175 132 177 178 131 179 180 25 129 181 128 127 182 126 183 125 124 184 123 122 121 120 119 118 117 185 186 187 188 189 116 190 115 191 192 193 114 113 112 111 110 109 108 194 195 107 106 105 196 197 104 198 199 103 102 200 101 100\n",
            "output": "34\n"
        },
        {
            "input": "60\n9000 9014 9034 9081 9131 9162 9174 9199 9202 9220 9221 9223 9229 9235 9251 9260 9268 9269 9270 9298 9307 9309 9313 9323 9386 9399 9407 9495 9497 9529 9531 9544 9614 817 9627 9627 9643 9294 9656 9657 9685 9699 9701 9736 9745 9758 9799 9827 9843 9845 12626 9854 9885 9891 9896 9913 9942 9963 9986 9992\n",
            "output": "48\n"
        },
        {
            "input": "10\n8 6 3 4 14 10 7 7 1 3\n",
            "output": "4\n"
        },
        {
            "input": "2\n9 5\n",
            "output": "1\n"
        },
        {
            "input": "1\n-2\n",
            "output": "0\n"
        },
        {
            "input": "2\n2 0\n",
            "output": "1\n"
        },
        {
            "input": "10\n3237 1675 1488 1390 1812 1137 1746 1324 1952 1862\n",
            "output": "4\n"
        },
        {
            "input": "25\n1448 4549 2310 2725 1252 3509 1565 2475 2232 3989 4231 779 2967 2702 608 3739 721 1552 2767 530 3114 665 1940 48 4198\n",
            "output": "6\n"
        },
        {
            "input": "10\n1 3 3 4 6 7 7 7 9 10\n",
            "output": "6\n"
        },
        {
            "input": "5\n7 36 53 151 100\n",
            "output": "3\n"
        },
        {
            "input": "100\n7 61 12 52 41 16 34 99 30 44 48 89 31 54 21 1 48 52 61 15 35 87 21 76 64 92 44 81 16 93 84 92 32 15 68 76 53 39 26 4 11 26 7 4 99 99 61 65 55 85 65 116 47 39 2 74 63 49 98 87 5 94 22 30 25 42 31 84 49 23 89 60 16 26 92 27 9 57 75 61 94 35 83 47 99 100 63 24 91 88 79 10 15 45 22 64 3 11 89 83\n",
            "output": "4\n"
        },
        {
            "input": "5\n100 50 200 294 200\n",
            "output": "3\n"
        },
        {
            "input": "5\n110 65 53 7 81\n",
            "output": "3\n"
        },
        {
            "input": "5\n100 81 42 36 12\n",
            "output": "4\n"
        },
        {
            "input": "10\n8 6 1 4 14 10 7 7 1 3\n",
            "output": "3\n"
        },
        {
            "input": "33\n1097 1132 1091 1104 1049 1038 1023 1080 1104 1029 1035 1061 1049 1060 1088 1106 1105 1087 1063 849 1054 1103 1047 1041 1028 884 1126 1063 1117 1110 1044 1093 1101\n",
            "output": "6\n"
        },
        {
            "input": "34\n821 5536 2491 4125 7216 9885 764 1603 778 8736 8987 771 617 1587 8943 11806 439 7367 4115 8886 7878 6899 8811 5752 3184 3401 9760 9400 8995 4681 1323 6637 6554 6498\n",
            "output": "7\n"
        },
        {
            "input": "10\n1952 1862 306 1746 1675 1627 1488 401 1324 1137\n",
            "output": "2\n"
        },
        {
            "input": "2\n14 13\n",
            "output": "1\n"
        },
        {
            "input": "2\n9 4\n",
            "output": "1\n"
        },
        {
            "input": "1\n1\n",
            "output": "0\n"
        },
        {
            "input": "1\n-3\n",
            "output": "0\n"
        },
        {
            "input": "2\n3 0\n",
            "output": "1\n"
        },
        {
            "input": "10\n3237 1675 1488 1390 3370 1137 1746 1324 1952 1862\n",
            "output": "5\n"
        },
        {
            "input": "25\n1448 4549 2310 2725 1252 3509 1565 2475 2232 3989 4231 779 2967 2702 608 3739 721 1552 1770 530 3114 665 1940 48 4198\n",
            "output": "6\n"
        },
        {
            "input": "10\n1 3 3 4 6 7 10 7 9 10\n",
            "output": "5\n"
        },
        {
            "input": "5\n7 36 53 23 100\n",
            "output": "3\n"
        },
        {
            "input": "100\n7 61 12 52 41 16 34 99 30 44 48 89 31 54 21 1 48 52 61 15 35 87 21 76 64 92 44 81 16 93 84 92 32 15 68 76 53 39 26 4 11 26 7 4 99 99 61 65 55 85 65 116 47 39 2 74 63 49 98 87 5 94 22 30 25 42 31 84 49 23 89 60 16 26 92 27 9 57 75 61 94 35 83 47 99 110 63 24 91 88 79 10 15 45 22 64 3 11 89 83\n",
            "output": "4\n"
        },
        {
            "input": "68\n6764 6877 8079 6768 6839 6755 6726 6778 6699 6805 6777 6985 6821 1122 6791 6805 6940 6761 6677 6999 6911 6699 6959 6933 6903 6843 6972 6717 6997 6756 6789 6668 6735 6852 6735 6880 6723 6834 6810 6694 6780 6679 6698 6857 6826 6896 6979 6968 6957 6988 6960 6700 6919 6892 6984 6685 6813 6678 6715 6857 6976 6902 6780 6686 6777 6686 6842 6679\n",
            "output": "6\n"
        },
        {
            "input": "10\n4664 6496 5814 7010 5762 5736 8965 4850 3698 7242\n",
            "output": "4\n"
        },
        {
            "input": "5\n100 50 200 320 200\n",
            "output": "3\n"
        },
        {
            "input": "5\n110 24 53 7 81\n",
            "output": "2\n"
        },
        {
            "input": "5\n100 81 32 36 12\n",
            "output": "3\n"
        },
        {
            "input": "10\n8 6 1 4 14 10 0 7 1 3\n",
            "output": "4\n"
        },
        {
            "input": "33\n1097 1132 1091 1104 1049 1038 1023 1080 1104 1029 1035 1061 1049 1060 1088 1106 1105 1087 1063 849 1054 1103 1047 1041 1028 884 1126 1063 1117 1110 1044 1093 0101\n",
            "output": "7\n"
        },
        {
            "input": "34\n821 5536 2491 4125 7216 9885 764 1603 778 8736 8987 771 617 1587 8943 11806 439 10468 4115 8886 7878 6899 8811 5752 3184 3401 9760 9400 8995 4681 1323 6637 6554 6498\n",
            "output": "7\n"
        },
        {
            "input": "10\n1952 1862 306 2169 1675 1627 1488 401 1324 1137\n",
            "output": "3\n"
        },
        {
            "input": "2\n6 13\n",
            "output": "1\n"
        },
        {
            "input": "2\n9 3\n",
            "output": "1\n"
        },
        {
            "input": "1\n-4\n",
            "output": "0\n"
        },
        {
            "input": "1\n2\n",
            "output": "0\n"
        },
        {
            "input": "2\n3 1\n",
            "output": "1\n"
        },
        {
            "input": "10\n3237 1675 1488 1390 3370 1137 1746 1110 1952 1862\n",
            "output": "6\n"
        },
        {
            "input": "25\n1448 4549 0 2725 1252 3509 1565 2475 2232 3989 4231 779 2967 2702 608 3739 721 1552 1770 530 3114 665 1940 48 4198\n",
            "output": "2\n"
        },
        {
            "input": "10\n1 3 3 4 6 7 3 7 9 10\n",
            "output": "6\n"
        },
        {
            "input": "100\n9999 9999 9999 9998 9998 9998 9997 9996 9996 9995 9993 9993 9991 9990 9989 9986 9984 9984 9983 9981 9981 10079 9980 9980 9979 9977 9977 9977 9977 9977 9976 9976 9975 9975 9973 9972 9972 9972 9972 9971 9969 9969 9969 9968 9967 9965 9962 9962 9962 9962 16826 9958 9958 9955 9954 9954 9954 9954 9950 9949 9949 9947 9943 9943 9940 9940 9939 9937 9937 9937 9936 9935 9932 9932 9931 9929 402 9927 9926 9923 9919 9919 9918 9918 9918 9917 9917 9916 9916 9915 9914 9911 9910 9907 9907 9906 9905 9905 9904 9901\n",
            "output": "43\n"
        },
        {
            "input": "5\n13 36 53 23 100\n",
            "output": "3\n"
        },
        {
            "input": "100\n7 61 12 52 41 16 34 99 30 44 48 89 31 54 21 1 48 52 61 15 35 87 21 76 64 92 44 81 16 93 84 92 32 15 68 76 53 39 26 4 11 32 7 4 99 99 61 65 55 85 65 116 47 39 2 74 63 49 98 87 5 94 22 30 25 42 31 84 49 23 89 60 16 26 92 27 9 57 75 61 94 35 83 47 99 110 63 24 91 88 79 10 15 45 22 64 3 11 89 83\n",
            "output": "4\n"
        },
        {
            "input": "68\n6764 6877 8079 6768 6839 6755 6726 6778 6699 10388 6777 6985 6821 1122 6791 6805 6940 6761 6677 6999 6911 6699 6959 6933 6903 6843 6972 6717 6997 6756 6789 6668 6735 6852 6735 6880 6723 6834 6810 6694 6780 6679 6698 6857 6826 6896 6979 6968 6957 6988 6960 6700 6919 6892 6984 6685 6813 6678 6715 6857 6976 6902 6780 6686 6777 6686 6842 6679\n",
            "output": "7\n"
        },
        {
            "input": "10\n4664 6496 5814 7010 5762 5736 8965 4850 4153 7242\n",
            "output": "4\n"
        },
        {
            "input": "5\n110 24 53 14 81\n",
            "output": "2\n"
        },
        {
            "input": "5\n101 81 32 36 12\n",
            "output": "3\n"
        },
        {
            "input": "10\n8 6 1 4 14 7 0 7 1 3\n",
            "output": "4\n"
        },
        {
            "input": "33\n1097 1132 1091 1104 1049 1038 1023 1080 1104 1029 1035 1061 1049 1060 1088 1106 1105 1087 1063 849 1054 1103 1047 1041 1028 1240 1126 1063 1117 1110 1044 1093 0101\n",
            "output": "8\n"
        },
        {
            "input": "34\n821 5536 1522 4125 7216 9885 764 1603 778 8736 8987 771 617 1587 8943 11806 439 10468 4115 8886 7878 6899 8811 5752 3184 3401 9760 9400 8995 4681 1323 6637 6554 6498\n",
            "output": "7\n"
        },
        {
            "input": "10\n1952 1862 306 3207 1675 1627 1488 401 1324 1137\n",
            "output": "3\n"
        },
        {
            "input": "2\n10 0\n",
            "output": "1\n"
        },
        {
            "input": "2\n9 6\n",
            "output": "1\n"
        },
        {
            "input": "1\n-8\n",
            "output": "0\n"
        },
        {
            "input": "1\n3\n",
            "output": "0\n"
        }
    ],
    "solution": [
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nc=[]\nd=0\nc.append(a[0])\nfor i in range(1,n):\n    y=a[i]-a[i-1]\n    if y>0 and a[i]>max(c):\n        c.append(a[i])\n        d+=1\n    elif y<0 and a[i]<min(c):\n        c.append(a[i])\n        d+=1\nprint(d)\n#print(c)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\n\ns = 0\nmax_a = a[0]\nmin_a = a[0]\nfor i in a:\n    if i > max_a or i < min_a:\n        s += 1\n        if i > max_a:\n            max_a = i\n        if i < min_a:\n            min_a = i\n\nprint(s)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nnlist=[int(i) for i in input().split()]\nresult=0\nfor i in range(n):\n    if i==0:\n        continue\n    else:\n        large=0\n        small=0\n        for j in range(i):\n            \n            if nlist[i]>nlist[j]:\n                large+=1\n            elif nlist[i]<nlist[j]:\n                small+=1\n\n        if (i!=0) and (large==i or small==i):\n            result+=1\n \nprint(result)\n                \n    \n        \n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint main() {\n  int n, cnt = 0;\n  scanf(\"%d\", &n);\n  int a[n];\n  for (int i = 0; i < n; i++) {\n    scanf(\"%d\", &a[i]);\n  }\n  int maxx = a[0];\n  int minn = a[0];\n  for (int i = 0; i < n; i++) {\n    if (a[i] > maxx) {\n      maxx = a[i];\n      cnt++;\n    }\n    if (a[i] < minn) {\n      minn = a[i];\n      cnt++;\n    }\n  }\n  printf(\"%d\\n\", cnt);\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\ns = [int(i) for i in input().split()]\nc = s[0]\nd = s[0]\nr = 0\n\nfor i in range(1,n):\n\tif s[i]>c:\n\t\tc = s[i]\n\t\tr+=1\n\telif s[i]<d:\n\t\td = s[i]\n\t\tr+=1\n\n\nprint(r)"
        },
        {
            "language": 3,
            "solution": "x=int(input())\ny=list(map(int,input().split()))\nh=y[0]\nl=y[0]\nf=0\nfor n in range(1,x):\n    if y[n]>h:\n        h=y[n]\n        f=f+1\n    elif y[n]<l:\n        l=y[n]\n        f=f+1\n    else:\n        f=f\nprint(f)        \n        "
        },
        {
            "language": 3,
            "solution": "n=int(input())\nline=input().split()\nnums=[]\nfor i in range(n):\n    nums.append(int(line[i]))\ni=1\nsums=0\nwhile i <n:\n    if nums[i]<min(nums[:i]) or nums[i]>max(nums[:i]):\n        sums+=1\n        i+=1\n    else:\n        i+=1\nprint(sums)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nscore = [int(x) for x in input().split()]\nworst = score[0]\nbest = score[0]\ncount = 0\nfor i in range(1, n):\n    if(score[i] > best): \n        count += 1\n        best = score[i]\n        \n    elif(score[i] < worst):\n        count += 1\n        worst = score[i]\nprint(count)\n    "
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nmaxx=l[0]\nminn=l[0]\nans=0\nfor i in range(1,n):\n    if l[i]> maxx:\n        maxx=l[i]\n        ans+=1\n    elif l[i]<minn:\n        minn=l[i]\n        ans+=1\nprint(ans)\n        "
        },
        {
            "language": 3,
            "solution": "n = int(input())\nh = list(map(int, input().split()))\nif n == 1:\n    print(0)\n    quit()\nif h[0] == h[1]:\n    a = 0\nelse:\n    a = 1\nb = max(h[0], h[1])\nw = min(h[0], h[1])\nfor i in range(2, n):\n    if h[i] > b:\n        a += 1\n        b = h[i]\n        continue\n    if h[i] < w:\n        a += 1\n        w = h[i]\nprint(a)\n\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nlis=list(int(i) for i in input().split())\nmin_n,max_n=lis[0],lis[0]\ncount=0\nfor i in lis:\n    if i>max_n:\n        count+=1\n        max_n=i\n    if i<min_n:\n        count+=1\n        min_n=i\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = [int(x) for x in input().split()]\ns = 0\nfor i in range(1,n):\n    if l[i] > max(l[:i]) or l[i] < min(l[:i]):\n        s += 1\nprint(s)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nscores = list(map(int, input().split()))\nminscore = scores[0]\nmaxscore = minscore\nret = 0\n\nfor i in range(1, n):\n    if scores[i] > maxscore:\n        ret += 1\n        maxscore = scores[i]\n    elif scores[i] < minscore:\n        ret += 1\n        minscore = scores[i]\n\nprint(ret)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nscores=[int(i) for i in input().split()]\nmin=scores[0]\nmax=scores[0]\ncont=0\nfor i in range(1, n):\n    if scores[i] > max:\n        max = scores[i]\n        cont+=1\n    if scores[i] < min:\n        min = scores[i]\n        cont+=1\nprint(cont)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nlistT = list(map(int, input().split()))\ni = k = 1\nma = mi = listT[0]\nwhile i < n:\n    if listT[i] > ma:\n        ma = listT[i]\n        k += 1\n    if listT[i] < mi:\n        mi = listT[i]\n        k += 1\n    i += 1\nprint(k - 1)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = []\ncount = 0\npoint = [int(x) for x in input().split()]\nl.append(point[0])\nfor i in range(1,n):\n    if point[i] > max(l) or point[i] < min(l):\n        count += 1\n    l.append(point[i])\nprint(count)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\narr = list(map(int, input().split()))\nmaxi = arr[0]\nmini = arr[0]\ncount = 0\nfor i in arr:\n    if i > maxi:\n        count += 1\n        maxi = i\n    elif i < mini:\n        count += 1\n        mini = i\nprint(count)"
        },
        {
            "language": 3,
            "solution": "t = int(input())\npoints = list(map(int, input().split(' ')))\nminValue, maxValue = points[0], points[0]\nans = 0\nfor i in range(1, len(points)):\n    if maxValue < points[i]:\n        maxValue = points[i]\n        ans += 1\n    if points[i] < minValue:\n        minValue = points[i]\n        ans += 1\nprint(ans)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nma=l[0]\nmi=l[0]\nc=0\nfor i in range(1,n):\n    if(l[i]>ma):\n        ma=l[i]\n        c=c+1\n    if(l[i]<mi):\n        mi=l[i]\n        c=c+1\nprint(c)        \n    \n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, maxscore, minscore;\nint main() {\n  cin >> n;\n  cin >> maxscore;\n  minscore = maxscore;\n  int ans = 0;\n  for (int i = 1; i < n; i++) {\n    int score;\n    cin >> score;\n    if (score > maxscore || score < minscore) {\n      ans++;\n      maxscore = max(maxscore, score);\n      minscore = min(minscore, score);\n    }\n  }\n  cout << ans << \"\\n\";\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nr=list(map(int,input().split()))\nma,mi=r[0],r[0]\nama=0\nfor i in range(1,n):\n    if r[i]>ma or r[i]<mi:\n        ama+=1\n        ma,mi=max(r[i],ma),min(r[i],mi)\nprint(ama)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[int(x) for x in input().split()]\nmax_a=a[0]\nmin_a=a[0]\nk=0\nfor i in range(1,n):\n    if a[i]>max_a:\n        k+=1\n        max_a=a[i]\n    if a[i]<min_a:\n        k+=1\n        min_a=a[i]\nprint(k)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nanswer = 0\na = list(map(int, input().split()))\nfor i in range(n):\n    try:\n        if a[i] > max(a[:i]) or a[i] < min(a[:i]):\n            answer += 1\n    except:\n        continue\n\nprint(answer)\n"
        },
        {
            "language": 1,
            "solution": "import sys\n\ndef readints() :\n    l = sys.stdin.readline()\n    return map(int, l.split(' '))\n\ndef readstring() :\n    l = sys.stdin.readline()[:-1]\n    return l\n\ndef readint() :\n    l = sys.stdin.readline()\n    return int(l)\n\ndef clearchars(s, chars) :\n    for c in chars :\n        s = s.replace(c, '')\n    return s\n\ndef gcd(a, b) :\n    if (a < b ) :\n        a, b = b, a\n    if b == 0 :\n        return a\n    return gcd(b, a % b)\n\nn = readint()\nb = readints()\n\nminb = b[0]\nmaxb = b[0]\nc = 0\n\nfor x in b :\n    if x < minb :\n        c += 1\n        minb = x\n    if x > maxb :\n        c += 1\n        maxb = x\n\nprint c\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nmax=min=a[0]\ncnt=0\nfor i in range(1,n):\n    if a[i]>max:\n        cnt+=1\n        max=a[i]\n    if a[i]<min:\n        cnt+=1\n        min=a[i]\nprint(cnt)"
        },
        {
            "language": 3,
            "solution": "x=int(input())\nresults=[int(i) for i in input().split()]\nmas=[results[0]]\nwow=0\nfor i in range(1,len(results)):\n    if results[i]> max(mas):\n        wow+=1\n    elif results[i]< min(mas):\n        wow+=1\n    mas.append(results[i])\nprint(wow)"
        },
        {
            "language": 3,
            "solution": "num = int(input())\ngrades = list(map(int, input().split()))\nming = 0\nmaxg = 0\namazing = 0\n\n\nif len(grades) > 1:\n    if grades[1] > grades[0]:\n        maxg = grades[1]\n        ming = grades[0]\n        amazing += 1\n        del grades[1]\n        del grades[0]\n    elif grades[1] < grades[0]:\n        ming = grades[1]\n        maxg = grades[0]\n        amazing += 1\n        del grades[1]\n        del grades[0]\n    else:\n        ming = grades[0]\n        maxg = grades[0]\n        del grades[1]\n        del grades[0]\n\n    for x in range(len(grades)):\n        if maxg < grades[x]:\n            maxg = grades[x]\n            amazing += 1\n        elif grades[x] < ming:\n            ming = grades[x]\n            amazing += 1\nelse:\n    amazing = 0\n\nprint(amazing)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nb=[a[0]]\namazing=0\nfor i in range (1,n):\n    if a[i]>max(b) or a[i]<min(b):\n        amazing+=1\n    b.append(a[i])\nprint(amazing)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nmi=l[0]\nma=l[0]\nc=0\nfor i in range(1,n):\n    if(l[i]>ma):\n        c+=1\n        ma=l[i]\n    if(l[i]<mi):\n        c+=1\n        mi=l[i]\nprint(c)"
        },
        {
            "language": 1,
            "solution": "r = raw_input; r(); a = map(int, r().split()); print len([t for i,t in enumerate(a) if i > 0 and (t<min(a[:i]) or t>max(a[:i]))])"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nnums = [int(x) for x in input().split()]\nworst,best = nums[0],nums[0]\nans = 0\nfor num in nums[1:]:\n\tif num < worst or num > best:\n\t\tans += 1\n\tworst = min(worst,num)\n\tbest = max(best,num)\nprint(ans)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nlst = list(map(int,input().split()))\namaze = 0\nfor i in range(len(lst)) :\n    if (lst[i] == max(lst[:i+1]) or lst[i] == min(lst[:i+1])) and i != 0 and lst[i] != max(lst[:i]) and lst[i] != min(lst[:i]):\n        amaze += 1\nprint(amaze)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nx=list(map(int,input().split()))\nm1=x[0]\nm2=x[0]\nc=0\nfor i in range(1,n):\n     if m1<x[i]:\n         c+=1\n         m1=x[i]\n     elif m2> x[i]:\n         c+=1\n         m2=x[i]\nprint(c)"
        },
        {
            "language": 1,
            "solution": "n = input()\nscores = map(int,raw_input().split())\nsmallest = largest = scores[0]\namazing = 0\nfor score in scores[1:]:\n    if(score < smallest):\n        smallest = score\n        amazing+=1\n    if(score > largest):\n        largest = score\n        amazing+=1\nprint amazing\n\n  \t\t\t\t \t\t \t\t\t\t\t \t\t \t \t\t\t  \t \t"
        },
        {
            "language": 3,
            "solution": "num = int(input())\nline = input().split()\ncount_num = 0\nmin_point = int(line[0])\nmax_point = int(line[0])\n\nfor i in range(num):\n    point = int(line[i])\n    if point > max_point:\n        count_num += 1\n        max_point = point\n    elif point < min_point:\n        count_num += 1\n        min_point = point\n\nprint(count_num)"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\na = 0\nb = 0\nc = map(int,raw_input().split())\nd = 0\nfor i in xrange(n):\n\tif i==0:\n\t\ta = c[i]\n\t\tb = c[i]\n\tif c[i]> a:\n\t\td+=1\n\t\ta = c[i]\n\tif c[i] < b:\n\t\td+=1\n\t\tb = c[i]\nprint d\n"
        },
        {
            "language": 3,
            "solution": "e=input()\nl=list(map(int,input().split()))\nm=l[0]\nmi=l[0]\nc=0\nfor i in l[1:]:\n    if(i>m and i>mi):\n        c=c+1\n        m=i\n    elif(i<mi and i<m):\n        c=c+1\n        mi=i\nprint(c)\n        \n    "
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[int(j) for j in input().split()]\nl=list([])\nl.append(a[0])\n\njieguo=0\nfor i in range(1,n):\n\n\n    if a[i]>int(max(l)) or a[i]<int(min(l)):\n        l.append(a[i])\n\n        jieguo=jieguo+1\n    else:\n        l.append(a[i])\n\n\nprint(jieguo)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split(' ')))\nans=0\nfor i in range(1,n):\n    k1=0\n    k2=0\n    for j in range(i):\n        if a[j]<a[i]:\n            k1+=1\n        elif a[j]>a[i]:\n            k2+=1\n    if k1 == i or k2 == i:\n        ans+=1\nprint(ans)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nm=l[0];s=l[0];a=0\nfor i in l[1:]:\n    if i>m:\n        a+=1\n        m=i\n    if i<s:\n        a+=1\n        s=i\nprint(a)\n    \n"
        },
        {
            "language": 3,
            "solution": "def funct(n,l):\n    cnt=0\n    max=l[0]\n    min=l[0]\n    for i in range(n):\n        if(l[i]>max):\n            max=l[i]\n            cnt+=1\n        if(l[i]<min):\n            min=l[i]\n            cnt+=1\n    return cnt\n            \n\n\n\nn=int(input())\nl=list(map(int,input().split()))\nprint(funct(n,l))\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nc=0\nma=l[0]\nmi=l[0]\nfor i in l:\n    if(i>ma):\n        ma=i\n        c=c+1\n    elif(i<mi):\n        mi=i\n        c=c+1\n    \nprint(c)"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nl = list(map(int,input().split()))\n \nmaxi,mini,cnt = l[0],l[0],0\n \nfor i in range(1,len(l)):\n    if l[i] < mini:\n        mini = l[i]\n        cnt += 1\n    elif l[i] > maxi:\n        maxi = l[i]\n        cnt += 1\nprint(cnt)"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\n/**\n *\n * @author Krolos\n */\npublic class AI_love_Username {\n\n    /**\n     * @param args the command line arguments\n     */\n    public static void main(String[] args) {\n        Scanner k = new Scanner(System.in);\n        int n = k.nextInt();\n        int arr[] = new int[n];\n        int sum = 0;\n        int max = 0;\n        int mun = 0;\n        int n1;\n\n        for (int i = 0; i < n; i++) {\n            n1 = k.nextInt();\n            arr[i] = n1;\n        }\n        max = arr[0];\n        mun = arr[0];\n        for (int i = 1; i < n; i++) {\n            if (max < arr[i]) {\n                max = arr[i];\n                sum++;\n            } else if (mun > arr[i]) {\n                mun = arr[i];\n                sum++;\n            }\n        }\n        System.out.println(sum);\n    }\n\n}"
        },
        {
            "language": 3,
            "solution": "a=int(input())\nmas=[int(i) for i in input().split()]\nch=0\nfirst_mas=[mas[0]]\nfor i in range(1, len(mas)):\n    if mas[i]>max(first_mas):\n        ch+=1\n    elif mas[i]<min(first_mas):\n        ch+=1\n    first_mas.append(mas[i])\nprint(ch)"
        },
        {
            "language": 4,
            "solution": "//import Codeforces.CodeforcesLibrary; // it will be error - add methods to this class as static methods\n\n\nimport java.util.*;\n\npublic class TestCodeforces {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        solve(scanner);\n        scanner.close();\n    }\n\n\n    public static void solve(Scanner scanner) {\n\n\n        int x = scanner.nextInt();\n        int min = 0, max = 0, res = 0;\n\n        for (int i = 0; i < x; i++) {\n            int n = scanner.nextInt();\n            if (i == 0) {\n                min = n;\n                max = n;\n            }\n            else {\n                if (n > max) {\n                    max = n;\n                    res++;\n                }\n                if (n < min) {\n                    min = n;\n                    res++;\n                }\n            }\n        }\n        System.out.println(res);\n\n\n\n    }\n\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\ns=[int(i) for i in input().split()]\nk=0\na=s[0]\nb=s[0]\nfor i in s[1:]:\n    if i>a:\n        a=i\n        k+=1\n    if i<b:\n        b=i\n        k+=1\nprint(k)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nan = [ int(x) for x in input().split(' ') ]\nmax = an[0]\nmin = an[0]\ncount = 0\nfor x in an:\n\tif x > max:\n\t\tmax = x\n\t\tcount += 1\n\tif x < min:\n\t\tmin = x\n\t\tcount += 1\nprint(count)\n"
        },
        {
            "language": 3,
            "solution": "inp = int(input())\nmax = 0\nmin = 0\nlistt = list(map(int,input().split()))\nmax = listt[0]\nmin = listt[0]\nres = 0\nfor i in range(inp):\n    if listt[i] > max:\n        max = listt[i]\n        res = res +1\n    elif listt[i] < min:\n        min = listt[i]\n        res = res+1\nprint(res)"
        },
        {
            "language": 3,
            "solution": "n=eval(input())\nx = list(map(int, input().split()))\nz=list()\ncount=0\nz.append(x[0])\n\n\n\nfor element in x:\n    if element not in z:\n        z.append(element)\n        if element==min(z) or  element==max(z):\n            count=count+1\n            \nprint(count)            "
        },
        {
            "language": 3,
            "solution": "n=int(input());s=input().split();k=[];ans=0\nk.append(int(s[0]))\nfor i in range(1,n):\n    if int(s[i])in k:\n        k.append(int(s[i]))\n        continue\n    k.append(int(s[i]))\n    if max(k)==int(s[i]) or min(k)==int(s[i]):\n        ans+=1\nprint(ans)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = list(map(int, input().split()))\n\nmmin = l[0]\nmmax = l[0]\ncount = 0\n\nfor i in range(1, len(l)):\n    if l[i] > mmax:\n        count += 1\n        mmax = l[i]\n    if l[i] < mmin:\n        count += 1\n        mmin = l[i]\n\nprint(count)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long int n, max1, i, min1, premax, premin, count = 0, a[100000];\n  cin >> n;\n  cin >> a[1];\n  premin = a[1];\n  min1 = a[1];\n  premax = a[1];\n  max1 = a[1];\n  for (i = 2; i <= n; i++) {\n    cin >> a[i];\n    min1 = min(a[i], min1);\n    max1 = max(a[i], max1);\n    if ((premax != max1) || (premin != min1)) {\n      count++;\n    }\n    premax = max1;\n    premin = min1;\n  }\n  cout << count;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "num = int(input())\nst = input()\nballs = st.split()\n\nballs_min = balls[0]\nballs_max = balls[0]\nk = 0\n\nfor i in balls:\n    if int(i) > int(balls_max):\n        k += 1\n        balls_max = i\n    elif int(i) < int(balls_min):\n        k += 1\n        balls_min = i\n\nprint(k)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, a[1001], c, d, x = 0;\n  cin >> n;\n  for (int i = 1; i <= n; i++) {\n    cin >> a[i];\n    c = 0;\n    d = 0;\n    for (int j = (i - 1); j >= 1; j--) {\n      if (a[i] < a[j])\n        c++;\n      else if (a[i] > a[j])\n        d++;\n    }\n    if (c == (i - 1) || d == (i - 1)) x++;\n  }\n  x--;\n  cout << x << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int t, arr[1001], ans = 0, x = 0, y = 0;\n  cin >> t >> arr[0];\n  for (int i = 1; i < t; i++) {\n    cin >> arr[i];\n    for (int j = 0; j < i; j++) {\n      if (arr[j] < arr[i])\n        x = 1;\n      else if (arr[j] > arr[i])\n        y = 1;\n      else if (arr[j] == arr[i]) {\n        y = 0;\n        x = 0;\n        j = i;\n      }\n    }\n    if ((x == 1 && y == 0) || (x == 0 && y == 1)) ans++;\n    x = 0;\n    y = 0;\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "# URL: http://codeforces.com/problemset/problem/155/A\n# ~ Basic Implementation Problem\n\nfrom typing import List, Tuple\n\n\ndef parse_input() -> Tuple[int, List[int]]:\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    return n, arr\n\n\ndef solve(n: int, arr: List[int]) -> int:\n    best = arr[0]\n    worst = arr[0]\n    count = 0\n    for i in range(1, n):\n        if arr[i] > best:\n            best = arr[i]\n            count += 1\n        if arr[i] < worst:\n            worst = arr[i]\n            count += 1\n    return count\n\n\nif __name__ == '__main__':\n    n, arr = parse_input()\n    print(solve(n, arr))\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nnumbers = list(map(int, input().split()))\nmaxi = mini = numbers[0]\nwow = 0\nfor i in numbers[1:]:\n\tif i < mini:\n\t\twow+=1\n\t\tmini = i\n\tif i > maxi:\n\t\twow+=1\n\t\tmaxi = i\nprint(wow)"
        },
        {
            "language": 3,
            "solution": "n, a, r = int(input()), [int(x) for x in input().split()], 0\nfor i in range(1,n): r += 1 if a[i]>max(a[:i]) or a[i]<min(a[:i]) else 0\nprint(r)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nx=l[:1]\n\nfor i in l:\n    n -=min(x)<=i<=max(x)\n    x +=[i]\nprint(n)\n\n    "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, m, mn, mx, c;\nint main() {\n  cin >> n >> m;\n  mx = mn = m;\n  for (int i = 0; i < n - 1; i++) {\n    cin >> m;\n    if (mn < m) c++, mn = m;\n    if (mx > m) c++, mx = m;\n  }\n  cout << c;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nminimum=a[0]\nmaximum=a[0]\nc=0\nfor i in range(1,n):\n    if(a[i]>a[i-1]):\n        if(a[i]>maximum):\n            c+=1\n            maximum=a[i]\n    elif(a[i]<a[i-1]):\n        if(a[i]<minimum):\n            c+=1\n            minimum=a[i]\nprint(c)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nlst = list(map(int,input().split()))\nmax_score = lst[0]\nmin_score = lst[0]\ncount = 0\nfor i in range(1,n):\n    if lst[i] > max_score:\n        max_score = lst[i]\n        count += 1\n    if lst[i] < min_score:\n        min_score = lst[i]\n        count += 1\nprint(count)\n"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\ncnt = 0\n\na = map(int, raw_input().split(\" \"))\nmaxi = a[0]\nmini = a[0]\nfor i in range(1, len(a)):\n    if a[i]>maxi:\n        cnt+=1\n        maxi = a[i]\n    elif a[i]<mini:\n        cnt+=1\n        mini = a[i]\nprint cnt"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\n\npublic class CF155A {\n\tpublic static void main(String[] args) {\n\t\tScanner in = new Scanner(System.in);\n\t\tint N = in.nextInt();\n\t\tint min = in.nextInt();\n\t\tint max=min;\n\t\tint acc=0;\n\t\tfor(int i=1;i<N;i++) {\n\t\t\tint t = in.nextInt();\n\t\t\tif(t>max) {\n\t\t\t\tmax=t;\n\t\t\t\tacc++;\n\t\t\t}\n\t\t\tif(t<min) {\n\t\t\t\tmin=t;\n\t\t\t\tacc++;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(acc);\n\t}\n\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nk=[int(i) for i in input().split()]\nmaxi,mini=k[0],k[0]\ncnt=0\nfor i in range(n):\n    if k[i]>maxi:\n        maxi=k[i]\n        cnt+=1\n    if k[i]<mini:\n        mini=k[i]\n        cnt+=1\nprint(cnt)\n"
        },
        {
            "language": 3,
            "solution": "t=int(input())\na=list(map(int,input().split()))\nx=a[:1]\nfor i in a:\n    t-=min(x)<=i<=max(x)\n    x+=[i]\nprint(t)"
        },
        {
            "language": 3,
            "solution": "if __name__==\"__main__\":\n    n=int(input())\n    count=0\n    numlist=list(map(int,input().split()))\n    for i in range(1,n):\n        if(numlist[i]<min(numlist[0:i]) or numlist[i]>max(numlist[0:i])):\n            count=count+1\n    print(count)"
        },
        {
            "language": 1,
            "solution": "n = input()\na = [ int(x) for x in raw_input().split() ] \nmax = a[0]\nmin = a[0]\nnub =0\nfor x in a:\n if x> max:\n  max = x\n  nub+=1\n if x< min:\n  min=x\n  nub+=1\n\nprint nub\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nscore=list(map(int,input().split( )))\nmax=score[0]\nmin=score[0]\namazing=0\nfor i in range(1,len(score)):\n    if score[i]<min or score[i]>max:\n        amazing+=1\n        if score[i]<min:\n            min=score[i]\n        else:\n            max=score[i]\n    else:\n        amazing=amazing\nprint(amazing)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nN = [int(num) for num in input().split(\" \", n-1)]\ni=1\nx=0\nmi=N[0]\nma=N[0]\nwhile(i<n):\n    if(N[i]>ma):\n        ma=N[i]\n        x+=1\n    if(N[i]<mi):\n        mi=N[i]\n        x+=1\n    i+=1\nprint(x)\n"
        },
        {
            "language": 3,
            "solution": "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Thu Jan 30 16:55:54 2020\n\n@author: Zheng Jiajia\n\"\"\"\nn=int(input())\nscore=list(map(int,input().split()))\n#\n#print(score)\n#print (score[0])\namaze=0\n\nbest=score[0]\nworst=score[0]\nfor i in range(1,n):\n    if score[i]>best:\n        best=score[i]\n        amaze+=1\n    elif score[i]<worst:\n        worst=score[i]\n        amaze+=1\n\nprint (amaze)\n        "
        },
        {
            "language": 3,
            "solution": "a=int(input())\nb=[k for k in map(int,input().split())]\nc=[]\ni=1\nu=0\nwhile i<a:\n #dansnsn \n  r=b[i]\n  j=list(b[0:i])\n  c.extend(j)\n  d=sorted(c)\n  t=d[0]\n  w=d[i-1]\n  if t>r or w<r:\n     u+=1\n  i+=1\n  c=[]\n\nprint(u)\n\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nmax,min=l[0],l[0]\nsum=0\nfor i in range(1,n):\n    if l[i]>max:\n        max=l[i]\n        sum+=1\n    if l[i]<min:\n        min=l[i]\n        sum+=1\nprint(sum)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nh=0\nmn=a[0]\nmx=a[0]\nfor i in range(1,n):\n    if a[i]<mn:\n        mn=a[i]\n        h+=1\n    elif a[i]>mx:\n        mx=a[i]\n        h+=1\nprint(h)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint main(void) {\n  int a[1000];\n  int n, i, min, max, cnt = 0;\n  scanf(\"%d\", &n);\n  for (i = 0; i < n; i++) scanf(\"%d\", &a[i]);\n  min = a[0];\n  max = a[0];\n  for (i = 1; i < n; i++) {\n    if (a[i] > max) {\n      cnt++;\n      max = a[i];\n    }\n    if (a[i] < min) {\n      cnt++;\n      min = a[i];\n    }\n  }\n  printf(\"%d\", cnt);\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = []\na += map(int,input().split())\n\ncount = 0\nfor i in range(1,n):\n\tif a[i] > max(a[:i]) or a[i] < min(a[:i]):\n\t\tcount += 1\nprint(count)\t\t\t\n"
        },
        {
            "language": 3,
            "solution": "judge = True\nif judge:\n    from sys import stdin, stdout\nelse:\n    stdin = open('input.txt', 'r')\n    stdout = open('output.txt', 'w')\nn = int(stdin.readline())\nx = list(map(int, stdin.readline().split()))\nmin = x[0]\nmax = x[0]\nk = 0\nfor i in range(1, n):\n    if x[i] < min:\n        min = x[i]\n        k += 1\n    if x[i] > max:\n        max = x[i]\n        k += 1\nstdout.write(str(k))\nstdin.close()\nstdout.close()"
        },
        {
            "language": 3,
            "solution": "input()\nx = list(map(int, input().split()))\nMax, Min, counter = x[0], x[0], 0\nfor i in x:\n    if i > Max:\n        Max = i\n        counter += 1\n    elif i < Min:\n        Min = i\n        counter += 1\nprint(counter if len(x) > 1 else 0)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split(\" \")))\nl=a[0]\nm=a[0]\ncount=0\nfor i in range(1,len(a)):\n    if a[i]>m:\n        count+=1\n        m=a[i]\n    elif a[i]<l:\n        count+=1\n        l=a[i]\nprint(count)"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.lang.*;\nimport java.io.*;\n\n\n\npublic class Solve{\n    \n    public static void main (String[] args){\n        Scanner s = new Scanner(System.in);\n        int n = s.nextInt();\n        int arr[] = new int[n];\n        for(int i = 0 ; i<n;i++){\n            arr[i] = s.nextInt();\n        }\n        int max = arr[0];\n        int min = arr[0];\n        int count = 0 ;\n        for(int i =1 ;i<n;i++){\n            if(arr[i]>max){\n                count++;\n                max = arr[i];\n            }\n            if(arr[i]<min){\n                count++;\n                min = arr[i];\n            }\n            \n        }\n        System.out.print(count);\n        \n   }\n\n}\n\n\n\n\n\n\n\n\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nn1=list(map(int,input().split()))\nmi=n1[0]\nma=n1[0]\ns=0\nfor i in range(n-1):\n    if n1[i+1]<mi:\n        mi=n1[i+1]\n        s+=1\n    elif n1[i+1]>ma:\n        ma=n1[i+1]\n        s+=1\nprint(s)"
        },
        {
            "language": 3,
            "solution": "# holds the useless information\nn = int(input())\n# creates and stores a list of all the scores\nscores = [int(s) for s in input().split()]\n# holds the number of amazing performances\namazing = 0\n\nfor i in range(1, len(scores)):\n    if scores[i] < min(scores[:i]) or scores[i] > max(scores[:i]):\n        amazing += 1\n\nprint(amazing)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nmaxi=l[0]\nmini=l[0]\ncount=0\nfor i in range(1,n):\n    if l[i]>maxi:\n        count+=1\n        maxi=l[i]\n    elif l[i]<mini:\n        count+=1\n        mini=l[i]\nprint(count)"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.Scanner;\n\npublic class MySolution\n{\n\n\tpublic static void main(String[] args)\n\t{\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt() - 1;\n\t\tint cur = sc.nextInt();\n\t\tint min = cur, max = cur;\n\t\tint res = 0;\n\t\tfor(int i = 0; i < n; i++) {\n\t\t\tcur = sc.nextInt();\n\t\t\tif(cur > max)\n\t\t\t{\n\t\t\t\tres++;\n\t\t\t\tmax = cur;\n\t\t\t}\n\t\t\telse if (cur < min)\n\t\t\t{\n\t\t\t\tres++;\n\t\t\t\tmin = cur;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(res);\n\t}\n}"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\nscores = map(int, raw_input().split())\n\nhighest=scores[0]\nlowest = scores[0]\namazing = 0\nfor i in xrange(1,n):\n    if scores[i]>highest:\n        highest = scores[i]\n        amazing +=1\n    elif scores[i]< lowest:\n        lowest = scores[i]\n        amazing +=1\nprint amazing\n"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\nact = map(int, raw_input().split())\ncol = 0\nfor i in range(1, n):\n    if act[i] > max(act[:i]) or act[i] < min(act[:i]):\n       col += 1\nprint col    "
        },
        {
            "language": 3,
            "solution": "def solve(scores):\n    smallest = largest = scores[0]\n    amazing = 0\n    for score in scores[1:]:\n        if(score < smallest):\n            smallest = score\n            amazing+=1\n        if(score > largest):\n            largest = score\n            amazing+=1\n    return amazing\n\n\n\nn = int(input())\nscores = list(map(int,input().split(\" \")))\nprint(solve(scores))"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int,input().split())); b =[]; count = 0\nfor i in range(1,n):\n    for j in range(0,i):\n        b.append(a[j])\n    if min(b)>a[i] or max(b)<a[i]: count+=1\n    b.clear()\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nlst = list(map(int, input().split()))\nmini = lst[0]\nmaxi = lst[0]\ncnt = 0\nfor i in range(1, n):\n    if lst[i] > maxi:\n        maxi = lst[i]\n        cnt += 1\n    elif lst[i] < mini:\n        mini = lst[i]\n        cnt += 1\nprint(cnt)"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.StringTokenizer;\npublic class F {\n\tpublic static void main(String[] args)throws Throwable {\n\t\tMyScanner sc=new MyScanner();\n\t\tPrintWriter pw=new PrintWriter(System.out,true);\n\t\tStringBuilder sb=new StringBuilder();\n\t\t\n\t\tint n=sc.nextInt();\n\t\tint []a=new int [n];\n\t\tfor(int i=0;i<n;i++)\n\t\t\ta[i]=sc.nextInt();\n\t\t\n\t\tint cnt=0;\n\t\tint min=a[0],max=a[0];\n\t\tfor(int i=1;i<n;i++){\n\t\t\tif(a[i]>max){\n\t\t\t\tmax=a[i];\n\t\t\t\tcnt++;\n\t\t\t}else\n\t\t\t\tif(a[i]<min){\n\t\t\t\t\tmin=a[i];\n\t\t\t\t\tcnt++;\n\t\t\t\t}\n\t\t}\n\t\tpw.println(cnt);\n\t\t\n\t\tpw.flush();\n\t\tpw.close();\n\t}\n\t\n\tstatic class MyScanner {\n\t      BufferedReader br;\n\t      StringTokenizer st;\n\t \n\t      public MyScanner() {\n\t         br = new BufferedReader(new InputStreamReader(System.in));\n\t      }\n\t \n\t      String next() {\n\t          while (st == null || !st.hasMoreElements()) {\n\t              try {\n\t                  st = new StringTokenizer(br.readLine());\n\t              } catch (IOException e) {\n\t                  e.printStackTrace();\n\t              }\n\t          }\n\t          return st.nextToken();\n\t      }\n\t \n\t      int nextInt() {\n\t          return Integer.parseInt(next());\n\t      }\n\t \n\t      long nextLong() {\n\t          return Long.parseLong(next());\n\t      }\n\t \n\t      double nextDouble() {\n\t          return Double.parseDouble(next());\n\t      }\n\t \n\t      String nextLine(){\n\t          String str = \"\";\n\t\t  try {\n\t\t     str = br.readLine();\n\t\t  } catch (IOException e) {\n\t\t     e.printStackTrace();\n\t\t  }\n\t\t  return str;\n\t      }\n\n\t   }\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nln = input().split(\" \")\nmax = int(ln[0])\nmin = int(ln[0])\namazings = 0\nfor i in range(1,n):\n    k = int(ln[i])\n    if k > max:\n        amazings += 1\n        max = k\n    elif k < min:\n        amazings += 1\n        min = k\n\nprint(str(amazings))"
        },
        {
            "language": 4,
            "solution": "\n\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\n\npublic class I_Love_username {\n\tpublic static void main(String []args) throws Exception{\n\t\tBufferedReader br=new BufferedReader(new InputStreamReader (System.in));\n\t\tint n=Integer.parseInt(br.readLine());\n\t\tString s=br.readLine();\n\t\tString [] sa=s.split(\" \");\n\t\tboolean bigger=true;\n\t\tboolean smaller=true;\n\t\tint ans=0;\n\t\tfor(int i=1;i<sa.length;i++) {\n\t\t\tfor(int j=i-1;j>-1;j--) {\n\t\t\t\tif(Integer.parseInt(sa[i])>Integer.parseInt(sa[j])) {\n\t\t\t\t\tsmaller=false;\n\t\t\t\t}\n\t\t\t\telse if(Integer.parseInt(sa[i])<Integer.parseInt(sa[j])){\n\t\t\t\t\tbigger=false;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsmaller=false;\n\t\t\t\t\tbigger=false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(bigger & !smaller) {\n\t\t\t\tans++;\n\t\t\t}\n\t\t\telse if(!bigger & smaller)\n\t\t\t\tans++;\n\t\t\tsmaller=true;\n\t\t\tbigger=true;\n\t\t}\n\t\tSystem.out.println(ans);\n\t}\n}\n"
        },
        {
            "language": 1,
            "solution": "def solve(scores):\n    smallest = largest = scores[0]\n    amazing = 0\n    for score in scores[1:]:\n        if(score < smallest):\n            smallest = score\n            amazing+=1\n        if(score > largest):\n            largest = score\n            amazing+=1\n    return amazing\n\nif __name__ == \"__main__\":\n\n    n = int(input())\n    scores = map(int,raw_input().split(\" \"))\n    print solve(scores)"
        },
        {
            "language": 3,
            "solution": "import math\nn = int(input())\namaze = 0\narr = input().split()\nmx = int(arr[0])\nmn = mx\nfor ch in arr:\n\ta = int(ch)\n\tif a < mn:\n\t\tmn = a\n\t\tamaze += 1\n\tif a > mx:\n\t\tmx = a\n\t\tamaze += 1\nprint(str(amaze))"
        },
        {
            "language": 3,
            "solution": "num = int(input())\nscores = list(map(int,input().split()))\ncount = 0\nmaxm = None\nminm = None\n \n \nfor i in scores:\n    if maxm is None and minm is None:\n        maxm = scores[0]\n        minm = scores[0]\n    \n    elif i > maxm:\n        maxm = i\n        count +=1\n    \n    elif i < minm:\n        minm = i\n        count += 1\n    \n \nprint(count)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nmarks = list(map(int, input().split()))\namz = 0\nfor i in range(1, n):\n      s = marks[:i]\n      if all (m<marks[i] for m in s) or all (m>marks[i] for m in s):\n            amz += 1\n\nprint(amz)     \n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[int(i) for i in input().split()]\nb=a[0]\nc=a[0]\nA=0\nfor i in a[1:]:\n    if i>b:\n        A+=1\n        b=i\n    elif i<c:\n        A+=1\n        c=i\nprint(A)\n"
        },
        {
            "language": 1,
            "solution": "input()\nl = map(int,raw_input().split())\nc = 0\nfor i in range(1, len(l)):\n\tif(l[i] < min(l[:i]) or l[i] > max(l[:i]) ):\n\t\tc += 1\nprint c "
        },
        {
            "language": 3,
            "solution": "n = int(input())\nb = list(map(int, input().split()))\nm, M = b[0], b[0]\na = 0\nfor i in range(1, n):\n  if b[i] > M:\n    M = b[i]\n    a += 1\n  if b[i] < m:\n    m = b[i]\n    a += 1\nprint(a)\n"
        },
        {
            "language": 3,
            "solution": "\nn = int(input())\naux = input()\nscores = []\nscores = aux.split()\n\nfor i in range(n):\n    scores[i] = int(scores[i])\n\nmin = max = scores[0]\ncount=0\nfor i in range(1,n):\n    if scores[i] < min:\n        count+=1\n        min = scores[i]\n    elif scores[i]>max:\n        count+=1\n        max = scores[i]\n\nprint(count)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nscore = list(map(int,input().split()))\nheighest = score[0]\nlowest = score[0]\nc = 0\nfor i in range(1,n):\n    if score[i]>heighest:\n        heighest = score[i]\n        c += 1\n    elif score[i]<lowest:\n        lowest = score[i]\n        c+=1\n    else:\n        pass\nprint(c)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = list(map(int, input().split()[:n]))\nl_min = l[0]\nl_max = l[0]\ncount = 0\nfor i in range(n):\n    if l[i] > l_max or l[i] < l_min:\n        l_max = max(l_max, l[i])\n        l_min = min(l_min, l[i])\n        count += 1\nprint(count)"
        },
        {
            "language": 3,
            "solution": "inp,a,ans=[],[],0\n\nn=int(input())\ninp=input()\n\nfor s in inp.split(' '):\n    a.append(int(s))\n\nmn,mx=a[0],a[0]\nfor i in a:\n    if i<mn or i>mx:\n        ans=ans+1\n    mx=max(mx,i)\n    mn=min(mn,i)\n\nprint(ans)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\np = list(map(int, input().split()))\n\na = 0\nmax,min = p[0], p[0]\nfor i in range (1,n):\n    if p[i] > max:\n        max = p[i]\n        a += 1\n    elif p[i] < min:\n        min = p[i]\n        a += 1\n\nprint(a)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint main() {\n  int n, i, c = 0;\n  scanf(\"%d\", &n);\n  int a[n];\n  for (i = 0; i < n; i++) {\n    scanf(\"%d\", &a[i]);\n  }\n  int max = a[0];\n  int min = a[0];\n  for (i = 0; i < n; i++) {\n    if (a[i] > max) {\n      max = a[i];\n      c++;\n    }\n  }\n  for (i = 0; i < n; i++) {\n    if (a[i] < min) {\n      min = a[i];\n      c++;\n    }\n  }\n  printf(\"%d\", c);\n}\n"
        },
        {
            "language": 3,
            "solution": "q = input()\nl = [int(k) for k in input().split()]\nif len(l) == 1:\n    r = 0\nelse:\n    if l[0] != l[1]:\n        r =1\n    else:\n        r = 0\n    mini = min(l[0], l[1])\n    maxi = max(l[0], l[1])\n    for i in l[2:]:\n        if i < mini:\n            mini = i\n            r += 1\n        elif i > maxi:\n            maxi = i\n            r += 1\n\nprint(r)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\ns = list(map(int,input().split()))\nmin1=s[0]\nmax1=s[0]\nc=0\nfor i in range(1,len(s)):\n    if s[i] > max1:\n        c+=1\n        max1=s[i]\n    elif s[i] < min1:\n        c+=1\n        min1=s[i]\nprint(c)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\n\nminv, maxv = a[0], a[0]\ncount = 0\n\nfor i in a:\n    if i > maxv:\n        maxv = i\n        count += 1\n    elif i < minv:\n        minv = i\n        count += 1\n\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nxx=[int(i) for i in input().split()]\ns=0\nx=xx[0]\ny=xx[0]\nfor i in range(1,n):\n    if xx[i]>x:\n        s+=1\n        x=xx[i]\n    if xx[i]<y:\n        s+=1\n        y=xx[i]\nprint(s)\n"
        },
        {
            "language": 3,
            "solution": "# Author: S Mahesh Raju\n# Username: maheshraju2020\n# Date: 31/08/2020\nfrom sys import stdin, stdout, setrecursionlimit\nfrom math import gcd, ceil, sqrt\nfrom collections import Counter, deque\nfrom bisect import bisect_left, bisect_right\nii1 = lambda: int(stdin.readline().strip())\nis1 = lambda: stdin.readline().strip()\niia = lambda: list(map(int, stdin.readline().strip().split()))\nisa = lambda: stdin.readline().strip().split()\nsetrecursionlimit(100000)\nmod = 1000000007\n\nn = ii1()\narr = iia()\nl = h = arr[0]\nres = 0\nfor i in range(1, n):\n    if arr[i] > h or arr[i] < l:\n        res += 1\n    h = max(h, arr[i])\n    l = min(l, arr[i])\nprint(res)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input()) \norder = list(map(int, input().split(\" \")))\n\nmax = order[0]\nmin = order[0]\namazing = 0\n\nfor i in range(0, n): \n\tcurrent = order[i]\n\tif (current > max):\n\t\tmax = current\n\t\tamazing += 1\n\tif (current < min):\n\t\tmin = current\n\t\tamazing += 1 \nprint(amazing)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nline = [int(i) for i in input().split()]\nmax_score = line[0]\nmin_score = line[0]\namazing = 0\n\nfor i in range(1,n):\n    if line[i] < min_score:\n        amazing += 1\n        min_score = line[i]\n    if line[i] > max_score:\n        amazing += 1\n        max_score = line[i]\n\nprint(amazing)\n            \n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nmini=a[0]\nmaxi=a[0]\ncnt=0\nfor i in range(1,n):\n  if mini>a[i]:\n    cnt+=1\n    mini=a[i]\n  if maxi<a[i]:\n    cnt+=1\n    maxi=a[i]\nprint(cnt)"
        },
        {
            "language": 1,
            "solution": "n = input()\ns = map(int, raw_input().split())\nmins = s[0]\nmaxs = s[0]\nt = 0\nfor i in xrange(1, n):\n    if s[i] < mins:\n\tmins = s[i]\n\tt += 1\n    elif s[i] > maxs:\n\tmaxs = s[i]\n\tt += 1\nprint t\n"
        },
        {
            "language": 3,
            "solution": "leng = int(input())\nA = list(map(int,input().split()))\nn = A[0]\nm = n\ncnt = 0\nfor i in A:\n\tif i>m:\n\t\tcnt += 1\n\t\tm = i\n\tif i<n:\n\t\tcnt += 1\n\t\tn = i\nprint(cnt)"
        },
        {
            "language": 3,
            "solution": "import math\nfrom collections import Counter\n\n\ndef get(f):\n    return map(f, input().split())\n\n\ndef main():\n    n = int(input())\n\n    contests = list(get(int))\n\n    mi, ma = contests[0], contests[0]\n\n    cnt = 0\n\n    for i in range(1, n):\n        cur = contests[i]\n\n        if cur < mi:\n            mi = cur\n            cnt += 1\n            continue\n\n        if cur > ma:\n            ma = cur\n            cnt += 1\n            continue\n\n    print(cnt)\n\n\nmain()\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nmx,mn=a[0],a[0]\namaz=0\nfor i in range(1,n):\n  if(a[i]>mx):\n    mx=a[i]\n    amaz=amaz+1\n  elif(a[i]<mn):\n    mn=a[i]\n    amaz=amaz+1\nprint(amaz)\n"
        },
        {
            "language": 3,
            "solution": "n = input()\na = map(int,input().split())\nmn = 10005\nmx = -10005\ncnt = 0\nfor i in a:\n    if(i < mn):\n        mn = i\n        cnt+=1\n    if(i>mx):\n        mx = i\n        cnt+=1\nprint(cnt-2)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nnums = map(int, input().split())\nmin_point = max_point = next(nums)\ncount_amazing = 0\nfor m in nums:\n    if m > max_point:\n        max_point = m\n        count_amazing += 1\n    elif m < min_point:\n        min_point = m\n        count_amazing += 1\n\nprint(count_amazing)\n"
        },
        {
            "language": 1,
            "solution": "n=int(raw_input())\narr=[int(i) for i in raw_input().split()]\ncnt=0\nfor i in range(1,len(arr)):\n    if arr[i]>max(arr[:i]) or arr[i]<min(arr[:i]):\n        cnt+=1\nprint cnt"
        },
        {
            "language": 3,
            "solution": "def answer():\n    n = int(input())\n    a = input().split()\n    a = [int(x) for x in a]\n    b =[a[0]]\n    i=1\n    ans=0\n    while i<len(a):\n        if a[i]>max(b):ans+=1\n        if a[i]<min(b):ans+=1\n        b.append(a[i])\n        i+=1\n    return ans\nprint(answer())"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nll=list(map(int,input().split()))\nc=0\nb,w=ll[0],ll[0]\nfor i in range(1,n):\n    if b<ll[i]:\n        b=ll[i]\n        c+=1\n    elif w>ll[i]:\n        w=ll[i]\n        c+=1\nprint(c)"
        },
        {
            "language": 3,
            "solution": "import math\nn = int(input())\na = input().split(' ')\na[0] = int(a[0])\ngmax = a[0]\ngmin = a[0]\ncount = 0\nfor i in range(1,n):\n    a[i] = int(a[i])\n    if gmin > a[i]:\n        count = count + 1\n        gmin = a[i]\n    elif gmax < a[i]:\n        count = count + 1\n        gmax = a[i]\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n = int (input())\na = [int(i) for i in input().split(\" \")]\n\nbest = a[0]\nworst = a[0]\n\nans = 0\nfor i in range (1,n):\n    if a [i] > best:\n        best = a [i]\n        ans += 1\n    if a [i] < worst:\n        worst = a [i]\n        ans += 1\n\nprint (ans)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long int n, i, ans = 0, max, min;\n  cin >> n;\n  long long int a[n];\n  for (i = 0; i < n; i++) cin >> a[i];\n  min = a[0];\n  max = a[0];\n  for (i = 1; i < n; i++) {\n    if (a[i] < min) {\n      ans++;\n      min = a[i];\n    }\n    if (a[i] > max) {\n      ans++;\n      max = a[i];\n    }\n  }\n  cout << ans;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n,a = int(input()),list(map(int,input().split()))\nmi,ma,c = a[0],a[0],0\nfor i in range(1,n):\n    if a[i] < mi:\n        mi = a[i]\n        c+=1\n    if a[i] > ma:\n        ma = a[i]\n        c+=1\nprint(c)"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class one\n{\npublic static void main(String args[])\n{\nScanner ss=new Scanner(System.in);\nint n=ss.nextInt();\nint a= ss.nextInt();\nint ans=0;\nint max=a;\nint min=a;\nfor(int i=1;i<n;i++)\n{\n a= ss.nextInt();\nif(a>max)\n{max=a;\nans+=1;\n}\nif(a<min)\n{min=a;\nans+=1;\n}\n }\n System.out.println(ans);\n\n}\n}"
        },
        {
            "language": 3,
            "solution": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\nn=int(input())\nls=[int(x) for x in input().split()]\nmax=ls[0]\nmin=ls[0]\ns=0\nfor p in ls[1:]:\n    if p>max:\n        s+=1\n        max=p\n    elif p<min:\n        s+=1\n        min=p\nprint(s)\n"
        },
        {
            "language": 3,
            "solution": "num = int(input())\nanswer = 0\nresults = list(map(int, input().split()))\nmin_res = results[0]\nmax_res = results[0]\nfor i in results[1 : ]:\n    if i > max_res:\n        max_res = i\n        answer += 1\n    elif i < min_res:\n        min_res = i\n        answer += 1\nprint(answer)\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class round109A {\n    public static void main(String s[]) throws Exception {\n        Reader r = new Reader();\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        int n = r.nextInt();\n        int arr[]=new int[n];\n        arr[0]=r.nextInt();\n        int min=arr[0],max=arr[0],co=0;\n        for(int i=1;i<n;i++){\n            arr[i]=r.nextInt();\n            if(arr[i]>max || arr[i]<min)\n                co++;\n            max=Math.max(max,arr[i]);\n            min=Math.min(min,arr[i]);\n        }\n        System.out.println(co);\n    }\n\n    static class Reader {\n        final private int BUFFER_SIZE = 1 << 16;\n        private DataInputStream din;\n        private byte[] buffer;\n        private int bufferPointer, bytesRead;\n\n        public Reader() {\n            din = new DataInputStream(System.in);\n            buffer = new byte[BUFFER_SIZE];\n            bufferPointer = bytesRead = 0;\n        }\n\n        public Reader(String file_name) throws IOException {\n            din = new DataInputStream(new FileInputStream(file_name));\n            buffer = new byte[BUFFER_SIZE];\n            bufferPointer = bytesRead = 0;\n        }\n\n        public String readLine() throws IOException {\n            byte[] buf = new byte[64]; // line length \n            int cnt = 0, c;\n            while ((c = read()) != -1) {\n                if (c == '\\n')\n                    break;\n                buf[cnt++] = (byte) c;\n            }\n            return new String(buf, 0, cnt);\n        }\n\n        public int nextInt() throws IOException {\n            int ret = 0;\n            byte c = read();\n            while (c <= ' ')\n                c = read();\n            boolean neg = (c == '-');\n            if (neg)\n                c = read();\n            do {\n                ret = ret * 10 + c - '0';\n            } while ((c = read()) >= '0' && c <= '9');\n\n            if (neg)\n                return -ret;\n            return ret;\n        }\n\n        public long nextLong() throws IOException {\n            long ret = 0;\n            byte c = read();\n            while (c <= ' ')\n                c = read();\n            boolean neg = (c == '-');\n            if (neg)\n                c = read();\n            do {\n                ret = ret * 10 + c - '0';\n            }\n            while ((c = read()) >= '0' && c <= '9');\n            if (neg)\n                return -ret;\n            return ret;\n        }\n\n        public double nextDouble() throws IOException {\n            double ret = 0, div = 1;\n            byte c = read();\n            while (c <= ' ')\n                c = read();\n            boolean neg = (c == '-');\n            if (neg)\n                c = read();\n\n            do {\n                ret = ret * 10 + c - '0';\n            }\n            while ((c = read()) >= '0' && c <= '9');\n\n            if (c == '.') {\n                while ((c = read()) >= '0' && c <= '9') {\n                    ret += (c - '0') / (div *= 10);\n                }\n            }\n\n            if (neg)\n                return -ret;\n            return ret;\n        }\n\n        private void fillBuffer() throws IOException {\n            bytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE);\n            if (bytesRead == -1)\n                buffer[0] = -1;\n        }\n\n        private byte read() throws IOException {\n            if (bufferPointer == bytesRead)\n                fillBuffer();\n            return buffer[bufferPointer++];\n        }\n\n        public void close() throws IOException {\n            if (din == null)\n                return;\n            din.close();\n        }\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  int n, a[10000], max = 0, count = 0, min = 10000, r = 0;\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n    if (a[i] == 10000) {\n      r++;\n    }\n    if (a[i] > max) {\n      max = a[i];\n      count++;\n    }\n    if (a[i] < min) {\n      min = a[i];\n      count++;\n    }\n  }\n  count = count - 2;\n  if (r == n) {\n    cout << 0 << endl;\n  } else if (r == 1) {\n    cout << 1 << endl;\n  } else {\n    if (count > 0) {\n      cout << count << endl;\n    } else {\n      cout << 0 << endl;\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "def solution() -> int:\n  n = int(input())\n  ra = list(map(int, input().split()))\n  bare, full = ra[0], ra[0]\n  cnt = 0\n  for i in ra:\n    if i > full:\n      full = i\n      cnt += 1\n    if i < bare:\n      bare = i\n      cnt += 1\n  return cnt\n\nprint(solution())\n"
        },
        {
            "language": 3,
            "solution": "x = int(input())\ny = list(map(int,input().split()))\namazing = 0\nmin = y[0]\nmax = y[0]\nfor i in range (x):\n    if y[i] > max:\n        max = y[i]\n        amazing += 1\n    if y[i] < min:\n        min = y[i]\n        amazing += 1\nprint(amazing)\n\t\t \t   \t \t\t \t\t\t   \t\t\t  \t \t \t \t"
        },
        {
            "language": 3,
            "solution": "dec=0\nn=int(input())\ns=input().split()\nt=[]\nfor i in range(n):\n    if i==1 and s[i]!=s[0]:\n        dec+=1\n    elif i>1:\n        if int(s[i])>max(t) or int(s[i])<min(t):\n            dec+=1\n    t.append(int(s[i]))\nprint(dec)"
        },
        {
            "language": 3,
            "solution": "import sys\na = int(sys.stdin.readline())\nn = sys.stdin.readline().split()\ncount=0\nmaxm=int(n[0])\nminm=int(n[0])\nfor i in range (1,a):\n    v=int(n[i])\n    if v> maxm:\n        maxm=v\n        count+=1\n    elif v < minm:\n        minm=v\n        count+=1\nprint(count)        \n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, nb = 0, i, maxi = 0, mini = 0, a = 0;\n  cin >> n >> a;\n  mini = a;\n  maxi = a;\n  for (i = 1; i < n; i++) {\n    cin >> a;\n    if (mini < a) {\n      mini = a;\n      nb++;\n    }\n    if (maxi > a) {\n      maxi = a;\n      nb++;\n    }\n  }\n  cout << nb;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\narr=list(map(int,input().strip().split(' ')))\nma,mi=arr[0],arr[0];ctr=0\nfor i in arr:\n    if i>ma:\n        ma=i;ctr+=1\n    if i<mi:\n        mi=i;ctr+=1\nprint(ctr)"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner nc = new Scanner(System.in);\n        int n = nc.nextInt();\n        var arr = new int[n];\n        for (var i = 0; i < arr.length; i++) {\n            arr[i] = nc.nextInt();\n        }\n        var minV = arr[0];\n        var maxV = arr[0];\n        var num = 0;\n        for (var i = 1; i < arr.length; i++) {\n            if (arr[i] < minV) {\n                num++;\n                minV = arr[i];\n            } else if (arr[i] > maxV) {\n                maxV = arr[i];\n                num++;\n            }\n        }\n        System.out.println(num);\n    }\n}\n"
        },
        {
            "language": 1,
            "solution": "n=int(raw_input())\ns=map(int,raw_input().split())\nminn=s[0]\nmaxx=s[0]\namazing=0\nfor i in range(1,n):\n    if s[i]>maxx or s[i]<minn:\n        amazing+=1\n    maxx=max(maxx,s[i])\n    minn=min(minn,s[i])\n    \nprint amazing    \n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nc = [int(i) for i in input().split()]\nc_min=c[0]\nc_max=c[0]\namaz = 0\nfor i in range(n-1):\n    i = i+1\n    if c[i]<c_min:\n        c_min = c[i]\n        amaz +=1\n    elif c[i]>c_max:\n        c_max = c[i]\n        amaz +=1\nprint(amaz)"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class I_love_username {\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        int n = scan.nextInt();\n        int[] nums = new int[n];\n\n        for(int i = 0; i < n; i++) {\n            nums[i] = scan.nextInt();\n        }\n\n        int amazing = 0;\n        int max = nums[0];\n        int min = nums[0];\n\n        for(int j = 1; j < n; j++) {\n            if(nums[j] > max){\n                max = nums[j];\n                amazing++;\n            }\n            if(nums[j] < min){\n                min = nums[j];\n                amazing++;\n            }\n        }\n        System.out.println(amazing);\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "import os\nimport sys\nfrom io import BytesIO, IOBase\nfrom collections import Counter\nfrom collections import deque\nimport heapq\nimport math\n\ndef sin():\n    return input()\n\ndef ain():\n    return list(map(int, sin().split()))\n\ndef sain():\n    return input().split()\n\ndef iin():\n    return int(sin())\n\n\nMAX = float('inf')\nMIN = float('-inf')\n\n\n\n\ndef main():\n    n = iin()\n    l = ain()\n    if n == 1:\n        print(0)\n        sys.exit(0)\n    count = 0\n    maxi = l[0]\n    mini = l[0]\n    for i in range(1, n):\n        if l[i] > maxi:\n            maxi = l[i]\n            count += 1\n        if l[i] < mini:\n            mini = l[i]\n            count += 1\n    print(count)\n\n    \n\n# Fast IO Template starts\n\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\n# Fast IO Template ends\n\nif __name__ == \"__main__\":\n    main()"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nst = [int(x) for x in input().split()]\nmax_val = min_val = st[0]\ncount = 0\nif len(st)==1:\n    print(count)\nelse:\n    for i in range(1,len(st)):\n        if st[i] > max_val:\n            max_val = st[i]\n            count+=1\n        if st[i] < min_val:\n            min_val = st[i]\n            count+=1\n    print(count)"
        },
        {
            "language": 1,
            "solution": "# from __future__ import print_function\n\nN = input()\nnums = map(int, raw_input().split())\n\nif N == 0 or N == 1:\n    print 0\nelse:\n    maxv = minv = nums[0]\n    ret = 0\n    for e in nums:\n        if e > maxv:\n            ret += 1\n            maxv = e\n        elif e < minv:\n            ret += 1\n            minv = e\n    print ret\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[int(i) for i in input().split()]\namz=0\nx=y=a[0]\nfor i in a[1:]:\n    if i>x:\n        x=i\n        amz+=1\n    if i<y:\n        y=i\n        amz+=1\nprint(amz)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\narr = list(map(int, input().split()))\n\n#print(arr)\nmmin = 0 \nmmax = 0\n\nmmin = arr[0]\nmmax = arr[0]\nans = 0\nfor i in range(1, n):\n\tif arr[i] > mmax:\n\t\tans += 1\n\t\tmmax = arr[i]\n\tif arr[i] < mmin:\n\t\tmmin = arr[i]\n\t\tans += 1\nprint(ans)"
        },
        {
            "language": 3,
            "solution": "import sys\nn = int(input())\nelems = list(map(int, input().split()))\nlow,high = elems[0], elems[0]\n\ncount = 0\nfor elem in elems:\n\tif elem>high:\n\t\tcount += 1\n\t\thigh = elem\n\tif elem<low:\n\t\tcount += 1\n\t\tlow = elem\nprint(count)\n"
        },
        {
            "language": 4,
            "solution": "\n\nimport java.io.DataInputStream; \nimport java.io.FileInputStream; \nimport java.io.IOException; \nimport java.io.InputStreamReader; \nimport java.util.*; \nimport java.util.StringTokenizer; \n\npublic class Main \n{ \n\tstatic class Reader \n\t{ \n\t\tfinal private int BUFFER_SIZE = 1 << 16; \n\t\tprivate DataInputStream din; \n\t\tprivate byte[] buffer; \n\t\tprivate int bufferPointer, bytesRead; \n\n\t\tpublic Reader() \n\t\t{ \n\t\t\tdin = new DataInputStream(System.in); \n\t\t\tbuffer = new byte[BUFFER_SIZE]; \n\t\t\tbufferPointer = bytesRead = 0; \n\t\t} \n\n\t\tpublic Reader(String file_name) throws IOException \n\t\t{ \n\t\t\tdin = new DataInputStream(new FileInputStream(file_name)); \n\t\t\tbuffer = new byte[BUFFER_SIZE]; \n\t\t\tbufferPointer = bytesRead = 0; \n\t\t} \n\n\t\tpublic String readLine() throws IOException \n\t\t{ \n\t\t\tbyte[] buf = new byte[64]; // line length \n\t\t\tint cnt = 0, c; \n\t\t\twhile ((c = read()) != -1) \n\t\t\t{ \n\t\t\t\tif (c == '\\n') \n\t\t\t\t\tbreak; \n\t\t\t\tbuf[cnt++] = (byte) c; \n\t\t\t} \n\t\t\treturn new String(buf, 0, cnt); \n\t\t} \n\n\t\tpublic int nextInt() throws IOException \n\t\t{ \n\t\t\tint ret = 0; \n\t\t\tbyte c = read(); \n\t\t\twhile (c <= ' ') \n\t\t\t\tc = read(); \n\t\t\tboolean neg = (c == '-'); \n\t\t\tif (neg) \n\t\t\t\tc = read(); \n\t\t\tdo\n\t\t\t{ \n\t\t\t\tret = ret * 10 + c - '0'; \n\t\t\t} while ((c = read()) >= '0' && c <= '9'); \n\n\t\t\tif (neg) \n\t\t\t\treturn -ret; \n\t\t\treturn ret; \n\t\t} \n\n\t\tpublic long nextLong() throws IOException \n\t\t{ \n\t\t\tlong ret = 0; \n\t\t\tbyte c = read(); \n\t\t\twhile (c <= ' ') \n\t\t\t\tc = read(); \n\t\t\tboolean neg = (c == '-'); \n\t\t\tif (neg) \n\t\t\t\tc = read(); \n\t\t\tdo { \n\t\t\t\tret = ret * 10 + c - '0'; \n\t\t\t} \n\t\t\twhile ((c = read()) >= '0' && c <= '9'); \n\t\t\tif (neg) \n\t\t\t\treturn -ret; \n\t\t\treturn ret; \n\t\t} \n\n\t\tpublic double nextDouble() throws IOException \n\t\t{ \n\t\t\tdouble ret = 0, div = 1; \n\t\t\tbyte c = read(); \n\t\t\twhile (c <= ' ') \n\t\t\t\tc = read(); \n\t\t\tboolean neg = (c == '-'); \n\t\t\tif (neg) \n\t\t\t\tc = read(); \n\n\t\t\tdo { \n\t\t\t\tret = ret * 10 + c - '0'; \n\t\t\t} \n\t\t\twhile ((c = read()) >= '0' && c <= '9'); \n\n\t\t\tif (c == '.') \n\t\t\t{ \n\t\t\t\twhile ((c = read()) >= '0' && c <= '9') \n\t\t\t\t{ \n\t\t\t\t\tret += (c - '0') / (div *= 10); \n\t\t\t\t} \n\t\t\t} \n\n\t\t\tif (neg) \n\t\t\t\treturn -ret; \n\t\t\treturn ret; \n\t\t} \n\n\t\tprivate void fillBuffer() throws IOException \n\t\t{ \n\t\t\tbytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE); \n\t\t\tif (bytesRead == -1) \n\t\t\t\tbuffer[0] = -1; \n\t\t} \n\n\t\tprivate byte read() throws IOException \n\t\t{ \n\t\t\tif (bufferPointer == bytesRead) \n\t\t\t\tfillBuffer(); \n\t\t\treturn buffer[bufferPointer++]; \n\t\t} \n\n\t\tpublic void close() throws IOException \n\t\t{ \n\t\t\tif (din == null) \n\t\t\t\treturn; \n\t\t\tdin.close(); \n\t\t} \n\t} \n\n\tpublic static void main(String[] args) throws IOException \n\t{ \n\t\tReader in=new Reader(); \n\n\nint n=in.nextInt();\nint arr[]=new int[n];\nfor(int i=0;i<n;i++)\narr[i]=in.nextInt();\nint max=arr[0];\nint min=arr[0];\nint count=0;\nfor(int i=1;i<n;i++){\n    //System.out.println(i);\n    if(max<arr[i]){\n        max=arr[i];\n      //  System.out.print(max);\n        count++;\n    }\n    if(min>arr[i]){\n        min=arr[i];\n        //System.out.print(\" \"+min+\"\\n\");\n        count++;\n    }\n}\nSystem.out.println(count);\n\n\n\n\n\n\n\n\n}\n\t/*\tGCD      */\n\n\n static int gcd(int a, int b) \n    { \n      if (b == 0) \n        return a; \n      return gcd(b, a % b);  \n    } \n\n\t\t/*quick sort in java */\n\n\n static int partition(int arr[], int low, int high) \n    { \n        int pivot = arr[high];  \n        int i = (low-1); // index of smaller element \n        for (int j=low; j<high; j++) \n        { \n            // If current element is smaller than or \n            // equal to pivot \n            if (arr[j] <= pivot) \n            { \n                i++; \n  \n                // swap arr[i] and arr[j] \n                int temp = arr[i]; \n                arr[i] = arr[j]; \n                arr[j] = temp; \n            } \n        } \n  \n        // swap arr[i+1] and arr[high] (or pivot) \n        int temp = arr[i+1]; \n        arr[i+1] = arr[high]; \n        arr[high] = temp; \n  \n        return i+1; \n    } \n  \n  \n  static   void quick_sort(int arr[], int low, int high) \n    { \n        if (low < high) \n        { \n            /* pi is partitioning index, arr[pi] is  \n              now at right place */\n            int pi = partition(arr, low, high); \n  \n            // Recursively sort elements before \n            // partition and after partition \n        quick_sort(arr, low, pi-1); \n         quick_sort(arr, pi+1, high); \n        } \n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split(\" \")))\nl=[a[0]]\nc=0\nfor i in range(1,n):\n\tif a[i]  not in l:\n\t\tl.append(a[i])\n\t\tif a[i]==max(l) or a[i]==min(l):\n\t\t\tc+=1\nprint(c)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\n\nmi, ma=10002, -1\nc=-2\n\nfor i in map(int,input().split()):\n    if i>ma:\n        ma=i\n        c+=1\n    if i<mi:\n        mi=i\n        c+=1\n\nprint(c)"
        },
        {
            "language": 3,
            "solution": "#__author__ = 'Anonymeyll'\ninput()\na = [int(x) for x in input().split()]\nmi = a[0]\nma = mi\nt = 0\nfor i in a:\n\tif i > ma:\n\t\tma = i\n\t\tt += 1\n\telif i < mi:\n\t\tmi = i\n\t\tt += 1\nprint(t)"
        },
        {
            "language": 4,
            "solution": "import java.io.IOException;\nimport java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) throws IOException {\n//        FileReader file = new FileReader(\"input.txt\");\n//        FileWriter fw = new FileWriter(\"output.txt\");\n        Scanner in = new Scanner(System.in);\n        int t = in.nextInt();\n        int []Q = new int[t];\n        for (int i = 0; i < Q.length; i++)\n            Q[i] = in.nextInt();\n\n        int a = 0, r = 0, l =0;\n        for (int i = 1; i < Q.length; i++) {\n            for (int j = 0; j < i; j++) {\n                if (Q[i] > Q[j])\n                    r++;\n                else if (Q[i] < Q[j])\n                    l++;\n            }\n//            System.out.println(r + \" \"+ l);\n            if (r == i || l == i)\n                a++;\n            r=0;\n            l=0;\n        }\n        System.out.println(a);\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid err(istream_iterator<string> it) {}\ntemplate <typename T, typename... Args>\nvoid err(istream_iterator<string> it, T a, Args... args) {\n  cerr << *it << \" = \" << a << endl;\n  err(++it, args...);\n}\nstruct custom_hash {\n  static uint64_t splitmix64(uint64_t x) {\n    x += 0x9e3779b97f4a7c15;\n    x = (x ^ (x >> 30)) * 0xbf58476d1ce4e5b9;\n    x = (x ^ (x >> 27)) * 0x94d049bb133111eb;\n    return x ^ (x >> 31);\n  }\n  size_t operator()(uint64_t x) const {\n    static const uint64_t FIXED_RANDOM =\n        chrono::steady_clock::now().time_since_epoch().count();\n    return splitmix64(x + FIXED_RANDOM);\n  }\n};\nlong long powermod(long long x, long long n, long long M) {\n  long long result = 1;\n  while (n > 0) {\n    if (n % 2 == 1) result = (result * x) % M;\n    x = (x * x) % M;\n    n = n / 2;\n  }\n  return result;\n}\nvector<long long> readll() {\n  cin >> ws;\n  vector<long long> v;\n  string input;\n  getline(cin, input);\n  cout << input;\n  istringstream is(input);\n  long long num;\n  while (is >> num) v.push_back(num);\n  return v;\n}\nlong long modinv(long long n, long long p) { return powermod(n, p - 2, p); }\nlong long gcd(long long a, long long b) { return b ? gcd(b, a % b) : a; }\nlong long fact[1000005], invf[1000005];\nvoid facmod(long long n, long long M) {\n  long long i;\n  fact[0] = fact[1] = 1;\n  for (i = 2; i <= n; ++i) {\n    fact[i] = ((fact[i - 1]) % M * (i % M)) % M;\n  }\n  invf[n] = modinv(fact[n], M);\n  for (i = n - 1; i >= 0; --i) {\n    invf[i] = invf[i + 1] * (i + 1);\n    invf[i] %= M;\n  }\n}\nvoid solve() {\n  long long i, n;\n  cin >> n;\n  long long a[n + 4];\n  long long c = 0, mn = LLONG_MAX, mx = LLONG_MIN;\n  for (i = 0; i < n; ++i) {\n    cin >> a[i];\n    if (i == 0) {\n      mn = mx = a[i];\n    } else {\n      if (a[i] > mx || a[i] < mn) {\n        c++;\n        mn = min(mn, a[i]);\n        mx = max(mx, a[i]);\n      }\n    }\n  }\n  cout << c;\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  ;\n  long long t = 1;\n  while (t--) {\n    solve();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\n\nmin_a = a[0]\nmax_a = a[0]\n\nans = 0\n\nfor ai in a:\n    if ai < min_a:\n        min_a = ai\n        ans += 1\n    elif ai > max_a:\n        max_a = ai\n        ans += 1\n\nprint(ans)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\nmaks = 0\nmin = 0\nkol = 0\nfor i in range(n):\n    if i == 0:\n        maks = min = a[i]\n    if a[i]>maks:\n        kol = kol + 1\n        maks = a[i]\n    elif a[i]<min:\n        kol =kol + 1\n        min = a[i]\nprint(kol)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nkolvo = 0\nspisok = list(input().split())\nmax1 = min1 = int(spisok[0])\nfor i in spisok:\n    a=int(i)\n    if a > max1:\n        max1 = a\n        kolvo += 1\n    elif a < min1:\n        min1 = a\n        kolvo += 1\nprint (kolvo)\n"
        },
        {
            "language": 3,
            "solution": "n = input()\nlst = [int(i) for i in input().split()]\n\nMIN = lst[0]\nMAX = lst[0]\nk = 0\n\nfor i in lst:\n    if i > MAX:\n        MAX = i\n        k += 1\n    if i < MIN:\n        MIN = i\n        k += 1\n\nprint(k)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\np=[int(i) for i in input().split()]\nmax_=p[0]\nmin_=p[0]\ns=0\nfor i in range(1,n):\n    if p[i]>max_:\n        max_=p[i]\n        s+=1\n    elif p[i]<min_:\n        min_=p[i]\n        s+=1\nprint(s)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[int(i) for i in input().split()]\nl,g,c=a[0],a[0],0\nfor i in a:\n    if i>g:\n        c+=1\n        g=i\n    elif i<l:\n        c+=1\n        l=i\nprint(c)\n"
        },
        {
            "language": 3,
            "solution": "#155A-I_love_%username%\nn=int(input())\nlist1=[int(x) for x in input().split(' ')]\nc=0\nfor i in range(1,n):\n    if (list1[i] > (max(list1[:i]))) or (list1[i] < (min(list1[:i]))):\n        c+=1\nprint(c)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  int min, max, count = 0, a[n];\n  cin >> a[0];\n  min = max = a[0];\n  for (int i = 1; i < n; i++) {\n    cin >> a[i];\n    if (a[i] < min) {\n      min = a[i];\n      count++;\n    } else if (a[i] > max) {\n      count++;\n      max = a[i];\n    }\n  }\n  cout << count;\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "n=int(input())\na=map(int,raw_input().split())\nmax1=a[0]\nmin1=a[0]\ncount=0\nfor i in a:\n    if(i>max1 or i<min1):\n        count+=1\n        if(i>max1):\n            max1=i\n        else:\n            min1=i\nprint count            \n        \n    \n    \n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nls=input().split()\ns=0\nmini=int(ls[0])\nmaxi=int(ls[0])\nfor i in range(1,len(ls)):\n    if int(ls[i])<mini:\n        s+=1\n        mini=int(ls[i])\n    elif int(ls[i])>maxi:\n        s+=1\n        maxi=int(ls[i])\n    else:\n        pass\nprint(s)\n    \n\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nl1=[l[0]]\nfor i in range(1,n):\n\tif l[i]>max(l1) or l[i]<min(l1):\n\t\tl1.append(l[i])\nprint(len(l1)-1)\n"
        },
        {
            "language": 1,
            "solution": "input();seq=map(int,raw_input().split());a=[-1];b=[10001];\nfor foo in seq:\n    if foo>a[-1]:\n        a.append(foo)\n    if foo<b[-1]:\n        b.append(foo)\nprint len(a)+len(b)-4"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint main() {\n  int a[10000], n, i, count = 0, min = 0, max = 0;\n  scanf(\"%d\", &n);\n  for (i = 0; i < n; i++) {\n    scanf(\"%d\", &a[i]);\n  }\n  min = a[0];\n  max = a[0];\n  for (i = 1; i < n; i++) {\n    if (a[i] > max) {\n      max = a[i];\n      count++;\n    }\n    if (a[i] < min) {\n      min = a[i];\n      count++;\n    }\n  }\n  printf(\"%d\\n\", count);\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int,input().split()))\n\np = -10 ** 10\nm = 10 ** 10\nans = -2\n\nfor val in a:\n  if val < m:\n    ans += 1\n    m = val\n  if val > p:\n    ans += 1\n    p = val\nprint(max(ans, 0))\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nmx=l[0]\nmn=l[0]\nc=0\nfor i in range(1,n):\n    if l[i]>mx:\n        c+=1\n        mx=l[i]\n    if l[i]<mn:\n        c+=1\n        mn=l[i]\nprint(c)"
        },
        {
            "language": 3,
            "solution": "'''\nAmirhossein Alimirzaei\nTelegram : @HajLorenzo\nInstagram : amirhossein_alimirzaei\nUniversity of Bojnourd\n'''\n\nx=int(input())\nn=list(map(int,input().split()))\nc=0\ncheck=False\nfor _ in range(1,x):\n    check = True\n    for __ in range(_):\n        if(n[_]>n[__]):\n            continue\n        else:\n            check=False\n            break\n    if(check):\n        c+=1\n        #print(\"n : \",n[_])\n    else:\n        check=True\n        for __ in range(_):\n            if (n[_] < n[__]):\n                continue\n            else:\n                check = False\n                break\n        if (check):\n            c += 1\n            #print(\"n : \",n[_])\nprint(c)"
        },
        {
            "language": 1,
            "solution": "n = input()\ns= list(map(int,raw_input().split()))\nprint sum( s[i] > max(s[:i]) or s[i] < min(s[:i]) for i in range(1,n))"
        },
        {
            "language": 3,
            "solution": "# I_love_%username%\ndef amazing(arr):\n    smol = big = arr[0]\n    count = 0\n    for i in arr[1:]:\n        if (i > big):\n            count += 1\n            big = i\n        elif (i < smol):\n            count += 1\n            smol = i\n    return count\n\nn = int(input())\nx = list(map(int, input().rstrip().split()))\nprint(amazing(x))"
        },
        {
            "language": 3,
            "solution": "k = int(input())\nc = list(map(int, input().split()))\nmin_s = c[0]\nmax_s = c[0]\nans = 0\nfor i in c[1:]:\n    if i > max_s:\n        ans += 1\n        max_s = i\n    elif i < min_s:\n        ans += 1\n        min_s = i\nprint(ans)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\n*l,=map(int,input().split())\nM=0\nm=10001\nans=0\nfor i in l:\n    if i>M or i<m:\n        ans+=1\n    M=max(M,i)\n    m=min(m,i)\nprint(ans-1)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int,input().split()))\nc = 0\nl = [a[0]]\nfor i in range(1,n):\n    if a[i] not in l:\n        l.append(a[i])\n        ma = a[i]\n        mi = a[i]\n        if max(l) == ma or min(l) == mi:\n            c += 1\nprint(c)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\ns=input().split()\nx=0\nwhile x<len(s):\n    s[x]=int(s[x])\n    x=x+1\nx=1\ny=s[0]\nz=s[0]\na=0\nwhile x<len(s):\n    if s[x]>y:\n        y=s[x]\n        a=a+1\n    elif s[x]<z:\n        z=s[x]\n        a=a+1\n    x=x+1\nprint(a)\n    \n        \n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nif(n==1):\n    x=int(input())\n    print(\"0\")\nelif(n==2):\n    y,z=map(int,input().split())\n    if(y==z):\n        print(\"0\")\n    else:\n        print(\"1\")\nelif(n>2):\n    l=list(map(int,input().strip().split()))\n    s=0\n    for j in range(1,n):\n        c=d=0\n        for k in range(0,j):\n            if(l[j]>l[k]):\n                c=c+1\n            elif(l[j]<l[k]):\n                d=d+1\n        if(c==j or d==j):\n            s=s+1\n    print(s)\n\n\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nnum = list(map(int, input().split()))\nmn, mx = num[0], num[0]\na = 0\nfor i in range(1, n):\n    if mn > num[i]:\n        mn = num[i]\n        a += 1\n    if mx < num[i]:\n        mx = num[i]\n        a += 1\nprint(a)"
        },
        {
            "language": 1,
            "solution": "n=int(raw_input())\ninput=raw_input().split(\" \")\n\ninput_arr=[int(item) for item in input]\n\nresult=[input_arr[0]]\n\ni=1\nwhile i<n:\n    item=input_arr[i]\n    if min(result)>item:\n        result.append(item)\n    elif max(result)<item:\n        result.append(item)\n    i+=1\nprint(len(result[1:]))\n"
        },
        {
            "language": 1,
            "solution": "## A. I_Love_%username%\n\n\ndef main():\n    contests = int(raw_input())\n\n    scores = map(int,raw_input().split())\n\n    best= scores[0]\n    worst = scores[0]\n    amazing = 0\n\n    for i in range(len(scores)):\n        if(scores[i] < worst):\n            amazing+=1\n            worst = scores[i]\n        if(scores[i]> best):\n            amazing+=1\n            best=scores[i]\n\n    print amazing\n\n\nmain()\n"
        },
        {
            "language": 3,
            "solution": "s = int(input())\nr = list(map(int,input().split()))\nmini = r[0]\nmaxi = r[0]\ncount = 0\nfor i in range(1,s):\n    if r[i]<mini:\n        count += 1\n        mini = r[i]\n    elif r[i] > maxi:\n        count += 1\n        maxi = r[i]\nprint(count)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nz=list(map(int,input().split()))\nmini=maxi=z[0]\naw=0\nfor x in z:\n  if x < mini or x > maxi:\n    aw+=1\n    if x < mini:\n      mini = x\n    else:\n      maxi = x\nprint(aw)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nd = list(map(int, input().split()))\nb = []\nc = 0\nfor i in range(n):\n    if i == 0:\n        b.append(d[i])\n    else:\n        b.append(d[i])\n        if b[-1] > max(b[:-1]) or b[-1] < min(b[:-1]):\n            c += 1\n\nprint(c)\n"
        },
        {
            "language": 1,
            "solution": "n = input()\n\nline = raw_input().split()\nfor i in range(n):\n    line[i] = int(line[i])\n\nmins = line[0]\nmaxs = line[0]\n\nama = 0\nfor i in range(1, n):\n    if line[i] < mins:\n        ama += 1\n        mins = line[i]\n    elif line[i] > maxs:\n        ama += 1\n        maxs = line[i]\n\nprint ama\n\n"
        },
        {
            "language": 3,
            "solution": "a = int(input())\nn = 0\ns = [int(i) for i in input().split()]\nmi = s[0]\nma = s[0]\nfor i in range(a):\n    if s[i] < mi:\n        mi = s[i]\n        n+=1\n    elif s[i] > ma:\n        ma = s[i]\n        n+=1\nprint(n)\n\n    \n"
        },
        {
            "language": 1,
            "solution": "t = input()\na = [int(x) for x in raw_input().split()]\nma = a[0]\nmi = a[0]\nans = 0\nfor i in range (1,t):\n    if(ma < a[i]):\n        ans+=1\n        ma = a[i]\n    if(mi > a[i]):\n        ans+=1\n        mi = a[i]\nprint ans\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\npoints = list(map(int, input().split()))\n\nmax = min = points[0]\namazed = 0\n\nfor p in points:\n    if p > max:\n        amazed += 1\n        max = p\n    if p < min:\n        amazed += 1\n        min = p\n\nprint(amazed)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\nminn = a[0]\nmaxx = a[0]\nsum = 0\nfor i in range(len(a)):\n    if a[i] > maxx:\n        maxx = a[i]\n        sum += 1\n    if a[i] < minn:\n        minn = a[i]\n        sum += 1\nprint(sum)"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class Main \n{ \n    public static void main(String args[])\n    {\n        Scanner s = new Scanner(System.in);\n        int n=s.nextInt();\n        int temp=s.nextInt();\n        int max=temp,min=temp;\n        int cnt=0;\n        for(int i=0;i<n-1;i++)\n        {\n            int p=s.nextInt();\n            if(p>max)\n            {\n                max=p;\n                cnt++;\n            }\n            else if(p<min)\n            {\n                min=p;\n                cnt++;\n            }\n        }\n        System.out.println(cnt);\n    }\n}"
        },
        {
            "language": 1,
            "solution": "n=int(raw_input())\ns=map(int,raw_input().split())\nk=0\nmax=s[0]\nmin=s[0]\nfor i in range(1,n):\n    if max<s[i]: max=s[i]; k+=1\n    elif min>s[i]: min=s[i]; k+=1\nprint k"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\n\n/**\n * Created by \u0410\u043b\u0435\u043a\u0441\u0435\u0439 on 06/26/2016.\n */\n\n\nimport java.io.*;\nimport java.util.*;\nimport static java.lang.Math.min;\nimport static java.lang.Math.random;\n//import static java.lang.Math.;\n\n\n\npublic class TriangleEasy {\n    public static void main(String [] args){\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        Integer readFromFile=new Integer(1);\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskD solver = new TaskD();\n        solver.solve(1, in, out);\n        out.close();\n    }\n    static class TaskD {\n        public void solve(int testNumber, InputReader in, PrintWriter out) {\n            int n = in.nextInt();\n            int minValue = in.nextInt();\n            int maxValue = minValue;\n            int answer = 0;\n            while(--n>0){\n                int value = in.nextInt();\n                if(value>maxValue){\n                    maxValue = value;\n                    answer++;\n                }else if(value<minValue){\n                    minValue =value;\n                    answer++;\n                }\n            }\n            out.println(answer);\n        }\n    }\n    static class InputReader {\n        BufferedReader br;\n        StringTokenizer st;\n        String st1;\n        File file = new File(\"text.txt\");\n        public InputReader(InputStream in) {\n            br = new BufferedReader(new InputStreamReader(in));\n            st = null;\n        }\n        public InputReader(int i) {\n            try {\n                br  = new BufferedReader(\n                        new InputStreamReader(new FileInputStream(file)));\n            } catch (FileNotFoundException e1) {\n                System.out.println(\"File is not find\");\n            }\n            st = null;\n        }\n        public String next(){\n            while (st==null || !st.hasMoreTokens()){\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return st.nextToken();\n        }\n        public String nextLine(){\n            try {\n                st1 = new String(br.readLine());\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n            return st1;\n        }\n        public int nextInt()  {\n            return Integer.parseInt(next());\n        }\n        public long nextLong(){\n            return Long.parseLong(next());\n        }\n        public Double nextDouble(){\n            return Double.parseDouble(next());\n        }\n        public Byte nextByte() {\n            return Byte.parseByte(next());\n        }\n        //public Character nextChar() {return Character.}\n        public void newFile() {\n            try {\n                FileWriter write = new FileWriter(file);\n                write.write(1);\n                write.close();\n\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "#155A\nsize=int(input())\ncounter=0\nlist_=input().split()\nfor i in range(0,size):\n    list_[i]=int(list_[i])\nmax=min=list_[0]\nfor i in range(1,size):\n    if list_[i]>max:\n        counter+=1\n        max=list_[i]\n        #print(\"iteration:flag1\",i)\n        #print(\"value of max:\",max)\n    if list_[i]<min:\n        counter+=1\n        min=list_[i]\n        #print(\"iteration:flag2\",i)\n        #print(\"value of min:\",min)\nprint(counter)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\ns = [int(i) for i in input().split()]\nres = 0\nmmin = s[0]\nmmax = s[0]\nfor i in s:\n    if i > mmax:\n        res += 1\n        mmax = i\n    elif i < mmin:\n        res += 1\n        mmin = i\nprint(res)\n"
        },
        {
            "language": 3,
            "solution": "n = input()\ns = input()\ns = s.split(' ')\n\ns = list(map(int, s))\nn = int(n)\n\nmaxx = minn = s[0]\nout = 0\n\nfor i in range(1, n):\n    if s[i] > maxx or s[i] < minn:\n        out += 1\n        if s[i] > maxx:\n            maxx = s[i]\n        elif s[i] < minn:\n            minn = s[i]\n\nprint(out)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nb=[a[0]]\nm=0\nfor i in range(1,n):\n\tx=a[i]\n\tb.append(x)\n\tif (min(b)==x or max(b)==x) and b.count(x)==1:\n\t\tm+=1\nprint(m)"
        },
        {
            "language": 3,
            "solution": "num_contests = int(input())\ncontests_points = list(map(int, input().split()))\nmax = contests_points[0]\nmin = contests_points[0]\namazings = 0\nfor contest in range(1, num_contests):\n    if contests_points[contest] > max:\n        amazings += 1\n        max = contests_points[contest]\n    if contests_points[contest] < min:\n        amazings += 1\n        min = contests_points[contest]\nprint(amazings)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input(''))\nc = list(map(int, input().split()[:n]))\ndic = dict()\nz = 0\nma = c[0]\nmi = c[0]\nif n == 1:\n    print(z)\nelse:\n    for i in range(1,n):\n        if c[i] < ma:\n            ma = c[i]\n            z+=1\n        if c[i] > mi:\n            mi = c[i]\n            z += 1\n    print(z)\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint main() {\n  int n, max, min, k = 0;\n  scanf(\"%d\", &n);\n  int a[n];\n  scanf(\"%d\", &a[0]);\n  max = a[0];\n  min = max;\n  for (int i = 1; i <= n; i++) {\n    if (i < n) {\n      scanf(\"%d\", &a[i]);\n    }\n    if (a[i - 1] > max) {\n      max = a[i - 1];\n      k++;\n    }\n    if (a[i - 1] < min) {\n      min = a[i - 1];\n      k++;\n    }\n  }\n  printf(\"%d\", k);\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nc=0\nmax=l[0]\nmin=l[0]\nfor i in range(0,len(l)):\n    if(l[i]>max):\n        max=l[i]\n        c=c+1\n    if(l[i]<min):\n        min=l[i]\n        c=c+1\nprint(c)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = list(map(int, input().split(' ')))\no = 0\nfor i in range(1, len(l)):\n    k = (l[i])\n    if l[i] == max(l[0:i + 1]) or l[i] == min(l[0:i + 1]):\n        if not l[i] in l[0:i]:\n            o += 1\n        else:\n            continue\nprint(o)\n"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\nmax = -1\nmin = 0x7fffffff\ncnt = 0\nfor s in raw_input().split():\n    tmp = int(s)\n    if max < tmp:\n        cnt += 1\n        max = tmp\n    if min > tmp:\n        cnt += 1\n        min = tmp\nprint cnt-2"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nscores=list(map(int,input().split(\" \")))\nc=0\ns=l=scores[0]\nfor scores in scores[1:]:\n\tif scores>l:\n\t\tl=scores\n\t\tc+=1\n\telif scores<s:\n\t\tc+=1\n\t\ts=scores\nprint(c)"
        },
        {
            "language": 1,
            "solution": "n=int(input())\nlst=map(int,raw_input().split())\nlst1=[]\nlst1.append(lst[0])\ndel lst[0]\nc=0\nfor i in range(0,len(lst)):\n    m=min(lst1)\n    M=max(lst1)\n    if lst[i]<m or lst[i]>M:\n        c=c+1\n    lst1.append(lst[i])\nprint c\n\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nr = [int(i) for i in input().split()]\ntotal = 0\nfor i in range(1,n):\n    if r[i] < min(i for i in r[0:i]):\n        total += 1\n    elif r[i] >max(k for k in r[0:i]):\n        total += 1\nprint(total)\n"
        },
        {
            "language": 3,
            "solution": "def main():\n    n = int(input())\n    s = list(map(int, input().split()))\n    maxv = s[0]\n    minv = s[0]\n    count = 0\n    for i in s:\n        if i > maxv:\n            maxv = i\n            count += 1\n        if i < minv:\n            minv = i\n            count += 1\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n"
        },
        {
            "language": 1,
            "solution": "a=input()\nb=raw_input()\nlist=[]\nlist=b.split()\ncount=0\nif a==1:\n    print 0\nelif a<=1000 and len(list)<10000 :\n    min=int(list[0])\n    max=int(list[0])\n    for i in range(1,a):\n        if int(list[i])>max:\n            max=int(list[i])\n            count+=1\n        elif int(list[i])<min:\n            min=int(list[i])\n            count+=1\n    print count\n        "
        },
        {
            "language": 3,
            "solution": "n = int(input())\nm =[int (x) for x in input().split()]\n\nmin1 = max1 = m[0]\ncounter = 0\nfor i in m[1:]:\n    if(i < min1):\n        min1 = i\n        counter+=1\n    if(i > max1):\n        max1 = i\n        counter+=1\n\n\nprint(counter)\n\n\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(input().split())\nwonderfull = 0\nfor i in range(n):\n    m = 0\n    b = 0\n    for k in range(i):\n        if int(a[i]) > int(a[k]):\n            b += 1\n        elif int(a[i]) < int(a[k]):\n            m += 1\n    if m == 0 and b == i:\n        wonderfull += 1\n    elif m == i and b == 0:\n        wonderfull += 1\nprint(wonderfull-1)\n"
        },
        {
            "language": 3,
            "solution": "# SHRi GANESHA    author: Kunal Verma #\n\nimport os\nfrom collections import Counter, defaultdict\n\nfrom io import BytesIO, IOBase\n\n\nimport math\nimport sys\nclass SortedList:\n    def __init__(self, iterable=None, _load=200):\n        \"\"\"Initialize sorted list instance.\"\"\"\n        if iterable is None:\n            iterable = []\n        values = sorted(iterable)\n        self._len = _len = len(values)\n        self._load = _load\n        self._lists = _lists = [values[i:i + _load] for i in range(0, _len, _load)]\n        self._list_lens = [len(_list) for _list in _lists]\n        self._mins = [_list[0] for _list in _lists]\n        self._fen_tree = []\n        self._rebuild = True\n\n    def _fen_build(self):\n        \"\"\"Build a fenwick tree instance.\"\"\"\n        self._fen_tree[:] = self._list_lens\n        _fen_tree = self._fen_tree\n        for i in range(len(_fen_tree)):\n            if i | i + 1 < len(_fen_tree):\n                _fen_tree[i | i + 1] += _fen_tree[i]\n        self._rebuild = False\n\n    def _fen_update(self, index, value):\n        \"\"\"Update `fen_tree[index] += value`.\"\"\"\n        if not self._rebuild:\n            _fen_tree = self._fen_tree\n            while index < len(_fen_tree):\n                _fen_tree[index] += value\n                index |= index + 1\n\n    def _fen_query(self, end):\n        \"\"\"Return `sum(_fen_tree[:end])`.\"\"\"\n        if self._rebuild:\n            self._fen_build()\n\n        _fen_tree = self._fen_tree\n        x = 0\n        while end:\n            x += _fen_tree[end - 1]\n            end &= end - 1\n        return x\n\n    def _fen_findkth(self, k):\n        \"\"\"Return a pair of (the largest `idx` such that `sum(_fen_tree[:idx]) <= k`, `k - sum(_fen_tree[:idx])`).\"\"\"\n        _list_lens = self._list_lens\n        if k < _list_lens[0]:\n            return 0, k\n        if k >= self._len - _list_lens[-1]:\n            return len(_list_lens) - 1, k + _list_lens[-1] - self._len\n        if self._rebuild:\n            self._fen_build()\n\n        _fen_tree = self._fen_tree\n        idx = -1\n        for d in reversed(range(len(_fen_tree).bit_length())):\n            right_idx = idx + (1 << d)\n            if right_idx < len(_fen_tree) and k >= _fen_tree[right_idx]:\n                idx = right_idx\n                k -= _fen_tree[idx]\n        return idx + 1, k\n\n    def _delete(self, pos, idx):\n        \"\"\"Delete value at the given `(pos, idx)`.\"\"\"\n        _lists = self._lists\n        _mins = self._mins\n        _list_lens = self._list_lens\n\n        self._len -= 1\n        self._fen_update(pos, -1)\n        del _lists[pos][idx]\n        _list_lens[pos] -= 1\n\n        if _list_lens[pos]:\n            _mins[pos] = _lists[pos][0]\n        else:\n            del _lists[pos]\n            del _list_lens[pos]\n            del _mins[pos]\n            self._rebuild = True\n\n    def _loc_left(self, value):\n        \"\"\"Return an index pair that corresponds to the first position of `value` in the sorted list.\"\"\"\n        if not self._len:\n            return 0, 0\n\n        _lists = self._lists\n        _mins = self._mins\n\n        lo, pos = -1, len(_lists) - 1\n        while lo + 1 < pos:\n            mi = (lo + pos) >> 1\n            if value <= _mins[mi]:\n                pos = mi\n            else:\n                lo = mi\n\n        if pos and value <= _lists[pos - 1][-1]:\n            pos -= 1\n\n        _list = _lists[pos]\n        lo, idx = -1, len(_list)\n        while lo + 1 < idx:\n            mi = (lo + idx) >> 1\n            if value <= _list[mi]:\n                idx = mi\n            else:\n                lo = mi\n\n        return pos, idx\n\n    def _loc_right(self, value):\n        \"\"\"Return an index pair that corresponds to the last position of `value` in the sorted list.\"\"\"\n        if not self._len:\n            return 0, 0\n\n        _lists = self._lists\n        _mins = self._mins\n\n        pos, hi = 0, len(_lists)\n        while pos + 1 < hi:\n            mi = (pos + hi) >> 1\n            if value < _mins[mi]:\n                hi = mi\n            else:\n                pos = mi\n\n        _list = _lists[pos]\n        lo, idx = -1, len(_list)\n        while lo + 1 < idx:\n            mi = (lo + idx) >> 1\n            if value < _list[mi]:\n                idx = mi\n            else:\n                lo = mi\n\n        return pos, idx\n\n    def add(self, value):\n        \"\"\"Add `value` to sorted list.\"\"\"\n        _load = self._load\n        _lists = self._lists\n        _mins = self._mins\n        _list_lens = self._list_lens\n\n        self._len += 1\n        if _lists:\n            pos, idx = self._loc_right(value)\n            self._fen_update(pos, 1)\n            _list = _lists[pos]\n            _list.insert(idx, value)\n            _list_lens[pos] += 1\n            _mins[pos] = _list[0]\n            if _load + _load < len(_list):\n                _lists.insert(pos + 1, _list[_load:])\n                _list_lens.insert(pos + 1, len(_list) - _load)\n                _mins.insert(pos + 1, _list[_load])\n                _list_lens[pos] = _load\n                del _list[_load:]\n                self._rebuild = True\n        else:\n            _lists.append([value])\n            _mins.append(value)\n            _list_lens.append(1)\n            self._rebuild = True\n\n    def discard(self, value):\n        \"\"\"Remove `value` from sorted list if it is a member.\"\"\"\n        _lists = self._lists\n        if _lists:\n            pos, idx = self._loc_right(value)\n            if idx and _lists[pos][idx - 1] == value:\n                self._delete(pos, idx - 1)\n\n    def remove(self, value):\n        \"\"\"Remove `value` from sorted list; `value` must be a member.\"\"\"\n        _len = self._len\n        self.discard(value)\n        if _len == self._len:\n            raise ValueError('{0!r} not in list'.format(value))\n\n    def pop(self, index=-1):\n        \"\"\"Remove and return value at `index` in sorted list.\"\"\"\n        pos, idx = self._fen_findkth(self._len + index if index < 0 else index)\n        value = self._lists[pos][idx]\n        self._delete(pos, idx)\n        return value\n\n    def bisect_left(self, value):\n        \"\"\"Return the first index to insert `value` in the sorted list.\"\"\"\n        pos, idx = self._loc_left(value)\n        return self._fen_query(pos) + idx\n\n    def bisect_right(self, value):\n        \"\"\"Return the last index to insert `value` in the sorted list.\"\"\"\n        pos, idx = self._loc_right(value)\n        return self._fen_query(pos) + idx\n\n    def count(self, value):\n        \"\"\"Return number of occurrences of `value` in the sorted list.\"\"\"\n        return self.bisect_right(value) - self.bisect_left(value)\n\n    def __len__(self):\n        \"\"\"Return the size of the sorted list.\"\"\"\n        return self._len\n\n    def __getitem__(self, index):\n        \"\"\"Lookup value at `index` in sorted list.\"\"\"\n        pos, idx = self._fen_findkth(self._len + index if index < 0 else index)\n        return self._lists[pos][idx]\n\n    def __delitem__(self, index):\n        \"\"\"Remove value at `index` from sorted list.\"\"\"\n        pos, idx = self._fen_findkth(self._len + index if index < 0 else index)\n        self._delete(pos, idx)\n\n    def __contains__(self, value):\n        \"\"\"Return true if `value` is an element of the sorted list.\"\"\"\n        _lists = self._lists\n        if _lists:\n            pos, idx = self._loc_left(value)\n            return idx < len(_lists[pos]) and _lists[pos][idx] == value\n        return False\n\n    def __iter__(self):\n        \"\"\"Return an iterator over the sorted list.\"\"\"\n        return (value for _list in self._lists for value in _list)\n\n    def __reversed__(self):\n        \"\"\"Return a reverse iterator over the sorted list.\"\"\"\n        return (value for _list in reversed(self._lists) for value in reversed(_list))\n\n    def __repr__(self):\n        \"\"\"Return string representation of sorted list.\"\"\"\n        return 'SortedList({0})'.format(list(self))\n\ndef primes(n):\n\n    z=[]\n    x=1\n    while (n%2==0):\n\n        n=n//2\n        z.append(2)\n\n\n    for i in range(3, math.ceil(math.sqrt(n))+1, 2):\n        x=1\n        while n%i==0:\n\n\n            n=n//i\n\n            z.append(i)\n\n    if n>2:\n        z.append(n)\n\n    w= Counter(z)\n    x=[1 for i in range(max(w.values())) ]\n    for j in w:\n        for q in range(w[j]):\n            x[q]*=j\n\n    return x[::-1]\n\n\n\n\n\ndef main():\n    n=int(input())\n    a=[int(X) for X in input().split()]\n    x=[]\n    an=1\n    for i in a:\n        if len(x):\n            if i>x[-1]:\n                an+=1\n            elif i<x[0]:\n                an+=1\n        x.append(i)\n        x.sort()\n    print(an-1)\n# Fast IO Region\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\nif __name__ == '__main__':\n    main()"
        },
        {
            "language": 3,
            "solution": "x = int(input())\np = input().split()\np = [int(char) for char in p]\nans = 0\nmax_score = 0\nmin_score = 0\n\nfor i in range(x):\n    if i == 0:\n        max_score = p[i]\n        min_score = p[i]\n    else:\n        if p[i] > max_score:\n            max_score = p[i]\n            ans += 1\n        elif p[i] < min_score:\n            min_score = p[i]\n            ans += 1\n\nprint(ans)\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\n#pragma GCC optimize(\"Ofast,no-stack-protector,unroll-loops\")\n#pragma GCC optimize(\"no-stack-protector,fast-math\")\nusing namespace std;\ndouble PI = 3.1415926535897;\nconst int N = 1e5 + 5, M = 1e2 + 5, MOD = 1e9 + 7, inf = 0x3f3f3f3f;\nint n, ans, mn = 1e9 + 5, mx = -1e9 + 5, ar[N];\nint main() {\n  ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);\n  ;\n  scanf(\"%d\", &n);\n  for (int i = 0; i < n; i++) scanf(\"%d\", ar + i);\n  for (int i = 0; i < n; i++) {\n    if (i == 0) mx = mn = ar[i];\n    if (mx < ar[i]) ans++, mx = ar[i];\n    if (mn > ar[i]) ans++, mn = ar[i];\n  }\n  printf(\"%d\\n\", ans);\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\ncount = 0\nl = list(map(int,input().split()))\nmxm = mnm = l[0]\nfor i in range(1,n):\n    if l[i] > mxm or l[i] < mnm:\n        count += 1\n    mxm = max(mxm,l[i])\n    mnm = min(mnm,l[i])\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\ncountr =0\nl = [int(i) for i in input().split()]\nfor i in range(1,n):\n  if l[i] > max(l[0:i]) or l[i]< min(l[0:i]):\n    countr = countr + 1\nprint(countr)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[int(i) for i in input().split()]\ns=0\nc=a[0]\nd=a[0]\nfor i in range(0,n):\n    if a[i]>c:\n        c=a[i]\n        s=s+1\n    if a[i]<d:\n        d=a[i]\n        s=s+1\nprint(s)\n    \n"
        },
        {
            "language": 3,
            "solution": "input();f=1;c=0\nfor x in map(int,input().split()):\n    if f:\n        a=b=x\n        f=0\n    else:\n        if x<a or x>b:\n            c+=1\n        a=min(a,x)\n        b=max(b,x)\nprint(c)\n\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nmax=-1\nmin=10001\ncount=0\nz=input().split()\nfor x in z:\n    x=int(x)\n    if x > max :\n        count+=1\n        max=x\n    if x < min :\n        count+=1\n        min=x\nprint(count-2)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid solve() {\n  int n, max, min, a[1000000], count = 0, i;\n  cin >> n;\n  for (i = 0; i < n; i++) {\n    cin >> a[i];\n  }\n  max = a[0];\n  min = a[0];\n  for (i = 1; i < n; i++) {\n    if (a[i] > max) {\n      max = a[i];\n      count++;\n    } else if (a[i] < min) {\n      min = a[i];\n      count++;\n    }\n  }\n  cout << count;\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  solve();\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=input()\nn=int(n)\nscore=[int(x) for x in input().split()]\namazing=0\nfor i in range(1,n):\n    if (score[i] > max(score[:i])) or (score[i] < min(score[:i])):\n            amazing=amazing+1\nprint(amazing)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst double PI = M_PI;\nconst int INF = -1 * 1e9;\nconst long long limit = -1 * 1e16;\nconst int MOD1 = 1e9 + 711;\nconst int MOD2 = 1e9 + 933;\nconst int MOD3 = 1e9 + 993;\nconst int maxn = 1e6 + 100;\nint main() {\n  cout.tie(0);\n  cin.tie(0);\n  ios_base::sync_with_stdio(0);\n  int n;\n  cin >> n;\n  int ans = 0;\n  vector<int> a(n);\n  for (int i = 0; i < n; ++i) {\n    cin >> a[i];\n  }\n  int mi = a[0], mx = a[0];\n  for (int i = 1; i < n; ++i) {\n    if (a[i] > mx) {\n      mx = a[i];\n      ++ans;\n    }\n    if (a[i] < mi) {\n      mi = a[i];\n      ++ans;\n    }\n  }\n  cout << ans;\n  cerr << \"\\n\\nTime elapsed: \" << 1.0 * clock() / CLOCKS_PER_SEC << \" s.\\n\";\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  int input;\n  int count = 0;\n  vector<int> ar;\n  for (int i = 0; i < n; i++) {\n    cin >> input;\n    ar.push_back(input);\n  }\n  for (int i = 1; i < n; i++) {\n    auto max_it = max_element(ar.begin(), ar.begin() + i);\n    auto min_it = min_element(ar.begin(), ar.begin() + i);\n    int min = *min_it;\n    int max = *max_it;\n    if (ar[i] > max || ar[i] < min) count++;\n  }\n  cout << count;\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "s = raw_input()\nn = int(s)\n\ns = raw_input()\na = [int(i) for i in s.split()]\n\nmax = a[0]\nmin = a[0]\nans = 0\n\nfor i in range(1,n):\n    if (a[i] > max):\n        max = a[i]\n        ans = ans + 1\n    if (a[i] < min):\n        min = a[i]\n        ans = ans + 1\n\nprint ans\n"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\ns = raw_input().split(\" \")\n\nbest = int(s[0])\nworst = int(s[0])\ns = s[1:]\namazing = 0\nfor i in range(n-1):\n  score = int(s[i])\n  if score > best:\n    amazing += 1\n    best = score\n  if score < worst:\n    amazing += 1\n    worst = score\n\nprint amazing\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nscore = input().split()\nscoremax = int(score[0])\nscoremin = int(score[0])\namazing = 0\nfor i in range(n):\n    if int(score[i]) > scoremax:\n        scoremax = int(score[i])\n        amazing+=1\n    if int(score[i]) < scoremin:\n        scoremin = int(score[i])\n        amazing+=1\nprint(amazing)\n\t\t \t \t \t   \t \t\t\t \t\t\t \t  \t \t\t\t"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nc=0\nfor i in range(1,n):\n    j=i-1\n    if l[i]>l[j]:\n        while(j>=0 and l[i]>l[j]):\n            j=j-1\n        if j==-1:\n            c=c+1\n    elif l[i]<l[j]:\n        while(j>=0 and l[i]<l[j]):\n            j=j-1\n        if j==-1:\n            c=c+1\nprint(c)            "
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = [int(x) for x in input().split()]\nmin = max = a[0]\ncount = 0\nfor i in range(1,n):\n    if a[i] < min:\n        min = a[i]\n        count+=1\n    elif a[i] > max:\n        max = a[i]\n        count+=1\nprint(count)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nx = map(int, input().split())\ns = []\na = 0\nfor i in x:\n    s.append(i)\n    if i == max(s) or i == min(s):\n        a += 1\n    if s.count(i) > 1:\n        if i == max(s) or i == min(s):\n            a -= 1\nprint(a - 1)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\ndata=[int(i) for i in input().split()]\nbig=data[0]\nsmall=data[0]\ncount=0\nfor i in range(1,n):\n    if data[i]>big:\n        big=data[i]\n        count+=1\n    elif data[i]<small:\n        small=data[i]\n        count+=1\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\np=input()\np=p.split()\nc=0\na=int(p[0])\nb=int(p[0])\nfor i in range(1,n):\n    if int(p[i])>a:\n        c+=1\n        a=int(p[i])\n    if int(p[i])<b:\n        c+=1\n        b=int(p[i])\nprint(c)"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class A155 {\n    public static Scanner input=new Scanner(System.in);\n    public static void main(String[] args) {\n        int n=input.nextInt();\n        int [] ar=new int[n];\n        for(int i=0;i<n;++i){\n            ar[i]=input.nextInt();\n        }\n        int low=ar[0];\n        int high=ar[0];\n        int count=0;\n\n        for(int i=1;i<n;++i){\n            if(ar[i]>high){\n                high=ar[i];\n                count++;\n            }else if(ar[i]<low){\n                low=ar[i];\n                count++;\n            }\n        }\n        System.out.println(count);\n    }\n}"
        },
        {
            "language": 1,
            "solution": "T = input()\ns = [int(i) for i in raw_input().split()]\nc = 0\ni = 1\nmaxx = s[0]\nminn = s[0]\n\nfor i in range(len(s)):\n    if s[i]>maxx:\n        maxx = s[i]\n        c += 1\n\n    if s[i]<minn:\n        minn = s[i]\n        c += 1\nprint c\n        \n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nscores = list(map(int,input().split(' ')))\namazings = 0\nfor i in range(1, n):\n\n    max_score = max(scores[:i])\n    min_score = min(scores[:i])\n    if scores[i] > max_score or scores[i] < min_score:\n        amazings += 1\n\nprint(amazings)\n"
        },
        {
            "language": 3,
            "solution": "'''\nCreated on \u0660\u0666\u200f/\u0661\u0662\u200f/\u0662\u0660\u0661\u0664\n\n@author: mohamed265\n'''\nn = int(input())\nlis =  [ int(x) for x in input().split()]\nma = mi = lis[0]\nslon = 0\nfor i in range(1, n):\n    if lis[i] > ma:\n        ma = lis[i]\n        slon += 1\n    elif lis[i] < mi:\n        mi = lis[i]\n        slon += 1\nprint(slon)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\np = [int(_) for _ in input().split()]\n\ncount = 0\nfor i in range(1, n):  \n    if max(p[:i]) < p[i] or min(p[:i]) > p[i]:\n        count+=1\nprint(count)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nb=[]\nb.append(a[0])\nx=0\nfor i in a: \n    if i>max(b) or i<min(b):\n        x=x+1\n        b.append(i)\nprint(x)\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class Vasya {\n\n    public static void main(String[] args) {\n        // TODO Auto-generated method stub\n        Scanner scan= new Scanner(System.in);\n        \n        int n= scan.nextInt();\n        \n        int a=scan.nextInt();\n        int max=a;\n        int min=a;\n        int amazing=0;\n        for(int i=0; i<n-1; i++){\n            int t= scan.nextInt();\n            if(max<t) {amazing++; max=t;}\n            if(min>t) {amazing++; min=t;}\n        }\n        System.out.println(amazing);\n    }\n\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = [int(s) for s in input().split()]\nmax = 0\nmin = 0\ncounter = 0\nfor i in range(n):\n    if i == 0:\n        max, min = a[i], a[i]\n        continue\n    else:\n        if a[i] > max:\n            counter += 1\n            max = a[i]\n        elif a[i] < min:\n            min = a[i]\n            counter += 1\nprint(counter)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = input().split()\nk = len(a)\nmax = int(a[0])\nmin = int(a[0])\nc = 0\nfor i in range(1,k):\n    a[i] = int(a[i])\n    if a[i] > max:\n        max = a[i]\n        c += 1\n    elif a[i] < min:\n        min = a[i]\n        c += 1\nprint(c)\n\n    \n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\n\nx = y = a[0]\ncnt = 0\nfor i in range(1, n):\n    if a[i] < x:\n        x = a[i]\n        cnt += 1\n    if a[i] > y:\n        y = a[i]\n        cnt += 1\n\nprint(cnt)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nv = [int(x) for x in input().split()]\n\namazing = 0\nleast = v[0]\ngreatest = v[0]\n\nfor x in v[1:]:\n    if x > greatest:\n        greatest = x\n        amazing += 1\n    if x < least:\n        least = x\n        amazing += 1\n\nprint(amazing)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = list(map(int, input().split(' ')))\ntemp = [l[0]]\nl.pop(0)\nans = 0\nfor i in l:\n    if i>max(temp) or i<min(temp):\n        ans+=1\n    temp.append(i)\nprint(ans)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = input().split(' ')\nm = int(a[0])\nk = 0\ns = int(a[0])\nfor i in range(n):\n    a[i] = int(a[i])\n    if a[i] > m:\n        k += 1\n        m = a[i]\n    elif a[i] < s:\n        k += 1\n        s = a[i]\nprint(k)"
        },
        {
            "language": 1,
            "solution": "from sys import stdin\nrr = lambda: stdin.readline().strip()\nrrm = lambda: map(int, rr().split())\n\nN = int(rr())\nA = rrm()\nmi = ma = A[0]\nans = 0\nfor x in A[1:]:\n    if x > ma or x < mi: ans += 1\n    mi = min(mi, x)\n    ma = max(ma, x)\nprint ans\n"
        },
        {
            "language": 3,
            "solution": "n = int(input().strip())\nL = list(map(int,input().strip().split()))\nco = 0\nmaxP,lowP = -1,100000\nif n!= 1:\n    for i in range(n):\n        if L[i] > maxP:\n            maxP = L[i]\n            co += 1\n        if L[i] < lowP:\n            lowP = L[i]\n            co += 1\n    print(str(co-2))\nelse:\n    print(str(0))"
        },
        {
            "language": 3,
            "solution": "n=int(input())\n\ns=input().split()\n\nmaxx=int(s[0])\nminn=int(s[0])\n\namazing=0\n\nfor i in range(1,n):\n    x=int(s[i])\n    if(x>maxx):\n        amazing+=1\n        maxx=x\n    elif(x<minn):\n        amazing+=1\n        minn=x\nprint(amazing)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nline=input().split()\nfor i in range(n):\n    line[i]=int(line[i])\na,b=line[0],line[0]\nans=0\nfor i in range(1,n):\n    if line[i]>a:\n        a=line[i]\n        ans+=1\n    if line[i]<b:\n        b=line[i]\n        ans+=1\nprint(ans)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\ns=[int(x) for x in input().split()]\np=[s[0]]\na=0\nfor i in range(1,n):\n    if s[i]>max(p) or s[i]<min(p):\n        a+=1\n    p.append(s[i])\nprint(a)"
        },
        {
            "language": 3,
            "solution": "a=int(input())\nb=list(map(int,input().split()))\nbiggest=b[0]\nlowest=b[0]\ncounter=0\nfor i in range(a-1):\n    if biggest<b[i+1]:\n        biggest=b[i+1]\n        counter+=1\n    if lowest>b[i+1]:\n        lowest=b[i+1]\n        counter+=1\nprint(counter)\n  \t\t\t \t \t\t\t\t\t \t \t \t\t \t\t\t\t \t  \t\t"
        },
        {
            "language": 3,
            "solution": "def func(n):\n    k = list(map(int,input().split()))\n    first_max = k[0]\n    first_less = k[0]\n    counter = 0\n    for i in range(1,len(k)):\n        if k[i] < first_less:\n            counter += 1\n            first_less = k[i]\n        elif k[i] > first_max:\n            counter += 1\n            first_max = k[i]\n    print(counter)\nn = int(input())\nfunc(n)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nlst1=list(map(int,input().split()))[:n]\nc=0\nMax=lst1[0]\nMin=lst1[0]\nfor i in range(n):\n\tif(lst1[i]>Max):\n\t\tMax=lst1[i]\n\t\tc+=1\n\tif(lst1[i]<Min):\n\t\tMin=lst1[i]\n\t\tc+=1\nprint(c)"
        },
        {
            "language": 1,
            "solution": "#!/usr/bin/env python\nfrom sys import stdin as cin\n\ndef main():\n    n = int(next(cin))\n    s = map(int, next(cin).split())\n    m, M = s[0], s[0]\n    c = 0\n    for i in s[1:]:\n        if i < m:\n            m = i\n            c += 1\n        if i > M:\n            M = i\n            c += 1\n    return c\n\n\nprint main()\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\ns=map(int,input().split())\nmn=mx=next(s)\nans=0\nfor i in s:\n    if i<mn:ans+=1;mn=i\n    elif i>mx:ans+=1;mx=i\nprint(ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, max, min, i, x, am = 0;\n  cin >> n >> max;\n  min = max;\n  if (n == 1)\n    cout << 0;\n  else {\n    for (i = 1; i <= n; i++) {\n      cin >> x;\n      if (x > max) {\n        max = x;\n        am++;\n      }\n      if (x < min) {\n        min = x;\n        am++;\n      }\n    }\n    cout << am;\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "#I_love_%username%\n#Problem Link : http://codeforces.com/problemset/problem/155/A\n\nn , l = int(input()) , list(map(int , input().split()))\nlow , high , amazing = l[0] , l[0] , 0\nfor i in l:\n    if i > high:\n        amazing += 1\n        high = i\n    elif i < low:\n        amazing += 1\n        low = i\nprint(amazing)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = [int(i) for i in input().split()]\ndef res(a):\n    lar = a[0]\n    sma = a[0]\n    c = 0\n    for i in range(len(a)-1):\n        if( lar > a[i+1]):\n            lar = a[i+1]\n            c += 1\n        if(sma < a[i+1]):\n            sma = a[i+1]\n            c += 1\n    return c\nprint(res(a))\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class test{\n    public static void main(String[] args){\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt(),max = sc.nextInt(),min = max,sum = 0;\n        for(int i = 0;i < n-1;++i){\n            int temp = sc.nextInt();\n            if(max < temp){\n                max = temp;\n                ++sum;\n                continue;\n            }\n            else if(min > temp){\n                min = temp;\n                ++sum;\n                continue;\n            }\n        }\n        System.out.println(sum);\n        sc.close();\n    }\n\n}"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nsmallest=largest=a[0]\nans=0\nfor i in a[1:]:\n    if(i<smallest):\n        smallest=i\n        ans+=1\n    if(i>largest):\n        largest=i\n        ans+=1\nprint(ans)"
        },
        {
            "language": 1,
            "solution": "c = 0\nn = int(raw_input())\na = map(int, raw_input().split())\nfor i in range(1, n):\n  if a[i]> max(a[0:i]) or a[i]< min(a[0:i]):\n    c = c+1\nprint c"
        },
        {
            "language": 3,
            "solution": "n = int(input())\n\nnum = [int(i) for i in input().split()]\n\nMIN = num[0]\nMAX  = num[0]\ncount = 0\n\nfor i in range(1,n):\n    if num[i]>MAX:\n        MAX = num[i]\n        count += 1\n    elif num[i]<MIN:\n        MIN = num[i]\n        count += 1\n    else:\n        count = count\n\nprint(count)\n        \n    \n    \n    "
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\n\npublic class q155A {\n//  I_love_%username%\n\tpublic static void main(String[] args) {\n\t\tScanner s = new Scanner(System.in);\n\t\tint n = s.nextInt();\n\t\tint min,max,amazing=0;\n\t\tmin=s.nextInt();\n\t\tmax=min;\n\t\tfor(int i=1;i<n;i++){\n\t\t\tint j=s.nextInt();\n\t\t\tif(j<min){\n\t\t\t\tamazing++;\n\t\t\t\tmin=j;\n\t\t\t\t}\n\t\t\telse if(j>max){\n\t\t\t\tamazing++;\n\t\t\t\tmax=j;\n\t\t\t\t}\n\t\t}\n\t\tSystem.out.println(amazing);\n\t}\n}\n"
        },
        {
            "language": 3,
            "solution": "exp=int(input())\nrecodsN=[int(r) for r in input().split()]\nmaX,miN,cnt=recodsN[0],recodsN[0],0\nfor i in recodsN:\n    if maX<i:\n        maX,cnt=i,cnt+1\n    if miN>i:\n        miN,cnt=i,cnt+1\nprint(cnt)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = [int(x) for x in input().split()]\nmaxx=a[0]\ni = int(0)\nj= int(0)\nminn=a[0]\n\n\nfor x in range(0,n):\n  if a[x]>maxx:\n    maxx=a[x]\n    i+=1\nfor x in range(0,n): \n  if a[x]<minn:\n    minn=a[x]\n    j+=1\n\nif n!=1:\n\tprint(i+j)    \nif n==1:\n\tprint(0)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, a[1005], k = 0, max1, min1, l;\nint main() {\n  cin >> n;\n  for (int i = 0; i < n; i++) cin >> a[i];\n  max1 = a[0];\n  min1 = a[0];\n  for (int i = 0; i < n; i++) {\n    if (a[i] > max1) {\n      k++;\n      max1 = a[i];\n    }\n    if (a[i] < min1) {\n      k++;\n      min1 = a[i];\n    }\n  }\n  cout << k;\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\na = raw_input().split()\nmax = -1; min = -1\nam = 0\nfor s in a:\n    if max != -1 and int(s) > max:\n        max = int(s); am = am + 1\n    elif min != -1 and int(s) < min:\n        min = int(s); am = am + 1\n    elif max == -1:\n        max = int(s); min = int(s)\nprint am"
        },
        {
            "language": 3,
            "solution": "n = int(input())\ns = [int(i) for i in input().split()]\nperf = 0\nfor i in range(1,len(s)):\n    if s[i] > max(s[:i]) or s[i] < min(s[:i]):\n        perf+=1\nprint(perf)   \n        \n                    \n    \n            \n        \n\n    \n\n\n \n\n\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nmi,ma=l[0],l[0]\nc=0\nfor i in range(1,n):\n    if l[i]<mi:\n        mi=l[i]\n        c+=1\n    if l[i]>ma:\n        ma=l[i]\n        c+=1\nprint(c)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int a, ma = 0, mi = 0, ud = 0;\n  cin >> a;\n  int b[a];\n  for (int i = 0; i < a; i++) {\n    cin >> b[i];\n  }\n  ma = b[0];\n  mi = b[0];\n  for (int i = 1; i < a; i++) {\n    if (b[i] > ma) {\n      ma = b[i];\n      ud++;\n    } else if (b[i] < mi) {\n      mi = b[i];\n      ud++;\n    }\n  }\n  cout << ud;\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "import sys\ntotal = sys.stdin.readline().strip()\ng= sys.stdin.readline().strip().split() \ncount=0\nmini = -1\nmaxi = 999999\nfor i in xrange(0,int(total)):\n    if i == 0:\n        mini = g[i]\n        maxi = g[i]\n    else:\n        if int(g[i])>int(maxi):\n            maxi = g[i]\n            count+=1\n        elif int(g[i])<int(mini):\n            mini = g[i]\n            count+=1 \nsys.stdout.write(str(count))\n"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\nc = map(int,raw_input().split())\nd = []\ncount = 0 \nfor i in c:\n\tif i not in d:\n\t\td.append(i)\n\t\tif(max(d)==i):\n\t\t\tcount =count+1\n\t\telif(min(d)==i):\n\t\t\tcount = count+1\nprint (count-1)\t\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint main() {\n  int n, i, cnt = 0;\n  scanf(\"%d\", &n);\n  int a[n];\n  for (i = 0; i < n; i++) {\n    scanf(\"%d\", &a[i]);\n  }\n  int maxx = a[0];\n  int minn = a[0];\n  for (i = 0; i < n; i++) {\n    if (a[i] > maxx) {\n      maxx = a[i];\n      cnt++;\n    }\n    if (a[i] < minn) {\n      minn = a[i];\n      cnt++;\n    }\n  }\n  printf(\"%d\\n\", cnt);\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nmi=a[0]\nma=a[0]\nb=mi\nc=ma\ntot=0\nfor i in range(n):\n    mi=min(a[i],mi)\n    ma=max(a[i],ma)\n    if(mi!=b):\n        tot=tot+1 \n    if(ma!=c):\n        tot=tot+1\n    b=mi \n    c=ma\nprint(tot)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nm=l[0]\nmn=l[0]\ncnt=0\nfor i in l:\n    if i>m:\n        m=i\n        cnt+=1\n    if i<mn:\n        cnt+=1\n        mn=i\nprint(cnt)"
        },
        {
            "language": 3,
            "solution": "def main():\n\tn=int(input())\n\tarr= [int(i) for i in input().split()]\n\tmi=ma=arr[0]\n\tcount=0\n\tfor i in range(1,n):\n\t\tif  arr[i]>ma or arr[i]<mi:\n\t\t\tcount+=1\n\t\t\tmi= min(mi,arr[i])\n\t\t\tma=max(ma,arr[i])\n\tprint(count)\t\t\t\n\treturn 0\n\nif __name__ == '__main__':\n\tmain()\n"
        },
        {
            "language": 3,
            "solution": "import sys\nn=int(input())\nlist=list(map(int,sys.stdin.readline().split()))\ncount=0\na=list[:]\nmax=a[0];min=a[0];\nfor i in range(1,n) :\n    if  a[i] > max or a[i] <min :\n        count=count+1\n        if a[i] > max :\n            max=a[i]\n        else :\n            min=a[i]\nprint(count)        "
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = list(map(int,input().split()))\n# print(l)\nmi = l[0]\nma = l[0]\na = 0\nfor i in range(1,n):\n    if l[i]>ma:\n        ma = l[i]\n        a+=1\n    if l[i]<mi:\n        mi = l[i]\n        a+=1\nprint(a)\n"
        },
        {
            "language": 3,
            "solution": "l = int(input())\na = list(map(int, input().split()))\nd = []\nfor i in range(1, l):\n    if (a[i] == max(a[:i+1]) or a[i] == min(a[:i+1])) and (a[i] not in d) and (a[i] != a[0]):\n        d.append(a[i])\nprint(len(d))"
        },
        {
            "language": 3,
            "solution": "n =  int(input())\nscore = list(map(int,input().split()))\ncount = 0\nfor i in range(n):\n    if i==0:\n        continue\n    max_score = max(score[:i])\n    min_score = min(score[:i])\n    \n    if score[i]>max_score:\n#        print(\"max\",score[i],max_score)\n        count+=1\n    if score[i]<min_score:\n #       print(\"min\",score[i],min_score)\n        count+=1\nprint(count)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=[int(i) for i in input().split()]\na=0\nma=l[0]\nmi=l[0]\nfor i in range(1,n):\n    if l[i]>ma:\n        a+=1\n        ma=l[i]\n    if l[i]<mi:\n        a+=1\n        mi=l[i]\n    \nprint(a)\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class Problem11 {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        \n        int n = in.nextInt(), count=0;\n        in.nextLine();\n        int[] con = new int[n];\n        for(int i=0; i<n; i++)\n            con[i] = in.nextInt();\n        for(int i=1; i<n; i++) {\n            boolean isMore = true, isLess = true;\n            for(int j=0; j<i; j++) {\n                if(con[i] == con[j]) {\n                    isMore = false;\n                    isLess = false;\n                    break;\n                }\n                if(con[i] > con[j])\n                    isLess = false;\n                else if(con[i] < con[j])\n                    isMore = false;\n            }\n            if(isMore || isLess)\n                count++;\n        }\n        System.out.println(count);\n    }\n}"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nnum=list(map(int,input().split()))\nif len(num)==1:\n\tprint(0)\nelif len(num)==2 and num[0]==num[1]:\n\tprint(0)\nelse:\n\tf=0\n\tc=0\n\tfor i in range(1,len(num)):\n\t\tif min(num[:i+1])==max(num[:i+1]):\n\t\t\tcontinue\n\t\telif f==0:\n\t\t\tf=1\n\t\t\tmi=min(num[:i+1])\n\t\t\tma=max(num[:i+1])\n\t\t\tc+=1\n\t\tback=num[:i+1]\n\t\t#print(back)\n\t\tif min(back)<mi:\n\t\t\tc+=1\n\t\t\tmi=min(back)\n\t\tif max(back)>ma:\n\t\t\tc+=1\n\t\t\tma=max(back)\n\tprint(c)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nA = input()\nB = []\nfor i in A.split():\n    B.append(int(i))\nmax = B[0]\nmin = B[0]\nSum = 0\nfor j in range(1,n):\n    if B[j]>max:\n        Sum = Sum + 1\n        max = B[j]\n    elif B[j]<min:\n        Sum = Sum + 1\n        min = B[j]\nprint(Sum)"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.Scanner;\n\npublic class Test {\n\n    public static void main(String[] args) {\n        Scanner Input = new Scanner(System.in);\n        int N = Input.nextInt();\n        int F = Input.nextInt();\n        int Max = F, Min = F;\n        int G = 0, A = 0;\n        for (int I = 1; I < N; I++) {\n            G = Input.nextInt();\n            if (G > Max) {\n                A++;\n                Max = G;\n            } else if (G < Min) {\n                A++;\n                Min = G;\n            }\n        }\n        System.out.println(A);\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\np = list(map(int, input().split()))\namazing = 0\nfor x in range(1, n):\n    if p[x] == p[0]:\n        continue\n    elif p[x] > p[0]:\n        for y in range(1, x):\n            if p[x] <= p[y]:\n                break\n        else:\n            amazing += 1\n    elif p[x] < p[0]:\n        for y in range(1, x):\n            if p[x] >= p[y]:\n                break\n        else:\n            amazing += 1\nprint(amazing)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nline=[int(j) for j in input().split()]\ncount=0\nMAX=line[0];MIN=line[0]\nif not n==1:\n    for i in range(1,n):\n        if line[i]<MIN:\n            count+=1\n            MIN=line[i]\n        if line[i]>MAX:\n            MAX=line[i]\n            count+=1\nprint(count)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\npoints = list(input().split())\npoints = [int(i) for i in points]\nmin = points[0]\nmax = points[0]\nc = 0\nfor i in range(len(points)):\n    if points[i] > max:\n        max = points[i]\n        c+=1\n    elif points[i] < min :\n        min = points[i]\n        c+=1\nprint(c)\n"
        },
        {
            "language": 1,
            "solution": "n = input()\narr = map(int,raw_input().strip().split())\nminv = arr[0]\nmaxv = arr[0]\nans = 0\nfor i in range(1,n):\n    if arr[i]<minv:\n        ans+=1\n        minv = arr[i]\n    elif arr[i]>maxv:\n        ans+=1\n        maxv = arr[i]\nprint ans"
        },
        {
            "language": 3,
            "solution": "n = int(input())\ne = input().split(\" \")\ne = list(map(int, e))\nc = 0\nx = 0\nfor i in range(1, n):\n    if e[i] < min(e[:i]) or e[i] > max(e[:i]):\n        c += 1\n        x += 1\nprint(c)\n"
        },
        {
            "language": 3,
            "solution": "def solve(n, scores):\n    lowest = scores[0]\n    highest = scores[0]\n    count = 0\n    for i in range(1, n):\n        if scores[i] < lowest:\n            count += 1\n            lowest = scores[i]\n        if scores[i] > highest:\n            count += 1\n            highest = scores[i]\n    return count\n    \nn = int(input())\nscores = list(map(int, input().split()))\nprint(solve(n, scores))"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nnumofamazing=0\ncontest_points=list(map(int,input().split()))\n\nfor i in range(1,len(contest_points)):\n    \n    high=True\n    low=True\n    past_scores=contest_points[:i]\n    \n    for score in past_scores:\n        if(score>=contest_points[i]):\n            high=False\n            break\n    \n    for score in past_scores:\n        if(score<=contest_points[i]):\n            low=False\n            break\n\n    if(high or low):\n        numofamazing=numofamazing+1\n\nprint(numofamazing)\n\n\n    \n    \n    \n\n                    \n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class A2OJ18 {\n    public static void main(String[] args) {\n        Scanner s = new Scanner(System.in);\n\n        int n = s.nextInt();\n        int first = s.nextInt();\n        int max = first;\n        int min = first;\n        int count = 0;\n        for (int i = 1; i < n; i++) {\n            int current = s.nextInt();\n            if (max < current) {\n                max = current;\n                count++;\n            }\n            if (min > current) {\n                min = current;\n                count++;\n            }\n        }\n        System.out.println(count);\n    }\n}"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nx = list(map(int, input().split()))\nmx = mn = x[0]\ncnt = 0\n\nfor i in x[1:]:\n    if i < mn:\n        mn = i\n        cnt += 1\n\n    elif i > mx:\n        mx = i\n        cnt += 1\n\nprint(cnt)\n"
        },
        {
            "language": 3,
            "solution": "#!/usr/bin/env python3\ndef main():\n   n = int(input())\n   l = [ int(i) for i in input().split() ]\n   ans = 0\n   ma = l[0]\n   mi = l[0]\n   for i in range(1,n):\n      if l[i] > ma:\n         ans+=1\n         ma = l[i]\n      if l[i] < mi:\n         ans+=1\n         mi = l[i]\n   print(ans)\nmain()\n\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\ni=1\nmax=a[0]\nmin=a[0]\ncount=0\nwhile(i<n):\n    if a[i]<min:\n        count+=1\n        min = a[i]\n    elif a[i]>max:\n        count+=1\n        max=a[i]\n    i+=1\nprint(count)\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class solution {\n\tpublic static void main(String[] args) {\n\t\tScanner in = new Scanner(System.in);\n\t\tPrintWriter out = new PrintWriter(System.out);\n\t\tint n = in.nextInt(), min = in.nextInt(), max = min, ans = 0;\n\t\tfor (int i = 1; i < n; ++i) {\n\t\t\tint a = in.nextInt();\n\t\t\tif (a > max) {\n\t\t\t\t++ans;\n\t\t\t\tmax = a;\n\t\t\t}\n\t\t\tif (a < min) {\n\t\t\t\t++ans;\n\t\t\t\tmin = a;\n\t\t\t}\n\t\t}\n\t\tout.println(ans);\n\t\tout.flush();\n\t\treturn;\n\t}\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nk=input(\"\").split()\ncount=0\nbest = worst = int(k[0])\nfor i in range(1,n):\n\tif int(k[i]) > best:\n\t\tbest=int(k[i])\n\t\tcount+=1\n\telif int(k[i]) < worst:\n\t\tworst=int(k[i])\n\t\tcount+=1\nprint(count)"
        },
        {
            "language": 3,
            "solution": "# MANISH GUPTHA\n# VNR VIGNAYANA JOTYHI INSTITUE OF TECHNOLOGY HYDERABAD\nn=int(input())\nl=list(map(int,input().split()))\ncount=0\nmin=l[0]\nmax=l[0]\nfor i in range(1,n):\n    if(l[i]>min and max<l[i]):\n        max=l[i]\n        count=count+1\n    if l[i]<min:\n        count=count+1\n        min=l[i]\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=input().split()\nif(n==1):\n    print(0)\nelse:\n    a=0\n    for i in range(n):\n        l[i]=int(l[i])\n    if(l[0]>l[1]):\n        nowmax=l[0]\n        nowmin=l[1]\n        a+=1\n    else:\n        nowmax=l[1]\n        nowmin=l[0]\n        a+=1\n        if(l[1]==l[0]):\n            a=0\n    i=2\n    while(i<n):\n        if(l[i]>nowmax):\n            nowmax=l[i]\n            a+=1\n        elif(l[i]<nowmin):\n            nowmin=l[i]\n            a+=1\n        i+=1\n    print(a)\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Arrays;\nimport java.util.Locale;\nimport java.util.Scanner;\n\n\npublic class MainTest\n{\n    static void print(int a[])\n    {\n        for(int i=0;i<a.length;i++) System.out.print(a[i]+\" \");\n        System.out.println();\n    }\n    static int sum(int []a)\n    {\n        int res=0;\n        for(int i=0;i<a.length;i++) res+=a[i];\n        return res;\n    }\n    static int getMax()\n    {\n        int max=0;\n        int k=0;\n        for(int i=0;i<a.length;i++) if(a[i]>max) {max=a[i]; k=i;}\n        a[k]=-1;\n        return max;\n    }\n    static int a[];\n    public static void main(String args[])\n    {\n        Scanner in=new Scanner(System.in);\n        int n=in.nextInt();\n        int cur=in.nextInt();\n        int max=cur;\n        int min=cur;\n        int res=0;\n        for(int i=1;i<n;i++)\n        {\n            cur=in.nextInt();\n            if(min>cur) {min=cur; res++; continue;}\n            if(max<cur) {max=cur; res++; continue;}\n        }\n        System.out.println(res);\n    }\n}"
        },
        {
            "language": 3,
            "solution": "\n\nn=int(input())\nl=list(map(int,input().split()))\nif n==1:\n    print(0)\nelse:\n    res=1\n    if l[0]==l[1]:\n        res=0\n    for i in range(2,n):\n        if l[i]>max(l[0:i]):\n            res+=1\n        if l[i]<min(l[0:i]):\n            res+=1\n    print(res)\n        \n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nscore=input().split()\nminn=int(score[0])\nmaxx=int(score[0])\ntotal=0\nfor i in range(len(score)):\n    if(int(score[i])>maxx):\n        total+=1\n        maxx=int(score[i])\n    elif(int(score[i])<minn):\n        total+=1\n        minn=int(score[i])\nprint(total)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nc_r=list(map(int,input().split()))\nbp=c_r[0]\nwp=c_r[0]\nc=0\nfor x in range(1,len(c_r)):\n    if c_r[x]>bp:\n        bp=c_r[x]\n        c+=1\n    elif c_r[x]<wp:\n        wp=c_r[x]\n        c+=1\nprint(c)\n        "
        },
        {
            "language": 3,
            "solution": "n=int(input())\nmarks=[int(x) for x in input().split()]\ni=0\nj=0\nbest=marks[0]\nworst=marks[0]\nfor z in range (1,n):\n    if marks[z]>best:\n        best=marks[z]\n        i+=1\n    if marks[z]<worst:\n        worst=marks[z]\n        j+=1\nprint(i+j)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nscore = [int(x) for x in input().split()]\nhigh = score[0]\nlow = score[0]\nans = 0\nfor i in range(1, n):\n    if score[i] > high:\n        high = score[i]\n        ans += 1\n    elif score[i] < low:\n        low = score[i]\n        ans += 1\nprint(ans)"
        },
        {
            "language": 1,
            "solution": "n=int(raw_input())\nN=map(int,raw_input().split())\ncount=0\nfor i in range(1,n):\n    a=N[:i]\n    if N[i]>max(a) or N[i]<min(a):\n        count+=1\nprint count"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nw=0\nar=list(map(int, input().split()))\nmax=min=ar[0]\nfor i in range (1,n):\n    if ar[i]>max:\n        w+=1\n        max=ar[i]\n    if ar[i]<min:\n        w+=1\n        min=ar[i]\nprint (w)"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\nif n <= 1:\n  print 0\n  exit(0)\nvalues = list(map(int, raw_input().split()))\nmax_v = min_v = values[0]\ncnt = 0\nfor v in values[1:]:\n  if v < min_v:\n    cnt += 1\n  elif v > max_v:\n    cnt += 1\n  max_v = max(max_v, v)\n  min_v = min(min_v, v)\nprint cnt"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[int(i) for i in input().split()]\nt=0\nfor i in range(1,n):\n    b=0\n    k=0\n    bb='no'\n    kk='no'\n    z=a[i]\n    for j in range(i):\n        if z>a[j]:\n            b=b+1\n        elif z<a[j]:\n            k=k+1\n    if k==i:\n        kk='yes'\n    elif b==i:\n        bb='yes'\n    if bb=='yes' or kk=='yes':\n        t=t+1\nprint(t)\n"
        },
        {
            "language": 3,
            "solution": "input()\na = list(map(int, input().split()))\nminn = a.pop(0)\nmaxx = minn\nk = 0\nfor i in a:\n    if i > maxx:\n        maxx = i\n        k += 1\n    if i < minn:\n        minn = i\n        k += 1\nprint(k)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\na,b,c=0,0,0\nfor i in range(1,n):\n    for j in range(0,i):\n        if l[i]>l[j]:\n            a=1\n        else:\n            a=0\n            break\n    if a==1:\n        c=c+1\n    for j in range(0,i):\n        if l[i]<l[j]:\n            b=1\n        else:\n            b=0\n            break\n    if b==1:\n        c=c+1 \nprint(c)        \n"
        },
        {
            "language": 1,
            "solution": "input()\ndef a(z,x):\n  if x>z[1]:\n    z[0]+=1\n    z[1]=x\n  if x<z[2]:\n    z[0]+=1\n    z[2]=x\n  return z\nprint reduce(a,map(int,raw_input().split()),[-2,-1,1e5])[0]"
        },
        {
            "language": 3,
            "solution": "# bsdk idhar kya dekhne ko aaya hai, khud kr!!!\n# from math import *\n# from itertools import *\nt = int(input())\narr = list(map(int, input().split()))\nmin_ = arr[0]\ncount_ = 0\nmax_ = arr[0]\nfor i in range(0, t):\n    if arr[i] > max_:\n        count_ += 1\n        max_ = arr[i]\n    elif arr[i] < min_:\n        min_ = arr[i]\n        count_ += 1\n    elif min_ <= arr[i] <= max_:\n        continue\nprint(count_)\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        Scanner scanner = new Scanner(System.in);\n        //PrintWriter printWriter = new PrintWriter(new FileWriter(\"output.txt\"));\n        //Scanner scanner = new Scanner(new File(\"input.txt\"));\n        int n =scanner.nextInt();\n        int[] a = new int[n];\n        int max = -1;\n        int min = 10001;\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            a[i]=scanner.nextInt();\n            if (a[i]>max||a[i]<min){\n                if (a[i]>max){\n                    max=a[i];\n                    count++;\n                }\n                if (a[i]<min){\n                    min = a[i];\n                    count++;\n                }\n            }\n        }\n        System.out.println(count-2);\n    }\n\n}\n\n\n\n\n\n\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\nm1 = a[0]; m2 = a[0]; ans = 0\nfor i in range(1, n):\n    if a[i] > m1:\n        m1 = a[i]\n        ans += 1\n    elif a[i] < m2:\n        m2 = a[i]\n        ans += 1\nprint(ans)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\ns = input().split()\nfor i in range(n):\n    s[i] = int(s[i])\nu = 0\nmi = s[0]\nma = s[0]\nfor i in range(1,n):\n    if s[i] < mi:\n        u = u+1\n        mi = s[i]\n    if s[i] > ma:\n        u = u+1\n        ma = s[i]\nprint(u)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nb=[a[0]]\ncount=0\nfor i in a:\n    if i > max(b) or i < min (b):\n        count=count+1\n        b.append(i)\nprint(count)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nh=input().split()\na=0\nmax=int(h[0])\nmin=int(h[0])\nfor i in range(1,n):\n    mi=int(h[i])\n    if mi>max:\n        max=mi\n        a+=1\n    if mi<min:\n        min=mi\n        a+=1\nprint(a)"
        },
        {
            "language": 3,
            "solution": "from sys import stdin, stdout\nimport math,sys\nfrom itertools import permutations, combinations\nfrom collections import defaultdict,deque,OrderedDict\nimport bisect as bi\nimport heapq \n\n'''\n#------------------PYPY FAst I/o--------------------------------#\n \ndef I():return (int(stdin.readline()))\ndef In():return(map(int,stdin.readline().split()))\n'''\n#------------------Sublime--------------------------------------#\n \n#sys.stdin=open('input.txt','r');sys.stdout=open('output.txt','w');\ndef I():return (int(input()))\ndef In():return(map(int,input().split()))\n\n\n\ndef main():\n    try:\n        n=I()\n        l=list(In())\n        best,worst=l[0],l[0]\n        ans=0\n        for i in range(1,n):\n            if l[i]>best:\n                ans+=1\n                best=l[i]\n            if l[i]<worst:\n                ans+=1\n                worst=l[i]\n        print(ans)\n    except:\n        pass\n        \nM = 998244353\nP = 1000000007\n \nif __name__ == '__main__':\n    for _ in range(1):\n        main()"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))[:n]\nb=[]\ncount=0\nfor i in a:\n    if len(b)==0:\n        b.append(i)\n        continue\n    b.sort()\n    if i <b[0]:\n        count+=1\n    if i>b[len(b)-1]:\n        count+=1\n    b.append(i)\nprint(count)    \n        "
        },
        {
            "language": 3,
            "solution": "_ = input()\nscores = list(map(int, input().split()))\namazing, highest, lowest = 0, scores[0], scores[0]\n\nfor score in scores[1:]:\n    if score < lowest:\n        lowest = score\n        amazing += 1\n    elif score > highest:\n        highest = score\n        amazing += 1\n\nprint(amazing)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nmax=l[0];min=l[0];cnt=0\nfor i in range(1,len(l)):\n    if(l[i]>max):\n        cnt=cnt+1\n        max=l[i]\n    elif(l[i]<min):\n        cnt=cnt+1\n        min=l[i]\nprint(cnt)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nk=list(map(int,input().split()))\nmi=ma=k[0]\nc=0\nfor i in range(1,n):\n   if k[i]>ma:\n       ma=k[i]\n       c+=1\n   elif k[i]<mi:\n       mi=k[i]\n       c+=1\nprint(c)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  int arr[n];\n  int count = 0;\n  for (int i = 0; i < n; i++) {\n    cin >> arr[i];\n  }\n  int max = arr[0], min = arr[0];\n  for (int i = 0; i < n; i++) {\n    if (arr[i] > max) {\n      max = arr[i];\n      count++;\n    }\n    if (arr[i] < min) {\n      min = arr[i];\n      count++;\n    }\n  }\n  cout << count;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint main() {\n  int competencia[1000];\n  int n, i, mayor, menor, cont = 0;\n  do {\n    scanf(\"%d\", &n);\n  } while (n < 1 || n > 1000);\n  for (i = 0; i < n; i++) {\n    do {\n      scanf(\"%d\", &competencia[i]);\n    } while (competencia[i] < 0 || competencia[i] > 10000);\n  }\n  mayor = competencia[0];\n  menor = competencia[0];\n  for (i = 1; i < n; i++) {\n    if (competencia[i] > mayor) {\n      cont++;\n      mayor = competencia[i];\n    }\n    if (competencia[i] < menor) {\n      cont++;\n      menor = competencia[i];\n    }\n  }\n  printf(\"%d\", cont);\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nm=input().split()\nz=0\nfor i in range(n):\n    m[i]=int(m[i])\nif n==1:\n    z=0\nelse:\n    p=min(m[0],m[1])\n    q=max(m[0],m[1])\n    for i in range(2,n):\n        if m[i]<p:\n            p=m[i]\n            z=z+1\n        if p<=m[i]<=q:\n            p=p\n            z=z\n        if m[i]>q:\n            q=m[i]\n            z=z+1\n    if m[0]!=m[1]:\n        z=z+1\n    else:\n        z=z\nprint(z)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nbool isprime(long long int n) {\n  if (n == 0 || n == 1)\n    return false;\n  else {\n    for (long long int i = 2; i * i <= n; i++) {\n      if (n % i == 0) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\nlong long int nextprime(long long int n) {\n  long long int x = -1;\n  for (long long int i = n + 1;; i++) {\n    if (isprime(i)) {\n      x = i;\n      break;\n    }\n  }\n  return x;\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  long long int n;\n  cin >> n;\n  long long int arr[n];\n  for (long long int i = 0; i < n; i++) cin >> arr[i];\n  long long int mi = arr[0], mx = arr[0], count = 0;\n  for (long long int i = 1; i < n; i++) {\n    if (arr[i] < mi) {\n      mi = arr[i];\n      count++;\n    }\n    if (arr[i] > mx) {\n      mx = arr[i];\n      count++;\n    }\n  }\n  cout << count << endl;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.lang.*;\nimport java.io.*;\npublic class Main{\n     public static void main(String args[])\n     {\n          int n,i,c=0,min,max;\n          Scanner sc=new Scanner(System.in);\n          n=sc.nextInt();\n          int[] A=new int[n];\n          for(i=0;i<n;i++)\n          {\n               A[i]=sc.nextInt();\n          }\n          min=A[0];\n          max=A[0];\n          if(n==1)\n          {\n               System.out.println(0);\n          }\n          else{\n          for(i=1;i<n;i++)\n          {\n              if(A[i]>max)\n              {\n                   max=A[i];\n                   c++;\n              }\n              else if(A[i]<min)\n              {\n                   min=A[i];\n                   c++;\n              }\n          }\n          System.out.println(c);\n          }\n     }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint main() {\n  long long n;\n  scanf(\"%I64d\", &n);\n  long long a[n];\n  long long i, j;\n  for (i = 0; i < n; i++) {\n    scanf(\"%I64d\", &a[i]);\n  }\n  long long count = 0;\n  long long less = 0;\n  long long more = 0;\n  for (i = 1; i < n; i++) {\n    for (j = 0; j < i; j++) {\n      if (a[j] < a[i]) {\n        count++;\n      }\n    }\n    if (count == j) {\n      more++;\n    }\n    count = 0;\n  }\n  count = 0;\n  for (i = 1; i < n; i++) {\n    for (j = 0; j < i; j++) {\n      if (a[i] < a[j]) {\n        count++;\n      }\n    }\n    if (count == j) {\n      less++;\n    }\n    count = 0;\n  }\n  printf(\"%I64d\", (more + less));\n}\n"
        },
        {
            "language": 3,
            "solution": "__author__ = 'Bian'\nn = int(input())\ncon = [int(x) for x in input().split()]\nma , mi = con[0], con[0]\ncnt = 0\nfor i in con[1:]:\n    if i > ma:\n        ma = i\n        cnt += 1\n    elif i < mi:\n        mi = i\n        cnt += 1\nprint(cnt)"
        },
        {
            "language": 3,
            "solution": "input()\nmx = None\nmn = None\nres = 0\nfor a in map(int,input().split()):\n    if mx is None:\n        mn = a\n        mx = a\n    else:\n        if a > mx:\n            mx = a\n            res = res +1\n        if a < mn:\n            mn = a\n            res = res+1\nprint(res)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = [int(x) for x in input().split()]\np = l[0]\nq = l[0]\ns = 0\nfor i in range(1,n):\n    if l[i]>p:\n        p = l[i]\n        s += 1\n    elif l[i]<q:\n        q = l[i]\n        s += 1\nprint(s)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nif n == 1:\n    print(0)\nelse:\n    count = 0\n    contests = input().split()\n    for k in range(n):\n        contests[k] = int(contests[k])\n    for i in range(1, n):\n        if contests[i] > max(contests[:i]):\n            count = count + 1\n        if contests[i] < min(contests[:i]):\n            count = count + 1\n    print(int(count))"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nscore=[int(i)for i in input().split()]\ncount=0\nfor i in range(0,n):\n  if i==0:\n    maxx=score[i]\n    minn=score[i]\n  else:  \n    if score[i]>maxx:\n      maxx=score[i]\n      count+=1\n    if score[i]<minn:\n      minn=score[i]\n      count+=1  \nprint(count)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[int(i) for i in input().split()]\nans=0\nmaxi=a[0]\nmini=a[0]\n\nfor y in range(1,n):\n\tif(a[y]>maxi):\n\t\tmaxi=a[y]\n\t\tans+=1\n\telif(a[y]<mini):\n\t\tmini=a[y]\n\t\tans+=1\n\nprint(ans)"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Scanner;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n *\n * @author Aviously\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        Scanner in = new Scanner(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskA solver = new TaskA();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class TaskA {\n        public void solve(int testNumber, Scanner in, PrintWriter out) {\n            int n = in.nextInt();\n            int cur, best, worst;\n            int ans = 0;\n            cur = in.nextInt();\n            best = worst = cur;\n            for (int i = 1; i < n; i++) {\n                cur = in.nextInt();\n                if (cur > best) {\n                    ans++;\n                    best = cur;\n                } else if (cur < worst) {\n                    ans++;\n                    worst = cur;\n                }\n            }\n            out.println(ans);\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 1,
            "solution": "n=int(raw_input())\ns=[int(x) for x in raw_input().split()]\nc=0\nM=0\nm=0\nfor i in range(1,n):\n          M=max(s[:i])\n          m=min(s[:i])\n          if M<s[i]:\n                    c=c+1\n          elif m>s[i]:\n                    c=c+1\nprint c"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nscores=list(map(int,input().split()))\ncount=0\nbest=scores[0]\nworse=scores[0]\nfor i in range(1,n):\n    if scores[i]>best:\n        count+=1\n        best=scores[i]\n    if scores[i]<worse:\n        count+=1\n        worse=scores[i]\nprint(count)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  int a[n];\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n  }\n  int max = a[0];\n  int min = a[0];\n  int count = 0;\n  for (int i = 1; i < n; i++) {\n    if (a[i] > max) {\n      max = a[i];\n      count++;\n    } else if (a[i] < min) {\n      min = a[i];\n      count++;\n    }\n  }\n  cout << count;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nc = list(map(int, input().split()))\n\na = 0\nfor i in range(1, n):\n\tif c[i] > max(c[:i]) or c[i] < min(c[:i]):\n\t\ta += 1\n\t\nprint(a)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nm = map(int, input().split())\nm = list(m)\nf = 0\nfor i in range(1, len(m)):\n    if min(m[:i:]) <= m[i] and m[i] <= max(m[:i:]):\n        continue\n    else:\n        f += 1\nprint(f)\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.StringTokenizer;\n\npublic class ILoveUsername {\n\tpublic static void main(String[] args) throws NumberFormatException,\n\t\t\tIOException {\n\t\tBufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n\t\tint n = Integer.parseInt(bf.readLine());\n\t\tStringTokenizer st = new StringTokenizer(bf.readLine());\n\t\tint min = Integer.parseInt(st.nextToken());\n\t\tint max = min;\n\t\tint result = 0;\n\t\tfor (int i = 1; i < n; i++) {\n\t\t\tint x = Integer.parseInt(st.nextToken());\n\t\t\tif (x > max) {\n\t\t\t\tresult++;\n\t\t\t\tmax = x;\n\t\t\t} else if (x < min) {\n\t\t\t\tresult++;\n\t\t\t\tmin = x;\n\t\t\t}\n\t\t}\n\n\t\tSystem.out.println(result);\n\n\t}\n\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\n\na = 0\n\nl = list(map(int, input().split()))\n\nm = l[0]\nx = l[0]\n\nfor i in l:\n    if(x < i):\n        a+=1\n        x = i\n    elif(m > i):\n        a+=1\n        m = i\nprint(a)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl1=[int(h) for h in input().split()]\nda=l1[0]\nxiao=l1[0]\nf=0\nfor x in range(1,n):\n    if l1[x]>da:\n        da=l1[x]\n        f+=1\n    if l1[x]<xiao:\n        xiao=l1[x]\n        f+=1\nprint(int(f))\n"
        },
        {
            "language": 3,
            "solution": "import math\n\nn=int(input())\na=list(map(int,input().split()))\nmaxi = a[0] \nmini = a[0]\namazings = 0\nfor i in range(1,n):\n    if a[i]>maxi:\n        amazings+=1\n        maxi=a[i]\n    elif a[i]<mini:\n        amazings+=1\n        mini=a[i]\nprint(amazings)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nls = [int(i) for i in input().split()]\nmaxi = ls[0]\nmini = ls[0]\ncount = 0\nfor i in ls:\n    if i>maxi:\n        maxi = i\n        count+=1\n    elif i<mini:\n        mini = i\n        count+=1\n\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n = (int) (input())\nl = input()\nl = [int((list(l.split(\" \")))[i]) for i in range(n)]\n\ntl=l[0]\ntu=l[0]\n\nt=0\n\nfor i in range(1,n):\n\tif(l[i]<tl):\n\t\ttl=l[i]\n\t\tt+=1\n\tif(l[i]>tu):\n\t\ttu=l[i]\n\t\tt+=1\nprint(t)"
        },
        {
            "language": 1,
            "solution": "n = int(input())\nx = list(map(int,raw_input().split()))\nm = k = x[0]\nc = c_m = 0\nfor i in range(n):\n    if(x[i] < m):\n        m = x[i]\n        c += 1\n    if(x[i] > k):\n        k = x[i]\n        c_m += 1\nprint(c + c_m)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\n\nlst = [int(x) for x in input().split()]\n\nct = 0\nmi = lst[0]\nmx = lst[0]\n\nfor x in lst[1:]:\n    if x > mx or x < mi:\n        ct += 1\n    if x > mx:\n        mx = x\n    if x < mi:\n        mi = x\n\nprint (ct)"
        },
        {
            "language": 3,
            "solution": "\n\ninputCount = int(input())\ninputs = list(map(int, input().split()))\ncurrentNumber = 0\nlowestNumber = 10000\nhighestNumber = 0\namazingScore = 0\nif inputCount > 1:\n    for _ in range(len(inputs)):\n        currentNumber = inputs[_]\n        if currentNumber < lowestNumber:\n            lowestNumber = currentNumber\n            if _ > 0:\n                amazingScore = amazingScore + 1\n        if currentNumber > highestNumber:\n            highestNumber = currentNumber\n            if _ > 0:\n                amazingScore = amazingScore + 1\n    print(amazingScore)\nelse:\n    print(0)\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\n\nlst = []\nans = 0\n\ns = str(input())\nlt = s.split()\n\ndum = int(lt.pop(0))\n\nlst += [dum]\n\nfor i in lt:\n    i = int(i)\n    if i < min(lst) or i > max(lst):\n        ans += 1\n    lst += [i]\n        \nprint(ans)"
        },
        {
            "language": 3,
            "solution": "import math\n\nn = int(input())\n\narr = list(map(int, input().split(\" \")))\n\namazing_ct = 0\n\nmin_val = arr[0]\nmax_val = arr[0]\n\nfor i in range(1,len(arr)):\n    if(arr[i]>max_val):\n        max_val = arr[i]\n        amazing_ct+=1\n    \n    elif(arr[i]<min_val):\n        min_val = arr[i]\n        amazing_ct+=1\n\nprint(amazing_ct)\n\n\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nc=[int(x) for x in input().split()]\n\nmx = mn = c[0]\namazing = 0\n\nfor i in range(1,n):\n    if c[i]>mx or c[i]<mn:\n        amazing+=1\n        mx = max(mx,c[i])\n        mn = min(mn,c[i])\n\nprint(amazing)\n"
        },
        {
            "language": 3,
            "solution": "n, l = int(input()), list(map(int, input().split()))\nprint(sum(1 for i in range(1, n) if l[i] > max(l[:i]) or l[i] < min(l[:i])))"
        },
        {
            "language": 3,
            "solution": "import sys\nimport math\n \n#to read string\nget_string = lambda: sys.stdin.readline().strip()\n#to read list of integers\nget_int_list = lambda: list( map(int,sys.stdin.readline().strip().split()) )\n#to read non spaced string and elements are integers to list of int\nget_intList_from_str = lambda: list(map(int,list(sys.stdin.readline().strip())))\n#to read non spaced string and elements are character to list of character\nget_charList_from_str = lambda: list(sys.stdin.readline().strip())\n#get word sepetared list of character\nget_char_list = lambda: sys.stdin.readline().strip().split() \n#to read integers\nget_int = lambda: int(sys.stdin.readline())\n#to print faster\npt = lambda x: sys.stdout.write(str(x))\n \n#--------------------------------WhiteHat010--------------------------------------#\nN = get_int()\nlst = get_int_list()\nmi = mx = lst[0]\ncount = 0\nfor i in range(1,N):\n    if lst[i] < mi:\n        mi = lst[i]\n        count += 1\n    if lst[i] > mx:\n        mx = lst[i]\n        count += 1\nprint(count)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  int arr[10000];\n  int max = 0, min = 0;\n  int cnt = 0;\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> arr[i];\n  }\n  max = arr[0];\n  min = arr[0];\n  for (int i = 1; i < n; i++) {\n    if (arr[i] < min) {\n      cnt++;\n      min = arr[i];\n    }\n    if (arr[i] > max) {\n      cnt++;\n      max = arr[i];\n    }\n  }\n  if (n == 1) {\n    cout << 0 << endl;\n  } else {\n    cout << cnt << endl;\n  }\n}\n"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\na = map(int,raw_input().split())\nma = a[0]\nmi = a[0]\nans  = 0\nfor i in range(1,n):\n\tif a[i]>ma:\n\t\tma = a[i]\n\t\tans+=1\n\telif a[i]<mi:\n\t\tmi = a[i]\n\t\tans+=1\nprint ans"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, a, b, c, d;\nint main() {\n  cin >> n >> a;\n  d = a;\n  for (int i = 2; i <= n; i++) {\n    cin >> b;\n    if (b > a) {\n      c++;\n      a = b;\n    }\n    if (b < d) {\n      c++;\n      d = b;\n    }\n  }\n  cout << c;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nif n==1:\n    print(\"0\")\nelse:\n    m=0\n    a=list(map(int,input().split()))\n    x=y=a[0]\n    for i in range(1,n):\n        z=a[i]\n        if z>x:\n            x=z\n            m+=1\n        if z<y:\n            y=z\n            m+=1\n    print(m)\n"
        },
        {
            "language": 3,
            "solution": "input()\nlst = input().split()\nMax = int(lst[0])\nMin = int(lst[0])\nctr = 0\nfor i in lst[1:]:\n    if(int(i) > Max):\n        Max = int(i)\n        ctr += 1\n    if(int(i) < Min):\n        Min = int(i)\n        ctr += 1\nprint(ctr)\n    \n"
        },
        {
            "language": 4,
            "solution": "//package com.company;\n\n\nimport java.util.ArrayList;\nimport java.util.LinkedList;\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n//        ArrayList<Integer> list = new ArrayList<>();\n//        LinkedList<Integer> linkedList = new LinkedList<>();\n//        StringBuilder stringBuilder = new StringBuilder();\n        Scanner scanner = new Scanner(System.in);\n        int n =  scanner.nextInt();\n        int[] array = new int[n];\n        for(int i = 0 ; i < array.length;i++){\n            array[i] = scanner.nextInt();\n        }\n        int maxValue = Integer.MAX_VALUE;\n        int minValue = Integer.MIN_VALUE;\n        int k = 0 ;\n        int j = 0 ;\n        for(int i = 0 ; i< array.length;i++){\n            if(array[i]>minValue){\n                minValue = array[i];\n                k++;\n            }\n            if(array[i]<maxValue){\n                maxValue = array[i];\n                j++;\n            }\n        }\n        System.out.println(k+j -2);\n    }\n}"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nscores = [int(x) for x in input().split()]\n\nhigh = low = scores[0]\nn_amazing = 0\n\nfor j in range(1, n):\n    curr = scores[j]\n    if curr > high:\n        high = curr\n        n_amazing += 1\n    elif curr < low:\n        low = curr\n        n_amazing += 1\n\nprint(n_amazing)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  int a[n], i, c, min, max;\n  for (i = 0; i < n; i++) {\n    cin >> a[i];\n  }\n  if (a[0] > a[1])\n    min = a[1], max = a[0];\n  else if (a[0] < a[1])\n    max = a[1], min = a[0];\n  else if (a[0] == a[1])\n    max = a[0], min = a[0];\n  if (max == min)\n    c = 0;\n  else\n    c = 1;\n  for (i = 1; i < n - 1; i++) {\n    if (a[i] > a[i + 1]) {\n      if (a[i + 1] < min) {\n        min = a[i + 1];\n        c++;\n      }\n    } else if (a[i] < a[i + 1]) {\n      if (a[i + 1] > max) {\n        max = a[i + 1];\n        c++;\n      }\n    }\n  }\n  if (n == 1)\n    cout << \"0\";\n  else\n    cout << c;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\nans = 0\nmaks = a[0]\nmins = a[0]\nfor i in range(len(a)):\n    if (maks < a[i]):\n        ans += 1\n        maks = a[i]\n    elif (a[i] < mins):\n        mins = a[i]\n        ans += 1\nprint(ans)\n    \n"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\ndata = raw_input().split()\nmaxs = mins = int(data[0])\ncount = 0\nfor i in range(1,n):\n    x = int(data[i])\n    if x>maxs:\n        count += 1\n        maxs = x\n    elif x<mins:\n        count += 1\n        mins = x\nprint count\n"
        },
        {
            "language": 1,
            "solution": "from sys import stdin\na=stdin.readline()\na = stdin.readline().strip().split()\nhi = int(a[0])\nlo = int(a[0])\ntotal = 0\nfor i in xrange(1,len(a)):\n t = int(a[i])\n if t>hi:\n  hi = t;total+=1\n if t<lo:\n  lo = t;total+=1\nprint total"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nx=a[:1]\nfor i in a:\n\tn-=min(x)<=i<=max(x)\n\tx+=[i]\nprint(n)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = [int(i) for i in input().split()]\nmx = l[0]\nmn = l[0]\nt = 0\nfor i in range(1,n):\n\tif l[i] < mn :\n\t\tmn = l[i]\n\t\tt = t+1\n\tif l[i] > mx :\n\t\tmx = l[i]\n\t\tt = t+1\nprint(t)\t\t\n\t\t\n"
        },
        {
            "language": 1,
            "solution": "n = input()\na = map(int, raw_input().split())\n\n\nmi,ma = a[0], a[0]\nc = 0\nfor i in range(1,len(a)):\n    if a[i] > ma or a[i] < mi:\n        c = c + 1\n    \n    if a[i] > ma:\n        ma = a[i]\n        \n    if a[i] < mi:\n        mi = a[i]\n        \nprint(c)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\ns=list(map(int,input().split()))\nmx=s[0]\nmn=s[0]\nc=0\nfor i in range(1,n):\n    if s[i]>mx:\n        mx=s[i]\n        c+=1\n    elif s[i]<mn:\n        mn=s[i]\n        c+=1\n    else:\n        continue\nprint(c)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  int n, i, b = -1, w = 1e9, c = 0, d = 0, j;\n  cin >> n;\n  vector<int> v;\n  int p[n];\n  for (i = 0; i < n; i++) {\n    cin >> p[i];\n    for (j = 0; j < i; j++) {\n      if (p[j] == p[i]) {\n        d++;\n      }\n    }\n    if (d == 0) {\n      v.push_back(p[i]);\n    }\n    d = 0;\n  }\n  for (i = 0; i < v.size(); i++) {\n    b = max(b, v[i]);\n    w = min(w, v[i]);\n    if (b == v[i] && w == v[i]) {\n    } else if (b == v[i]) {\n      c++;\n    } else if (w == v[i]) {\n      c++;\n    }\n  }\n  cout << c;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "\nn = int(input())\n\nnums =list(map(int,input().split()))\ni = 1\ncount = 0\ns = set()\nfirst = nums[0]\n# print(set(nums))\nwhile i < n:\n    if nums[i] == first:\n        i+=1\n        pass\n    else:\n        m = max(nums[:i+1])\n        if m == nums[i]:\n            s.add(m)\n        mi = min(nums[:i+1])\n        if mi == nums[i]:\n            s.add(mi)\n        i+=1\n\nif n == 1:\n    print(0)\nelse:\n    print(len(s))\n\n# print(s)\n\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "\n\nif __name__ == '__main__':\n    n = int(input())\n    l = list(map(int, input().split()))\n    \n    if n == 1:\n        print(0)\n        exit()\n        \n    ct = 0\n    minn = maxn = l[0]\n    for i in range(1, n):\n        if l[i] > maxn:\n            ct += 1\n            maxn = l[i]\n        elif l[i] < minn:\n            ct += 1\n            minn = l[i]\n    print(ct)"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\n\npublic class A155 {\n\tstatic Scanner in = new Scanner(System.in);\n\t\n\t\n\tpublic static void main(String[] args) {\n\t\tint n = in.nextInt();\n\t\tint max = Integer.MIN_VALUE;\n\t\tint min = Integer.MAX_VALUE;\n\t\tint res = -1;\n\t\t\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tint next = in.nextInt();\n\t\t\tif(next < min || next > max) res++;\n\t\t\tif(max < next) max = next;\n\t\t\tif(min > next) min = next;\n\t\t}\n\t\tSystem.out.println(res);\n\n\t}\n\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\np = input()\np = p.split()\nhi = int(p[0])\nlo = int(p[0])\nc = 0\nfor i in range(1,n):\n\tp[i]=int(p[i])\n\tif p[i]>hi:\n\t\thi=p[i]\n\t\tc+=1\n\telif p[i]<lo:\n\t\tlo = p[i]\n\t\tc+=1\nprint(c)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nlist0=[int(i)for i in input().split()]\nmax0=list0[0]\nmin0=list0[0]\na=0\nb=0\nfor i in range(n):\n    if list0[i]>max0:\n        a+=1\n        max0=list0[i]\n    if list0[i]<min0:\n        b+=1\n        min0=list0[i]\nprint(a+b)\n    \n"
        },
        {
            "language": 3,
            "solution": "import sys\nn=int(input())\nindex=0\ncount=0\nfor i in map(int,input().split(' ')):\n    if(index==0):\n        min=i\n        max=i\n    else:\n        if(min>i):\n            count+=1\n            min=i\n        if(max<i):\n            count+=1\n            max=i\n    index+=1\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[int(i) for i in input().split()]\nama=0\nbest=0\nworst=0\nfor i in range(1,n):\n    best=max(a[j]for j in range(i))\n    worst=min(a[j]for j in range(i))\n    if a[i]>best or a[i]<worst:\n        ama+=1\nprint(ama)"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\npublic class Tracks{\npublic static void main(String args[])throws Exception{\nBufferedReader br=new BufferedReader(new InputStreamReader(System.in));\nint n=Integer.parseInt(br.readLine()),min=0,max=0,i=0,j=0,k=0;\nStringTokenizer st=new StringTokenizer(br.readLine());\nmin=Integer.parseInt(st.nextToken());\nmax=min;\nfor(i=0;i<n-1;i++)\n{j=Integer.parseInt(st.nextToken());\nif(j>max)\n{k++;\nmax=j;\n}\nif(j<min)\n{k++;\nmin=j;\n}}\nSystem.out.println(k);\n}\n\n}"
        },
        {
            "language": 4,
            "solution": "// CoDE deVELOPed uNDEr AcE proDUcTiONS (enJOY!!!!)\nimport java.util.*;\npublic class Ace\n{\n   public static void main(String[] arga)\n   {\n   Scanner sc=new Scanner(System.in);\n int n=sc.nextInt();\n int i,base=0,j,k=0,max=0,min=0;\n int[] ar=new int[n];\n for(i=0;i<n;i++)\n {\n ar[i]=sc.nextInt();\n if(i==0)\n { max=ar[0]; base=ar[i];}\n if(ar[i]>max) { k++; max=ar[i]; }\n else if(ar[i]<base) { k++ ; base=ar[i]; }\n }\n System.out.print(k);\n \n   }\n} \n\n// CoDE deVELOPed uNDEr AcE proDUcTiONS (enJOY!!!!)"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class ILoveUsername {\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tint[] scores = new int[n];\n\t\tfor(int i=0; i<n; i++) {\n\t\t\tscores[i] = sc.nextInt();\n\t\t}\n\t\tsc.close();\n\t\tint max = scores[0];\n\t\tint min = scores[0];\n\t\tint count = 0;\n\t\tfor(int i=1; i<n; i++) {\n\t\t\tif(scores[i] > max) {\n\t\t\t\tmax = scores[i];\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\tif(scores[i] < min) {\n\t\t\t\tmin = scores[i];\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\t\n\t\tSystem.out.println(count);\n\t}\n}"
        },
        {
            "language": 3,
            "solution": "# Alireza\n# JAHANI\n# PH_PY_LA\n\nn = int(input())\nresult = []\nr = 0\nlistinput = input().split()\nfor item in range(n):\n    listinput[item] = int(listinput[item])\n\nfor i in range(1, n):\n    array = listinput[:i+1]\n    mint = min(array)\n    maxt = max(array)\n    if (listinput[i] == mint and array.count(listinput[i]) == 1) or (listinput[i] == maxt and array.count(listinput[i] ) == 1 ):\n        r += 1\nprint(r)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\ns = [int(i) for i in input().split()]\nt = 0\nmi = s[0]\nma = s[0]\n\nfor i in s:\n    if i > ma:\n        t += 1\n        ma = i\n    elif i < mi:\n        t += 1\n        mi = i\n\nprint(t)"
        },
        {
            "language": 1,
            "solution": "mn = 20000;\nmx = -1\nr = -2\nraw_input()\nfor i in map(int, raw_input().split()):\n    if i > mx:\n        mx = i\n        r += 1\n    if i < mn:\n        mn = i\n        r += 1\nprint r\n\n"
        },
        {
            "language": 3,
            "solution": "x=int(input(\"\"))\ny=input(\"\").split()\ncounter=0\nbest = worst = int(y[0])\nfor c in range(1,x):\n\tif int(y[c]) > best:\n\t\tbest=int(y[c])\n\t\tcounter+=1\n\telif int(y[c]) < worst:\n\t\tworst=int(y[c])\n\t\tcounter+=1\nprint(counter)"
        },
        {
            "language": 1,
            "solution": "n = input()\nrecord = map(int, raw_input().split())\nbest = worst = record[0]\nans = 0\nfor r in record[1:]:\n    if r > best:\n        best = r\n        ans += 1\n    elif r < worst:\n        worst = r\n        ans += 1\nprint ans\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.util.StringTokenizer;\n\npublic class Ilovemariam__ {\n\tpublic static void main(String[] args) throws IOException {\n\t\tScanner s = new Scanner(System.in);\n\t\tint n = s.nextInt();\n\t\tint x = s.nextInt();\n\t\tint max = x;\n\t\tint min = x;\n\t\tint out =0;\n\t\twhile(n-- >1){\n\t\t\tint y = s.nextInt();\n\t\t\tif( y< min){\n\t\t\t\tmin =y;\n\t\t\t\tout++;\n\t\t\t}\n\t\t\tif(y >max){\n\t\t\t\tmax = y;\n\t\t\t\tout++;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(out);\n\t}\n\tstatic class Scanner {\n\t    StringTokenizer st;\n\t    BufferedReader br;\n\n\t    public Scanner(InputStream system) {br = new BufferedReader(new InputStreamReader(system));}\n\t    public String next() throws IOException\n\t    {\n\t        while (st == null || !st.hasMoreTokens())\n\t            st = new StringTokenizer(br.readLine());\n\t        return st.nextToken();\n\t    }\n\t    public String nextLine()throws IOException{return br.readLine();}\n\t    public int nextInt() throws IOException {return Integer.parseInt(next());}\n\t    public double nextDouble() throws IOException {return Double.parseDouble(next());}\n\t    public char nextChar()throws IOException{return next().charAt(0);}\n\t    public Long nextLong()throws IOException{return Long.parseLong(next());}\n\t    public boolean ready() throws IOException{return br.ready();}\n\t    public void waitForInput() throws InterruptedException {Thread.sleep(4000);}\n\t}\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\nimport java.io.IOException;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        ProblemAIloveusername solver = new ProblemAIloveusername();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class ProblemAIloveusername {\n        public void solve(int testNumber, InputReader in, PrintWriter out) {\n            int n = in.nextInt();\n            int min = in.nextInt();\n            int max = min;\n            int ans = 0;\n\n            for (int i = 1; i < n; i++) {\n                int t = in.nextInt();\n                if (t > max) {\n                    max = t;\n                    ans++;\n                }\n                if (t < min) {\n                    min = t;\n                    ans++;\n                }\n            }\n            out.print(ans);\n\n        }\n\n    }\n\n    static class InputReader {\n        public BufferedReader reader;\n        public StringTokenizer tokenizer;\n\n        public InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\n            tokenizer = null;\n        }\n\n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\np = [int(x) for x in input().split()]\nh, l = p[0], p[0]\nc = 0\n\nfor i in p:\n    if i > h:\n        h = i\n        c += 1\n    elif i < l:\n        l = i\n        c += 1\n\nprint(c)"
        },
        {
            "language": 3,
            "solution": "nums=int(input())\nx=list(map(int,input().split()))\nmin=x[0]\nmax=x[0]\ncount=0\nfor i in range(nums-1):\n    if x[i+1]>max:\n        max=x[i+1]\n        count+=1\n    if x[i+1]<min:\n        min=x[i+1]\n        count+=1\nprint(count)"
        },
        {
            "language": 1,
            "solution": "raw_input()\n\nb = map(int, raw_input().split())\n\nMax = Min = b[0]\nc = 0\nfor i in b[1:]:\n    if i > Max:\n        c += 1\n        Max = i\n    elif i < Min:\n        c += 1\n        Min = i\n\nprint c\n"
        },
        {
            "language": 3,
            "solution": "no_contests = int(input())\n\ncontests = list(map(int, input().split()))\n\ncurrent_min = contests[0]\ncurrent_max = contests[0]\n\nawesome = 0\n\nfor i in range(1, len(contests)):\n    if contests[i] < current_min:\n        awesome += 1\n        current_min = contests[i]\n    elif contests[i] > current_max:\n        awesome += 1\n        current_max = contests[i]\n\nprint(awesome)\n\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nb=[a[0]]\nc=0\nfor i in range(1,n):\n    b.append(a[i])\n    if((min(b)==a[i] or max(b)==a[i]) and b.count(a[i])==1):\n        c+=1\nprint(c)"
        },
        {
            "language": 3,
            "solution": "def a():\n    n=int(input())\n    s = list(map(int, input().split()))\n    h = s[0]\n    l = s[0]\n    z=0\n    for i in s:\n        if i<l :\n            z+=1\n            l=i\n        elif i>h:\n            z+=1\n            h=i\n    print(z)\na()"
        },
        {
            "language": 3,
            "solution": "n=int(input())\narr=list(map(int,input().split()))\na=arr[0]\nb=arr[0]\ncount=0\ncount1=0\nfor i in range(1,n):\n    if(arr[i]<a):\n        a=arr[i]\n        count+=1\n    if(arr[i]>b):\n        b=arr[i]\n        count1+=1\nprint(count+count1)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nb = list(map(int, input().split()))\ns=0\nmax=b[0]\nmin=b[0]\nfor i in range(len(b)):\n    if max > b[i]:\n        max=b[i]\n        s+=1\n    elif min < b[i]:\n        min=b[i]\n        s+=1\nprint(s)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\n\npp = list(map(int, input().split()))\n\nmaxpp = pp[0]\nminpp = pp[0]\n\ncool = 0\n\nfor i in pp:\n    if i > maxpp:\n        maxpp = i    \n        cool += 1\n    \n    elif i < minpp:\n        minpp = i\n        cool += 1\n\nprint(cool)\n        "
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nb=[]\nminus=a[0]\nplus=a[0]\nc=0\n\nfor i in range(n):\n    b.append(a[i])\n    if i>0:\n        \n        if a[i]==max(b) and a[i]>plus:\n            plus=a[i]\n            c+=1\n        elif a[i]==min(b) and a[i]<minus:\n            minus=a[i]\n            c+=1\n##    print('minus',minus,'plus',plus)\n##    print(a[i])\n##    if a[i]>a[i-1] or a[i]>plus:\n##        plus=a[i]\n##        \n##    elif a[i]<a[i-1] or a[i]<minus:\n##        minus=a[i]\n    \n\n##    print(plus,minus)\n##    print(b)\nprint(c)\n\n\n"
        },
        {
            "language": 4,
            "solution": "var n = Number(readline());\ns = readline().split(' ').map(Number);\n\nvar curMax = s[0];\nvar curMin = s[0];\nvar miracle = 0;\n\nfor (var i = 1; i < s.length; i++) {\n    if (s[i] > curMax) {\n        miracle++;\n        curMax = s[i];\n    }\n    if (s[i] < curMin){\n        miracle++;\n        curMin = s[i];\n    }\n}\n\nprint(miracle);"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nnums = list(map(int, input().split()))\n\nma, mi = nums[0], nums[0]\ncounter = 0\n\nfor i in range(1, n):\n    elem = nums[i]\n    if elem > ma:\n        counter += 1\n        ma = elem\n    if elem < mi:\n        counter += 1\n        mi = elem\n\nprint(counter)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nm=list(map(int,input().split(' ')))\na=0\nmn=m[0]\nmx=m[0]\nfor i in range(1,n):\n    if m[i]>mx:\n        a+=1\n        mx=m[i]\n    elif m[i]<mn:\n        a+=1\n        mn=m[i]\nprint(a)"
        },
        {
            "language": 3,
            "solution": "t = int(input());\n\nn = [];\n\ns = 0;\ni=0;\n\na = [int(x) for x in input().split()];\n\nmin_ = a[0];\nmax_ = a[0];\n\n\nfor x in range(1,t):\n    if(min_>a[x]):\n        s+=1;\n        min_=a[x];\n    if(max_<a[x]):\n        s+=1;\n        max_=a[x];\n\nprint(s);\n"
        },
        {
            "language": 1,
            "solution": "#!usr/bin/python\n\ncount = 0;\nn = input();\na = [int(i) for i in raw_input().split()];\n\nfor i in range(1, n):\n\th = l = flag = eq = 0;\n\tfor j in range(0, i):\n\t\tif(a[i] < a[j]):\th = 1;\n\t\telif(a[i] > a[j]):\tl = 1;\n\t\telif(a[i] == a[j]):\teq = 1;\n\t\tif((h == 1 and l == 1) or eq == 1):\n\t\t\tflag = 1;\n\t\t\tbreak;\n\t\n\tif(flag == 0):\tcount += 1;\nprint count;"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int,input().split()))\nmn = mx = a[0]\nans = 0\nfor i in range(1, n):\n    if a[i] < mn:\n        mn = a[i]\n        ans += 1\n    if a[i] > mx:\n        mx = a[i]\n        ans += 1\nprint(ans)"
        },
        {
            "language": 3,
            "solution": "n = input()\nA = list(map(int, input().split()))\nk = A[0]\nm = A[0]\nt = 0\nfor i in A:\n    if i > k:\n        t += 1\n        k = i\n    elif i < m:\n        t += 1\n        m = i\nprint(t)\n"
        },
        {
            "language": 1,
            "solution": "n=int(raw_input())\nps = map(int, raw_input().split())\n\n#print n\n#print ps\n\nminP, maxP, ans = ps[0], ps[0], 0\nfor i in range(1, n):\n    if ps[i] > maxP: \n        ans += 1\n        maxP = ps[i]\n    elif ps[i] < minP:\n        ans += 1\n        minP = ps[i]\n        \nprint ans\n\n    \n"
        },
        {
            "language": 3,
            "solution": "import sys\ncontestN = int(sys.stdin.readline())\nscores = sys.stdin.readline().split()\nresult = 0\nmaxScore = int(scores[0])\nminScore = int(scores[0])\nfor i in range(1,contestN):\n    score = int(scores[i])\n    if(score > maxScore):\n        maxScore = score\n        result += 1\n    elif(score < minScore):\n        minScore = score\n        result += 1\nprint(result)"
        },
        {
            "language": 3,
            "solution": "l=input()\nl=[int(i) for i in input().split()]\nmax=min=l[0]\nc=0\nfor i in l:\n    if i<min:\n        min=i\n        c+=1\n    elif i>max:\n        max=i\n        c+=1\nprint(c)\n"
        },
        {
            "language": 3,
            "solution": "# You lost the game.\nn = int(input())\nL = list(map(int, input().split()))\nminimum = L[0]\nmaximum = L[0]\nr = 0\nfor k in range(1,n):\n    if L[k] < minimum:\n        r += 1\n        minimum = L[k]\n    elif L[k] > maximum:\n        r += 1\n        maximum = L[k]\nprint(r)\n"
        },
        {
            "language": 4,
            "solution": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class a {\n    /*\n     * In a Programming contest, you are expected to print the output at the\n     * end, so `output` variable will hold all the processed results till the\n     * end\n     */\n    public static String output = \"\";\n\n    // Program's starting point\n    public static void main(String[] args) {\n\n        /*\n         * A Scanner class slows down Input/Output a LOT ,thereby increasing\n         * your code execution time , Hence for best results that is Fast I/O\n         * try to use BufferedReader\n         */\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        /*\n         * Generally Code Chef, Hacker Rank gives X number of test cases so we\n         * process the input for each.\n         */\n        try {\n            int n = Integer.parseInt(br.readLine().trim());\n            String[] scores = br.readLine().split(\" \");\n            int[] s = new int[n];\n            /*\n             * Logic of the program must be separated from the meta code to\n             * increase readability and help debugging easier\n             * Also note that Solver object is created inside for loop to\n             * avoid multiple object creation that drastically increases\n             * execution time and memory usage\n             */\n            Solver solver = new Solver();\n            for (int i = 0; i < n; i++) {\n                s[i] = Integer.parseInt(scores[i]);\n            }\n            solver.solve(n, s);\n\n        } catch (IOException e) {\n            // TODO Auto-generated catch block\n            e.printStackTrace();\n        }\n        // Print the final output\n        System.out.println(output);\n    }\n}\n\nclass Solver {\n\n    /*\n     * Logic goes here ...\n     * Add to the global variables after processing the input\n     * Maybe reverse a string or parse to an integer or , etc.\n     */\n\n    public void solve(int n, int[] s) {\n        int min = Integer.MAX_VALUE;\n        int max = Integer.MIN_VALUE;\n        int amazing = -2;\n        for(int i = 0; i < n; ++i) {\n\n            if(s[i] < min) {\n                min = s[i];\n                ++amazing;\n            }\n\n            if(s[i] > max) {\n                max = s[i];\n                ++amazing;\n            }\n        }\n\n        a.output = a.output.concat(String.valueOf(amazing));\n\n    }\n}\n\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=map(int,input().split())\nb=list(a)\nc=b[0]\nd=b[0]\ns=0\nfor i in range(n):\n    if b[i]>c:\n        c=b[i]\n        s+=1\n    elif b[i]<d:\n        d=b[i]\n        s+=1\n    else:\n        s+=0\nprint(s)\n"
        },
        {
            "language": 3,
            "solution": "n = int ( input ())\nl = list ( map ( int , input (). split ()))\nc = 0\nmax=l[0]\nmin=l[0]\nfor i in range ( 1 , n ):\n    if(l[i]>max):\n        max=l[i]\n        c+=1\n    elif(l[i]<min):\n        min=l[i]\n        c+=1\nprint(c)        "
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = [int(i) for i in input().split()]\nprint(sum(1 for i in range(1,n) if a[i] > max(a[:i]) or a[i] < min(a[:i])))\n"
        },
        {
            "language": 1,
            "solution": "'''\nCreated on 2012-2-27\n\n@author: Matrix\n'''\n\nif __name__ == \"__main__\":\n    k=int(raw_input())\n    a=map(int,raw_input().split())\n    Max=a[0]\n    Min=a[0]\n    ans=0\n    for i in a[1:]:\n        if i>Max or i<Min:\n            ans=ans+1\n        Max=max(Max,i)\n        Min=min(Min,i)\n    print ans\n            "
        },
        {
            "language": 3,
            "solution": "x = int(input())\na = [int(i) for i in input().split(\" \")]\nmx = a[0]\nmn = a[0]\nap = 0\nfor i in range(1, x):\n    if a[i] < mn:\n        mn = a[i]\n        ap = ap + 1\n    elif a[i] > mx:\n        mx = a[i]\n        ap = ap + 1\nprint(ap)\n    \n"
        },
        {
            "language": 1,
            "solution": "n=input()\na=map(int,raw_input().split())\nt=0\nq=a[0]\nz=a[0]\nfor i in a:\n    if i>q:\n        q=i\n        t+=1\n    if i<z:\n        z=i\n        t+=1\nprint t"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nmas = [int(x) for x in input().split()]\nk = mas[0]\nz = mas[0]\nx = 0\nfor i in range(1,n):\n\tif mas[i] > k:\n\t\tk = mas[i]\n\t\tx += 1\n\tif mas[i] < z:\n\t\tz = mas[i]\n\t\tx += 1\n\telse:\n\t\tpass\nprint(x)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nvalores = list(map(int,input().split()))\n\na1 = valores[0]\nmaior,menor = a1,a1\ncount = 0\nvalSize = len(valores)\nfor l in range(1, valSize):\n   k = valores[l]\n   if (k > maior):\n     maior = k \n     count+=1 \n   if (k < menor):\n     menor = k \n     count+=1\n   \nprint(count)"
        },
        {
            "language": 3,
            "solution": "a=int(input())\nb=[int(i) for i in input().split()]\nmax=b[0]\nmin=b[0]\nd=0\nfor i in b:\n\tif i<min:\n\t\td+=1\n\t\tmin=i\n\telif i>max:\n\t\td+=1\n\t\tmax=i\nprint(d)"
        },
        {
            "language": 3,
            "solution": "nomber_of_inputs=int(input())\ns=list(map(int , input().split()))\nthefirst=s[0]\nthesecond=s[0]\ncounter=0\nfor i in range(len(s)):\n    if s[i]>thefirst:\n        thefirst=s[i]\n        counter+=1\nfor  i in range(len(s)):\n     if s[i] < thesecond:\n        thesecond = s[i]\n        counter += 1\nprint(counter)"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class a155 {\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tScanner sc=new Scanner(System.in);\n\t\tint n=sc.nextInt();\n\t\tint count=0;\n\t\tint a=sc.nextInt();\n\t\tint min=a,max=a;\n\t\tfor(int i=1;i<n;i++){\n\t\t\ta=sc.nextInt();\n\t\t\tif(a<min){\n\t\t\t\tmin=a;\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\telse if(a>max){\n\t\t\t\tmax=a;\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(count);\n\t\tsc.close();\n\t}\n\n}\n"
        },
        {
            "language": 1,
            "solution": "min=10001\nmax=-1\nextreme_counter=-2\nn=input()\nscores=map(int,raw_input().split())\nfor score in scores[0:len(scores)]:\n    if score>max:\n        max=score\n        extreme_counter+=1\n    if score<min:\n        min=score\n        extreme_counter+=1\nprint extreme_counter"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.Scanner;\npublic class Solution {\n\tpublic static void main(String[] args)\n\t{\n\t\tScanner sc = new Scanner(System.in);\n\t\tif (System.getProperty(\"ONLINE_JUDGE\") == null) {\n\t\t\ttry {\n\t\t\t\tSystem.setOut(new PrintStream(\n\t\t\t\t\tnew FileOutputStream(\"output.txt\")));\n\t\t\t\tsc = new Scanner(new File(\"input.txt\"));\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\t\t}\n\t\t//problem code\n\t\tint n=sc.nextInt();\n\t\tint[] arr = new int[n];\n\t\tint i,min,max,c=0;\n\t\tfor(i=0;i<n;i++){\n\t\t\tarr[i]=sc.nextInt();\n\t\t}\n\t\tmax=min=arr[0];\n\t\tfor(i=1;i<n;i++){\n\t\t\tif(arr[i]<min){\n\t\t\t\tc++;\n\t\t\t\tmin=arr[i];\n\t\t\t}\n\t\t\tif(arr[i]>max){\n\t\t\t\tc++;\n\t\t\t\tmax=arr[i];\n\t\t\t}\n\n\t\t}\n\t\tSystem.out.print(c);\n\t}\n}\n"
        },
        {
            "language": 1,
            "solution": "n = input()\na = map(int, raw_input().split())\n\np = q = a[0]\nans = 0\n\nfor i in xrange(1, n):\n    if a[i] > q:\n        q = a[i]\n        ans += 1\n    if a[i] < p:\n        p = a[i]\n        ans += 1\n\nprint ans"
        },
        {
            "language": 3,
            "solution": "n=int(input())\ns=[int(i) for i in input().split()]\na=b=s[0]\nnum=0\nfor i in range(1,n):\n    if s[i]>a or s[i]<b:\n        num+=1\n        a=max(s[i],a);b=min(s[i],b)\nprint(num)\n    \n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nm=input().split()\na=[]\nb=[]\nc=0\nfor i in m:\n    a.append(int(i))\nb.append(a[0])\nfor i in range(1,n):\n    b.append(a[i])\n    if (b[i]==max(b) and b.count(max(b))==1) or (b[i]==min(b) and b.count(min(b))==1):\n        c+=1\nprint(c)"
        },
        {
            "language": 3,
            "solution": "m=int(input())\nreg=input().split()\nmax=(int(reg[0]))\nmin=(int(reg[0]))\ncounter=0\nfor i in range(1,m):\n if int(reg[i])>max:\n  max=int(reg[i])\n  counter+=1\n elif int(reg[i])<min:\n  min=int(reg[i])\n  counter+=1\nprint (counter)\n"
        },
        {
            "language": 1,
            "solution": "n = input()\na = map(int, raw_input().split())\nbest = a[0]\nworst = a[0]\nres = 0\nfor i in xrange(1, n):\n    if a[i] > best:\n        best = a[i]\n        res += 1\n    if a[i] < worst:\n        worst = a[i]\n        res += 1\nprint res\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=[int(x) for x in input().split()]\na=[]\nnum=0\nfor i in range(len(l)):\n    if i==0:\n        a.append(l[i])\n    else:\n        if l[i]>a[-1]:\n            num+=1\n            a.append(l[i])\n            a.sort()\n        elif l[i]<a[0]:\n            num+=1\n            a.append(l[i])\n            a.sort()\nprint(num)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nbaly=list(map(int,input().split()))\nspisok=[]\nitog=0\nma=0\nmi=0\nfor i in range(n):\n    a=baly[i]\n    spisok.append(a)\n    if ma<a and i!=0:\n        itog+=1\n    elif mi>a:\n        itog+=1\n    ma = max(spisok)\n    mi = min(spisok)\n\nprint(itog)\n\n\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\ns = list(map(int,input().split()))\n\nx = 0\nl = s[0]\nh = s[0]\nfor i in range(n):\n    if s[i] < l :\n        x += 1\n        l = s[i]\n    elif s[i] > h:\n        x += 1\n        h = s[i]\nprint(x)\n    \n"
        },
        {
            "language": 1,
            "solution": "n=int(raw_input())\nls=list()\ncount=0\nz=raw_input()\nz=z.split()\nfor m in z:\n    ls.append(int(m))\n\nmaxi=ls[0]\nmini=ls[0]\nfor k in ls:\n    if maxi<k:\n        maxi=k\n        count=count+1\n    elif mini>k:\n        mini=k\n        count=count+1\nprint count\n    "
        },
        {
            "language": 3,
            "solution": "a=int(input())\nb=list(map(int,input().split()))\nmax,min=b[0],b[0]\nr=0\nfor i in range(1,a):\n    if max<b[i]:\n        r+=1\n        max=b[i]\n    elif min>b[i]:\n        r+=1\n        min=b[i]\nprint(r)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=[int(x) for x in input().split()]\ncount=0\nfor i in range(1,n):\n    q=l[0:i]\n    if l[i]<min(q) or l[i]>max(q):\n        count+=1\nprint(count)\n"
        },
        {
            "language": 3,
            "solution": "n = input()\na = list(map(int,input().split()))\nmx = mn = a[0]\nres = 0\nfor c in a:\n    if c<mn or c>mx:\n        res += 1\n        mx = max(mx,c)\n        mn = min(mn,c)\nprint(res)"
        },
        {
            "language": 3,
            "solution": "data=int(input())\n\nl = list(map(int,input().split()))\nmylist=l[:data]\n\ninitial = mylist[0]\nmin=initial\nmax=initial\namaz=0\n\nfor i in range(1,len(mylist)):\n    if mylist[i]>max:\n        amaz=amaz+1\n        max= mylist[i]\n    elif mylist[i]<min:\n        amaz=amaz+1\n        min=mylist[i]\n\nprint(amaz)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nper=[int(i) for i in input().split()]\nh=l=per[0]\nam=0\n\nfor i in range(1,n):\n    if per[i]>h:\n        h=per[i]\n        am+=1\n    elif per[i]<l:\n        l=per[i]\n        am+=1\n\nprint(am)"
        },
        {
            "language": 3,
            "solution": "x=int(input())\nz=input().split()\ny=[int(i)for i in z]\ni=1\nmax=y[0]\nmin=y[0]\na=0\nwhile i <x:\n    if y[i]>max:\n        a+=1\n        max=y[i]\n    if y[i]<min:\n        a+=1\n        min=y[i]\n    i+=1\nprint(a)\n\n\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nnums = list(map(int, input().split()))\nif len(nums) > 1: \n    best, worst = max(nums[0], nums[1]), min(nums[0], nums[1])\n    ct = 0\n    if best != worst: \n        ct = 1\n\n    for i in  nums[2:]: \n        if i > best: \n            best = i\n            ct += 1\n        elif i < worst: \n            worst = i\n            ct += 1\n    print(ct)\nelse: \n    print(0)\n    "
        },
        {
            "language": 3,
            "solution": "t=int(input())\narr=list(map(int,input().split()))\nMax=arr[0]\nMin=arr[0]\nc=0\nfor i in range(1,t):\n    if(arr[i]>Max):\n        Max=arr[i]\n        c+=1\n    if(arr[i]<Min):\n        Min=arr[i]\n        c+=1\n    else:\n        continue\nprint(c)    \n        "
        },
        {
            "language": 3,
            "solution": "n = int(input())\narr = list(map(int, input().split()))\nans = 0\nmi = arr[0]\nma = arr[0]\nfor i in range(1, n):\n    temp = arr[i]\n    if(temp > ma):\n        ma = temp\n        ans += 1\n    elif(temp < mi):\n        mi = temp;\n        ans += 1\nprint(ans, end = '')"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nI=[int(i) for i in input().split()]\nl,h=I[0],I[0]\ncount=0\nfor i in range(1,n):\n     if I[i]>h:\n          count+=1\n          h=I[i]\n     elif I[i]<l:\n          count+=1\n          l=I[i]\nprint(count)\n"
        },
        {
            "language": 3,
            "solution": "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Sun May 26 17:38:42 2019\n\n@author: avina\n\"\"\"\n\nn = int(input())\nl = list(map(int, input().split()))\na = l[0];e = 0\nmins = l[0]; maxs = l[0]\nfor i in range(1,n):\n    \n    if l[i]> maxs:\n        e+=1\n        maxs = l[i]\n    if l[i] < mins:\n        e+=1\n        mins = l[i]\nprint(e)"
        },
        {
            "language": 3,
            "solution": "a=int(input())\nb=[int(i) for i in input().split()]\nl=0\nfor i in range(1,a):\n    if b[i]>max(b[0:i]) or b[i]<min(b[0:i]):\n        l=l+1\nprint(l)\n        \n\n"
        },
        {
            "language": 3,
            "solution": "N = int(input())\nA = list(map(int, input().split()))\nmin = A[0]\nmax = A[0]\ncnt = 0\nfor i in range(1, N):\n\tif A[i] < min:\n\t\tcnt += 1\n\t\tmin = A[i]\n\telif max < A[i]:\n\t\tcnt += 1\n\t\tmax = A[i]\nprint(cnt)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nresults = [int(x) for x in input().split()]\n\nc = 0\n\nbest = results[0]\nworst = results[0]\n\nfor r in results[1:]:\n    if r > best:\n        best = r\n        c += 1\n    if r < worst:\n        worst = r\n        c += 1\n\nprint(c)\n"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\na = map(int, raw_input().split())\nans = 0\nfor i in xrange(1, n):\n    if a[i] < min(a[:i]) or a[i] > max(a[:i]):\n        ans += 1\nprint ans"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\ncount=0\nmaxa=a[0]\nmina=a[0]\ns=[]\nfor i in a:\n        s=s+[i]\n        if i>maxa:\n                count+=1\n        if i<mina:\n                count+=1\n        maxa=max(s)\n        mina=min(s)\nprint(count)\n        \n\n\n\n\n        \n    \n"
        },
        {
            "language": 3,
            "solution": "input()\na = list(map(int, input().split()))\nmi, ma = a[0], a[0]\nz = 0\nfor i in a[1:]:\n    if (i > ma):\n        ma = i\n        z += 1\n    if (i < mi):\n        mi = i\n        z += 1\nprint(z)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nmax = 0\nmin = 10001\nans = 0\nk = 1\nfor i in input().split():\n    if k == 1:\n        k = 0\n        min = int(i)\n        max = int(i)\n        continue\n    if int(i) < min:\n        ans+=1\n        min = int(i)\n    if int(i) > max:\n        ans+=1\n        max = int(i)\nprint(ans)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = [int(x) for x in input().split()]\nmaks = a[0]\nminim = a[0]\nres = 0\n \nfor i in range(1,len(a)):\n    if a[i] > maks:\n        res += 1\n        maks = a[i]\n    if a[i] < minim:\n        res += 1\n        minim = a[i]\nprint(res)"
        },
        {
            "language": 3,
            "solution": "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Sat Apr 25 18:55:50 2020\n\n@author: Kashem Pagla\n\"\"\"\n\n\nn=int(input())\ncontest=list(map(int, input().split()))[:n]\nhigh=contest[0];low=contest[0];ans=[]\nfor i in range(1,len(contest)):\n    if(contest[i]<low):\n        low=contest[i]\n        ans.append(contest[i])\n#        print(low)\n    elif(contest[i]>high):\n        high=contest[i]\n        ans.append(contest[i])\n#        print(high)\n        \nprint(len(ans))        "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1001;\nint a[N];\nint n, cnt;\nint main() {\n  cin >> n;\n  cin >> a[0];\n  if (n == 1) {\n    cout << 0 << endl;\n    return 0;\n  }\n  for (int i = 1; i < n; i++) {\n    cin >> a[i];\n    sort(a, a + i);\n    if (a[i] < a[0] || a[i] > a[i - 1]) {\n      cnt++;\n    }\n  }\n  cout << cnt << endl;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nc = 0\na = []\nm = input().split()\n\nfor i in range(n):\n    a.append(int(m[i]))\n\nfor i in range(n):\n  l = 0\n  u = 0\n  if(i!=0):\n    for j in range(0,i):\n      if(a[i]>a[j]):\n        u+=1 \n      elif(a[i]<a[j]):\n        l+=1 \n    if((l==i)or(u==i)):\n      c=c+1\n\nprint(c)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nx = [int(i) for i in input().split()]\nt = 0\nfor i in range(1,n):\n    if x[i] > max(x[0:i]) or x[i] < min(x[0:i]):\n        t += 1\nprint(t)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = [int(s) for s in input().split()]\nmin = a[0]\nmax = a[0]\nk = 0\nfor i in range(1,len(a)):\n    if a[i]>max:\n        max = a[i]\n        k+=1\n    elif a[i]<min:\n        min = a[i]\n        k+=1\nprint(k)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\ng = [int(i) for i in input().split()]\na = 0\nfor i in range(1, n):\n    if g[i] < min(g[:i]) or g[i] > max(g[:i]):\n        a += 1\nprint(a)\n"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\narr = map(int, raw_input().split())\nmaxv = minv = arr[0]\nc = 0\nfor i in arr[1:]:\n    if i > maxv:\n        maxv = i\n        c += 1\n    elif i < minv:\n        minv = i\n        c += 1\nprint c"
        },
        {
            "language": 3,
            "solution": "import math\n\nn = int(input())\n\narr = list(map(int, input().split(\" \")))\n\namazing_ct = 0\n\nfor i in range(1,len(arr)):\n    if(i==1):\n        min_val = arr[0]\n        max_val = arr[0]\n    else:\n        min_val = min(arr[0:i])\n        max_val = max(arr[0:i])\n    \n    if(arr[i]<min_val or arr[i]>max_val):\n        amazing_ct+=1\n\nprint(amazing_ct)\n\n\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nscores = input().split()\n\ncounter = 0\nbest = int(scores[0])\nworse = int(scores[0])\n\nscores.remove(scores[0])\n\nfor i in scores:\n    if int(i) > best:\n        counter += 1\n        best = int(i)\n    elif int(i) < worse:\n        counter += 1\n        worse = int(i)\n\nprint(counter)\n"
        },
        {
            "language": 3,
            "solution": "import math\ndef solve(n,a):\n    max=a[0]\n    min=a[0]\n    c=0\n    for i in range(n):\n        if a[i]>max:\n            max=a[i]\n            c+=1\n        if min>a[i]:\n            min=a[i]\n            c+=1\n    return c\n\ndef main():\n    n=int(input())\n    a=[int(i) for i in input().split()]\n    print(solve(n,a))\n\nmain()\n"
        },
        {
            "language": 3,
            "solution": "length = int(input())\ncontests = list(map(int, input().split()))\namazing = 0\nfor i, contest in enumerate(contests[1:], 1):\n    if contest > max(contests[:i]) or contest < min(contests[:i]):\n        amazing += 1\nprint(amazing)"
        },
        {
            "language": 3,
            "solution": "N = int(input())\nCUP = list(map(int, input().split()))\nPIZDEC = 0\ncheck1 = 0\ncheck2 = 0\nfor i in range (1, N):\n    for j in range (0, i):\n        if CUP[i]<CUP[j]:\n            check1 +=1\n        elif CUP[i]>CUP[j]:\n            check2 +=1\n    if check1 == i or check2 == i:\n        PIZDEC += 1\n    check1 = 0\n    check2 = 0\nprint(PIZDEC)"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\nnums = raw_input().split()\nnums = [int(num) for num in nums]\namazing = 0\nmax = nums[0]\nmin = nums[0]\nfor i in range(1, n):\n    if nums[i] > max:\n        amazing += 1\n        max = nums[i]\n    if nums[i] < min:\n        amazing += 1\n        min = nums[i]\nprint amazing"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nscore = list(map(int, input().split()))\n\ncount = 0\n\ncur_max = score[0]\ncur_min = score[0]\n\nfor x in range(1, n):\n\tif score[x]\t< cur_min:\n\t\tcur_min = score[x]\n\t\tcount += 1\n\telif score[x] > cur_max:\n\t\tcur_max = score[x]\n\t\tcount += 1\n\t\nprint(count)\n\t\t\n\n"
        },
        {
            "language": 3,
            "solution": "n=int(input()); count=0; a=[int(i) for i in input().split()]; maximum=minimum=a[0]\nfor i in range(1,n):\n       if a[i]>maximum: count+=1\n       elif a[i]<minimum: count+=1\n       maximum=max(maximum,a[i])\n       minimum=min(minimum,a[i])\nprint(count)   "
        },
        {
            "language": 1,
            "solution": "n = input()\na = map(int,raw_input().split())\njyada = a[0]\nkam = a[0]\nans=0\nfor i,val in enumerate(a):\n    if(i>0 and jyada<val):\n        jyada = val\n        ans+=1\n    if(i>0 and kam>val):\n        kam = val\n        ans+=1\nprint ans"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[int(i) for i in input().split()]\nx=a[0]\ny=a[0]\namazing=0\nfor i in a[1:]:\n    if i>x:\n        amazing+=1\n        x=i\n    if i<y:\n        amazing+=1\n        y=i\nprint(amazing)\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  long long n;\n  cin >> n;\n  long long temp, counts = 0;\n  cin >> temp;\n  long long maxi = temp, mini = temp;\n  for (int i = 1; i < n; i++) {\n    cin >> temp;\n    if (temp > maxi) {\n      maxi = temp;\n      counts++;\n    }\n    if (temp < mini) {\n      mini = temp;\n      counts++;\n    }\n  }\n  cout << counts;\n  cout << \"\\n\";\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, max, min, count = 0, i;\n  cin >> n;\n  int arr[n];\n  cin >> arr[0];\n  max = min = arr[0];\n  for (i = 1; i < n; i++) {\n    cin >> arr[i];\n    if (arr[i] > max) {\n      max = arr[i];\n      count++;\n    } else if (arr[i] < min) {\n      min = arr[i];\n      count++;\n    }\n  }\n  cout << count << endl;\n}\n"
        },
        {
            "language": 3,
            "solution": "n =int(input())\na = list(map(int,input().split()))\nmax = a[0]; min = a[0];count = 0\nfor i in range(1,n):\n    if(a[i]> max):\n        max = a[i]\n        count+=1\n    if(a[i]<min):\n        min = a[i]\n        count+=1\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\n\nl = list(map(int, input().split()))\n\nminn = l[0]\nmaxn = l[0]\nres = 0\nfor i in range(1, n):\n\tif (l[i] > maxn):\n\t\tmaxn = l[i]\n\t\tres += 1\n\telif (l[i] < minn):\n\t\tminn = l[i]\n\t\tres += 1\n\nprint(res)\n\t \t  \t \t    \t\t   \t \t\t \t   \t\t\t\t\t"
        },
        {
            "language": 3,
            "solution": "\n# -*- coding: utf-8 -*-\n# @Date    : 2018-09-27 13:25:36\n# @Author  : raj lath (oorja.halt@gmail.com)\n# @Link    : link\n# @Version : 1.0.0\n\nfrom sys import stdin\n\nmax_val=int(10e12)\nmin_val=int(-10e12)\n\ndef read_int()     : return int(stdin.readline())\ndef read_ints()    : return [int(x) for x in stdin.readline().split()]\ndef read_str()     : return input()\ndef read_strs()    : return [x for x in stdin.readline().split()]\n\n\nnb_scores = read_int()\nscores    = read_ints()\nmin_score = scores[0]\namazing = 0\nfor i in range(1, nb_scores):\n    amazing += scores[i] > max(scores[:i]) or scores[i] < min(scores[:i])\nprint(amazing)\n\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "a = int(input())\nl = list(map(int, input().split()))\nmn = l[0]\nmx = l[0]\nc = 0\nfor i in range(1, a, 1):\n    if l[i] > mx:\n        c += 1\n        mx = l[i]\n    if l[i] < mn:\n        c += 1\n        mn = l[i]\nprint(c)"
        },
        {
            "language": 3,
            "solution": "num = int(input())\nscores = input().split()\nscores = list(map(int, scores))\n\nmin = scores[0]\nmax = scores[0]\ncounter = 0\nfor num in scores:\n    if num > max:\n        max = num\n        counter += 1\n    elif num < min:\n        min = num\n        counter += 1\n\nprint(counter)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nlist1 = list(map(int, input().split(' ')))\nmax1 = list1[0]\nmin1 = list1[0]\ncou = 0\nfor i in range(1, n):\n    if list1[i] < min1:\n        cou += 1\n        min1 = list1[i]\n    if list1[i] > max1:\n        cou += 1\n        max1 = list1[i]\nprint(cou)"
        },
        {
            "language": 1,
            "solution": "n=input()\nif n>=2:\n    s=map(int,raw_input().split())\n\n    if s[0]>s[1]:\n        maxx=s[0]\n        minn=s[1]\n        count=1\n        \n    elif s[0]<s[1]:\n        minn=s[0]\n        maxx=s[1]\n        count=1\n\n    else:\n        minn=s[0]\n        maxx=s[0]\n        count=0\n\n\n    for i in range(2,n):\n        if s[i]>maxx:\n            count=count+1\n            maxx=s[i]\n        elif s[i]<minn:\n            count=count+1\n            minn=s[i]\n\n    print count   \nelse:\n    print 0\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n;\n        n = sc.nextInt();\n        int max,min;\n        int score;\n        int amazing=0;\n\n        score = sc.nextInt();\n        max = score;\n        min = score;\n\n        for(int i=1;i<n;i++){\n            score = sc.nextInt();\n            if(score>max){\n                amazing++;\n                max = score;\n            }\n            if(score<min){\n                amazing++;\n                min = score;\n            }\n        }\n\n        System.out.println(amazing);\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "a=int(input())\nb=list(map(int,input().split()))\nc=[]\nc.append(b[0])\nans=0\nfor i in range(1,len(b)):\n\tif b[i]<min(c) or b[i]>max(c):\n\t\tans+=1\n\tc.append(b[i])\n\nprint(ans)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl1=list(map(int,input().split()))\nx=10001\ny=-1\nans=0\nfor i in range(0,n):\n    if i==0:\n        x=l1[i]\n        y=l1[i]\n    else :\n        if l1[i]>x:\n            ans+=1\n            x=l1[i]\n        elif l1[i]<y:\n            ans+=1\n            y=l1[i]\nprint(ans)"
        },
        {
            "language": 3,
            "solution": "count = 0\ninput()\ndata = [int(i) for i in input().split()]\nfor i in range(2, len(data) + 1):\n    if data[:i][-1] == min(data[:i]) and data[:i].count(data[:i][-1]) == 1 or \\\n            data[:i][-1] == max(data[:i]) and data[:i].count(data[:i][-1]) == 1:\n        # print(data[:i], data[:i][-1])\n        count += 1\nprint(count)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = [int(x) for x in input().split()]\na = 0\nmini = l[0]\nmaxi = l[0]\nfor i in range(1, len(l)):\n  if(l[i] < mini):\n    mini = l[i]\n    a += 1\n  if(l[i] > maxi):\n    maxi = l[i]\n    a += 1\nprint(a)"
        },
        {
            "language": 1,
            "solution": "n=int(raw_input())\nword=raw_input()\nl=map(int,word.split())\ncount=0\nfor i in range(1,n):\n\tif(l[i]<min(l[0:i]) or l[i]>max(l[0:i])):\n\t\tcount=count+1\nprint count\t\t"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nc=0\nfor i in range(1,n):\n    if((a[i] not in a[0:i] and a[i]>max(a[0:i])) or (a[i] not in a[0:i] and a[i]<min(a[0:i]))):\n        c+=1 \nprint(c)\n\n#5\n#100 50 200 150 200\n#10\n#4664 6496 5814 7010 5762 5736 6944 4850 3698 7242\n\n"
        },
        {
            "language": 3,
            "solution": "input()\n\na=input().split()\nm=M=int(a[0])\nans=0\nfor i in  a:\n    if int(i)>M:\n        M=int(i) \n        ans+=1\n    elif int(i)<m:\n        m=int(i)\n        ans+=1\nprint(ans)\n#http://codeforces.com/problemset/problem/155/A\n    \n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\n\nlst = list(map(int, input().split()))\n\nmx, mn = lst[0], lst[0]\n\ncnt = 0\n\nfor s in lst:\n    if s > mx:\n        cnt += 1\n        mx = s\n    elif s < mn:\n        cnt += 1\n        mn = s\nprint(cnt)\n"
        },
        {
            "language": 3,
            "solution": "contests = int(input())\nstring = input()\npoints = string.split(\" \")\nfor x in range(contests):\n    temp = points[x]\n    del points[x]\n    points.insert(x, int(temp))\namazing = 0\nfor x in range(1, contests):\n    temp = points[x]\n    results = \"yes\"\n    for y in range(x):\n        if not temp > points[y]:\n            results = \"no\"\n            break\n    if results == \"no\":\n        results = \"yes\"\n        for y in range(x):\n            if not temp < points[y]:\n                results = \"no\"\n                break\n    if results == \"yes\":\n        amazing += 1\nprint(amazing)"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\npublic class iLoveUsername\n{\n    public static void main(String args[])throws IOException\n    {\n        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n        int n=Integer.parseInt(br.readLine());\n        int a[]=new int[n];\n        \n        String s1=br.readLine();\n        String t1[]=s1.split(\" \");\n        \n        for(int i=0;i<n;i++)\n        a[i]=Integer.parseInt(t1[i]);\n        int c=0,min=a[0],max=a[0];\n        for(int i=1;i<=n-1;i++)\n        {\n            if(a[i]<min)\n            {c++;min=a[i];}\n            if(a[i]>max)\n            {c++;max=a[i];}\n        }\n        System.out.println(c);\n    }\n}"
        },
        {
            "language": 3,
            "solution": "c = int(input()) * 0\narr = [int(i) for i in input().split()]\nfor i,j in enumerate(arr):\n    if i:\n        if j > max(arr[:i]) or j < min(arr[:i]):\n            c+=1\nprint(c)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nscores = input().split()\n\nmaxs = mins = int(scores[0])\n\namazing = 0\n\nfor i in range(1, n): \n    s = int(scores[i])\n    if s < mins: \n        amazing += 1\n        mins = s\n    elif s > maxs: \n        amazing += 1\n        maxs = s\n\nprint(amazing)\n"
        },
        {
            "language": 3,
            "solution": "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Sun Mar 29 15:28:26 2020\n\n@author: the lonely wolf\n\n\n\"\"\"\n\nn = input()\nn=int(n)            #no of coins\narr = list(map(int, input().split())) ##coins\ncounter = 0\n\n\nfor i in range(1, len(arr)):\n    if arr[i] > max(arr[:i]) or arr[i] < min(arr[:i]):\n        counter = counter + 1\n        \nprint(int(counter))\n        \n    \n\n"
        },
        {
            "language": 3,
            "solution": "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Sun Apr 26 21:01:44 2020\n\n@author: Syed Ishtiyaq Ahmed\n\"\"\"\n\nn=int(input())\narr=[]\narr.append(input().split())\narr2=[]\nac=0\nfor i in arr[0]:\n    arr2.append(int(i))\nfor i in range(1,len(arr2)):\n    lc=0\n    gc=0\n    for j in range(0,i):\n        if arr2[j]<arr2[i]:\n            lc+=1\n        elif arr2[j]>arr2[i]:\n            gc+=1\n    if lc==i or gc==i:\n        ac+=1\nprint(ac)\n\n    \n                \n\n    \n    "
        },
        {
            "language": 1,
            "solution": "n = input()\na = map(int, raw_input().split())\n\nMIN = a[0]\nMAX = a[0]\n\nans = 0\n\nfor i in xrange(1,n):\n    if a[i]>MAX:\n        ans += 1\n        MAX = a[i]\n    if a[i]<MIN:\n        ans += 1\n        MIN = a[i]\nprint ans"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = list(map(int, input().split()))\nmx, mn = l[0], l[0]\nans = 0\nfor i in l[1: ]:\n    if i > mx:\n        mx = i\n        ans -= -1\n    elif i < mn:\n        mn = i\n        ans -= -1\nprint(ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, i;\n  cin >> n;\n  int ar[10001];\n  for (i = 0; i < n; i++) cin >> ar[i];\n  int mi, ma, c = 0;\n  mi = ar[0];\n  ma = ar[0];\n  for (i = 1; i < n; i++) {\n    if (ar[i] > ma) {\n      ma = ar[i];\n      c++;\n    } else if (ar[i] < mi) {\n      mi = ar[i];\n      c++;\n    }\n  }\n  cout << c << endl;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import re\nimport math\nimport copy\no=input()\nl= [int(i) for i in input().split()]\nb=l[0]\ns=l[0]\na=0\n\nfor d in l:\n    if d>b:\n        a+=1\n        b=copy.deepcopy(d)\n\n    elif d<s:\n        a+=1\n        s=copy.deepcopy(d)\n\nprint(a)\n\n\n\n\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nlst = [int(i) for i in input().split()]\ntotal = 0\nfor i in range(1,n):\n    past_lst = lst[:i]\n    if lst[i] > max(past_lst) or lst[i]< min(past_lst):\n        total += 1\nprint(total)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\narr = list(map(int,input().split()))\nlow,high = arr[0],arr[0]\ncount = 0\nfor i in range(1,n):\n    if arr[i]<low:\n        count += 1\n        low = arr[i]\n    elif arr[i]>high:\n        count += 1\n        high = arr[i]\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\npointsInContests = [int(x) for x in input().split()]\n\ndef amazingPerformances(n, pointsInContests):\n    amazingPerformancesVariable = 0\n    for i in range(0, n):\n        if i == 0:\n            best = pointsInContests[i]\n            worst = pointsInContests[i]\n\n        else:\n            if pointsInContests[i] > best:\n                amazingPerformancesVariable = amazingPerformancesVariable + 1\n                best = pointsInContests[i]\n\n            if pointsInContests[i] < worst:\n                amazingPerformancesVariable = amazingPerformancesVariable + 1\n                worst = pointsInContests[i]\n\n        #print(str(i + 1) + \". Best = \" + str(best) + \". Worst = \" + str(worst))\n\n    return amazingPerformancesVariable\n\nprint(amazingPerformances(n, pointsInContests))\n\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class Jhzzu {\n\tpublic static void main(String[] arg) {\n\t   Scanner in = new Scanner(System.in);\n\t   int n = in.nextInt();\n\t   int nextVal = in.nextInt();\n\t\tint min = nextVal;\n\t\tint max = nextVal;\n\t\tint amazing = 0;\n\t   for(int i = 1; i < n; i++) {\n\t   \t\tint thisIt = in.nextInt();\n\t   \t\tif(thisIt < min) {\n\t   \t\t\tamazing++;\n\t   \t\t\tmin = thisIt;\n\t   \t\t}\n\t   \t\telse if(thisIt > max) {\n\t   \t\t\tamazing++;\n\t   \t\t\tmax = thisIt;\n\t   \t\t}\n\t\t}\n\t\tSystem.out.print(amazing);\n\t}\n}\n//does things"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\nlarge = a[0]\nsmall = a[0]\namazing = 0\nfor i in range(1, n):\n    if(large < a[i]):\n        large = a[i]\n        amazing += 1\n    elif(small > a[i]):\n        small = a[i]\n        amazing += 1\nprint(amazing)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nk = list(map(int,input().split()))\ncount = 0\nmax_ = k[0]\nmin_ = k[0]\nfor i in range(1,len(k)):\n    if k[i] > max_:\n        max_ = k[i]\n        count+=1\n    if k[i] < min_:\n        min_=k[i]\n        count+=1\nprint(count)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nscores = list(map(int, input().split()))\ncount = 0\nfor i in range(1, n):\n    if max(scores[:i]) < scores[i] or min(scores[:i]) > scores[i]:\n        count += 1\nprint(count)\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\n\npublic class Main{\n\n    \n    public static void main(String[] args) {\n     Scanner sc=new Scanner (System.in);\n     int n=sc.nextInt();\n     int count=0;\n     int a[]=new int[n];\n     for(int i=0;i<n;i++)\n     {\n         a[i]=sc.nextInt();\n         \n     }\n      for(int i=1;i<n;i++)\n     { \n   \n         int count1=0;\n         for(int j=i-1;j>=0;j--)\n         {   \n             if(a[i]<=a[j])\n             count1++;\n         }\n    \n         if(count1==0)\n         {\n             count++;\n          \n         }\n     \n     }\n       for(int i=1;i<n;i++)\n     { \n   \n         int count1=0;\n         for(int j=i-1;j>=0;j--)\n         {   \n             if(a[i]>=a[j])\n             count1++;\n         }\n    \n         if(count1==0)\n         {\n             count++;\n          \n         }\n     \n     }\n        System.out.println(count);\n    }\n    \n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\ns=[int(s) for s in input().split()]\nr=[]\nc=0\nfor i in range(len(s)):\n    if i==0:\n       r.append(s[0])\n    else:\n        if max(r)<s[i]:\n            c+=1\n        elif min(r)>s[i]:\n            c+=1\n        r.append(s[i])\nprint(c)\n"
        },
        {
            "language": 1,
            "solution": "n=input()\nx=map(int,raw_input().split())\nsm=x[0]\nlg=x[0]\nc=0\nif n<>1:\n    for i in x:\n        if i<sm:\n            sm=i\n            c+=1\n        elif i>lg:\n            lg=i\n            c+=1 \nprint c\n        \n"
        },
        {
            "language": 3,
            "solution": "n = int(input(\"\"))\n\nlist = [int(x) for x in input(\"\").split()]\n\ndel list[n:]\nh=list[0]\nl=list[0]\ncount=0\nfor x in list:\n    if x>h:\n        count+=1\n        h=x\n    if x<l:\n        count+=1\n        l=x\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\npts = []\nx = input().split()\nfor i in x:\n    pts.append(int(i))\n\nbest = 0\nworst = 0\namazing = 0\nbest = pts[0]\nworst = pts[0]\nfor i in pts:\n    if i > best:\n        best = i\n        amazing += 1\n    elif i < worst:\n        worst = i\n        amazing += 1\n\nprint(amazing)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nlst=list(map(int,input().split()))\nlst2=[]\nfor i in lst:\n    if i not in lst2:\n        lst2.append(i)\nlst1=[]\nk=0\ni=0\nwhile i<len(lst2):\n    if lst2[i] not in lst1:\n        lst1.append(lst2[i])\n    if (min(lst1)==lst2[i] or max(lst1)==lst2[i]) and len(lst1)>1:\n        #print(lst2[i],end=' ')\n        k+=1\n    i+=1\nprint(k)"
        },
        {
            "language": 1,
            "solution": "#The following program has a\n#great show that \n#if d max or min values r repeated in #list we get extra counts\n#like test 1\n#\ndef till_x(list_a , n):\n#\n#(pehla nahin lenge)\n#list ke nth ko cimpare kar rahein #hain\n#\n    max_in = min_in = list_a[0]\n    for x in range(1 , n):\n        max_in=max(max_in , list_a[x])\n        min_in=min(min_in , list_a[x])\n    return max_in,min_in\n#\n#max min value repeat ho gai to #dubaara count ho jaayegi isliye #repetition ke cases ko hata do check \n#se... Baaki mein se koi hate bhi to kya #fark padta hai,wo to aise bhi count #nahin badhata\n#\ndef repeat_not(list_a,index):\n    x=0\n    while x<index:\n        if list_a[index]==list_a[x]:\n            break\n        else:\n            x+=1\n    if x==index:\n        return True\n    else:\n        return False\n#\nn=int(raw_input())\nList_a = map(int,raw_input().split(\" \"))\ncount=0\n#\nfor x in range(1 , len(List_a)):\n    a,b = till_x(List_a,x+1)\n#\n    if repeat_not(List_a,x) and (List_a[x]==a or List_a[x]==b):\n        count += 1\nprint count"
        },
        {
            "language": 1,
            "solution": "n = input()\npoints = map(int, raw_input().split(\" \"))\n\ncount = 0\npmin = points[0]\npmax = points[0]\n\nfor item in points[1:]:\n    if item < pmin or item > pmax:\n        count += 1\n    pmin = min(pmin, item)\n    pmax = max(pmax, item)\n\nprint count"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nmas = list(map(int, input().split()))\n\n_min = _max = mas[0]\ncount = 0\n\nfor i in range(1, n) :\n    if mas[i] > _max :\n        count += 1\n        _max = mas[i]\n    elif mas[i] < _min :\n        count += 1\n        _min = mas[i]\n\nprint(count)\n"
        },
        {
            "language": 3,
            "solution": "def best(current, all, index):\n    for i in range(index):\n        if int(all[i]) < int(current):\n            if i == index - 1:\n                return 1\n        else:\n            return 0\n\n\ndef worst(current, all, index):\n    for i in range(index):\n        if int(all[i]) > int(current):\n            if i == index - 1:\n                return 1\n        else:\n            return 0\nlength = int(input())\n\nscores = input().split()\ncount = 0\nfor i in range(1, len(scores)):\n    count = count + best(scores[i], scores, i) + worst(scores[i], scores, i)\nprint(count)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint main() {\n  int n, i, cnt = 0;\n  scanf(\"%d\", &n);\n  int a[n];\n  for (i = 0; i < n; i++) scanf(\"%d\", &a[i]);\n  int max = a[0];\n  int min = a[0];\n  for (i = 1; i < n; i++) {\n    if (a[i] > max) {\n      max = a[i];\n      cnt++;\n    } else if (a[i] < min) {\n      min = a[i];\n      cnt++;\n    }\n  }\n  printf(\"%d\\n\", cnt);\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = list(map(float,input().split()))\nprint(sum( not min(l[:i]) <=l[i] <=max(l[:i]) for i in range(1,n)))"
        },
        {
            "language": 3,
            "solution": "# -*- coding: utf-8 -*-\n\nimport math\nimport collections\nimport bisect\nimport heapq\nimport time\nimport random\nimport itertools\nimport sys\n\n\"\"\"\ncreated by shhuan at 2017/11/22 11:27\n\n\"\"\"\n\nN = int(input())\n\nA = [int(x) for x in input().split()]\n\nmaxa = A[0]\nmina = A[0]\nans = 0\n\n\nfor v in A[1:]:\n    if v > maxa or v < mina:\n        ans += 1\n\n    maxa = max(maxa, v)\n    mina = min(mina, v)\n\nprint(ans)"
        },
        {
            "language": 1,
            "solution": "import sys\n\nn = int(sys.stdin.readline())\nscores = map(int, sys.stdin.readline().split())\n\nINVALID_SCORE = 1000000\npmax, pmin = -1, INVALID_SCORE\nans = 0\nfor score in scores:\n    if pmax >= 0 and score > pmax: ans += 1\n    if pmin < INVALID_SCORE and score < pmin: ans += 1\n    pmax = max(pmax, score)\n    pmin = min(pmin, score)\n\nprint ans\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\ncount=0\nfor i in a:\n    if count==0:\n        min=i\n        max=i\n        count+=1\n    elif i>max:\n        max=i\n        count+=1\n    elif i<min:\n        min=i\n        count+=1\nprint(count-1)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = list(map(int,input().split()))\nm=mi=l[0]\nx=0\nfor i in range(1,n):\n    if l[i]>m:\n        m=l[i]\n        x+=1\n    elif l[i]<mi:\n        mi = l[i]\n        x+=1\nprint(x)"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\npublic class codeforces{\n    public static void main(String[] args){\n        Scanner kb=new Scanner(System.in);\n        int n=kb.nextInt();\n        int[] arr=new int[n];\n        for(int i=0;i<n;i++)\n        {\n          arr[i]=kb.nextInt();\n        }\n        int max=arr[0],min=arr[0];int count=0;\n        for(int i=1;i<n;i++)\n        {\n            if(arr[i]>max)\n            {\n                count++;\n                max=arr[i];\n            }\n            else if(arr[i]<min)\n            {\n                count++;\n                min=arr[i];\n            }\n        }\n        System.out.println(count);\n        \n    }\n}"
        },
        {
            "language": 3,
            "solution": "import sys\nfrom random import choice,randint\ninp=sys.stdin.readline\nout=sys.stdout.write\nflsh=sys.stdout.flush\n \nsys.setrecursionlimit(10**9)\ninf = 10**20\neps = 1.0 / 10**10\nmod = 10**9+7\ndd = [(-1,0),(0,1),(1,0),(0,-1)]\nddn = [(-1,0),(-1,1),(0,1),(1,1),(1,0),(1,-1),(0,-1),(-1,-1)]\n \ndef MI(): return map(int, inp().strip().split())\ndef LI(): return list(map(int, inp().strip().split()))\ndef LLI(): return [list(map(int, l.split())) for l in sys.stdin.readlines().strip()]\ndef LI_(): return [int(x)-1 for x in inp().strip().split()]\ndef LF(): return [float(x) for x in inp().strip().split()]\ndef LS(): return inp().strip().split()\ndef I(): return int(inp().strip())\ndef F(): return float(inp().strip())\ndef S(): return inp().strip()\ndef pf(s): return out(s+'\\n')\ndef JA(a, sep): return sep.join(map(str, a))\ndef JAA(a, s, t): return s.join(t.join(map(str, b)) for b in a)\n\ndef main():\n    n = I()\n    a = LI()\n    c=0\n    mx,mn=a[0],a[0]\n    for i in range(1,n):\n        if a[i]>mx:\n            c+=1\n            mx=a[i]\n        if a[i]<mn:\n            c+=1\n            mn=a[i]\n    pf(str(c))\n\nif __name__ == \"__main__\":\n    main()"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = list(map(int,input().split()))\nmi = l[0]\nma = l[0]\ncount = 0\n\nfor i in range(1,len(l)):\n    if(l[i]<mi):\n        mi = l[i]\n        count = count+1\n    if(l[i]>ma):\n        ma = l[i]\n        count = count+1\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nscore=input().split()\namazing=[]\nans=0\nfor i in range(n):\n    score[i]=int(score[i])\namazing.append(score[0])\nfor i in range(1,n):\n    amazing.append(score[i])\n    amazing.sort()\n    if score[i]<amazing[1] or score[i]>amazing[i-1]:\n        ans+=1\nprint(ans)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nscore=[int(i) for i in input().split()]\nif n==1:\n    print(0)\nelif n==2:\n    if score[0]==score[1]:\n        print(0)\n    else:\n        print(1)\nelse:\n\n    amazing=0\n    min=score[0]\n    max=score[0]\n    for i in range(1,n):\n        if min <= score[i]<= max:\n            amazing+=0\n        elif score[i]>max:\n            max=score[i]\n            amazing+=1\n        else:\n            min=score[i]\n            amazing+=1\n    print(amazing)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\npoint = list(map(int,input().split()))\namaz = 0\nif n > 1:\n    b = [point[0]]\n    i = 1\n    while i < n:\n        if point[i] > max(b) or point[i] < min(b):\n            b.append(point[i])\n            amaz += 1\n        else:\n            pass\n        i += 1\n\nprint(amaz)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nm = [int(i) for i in input().split()]\nmn = m[0]\nmx = m[0]\nr = 0\np = m[0]\nfor i in m[1:]:\n    if p < i:\n        if i > mx:\n            mx = i\n            r += 1\n    if p > i:\n        if i < mn:\n            mn = i\n            r += 1\nprint(r)"
        },
        {
            "language": 4,
            "solution": " import java.util.*;\nimport java.io.*;\n\npublic class love{\n    public static void main(String args[])\n    {\n        Scanner sc=new Scanner(System.in);\n        int n,i,cnt=0;\n        n=sc.nextInt();\n        int a[]=new int[n];\n        for(i=0;i<n;i++)\n        {\n            a[i]=sc.nextInt();   \n        }\n         int min=a[0];\n         int max=a[0];\n         for(i=1;i<n;i++)\n         {\n        if(a[i]<min)\n        {\n            min=a[i];\n            cnt++;\n        }\n        if(a[i]>max)\n        {\n            max=a[i];\n            cnt++;\n            \n        }\n         }\n        System.out.print(cnt);\n        \n    }\n}"
        },
        {
            "language": 3,
            "solution": "input()\nm, *s=map(int,input().split())\nn=m\nx=0\nfor c in s:\n\tif c>m:\n\t\tx+=1\n\t\tm=c\n\tif c<n:\n\t\tx+=1\n\t\tn=c\nprint(x)\n"
        },
        {
            "language": 1,
            "solution": "raw_input()\nlst = map( int, raw_input().split() )\n\n_min = lst[0]\n_max = lst[0]\nk = 0\nfor e in lst:\n    if e > _max:\n        _max = e\n        k += 1\n    elif e < _min:\n        _min = e\n        k += 1\n        \nprint k"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, p, ma, mi, a = 0;\n  cin >> n;\n  cin >> p;\n  ma = p;\n  mi = p;\n  while (n--) {\n    cin >> p;\n    if (p < mi || p > ma) a++;\n    ma = max(ma, p);\n    mi = min(mi, p);\n  }\n  cout << a;\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.*;\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int N = sc.nextInt();\n        int max = Integer.MIN_VALUE, min=Integer.MAX_VALUE, count = -2;\n        for(int ctr=1; ctr<=N;ctr++){\n            int val = sc.nextInt();\n            if(val > max){\n                max = val;\n                count++;\n            }\n            if(val < min){\n                min = val;\n                count++;\n            }\n        }\n        System.out.println(count);\n    }\n    \n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[int(x) for x in input().split()]\nmi=a[0]\nma=a[0]\nc=0\nfor i in a[1:]:\n    if i>ma:\n        ma=i\n        c+=1\n    elif i<mi:\n        mi=i\n        c+=1\nprint(c)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\narr=list(map(int,input().split()))\nhist=[arr[0]]\nm=0\nfor i in arr[1:]:\n    if i>max(hist) or i<min(hist):\n        m+=1\n        hist.append(i)\nprint(m)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, i, c = 0;\n  cin >> n;\n  int a[n];\n  for (i = 0; i < n; i++) cin >> a[i];\n  int max = a[0];\n  int min = a[0];\n  for (i = 1; i < n; i++) {\n    if (a[i] > max) {\n      max = a[i];\n      c++;\n    } else if (a[i] < min) {\n      min = a[i];\n      c++;\n    }\n  }\n  cout << c;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=[int(c) for c in input().split()]\n\n'''for j in range(0,n):\n\tx=int(input())\n\tl.append(x)'''\n\nmin=l[0]\nmax=l[0]\t\namz=0\n\nfor i in range(1,n):\n\tif(max<l[i]):\n\t\tamz+=1\n\t\tmax=l[i]\n\telif(min>l[i]):\n\t\tamz+=1\n\t\tmin=l[i]\n\nprint(amz)\n\n\t\t\n\n\t\n\t\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  int n;\n  cin >> n;\n  int mx, mn;\n  cin >> mx;\n  mn = mx;\n  int a = 0;\n  if (n == 1) {\n    cout << \"0\\n\";\n    return 0;\n  }\n  while (n--) {\n    int t;\n    cin >> t;\n    if (t > mx) {\n      mx = t;\n      a++;\n    }\n    if (t < mn) {\n      mn = t;\n      a++;\n    }\n  }\n  cout << a << endl;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\n\nli = list(map(int,input().split()))\nk = 0\nmax = 0\nmin = 0\n\nfor i in range(1,n):\n    if li[i]> li[max]:\n        max = i\n        k=k+1\n    if li[i]<li[min]:\n        min = i\n        k = k+1\nprint(k)\n"
        },
        {
            "language": 3,
            "solution": "\ncounter=0\ninput()\n\n\ntest=list(map(int,input().split()))\n\na=[test[0]]\nfor i in range(1,len(test)):\n    \n    if test[i] not in a:\n        a.append(test[i])\n        if test[i]==max(test[:i+1])  or test[i]==min(test[:i+1]):\n          \n          counter+=1\n          \nprint(counter)"
        },
        {
            "language": 3,
            "solution": "import sys\n\nn = int(input())\na = list(map(int, input().split()))\n\nmi = a[0]\nma = a[0]\nans = 0\n\nfor i in range(1,n):\n\tif a[i] > ma:\n\t\tans += 1\n\t\tma = a[i]\n\tif a[i] < mi:\n\t\tans += 1\n\t\tmi = a[i]\n\nprint(ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, cnt1, cnt2, cnt = 0;\n  cin >> n;\n  int arr[n];\n  for (int i = 0; i < n; i++) cin >> arr[i];\n  for (int i = 1; i < n; i++) {\n    cnt1 = 0, cnt2 = 0;\n    for (int j = 0; j < i; j++) {\n      if (arr[j] > arr[i]) cnt1++;\n      if (arr[j] < arr[i]) cnt2++;\n    }\n    if (cnt1 == i || cnt2 == i) cnt++;\n  }\n  cout << cnt;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "x= int(input())\narr = list(map(int, input().split()))\nh = arr[0]\nl = arr[0]\namz = 0\nfor i in range(x ):\n\n    if arr[i] > h:\n        amz+=1\n\n        h=arr[i]\n\n    elif arr[i] < l :\n        amz+=1\n\n        l=arr[i]\n\n\nprint(amz)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int,input().split()))\nmin1 = a[0]\nmax1 = a[0]\ns = 0\nfor i in a:\n    if i > max1:\n        s += 1\n        max1 = i\n    elif i < min1:\n        s += 1\n        min1 = i\nprint(s)"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\n\nstring_int = map(int,raw_input().split())\n\nAmazingNumber = 0\n\nfor x in range(1,len(string_int)) :\n\n    max = string_int[0]\n    min = string_int[0]\n\n    for y in range(1, x) :\n\n        if string_int[y] > max :\n\n            max = string_int[y]\n\n        if string_int[y] < min :\n\n            min = string_int[y]\n\n    if string_int[x] > max or string_int[x] < min :\n\n        AmazingNumber += 1\n\nprint AmazingNumber\n"
        },
        {
            "language": 1,
            "solution": "n = input()\na = map( int,raw_input().split() )\nl, r = a[0], a[0]\nans = 0\nfor i in range(1, n):\n\tif a[i] < l:\n\t\tans += 1\n\t\tl = a[i]\n\telif a[i] > r:\n\t\tans += 1\n\t\tr = a[i]\nprint ans"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = [int(i) for i in input().split()]\nsmall = a[0]\nbig = a[0]\ns = 0\nfor i in range(1,n):\n    if a[i]>big:\n        big = a[i]\n        s+=1\n    if a[i]<small:\n        small = a[i]\n        s+=1\nprint(s)"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\nlister = map(int, str(raw_input()).split())\nmaxi = lister[0]\nmini = lister[0]\ntotal = 0\nfor i in lister:\n    if i>maxi:\n        maxi = i\n        total += 1\n    elif i<mini:\n        mini = i\n        total += 1\nprint total\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\ncon=input().split()\nfor i in range(n):\n    con[i]=int(con[i])\nma=mi=con[0]\na=0\nfor i in range(1,n):\n    if con[i]>ma:\n        ma=con[i]\n        a+=1\n    if con[i]<mi:\n        mi=con[i]\n        a+=1\nprint(a)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\n\ns=input().split()\n\nmax=int(s[0])\nmin=int(s[0])\nu=0\nfor i in range(n):\n    if(int(s[i])>max):\n        max=int(s[i])\n        u+=1\n    elif(int(s[i])<min):\n        min=int(s[i])\n        u+=1\n\nprint(u)\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\n\npublic class CF155A {\n    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n    static PrintWriter pw = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));\n        \n    public static void main(String[] args) throws IOException {\n        br.readLine();\n        String[] split = br.readLine().split(\" \");\n        \n        int[] points = new int[split.length];\n        \n        for(int i = 0; i < points.length; i++) {\n            points[i] = Integer.parseInt(split[i]);\n        }\n        \n        int min = points[0], max = points[0];\n        int amazing = 0;\n        \n        for(int i = 1; i < points.length; i++) {\n            if(points[i] < min) {\n                amazing++;\n                min = points[i];\n            }\n            else if(points[i] > max) {\n                amazing++;\n                max = points[i];\n            }\n        }\n        pw.println(amazing);\n        \n        pw.close();\n    }\n}"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = list(map(int, input().split()))\ncount = 0\nmin_so_far = l[0]\nmax_so_far = l[0]\nfor i in range(1, n): # loop here\n    canidate_performance = l[i]\n    if canidate_performance > max_so_far:  # greater than all numbers before or less than all numbers before\n        max_so_far = canidate_performance\n        count = count + 1 # increment count under a condition\n    elif canidate_performance < min_so_far:\n        min_so_far = canidate_performance\n        count = count + 1\nprint(count)"
        },
        {
            "language": 3,
            "solution": "input();x=0\nl=list(map(int,input().split()))\nif len(l)>1:\n    a=max(l[0],l[1])\n    b=min(l[0],l[1])\n    if a!=b:\n        x+=1\n    for i in range(2,len(l)):\n        if l[i]>a :\n            x+=1\n            a=l[i]\n        if l[i]<b:\n            x+=1\n            b=l[i]\n    print(x)\nelse:\n    print(0)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\n\nsuper = 0\nimax = 0\nimin = 0\nvalue = False\nfor i in map(int, input().split(\" \")):\n    if n > 1:\n        if not value:\n            imax = i\n            imin = i\n            value = True\n        if i > imax:\n            super += 1\n            imax = i\n        if i < imin:\n            super += 1\n            imin = i\n\nprint(super)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=[int(i) for i in input().split()]\nma=l[0]\nmi=l[0]\na=0\nfor i in range(1,n):\n    if l[i]>ma or l[i]<mi:\n        a=a+1\n    ma=max(ma,l[i])\n    mi=min(mi,l[i])\nprint(a)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\ns=list(map(int,input().split()))\nj=0\nfor i in range(1,n):\n    if s[i]>max(s[:i]) or s[i]<min(s[:i]):\n        j+=1\nprint(j)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nscores=[int(x) for x in input().split()]\namazing=0\nif n>=2:\n    worst=scores[0]\n    best=scores[0]\n    for i in range(1,n):\n        if scores[i]>best:\n            amazing+=1\n            best=scores[i]\n        if scores[i] < worst:\n            amazing+=1\n            worst=scores[i]\nprint(amazing)"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n \npublic class practice155a {\n\tpublic static void main(String[] args) throws Exception {\n\t\tBufferedReader f = new BufferedReader(new InputStreamReader(System.in));\t\n\t\tPrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));\n\t\tStringTokenizer st = new StringTokenizer(f.readLine());\n \n\t\tint n = Integer.parseInt(st.nextToken());\n\t\t\n\t\tst = new StringTokenizer(f.readLine());\n\t\tint max = Integer.parseInt(st.nextToken());\n\t\tint min = max;\n\t\tint count = 0;\n\t\tfor (int i = 1; i < n; i++) {\n\t\t\tint curr = Integer.parseInt(st.nextToken());\n\t\t\tif (curr > max) {\n\t\t\t\tcount++;\n\t\t\t\tmax = curr;\n\t\t\t}\n\t\t\tif (curr < min) {\n\t\t\t\tcount++;\n\t\t\t\tmin = curr;\n\t\t\t}\n\t\t}\n\t\t\n \n\t\tout.println(count);\n\t\tout.close();\n\t}\n}\n\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nscore = list(map(int, input().split()))\nif len(score) == 1:\n    print(0)\n    quit()\nmax = score[0]\nmin = score[1]\ns = []\nif score[0] < score[1]:\n    max = score[1]\n    min = score[0]\nif score[1] != score[0]:\n    s.append(2)\nfor i in range(2, n):\n    if score[i] > max:\n        max = score[i]\n        #print(i + 1)\n        s.append(i + 1)\n    if score[i] < min:\n        min = score[i]\n        #print(i + 1)\n        s.append(i + 1)\nprint(len(s))\n        "
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=input().split()\nk=len(l)\ni=0\nwhile i<k:\n    l[i]=int(l[i])\n    i=i+1\nmaxi=l[0]\nmini=l[0]\ncount=0\nfor j in l:\n    if j>maxi:\n        count=count+1\n        maxi=j\n    elif j<mini:\n        count=count+1\n        mini=j\n    else:\n        continue\nprint(count) "
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nmin=a[0]\nmax=a[0]\ncount=0\nfor i in range(1,n):\n  if a[i]>max:\n    count=count+1\n    max=a[i]\n  if a[i]<min:\n    count=count+1\n    min=a[i]\nprint(count)\n  "
        },
        {
            "language": 3,
            "solution": "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Wed Dec 13 09:45:43 2017\n\n@author: admin\n\"\"\"\n\nn = int(input())\npoints = [int(x) for x in input().split()]\nmin_points = points[0]\nmax_points = points[0]\namazing = 0\nfor i in range(1,n):\n    if points[i] < min_points:\n        amazing += 1\n        min_points = points[i]\n    elif points[i]>max_points:\n        amazing += 1\n        max_points = points[i]\nprint(amazing)"
        },
        {
            "language": 1,
            "solution": "cin = raw_input\ndef main():\n    cin = raw_input\n    n = int(cin())\n    min = 10000\n    max = 0\n    ans = 0\n    sc = [int(x) for x in cin().split()]\n    for x in xrange(n):\n        if x == 0:\n            min = sc[x]\n            max = sc[x]\n        else:\n            if min > sc[x]:\n                ans += 1\n                min = sc[x]\n            elif max < sc[x]:\n                ans += 1\n                max = sc[x]\n    print ans\n\nmain()"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int arr[1000];\n  int n;\n  cin >> n;\n  for (int i = 0; i < n; i++) cin >> arr[i];\n  int amazing = 0;\n  for (int i = 1; i < n; i++) {\n    double maxi = arr[0], mini = arr[0];\n    for (int j = i - 1; j >= 0; j--) {\n      if (arr[j] > maxi)\n        maxi = arr[j];\n      else if (arr[j] < mini)\n        mini = arr[j];\n    }\n    if (arr[i] > maxi || arr[i] < mini) amazing++;\n  }\n  cout << amazing << '\\n';\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, a[1000], ans = 0;\n  cin >> n;\n  for (int i = 0; i < n; i++) cin >> a[i];\n  for (int i = 1; i < n; i++) {\n    bool x = true;\n    bool y = true;\n    int j = i - 1;\n    while (j >= 0) {\n      if (a[i] > a[j])\n        x = true;\n      else {\n        x = false;\n        break;\n      }\n      j--;\n    }\n    j = i - 1;\n    while (j >= 0) {\n      if (a[i] < a[j])\n        y = true;\n      else {\n        y = false;\n        break;\n      }\n      j--;\n    }\n    if (x || y) ans++;\n  }\n  cout << ans;\n}\n"
        },
        {
            "language": 3,
            "solution": "input()\narr = [int(i) for i in str(input()).split(' ')]\nmin = max = arr[0]\npoint = 0\nfor i in range(1,len(arr)):\n    if arr[i] < min :\n        point += 1\n        min = arr[i]\n    elif arr[i] > max:\n        point+=1\n        max = arr[i]\nprint(point)\n \t  \t\t \t\t \t\t \t \t\t \t\t\t     \t  \t"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, mx, mn, k = 0, a;\n  cin >> n >> a;\n  mx = a;\n  mn = a;\n  vector<int> vec(n - 1);\n  for (int i = 0; i < n - 1; i++) {\n    cin >> vec[i];\n    if (vec[i] > mx) {\n      mx = vec[i];\n      k++;\n    }\n    if (vec[i] < mn) {\n      mn = vec[i];\n      k++;\n    }\n  }\n  cout << k;\n}\n"
        },
        {
            "language": 1,
            "solution": "import sys\n\nn = int(sys.stdin.readline())\na = [int(x) for x in sys.stdin.readline().split()]\n\nmx = mn = a[0]\ncnt = 0\nfor i in range(1, n):\n    if a[i] > mx:\n        cnt += 1\n        mx = a[i]\n    if a[i] < mn:\n        cnt += 1\n        mn = a[i]\n\nprint(cnt)\n"
        },
        {
            "language": 1,
            "solution": "l=lambda:map(int,raw_input().split())\nn=int(raw_input())\na=l()\ncnt=0\nm1,m2=a[0],a[0]\nfor i in range(1,n):\n    if a[i]<m1:\n        m1=a[i]\n        cnt+=1\n    if a[i]>m2:\n        m2=a[i]\n        cnt+=1\nprint cnt "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  int key;\n  vector<int> v;\n  for (int i = 0; i < n; ++i) {\n    cin >> key;\n    v.push_back(key);\n  }\n  int max = v[0];\n  int min = v[0];\n  int amz = 0;\n  for (int i = 1; i < n; ++i) {\n    if (v[i] > max) {\n      amz++;\n      max = v[i];\n    }\n    if (v[i] < min) {\n      amz++;\n      min = v[i];\n    }\n  }\n  cout << amz;\n}\n"
        },
        {
            "language": 4,
            "solution": "// Working program with FastReader \nimport java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.math.*;\n\n\npublic class xyz\n{ \n\tstatic class FastReader \n\t{ \n\t\tBufferedReader br; \n\t\tStringTokenizer st; \n\n\t\tpublic FastReader() \n\t\t{ \n\t\t\tbr = new BufferedReader(new\n\t\t\t\t\tInputStreamReader(System.in)); \n\t\t} \n\n\t\tString next() \n\t\t{ \n\t\t\twhile (st == null || !st.hasMoreElements()) \n\t\t\t{ \n\t\t\t\ttry\n\t\t\t\t{ \n\t\t\t\t\tst = new StringTokenizer(br.readLine()); \n\t\t\t\t} \n\t\t\t\tcatch (IOException e) \n\t\t\t\t{ \n\t\t\t\t\te.printStackTrace(); \n\t\t\t\t} \n\t\t\t} \n\t\t\treturn st.nextToken(); \n\t\t} \n\n\t\tint nextInt() \n\t\t{ \n\t\t\treturn Integer.parseInt(next()); \n\t\t} \n\n\t\tlong nextLong() \n\t\t{ \n\t\t\treturn Long.parseLong(next()); \n\t\t} \n\n\t\tdouble nextDouble() \n\t\t{ \n\t\t\treturn Double.parseDouble(next()); \n\t\t} \n\n\t\tString nextLine() \n\t\t{ \n\t\t\tString str = \"\"; \n\t\t\ttry\n\t\t\t{ \n\t\t\t\tstr = br.readLine(); \n\t\t\t} \n\t\t\tcatch (IOException e) \n\t\t\t{ \n\t\t\t\te.printStackTrace(); \n\t\t\t} \n\t\t\treturn str; \n\t\t} \n\t} \n\n\tpublic static void main(String[] args) \n\t{ \n\t\tFastReader s=new FastReader(); \n\tint n = s.nextInt();\n\tint arr[] = new int[n];\n\tint counti=0;\n\tint min=0;\n\tint max=0;\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\tarr[i]=s.nextInt();\n\t\t}\n\t\tmin=arr[0];\n\t\tmax=arr[0];\n\t\tfor(int i=1;i<n;i++)\n\t\t{\n\t\t    if(arr[i]>max){\n\t\t    counti++;\n\t\t    max=arr[i];\n\t\t    }\n\t\t    else if(arr[i]<min)\n\t\t    {\n\t\t        counti++;\n\t\t        min=arr[i];\n\t\t    }\n\t\t    else\n\t\t    counti+=0;\n\t\t}\n\t\tSystem.out.println(counti);\n\t} \n} "
        },
        {
            "language": 3,
            "solution": "n = int(input())\narr = list(map(int,input().split()))\nmn = arr[0]\nmx = arr [0]\namzn = 0\n\nfor values in arr:\n    if values<mn:\n        mn = values\n        amzn += 1\n    elif values>mx:\n        mx = values\n        amzn += 1\nprint(amzn)\n"
        },
        {
            "language": 3,
            "solution": "x=int(input())\ny=list(map(int,input().split()))\nz=0\nmin=y[0]\nmax=y[0]\nfor i in range(len(y)):\n    if(y[i]<min): \n        min=y[i]\n        z+=1\n    if(y[i]>max):\n        max=y[i]\n        z+=1\nprint(z)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = list(map(int, input().split()))\nbest = l[0]\nworst = l[0]\nc = 0\nfor i in range(1,n):\n    if l[i] > best:\n        best = l[i]\n        c += 1\n    elif l[i] < worst:\n        worst = l[i]\n        c += 1\nprint(c)"
        },
        {
            "language": 3,
            "solution": "from sys import stdin, stdout\ninput = stdin.readline\n\nn = int(input())\npins = list(map(int, input().split()))\n\nmax = pins[0]\nmin = pins[0]\n\nans = 0\n\nfor i in range(1, n):\n         if max < pins[i]:\n                  ans += 1\n                  max = pins[i]\n         elif min > pins[i]:\n                  ans += 1\n                  min = pins[i]\n\nstdout.write(str(ans))\n"
        },
        {
            "language": 3,
            "solution": "\n\ndef discos():\n  \n  count = input()\n  word = list(map(int,input().split())) \n  recordlow = word[0]\n  recordhigh = word[0]\n  counter = int()\n\n  for x in range(1,len(word)):\n    \n    if(word[x]<recordlow):\n      counter +=1\n      recordlow=word[x]\n    if(word[x]>recordhigh):\n      counter +=1\n      recordhigh=word[x]\n  print(counter)\n   \ndiscos()\n\n"
        },
        {
            "language": 3,
            "solution": "import sys\n\ndef main():\n    contest = int(sys.stdin.readline().strip())\n    scores = [int(x) for x in sys.stdin.readline().strip().split()]\n    minScores = 0\n    maxScores = 0\n    amazing = 0\n    for i in range(0,contest):\n        if i == 0:\n            minScores = maxScores= scores[i]\n        else:\n            if scores[i] > maxScores:\n               amazing += 1\n               maxScores = scores[i]\n            elif scores[i] < minScores:\n                amazing += 1\n                minScores = scores[i]\n    print(amazing)\n\nif __name__ == (\"__main__\"):\n    main()\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\ns = list(map(int,input().split()))\nmin = s[0]\nmax = s[0]\nden = 0\nfor i in range(n):\n    if s[i] < min :\n        min = s[i]\n        den += 1\n    if s[i] > max :\n        max = s[i]\n        den += 1\nprint(den)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nls=input().split(' ')\nfor i in range(n):\n    ls[i]=int(ls[i])\ncnt=0\nfor i in range(1,n):\n    if ls[i]>max(ls[:i]) or ls[i]<min(ls[:i]):\n        cnt+=1\nprint(cnt)\n"
        },
        {
            "language": 3,
            "solution": "a=int(input())\narr=list(map(int,input().split()))\narr1=[arr[0]]\ncount=0\nfor i in range(1,a):\n    x=arr[i]\n    if x>max(arr1) or x<min(arr1):\n        count+=1\n    arr1.append(x)\nprint(count)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\ns = [int(x) for x in input().split()]\n\namazing = 0\n\nfor i in range(1,n):\n    m = max(s[0:i])\n    l = min(s[0:i])\n    if s[i] > m or s[i] < l:\n        amazing += 1\n\nprint(amazing)\n\n    \n    "
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[int(i) for i in input().split()]\nfor i in range(n):\n    try:\n        if min>a[i]:t+=1;min=a[i]\n        if max<a[i]:t+=1;max=a[i]\n    except:t=0;min=max=a[0]\nprint(t)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\ncon=list(map(int, input().split()))\nif n>2:\n    ma=max(con[0], con[1])\n    mi=min(con[0], con[1])\n    res = 0\n    for i in range(2,n):\n        if con[i]>ma:\n            res+=1\n            ma=con[i]\n        elif con[i]<mi:\n            res+=1\n            mi=con[i]\n    print(res+(con[0]!=con[1]))\nelif n==1 or ( n==2 and con[0]==con[1]):\n    print(0)\nelse:\n    print(1)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().strip().split()))[:n]\nmx=mn=a[0]\nc=0\nfor i in a:\n    if(i>mx or i<mn):\n        c+=1\n    if(i>mx):\n        mx=i\n    elif(i<mn):\n        mn=i\nprint(c)"
        },
        {
            "language": 1,
            "solution": "n=int(raw_input())\nl=map(int,raw_input().split())\nma=l[0]\nmi=l[0]\nr=0\nfor i in l:\n    if(i>ma or i<mi):\n        r+=1\n    if(i>ma):\n        ma=i\n    if(i<mi):\n        mi=i\nprint r"
        },
        {
            "language": 3,
            "solution": "input()\nlst = list(map(int, input().split(' ')))\na = [lst[0]]; l=0\nfor i in lst[1:]:\n    if i < min(a) or max(a) < i:\n        l += 1\n    a.append(i)\nprint(l)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nx = list(map(int, input().split()))\ni = 1\nk = 0\nmax = x[0]\nwhile i<n:\n    if x[i] > max:\n        max = x[i]\n        k += 1\n    i += 1\nmin = x[0]\nfor s in x:\n    if s < min:\n        min = s\n        k += 1\nprint(k)\n"
        },
        {
            "language": 3,
            "solution": "N = int(input())\nls = list(map(int, input().split()))\nm = ls[0]\nM = ls[0]\ncnt = 0\nfor i in ls:\n    if i>M or i<m:\n        cnt+=1\n    m = min(m, i)\n    M = max(M, i)\nprint(cnt)\n"
        },
        {
            "language": 1,
            "solution": "input()\nres = map(int,raw_input().split())\nresult = 0\nmax = min = res[0]\n\nfor i in res[1:]:\n    if i > max: max = i; result+=1\n    if i < min: min = i; result+=1\n\nprint(result)\n"
        },
        {
            "language": 3,
            "solution": "a=int(input())\nb=list(map(int,input().split()))\nma=b[0]\nmi=b[0]\ncnt=0 \nfor i in range(1,a) :\n    if b[i]>ma :\n        ma=b[i]\n        cnt+=1\n    elif b[i]<mi :\n        mi=b[i]\n        cnt+=1\nprint(cnt)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\np = [int(i) for i in input().split()]\nmax = p[0]\nmin = p[0]\nans = 0\nfor i in range(1, n):\n    if p[i] > max:\n        max = p[i]\n        ans += 1\n    elif p[i] < min:\n        min = p[i]\n        ans += 1\nprint(ans)\n"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\npoint = map(int,raw_input().split(\" \"))\ncount = 0\nfor i in range(1,n):\n\tif point[i] > max(point[:i]) or point[i] < min(point[:i]):\n\t\tcount += 1\nprint count \n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nscores = list(map(int,input().split()))\nans = 0\nsco = [scores[0]]\nfor i in range(1,n):\n    m = scores[i]\n    if (m>max(sco)) or (m<min(sco)):\n        ans += 1\n    sco.append(scores[i])\nprint(ans)\n    \n"
        },
        {
            "language": 3,
            "solution": "a=int(input())\nnum=0\nb=[i for i in input().split(' ')]\nma=b[0]\nmi=b[0]\nfor k in range(a):\n    if k!=0:\n        if int(b[k])>int(ma):\n            num+=1\n            ma=b[k]\n        elif int(b[k])<int(mi):\n            num+=1\n            mi=b[k]\nprint(num)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\n\nif n == 1:\n    print(0)\nelse:\n    mayor = max(a[0], a[1])\n    menor = min(a[0], a[1])\n    count = 0\n\n    if mayor != menor:\n        count = count+1\n\n    for i in range(2, n):\n        if a[i] > mayor:\n            count = count+1\n            mayor = a[i]\n        elif a[i] < menor:\n            count = count+1\n            menor = a[i]\n\n\n    print(count)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\na=l[0]\nb=l[0]\nc=0\nfor i in l:\n    if i>a:\n        c=c+1\n        a=i\nfor i in l:\n    if i<b:\n        c=c+1\n        b=i\nprint(c)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[int(i) for i in input().split()]\ns=0\nif n==1:\n    print(0)\n    raise SystemExit\nfor i in range(1,n):\n    if a[i]>max(a[0:i]) or a[i]<min(a[0:i]):\n        s=s+1\nprint(s)\n"
        },
        {
            "language": 1,
            "solution": "n = input()\nls = map(int,raw_input().split())\na = b = ls[0]\nans = 0\nfor i in xrange(1,n):\n\tif ls[i] < a or ls[i] > b:\n\t\tans = ans + 1\n\ta = min(a,ls[i]); b = max(b,ls[i])\nprint ans"
        },
        {
            "language": 1,
            "solution": "n=input()\nm=map(int,raw_input().split())\nres=0\nmaxN=m[0]\nminN=m[0]\nfor a in m:\n    if a <minN:\n        res+=1\n        minN = a\n    elif a>maxN:\n        res+=1\n        maxN = a\nprint res"
        },
        {
            "language": 3,
            "solution": "if __name__==\"__main__\":\n    n = int(input())\n    a = list(map(int,input().split()))\n    M = a[0]\n    m = a[0]\n    c = 0\n    for x in range(1,n):\n        if a[x]>M:\n            M = a[x]\n            c+=1\n        elif a[x]<m:\n            m = a[x]\n            c+=1\n    print(c)        "
        },
        {
            "language": 3,
            "solution": "n = int(input())\ns = []\ncount = 0\na = map(int, input().split(maxsplit = n))\ns=list(a)\nfor b in range(1, len(s)):\n    if s[b] > max(s[0:b]) or s[b] < min(s[0:b]):\n        count += 1\nprint(count)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\n\nvalues = [ int(x) for x in input().split() ]\n\nmax_v = values[0]\nmin_v = values[0]\nres = 0\n\nfor i in values:\n    if i < min_v:\n        res += 1\n        min_v = i\n    elif i > max_v:\n        res += 1\n        max_v = i\n\nprint(res)"
        },
        {
            "language": 1,
            "solution": "#!/usr/bin/python\nn = input()\na = map(int, raw_input().split(' '))\nmn = mx = a[0]\nans = 0\nfor i in range(1, n):\n        tmp = a[i]\n        if tmp < mn or tmp > mx:\n                ans = ans + 1\n        mn = min(mn, tmp)\n        mx = max(mx, tmp)\nprint ans\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nL = [int(i) for i in input().split()]\nR = []\na = 0\nfor i in range(len(L)):\n    R.append(L[i])\n    R.sort()\n    if R[0] == L[i] and i != 0 and R[0] != R[1]:\n        a +=1\n    elif R[-1] == L[i] and i != 0 and R[-1] != R[-2]:\n        a +=1\nprint(a)\n\n"
        },
        {
            "language": 1,
            "solution": "a=input()\nb=raw_input()\nc=b.split(' ')\nans=0\nmax=int(c[0])\nmin=int(c[0])\nfor i in range(1,a):\n    if int(c[i])>max:\n        max=int(c[i])\n        ans+=1\n    if int(c[i])<min:\n        min=int(c[i])\n        ans+=1\nprint ans\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nst=input()\nli=st.split()\nte=[int(li[0])]\nk=0\nfor i in range(1,n):\n    if int(li[i])>int(te[-1]):\n        k+=1\n    elif int(li[i])<int(te[0]):\n        k+=1\n\n    te.append(int(li[i]))\n    te.sort()\n\nprint(k)\n"
        },
        {
            "language": 3,
            "solution": "\nn = int(input())\nb = list(map(int, input().split()))\ndiv = 0\nmax_b = max(b)\nmin_b = min(b)\nbal_min = 10000\nbal_max = 0\nif 1 <= n <= 1000:\n    for i in b:\n        if max_b == 10000 and min_b == 0 and n == 2:\n            div = 3\n        elif min_b == max_b:\n            div = 2\n        elif bal_max < i:\n            bal_max = i\n            div += 1\n            if bal_min > i:\n                bal_min = i\n                div += 1\n        elif bal_min > i:\n            bal_min = i\n            div += 1\n            if bal_max < i:\n                bal_max = i\n                div += 1\n    print(div-2)"
        },
        {
            "language": 3,
            "solution": "num = int(input())\narr = input()\narr = arr.split(\" \")\n\nmin = int(arr[0])\nmax = int(arr[0])\ncount = 0\n\nfor i in range(1,num):\n    if int(arr[i]) > max:\n        count += 1\n        max = int(arr[i])\n        #print(arr[i])\n    elif int(arr[i]) < min:\n        count += 1\n        min = int(arr[i])\n        #print(arr[i])\n\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n = input()\ns = list(map(int, input().split()))\ncnt = 0\nfor i in range(1, len(s)):\n    t = s[:i]\n    if s[i] not in t:\n        t += [s[i]]\n        if s[i] == max(t) or s[i] == min(t):\n            cnt += 1\nprint(cnt)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\npoints=list(map(int,input().split()))\nMax=points[0]\nMin=points[0]\nk=0\nfor i in range(1,n):\n    if points[i]>Max:\n        k+=1\n        Max=points[i]\n    elif points[i]<Min:\n        k+=1\n        Min=points[i]\nprint(k)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\npoints=list(map(int,input().split()))\nmaxp=points[0]\nminp=points[0]\ni=1\ncount=0\nwhile i<len(points):\n    if points[i]>maxp:\n        count += 1\n        maxp=points[i]\n    if points[i]<minp:\n        count += 1\n        minp=points[i]\n    i=i+1\nprint(count)"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\nimport static java.lang.Math.*;\n\npublic class A {\n\n    void solve () throws IOException {\n        int n = in.nextInt();\n        int max = in.nextInt();\n        int min = max;\n        int answer = 0;\n        for (int i = 1; i < n; i++){\n            int x = in.nextInt();\n            if (max < x){\n                answer++;\n                max = x;\n            }\n            if (min > x){\n                answer++;\n                min = x;\n            }\n        }\n        out.println(answer);\n    }\n\n    String input = \"\";\n    String output = \"\";\n\n    FastScanner in;\n    PrintWriter out;\n\n    void run () {\n        try {\n            BufferedReader bf;\n            if (input.length() == 0)\n                bf = new BufferedReader(new InputStreamReader(\n                        System.in));\n            else\n                bf = new BufferedReader(new FileReader(input));\n            in = new FastScanner(bf);\n\n            if (output.length() == 0)\n                out = new PrintWriter(System.out);\n            else\n                out = new PrintWriter(new File(output));\n\n            solve();\n\n            out.close();\n        } catch (Exception ex) {\n            out.close();\n            ex.printStackTrace();\n        }\n    }\n\n    public static void main (String[] args) {\n        new A().run();\n    }\n\n    class FastScanner {\n        BufferedReader bf;\n        StringTokenizer st;\n\n        FastScanner(BufferedReader bf) {\n            this.bf = bf;\n        }\n\n        String next () throws IOException {\n            while (st == null || !st.hasMoreTokens())\n                st = new StringTokenizer(bf.readLine());\n            return st.nextToken();\n        }\n\n        int nextInt () throws IOException {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong () throws IOException {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble () throws IOException {\n            return Double.parseDouble(next());\n        }\n\n        int[] readIntArray (int n) throws IOException {\n            int a[] = new int[n];\n            for (int i = 0; i < n; i++)\n                a[i] = nextInt();\n            return a;\n        }\n\n        long[] readLongArray (int n) throws IOException {\n            long a[] = new long[n];\n            for (int i = 0; i < n; i++)\n                a[i] = nextLong();\n            return a;\n        }\n    }\n}"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nlist=input().split()\nfor i in range(n):\n    list[i]=int(list[i])\n#print(list)\ncount=0\nfor i in range(1,n):\n    countmax=0\n    countmin=0\n    for j in range(i):\n        if list[i]>list[j]:\n            countmax+=1\n        if list[i]<list[j]:\n            countmin+=1\n    if countmax==i or countmin==i:\n        count+=1\nprint(count)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\n#a=[int(n) for n in input().split()]\nf=0\nfor i in range(n):\n    d=0\n    e=0\n    j=i+1\n    for k in range(i):\n        if a[i]>a[k]:\n            d+=1\n        if a[i]<a[k]:\n            e+=1\n    if d==i or e==i:\n        f=f+1\nprint(f-1)"
        },
        {
            "language": 3,
            "solution": "a= int(input())\nb= list(map(int,input().split(\" \")))\nminval= b[0]\nmaxval= b[0]\nsum=0\nfor k in range(1,a):\n    if b[k] > maxval:\n        sum += 1\n        maxval= b[k]\n    if b[k] < minval:\n        sum += 1\n        minval = b[k]\nprint(sum)   \n"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\nb = map(int, raw_input().split())\nma = mi = b[0]\nans = 0\nfor bi in b:\n    if bi>ma:\n        ans += 1\n        ma = bi\n    if bi<mi:\n        ans += 1\n        mi = bi\nprint ans"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\npublic class CodeForces_155A {\npublic static void main(String[] args)throws IOException {\n    BufferedReader x=new BufferedReader(new InputStreamReader(System.in));\n    int n=Integer.parseInt(x.readLine());\n    String input[]=(x.readLine()).split(\" \");\n    int arr[]=new int[input.length];\n    \n    int result=0;\n    for(int i=0; i<input.length; i++)\n    {\n        arr[i]=Integer.parseInt(input[i]);\n    }\n    /*\n    for(int i=0; i<arr.length; i++)\n    System.out.print(arr[i]+\" \");\n    */\n    int max=arr[0], min=arr[0];\n    for(int i=0; i<arr.length; i++)\n    {\n        if(max<arr[i])\n        {\n        max=arr[i];\n        ++result;\n        }\n        if(min>arr[i])\n        {\n        min=arr[i];\n        ++result;\n        }\n    }\n    //System.out.println(min+\" \"+max);\n    System.out.println(result);\n}\n}"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\t\n\t\tScanner in = new Scanner(System.in);\n\t\tString n = in.nextLine();\n\t\tint a = Integer.parseInt(n);\n\t\tString s = in.nextLine();\n\t\tString[] abc = s.split(\" \");\n\t\tint[]niz = new int[a];\n\t\tfor(int i = 0; i < a; i++) {\n\t\t\tniz[i] = Integer.parseInt(abc[i]);\n\t\t}\n\t\t\n\t\tint max = niz[0];\n\t\tint min = max;\n\t\tint brojac = 0;\n\t\t\n\t\tfor(int i = 1; i<a; i++) {\n\t\t\tif(niz[i]>max) {\n\t\t\t\tmax = niz[i];\n\t\t\t\tbrojac = brojac+1;\n\t\t\t}\n\t\t\telse if(niz[i]<min) {\n\t\t\t\tmin = niz[i];\n\t\t\t\tbrojac = brojac+1;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(brojac);\n\t\tin.close();\n\t}\n\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\nmx, mn = a[0], a[0]\nans = 0\nfor i in range(1, n):\n  if a[i] > mx or a[i] < mn:\n    ans += 1\n  mn, mx = min(mn, a[i]), max(mx, a[i])\nprint(ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, maxx, minn, y = 0, a;\n  scanf(\"%d\", &n);\n  scanf(\"%d\", &maxx);\n  minn = maxx;\n  n--;\n  while (n--) {\n    scanf(\"%d\", &a);\n    if (a > maxx) {\n      maxx = a;\n      y++;\n    }\n    if (a < minn) {\n      minn = a;\n      y++;\n    }\n  }\n  printf(\"%d\", y);\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nli=[int(x) for x in input().split()]\nncount=0\nll=[li[0]]\nfor num in li:\n    if num>max(ll) or num<min(ll):\n        ncount+=1\n        ll.append(num)\nprint(ncount)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nrez = list(map(int, input('').split()))\ncount_rez = 0\nfor i in range(len(rez)):\n    if i == 0:\n        rez_max, rez_min = rez[0], rez[0]\n    if i != 0 and rez[i] > rez_max:\n        rez_max = rez[i]\n        count_rez += 1\n    elif i != 0 and rez[i] < rez_min:\n        rez_min = rez[i]\n        count_rez += 1\nprint(count_rez)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nlist1=input().split()\ns=0\nmax1=min1=int(list1[0])\nfor i in range(n):\n    list1[i]=int(list1[i])\n    if list1[i]>max1:\n        s+=1\n        max1=list1[i]\n    if list1[i]<min1:\n        s+=1\n        min1=list1[i]\nprint(s)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nls = list(map(int, input().split()))\nmn = ls[0]\ncnt = 0\nmx = ls[0]\nfor i in range(1, n):\n\tf = False\n\tif ls[i] > mx:\n\t\tmx = ls[i]\n\t\tf = True\n\tif ls[i] < mn:\n\t\tmn = ls[i]\n\t\tf = True\n\tif f:\n\t\tcnt += 1\nprint(cnt)\n"
        },
        {
            "language": 3,
            "solution": "a=int(input())\nk=0\nb=input().split()\nmin=int(b[0])\nmax=int(b[0])\nfor i in range(1,a):\n    if int(b[i])>max:\n        max=int(b[i])\n        k+=1\n    elif int(b[i])<min:\n        min=int(b[i])\n        k+=1\nprint(k)        \n        "
        },
        {
            "language": 3,
            "solution": "# 155A\ninput()\na = [int(i) for i in input().split()]\nMax = a[0]\nMin = a[0]\nCnt = 0\nfor rec in a:\n    if rec>Max or rec<Min:\n        Max = max(Max,rec)\n        Min = min(Min,rec)\n        Cnt += 1\nprint(Cnt)\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.Arrays;\nimport java.util.Scanner;\nimport java.util.Vector;\n\npublic class NewClass {\n\n\tpublic static void main(String[] arg) {\n\t\tScanner ob=new Scanner(System.in);\n\t\tint n=ob.nextInt();\n\t\tint a[]=new int[n];\n\t\tfor (int i=0; i<a.length; i++) {\n\t\t\ta[i]=ob.nextInt();\n\t\t}\n\t\tint count=0;\n\t\tint max=a[0];\n\t\tint min=a[0];\n\t\tfor (int i=1; i<a.length; i++) {\n\t\t\tif (a[i]>max) {\n\t\t\t\tcount++;\n\t\t\t\tmax=a[i];\n\t\t\t}\n\t\t\tif (a[i]<min) {\n\t\t\t\tcount++;\n\t\t\t\tmin=a[i];\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(count);\n\t}\n}\n"
        },
        {
            "language": 3,
            "solution": "def contest(values):\n    maximum=float('-inf')\n    minimum=float('inf')\n    count_max=-1\n    count_min=-1\n    for i in range(len(values)):\n        if values[i]>maximum:\n            count_max=count_max+1\n            maximum=values[i]\n        if values[i]<minimum:\n            count_min=count_min+1\n            minimum=values[i]\n    return count_max+count_min\nn=int(input())\nvalues=list(map(int,input().split()))\nprint(contest(values))\n            \n        \n            "
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.Set;\nimport java.util.stream.Stream;\n\npublic class Main\n{\n    public static void main(String[] args) throws IOException\n    {\n        new Main().run();\n    }\n\n    StreamTokenizer in;\n    PrintWriter out;\n\n    int nextInt() throws IOException\n    {\n        in.nextToken();\n        return (int)in.nval;\n    }\n\n    void run() throws IOException\n    {\n        in = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));\n        out = new PrintWriter(new OutputStreamWriter(System.out));\n        solve();\n        out.flush();\n    }\n\n    void solve() throws IOException\n    {\n        int n = nextInt();\n        int[] scores = new int[n];\n        for (int i = 0; i < n; i++) {\n            scores[i] = nextInt();\n        }\n        int ans = 0;\n        for (int i = 1; i < n; i++) {\n            int j = 0;\n            while (j != i && scores[i] > scores[j])\n                ++j;\n            if (j == i) {\n                ++ans;\n                continue;\n            }\n            j = 0;\n            while (j != i && scores[i] < scores[j])\n                ++j;\n            if (j == i) {\n                ++ans;\n                continue;\n            }\n        }\n        out.println(ans);\n    }\n}"
        },
        {
            "language": 3,
            "solution": "input()\nl = [int(x) for x in input().split()]\nMin = l[0]\nMax = l[0]\nans = 0\nfor x in l[1:]:\n\tif x < Min:\n\t\tans += 1\n\t\tMin = x\n\tif x > Max:\n\t\tans += 1\n\t\tMax = x\nprint(ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main(void) {\n  int n;\n  int temp;\n  cin >> n;\n  cin >> temp;\n  int ans = 0;\n  int MAX_ele = temp;\n  int MIN_ele = temp;\n  for (int i = 1; i < n; ++i) {\n    cin >> temp;\n    if (temp > MAX_ele) {\n      ans++;\n      MAX_ele = temp;\n    }\n    if (temp < MIN_ele) {\n      ans++;\n      MIN_ele = temp;\n    }\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=[int(i) for i in input().split()]\nmax=l[0]\nmin=l[0]\nsum=0\nfor i in range(n):\n    if l[i]>max :\n        max=l[i]\n        sum+=1\n    elif l[i]<min:\n        min=l[i]\n        sum+=1\nprint(sum)\n"
        },
        {
            "language": 1,
            "solution": "n = input()\nm = map(int, raw_input().split())\n\nc = 0\ntemp = [m.pop(0)]\n\nfor i in range(n - 1):\n    t = m.pop(0)\n    if t > max(temp):\n        c += 1\n    if t < min(temp):\n        c += 1\n    temp.append(t)\n\nprint c"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = input().split()\nmin = int(a[0])\nmax = int(a[0])\nx = 0\nfor i in range(1 , n):\n    a[i] = int(a[i])\n    if a[i] > max:\n        x += 1\n        max= a[i]\n    if a[i] < min:\n        x += 1\n        min = a[i]\nprint(x)\n"
        },
        {
            "language": 3,
            "solution": "def func(arr, n):\n    cnt = 0\n    high = low = arr[0]\n    for i in range(1, n):\n        if(high < arr[i]):\n            high = arr[i]\n            cnt += 1\n        if(low > arr[i]):\n            low = arr[i]\n            cnt += 1\n    return cnt\n\nn = int(input())\narr = list(map(int, input().split()))\nprint(func(arr, n))"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = list(map(int, input().split()))\nb = l[0]\nw = l[0]\nt = 0\nfor i in l:\n    if i < w:\n        w = i\n        t += 1\n    if i > b:\n        b = i\n        t += 1\nprint(t)"
        },
        {
            "language": 3,
            "solution": "x = int(input(\"\"))\n\nMin = -1\nMax = -1\ntotal = 0\n\ny = input(\"\").split()\n\nfor i in range(x):\n    y[i] = int(y[i])\n\nfor i in range(x):\n    if(Max == -1):\n        Max = y[i]\n        Min = y[i]\n    if(y[i] > Max):\n        total += 1\n        Max = y[i]\n    elif(y[i] < Min):\n        total += 1\n        Min = y[i]\n\nprint(total)\n"
        },
        {
            "language": 1,
            "solution": "a=input()\nb=raw_input().split()\nama=0\nma=mi=int(b[0])\nfor i in range(1,a):\n    b[i]=int(b[i])\n    if b[i]>ma:\n        ama+=1\n        ma=b[i]\n    elif b[i]<mi:\n        ama+=1\n        mi=b[i]\nprint ama"
        },
        {
            "language": 3,
            "solution": "n = int(input())\ncase = list(map(int,input().split()))\ncount = 0\nmaxi = case[0]\nmini = case[0]\nfor i in range(1,len(case)):\n  if case[i] > maxi:\n    maxi = case[i]\n    count+=1\n  if case[i] < mini:\n    mini = case[i]\n    count+=1\nprint(count)"
        },
        {
            "language": 3,
            "solution": "\ndef main():\n    n = int(input())\n    games = [int(i) for i in input().split(\" \")]\n    rez_min = None\n    rez_max = None\n    amz = 0\n    for game in games:\n        if rez_min == None and rez_max == None:\n            rez_min = game\n            rez_max = game\n        else:\n            if game < rez_min or game > rez_max:\n                rez_min = min(rez_min, game)\n                rez_max = max(rez_max, game)\n                amz += 1\n\n    print(amz)\n\n\nif __name__ == \"__main__\":\n    main()"
        },
        {
            "language": 3,
            "solution": "import sys\nimport math\nimport bisect\nfrom sys import stdin,stdout\nfrom math import gcd,floor,sqrt,log\nfrom collections import defaultdict as dd\nfrom bisect import bisect_left as bl,bisect_right as br\n\nsys.setrecursionlimit(100000000)\n\nii     =lambda: int(input())\nsi     =lambda: input()\njn     =lambda x,l: x.join(map(str,l))\nsl     =lambda: list(map(str,input().strip()))\nmi     =lambda: map(int,input().split())\nmif    =lambda: map(float,input().split())\nlii    =lambda: list(map(int,input().split()))\n\nceil   =lambda x: int(x) if(x==int(x)) else int(x)+1\nceildiv=lambda x,d: x//d if(x%d==0) else x//d+1\n\nflush  =lambda: stdout.flush()\nstdstr =lambda: stdin.readline()\nstdint =lambda: int(stdin.readline())\nstdpr  =lambda x: stdout.write(str(x))\n\nmod=1000000007\n\n\n#main code\nn=ii()\narr=lii()\ncount=0\nfor i in range(1,n):\n    if arr[i]>max(arr[:i]) or arr[i]<min(arr[:i]):\n        count+=1\nprint(count)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  int x;\n  cin >> x;\n  int max = x;\n  int min = x;\n  int count = 0;\n  for (int i = 1; i < n; i++) {\n    cin >> x;\n    if (x < min || x > max) {\n      count++;\n      if (x < min) {\n        min = x;\n      } else {\n        max = x;\n      }\n    }\n  }\n  cout << count << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, a, min = 0, max = 0, count = 0;\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> a;\n    if (i == 0) {\n      min = max = a;\n    }\n    if (a > max) {\n      max = a;\n      count++;\n    }\n    if (a < min) {\n      min = a;\n      count++;\n    }\n  }\n  cout << count;\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "####################################################\n# -*- coding: utf-8 -*-\nimport sys\n\nw = sys.stdout.write\nread = sys.stdin.readline\nreads = sys.stdin.read\n\ndef r(f=None):\n    if f:\n        return map(f, read().split())\n    else:\n        return read().split()\n\ndef rs(t,f=None):\n    result = []\n    result_append = result.append\n    for i in xrange(t):\n        if f:\n            result_append(map(f, read().split()))\n        else:\n            result_append(read().split())\n    return result\n\n\n####################################################\nimport math\n[n] = r(int)\nxs = r(int)\n\nmi = xs[0]\nma = xs[0]\ns = 0\nfor x in xs:\n    if mi > x:\n        mi = x\n        s += 1\n    elif ma < x:\n        ma = x\n        s += 1\n\nw(str(s))\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nPOINTS = [int(x) for x in input().split()]\n\namaze = 0\nmin = POINTS[0]\nmax = POINTS[0]\nfor i in range(1, n):\n    if POINTS[i] < min:\n        amaze += 1\n        min = POINTS[i]\n    elif POINTS[i] > max:\n        amaze += 1\n        max = POINTS[i]\n\nprint(amaze)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nperfomances = [int(x) for x in input().split(\" \")]\nmax = perfomances[0]\nmin = perfomances[0]\ncounter = 0\nfor performance in perfomances:\n    if(perfomances[0] == performance):\n        pass\n    elif performance > max:\n        max = performance\n        counter += 1\n    elif performance < min:\n        min = performance\n        counter += 1\nprint(counter)"
        },
        {
            "language": 3,
            "solution": "a=int(input())\nch=input()\nl=ch.split()\nfor i in range(len(l)):\n    l[i]=int(l[i])\nmax=l[0]\nmin=l[0]\ns=0\nfor i in range(1,a):\n    if l[i]<min:\n        s=s+1\n        min=l[i]\n    if max<l[i]:\n        s=s+1\n        max=l[i]\nprint(s)\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nclock_t TimeBegin, TimeEnd;\nlong long const MAX = 1e18;\nlong long const Base = 1;\ninline long long fpow(long long a, long long x) {\n  if (x == 0) return 1;\n  if (x & 1) {\n    return a * fpow(a, x - 1) % Base;\n  } else {\n    long long t = fpow(a, x / 2);\n    return t * t % Base;\n  }\n}\ninline long long diMod(long long A, long long B) {\n  long long result = (A * fpow(B, Base - 2)) % Base;\n  return result;\n}\ninline void Tstart();\ninline void Tstop();\nlong long a[1005], n, ans = 0, Max, Min;\nvoid Solve() {\n  cin >> n;\n  for (long long i = 0; i < (n); ++i) {\n    cin >> a[i];\n    if (i == 0) {\n      Max = a[i];\n      Min = a[i];\n    }\n    if (a[i] > Max) {\n      ans++;\n      Max = a[i];\n    } else if (a[i] < Min) {\n      ans++;\n      Min = a[i];\n    }\n  }\n  cout << ans;\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  Solve();\n  return 0;\n}\nvoid Tstart() { TimeBegin = clock(); }\nvoid Tstop() {\n  TimeEnd = clock();\n  cout << \"\\nTime elapsed: \" << 1000 * (TimeEnd - TimeBegin) / CLOCKS_PER_SEC\n       << \" ms\\n\";\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\ntalika=list(map(int,input().split()))\ntalika2=[talika[0]]\nping=0\nfor i in range(n):\n  if max(talika2)<talika[i] or min(talika2)>talika[i]:\n    ping+=1\n    talika2.append(talika[i])\n  else:\n    talika2.append(talika[i])\nprint(ping)"
        },
        {
            "language": 1,
            "solution": "n=input()\nc=0\nb=[]\nb=raw_input().split()\nfor i in range(n):\n    b[i]=int(b[i])\nmax=b[0]\nmin=b[0]\n\n\nfor i in range(len(b)):\n   \n     if b[i]>max:\n      max=b[i]\n      c=c+1\n    \n     \n    \n     if b[i]<min:\n      min=b[i]\n      c=c+1  \n     \nprint c"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nnums=input().split()\na=[]\nfor i in nums:\n\ta.append(int(i))\n\ndef love():\n\tx=0\n\ty=0\n\tmin = a[0]\n\tmax = a[0]\n\tfor i in range(1,len(a)):\n\t\tif a[i]<min:\n\t\t\tmin=a[i]\n\t\t\tx=x+1\n\t\tif a[i]>min:\n\t\t\tif a[i]>max:\n\t\t\t\tmax=a[i]\n\t\t\t\ty=y+1\n\treturn(x+y)\nprint(love())"
        },
        {
            "language": 3,
            "solution": "contests=int(input())\nscore=list(map(int,input().split()))\nnumber=score[:1]\nfor i in score:\n    contests-=min(number)<=i<=max(number)\n    number+=[i]\nprint(contests)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nmark=list(map(int,input().split()))\nmarkmax=mark[0]\nmarkmin=mark[0]\nperformances=0\nfor i in range(1,n):\n    if mark[i]>markmax:\n        performances+=1\n        markmax=mark[i]\n    if  mark[i]<markmin:\n        performances+=1\n        markmin=mark[i]\nprint(performances)\n\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nsum=0\nb=[]\nb.append(a[0])\nfor i in range(n):\n    if max(b)<a[i]:\n\t    sum=sum+1\n    else:\n\t    sum=sum\n    if min(b)>a[i]:\n\t    sum=sum+1\n    else:\n\t    sum=sum\n    b.append(a[i])\nprint(sum)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = list(map(int, input().split()))\nmin_val = l[0]\nmax_val = l[0]\nc = 0\nfor i in l[1:]:\n  if min_val < i:\n    c += 1\n    min_val = i\n  elif max_val > i:\n    c += 1\n    max_val = i\nprint(c)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nli = list(map(int,input().split(' ')))\nif n==1:\n    print(0)\nelse:\n    count = 0\n    for i in range(1,n):\n        #count = 0\n        #print(li[i])\n        m = li[0]\n        if m < li[i]:\n            c = 0\n            for j in range(i):\n                if li[j] >= li[i]:\n                    c = 1\n                    break\n            if c==0:\n               # print(\"strictly greater\")\n                count += 1\n        else:\n            c = 0\n            for j in range(i):\n                if li[j] <= li[i]:\n                    c = 1\n                    break\n            if c==0:\n                #print(\"strictly less\")\n                count += 1\n    print(count)"
        },
        {
            "language": 3,
            "solution": "a = int(input())\nA = [int(i) for i in input().split()]\nma = A[0]\nmi = A[0]\ncounter = 0\nfor i in A[1:]:\n    if i>ma:\n        ma = i\n        counter+=1\n    elif i<mi:\n        mi = i\n        counter+=1\nprint(counter)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\n\ns = input().split()\n\nmaximum = int(s[0])\nminimum = int(s[0])\ncount = 0\n\nfor i in range(1, n):\n\tx = int(s[i])\n\n\tif x > maximum:\n\t\tcount += 1\n\n\tif x < minimum:\n\t\tcount += 1\n\n\tmaximum = max(maximum, x)\n\tminimum = min(minimum, x)\n\nprint(count)"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\nP = map(int, raw_input().split())\n\nm = P[0]\nM = P[0]\nres = 0\nfor i in range(1, n):\n  if P[i] < m:\n    res += 1\n    m = P[i]\n  if P[i] > M:\n    res += 1\n    M = P[i]\nprint res\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nlist=[int(i) for i in input().split()]\na=b=list[0]\nsum=0\nfor k in range(1,n):\n    c=max(list[k],a)\n    d=min(list[k],b)\n    if c>a or d<b:\n        sum+=1\n    else:\n        sum+=0\n    a=c\n    b=d\nprint(sum)\n        \n    \n    "
        },
        {
            "language": 3,
            "solution": "n = int(input())\nL = [int(x) for x in input().split()]\nc = 0\nfor i in range(2, n+1):\n    if max(L[:i]) > max(L[:(i-1)]) or min(L[:i]) < min(L[:(i-1)]): c += 1\nprint(c)\n"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\nans = 0;\na = raw_input().split(' ');\nmx = int(a[0])\nmn = int(a[0])\nfor i in range(n):\n    if int(a[i]) > mx:\n        mx = int(a[i])\n        ans += 1\n    if int(a[i]) < mn:\n        mn = int(a[i])\n        ans += 1\n\nprint ans\n"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\nlst = map(int, raw_input().split())\nmin = lst[0]\nmax = lst[0]\nres = 0\nfor i in lst[1:]:\n    if i>max:\n        max = i\n        res += 1\n    elif i<min:\n        min = i\n        res += 1\nprint res\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nA = [int(k) for k in input().split()]\noutput = 0\nfor i in range(1,n):\n    B = A[:i+1]\n    B.sort()\n    if (A[i] == B[0] and A[i]!= B[1]) or (A[i] == B[i] and A[i] !=B[i-1]):\n        output += 1\nprint(output)\n"
        },
        {
            "language": 1,
            "solution": "n = input()\nscores = raw_input().split()\nfor ind in range(len(scores)):\n    scores[ind] = int(scores[ind])\namazing = 0\nfor ind in range(1, len(scores)):\n    if all(scores[ind] > scores[testInd] for testInd in range(ind)):\n        amazing += 1\n    elif all(scores[ind] < scores[testInd] for testInd in range(ind)):\n        amazing += 1 \nprint amazing"
        },
        {
            "language": 3,
            "solution": "def coder(n, a):\n    mini = a[0]\n    maxi = a[0]\n    count = 0\n    for i in range(1, n):\n        if(a[i]>maxi):\n            maxi = a[i]\n            count += 1\n        elif(a[i]<mini):\n            mini = a[i]\n            count += 1\n    return count\n\nn = int(input())\na = list(map(int, input().split()))\nprint(coder(n, a))"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, a, mn, mx, ans = 0;\n  cin >> n >> a;\n  mn = mx = a;\n  for (int i = 1; i < n; i++) {\n    cin >> a;\n    if (a < mn) {\n      mn = a;\n      ans++;\n    }\n    if (a > mx) {\n      mx = a;\n      ans++;\n    }\n  }\n  cout << ans;\n}\n"
        },
        {
            "language": 3,
            "solution": "A=input()\nnum=input()\nnumstr=num.split(' ')\nrealnum=[int(i) for i in numstr]\namazingtime=0\nmax=realnum[0]\nmin=realnum[0]\nfor i in realnum:\n    if i>max:\n        max=i\n        amazingtime+=1\n    else:\n        if i<min:\n            min=i\n            amazingtime+=1\nprint(amazingtime)\n"
        },
        {
            "language": 3,
            "solution": "a=int(input())\namaze=0\np=list(map(int,input().split()))\nmxa=p[0]\nmni=p[0]\nfor i in range(len(p)):\n    if p[i]>mxa:\n        amaze+=1\n        mxa=p[i]\n    elif p[i]<mni:\n        amaze+=1\n        mni=p[i]\nprint(amaze)"
        },
        {
            "language": 3,
            "solution": "if __name__ == '__main__':\n    n = int(input())\n    l = list(map(int, input().split()))\n    m, M = l[0], l[0]\n    sol = 0\n    for x in l:\n        if x < m:\n            m = x\n            sol += 1\n        elif x > M:\n            M = x\n            sol += 1\n    print(sol)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nx=list(map(int,input().split()))\nflag=0\nfor i in range(n):\n    new=[]\n    for j in range(i+1):\n        new.append(x[j])\n    #print(new)\n    if min(new)==x[j] or max(new)==x[j]:\n        if j!=0:\n            if x[j] not in new[:-1]:\n                flag=flag+1\nprint(flag)\n"
        },
        {
            "language": 3,
            "solution": "num = int(input())\nx = input()\na = x.split()\nb = []\n\nresult = 0\n\nfor x in a:\n   b.append(int(x))\n\nmax = b[0]\nmin = b[0]\n\nfor x in b :\n   if x < min :\n      result += 1\n      min = x\n   if x > max:\n      result+= 1\n      max = x\n   \nprint(result)\n\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class Soln\n{\n    public static void main(String args[])\n    {\n        Scanner s=new Scanner(System.in);\n        int n=s.nextInt();\n        int arr[]=new int [n];\n        int count=0;\n        int firstno=s.nextInt();\n        int min=firstno;\n        int max=firstno;\n        for(int i=1;i<n;i++)\n        {\n            arr[i]=s.nextInt();\n            if(arr[i]>max)\n            {\n                max=arr[i];\n                count++;\n            }\n            else if(arr[i]<min)\n            {\n                min=arr[i];\n                count++;\n            }\n        }\n        System.out.println(count);\n        \n    }\n}"
        },
        {
            "language": 1,
            "solution": "n = input()\nxn = map(int, raw_input().split())\n\nresult = 0\n\nmaximum = 0\nminimum = 0\n\nfirst = True\n\nfor x in xn:\n\tif first:\n\t\tmaximum = x\n\t\tminimum = x\n\n\t\tfirst = False\n\telse:\n\t\tif x > maximum:\n\t\t\tmaximum = x\n\t\t\tresult += 1\n\t\telif x < minimum:\n\t\t\tminimum = x\n\t\t\tresult += 1\n\nprint result"
        },
        {
            "language": 3,
            "solution": "n = int(input())\npoints = [int(x) for x in input().split()]\n\nmax_v, min_v = points[0], points[0]\ncount = 0\n\nfor p in points:\n    if p > max_v:\n        max_v = p\n        count += 1\n    elif p < min_v:\n        min_v = p\n        count += 1\n\nprint(count)"
        },
        {
            "language": 1,
            "solution": "n = input()\nl = list(map(int,raw_input().split()))\nm = l[0]\nmn = l[0]\ncnt = 0\nfor i in l:\n\tif i >m :\n\t\tm=i\n\t\tcnt+=1\n\tif i<mn:\n\t\tcnt+=1\n\t\tmn = i\n\nprint (\tcnt)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nt=0\nmi=l[0]\nmx=l[0]\nfor i in range(1,n):\n    if l[i]<mi:\n        t +=1\n        mi=l[i]\n    elif mx<l[i]:\n        t +=1\n        mx=l[i]\nprint(t)\n    \n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\np = list(map(int,input().split()))\nlow,high=[p[0],p[0]]\ncount =0\nfor i in range(1,len(p)):\n    if p[i]<low or p[i]>high:\n        count+=1\n    low = min(p[:i+1])\n    high = max(p[:i+1])\nprint(count)"
        },
        {
            "language": 3,
            "solution": "N = int(input())\nA = list(map(int, input().split()))\n\nmax_val = A[0]\nmin_val = A[0]\n\ncount_awesome = 0\nfor i in range(1, N):\n  if A[i] > max_val:\n    max_val = A[i]\n    count_awesome += 1\n  if A[i] < min_val:\n    min_val = A[i]\n    count_awesome += 1\nprint(count_awesome)"
        },
        {
            "language": 3,
            "solution": "a = int(input())\nl = list(map(int,input().split()))\nif a<3:\n\tb = set(l)\n\tif len(b)>1:print(1)\n\telse:print(0)\nelse:\n\tz = max(l[0],l[1])\n\tx = min(l[0],l[1])\n\tif z==x:c=0\n\telse:c=1\n\tfor i in range(2,a):\n\t\tif l[i]<x:\n\t\t\tx = l[i]\n\t\t\tc+=1\n\t\telif l[i]>z:\n\t\t\tz = l[i]\n\t\t\tc+=1\n\t\telse:\n\t\t\tpass\n\tprint(c)\n"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nl=list(map(int,input().split()))\nq=l[0]\nw=l[0]\nv=0\nfor i in range(1,t):\n    if l[i]>q:\n        v=v+1\n        q=l[i]\n    elif l[i]<w:\n        v=v+1\n        w=l[i]\nprint(v)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nline = list(map(int, input().split()))\n\nMAX = MIN = line[0]\ncount = 0\n\nfor i in line[1:]:\n    if i > MAX:\n        MAX = i\n        count += 1\n    elif i < MIN:\n        MIN = i\n        count += 1\n\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = list(map(int,input().split(\" \")))\n\nb = l[0]\nw = l[0]\nnb = 0\n\nfor i in range(len(l)):\n    if(l[i]>b):\n        b = l[i]\n        nb +=1\n    if(l[i]<w):\n        w = l[i]\n        nb += 1\n\nprint(nb)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int,input().split()))\nx = a[:1]\nfor i in a:\n    n -= 1 if min(x)<=i<=max(x) else 0\n    x+=[i]\nprint(n)"
        },
        {
            "language": 3,
            "solution": "input()\nl=list(map(int,input().split()))\na=max(l[0:2])\nb=min(l[0:2])\nx=int(a!=b)\nfor i in range(2,len(l)):\n    if l[i]>a :\n            x+=1\n            a=l[i]\n    if l[i]<b:\n            x+=1\n            b=l[i]\nprint(x)"
        },
        {
            "language": 1,
            "solution": "from __future__ import division\nfrom collections import Counter as ctr\nfrom math import ceil, log, factorial, sqrt\n# reads a line of input and converts into a list of ints\n# 1 1 3 => [1, 1, 3]\ndef rl():\n    return [int(i) for i in raw_input().split()]\n\n# reads n lines of input (if n defined) and returns a list of strings\n# where each element is a line in the input\n# abc\n# abcdef\n# => ['abc', 'abcdef']\n# if n not defined, read first line to get number of lines\n# 2\n# abc\n# abcdef\n# => ['abc', 'abcdef']\ndef rm(n=None):\n    if n is None:\n        n = input()\n    return [raw_input() for i in range(n)]\n\n# same as rm, except converts each line to a list of ints like rl\ndef rlm(n=None):\n    if n is None:\n        n = input()\n    return [rl() for i in range(n)]\n\ndef yn(b):\n    if b:\n        print \"YES\"\n    else:\n        print \"NO\"\n\nraw_input()\nnums=rl()\nmin_s=max_s=nums[0]\namazing=0\nfor i in nums[1:]:\n    if i < min_s or i > max_s:\n        amazing += 1\n    min_s = min(min_s, i)\n    max_s = max(max_s, i)\nprint amazing"
        },
        {
            "language": 1,
            "solution": "n=input()\nlst=map(int,raw_input().split())\ns=[]\na=0\nif n>1:\n    for i in range(1,n):\n        for k in range(0,i):\n            s.append(lst[k])\n       \n        if lst[i]>max(s) or lst[i]<min(s):\n            a+=1\n        del s[:]\n    print a\nelse:\n    print a"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstruct E {\n  int v;\n  E* next;\n  E(int w, E* p = NULL) { v = w, next = p; }\n};\nconst int N = 1004;\nconst int M = 1000;\nconst int P = 1000000007;\nconst int K = 256;\nconst double PI = 3.14159265358979323846;\nconst double eps = 1e-7;\nint n, m, k, l, d, n2, aa;\nint a[N], b[N];\nint p[N], kp;\nint kol[K], len;\nbool mark[N];\nbool ok;\nchar s[N];\npriority_queue<int> q, qq;\nvoid Primes();\nint BinSearch(int* b, int n, int x);\nvoid Print(int par = 0);\nint main() {\n  int i, j, nk;\n  n = 0, m = 0, k = 0;\n  scanf(\"%d\\n\", &n);\n  scanf(\"%d\", &aa);\n  q.push(aa);\n  qq.push(-aa);\n  for (i = 1; i < n; i++) {\n    scanf(\"%d\", &aa);\n    if (aa > q.top()) k++;\n    if (-aa > qq.top()) k++;\n    q.push(aa);\n    qq.push(-aa);\n  }\n  printf(\"%d\", k);\n  return 0;\n}\nvoid Print(int par) {\n  if (par == 0) {\n    printf(\"n=%d m=%d\\n\", n, m);\n  } else {\n    for (int i = 0; !q.empty(); i++) {\n      aa = q.top();\n      q.pop();\n      printf(\" %d (%d)\", aa, i);\n    }\n    printf(\"\\n\");\n    for (int i = 0; !qq.empty(); i++) {\n      aa = qq.top();\n      qq.pop();\n      printf(\" %d (%d)\", -aa, i);\n    }\n  }\n  printf(\"\\n\");\n}\nvoid Primes() {\n  int i, j, k, ki, pj;\n  bool ok;\n  p[0] = 2, p[1] = 3, p[2] = 5, p[3] = 7, p[4] = 11, p[5] = 13;\n  p[6] = 17, p[7] = 19, p[8] = 23, p[9] = 29, p[10] = 31;\n  p[11] = 37, p[12] = 41, p[13] = 43, p[14] = 47, p[15] = 53;\n  p[16] = 59, p[17] = 61, p[18] = 67, p[19] = 71, p[20] = 73;\n  p[21] = 79, p[22] = 83, p[23] = 89, p[24] = 97, p[25] = 101;\n  for (i = 26; i < N; i++) {\n    for (k = p[i - 1] + 2;; k += 2) {\n      ki = (int)sqrt((double)k) + 2;\n      for (ok = true, j = 0; pj = p[j], pj < ki; j++)\n        if (k % pj == 0) {\n          ok = false;\n          break;\n        }\n      if (ok) break;\n    }\n    p[i] = k;\n  }\n  kp = i;\n}\nint BinSearch(int* b, int n, int x) {\n  int l = 0, r = n - 1, m;\n  if (x < b[0]) return -1;\n  if (x > b[n - 1]) return n;\n  while (l < r - 1) {\n    m = (l + r) / 2;\n    if (x == b[m]) return m;\n    if (x < b[m])\n      r = m;\n    else\n      l = m;\n  }\n  if (x == b[l]) return l;\n  if (x == b[r]) return r;\n  return -2;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class I_love_username\n{\n\tpublic static void main(String[] args)\n\t{\n\t\tScanner input = new Scanner(System.in);\n\t\tint n = input.nextInt();\n\t\tint numOfAmazing = 0;\n\t\tint temp = input.nextInt();\n\t\tint maxRecord = temp;\n\t\tint minRecord = temp;\n\t\tfor (int i = 1; i < n; ++i)\n\t\t{\n\t\t\ttemp = input.nextInt();\n\t\t\tif (temp > maxRecord)\n\t\t\t{\n\t\t\t\t++numOfAmazing;\n\t\t\t\tmaxRecord = temp;\n\t\t\t}\n\t\t\tif (temp < minRecord)\n\t\t\t{\n\t\t\t\t++numOfAmazing;\n\t\t\t\tminRecord = temp;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(numOfAmazing);\n\t}\n}"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = []\nm = map(int,input().split())\nfor i in m : \n\tl.append(i)\n\np = l[1:]\ng= [l[0]]\ns = 0\nfor i in p :\n\tif i > max(g) or i < min(g) :\n\t\ts += 1 \n\tg.append(i)\n\t\nprint(s)\t"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(0);\n  int n;\n  cin >> n;\n  int ans = 0;\n  int my_min, my_max, t;\n  cin >> my_min;\n  my_max = my_min;\n  for (int i = 1; i < n; i++) {\n    cin >> t;\n    if (t > my_max) {\n      my_max = t;\n      ans++;\n    }\n    if (t < my_min) {\n      my_min = t;\n      ans++;\n    }\n  }\n  cout << ans;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "'''\n\nWelcome to GDB Online.\nGDB online is an online compiler and debugger tool for C, C++, Python, Java, PHP, Ruby, Perl,\nC#, VB, Swift, Pascal, Fortran, Haskell, Objective-C, Assembly, HTML, CSS, JS, SQLite, Prolog.\nCode, Compile, Run and Debug online from anywhere in world.\n\n'''\n#print ('Hello World')\nn=int(input())\nl=list(map(int,input().split()))\nc=0\nx=[]\nfor i in range(n):\n    if(i==0):\n        x.append(l[i])\n        a=l[i]\n        b=l[i]\n    else:\n        if(l[i]<a or l[i]>b):\n            c+=1\n        x.append(l[i])\n        a=min(x)\n        b=max(x)\nprint(c)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = list(map(int,input().split()))\nLESS = l[0]\nHIGH = l[0]\ndel l[0]\npoint = 0\nfor i in l:\n    if i>HIGH:\n        HIGH = i\n        point += 1\n    if i<LESS:\n        LESS = i\n        point += 1\nprint(point)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nscores=[int(x) for x in input().split()]\ns={scores[0]}\namazing=0\nfor x in scores:\n    if x<min(s) or x>max(s):\n        amazing+=1\n        s=s|{x}\nprint(amazing)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nM = [int(d) for d in input().split()]\nL = []\nm = 0\nfor i in range(n):\n    if len(L) > 0 and( M[i] > max(L) or M[i] < min(L) ):\n            m += 1\n    L.append(M[i])\nprint(m)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  int n, amazing = 0, maxx, minn, k;\n  cin >> n;\n  cin >> k;\n  maxx = k;\n  minn = k;\n  for (int i = 1; i < n; i++) {\n    cin >> k;\n    if (k > maxx) {\n      maxx = k;\n      amazing++;\n    } else if (k < minn) {\n      minn = k;\n      amazing++;\n    }\n  }\n  cout << amazing << endl;\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\nargs = raw_input().split()\nmax = -1; min = -1\nam = 0\nfor s in args:\n    if max != -1 and int(s) > max:\n        max = int(s); am = am + 1\n    elif min != -1 and int(s) < min:\n        min = int(s); am = am + 1\n    elif max == -1:\n        max = int(s); min = int(s)\nprint am"
        },
        {
            "language": 3,
            "solution": "p=int(input())\nc=0\na=list(map(int,input().split()))\nfor i in range(p):\n  l=u=0\n  if(i!=0):\n    for j in range(0,i):\n      if(a[i]>a[j]):\n        u+=1 \n      elif(a[i]<a[j]):\n        l+=1 \n    if((l==i)or(u==i)):\n      c=c+1\nprint(c)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nlist1=[int(i) for i in input().split()]\nmax1=list1[0];min1=list1[0]\ntime=0\nfor i in list1:\n    if i>max1:\n        time+=1\n        max1=i\n    elif i<min1:\n        time+=1\n        min1=i\nprint(time)\n        \n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\n\na = map(int, input().split())\na = list(a)\nln = len(a)\n\nb = []\ncont = 0\nb.append(a[0])\nfor i in range(ln):\n\n    min1 = min(b)\n    max1 = max(b)\n\n    if i >= 1:\n\n        if a[i] <= min1 or a[i] >= max1:\n            if a[i] not in b:\n                b.append(a[i])\n                cont += 1\n\n\nprint(cont)\n"
        },
        {
            "language": 3,
            "solution": "n=input()\na=input().split()\nfor (i,o) in enumerate(a):\n    a[i]=int(o)\ncount=0\nma=a[0]\nmi=a[0]\nfor i in a:\n    if i>a[0]:\n        if ma<i:\n            count+=1\n            ma=i\n    elif i<a[0]:\n        if mi>i:\n            count+=1\n            mi=i\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\np=list(map(int,input().split()))\na=-1\nb=10001\ncount=0\nfor i in range(n):\n    if i>0 and (p[i]>a or p[i]<b):\n       count+=1\n    a=max(a,p[i])\n    b=min(b,p[i])\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nk=0\nscore=list(map(int,input().split()))\nfor i in range(1,n):\n    if max(score[:i])<score[i] or min(score[:i])>score[i]:\n        k=k+1\nprint(k)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, x, l, r, p = 0;\n  cin >> n;\n  for (int i = 0; i < n; ++i) {\n    cin >> x;\n    if (i == 0) {\n      l = x;\n      r = x;\n    }\n    if (x < l) {\n      p++;\n      l = x;\n    }\n    if (x > r) {\n      p++;\n      r = x;\n    }\n  }\n  cout << p << endl;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\nx = a[0]\ny = a[0]\ncount=0\nfor i in range(1,n):\n    if a[i] > x:\n        x = a[i]\n        count += 1\n    elif a[i] < y:\n        y = a[i]\n        count +=1\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\narr=list(map(int,input().split()))\n# w=float(\"inf\")\n# b=-float(\"inf\")\nw=arr[0]\nb=arr[0]\nc=0\nfor i in range(1,n):\n    # print(i,w,b)\n    if arr[i]>b:\n        # print(1,i)\n        b=arr[i]\n        c+=1\n    elif arr[i]<w:\n        # print(2,i)\n        w=arr[i]\n        c+=1\nprint(c)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nscores=list(map(int,input().split()))\n\ncnt_amazing_performances=0\n\nfor i in range (1,n):\n    count1 = 0\n    count2 = 0\n    j, k = 0, 0\n    \n    for j in range (i):\n        if scores[i]>scores[j]:\n           count1+=1\n            \n    if count1==j+1:\n        cnt_amazing_performances+=1\n\n    for k in range(i):\n        if scores[i] < scores[k]:\n            count2+= 1\n\n    if count2 == k+1:\n        cnt_amazing_performances += 1\n\nprint(cnt_amazing_performances)\n"
        },
        {
            "language": 3,
            "solution": "class CodeforcesTask155ASolution:\n    def __init__(self):\n        self.result = ''\n        self.n = 0\n        self.performance = []\n\n    def read_input(self):\n        self.n = int(input())\n        self.performance = [int(x) for x in input().split(\" \")]\n\n    def process_task(self):\n        mx = mn = self.performance[0]\n        amaze = 0\n        for a in self.performance[1:]:\n            if a > mx:\n                mx = a\n                amaze += 1\n            elif a < mn:\n                mn = a\n                amaze += 1\n        self.result = str(amaze)\n\n    def get_result(self):\n        return self.result\n\n\nif __name__ == \"__main__\":\n    Solution = CodeforcesTask155ASolution()\n    Solution.read_input()\n    Solution.process_task()\n    print(Solution.get_result())\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nc=0\na=l[0]\nb=l[0]\nfor i in range(1,n):\n\tif(l[i]<a):\n\t\ta=l[i]\n\t\tc+=1\n\telif(l[i]>b):\n\t\tb=l[i]\n\t\tc+=1\nprint(c)\n\n"
        },
        {
            "language": 3,
            "solution": "x=int(input())\nl=list(map(int, input().split()))\nr=0\nfor i in range(1,x):\n    if (l[i] > max(l[0:i])):\n        r=r+1\n    if (l[i] < min(l[0:i])):\n        r=r+1\n\nprint(r)"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\nnums = map(int, raw_input().split())\n\nres = 0\nmin = nums[0]\nmax = nums[0]\nfor num in nums:\n    if num > max:\n        max = num\n        res += 1\n    if num < min:\n        min = num\n        res += 1\n\nprint res"
        },
        {
            "language": 3,
            "solution": "def wonderful(lst):\n    minimum, maximum, numb = lst[0], lst[0], 0\n    for i in range(1, len(lst)):\n        if lst[i] > maximum:\n            maximum = lst[i]\n            numb += 1\n        if lst[i] < minimum:\n            minimum = lst[i]\n            numb += 1\n    return numb\n\n\nn = int(input())\na = [int(j) for j in input().split()]\nprint(wonderful(a))\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=[int(i) for i in input().split()]\na=0\nfor i in range(1,n):\n    if l[i]>max(l[0:i]) or l[i]<min(l[0:i]):\n        a=a+1\nprint(a)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid solve() {\n  long long n;\n  cin >> n;\n  long long A[n];\n  for (auto &i : A) cin >> i;\n  long long mn = A[0], mx = A[0], c = 0;\n  for (long long i = 1; i < n; i++) {\n    if (A[i] > mx) {\n      c++;\n      mx = A[i];\n    } else if (A[i] < mn) {\n      c++;\n      mn = A[i];\n    }\n  }\n  cout << c << endl;\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  ;\n  solve();\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "x = int(input())\namz =0\npoints = list(map(int, input().split()))\np1 = points[0]\np2 = points[0]\nfor w in range(1, x):\n    if points[w] > p1:\n        p1 = points[w]\n        amz += 1\n    elif points[w] < p2:\n        p2 = points[w]\n        amz += 1\nprint(amz)\n\n"
        },
        {
            "language": 3,
            "solution": "\n\n\nn=int(input())\na = [int(i) for i in input().split()]\ncheck1=a[0]\ncheck2=a[0]\ncount=0\nfor i in range(1,n):\n    if a[i]>check1:\n        count+=1\n        check1=a[i]\n    if a[i]<check2:\n        count+=1\n        check2=a[i]\nprint(count)\n\n\n\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "contests = int(input())\nratings  = list(map(int,input().split()))\n\nminRating = ratings[0]\nmaxRating = ratings[0]\n\namazing  = 0\n\nfor i in range(1,contests):\n    if ratings[i] < minRating:\n        amazing += 1\n        minRating = ratings[i]\n    if ratings[i] > maxRating:\n        amazing += 1\n        maxRating = ratings[i]\n\nprint(amazing)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nlist1 = list(map(int,input().split()))\nnum = 0\nif len(list1) > 1:\n                for i in range(1,n):\n                                if list1[i] > max(list1[:i]) or list1[i] < min(list1[:i]):\n                                                num += 1\n                print(num)\nelse:\n                print('0')\n\n                                \n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin, stdout, stderr, setrecursionlimit\nimport inspect, re\n\nsetrecursionlimit(100000)\n\ndef debug (*e):\n    if not __debug__:\n        print(*e, file=stderr)\n\ndef dd(*vals):\n    frame = inspect.getframeinfo(inspect.stack()[1][0])\n    vs = re.search(\"dd\\((.+)\\)\", frame.code_context[0]).group(1).split(\",\")\n    if vs:\n        debug(\",\".join(\"{0} = {1}\".format(vs[i], v) for i,v in enumerate(vals)))\n\ndef trace(f):\n    def traced(*args, **kw):\n        debug(\"calling {} with args {}, {}\".format(f.__name__, args, kw))\n        return f(*args, **kw)\n    return traced\n#@trace\n#def f(x):\n\ndef read():\n    return stdin.readline().rstrip()\n\ndef readarr(sep=None, maxsplit=-1):\n    return read().split(sep, maxsplit)\n\ndef readint():\n    return int(read())\n\ndef readintarr(sep=None, maxsplit=-1):\n    return [int(a) for a in readarr(sep, maxsplit)]\n\n#write(1, 2, 3, sep=\"-\", end=\"!\")\ndef write(*args, **kwargs):\n    sep = kwargs.get('sep', ' ')\n    end = kwargs.get('end', '\\n')\n    stdout.write(sep.join(str(a) for a in args) + end)\n\n#writearr([1, 2, 3], sep=\"-\", end=\"!\")\ndef writearr(arr, sep=' ', end='\\n'):\n    stdout.write(sep.join(str(a) for a in arr) + end)\n\nread()\nnums = readintarr()\nn = nums[0]\nmn = mx = n\namazing = 0\nfor x in nums[1:]:\n    if x > mx:\n        #debug(x)\n        mx = x\n        amazing += 1\n    elif x < mn:\n        #debug(x)\n        mn = x\n        amazing += 1\nwrite(amazing)\n\n\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nb=[]\nb.append(a[0])\nh=0\nfor i in range(1,n):\n    if(a[i]>max(b) or a[i]<min(b)):\n        h=h+1\n    b.append(a[i])\nprint(h) \n    \n"
        },
        {
            "language": 1,
            "solution": "n = raw_input()\np = map(int, raw_input().split())\n\nmenor, maior = p[0],p[0]\namazing = 0\n\nfor i in p:\n\tif i < menor:\n\t\tmenor = i\n\t\tamazing += 1\n\tif i > maior:\n\t\tmaior = i\n\t\tamazing += 1\nprint amazing"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split(\" \")))\ne=0\nif n==1:\n    print(0)\nelse:\n    if a[1]!=a[0]:\n        e+=1\n    for x in range(2,n):\n        if a[x]>max(a[:x]) or a[x]<min(a[:x]):\n            e+=1\n    print(e)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nlist=[int(i) for i in input().split()]\na=0\nfor i in range(len(list)-1):\n\tlist1=list[0:i+1]\n\tif list[i+1]>max(list1) or list[i+1]<min(list1):\n\t\ta+=1\nprint(a)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  int counter = 0;\n  int minn = INT_MAX;\n  int maxx = -INT_MAX;\n  for (int i = 0; i < n; i++) {\n    int x;\n    cin >> x;\n    if (i != 0) {\n      if (x < minn || x > maxx) counter++;\n    }\n    minn = min(minn, x);\n    maxx = max(maxx, x);\n  }\n  cout << counter;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = input()\n\nnum = [int(i) for i in input().split()]\nama = 0\nma = num[0]\nmi = num[0]\nfor i in num :\n\n    if i > ma :\n        ma = i\n        ama = ama + 1\n\n    if i < mi :\n        mi = i\n        ama = ama + 1\nprint(ama)\n\n    \n\n\n    \n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int mod = 1000000007;\nint main() {\n  long long int t, n, m, i, j, k, l, x, y, z;\n  scanf(\"%lld\", &t);\n  long long int a, mx, mn, cnt = 0;\n  scanf(\"%lld\", &a);\n  mx = mn = a;\n  for (i = 1; i < t; ++i) {\n    scanf(\"%lld\", &a);\n    if (a > mx) {\n      mx = a;\n      cnt++;\n    }\n    if (a < mn) {\n      mn = a;\n      cnt++;\n    }\n  }\n  printf(\"%lld\\n\", cnt);\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\npublic class Main{\n    public static void main(String[]args)\n    {Scanner ob=new Scanner(System.in);\n int e=0,g,p,c=0,x=ob.nextInt();\n    int[]d=new int[1000];\n    d[e]=ob.nextInt();\n    g=d[e];\n    p=d[e];\n    for(int i=1;i<(x);i++)\n    {d[i]=ob.nextInt();\n        if(p<d[i]){p=d[i];c++;}\n        else if(g>d[i]){g=d[i]; c++;}}\n        System.out.println(c);\n    }}  "
        },
        {
            "language": 1,
            "solution": "n=int(input())\na=map(int,raw_input().split())\nmaxi=a[0]\nmini=a[0]\namazing=0\nfor i in xrange(1,n):\n  if a[i]>maxi:\n    maxi=a[i]\n    amazing+=1\n  if a[i]<mini:\n    mini=a[i]\n    amazing+=1\n    \nprint amazing"
        },
        {
            "language": 3,
            "solution": "input()\nma = -1\nmi = 10001\nk = 0\nfor x in map(int,input().split()):\n\tif x > ma:\n\t\tma = x\n\t\tk += 1\n\tif x < mi:\n\t\tmi = x\n\t\tk += 1\nprint(k-2)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint a[1001];\nint main() {\n  int n, m = -1, M = 1e7, c = 0, x;\n  scanf(\"%d\", &n);\n  while (n--) scanf(\"%d\", &x), x > m ? m = x, c++ : 0, x < M ? M = x, c++ : 0;\n  printf(\"%d\", c - 2);\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  int a[n];\n  for (int i = 0; i < n; ++i) {\n    cin >> a[i];\n  }\n  int minn, maxx, count = 0;\n  if (n > 2) {\n    minn = min(a[0], a[1]);\n    maxx = max(a[0], a[1]);\n    for (int i = 2; i < n; ++i) {\n      if (a[i] > maxx) {\n        maxx = a[i];\n        count++;\n      } else if (a[i] < minn) {\n        minn = a[i];\n        count++;\n      }\n    }\n    if (a[1] != a[0]) {\n      count++;\n    }\n    cout << count;\n  } else {\n    if (n == 2) {\n      if (a[0] != a[1])\n        cout << \"1\";\n      else\n        cout << \"0\";\n    } else {\n      cout << \"0\";\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nlist1=list(map(int,input().split()))\nmin1=list1[0]\nmax1=list1[0]\nc=0\nfor i in list1:\n    if i>max1:\n        c=c+1\n        max1=i\n    elif i<min1:\n        c=c+1\n        min1=i\nprint(c)        "
        },
        {
            "language": 3,
            "solution": "n = int(input())\nk = list(map(int, input().split()))\nc = 0\nbest = k[0]\nworst = k[0]\nfor i in range(1, n):\n    if k[i] > best:\n        c += 1\n        best = k[i]\n    if k[i] < worst:\n        c += 1\n        worst = k[i]\nprint(c)\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\ns = [int(x) for x in input().split()]\nm = []\nc = 0\ni = 0\nwhile len(m) != len(s):\n    m.append(s[i])\n    try:\n\n        if s[i+1] > max(m) or s[i+1] < min(m):\n            c += 1\n    except IndexError:\n        break\n    i += 1\n\n\nprint(c)\n\n\n\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class Scores\n{\n\tpublic static void main(String args[])\n\t{\n\t\tint n,i,count=0,min=0,max=0;\n\t\tScanner s=new Scanner(System.in);\n\t\tn=s.nextInt();\n\t\tint a[]=new int[n];\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\ta[i]=s.nextInt();\n\t\t}\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tif(a[max]<a[i])\n\t\t\t{\n\t\t\t\tmax=i;\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\tif(a[min]>a[i])\n\t\t\t{\n\t\t\t\tmin=i;\t\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(count);\n\t}\t\n}\t"
        },
        {
            "language": 3,
            "solution": "n=int(input())\ndata=[int(i) for i in input().split()]\nnm=0\nfor i in range(1,n):\n    t=data[0:i]\n    if data[i]>max(t) or data[i]<min(t):\n        nm+=1\nprint(nm)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\ntab = list(map(int , input().split()))\nthemost = -1\ntheleast = 10001\nam = -1\nfor i in tab:\n    if i > themost or i < theleast:\n        am += 1\n    if i > themost:\n        themost = i\n    if i < theleast:\n        theleast = i\nprint(am)"
        },
        {
            "language": 3,
            "solution": "input()\ngame=list(map(int,input().split()))\nmi=ma=game[0]\nmeow=0\nfor i in range(len(game)):\n    if game[i]>ma:\n        meow+=1\n        ma=game[i]\n    elif game[i]<mi:\n        meow+=1\n        mi=game[i]\nprint(meow)"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class I_love_Username {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int max = 0;\n        int min = 0;\n        int amazing=0;\n\n        for (int i = 0; i < n; i++) {\n            int points = sc.nextInt();\n            if(i==0){\n                max=points;\n                min=points;\n            }\n            else {\n                if(points>max){\n                    max = points;\n                    amazing++;\n                }\n                else if(points<min){\n                    min=points;\n                    amazing++;\n                }\n            }\n        }\n        System.out.println(amazing);\n\n    }\n}\n"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\nb = map(int,raw_input().split())\n\ncur_max = cur_min = b[0]\nres = 0\nfor i in range(n):\n    if b[i]>cur_max:\n        res+=1\n        cur_max = b[i]\n    if b[i]<cur_min:\n        res+=1\n        cur_min = b[i]\n\nprint res"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\ncount = 0\nmax1 = min1 = a[0]\nfor i in range(n):\n\tif a[i] > max1:\n\t\tmax1 = a[i]\n\t\tcount+=1\n\tif a[i] < min1:\n\t\tmin1 = a[i]\n\t\tcount+=1\nprint(count)\n\n"
        },
        {
            "language": 1,
            "solution": "n=input()\nA=map(int,raw_input().split())\nmi=A[0]\nma=A[0]\nc=0\nfor x in A:\n    if x>ma:\n        ma=x\n        c+=1\n    if x<mi:\n        mi=x\n        c+=1\nprint c\n"
        },
        {
            "language": 4,
            "solution": "\n\nimport java.util.Scanner;\n\n/**\n *\n * @author ghafir\n */\npublic class JavaApplication1 {\n\n    /**\n     * @param args the command line arguments\n     */\n    public static void main(String[] args) {\n        Scanner in = new Scanner (System.in);\n          int n=in.nextInt();\n         int cnt=0;\n\n    int tab[]=new int[n];\n    for(int i=0;i<n;i++){\n        tab[i]=in.nextInt();\n    }\n    int max=tab[0];\n    int min=tab[0];\n    for(int i=0;i<n;i++){\n        if(tab[i]>max){\n            max=tab[i];\n            cnt++;\n        }\n        if(tab[i]<min){\n           min=tab[i];\n           cnt++;\n        }\n    }\n        System.out.println(cnt);\n    \n\n    }\n\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class force_41{\n    public static void main(String args[]){\n        Scanner sc=new Scanner(System.in);\n        int n=sc.nextInt();\n        int b=sc.nextInt();\n        int max=b;\n        int min=b;\n        int temp=0;\n        for(int i=1;i<n;i++){\n            int a=sc.nextInt();\n            if(a>max){\n                max=a;\n                temp++;\n            }\n            if(a<min){\n                min =a;\n                temp++;\n            }\n        }\n        System.out.println(temp);\n    }\n}"
        },
        {
            "language": 1,
            "solution": "import sys\n\ninput = sys.stdin.readline\n\n\n############ ---- Input Functions ---- ############\ndef inp():\n    return (int(input()))\n\n\ndef inlt():\n    return (list(map(int, input().split())))\n\n\ndef insr():\n    s = input()\n    return (list(s[:len(s) - 1]))\n\n\ndef invr():\n    return (map(int, input().split()))\n\n\nn = inp()\nlist = inlt()\ns = 0\nx = list[0]\nmax = x\nmin = x\nfor x in list:\n    if x > max:\n        max = x\n        s = s + 1\n    elif x < min:\n        min = x\n        s = s + 1\nprint s\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\n\n############ ---- Input Functions ---- ############\n#  \u2014 For taking integer inputs.\ndef inp():\n    return(int(input()))\n    # \u2014 For taking List inputs.\ndef inlt():\n    return(list(map(int,input().split())))\n    #  For taking string inputs. Actually it returns a List of Characters, instead of a string, which is easier to use in Python, because in Python, Strings are Immutable.\ndef insr():\n    s = input()\n    return(list(s[:len(s) - 1]))\n    # \u2014 For taking space seperated integer variable inputs.\ndef invr():\n    return(map(int,input().split()))\n# --------------------------------------------------\nnum = inp()\nlist_input = list(invr())\nlist_scores = []\nlist_scores.append(list_input[0])\ncount = 0\nfor i in range(1,num):\n    if list_input[i] > max(list_scores) or list_input[i] < min(list_scores):\n        count += 1\n    list_scores.append(list_input[i])\nprint(count)"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\na = map(int,raw_input().split())\nma = a[0]\nmi = a[0]\nct = 0\nfor i in range(1,n):\n\tif a[i]>ma:\n\t\tct += 1\n\t\tma = a[i]\n\tif a[i]<mi:\n\t\tct += 1\n\t\tmi = a[i]\nprint ct"
        },
        {
            "language": 3,
            "solution": "number_of_contest = int(input())\npoints = list(map(int, input().split()))\ncount = 0\n\n\ndef check(points, point):\n    # print(points, point, max(points), min(points))\n    if point < min(points) or point > max(points):\n        return True\n    return False\n\n\nfor i in range(1, number_of_contest):\n    if check(points[:i], points[i]):\n        count += 1\n\nprint(count)\n"
        },
        {
            "language": 3,
            "solution": "def main():   \n    n = int(input())\n    score = list(map(int,input().split()))\n    max_score = min_score = score[0]\n    score.remove(max_score)\n    output = 0\n    for i in score:\n        if i > max_score:\n            max_score = i\n            output += 1\n        elif i < min_score:\n            min_score = i\n            output += 1\n\n    print(output)\n\nmain()"
        },
        {
            "language": 3,
            "solution": "def ii(): return int(input())\ndef mi(): return map(int, input().split())\ndef li(): return list(map(int, input().split()))\n\n\nt = 1\n\nfor _ in range(t):\n    n = ii()\n    p = li()\n\n    count = 0\n    for i in range(1, len(p)):\n        if p[i] > max(p[:i]) or p[i] < min(p[:i]):\n            count += 1\n    print(count)\n"
        },
        {
            "language": 3,
            "solution": "import sys\n\nit = iter(sys.stdin.read().splitlines())\nn = int(next(it))\np = [int(x) for x in next(it).split()]\ncount = 0\n\nfor x in range(1,len(p),1):\n    indexMax = 0\n    indexMin = 0\n    for y in range(x):\n        if p[y] < p[x]:\n            indexMin+=1\n        if p[y] > p[x]:\n            indexMax += 1\n    if indexMin == x or indexMax == x:\n        count+=1\n\nprint(count)"
        },
        {
            "language": 1,
            "solution": "raw_input()\np = map(int, raw_input().split())\nmin, max = p[0], p[0]\ndel p[0]\nret = 0\nfor i in p:\n    if i < min:\n        ret += 1\n        min = i\n    elif i > max:\n        ret += 1\n        max = i\n    \nprint(ret)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint dx[8] = {0, -1, -1, -1, 0, 1, 1, 1};\nint dy[8] = {-1, -1, 0, 1, 1, 1, 0, -1};\nstring bin(int n);\nvoid generate100binary();\nbool valid(int x, int y) { return (x >= 0 and y >= 0); }\nint n, w;\nvector<pair<long long, long long>> v;\nlong long dp[1000][1000];\nint maximumweight(long long i, long long weight, long long value) {\n  static long long dp[1000][1000];\n  if (weight > w) return -1;\n  if (i >= v.size()) {\n    if (weight <= w)\n      return dp[i][weight];\n    else\n      return -1;\n  }\n  if (dp[i][weight])\n    return dp[i][weight];\n  else\n    return dp[i][weight] = max(\n               maximumweight(i + 1, weight + v[i].first, value + v[i].second),\n               maximumweight(i + 1, weight, value));\n  return max(maximumweight(i + 1, weight + v[i].first, value + v[i].second),\n             maximumweight(i + 1, weight, value));\n}\nbool validd(int x, int n) { return (x >= 0 and x < n); }\nvoid code() {\n  int n;\n  cin >> n;\n  vector<int> v(n);\n  for (int i = 0; i < n; i++) cin >> v[i];\n  ;\n  int cnt = 0;\n  for (int i = 1; i < n; i++) {\n    vector<int> copp;\n    for (int j = 0; j < i; j++) {\n      copp.push_back(v[j]);\n    }\n    if (v[i] > *max_element(copp.begin(), copp.end()) or\n        v[i] < *min_element(copp.begin(), copp.end()))\n      cnt++;\n  }\n  cout << cnt << '\\n';\n}\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  ;\n  int t = 1;\n  while (t--) {\n    code();\n  }\n}\nstring bin(int n) {\n  string s = \"\";\n  bitset<7> bs = n;\n  for (int i = 0; i < bs.size(); i++) {\n    s += to_string(bs[i]);\n  }\n  reverse(s.begin(), s.end());\n  return s;\n}\nvoid generate100binary() {\n  for (int i = 0; i <= 100; i++) {\n    cout << i << \" : \";\n    cout << bin(i) << '\\n';\n  }\n}\n"
        },
        {
            "language": 1,
            "solution": "n=int(input())\nstr=raw_input()\nlist=[int(i) for i in str.split()]\nm=[list[0]]\nans=0\nfor i in range(1,n):\n    if list[i]>max(m) or list[i]<min(m):\n        ans=ans+1\n        m.append(list[i])\n    else:\n        continue\n\nprint ans"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class MergeSort{\n\tpublic static void main(String args[]) {\n\t\tScanner scan = new Scanner(System.in);\n        int n = scan.nextInt();\n        int count=0;\n        int max = scan.nextInt();\n        int min = max;\n        for(int i =1;i<n;i++) {\n        \tint x = scan.nextInt();\n        \tif(x>max) {\n        \t\tmax = x;\n        \t\tcount++;\n        \t}\n        \telse if(x<min) {\n        \t\tmin = x;\n        \t\tcount++;\n        \t}\n        }\n        System.out.println(count);\n\t}\n}\n\t\n\t"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = list(map(int,input().split()))\nl1 = [l[0]]\ncount = 0\nfor i in range(1,n):\n\tif l[i]<min(l1) or l[i]>max(l1):\n\t\tcount += 1\n\t\tl1.append(l[i])\t\nprint(count)\t\t"
        },
        {
            "language": 3,
            "solution": "import math\nimport itertools\n\ngh = lambda: map( int, input().split() )\nmod = 998244353\nmod = int(mod)\n\ndef main():\n    input()\n    a = list( gh() )\n    mx, cnt = a[0], 0\n    mn = mx\n    for i in a:\n        if i > mx:\n            cnt += 1\n            mx = i\n        if i < mn:\n            mn = i\n            cnt += 1\n    print( cnt )\nmain()"
        },
        {
            "language": 3,
            "solution": "n = int(input().strip())\nscores = tuple(map(int, input().strip().split()))\nmax_s, min_s = scores[0], scores[0]\nans = 0\nfor s in scores:\n\tif s < min_s:\n\t\tans += 1\n\t\tmin_s = s\n\telif s > max_s:\n\t\tans += 1\n\t\tmax_s = s\nprint(ans)"
        },
        {
            "language": 3,
            "solution": "import sys\nfrom functools import lru_cache, cmp_to_key\nfrom heapq import merge, heapify, heappop, heappush, nlargest, nsmallest, _heapify_max, _heapreplace_max\nfrom math import ceil, floor, gcd, fabs, factorial, fmod, sqrt, inf, log\nfrom collections import defaultdict as dd, deque, Counter as c\nfrom itertools import combinations as comb, permutations as perm\nfrom bisect import bisect_left as bl, bisect_right as br, bisect\nfrom fractions import Fraction\n# sys.setrecursionlimit(2*pow(10, 6))\n# sys.stdin = open(\"input.txt\", \"r\")\n# sys.stdout = open(\"output.txt\", \"w\")\nmod = pow(10, 9) + 7\nmod2 = 998244353\ndef data(): return sys.stdin.readline().strip()\ndef out(*var, end=\"\\n\"): sys.stdout.write(' '.join(map(str, var))+end)\ndef l(): return list(sp())\ndef sl(): return list(ssp())\ndef sp(): return map(int, data().split())\ndef ssp(): return map(str, data().split())\ndef l1d(n, val=0): return [val for i in range(n)]\ndef l2d(n, m, val=0): return [l1d(n, val) for j in range(m)]\n\n\nn = int(data())\narr = l()\nlow, high, answer = arr[0], arr[0], 0\nfor i in arr[1:]:\n    if low > i:\n        answer += 1\n        low = i\n    if high < i:\n        answer += 1\n        high = i\nout(answer)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nscores = list(map(int, input().split()))\n\nsol = 0\nfor i in range(1, n):\n    if all(scores[i] < el for el in scores[0:i]) or all(scores[i] > el for el in scores[0:i]):\n        sol += 1\n\nprint(sol)"
        },
        {
            "language": 1,
            "solution": "ri = lambda: raw_input().strip()\n\nn = int( ri() )\n\ntotalScore = map(int, ri().split() )\n\namazing = 0\nmaxScore = totalScore[0]\nminScore = totalScore[0]\n\nfor i in totalScore:\n    if i > maxScore:\n        amazing += 1\n        maxScore = i\n    elif i < minScore:\n        amazing += 1\n        minScore = i\n\nprint amazing"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nar=list(map(int,input().split()))\nmi,ma=ar[0],ar[0]\ns=0\nfor x in range(1,n):\n    if ar[x]<mi:\n        mi=ar[x]\n        s+=1\n    if ar[x]>ma:\n        ma=ar[x]\n        s+=1\nprint(s)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\n\nmin = max =  a[0]\namazing = 0\nfor i in a:\n    if i < min:\n        min = i\n        amazing += 1\n    elif i > max:\n        max = i\n        amazing += 1\n\nprint(amazing)"
        },
        {
            "language": 3,
            "solution": "input()\narr = list(map(int, input().split()))\na, b = arr[0], arr[0]\nam = 0\nfor x in arr:\n    if x > a:\n        a = x\n        am += 1\n    elif x < b:\n        b = x\n        am += 1\nprint(am)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl1 = list(map(int, input().split()))\ncount = 0\nfor i in range(1, n):\n    a = max(l1[0:i])\n    b = min(l1[0:i])\n    if l1[i] > a or l1[i] < b:\n        count += 1\n    else:\n        pass\nprint(count)"
        },
        {
            "language": 1,
            "solution": "n = input()\na= map(int,raw_input().split())\ntop=0\nbot=0\npoints=0\nfor i in range(len(a)):\n    if i==0:\n        top = bot = a[i]\n        continue\n    if a[i]>top:\n        points+=1\n        top = a[i]\n        continue\n    if a[i]<bot:\n        points+=1\n        bot = a[i]\nprint(points)\n"
        },
        {
            "language": 3,
            "solution": "import sys\ndef main():\n    n = int(input())\n    test=input()\n    marks = (test.split())\n\n   \n    max=int(marks[0])\n    min=int(marks[0])\n    i=0\n    count=0\n\n    \n    \n    while i<n:\n        if int(marks[i])>int(max):\n            max=marks[i]\n            count=count+1\n        if int(marks[i])<int(min):\n            min=marks[i]\n            count=count+1\n        i=i+1\n    print (count)\n    \n \n            \n       \n       \nif __name__=='__main__':\n    main()\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class ILoveUsername {\n\tpublic static void main(String[] args) {\n\n\t\tScanner in = new Scanner(System.in);\n\t\tint n = in.nextInt(), f = in.nextInt(), min = f, max = f, a = 0;\n\n\t\twhile (n-- > 1) {\n\t\t\tint x = in.nextInt();\n\t\t\tif (x < min) {\n\t\t\t\tmin = x;\n\t\t\t\ta++;\n\t\t\t} else if (x > max) {\n\t\t\t\tmax = x;\n\t\t\t\ta++;\n\t\t\t}\n\t\t}\n\t\tin.close();\n\t\tSystem.out.println(a);\n\t}\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nli = [int(i) for i in input().split()]\nu = 0\na = 1\nwhile(a < len(li)):\n    if((max(li[0:a]) < li[a]) or (min(li[0:a]) > li[a])):\n        u = u + 1\n    a = a + 1\nprint(u)"
        },
        {
            "language": 3,
            "solution": "x=int(input())\ny=list(map(int,input().split()))\nc=0\nw=y[0]\nh=y[0]\nfor i in y:\n    if i>h:\n        c+=1\n        h=i\n    elif i<w:\n        w=i\n        c+=1\nprint(c)"
        },
        {
            "language": 3,
            "solution": "z,zz=input,lambda:list(map(int,z().split()))\nzzz=lambda:[int(i) for i in stdin.readline().split()]\nszz,graph,mod,szzz=lambda:sorted(zz()),{},10**9+7,lambda:sorted(zzz())\nfrom string import *\nfrom re import *\nfrom collections import *\nfrom queue import *\nfrom sys import *\nfrom collections import *\nfrom math import *\nfrom heapq import *\nfrom itertools import *\nfrom bisect import *\nfrom collections import Counter as cc\nfrom math import factorial as f\nfrom bisect import bisect as bs\nfrom bisect import bisect_left as bsl\nfrom itertools import accumulate as ac\ndef lcd(xnum1,xnum2):return (xnum1*xnum2//gcd(xnum1,xnum2))\ndef prime(x):\n    p=ceil(x**.5)+1\n    for i in range(2,p):\n        if (x%i==0 and x!=2) or x==0:return 0\n        \n    return 1\ndef dfs(u,visit,graph):\n    visit[u]=True\n    for i in graph[u]:\n        if not visit[i]:\n            dfs(i,visit,graph)\n\n###########################---Test-Case---#################################\n\"\"\"\n\n\n\n\"\"\"\n###########################---START-CODING---##############################\n\n\nn=int(z())\nl=zzz()\nx=l[0]\nans=0\nmx,mi=x,x\n\n\nfor i in l[1:]:\n    if i>mx:\n        ans+=1\n        mx=max(i,mx)\n    if i<mi:\n        ans+=1\n        mi=min(i,mi)\nprint(ans)     \n\n\n\n\n\n"
        },
        {
            "language": 1,
            "solution": "n = input()\na = map(int, raw_input().split())\nm1 = m2 = a[0]\nm = 0\nfor i in range(1, n):\n\tif(a[i] > m1):\n\t\tm += 1\n\t\tm1 = a[i]\n\tif(a[i] < m2):\n\t\tm += 1;\n\t\tm2 = a[i]\nprint m"
        },
        {
            "language": 3,
            "solution": "n = int(input())\npoints = [int(k) for k in input().split(' ')]\nMaxPoints, MinPoints, WeirdPoints = -1, 10001, -2\n\nfor i in points:\n    if i > MaxPoints:\n        MaxPoints = i\n        WeirdPoints += 1\n    if i < MinPoints:\n        MinPoints = i\n        WeirdPoints += 1\n\nprint(WeirdPoints)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nc=0\nfor i in range(1,len(a)):\n    if a[i]>max(a[0:i]) or a[i]<min(a[0:i]):\n        c=c+1\nprint(c)"
        },
        {
            "language": 3,
            "solution": "from sys import stdin\n\n\ndef get_user_input():\n    return list(map(int, stdin.readline().rstrip().split()))\n\n\nn = int(input())\ninput_list = get_user_input()\nres = 0\nlast_min = input_list[0]\nlast_max = input_list[0]\nfor i in range(1, len(input_list)):\n    if input_list[i] < last_min:\n        res += 1\n\n    if input_list[i] > last_max:\n        res += 1\n\n    last_min = min(last_min, input_list[i])\n    last_max = max(last_max, input_list[i])\n\nprint(res)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[int(i) for i in input().split()]\nif len(a)!=1:\n\tif a[0]==a[1]:\n\t\tans=0\n\telse:\n\t\tans=1\n\tmax1=max(a[0],a[1])\n\tmin1=min(a[0],a[1])\n\tfor i in range(2,n):\n\t\tif a[i]<min1:\n\t\t\tmin1=a[i]\n\t\t\tans=ans+1\n\t\tif a[i]>max1:\n\t\t\tmax1=a[i]\n\t\t\tans=ans+1\n\tprint(ans)\nelse:\n\tprint(str(0))"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[int(p) for p in input().split()]\ntotal=0\nx=a[0]\ny=a[0]\nfor i in range(1,n):\n    if a[i]>x:\n        x=a[i]\n        total=total+1\n    elif a[i]<y:\n        y=a[i]\n        total=total+1\n    else:\n        total=total\nprint(total)\n    \n"
        },
        {
            "language": 1,
            "solution": "n=input()\nl=map(int,raw_input().split())\nm=M=l[0]\ns=0\nfor i in l[1:]:\n\tif i<m:\n\t\ts+=1\n\t\tm=i\n\telif i>M:\n\t\ts+=1\n\t\tM=i\nprint s"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\ns = raw_input().split()\nscores = []\nfor i in s:\n    scores.append(int(i))\namazing = 0\nmax = scores[0]\nmin = scores[0]\nfor i in range(n):\n    if scores[i] < min:\n        amazing += 1\n        min = scores[i]\n    if scores[i] > max:\n        amazing += 1\n        max = scores[i]\nprint amazing"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[int(i) for i in input().split()]\nma=mi=a[0]\ns=0\nfor i in range(1,n):\n    if a[i]>ma:\n        s+=1\n        ma=a[i]\n    elif a[i]<mi:\n        s+=1\n        mi=a[i]\nprint(s)\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n    static Scanner scanner = new Scanner(System.in);\n\n    public static void main(String[] args) {\n        int n = scanner.nextInt();\n        int a[]=new int[n];\n        for (int i=0;i<n;i++){\n            a[i]=scanner.nextInt();\n        }\n        int sum=0,max=a[0],min=a[0];\n        for (int i=1;i<n;i++){\n            if (a[i]>max){\n                max=a[i];\n                sum++;\n            }\n            if (a[i]<min){\n                min=a[i];\n                sum++;\n            }\n        }\n        System.out.println(sum);\n    }\n}\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long n;\n  cin >> n;\n  long long a[n];\n  cin >> a[0];\n  long long min = a[0];\n  long long max = a[0];\n  long long cnt = 0;\n  for (int i = 1; i < n; i++) {\n    cin >> a[i];\n    if (a[i] > max) {\n      max = a[i];\n      cnt++;\n    }\n    if (a[i] < min) {\n      min = a[i];\n      cnt++;\n    }\n  }\n  cout << cnt;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\narr = [int(a) for a in input().split()]\nmax = arr[0]\nmin = arr[0]\ncount = 0\nfor i in range(1, n):\n    if arr[i] > max:\n        max = arr[i]\n        count += 1\n    if arr[i] < min:\n        min = arr[i]\n        count += 1\nprint(count)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main(int argc, const char* argv[]) {\n  int N;\n  cin >> N;\n  int arr[N];\n  for (int i = 0; i < N; i++) cin >> arr[i];\n  int ans = 0, max = arr[0], min = arr[0];\n  for (int x : arr) {\n    if (x > max) {\n      max = x;\n      ans++;\n    } else if (x < min) {\n      min = x;\n      ans++;\n    }\n  }\n  cout << ans;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nS = [int(i) for i in input().split()]\nminx = maxx = S[0]\nk = 0\nfor i in range(1, n):\n\tif(S[i]<minx):\n\t\tminx = S[i]\n\t\tk += 1\n\tif(S[i] >maxx):\n\t\tmaxx = S[i]\n\t\tk += 1\nprint(k)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\npoints = list(map(int, input().split(' ')))\ni=0\namazing = 0\npassed = [points[0]]\nwhile i<len(points):\n    if points[i] > max(passed):\n        amazing+=1\n    if points[i] < min(passed):\n        amazing+=1\n    passed.append(points[i])\n    i+=1\nprint(amazing)\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long n, a, res;\nint main() {\n  cin >> n;\n  if (n != 0) cin >> a;\n  long long mx = a;\n  long long mn = a;\n  for (long long i = 0; i < n - 1; i++) {\n    cin >> a;\n    if (a > mx) {\n      res++;\n      mx = a;\n    } else if (a < mn) {\n      res++;\n      mn = a;\n    }\n  }\n  cout << res;\n}\n"
        },
        {
            "language": 4,
            "solution": "\n\nimport java.io.*;\nimport java.util.*;\n\n\npublic class CF {\n\t\n\tstatic class Pair{\n\tint a,b;\n\tpublic Pair(int a, int b) {\n\t\tthis.a=a;\n\t\tthis.b=b;\n\t}\n}\n\n\tstatic class in {\n\t    static BufferedReader reader;\n\t    static StringTokenizer tokenizer;\n\n\t    /** call this method to initialize reader for InputStream */\n\t    static void init(InputStream input) {\n\t        reader = new BufferedReader(\n\t                     new InputStreamReader(input) );\n\t        tokenizer = new StringTokenizer(\"\");\n\t    }\n\n\t    /** get next word */\n\t    static String next() throws IOException {\n\t        while ( ! tokenizer.hasMoreTokens() ) {\n\t            //TODO add check for eof if necessary\n\t            tokenizer = new StringTokenizer(\n\t                   reader.readLine() );\n\t        }\n\t        return tokenizer.nextToken();\n\t    }\n\n\t    static int nextInt() throws IOException {\n\t        return Integer.parseInt( next() );\n\t    }\n\t\t\n\t    static double nextDouble() throws IOException {\n\t        return Double.parseDouble( next() );\n\t    }\n\t    static long nextLong() throws IOException {\n\t        return Long.parseLong( next() );\n\t    }\n\t}\n\t\n\tpublic static int[] ini(int n)throws IOException {\n\t\t\n\t\tint[] arr=new int[n];\n\t\tfor(int i=0;i<n;i++) {\n\t\t\tarr[i]=in.nextInt();\n\t\t}\n\t\treturn arr;\n\t\t\n\t}\n\t\n\tpublic static long[] inl(int n)throws IOException {\n\t\t\n\t\tlong[] arr=new long[n];\n\t\tfor(int i=0;i<n;i++) {\n\t\t\tarr[i]=in.nextLong();\n\t\t}\n\t\treturn arr;\n\t\t\n\t}\n\t\n\tpublic static int gcd(int a, int b) {\n\t\tif(b==0) {\n\t\t\treturn a;\n\t\t}\n\t\treturn gcd (b,a%b);\n\t}\n\tpublic static long gcd(long a, long b) {\n\t\tif(b==0) {\n\t\t\treturn a;\n\t\t}\n\t\treturn gcd (b,a%b);\n\t}\n\tpublic static int lcm(int a, int b) {\n\t\treturn (a*b)/gcd(a,b);\n\t}\n\tpublic static int max(int[] arr) {\n\t\tint max=Integer.MIN_VALUE;\n\t\tfor(int i=0;i<arr.length;i++) {\n\t\t\tmax=Math.max(max, arr[i]);\n\t\t}\n\t\treturn max;\n\t}\n\t\n\tpublic static long max(long[] arr) {\n\t\tlong max=Long.MIN_VALUE;\n\t\tfor(int i=0;i<arr.length;i++) {\n\t\t\tmax=Math.max(max, arr[i]);\n\t\t}\n\t\treturn max;\n\t}\n\tpublic static int min(int[] arr) {\n\t\tint min=Integer.MAX_VALUE;\n\t\tfor(int i=0;i<arr.length;i++) {\n\t\t\tmin=Math.min(min, arr[i]);\n\t\t}\n\t\treturn min;\n\t}\n\t\n\tpublic static long min(long[] arr) {\n\t\tlong min=Long.MAX_VALUE;\n\t\tfor(int i=0;i<arr.length;i++) {\n\t\t\tmin=Math.min(min, arr[i]);\n\t\t}\n\t\treturn min;\n\t}\n\t\n\tpublic static void reverse(int[] arr, int low, int high) {\n\t\t\n\t\tint temp;\n        while (low<high) {\n            temp = arr[low];\n            arr[low] = arr[high];\n            arr[high] = temp;\n            low++;\n            high--;\n        }\n\t\t\n\t}\n\tpublic static void reverse(long[] arr, int low, int high) {\n\t\t\n\t\tlong temp;\n        while (low<high) {\n            temp = arr[low];\n            arr[low] = arr[high];\n            arr[high] = temp;\n            low++;\n            high--;\n        }\n\t\t\n\t}\n\tpublic static int binarySearch(int arr[], int l, int r, int x)\n    {\n        if (r >= l) {\n            int mid = l + (r - l) / 2;\n  \n            if (arr[mid] == x)\n           \n            if (arr[mid] > x)\n                return binarySearch(arr, l, mid - 1, x);\n  \n            return binarySearch(arr, mid + 1, r, x);\n        }\n\n        return -1;\n    }\n\t\n\tpublic static void swap(char[] arr, int i, int j) {\n\t\t\n\t\tchar x=arr[i];\n\t\tarr[i] = arr[j];\n\t\tarr[j] = x;\n\t}\n\t\n\t\n\tpublic static ArrayList<Integer> sieveOfEratosthenes(int n)\n    {\n        boolean prime[] = new boolean[n + 1];\n        for (int i = 0; i <= n; i++)\n            prime[i] = true;\n \n        for (int p = 2; p * p <= n; p++)\n        {\n           \n            if (prime[p] == true)\n            {\n                \n                for (int i = p * p; i <= n; i += p)\n                    prime[i] = false;\n            }\n        }\n\n       ArrayList<Integer> lol=new ArrayList<Integer>();\n       \n       for(int i=2;i<=n;i++) {\n    \t   if(prime[i] ==true) {\n    \t\t   lol.add(i);\n    \t   }\n       }\n       \n       return lol;\n    }\n\t\n\t\n\tstatic boolean isPrime(int n)\n    {\n    \n        if (n <= 1) return false;\n     \n        \n        for (int i = 2; i < Math.sqrt(n); i++)\n            if (n % i == 0)\n                return false;\n     \n        return true;\n    }\n\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t/**************************************************************************************/\n\t\n\t\n\t\n\t\n\t\n\tpublic static void solve() {\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\n\tpublic static void main(String[] args)throws IOException {\n\t\t// TODO Auto-generated method stub\n\t\tin.init(System.in);\n\t\tPrintWriter pw=new PrintWriter(System.out);\n\t\t\n\t\t\n\t\tint n=in.nextInt();\n\t\t\n\t\tint[] arr = new int[n];\n\t\t\n\t\tfor(int i=0;i<n;i++) {\n\t\t\t\n\t\t\tarr[i] = in.nextInt();\n\t\t}\n\t\t\n\t\t\n\t\tint max=arr[0];\n\t\tint min=arr[0];\n\t\t\n\t\tint ans=0;\n\t\t\n\t\tfor(int i=1;i<n;i++) {\n\t\t\t\n\t\t\t\n\t\t\tif(arr[i]>max) {\n\t\t\t\tans++;\n\t\t\t\tmax=arr[i];\n\t\t\t}\n\t\t\telse if(arr[i] < min) {\n\t\t\t\tans++;\n\t\t\t\tmin=arr[i];\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\tpw.println(ans);\n\t\n\t\tpw.flush();\n\t\t\n\t\tpw.close();\n\t\t\n\t}\n\n}\n"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\nline = raw_input().split()\nnums = []\nfor i in line:\n    nums.append(int(i))\nmax = nums[0]\nmin = nums[0]\namazing = 0\nfor i in xrange(1,n):\n    if(nums[i] > max):\n        amazing+=1\n        max = nums[i]\n    if(nums[i] < min):\n        amazing+=1\n        min = nums[i]\nprint amazing\n"
        },
        {
            "language": 3,
            "solution": "N = int(input())\nP = list(map(int, input().split()))\nB = P[0]\nW = P[0]\nA = 0\nfor index in range(1, N):\n\tS = P[index]\n\tif S > B:\n\t\tA += 1\n\t\tB = S\n\tif S < W:\n\t\tA += 1\n\t\tW = S\nprint(A)"
        },
        {
            "language": 3,
            "solution": "a=int(input())\nb=list(map(int,input().split()))\nd=0\nif len(b)<=1:\n    d=0\nelif b[1]>b[0]:\n    c1=b[1]\n    c2=b[0]\n    d+=1\nelif b[1]==b[0]:\n    c1=b[1]\n    c2=b[0]\nelse:\n    c1=b[0]\n    c2=b[1]\n    d+=1\nfor i in range(2,len(b)):\n    if b[i]>c1:\n        d+=1\n        c1=b[i]\n    elif b[i]<c2:\n        d+=1\n        c2=b[i]\nprint(d)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\ni=1\nv=0\ns=[l[0]]\nwhile i<len(l):\n    if l[i]>max(s) or l[i]<min(s):\n        v+=1\n    s.append(l[i])\n    i+=1\nprint(v)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int b, i, c, a1, j, b1, c1, n, m, a[1001];\n  string s, s1;\n  cin >> n;\n  cin >> a[1];\n  for (i = 2; i <= n; i++) {\n    cin >> a[i];\n    b = a[i];\n    sort(a + 1, a + i + 1);\n    if (a[1] == b && a[1] != a[2]) m++;\n    if (a[i] == b && a[i] != a[i - 1]) m++;\n  }\n  cout << m << endl;\n}\n"
        },
        {
            "language": 3,
            "solution": "input()\nr = -1\nfor x in map(int, input().split()):\n  if r < 0:\n    r = 0\n    mx = mn = x\n  if x > mx:\n    r += 1\n    mx = x\n  if x < mn:\n    r += 1\n    mn = x\nprint(r)"
        },
        {
            "language": 3,
            "solution": "a=int(input())\nl=input().split()\nl1=[]\nfor i in l:\n    i=int(i)\n    l1.append(i)\nlenth=len(l1)\nn=1\nsumm=0\nwhile n<lenth:\n    l2=l1[:n]\n    max1=max(l2)\n    min1=min(l2)\n    \n    num1=l1[n]\n    \n    if num1>max1 or num1<min1:\n        summ+=1\n       \n    n+=1\nprint(summ)\n    \n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\n\nt=0\nmi = a[0]\nma = a[0]\nfor i in range(n):\n    if a[i]<mi:\n        mi = a[i]\n        t+=1\n    if a[i]>ma:\n        ma = a[i]\n        t+=1\nprint(t)\n    \n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nli = [int(_) for _ in input().split()]\na = b = li[0]\nans = 0\nfor i in range(1, n):\n    ans += 1 if li[i] < a or li[i] > b else 0\n    a = min(a, li[i])\n    b = max(b, li[i])\nprint(ans)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nmore=l[0]\nless=l[0]\np=0\ntry:\n    for i in range(1,n):\n        if l[i]>more or l[i]<less:\n            p+=1\n        more=max(more,l[i])\n        less=min(less,l[i])\nexcept:\n    p=0\nprint(p)\n\n\n"
        },
        {
            "language": 1,
            "solution": "n=int(raw_input())\na=map(int,raw_input().split())\nmx=a[0]\nmn=a[0]\nc=0\nfor s in a:\n\tif s>mx or s<mn:\n\t\tc+=1\n\tmx=max(mx,s)\n\tmn=min(mn,s)\nprint c\n"
        },
        {
            "language": 3,
            "solution": "n=input()\nx=input().split()\ns=[]\nfor i in x:\n k=int(i)\n s.append(k)\na=s[0]\nb=s[0]\nz=0\nu=0\nfor i in s:\n if i>a:\n  a=i\n  z+=1\n if i<b:\n  b=i\n  u+=1\nf=z+u\nprint(f)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nx = input()\nl = [int(i) for i in x.split()]\ntemp = 0\n\nmaxn = l[0]\nminn = l[0]\n\nfor i in range(1, len(l)):\n    if l[i] < minn:\n        minn = l[i]\n        temp += 1\n    if l[i] > maxn:\n        maxn = l[i]\n        temp += 1\n\nprint(temp)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\narrayContests = input().split()\n\nfor i in range(n):\n\tarrayContests[i] = int(arrayContests[i])\n\namazing = 0\nminPoints = arrayContests[0]\nmaxPoints = arrayContests[0]\n\nfor i in range(1, n):\n\tif arrayContests[i] > maxPoints:\n\t\tamazing += 1\n\t\tmaxPoints = arrayContests[i]\n\t\n\telif arrayContests[i] < minPoints:\n\t\tamazing += 1\n\t\tminPoints = arrayContests[i]\n\nprint(\"%d\" % (amazing))"
        },
        {
            "language": 3,
            "solution": "import sys\n\nn = sys.stdin.readline().split()[0]\n\nscores = [int(i) for i in sys.stdin.readline().split()]\n\ni = 1\namazing = 0\n\nwhile i < len(scores):\n    j = i - 1\n    less_count = 0\n    more_count = 0\n    while j >= 0:\n        if scores[i] > scores[j]:\n            less_count += 1\n        if scores[i] < scores[j]:\n            more_count += 1\n        j -= 1\n    if i == less_count or i == more_count:\n        amazing += 1\n\n    i += 1\n\nprint(amazing)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nlist1=[int(i) for i in input().split()]\nx=0\nfor i in range(1,n,1):\n   list2=list1[:i]\n   if list1[i]>max(list2) or list1[i]<min(list2):\n       x=x+1\nprint(x)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nscores = list(map(int, input().split(\" \")))\n\nhigh = low = scores[0]\nout = 0\nfor i in range(1, len(scores)):\n    if scores[i] > high:\n        out += 1\n        high = scores[i] \n    elif scores[i] < low:\n        out += 1\n        low = scores[i]\n\nprint(out)\n\n\n"
        },
        {
            "language": 3,
            "solution": "a=int(input())\nb=[int(i) for i in input().split( )]\nk=0\ni=1\nf=1\nwhile i<a:\n    if b[i]>max(b[:f]) or b[i]<min(b[:f]):\n        k+=1\n    i+=1\n    f+=1\nprint(k)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int i, j, n, ans = 0, cd = 0, a[1002];\n  cin >> n;\n  for (i = 0; i < n; i++) {\n    cin >> a[i];\n  }\n  if (n == 1)\n    ans = 0;\n  else {\n    for (i = 1; i < n; i++) {\n      cd = 0;\n      for (j = 0; j < i; j++) {\n        if (a[i] > a[j]) cd++;\n      }\n      if (cd == i) ans++;\n    }\n    for (i = 1; i < n; i++) {\n      cd = 0;\n      for (j = 0; j < i; j++) {\n        if (a[i] < a[j]) cd++;\n      }\n      if (cd == i) ans++;\n    }\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class A155 {\n\n    public static void main(String args[]){\n\n        Scanner scan = new Scanner(System.in);\n        int num = scan.nextInt(); int max; int min;\n        int[] arr = new int[num];\n        arr[0] = scan.nextInt();\n        min = arr[0]; max = arr[0];\n        int amazing = 0;\n        \n        for(int i = 1; i < num; i++){\n            arr[i] = scan.nextInt();\n            if(arr[i] > max){\n                amazing++;\n                max = arr[i];\n            }else if(arr[i] < min){\n                amazing++;\n                min = arr[i];\n            }\n        }\n        \n        System.out.println(amazing);\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.util.StringTokenizer;\npublic class Obe {\n    \n    public static void main(String[] args) throws IOException{\n        \n        Reader.init(System.in);\n        int n=Reader.nextInt();\n        int ar[]=new int[n];\n        int c=0;\n        for(int i =0;i<n;i++){  \n            ar[i]=Reader.nextInt();\n        }\n        \n        int min =ar[0];\n        int max =ar[0];\n        \n        for(int i =1;i<ar.length;i++){\n            \n        if(ar[i]>max){\n            c++;max=ar[i];}\n            \n            if(ar[i]<min){\n                c++;min=ar[i];}\n        }\n        \n        System.out.println(c);\n    }\n}\n\n\nclass Reader {\nstatic BufferedReader reader;\nstatic StringTokenizer tokenizer;\n\nstatic void init(InputStream input) {\nreader = new BufferedReader(\nnew InputStreamReader(input) );\ntokenizer = new StringTokenizer(\"\");\n}\n\nstatic String next() throws IOException {\nwhile ( ! tokenizer.hasMoreTokens() ) {\n\n    tokenizer = new StringTokenizer(\nreader.readLine() );\n}\nreturn tokenizer.nextToken();\n }\n\nstatic int nextInt() throws IOException {\nreturn Integer.parseInt( next() );\n}\n\nstatic double nextDouble() throws IOException {\nreturn Double.parseDouble( next() );\n }\n  }"
        },
        {
            "language": 3,
            "solution": "input()\narr = [int(x) for x in input().split()]\nk = 0\nmn = arr[0]\nmx = arr[0]\nfor x in arr[1:]:\n    if x < mn:\n        mn = x\n        k += 1\n    elif x > mx:\n        mx = x\n        k += 1\nprint(k)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[int(i) for i in input().split()]\nb=[a[0]]\ns=0\nfor i in range(1,n):\n    if a[i]>max(b) or a[i]<min(b):\n       s+=1\n    b.append(a[i])\nprint (s)\n"
        },
        {
            "language": 3,
            "solution": "x,lis = int(input()),list(map(int, input().split(\" \")))\nmini,maxi,supp = lis[0],lis[0],0\nfor i in range(1, len(lis)):\n\tif lis[i] < mini: mini,supp = lis[i], supp+1\n\telif lis[i] > maxi: maxi,supp = lis[i], supp+1\nprint(supp)\n"
        },
        {
            "language": 3,
            "solution": "a=int(input())\nb=input()\nc=b.split(' ')\nd=[]\nd.append(int(c[0]))\nx=0\nfor i in range(a-1):\n    if int(c[i+1])<min(d):\n        x=x+1\n    elif int(c[i+1])>max(d):\n        x=x+1\n    d.append(int(c[i+1]))\nprint(x)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\ns = [int(x) for x in input().split()]\nmins = maxs = s[0]\nval = 0\nfor si in s[1:]:\n    if si < mins:\n        mins = si\n        val += 1\n    elif si > maxs:\n        maxs = si\n        val += 1\nprint(val)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\n\narr = list(map(int, input().split()))[:n]\n\noperationArr = []\n\namazing = 0\n\nmaxP = arr[0]\nminP = arr[0]\n\n# for i in range(n):\n#     operationArr.append(arr[i])\n#     if(i >0):\n#         if(operationArr[i] == max(operationArr) and  operationArr[i] > maxP):\n#             amazing = amazing + 1\n#             maxP = operationArr[i]\n#         elif(operationArr[i] == min(operationArr) and  operationArr[i] < minP):\n#             amazing = amazing + 1\n#             minP = operationArr[i]\n\ni = 1\nfor i in range(n):\n    if(arr[i]>maxP):\n        maxP = arr[i]\n        amazing = amazing + 1\n    elif(arr[i]<minP):\n        minP = arr[i]\n        amazing = amazing + 1\nprint(amazing)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nd=0\nfor i in range(1,n):\n    j=i-1\n    if l[i]>l[j]:\n        while(j>=0 and l[i]>l[j]):\n            j=j-1\n        if j==-1:\n            d=d+1\n    elif l[i]<l[j]:\n        while(j>=0 and l[i]<l[j]):\n            j=j-1\n        if j==-1:\n            d=d+1\nprint(d)            "
        },
        {
            "language": 1,
            "solution": "n=int(raw_input())\n\nscores=[int(x) for x in raw_input().split()]\n\n\nmins=scores[0]\nmaxs=scores[0]\namazing=0\nfor i in scores[1:]:\n\tif i < mins:\n\t\tmins = i\n\t\tamazing = amazing + 1\n\telif i > maxs:\n\t\tmaxs = i\n\t\tamazing = amazing + 1\n\nprint amazing"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nscores = [int (i) for i in input().split()]\nif n == 1:\n    print (0)\nelse:\n    max_score = scores[0]\n    min_score = max_score\n    count = 0\n    for i in range(1,n):\n        if scores[i] > max_score:\n            max_score = scores[i]\n            count += 1\n        elif scores[i] < min_score:\n            min_score = scores[i]\n            count += 1\n    print (count)\n    \n    \n"
        },
        {
            "language": 3,
            "solution": "\"\"\"For testing snippets.\"\"\"\ninput()\npoints = list(map(int, input().split()))\nhigh = low = points[0]\ncount = 0\n\nfor i in points:\n    if i > high:\n        count += 1\n        high = i\n    elif i < low:\n        count += 1\n        low = i\n\nprint(count)\n"
        },
        {
            "language": 3,
            "solution": "def solve(scores):\n    smallest = largest = scores[0]\n    amazing = 0\n    for score in scores[1:]:\n        if(score < smallest):\n            smallest = score\n            amazing+=1\n        if(score > largest):\n            largest = score\n            amazing+=1\n    return amazing\n\nif __name__ == \"__main__\":\n\n    n = int(input())\n    scores = list(map(int,input().split()))\n    print(solve(scores))"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int a, sum = 0, n, mx, mn;\n  scanf(\"%d\", &n);\n  scanf(\"%d\", &mx);\n  mn = mx;\n  for (int i = 1; i < n; i++) {\n    scanf(\"%d\", &a);\n    if (a > mx) {\n      mx = a;\n      sum++;\n    } else if (a < mn) {\n      mn = a;\n      sum++;\n    }\n  }\n  printf(\"%d\\n\", sum);\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "number=int(input())\npoints=list(map(int,input().split()))\nmax=points[0]\nmin=points[0]\ntimes=0\nfor i in points[1:]:\n    if i>max:\n        times+=1\n        max=i\n    elif i < min:\n        times+=1\n        min=i\nprint(times)"
        },
        {
            "language": 1,
            "solution": "n = input()\na = map(int, raw_input().split())\n\nmin = a[0]\nmax = a[0]\ncount = 0\nfor x in a[1:]:\n    if x>max:\n        max = x\n        count += 1\n    elif x<min:\n        min = x\n        count += 1\n\nprint count\n"
        },
        {
            "language": 3,
            "solution": "events = int(input())\nresults = list(map(int, input().split()))\nbest = results[0]\nworst = results[0]\nsurprize = 0\n\nfor i in range(events):\n    if results[i] > best:\n        best = results[i]\n        surprize += 1\n    elif results[i] < worst:\n        worst = results[i]\n        surprize += 1\nprint(surprize)"
        },
        {
            "language": 3,
            "solution": "a=int(input())\nl=list(map(int,input().split()))\nu=0\nind=1\nle=len(l)\nfor i in range(le):\n    if i>0:\n        if l[i]>max(l[:ind]) or l[i]<min(l[:ind]):\n            u+=1\n        ind+=1\nprint(u)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = list(map(int, input().split()))\nc = 0\nfor i in range(1,n):\n    if l[i] > max(l[:i]) or l[i] < min(l[:i]): c += 1\nprint(c)\n\n"
        },
        {
            "language": 3,
            "solution": "# coding: utf-8\nn = int(input())\nli = [int(i) for i in input().split()]\ncnt = 0\nfor i in range(n):\n    if i == 0:\n        min = li[i]\n        max = li[i]\n    elif min > li[i]:\n        min = li[i]\n        cnt += 1\n    elif max < li[i]:\n        max = li[i]\n        cnt += 1\nprint(cnt)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = [int(i) for i in input().split()]\nb = [a[0]]\nc = 0\nfor i in range(1,n):\n    if a[i] < min(b) or a[i] > max(b):\n        c+=1\n    b.append(a[i])\nprint(c)"
        },
        {
            "language": 3,
            "solution": "t = int(input())\na = list(map(int, input().split()))\nc = 0\nfor i in range(1, t):\n    if min(a[:i]) > a[i] or max(a[:i]) < a[i]: c += 1 \nprint(c)"
        },
        {
            "language": 3,
            "solution": "\n\nnumber_of_contests = int(input(\"\"))\ncontest_scores = input(\"\").split(\" \")\ncontest_scores\n\nfirst_time = True\nsmallest_number = int()\ngreatest_number = int()\nno_of_times = 0\n\nfor contest_score in contest_scores:\n    contest_score = int(contest_score)\n\n    if first_time is True:\n        first_time = False\n        smallest_number = contest_score\n        greatest_number = contest_score\n    else:\n        if contest_score > greatest_number:\n            no_of_times = no_of_times + 1\n            greatest_number = contest_score\n\n        if contest_score < smallest_number:\n            no_of_times = no_of_times + 1\n            smallest_number = contest_score\n\nprint(no_of_times)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nmassif = [int(a) for a in input().split()]\nmaximum = massif[0]\nminimum = massif[0]\nanswer = 0\n\nfor a in massif:\n\tif a < minimum:\n\t\tanswer += 1\n\t\tminimum = a\t\n\telif a > maximum:\n\t\tanswer += 1\n\t\tmaximum = a\n\nprint(answer)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nv = list(map(int, input().split()))\nres = 0\nmin = 10001\nmax = -1\nfor i in range(1, len(v)):\n    if v[i] > v[i - 1] and v[i] > max:\n        res += 1\n        max = v[i]\n        if v[i - 1] < min:\n            min = v[i - 1]\n    elif v[i] < v[i - 1] and v[i] < min:\n        res += 1\n        min = v[i]\n        if v[i - 1] > max:\n            max = v[i - 1]\nprint(res)\n"
        },
        {
            "language": 3,
            "solution": "input()\npoints = [int(i) for i in input().split()]\ncount, max_past, min_past = 0, points[0], points[0]\nfor i in range(1, len(points)):\n    now = points[i]\n    if max_past < now or min_past > now:\n        count += 1\n    max_past = max(max_past, now)\n    min_past = min(min_past, now)\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nm1=l[0]\nm2=l[0]\na=l[0]\nc=0\nfor i in range(1,n):\n    b=l[i]\n    if(b<m1):\n        a=b\n        m1=b\n        c+=1\n    elif(b>m2):\n        a=b\n        m2=b\n        c+=1\nprint(c)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = [int(x) for x in input().split(' ')]\n\nam = 0\nmi = a[0]\nma = a[0]\nfor i in range(1,n):\n    if a[i] > ma:\n        ma = a[i]\n        am += 1\n\n    if a[i] < mi:\n        mi = a[i]\n        am += 1\n    \n\nprint(am)"
        },
        {
            "language": 3,
            "solution": "ans = 0\ninput()\nscores = [int(x) for x in input().split()]\nignore = 0\nfor i in scores:\n    if ignore == 0:\n        maxValue = i\n        minValue = i\n        ignore+=1\n    else:\n        if i > maxValue:\n            maxValue = i\n            ans += 1\n        elif i < minValue:\n            minValue = i\n            ans += 1\nprint(ans)\n        \n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class Ilove {\n    public static void main (String []args) {\n        Scanner in=new Scanner (System.in);\n        int n=in.nextInt();\n        int []arr=new int [n];\n        int res=0;\n        int more=0;\n        int low=0;\n       \n        for (int i=0;i<n;i++)\n            arr[i]=in.nextInt();\n        for (int i=1;i<n;i++) {\n            for (int j=i-1;j>=0;j--) {\n                if (arr[i]>arr[j]) \n                  more++; \n                else  if (arr[i]<arr[j]) \n                  low++;\n            }\n            if (low==i || more==i)\n                res++;\n            more=0;\n            low=0;\n        }\n        System.out.println(res);\n    }\n}\n"
        },
        {
            "language": 1,
            "solution": "n=input()\nl=map(int,raw_input().split())\na=b=l[0]\ns=0\nz=0\nfor i in l[1:]:\n            if i<a:\n                s+=1\n                a=i\n            elif i>b:\n                z+=1\n                b=i\n\nprint s+z\n         "
        },
        {
            "language": 3,
            "solution": "n = int(input())\n\nl = list(map(int, input().split()))\n\nworst = l[0]\nbest = l[0]\nans = 0\n\nfor i in range(1, n):\n    if l[i] > best:\n        best = l[i]\n        ans += 1\n    if l[i] < worst:\n        worst = l[i]\n        ans += 1\n        \nprint(ans)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nmax=l[0]\nmin=l[0]\nc=0\nfor i in range(1,n):\n    if(l[i]>max):\n        max=l[i]\n        c+=1\n    if(l[i]<min):\n        min=l[i]\n        c+=1\nprint(c)"
        },
        {
            "language": 3,
            "solution": "                        #Author: Adisbek\nn = int(input())\na = list(map(int,input().split()))\ns = 0\nfor i in range(1,n):\n    k = max(a[0:i]);l=min(a[0:i])\n    if a[i] > k or a[i] < l:\n        s = s + 1\nprint(s)\n"
        },
        {
            "language": 3,
            "solution": "def all_the_same(elements):\n    return len(set(elements)) in (0, 1)\nn = int(input())\na = input().split(' ')\nif n!=1:\n    if all_the_same(a):\n        print(0)\n    else:   \n        l = int(a[0])\n        m = int(a[0])\n        cnt = 0\n        for i in a:\n            lastl = l\n            lastm = m\n            l = min(l,int(i))\n            m = max(m,int(i))\n            if lastl != l or lastm != m:\n                cnt += 1\n        print(cnt)\nelse:\n    print(0)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\npoints = list(map(int, input().split()))\n\nmin_points, max_points, surprise_counter = points[0], points[0], 0\n\nfor i in range(1, n):\n    if points[i] > max_points:\n        max_points, surprise_counter = points[i], surprise_counter + 1\n    elif points[i] < min_points:\n        min_points, surprise_counter = points[i], surprise_counter + 1\n\nprint(surprise_counter)"
        },
        {
            "language": 3,
            "solution": "k=input()\ns=list(map(int,input().split()))\ncounter=int(0)\nmax=min=s[0]\n\nfor i in range (len(s)):\n\t\tif s[i]>max:\n\t\t\t\tmax=s[i]\n\t\t\t\tcounter+=1\n\t\tif s[i]<min:\n\t\t\t\tmin=s[i]\n\t\t\t\tcounter+=1\nprint(counter)"
        },
        {
            "language": 3,
            "solution": "import sys\nimport math\n\nn=int(input())\nlista=[int(x) for x in input().strip().split()]\nmina,maxa,conta=lista[0],lista[0],0\nfor i in range(1,len(lista)):\n  if(lista[i]>maxa):\n    maxa=lista[i]\n    conta+=1\n  elif(lista[i]<mina):\n    mina=lista[i]\n    conta+=1\nprint(conta)"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class VasyaCode {\n\tpublic static void main(String[] args) {\n\t\tScanner in = new Scanner(System.in);\n\t\tint n = in.nextInt();\n\t\tint x = in.nextInt();\n\t\tint min =x;\n\t\tint max =x;\n\t\tint count=0;\n\t\tfor(int i=0;i<n-1;i++){\n\t\t\tx = in.nextInt();\n\t\t\tif(x>max){\n\t\t\t\tmax=x;\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\tif(x<min){\n\t\t\t\tmin=x;\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(count);\n\t}\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nar = list(map(int, input().split( )[:n]))\nmax=min=int(ar[0])\ncnt=0\nn=n-1\ni=1\nwhile(n):\n    tem=int(ar[i])\n    if(tem>max):\n        cnt=cnt+1\n        max=tem\n    if(tem<min):\n        cnt=cnt+1\n        min=tem\n    i=i+1\n    n=n-1\nprint(cnt)\n    \n"
        },
        {
            "language": 3,
            "solution": "# A. I_love_%username%\nn = int(input())\nscores = list(map(int,input().split()))\nworst = scores[0]\nbest = scores[0]\namazing = 0\nfor i in range(1,n):\n    #print(scores[i],best,worst)\n    if scores[i]>best:\n        amazing += 1\n        best = scores[i]\n    elif scores[i]<worst:\n        amazing += 1\n        worst = scores[i]\nprint(amazing)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, cnt = 0, minn, maxx;\n  cin >> n;\n  vector<int> v(n);\n  for (int i = 0; i < n; i++) {\n    cin >> v[i];\n  }\n  minn = v[0];\n  maxx = v[0];\n  for (int i = 1; i < n; i++) {\n    if (v[i] > maxx)\n      cnt++, maxx = v[i];\n    else if (v[i] < minn)\n      cnt++, minn = v[i];\n  }\n  cout << cnt << endl;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\ns=[int(i) for i in input().split()]\nminnum=s[0]\nmaxnum=s[0]\nspecial=0\nfor i in range(n):\n    if s[i]>maxnum:\n        maxnum=s[i]\n        special+=1\n    elif s[i]<minnum:\n        minnum=s[i]\n        special+=1\nprint(special)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  int arr[n];\n  int count = 0;\n  int max, min;\n  for (int i = 0; i < n; i++) {\n    cin >> arr[i];\n  }\n  max = arr[0];\n  min = arr[0];\n  for (int i = 1; i < n; i++) {\n    if (max < arr[i]) {\n      max = arr[i];\n      count++;\n    }\n    if (arr[i] < min) {\n      min = arr[i];\n      count++;\n    }\n  }\n  cout << count << endl;\n}\n"
        },
        {
            "language": 3,
            "solution": "'''input\n10\n4664 6496 5814 7010 5762 5736 6944 4850 3698 7242\n'''\nn = int(input())\nl = [int(i) for i in input().split(' ')]\nx = l[0]\ny = l[0]\nans = 0\nfor i in range(1, n):\n\tif l[i] > x:\n\t\tans += 1\n\tif l[i] < y:\n\t\tans += 1\n\tx = max(x, l[i])\n\ty = min(y, l[i])\nprint(ans)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\na=0\nfor i in range(1,n):\n   a+=(l[i]<min(l[:i]) or l[i]>max(l[:i]))\nprint(a)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nnum = input()\narr = []\ncount = 0\n\nfor i in range(0,len(num)):\n    if num[i] == ' ':\n        arr.append(int(num[count:i]))\n        count = i+1\n    elif  i == len(num)-1:\n        arr.append(int(num[count:len(num)]))\ngetting_data = []\n''''\nVasya considers a coder's performance in a contest amazing in two situations:\n he can break either his best or his worst performance record\n'''\namazing = 0\nfor i in range(0,len(arr)):\n    if i>0:\n        getting_data.sort()\n        min = getting_data[0]\n        max = getting_data[len(getting_data)-1]\n        if arr[i] > max or arr[i] < min:\n            amazing +=1\n\n    getting_data.append(arr[i])\n\nprint(amazing)"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.ArrayList;\nimport java.util.Collection;\nimport java.util.Collections;\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int n = scanner.nextInt();\n\n        if (n == 1) {\n            int j = scanner.nextInt();\n            System.out.println(0);\n        }\n        else {\n            int answer = 0;\n            ArrayList<Integer> points = new ArrayList<>();\n            points.add(scanner.nextInt());\n            int k = scanner.nextInt();\n            if (k != points.get(0))\n                answer++;\n            points.add(k);\n            Collections.sort(points);\n\n            for (int i = 0; i < n - 2; i++) {\n                int m = scanner.nextInt();\n                if (m < points.get(0) || m > points.get(points.size() - 1))\n                    answer++;\n                points.add(m);\n                Collections.sort(points);\n            }\n            System.out.println(answer);\n        }\n    }\n}\n\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nm=a[0]\nmi=a[0]\nc=0\nfor i in a[1:]:\n    if (i<mi):\n        c+=1\n        mi=i\n    elif(i>m):\n        c+=1\n        m=i\nprint(c)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))[:n]\ns,b,c=a[0],a[0],0\nfor i in range(1,n):\n    if s>a[i]:\n        s=a[i]\n        c+=1\n    if b<a[i]:\n        b=a[i]\n        c+=1\nprint(c)"
        },
        {
            "language": 3,
            "solution": "# I_love_%username%\n\nt = int(input())\nl = list(map(int,input().split()))\n\nmaxi,mini,cnt = l[0],l[0],0\n\nfor i in range(1,len(l)):\n    if l[i] < mini:\n        mini = l[i]\n        cnt += 1\n    elif l[i] > maxi:\n        maxi = l[i]\n        cnt += 1\nprint(cnt)"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class iLoveUserName {\n\n\t/**\n\t * @param args\n\t */\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\n\tScanner input=new Scanner(System.in);\n\tint n,ma,mini,cnt=0;\n\tn=input.nextInt();\n\tint [] a=new int [1009];\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\ta[i]=input.nextInt();\n\t}\n\tma=a[1];\n\tmini=a[1];\n\tfor(int i=2;i<=n;i++)\n\t{\n\t\tif(n==1)\n\t\t\tSystem.out.print(\"1\");\n\t\telse\n\t\t{\n\t\t//ma=max(ma,a[i]);\n\t\tif(a[i]>ma)\n\t\t{\n\t\t\tcnt++;\n\t\t\tma=a[i];\n\t\t}\n\t\t\t\n\t\tif(a[i]<mini)\n\t\t{\n\t\t\tcnt++;\n\t\t\tmini=a[i];\n\t\t}\n\t\t\t\n\t\t\n\t\t}\n\t}\n\t\t\n\tSystem.out.println(cnt);\n\t}\n\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\ncount = -1\na = list(map(int,input().split()))\nl = []\nfor i in range(n):\n    y = a[i]\n    if y not in l:\n        l.append(y)\n        l.sort()\n        if y == l[0] or y == l[-1]:\n            count+= 1\n    else:\n        pass\nprint(count)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[int(i) for i in input().split()]\nmax1=a[0]\nmin1=a[0]\nres=0\nfor i in a:\n    if i>max1:\n        max1=i\n        res+=1\n    elif i<min1:\n        min1=i\n        res+=1\nprint(res)"
        },
        {
            "language": 1,
            "solution": "n = input()\narr = map(int,raw_input().split())\nbig,small = arr[0],arr[0]\ncount = 0\nfor x in arr[1:] :\n\tif (x < small) :\n\t\tsmall = x\n\t\tcount += 1\n\telif (x > big) :\n\t\tbig = x\n\t\tcount += 1\nprint count\n"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\na = [int(i) for i in raw_input().split()]\nk = 0\nfor i in xrange(1,n):\n    if (a[i] > max(a[:i])) or (a[i] < min(a[:i])):\n        k += 1\nprint k"
        },
        {
            "language": 3,
            "solution": "def getInts():\n    return [int(s) for s in input().split()]\n\ndef getInt():\n    return int(input())\n\ndef getStrs():\n    return [s for s in input().split()]\n\ndef getStr():\n    return input()\n\ndef listStr():\n    return list(input())\n\nimport collections as c\n\ndef solve():\n    N = getInt()\n    P = getInts()\n    best, worst = -10**9, 10**9\n    ans = 0\n    for i in range(N):\n        if P[i] > best:\n            best = P[i]\n            if i > 0:\n                ans += 1\n        if P[i] < worst:\n            worst = P[i]\n            if i > 0:\n                ans += 1\n    print(ans)\n    return\n\nsolve()\n    "
        },
        {
            "language": 3,
            "solution": "a=int(input())\nk=list(map(int,input().split()))\nmina=k[0]\nmaxa=k[0]\ncnt=0\nfor i in range(1,a):\n    if k[i]>maxa:\n        maxa=k[i]\n        cnt+=1\n    elif k[i]<mina:\n        mina=k[i]\n        cnt+=1\nprint(cnt)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  int n, arr[100001];\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> arr[i];\n  }\n  int Min = 0, Max = 0;\n  for (int i = 1; i < n; i++) {\n    if (arr[i] > arr[0]) {\n      Max = arr[i];\n      break;\n    }\n  }\n  for (int i = 1; i < n; i++) {\n    if (arr[i] < arr[0]) {\n      Min = arr[i];\n      break;\n    }\n  }\n  int count = 0;\n  if (Max == 0) {\n    Max = arr[0];\n  } else\n    count++;\n  if (Min == 0) {\n    Min = arr[0];\n  } else\n    count++;\n  for (int i = 1; i < n; i++) {\n    if (arr[i] > Max) {\n      Max = arr[i];\n      count++;\n    }\n    if (arr[i] < Min) {\n      Min = arr[i];\n      count++;\n    }\n  }\n  cout << count;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "input(); li = list(map(int, input().split()))\nc = 0; li2 = []\nfor i in li:\n    \n    if len(li2) >= 1:\n        if max(li2)<i: c += 1\n        elif min(li2)>i: c+=1\n    li2.append(i)\nprint(c)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = [int(x) for x in input().split()]\n\nsmall = 0\nfor i in range(1,n):\n    for j in range(0,i):\n        if l[j] >= l[i]:\n            break\n        if j == i-1:\n            small += 1\n\nbig = 0\nfor i in range(1,n):\n    for j in range(0,i):\n        if l[j] <= l[i]:\n            break\n        if j == i-1:\n            big += 1\n\nprint(small+big)"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nl=list(map(int,input().split()))\nc=0\nfor i in range(1,t):\n    if (l[i]==max(l[:i+1]) and l[i] not in l[:i]) or (l[i]== min(l[:i+1]) and l[i] not in l[:i]):\n        c+=1\nprint(c)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nmi=l[0]\nmx=l[0]\nc=0\nfor i in range(1,len(l)):\n    if l[i]>mx:\n        mx=l[i]\n        c+=1\n    elif l[i]<mi:\n        mi=l[i]\n        c+=1\nprint(c)        \n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint main() {\n  int i, a, b, n, rt = 0, pt = 0, j;\n  int ch[9000];\n  int t = 0, p = 0, q = 0;\n  scanf(\"%d\", &n);\n  for (i = 0; i < n; i++) {\n    scanf(\"%d\", &ch[i]);\n  }\n  for (i = n - 1; i >= 1; i--) {\n    t = 0;\n    p = 0;\n    q = 0;\n    for (j = i - 1; j >= 0; j--) {\n      if (ch[i] > ch[j]) {\n        t++;\n      }\n      if (ch[i] < ch[j]) {\n        p++;\n      }\n      if (ch[i] == ch[j]) {\n        q++;\n      }\n    }\n    if (t > 0 && p == 0 && q == 0) {\n      rt++;\n    }\n    if (p > 0 && t == 0 && q == 0) {\n      pt++;\n    }\n  }\n  printf(\"%d\\n\", rt + pt);\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\narr = [int(ch) for ch in input().split(' ')]\nmin = -1\nmax = -1\ncnt = 0\nfor i in range(len(arr)):\n    if i == 0:\n        min = arr[i]\n        max = arr[i]\n        continue\n    if min > arr[i]:\n        cnt+=1\n        min = arr[i]\n    if max < arr[i]:\n        cnt+=1\n        max = arr[i]\nprint(cnt)"
        },
        {
            "language": 1,
            "solution": "n = input()\na = map(int,raw_input().split(' '))\nam = 0\nmax_ = [0] * n\nmin_ = [0] * n\nmax_[0] = a[0]\nmin_[0] = a[0]\ndef setMax(i):\n    max_[i] = max(max_[i-1] , a[i])\ndef setMin(i):\n    min_[i] = min(min_[i-1] , a[i])\nfor i in range(1,n):\n    setMax(i)\n    setMin(i)\nfor i in range(1,n):\n    if (a[i] == max_[i] and max_[i] > max_[i-1]) or (a[i] == min_[i] and min_[i] < min_[i-1] ):\n        am +=1\nprint am\n    \n"
        },
        {
            "language": 3,
            "solution": "num = int(input())\ninputStr = list(map(int, input().split()))\nres = 0\ni = 0\nfor value in inputStr:\n    i += 1\n    if(i > 1 and (minValue > min(inputStr[:i]) or maxValue < max(inputStr[:i]))):\n       res += 1\n    minValue = min(inputStr[:i])\n    maxValue = max(inputStr[:i])\nprint(res)\n    \n"
        },
        {
            "language": 4,
            "solution": "var n = +readline(); //num of contests\nvar point = readline().split(' ').map(Number);\n\nvar count = 0;\nvar max = point[0];\nvar min = point[0];\n\nfor(var j = 0; j < n; j++){\n    if(point[j] > max){\n        max = point[j];\n        count++;\n    }\n    if(point[j] < min){\n        min = point[j];\n        count++;\n    }\n}\nprint(count);"
        },
        {
            "language": 3,
            "solution": "x = int(input())\ny = [int(_) for _ in input().split()]\na , b , d = 10000 , 0 , 0\nfor i in range(x):\n    if y[i]>b or y[i]<a:\n        d+=1\n    a = min(a,y[i])\n    b = max(b,y[i])\nprint(d-1)\n"
        },
        {
            "language": 1,
            "solution": "n=int(raw_input())\n#n,k=map(int,raw_input().split())\nl=[int(x) for x in raw_input().split()]\nans=0\nchk=[l[0]]\nfor i in range(1,n):\n    if l[i]>max(chk):\n        ans+=1\n    elif l[i]<min(chk):\n        ans+=1\n    chk.append(l[i])\nprint ans"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\n#pragma GCC optimize(\"Ofast,no-stack-protector,unroll-loops\")\n#pragma GCC optimize(\"no-stack-protector,fast-math\")\nusing namespace std;\ndouble PI = 3.1415926535897;\nconst int N = 1e5 + 5, M = 1e2 + 5, MOD = 1e9 + 7, inf = 0x3f3f3f3f;\nint n, ans, mn = 1e9 + 5, mx = -1e9 + 5, ar[N], cnt[N];\nint main() {\n  ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);\n  ;\n  scanf(\"%d\", &n);\n  for (int i = 0; i < n; i++) scanf(\"%d\", ar + i);\n  for (int i = 0; i < n; i++) {\n    if (i == 0) mx = ar[i], mn = ar[i];\n    if (mx < ar[i]) {\n      ans++;\n      mx = ar[i];\n    }\n    if (mn > ar[i]) {\n      ans++;\n      mn = ar[i];\n    }\n  }\n  printf(\"%d\\n\", ans);\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "def amazing(list1):\n    count = 0\n    for i in range(1, len(list1)):\n        if list1[i] > max(list1[:i]):\n            count += 1\n        else:\n            if list1[i] < min(list1[:i]):\n                count += 1\n    return count\n\n\nn = int(input())\ns = input()\nk = list(map(int, s.split()))\nprint(amazing(k))\n"
        },
        {
            "language": 3,
            "solution": "num = int(input())\nline = [int(x) for x in input().split()]\namaz = 0\n\nfor i in range(num):\n    if i >= 1:\n        check1 = 0\n        check2 = 0\n        for j in range(i):\n            if line[i] > line[j]:\n                check1 += 1\n            elif line[i] < line[j]:\n                check2 += 1\n        if check1 == i or check2 == i:\n            amaz += 1\nprint(amaz)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nj = list(map(int, input().split()))\nt = 0\nmax = j[0]\nmin = j[0]\n\nfor i in range(1, n):\n    if max > j[i]:\n        max = j[i]\n        t += 1\n    elif min < j[i]:\n        min = j[i]\n        t += 1\nprint(t)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\ns = list(map(int, input().split(' ')))\nudi = 0\nmin = max = s[0]\nfor i in range(1, n):\n    if s[i] > max:\n        max = s[i]\n        udi += 1\n    elif s[i] < min:\n        min = s[i]\n        udi += 1\nprint(udi)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input(\"\"))\n\narr=list(map(int,input().split()))\n\nmax=arr[0];\nmin=arr[0];\nd=0;\nfor i in arr:\n\tif i>max:\n\t\td=d+1;\n\t\tmax=i;\n\telif i<min:\n\t\td=d+1;\n\t\tmin=i;\t \n\n\nprint(d)\t"
        },
        {
            "language": 1,
            "solution": "n=int(raw_input())\nc=map(int, raw_input().split())\na=0\nif(n>1):\n    for i in range(1,n):\n        j=i-1\n        mx=0\n        mn=100000\n        while(j>=0):\n            if(c[j]<mn):\n                mn=c[j]\n            if(c[j]>mx):\n                mx=c[j]\n            j-=1\n        if(c[i]<mn):\n            a+=1\n        elif(c[i]>mx):\n            a+=1\nprint a"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nb=[]\ncount2=-1\na=list(map(int,input().split(' ')))\nfor i in range(n):\n    count=0\n    count3=0\n    b.clear()\n    for j in range(i):\n        if a[i]<a[j]:\n            b.append(0)\n        if a[i]>a[j]:\n            b.append(1)\n        if a[i]==a[j]:\n            b.append(2)\n    for k in b:\n        if k!=0:\n            count+=1\n        if k!=1:\n            count3+=1\n    \n    if count==0 or count3==0:\n        count2+=1\n    \nprint(count2)"
        },
        {
            "language": 3,
            "solution": "x=int(input())\ny=list(map(int,input().split()))\nc=[y[0]]\nd=[y[0]]\nt=0\nfor i in range(1,x):\n   if(y[i]>max(c)):\n       t=t+1\n   c.append(y[i])\nfor i in range(1,x):\n    if(y[i]<min(d)):\n        t=t+1\n    d.append(y[i])\nprint(t)"
        },
        {
            "language": 1,
            "solution": "number = input()\nlistlist = map(int, raw_input().split())\nlargest = listlist[0]\nsmallest = largest\ncounter = 0\nlistlist.pop(0)\nfor x in xrange(len(listlist)):\n    if listlist[x] < smallest:\n        counter += 1\n        smallest = listlist[x]\n    if listlist[x] > largest:\n        counter += 1\n        largest = listlist[x]\nprint counter\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\narr = list(map(int, input().split()))\nbestSofar = arr[0]\nworstSofar = arr[0]\ncount = 0\nfor x in arr:\n\tif(x > bestSofar):\n\t\tcount+=1\n\t\tbestSofar = x\n\tif(x < worstSofar):\n\t\tcount+=1\n\t\tworstSofar = x\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\np=list(map(int,input().split()))\nka=p[0]\nla=p[0]\nsa=0\nfor item in p[1:]:\n    if item>ka:\n        ka=item\n        sa+=1\n    elif item<la:\n        la=item\n        sa+=1\n    else:\n        pass\nprint(sa)"
        },
        {
            "language": 1,
            "solution": "from __future__ import division, print_function\n \nimport os,sys\nfrom io import BytesIO, IOBase\n \nif sys.version_info[0] < 3:\n    from __builtin__ import xrange as range\n    from future_builtins import ascii, filter, hex, map, oct, zip\n \n \ndef ii():  return int(input())\ndef si():  return input()\ndef mi():  return map(int,input().split(\" \"))\ndef msi(): return map(str,input().split(\" \"))\ndef li():  return list(mi())\n \ndef dmain():\n    sys.setrecursionlimit(1000000)\n    threading.stack_size(1024000)\n    thread = threading.Thread(target=main)\n    thread.start()\n    \n#from collections import deque, Counter, OrderedDict,defaultdict\n#from heapq import nsmallest, nlargest, heapify,heappop ,heappush, heapreplace\n#from math import log,sqrt,factorial,cos,tan,sin,radians\n#from bisect import bisect,bisect_left,bisect_right,insort,insort_left,insort_right\n#from decimal import *\n#import threading\n#from itertools import permutations\n#Copy 2D list  m = [x[:] for x in mark] .. Avoid Using Deepcopy\n \nabc='abcdefghijklmnopqrstuvwxyz'\nabd={'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': 7, 'i': 8, 'j': 9, 'k': 10, 'l': 11, 'm': 12, 'n': 13, 'o': 14, 'p': 15, 'q': 16, 'r': 17, 's': 18, 't': 19, 'u': 20, 'v': 21, 'w': 22, 'x': 23, 'y': 24, 'z': 25}\nmod=1000000007\n#mod=998244353\ninf = float(\"inf\")\nvow=['a','e','i','o','u']\ndx,dy=[-1,1,0,0],[0,0,1,-1]\ndef getKey(item): return item[1] \ndef sort2(l):return sorted(l, key=getKey,reverse=True)\ndef d2(n,m,num):return [[num for x in range(m)] for y in range(n)]\ndef isPowerOfTwo (x): return (x and (not(x & (x - 1))) )\ndef decimalToBinary(n): return bin(n).replace(\"0b\",\"\")\ndef ntl(n):return [int(i) for i in str(n)]\ndef ncr(n,r): return factorial(n)//(factorial(r)*factorial(max(n-r,1)))\n \ndef ceil(x,y):\n    if x%y==0:\n        return x//y\n    else:\n        return x//y+1\n \ndef powerMod(x,y,p):\n    res = 1\n    x %= p\n    while y > 0:\n        if y&1:\n            res = (res*x)%p\n        y = y>>1\n        x = (x*x)%p\n    return res\n \ndef gcd(x, y):\n    while y:\n        x, y = y, x % y\n    return x\n    \ndef isPrime(n) : # Check Prime Number or not \n    if (n <= 1) : return False\n    if (n <= 3) : return True\n    if (n % 2 == 0 or n % 3 == 0) : return False\n    i = 5\n    while(i * i <= n) : \n        if (n % i == 0 or n % (i + 2) == 0) : \n            return False\n        i = i + 6\n    return True\n \n \n \ndef read():\n    sys.stdin = open('input.txt', 'r')  \n    sys.stdout = open('output.txt', 'w') \n \ndef main():\n    n=ii()\n    a=li()\n    maxa,mina,count=a[0],a[0],0\n    for i in range(1,len(a)):\n        if a[i]<mina:\n            count+=1\n            mina=a[i]\n        elif a[i]>maxa:\n            count+=1\n            maxa=a[i]\n    print(count)\n        \n# region fastio\n# template taken from https://github.com/cheran-senthil/PyRival/blob/master/templates/template.py\n \nBUFSIZE = 8192\n \n \nclass FastIO(IOBase):\n    newlines = 0\n \n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n \n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n \n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n \n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n \n \nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n \n \ndef print(*args, **kwargs):\n    \"\"\"Prints the values to a stream, or to sys.stdout by default.\"\"\"\n    sep, file = kwargs.pop(\"sep\", \" \"), kwargs.pop(\"file\", sys.stdout)\n    at_start = True\n    for x in args:\n        if not at_start:\n            file.write(sep)\n        file.write(str(x))\n        at_start = False\n    file.write(kwargs.pop(\"end\", \"\\n\"))\n    if kwargs.pop(\"flush\", False):\n        file.flush()\n \n \nif sys.version_info[0] < 3:\n    sys.stdin, sys.stdout = FastIO(sys.stdin), FastIO(sys.stdout)\nelse:\n    sys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\n \ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n \n# endregion\n \n \nif __name__ == \"__main__\":\n    #read()\n    main()\n    #dmain()\n \n# Comment Read()"
        },
        {
            "language": 3,
            "solution": "a = int(input())\nb = list(map(int, input().split()))\nh = b[0]\nl = b[0]\nc =0\nfor i in b[1:]:\n    if i < l:\n        c+=1\n        l = i\n    if i > h:\n        c += 1\n        h = i\nprint(c)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\n\narr=[]\nar=list(map(int,input().split()))\nc=0\narr.append(ar[0])\nfor i in range(1,n):\n    b=ar[i]\n    arr.append(b)\n    if(max(arr)==b ):\n        if(arr.count(b)==1):\n            c+=1\n        \n    elif(min(arr)==b):\n        if(arr.count(b)==1):\n            c+=1 \n        \nprint(c)"
        },
        {
            "language": 3,
            "solution": "\"\"\"\n  ____          _      _____\n / ___|___   __| | ___|  ___|__  _ __ ___ ___  ___\n| |   / _ \\ / _` |/ _ \\ |_ / _ \\| '__/ __/ _ \\/ __|\n| |__| (_) | (_| |  __/  _| (_) | | | (_|  __/\\__ \\\n \\____\\___/ \\__,_|\\___|_|  \\___/|_|  \\___\\___||___/\n\"\"\"\n\"\"\"\n\u2591\u2591\u2588\u2588\u2584\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2584\u2588\u2588\n\u2591\u2584\u2580\u2591\u2588\u2584\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2584\u2588\u2591\u2591\u2588\u2591\n\u2591\u2588\u2591\u2584\u2591\u2588\u2584\u2591\u2591\u2591\u2591\u2591\u2591\u2584\u2588\u2591\u2584\u2591\u2588\u2591\n\u2591\u2588\u2591\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2584\u2588\u2591\n\u2591\u2588\u2588\u2588\u2588\u2588\u2580\u2580\u2588\u2588\u2588\u2588\u2580\u2580\u2588\u2588\u2588\u2588\u2588\u2591\n\u2584\u2588\u2580\u2588\u2580\u2591\u2591\u2591\u2588\u2588\u2588\u2588\u2591\u2591\u2591\u2580\u2580\u2588\u2588\u2588\n\u2588\u2588\u2591\u2591\u2580\u2588\u2588\u2588\u2588\u2580\u2580\u2588\u2588\u2588\u2588\u2580\u2591\u2591\u2588\u2588\n\u2588\u2588\u2591\u2591\u2591\u2591\u2588\u2580\u2591\u2591\u2591\u2591\u2580\u2588\u2591\u2591\u2591\u2591\u2588\u2588\n\u2588\u2588\u2588\u2584\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2584\u2588\u2588\u2588\n\u2591\u2580\u2588\u2588\u2588\u2584\u2591\u2591\u2588\u2588\u2588\u2588\u2591\u2591\u2584\u2588\u2588\u2588\u2580\u2591\n\u2591\u2591\u2591\u2580\u2588\u2588\u2584\u2591\u2580\u2588\u2588\u2580\u2591\u2584\u2588\u2588\u2580\u2591\u2591\u2591\n\u2591\u2591\u2591\u2591\u2591\u2591\u2580\u2588\u2588\u2588\u2588\u2588\u2588\u2580\u2591\u2591\u2591\u2591\u2591\u2591\n\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\n\"\"\"\n\nimport sys\nimport math\nimport collections\nfrom collections import deque\n\n#sys.stdin = open('input.txt', 'r')\n#sys.stdout = open('output.txt', 'w')\n\nfrom functools import reduce\nfrom sys import stdin, stdout, setrecursionlimit\nsetrecursionlimit(2**20)\n\n\ndef factors(n):\n    return list(set(reduce(list.__add__,\n                           ([i, n // i] for i in range(1, int(n**0.5) + 1) if n % i == 0))))\n\n# for _ in range(int(stdin.readline())):\nn = int(stdin.readline().strip('\\n'))\n# b = str(stdin.readline().strip('\\n'))\n# n, m = list(map(int, stdin.readline().split()))\n#s = list(stdin.readline().strip('\\n').split('+'))\n# n = len(a)\n#k = int(stdin.readline().strip('\\n'))\n#a, b = 0, 0\n#ans = -1\na = list(map(int, stdin.readline().split()))\nmn, mx = a[0], a[0]\nans = 0\nfor i in range(n):\n    if a[i] > mx:\n        ans += 1\n        mx = a[i]\n    if a[i] < mn:\n        ans += 1\n        mn = a[i]\n\nprint(ans)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nlst = list(map(int,input().split()))\ncount = 0\nfor i in range(1,n):\n    if(lst[i] not in lst[0:i]):\n        if lst[i] == min(lst[0:i+1]) or lst[i] == max(lst[0:i+1]):\n            count+=1\nprint(count)\n    \n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nc=0\nfor i in range(1,n):\n    a=l[:i+1]\n    #print(a)\n    if l[i]==max(a) or l[i]==min(a):\n        if(a.count(l[i])!=1):\n            c-=1\n        \n        c+=1\n        #print(c)\nprint(c)\n    \n"
        },
        {
            "language": 1,
            "solution": "a = raw_input()\nb = map(int,raw_input().split())\nmax = b[0]\nmin = b[0]\ntotal = 0\nfor item in b:\n    if item > max:\n       max = item\n       total +=1\n    elif item <min:\n        min = item\n        total +=1\nprint total"
        },
        {
            "language": 3,
            "solution": "nc = int(input())\nscores = input()\ncounter = 0\nsclist = scores.split() #split coverts into list  \nfor i in range(0,nc):\n\tsclist[i] = int(sclist[i])\nmini=0\nmaxi=0\nfor i in range(1,nc):\n\tif(sclist[i]>sclist[maxi]):\n\t\tmaxi = i\n\t\tcounter += 1\n\telif(sclist[i]<sclist[mini]):\n\t\tmini = i\n\t\tcounter += 1\nprint(counter)"
        },
        {
            "language": 1,
            "solution": "n=input()\na=map(int,raw_input().split())\nminValue=a[0]\nmaxValue=a[0]\nresult=0\nfor i in xrange(1,n):\n    if a[i]<minValue:\n        result+=1\n        minValue=a[i]\n    if a[i]>maxValue:\n        result+=1\n        maxValue=a[i]\nprint(result)\n"
        },
        {
            "language": 3,
            "solution": "try:\n    n=int(input())\n    arr=list(map(int,input().split()))\n    maxele=arr[0]\n    minele=arr[0]\n    c=0\n    for i in range(len(arr)):\n        if arr[i]>maxele:\n            maxele=arr[i]\n            c+=1\n        if arr[i]<minele:\n            minele=arr[i]\n            c+=1\n    print(c)\nexcept EOFError:\n    pass"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nif n==1:\n    print(0)\nelse:\n    ma=l[0]\n    mi=l[0]\n    c,cf=0,0\n    for i in range(n):\n        if ma<l[i]:\n            c=c+1\n            ma=l[i]\n        if mi>l[i]:\n            cf=cf+1\n            mi=l[i]\n    print(c+cf)\n            \n            "
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class Practice{\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tint[] arr = new int[n];\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tarr[i] = sc.nextInt();\n\t\t}\n\t\tint min = arr[0], max = arr[0], count = 0;\n\t\tfor(int i = 1; i < n; i++){\n\t\t\tif(arr[i] < min){\n\t\t\t\tcount++;\n\t\t\t\tmin = arr[i];\n\t\t\t}\n\t\t\telse if(arr[i] > max){\n\t\t\t\tcount++;\n\t\t\t\tmax = arr[i];\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(count);\n\t\t\n\t}\n\n\t}"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=[int(i) for i in input().split()]\n\nif n==1:\n    print(0)\nelse:\n   if l[0]==l[1]:\n       m=0\n   else:\n       m=1\n   k=[]\n   k.append(l[0])\n   k.append(l[1])\n   for i in range(2,len(l)):\n        if min(k)<=l[i]<=max(k):\n            pass\n        else:\n            m+=1\n        k.append(l[i])\n   print(m)  \n            \n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\np = [int(s) for s in input().split(' ')]\nrun_min = p[0]\nrun_max = p[0]\ncount = 0\nfor s in p[1:]:\n    if s < run_min:\n        count += 1\n        run_min = s\n    elif s > run_max:\n        count += 1\n        run_max = s\nprint(count)"
        },
        {
            "language": 3,
            "solution": "no_of_matches=int(input())\nlist_of_scores=list(map(int,input().split(' ')))\nmin=max=list_of_scores[0]\namazing_performances=0\nfor i in list_of_scores[1:]:\n\tif(i>max):\n\t\tmax=i\n\t\tamazing_performances=amazing_performances+1\n\telif(i<min):\n\t\tmin=i\n\t\tamazing_performances=amazing_performances+1\nprint(amazing_performances)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=input().split()\na=[int(i) for i in a]\nmaxlist=a[0]\nminlist=a[0]\namazing=0\nfor i in range (1,len(a)):\n    if a[i]>maxlist:\n        maxlist=a[i]\n        amazing+=1\n    if a[i]<minlist:\n        minlist=a[i]\n        amazing+=1\nprint(amazing)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\nlen = len(a)\nmin = a[0]\nmax = a[0]\ncount = 0\nfor i in range(0,len-1):\n    if a[i+1] > a[i]:\n        if a[i+1] > max:\n            max = a[i+1]\n            count = count + 1\n    elif a[i+1] < a[i]:\n        if a[i+1] < min:\n            min = a[i+1]\n            count = count + 1\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\ndata = [int(i) for i in input().split()]\n\nmini = maxi = data[0]\ncnt = 0\n\nfor x in data[1:]:\n    if x < mini:\n        cnt += 1\n        mini = x\n    elif x > maxi:\n        cnt += 1\n        maxi = x\n\nprint(cnt)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\ns = list(map(int, input().split()))\n\nmax_score, min_score = s[0], s[0]\nanswer = 0\n\nfor i in s[1:]:\n    if i > max_score:\n        answer += 1\n        max_score = i\n    if i < min_score:\n        answer += 1\n        min_score = i\nprint(answer)"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class ILove {\n\n\tpublic static void main(String[] args) \n\t{\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\t\n\t\t//int[] zaporedje = new int[n];\n\t\t\n\t\tint stevec = 0;\n\t\tint max = sc.nextInt();\n\t\tint min = max;\n\t\t\n\t\tfor(int i = 1; i < n; i++)\n\t\t{\n\t\t\tint a = sc.nextInt();\n\t\t\t\n\t\t\tif(a > max)\n\t\t\t{\n\t\t\t\tmax = a;\n\t\t\t\tstevec++;\n\t\t\t}\n\t\t\telse if(a < min)\n\t\t\t{\n\t\t\t\tmin = a;\n\t\t\t\tstevec++;\n\t\t\t}\n\t\t}\n\t\tsc.close();\n\t\tSystem.out.println(stevec);\n\n\t}\n\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nif n==1:\n    print('0')\nelse:\n    if a[0]==a[1]:\n        ans=0\n    if a[0]!=a[1]:\n        ans=1\n    for i in range(2,n):\n        if a[i]> max(a[:i]) or a[i]< min(a[:i]):\n            ans+=1\n    print(ans)\n"
        },
        {
            "language": 3,
            "solution": "import sys\nimport math\n\n# sys.stdin = open('input.txt', 'r')\n# sys.stdout = open('output.txt', 'w')\n\n\ndef solve():\n\tn = int(input())\n\ta = [int(x) for x in input().split()]\n\n\tmax_val, min_val = a[0], a[0]\n\tans = 0\n\n\tfor i in range(1, n):\n\t\tif a[i] > max_val:\n\t\t\tmax_val = a[i]\n\t\t\tans += 1\n\t\telif a[i] < min_val:\n\t\t\tmin_val = a[i]\n\t\t\tans += 1\n\n\tprint(ans)\n\n\n\n\nif __name__ == \"__main__\":\n\ttest_cases = 1\n\tfor _ in range(test_cases):\n\t\tsolve()\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n/**\n *\n * @author eslam\n */\npublic class I_love_Username {\n\n    /**\n     * @param args the command line arguments\n     */\n    public static void main(String[] args) {\n        Scanner input = new Scanner(System.in);\n        int n = input.nextInt();\n        int x = input.nextInt();\n        int max = x;\n        int min = x;\n        int l =0;\n        for(int i =0;i<n-1;i++){\n            int y = input.nextInt();\n            if(y>max){\n                l++;\n                max = y;\n            }\n            else if(y<min){\n                l++;\n                min = y;\n            }\n        }\n        System.out.println(l);\n    }\n    \n}\n"
        },
        {
            "language": 1,
            "solution": "n=int(raw_input())\n\ncount=0\ndata=map(int,raw_input().split())\nfor i in xrange(1,len(data)):\n    if data[i]>max(data[:i]) or data[i]<min(data[:i]):\n        \n        count+=1\nprint count    "
        },
        {
            "language": 1,
            "solution": "#!/usr/bin/env python\n\nif __name__ == \"__main__\":\n    n = int(raw_input())\n    A = map(int, raw_input().split())\n    Max = Min = A[0]\n    Count = 0\n    for i in range(len(A)-1):\n        if Max < A[i + 1]:\n            Count += 1\n            Max = A[i + 1]\n        if Min > A[i + 1]:\n            Count += 1\n            Min = A[i + 1]\n    print Count\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nnums = list(map(int, input().split()))\n\nlowest = nums[0]\nhighest = nums[0]\n\ncount = 0\n\nfor i in range(1, t):\n\tif lowest > nums[i]:\n\t\tcount += 1\n\t\tlowest = nums[i]\n\telif nums[i] > highest:\n\t\tcount += 1\n\t\thighest = nums[i]\nprint(count)\n"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\nl = map(int, raw_input().split())\n\nmin = max = l[0]\nk = 0\nfor i in l[1:]:\n    if i < min:\n        min = i\n        k += 1\n        continue\n    if i > max:\n        max = i\n        k += 1\n        continue\n\nprint k\n"
        },
        {
            "language": 1,
            "solution": "n = input()\ntemp = map(int, raw_input().split())\nmax = temp[0]\nmin = temp[0]\nc = 0\nfor i in temp:\n\tif(i>max):\n\t\tmax = i\n\t\tc+=1\n\telif(i<min):\n\t\tmin = i\n\t\tc+=1\nprint c\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\n/**\n * Created with IntelliJ IDEA.\n * User: admin\n * Date: 15.10.12\n * Time: 14:32\n * To change this template use File | Settings | File Templates.\n */\n\npublic class proba {\n\n           public static void main(String... args){\n               Scanner in= new Scanner(System.in);\n\n               int n =  in.nextInt();\n\n               int kol=0;\n               int min=10001,max=-1;\n                for (int i=1;i<=n;i++){\n                  int x = in.nextInt();\n\n                  if (x>max || x<min){\n                      kol++;\n                  if (x>max) max=x;\n                  if (x<min) min=x;\n                  };\n\n                }\n                System.out.print(--kol);\n\n\n           }\n}\n"
        },
        {
            "language": 3,
            "solution": "c=0\nn=int(input())\na=[int(i) for i in input().split()]\nm,b=a[0],a[0]\nfor i in a:\n    if i<m:\n        c+=1\n        m=i\n    if i>b:\n        c+=1\n        b=i\nprint(c)"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.util.StringTokenizer;\n\npublic class ILoveUsername {\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tScanner sc=new Scanner(System.in);\n\t\tint n=sc.nextInt();\n\t\tint []a=new int [n];\n\t\tfor(int i=0;i<n;i++)\n\t\t\ta[i]=sc.nextInt();\n\t\tint ans=0;\n\t\tfor(int i=1;i<n;i++)\n\t\t{\n\t\t\tboolean ok=true;\n\t\t\tfor(int j=0;j<i;j++)\n\t\t\t{\n\t\t\t\tif(a[j]>=a[i])\n\t\t\t\t\tok=false;\n\t\t\t}\n\t\t\tif(ok)\n\t\t\t\tans++;\n\t\t\tif(!ok)\n\t\t\t{\n\t\t\t\tok=true;\n\t\t\t\tfor(int j=0;j<i;j++)\n\t\t\t\t{\n\t\t\t\t\tif(a[j]<=a[i])\n\t\t\t\t\t\tok=false;\n\t\t\t\t}\n\t\t\t\tif(ok)\n\t\t\t\t\tans++;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(ans);\n\n\t}\n\tstatic class Scanner \n\t{\n\t\tStringTokenizer st;\n\t\tBufferedReader br;\n\n\t\tpublic Scanner(InputStream s){\tbr = new BufferedReader(new InputStreamReader(s));}\n\n\t\tpublic String next() throws IOException \n\t\t{\n\t\t\twhile (st == null || !st.hasMoreTokens()) \n\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tpublic int nextInt() throws IOException {return Integer.parseInt(next());}\n\t\t\n\t\tpublic long nextLong() throws IOException {return Long.parseLong(next());}\n\n\t\tpublic String nextLine() throws IOException {return br.readLine();}\n\t\t\n\t\tpublic double nextDouble() throws IOException\n\t\t{\n\t\t\tString x = next();\n\t\t\tStringBuilder sb = new StringBuilder(\"0\");\n\t\t\tdouble res = 0, f = 1;\n\t\t\tboolean dec = false, neg = false;\n\t\t\tint start = 0;\n\t\t\tif(x.charAt(0) == '-')\n\t\t\t{\n\t\t\t\tneg = true;\n\t\t\t\tstart++;\n\t\t\t}\n\t\t\tfor(int i = start; i < x.length(); i++)\n\t\t\t\tif(x.charAt(i) == '.')\n\t\t\t\t{\n\t\t\t\t\tres = Long.parseLong(sb.toString());\n\t\t\t\t\tsb = new StringBuilder(\"0\");\n\t\t\t\t\tdec = true;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tsb.append(x.charAt(i));\n\t\t\t\t\tif(dec)\n\t\t\t\t\t\tf *= 10;\n\t\t\t\t}\n\t\t\tres += Long.parseLong(sb.toString()) / f;\n\t\t\treturn res * (neg?-1:1);\n\t\t}\n\t\t\n\t\tpublic boolean ready() throws IOException {return br.ready();}\n\n\n\t}\n\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nd=[int(i) for i in input().split()]\nmx=d[0]\nmi=d[0]\ns=0\nfor i in range(n):\n    if d[i]>mx:\n        mx=d[i]\n        s+=1\n    elif d[i]<mi:\n        mi=d[i]\n        s+=1\nprint(s)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nbest=l[0]\nworst=l[0]\ns=0\nfor i in range(1,len(l)):\n  if l[i]<worst:\n    s+=1\n    worst=l[i]\n  if l[i]>best:\n    s+=1\n    best=l[i]\nprint(s)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = list(map(int,input().split()))\nc=0\nfor i in range(1,n):\n    if l[i] > max(l[0:i]) or l[i] < min(l[0:i]):\n        c+=1\nprint(c)\n"
        },
        {
            "language": 3,
            "solution": "import sys\nn = int(input())\nnumbers = list(map(int, input().split()))\nsum_numbers = 0\nindex = 0\nmax_value = 0\nmin_value = 0\nwhile(index < n):\n  #print(index)\n  if(index == 0):\n    max_value = numbers[index]\n    min_value = numbers[index]\n  else:\n    if(numbers[index] > max_value):\n      sum_numbers += 1\n      max_value = numbers[index]\n    if(numbers[index] < min_value):\n      sum_numbers += 1\n      min_value = numbers[index]\n\n  index +=1\nprint(sum_numbers)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\n\ncontest = list(map(int,input().split()))\n\ncount = 0\n\nfor i in range(1,len(contest)):\n    if contest[i] > max(contest[:i]) or contest[i] < min(contest[:i]):\n        count += 1\n\nprint(count)"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.lang.*;\n// import java.math.*;\nimport java.io.*;\npublic class Main\n{\n    \n    public static void main (String[] args) throws java.lang.Exception\n\t{\n        // your code goes here\n\t\ttry{\n            BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n            PrintWriter ot=new PrintWriter(System.out);\n            int t=1;//Integer.parseInt(br.readLine().trim());\n            // int total=0;\n            while(t-->0)\n            {\n                String ss[]=br.readLine().trim().split(\" \");\n                int n=Integer.parseInt(ss[0]);\n                int a[]=new int[n];\n                // int b[]=new int[n];\n                String s[]=br.readLine().trim().split(\" \");\n                for(int i=0;i<n;i++)\n                {\n                    a[i]=Integer.parseInt(s[i]);\n\n                }\n\n                ot.println(find(a,n));\n                \n                \n            }\n\n            \n            ot.close();\n            br.close();\n            \n        } catch(Exception e){\n            e.printStackTrace();\n            return;\n        }\n    }\n    public static int find(int a[],int n){\n        int max=a[0];\n        int min=a[0];\n        if(n==1)\n        return 0;\n        int count=0;\n        for(int i=1;i<n;i++)\n        {\n            if(a[i]>max)\n            {\n                count++;\n                max=a[i];\n            }\n            else if(a[i]<min)\n            {\n                count++;\n                min=a[i];\n            }\n        }\n        return count;\n    }\n}\n    "
        },
        {
            "language": 3,
            "solution": "x=int(input())\ns=input().split()\nk=0\ns=list(map(int,s))\nfor i in range(1,x):\n    t=s[:i]\n    a=max(t)\n    b=min(t)\n    if s[i]>a or s[i]<b:\n        k=k+1\nprint(k)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nx=input().split()\nx=[int(x[i])for i in range(n)]\nt=0\nfor i in range(1,n):\n    u,v=0,0\n    for j in range(i+1):\n        if x[i]>x[j]:\n            u+=1\n        elif x[i]<x[j]:\n            v+=1\n    if u==i or v==i:\n        t+=1\nprint(t)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nlis = list(map(int, input().split()))\n\nif len(lis) == 1 or (len(lis) == 2 and lis[0] == lis[1]):\n    print(0)\nelif len(lis) == 2 and lis[0] != lis[1]:\n    print(1)\nelse:\n    highest = max(lis[0:2])\n    lowest = min(lis[0:2])\n    amazing = int(bool(lis[0] != lis[1]))\n    for i in range(2, n):\n        if lowest <= lis[i] <= highest:\n            continue\n        else:\n            lowest = min(lis[i], lowest)\n            highest = max(lis[i], highest)\n            amazing = amazing+1\n    print(amazing)"
        },
        {
            "language": 3,
            "solution": "\n\nn=int(input())\nl=[int(i) for i in input().split()]\na=l[0]\nb=l[0]\nk=0\nfor i in range(1,n):\n    if(l[i]<a):\n        a=l[i]\n        k=k+1\n    if(l[i]>b):\n        b=l[i]\n        k=k+1\n        \nprint(k)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nlst=list(map(int,input().split()))\nmin,max=lst[0],lst[0]\ncnt=0\nfor i in range(1,n):\n    if lst[i]<min:\n        min=lst[i]\n        cnt+=1\n    elif lst[i]>max:\n        max=lst[i]\n        cnt+=1\nprint(cnt)"
        },
        {
            "language": 4,
            "solution": " \nimport java.util.*;\nimport java.lang.*;\nimport java.io.*;\n \n/* Name of the class has to be \"Main\" only if the class is public. */\npublic class amazing\n{\n\tpublic static void main (String[] args) throws java.lang.Exception\n\t{\n\t\tScanner s1=new Scanner(System.in);\n\t\tint len=s1.nextInt();\n\t\tint arr[]=new int[len];\n\t\tint big=0,small=0;\n\t\tint amz=0;\n\t\tfor(int i=0;i<len;i++)\n\t\t{\n\t\t\tarr[i]=s1.nextInt();\n\t\t\t\n\t\t\tif(i==0)\n\t\t\t{\n\t\t\t    small=arr[0];\n\t\t\t    big=arr[0];\n\t\t\t    continue;\n\t\t\t}\n \n\t\t\tif(arr[i] < small)\n\t\t\t{\n\t\t\t\tamz++;\n\t\t\t\tsmall=arr[i];\n\t\t\t}\n\t\t\tif(arr[i] > big)\n\t\t\t{\n\t\t\t\tamz++;\n\t\t\t\tbig=arr[i];\n\t\t\t}\n\t\t}\n\t\t\tSystem.out.print(amz);\n \n\t\t}\n\t}"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.Scanner;\n\n\npublic class Main {\n\n    public static void main(String[] args){\n        Scanner s = new Scanner (System.in);\n        int n = s.nextInt();\n        int a,b,menor,mayor;\n        if(n ==1 ){ \n            s.nextInt();\n            System.out.println(0);\n        }\n        else{\n        a = s.nextInt();\n        b = s.nextInt();\n        int cont =1;\n        if(a<b){\n            menor = a;\n            mayor = b;\n        }\n        else if(a==b)\n        {\n            menor = a;\n            mayor = b;\n            cont =0;\n        }\n        else\n        {\n            menor = b;\n            mayor = a;\n        }\n        \n        for (int i = 2; i < n; i++) {\n            a = s.nextInt();\n            if(a> mayor){\n                mayor=a;\n                cont++;\n            }\n            if(a < menor){\n                menor = a;\n                cont++;\n            }\n            \n        }\n        System.out.println(cont);\n        }\n    }    \n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, nums, sum = 0;\n  vector<int> v;\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> nums;\n    v.emplace_back(nums);\n  }\n  int min = v[0];\n  int max = v[0];\n  for (int i = 0; i < n; i++) {\n    if ((v[i] > max)) {\n      max = v[i];\n      sum++;\n    } else if (v[i] < min) {\n      min = v[i];\n      sum++;\n    }\n  }\n  cout << sum << '\\n';\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\narr = [int(i) for i in input().split(' ')]\nres = 0\nfor i in range( 1,len(arr) ):\n  maxi, mini = 0,0\n  for j in range(i):\n    if(arr[i] > arr[j]):\n      maxi+=1\n    if(arr[i] < arr[j]):\n      mini+=1\n  if(maxi == i or mini == i):\n    res+=1\nprint(res)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nmax=a[0]\nmin=a[0]\ncount=0\nfor i in range(1,n):\n    if a[i]>max:\n        max=a[i]\n        count+=1 \n    elif a[i]<min:\n        min=a[i]\n        count+=1 \nprint(count)"
        },
        {
            "language": 1,
            "solution": "# your code goes here\nfrom sys import stdin\nn=int(stdin.readline().strip())\nar=map(int, stdin.readline().strip().split())\n\nmin=ar[0]\nmax=ar[0]\nc=0\nfor i in ar:\n  if i<min:\n    min=i\n    c+=1\n  if i>max:\n    max=i\n    c+=1\nprint c"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint gcd(int a, int b) { return b == 0 ? a : gcd(b, a % b); }\nint main() {\n  int n;\n  int inp;\n  int ac = 0;\n  int more = 0;\n  int less = 0;\n  cin >> n;\n  int arr[n];\n  for (int i = 0; i < n; ++i) {\n    cin >> inp;\n    arr[i] = inp;\n  }\n  for (int j = 1; j < n; ++j) {\n    for (int k = 0; k < j; ++k) {\n      if (arr[k] > arr[j]) {\n        more++;\n      } else if (arr[k] < arr[j]) {\n        less++;\n      } else if (arr[k] == arr[j]) {\n        more++;\n        less++;\n      }\n    }\n    if (!(more != 0 && less != 0)) {\n      ac++;\n    }\n    more = 0;\n    less = 0;\n  }\n  cout << ac;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nc=0\nl=list(map(int,input().split()))\nlo=l[0]\nhg=l[0]\nfor i in range(1,n):\n    if l[i] < lo:\n        c+=1\n        lo=l[i]\n    elif l[i] > hg:\n        c+=1\n        hg=l[i]\nprint(c)\n"
        },
        {
            "language": 3,
            "solution": "num_contest = int(input())\nlst_point = list(map(int, input().split()))\n\nmax_point = lst_point[0]\nmin_point = lst_point[0]\n\namazing_time = 0\n\nfor point in lst_point:\n    if point > max_point:\n        amazing_time += 1\n        max_point = point\n    elif point < min_point:\n        amazing_time += 1\n        min_point = point\n\nprint(amazing_time)"
        },
        {
            "language": 3,
            "solution": "def solve():\n\tn = int(input())\n\tcl = list(map(int, input().split()))\n\t\n\tfi = True\n\tamz = 0\n\tma = 0\n\tmi = 0\n\t\n\tfor i in cl:\n\t\tif fi:\n\t\t\tma = i\n\t\t\tmi = i\n\t\t\tfi = False\n\t\t\tcontinue\n\t\t\n\t\tif i > ma:\n\t\t\tamz += 1\n\t\t\tma = i\n\t\telif i < mi:\n\t\t\tamz += 1\n\t\t\tmi = i\n\t\t\t\n\tprint(amz)\n\nif __name__ == '__main__':\n\tsolve()\n"
        },
        {
            "language": 3,
            "solution": "n= int(input())\nA=list(map(int,input().split()))\nmx=A[0]\nmn=A[0]\nif n==1:\n    print(0)\nelse:\n    cnt=0\n    for j in range(1,n):\n        if A[j]>mx:\n            cnt+=1 \n            mx=A[j]\n        elif A[j]<mn:\n            cnt+=1 \n            mn=A[j] \n    print(cnt)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nbool check(int n1) {\n  vector<int> d(10, 0);\n  while (n1) {\n    d[n1 % 10]++;\n    n1 = n1 / 10;\n  }\n  for (auto &x : d) {\n    if (x > 1) return false;\n  }\n  return true;\n}\nvoid solve() {\n  int n;\n  cin >> n;\n  int a;\n  cin >> a;\n  int m1 = a, m2 = a;\n  int res = 0;\n  for (int i = 1; i < n; i++) {\n    int x;\n    cin >> x;\n    if (x > m1) {\n      res++;\n      m1 = x;\n    }\n    if (x < m2) {\n      res++;\n      m2 = x;\n    }\n  }\n  cout << res;\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  solve();\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "input()\n\ndata = list(map(int, input().split()))\nmx = mn = data[0]\nres = 0\nfor v in data[1:]:\n    if v < mn:\n        res += 1\n        mn = v\n    elif v > mx:\n        res += 1\n        mx = v \nprint(res)\n"
        },
        {
            "language": 3,
            "solution": "x=int(input())\narr=list( map( int,input().split() ) )\nw=b=arr[0]\nans=0\nfor i in range(1,x):\n    if arr[i]>b:\n        b=arr[i]\n        ans+=1\n    elif arr[i]<w:\n        w=arr[i]\n        ans+=1\nprint(ans)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\narr=list(map(int,input().split()))\nmn=arr[0]\nmx=arr[0]\nans=0\nfor i in range(1,n):\n    if(arr[i]>mx):\n        mx=arr[i]\n        ans+=1\n    if(arr[i]<mn):\n        mn=arr[i]\n        ans+=1\nprint(ans)\n"
        },
        {
            "language": 1,
            "solution": "n = input()\na = map(int, raw_input().split())\nmx = a[0]\nmn = a[0]\nres = 0\nfor i in range(n):\n    if a[i] < mn:\n        res += 1\n        mn = a[i]\n    if mx < a[i]:\n        res += 1\n        mx = a[i]\nprint res\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nm=[int(i) for i in input().split()]\na=m[0]\nb=m[0]\nexc=0\nfor i in range(1,n):\n    if m[i]>a:\n        a=m[i]\n        exc+=1\n    elif m[i]<b:\n        b=m[i]\n        exc+=1\nprint(exc)\n"
        },
        {
            "language": 3,
            "solution": "input()\ncount=0\nx=list(map(int,input().split()))\nfor i in range(1,len(x)):\n    if(x[i]<min(x[0:i]) or x[i]>max(x[0:i])):\n        count+=1\nprint(count)"
        },
        {
            "language": 3,
            "solution": "q = int(input())\ns = list(map(int, input().split()))\nmi = s[0]\nma = s[0]\nneed = 0\nfor i in range(len(s)):\n    if s[i] > ma:\n        need += 1\n        ma = s[i]\n    elif s[i] < mi:\n        need += 1\n        mi = s[i]\nprint(need)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nar=list(map(int,input().split()))\n\nm=ar[0]\nM=ar[0]\nper=0\nfor x in ar[1:]:\n    if(x<m):\n        per=per+1\n        m=x\n    elif(x>M):\n        per=per+1\n        M=x\nprint(per)"
        },
        {
            "language": 3,
            "solution": "n = input()\na = input().split(' ')\n\nfor i in range(0,len(a)):\n    a[i] = int(a[i])\n\nmx = a[0]\nmn = a[0]\ncnt = 0\n\nfor i in range(1,len(a)):\n    if a[i] > mx:\n        mx = a[i]\n        cnt += 1\n\n    if a[i] < mn:\n        mn = a[i]\n        cnt += 1\nprint(cnt)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  vector<int> a;\n  for (int i = 0; i < n; i++) {\n    int num;\n    cin >> num;\n    a.push_back(num);\n  }\n  int maxm = a[0];\n  int minm = a[0];\n  int c = 0;\n  for (int i = 1; i < n; i++) {\n    if (a[i] > maxm) {\n      maxm = a[i];\n      c++;\n    }\n    if (a[i] < minm) {\n      minm = a[i];\n      c++;\n    }\n  }\n  cout << c;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=input().split()\nl=[]\nif len(a)==1:\n    print(0)\nelse:\n    l.append(int(a[0]))\n    l.append(int(a[1]))\n    if l[0]==l[1]:\n        sum=0\n    else:\n        sum=1\n    for i in range(2,n):\n        if int(a[i])>max(l) or int(a[i])<min(l):\n            sum+=1\n        l.append(int(a[i]))\n    print(sum)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = list(map(int,input().split()))[:n]\nif n == 1:\n  count = 0\nelse:\n  mi = l[0]\n  ma = l[0]\n  count = 0\n  for i in range(1 , n):\n    if l[i] > ma:\n      count += 1\n      ma = l[i]\n    if l[i] < mi:\n      count += 1\n      mi = l[i]\nprint(count)       "
        },
        {
            "language": 3,
            "solution": "n=int(input())\np=list(map(int,input().split()))\n\nbest_record=worst_record=p[0]\namazing=0\n\nfor i in p[1:]:\n    if i>best_record:\n        best_record=i\n        amazing+=1\n    elif i<worst_record:\n        worst_record=i\n        amazing+=1\nprint(amazing)\n    \n    "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, l = 0, j = 0, k = 0;\n  cin >> n;\n  int arr[n];\n  for (int i = 0; i < n; i++) {\n    cin >> arr[i];\n  }\n  j = arr[0];\n  k = arr[0];\n  for (int i = 0; i < n; i++) {\n    if (arr[i] < j) {\n      j = arr[i];\n      l++;\n    } else if (arr[i] > k) {\n      k = arr[i];\n      l++;\n    }\n  }\n  cout << l;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nk = [int(j) for j in input().split()]\na = k[0]\nb = k[0]\ns = 0\nfor i in range(len(k)):\n    if k[i] > a:\n        s += 1\n        a = k[i]\n    elif k[i] < b:\n        s += 1\n        b = k[i]\n    else:\n        pass\nprint(s)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nraw = [int(x) for x in input().split(' ')]\nmax = raw[0]\nmin = raw[0]\ns = 0\nfor i in range(1,n):\n    if raw[i]>max:\n        s+=1\n        max = raw[i]\n    elif raw[i]<min:\n        s+=1\n        min = raw[i]\nprint(s)"
        },
        {
            "language": 3,
            "solution": "\nn=int(input())\na=[int(x) for x in input().split()]\nmin_a=max_a=a[0]\n\nc=0\n\nfor i in range(1,n):\n    if(a[i]<min_a):\n        min_a=a[i]\n        c+=1\n    elif(a[i]>max_a):\n        max_a=a[i]\n        c+=1\n\nprint(c)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nv=0\nb=[l[0]]\nfor i in range(1,n):\n    if(l[i]<min(b) or l[i]>max(b)):\n        v=v+1\n    b.append(l[i])\nprint(v)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=input().split()\n\nm=int(l[0])\nma=int(l[0])\nans=0\n\nfor i in range(1,n):\n    if int(l[i])>ma or int(l[i])<m:\n        ans+=1\n    if m>int(l[i]):\n        m=int(l[i])\n    if ma<int(l[i]):\n        ma=int(l[i])\n\nprint(ans)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\npo=[int(t) for t in input().split()]\npoint=[]\nfor i in po:\n    if i not in point:\n        point.append(i)\n\nif len(point)<2:\n    print(0)\n    exit()\nelse:\n    M=max(point[0],point[1])\n    m=min(point[0],point[1])\n    value=1\n    for i in range(2,len(point)):\n        if point[i]>M:\n            M=point[i]\n            value+=1\n        elif point[i]<m:\n            m=point[i]\n            value+=1\nprint(value)\n\n        \n        \n        \n        \n    \n"
        },
        {
            "language": 1,
            "solution": "N = input()\nl = map(int,raw_input().split())\n \nvmin = vmax = l[0]\n \ncnt = 0\nfor i in range(1,N):\n        if l[i] > vmax:\n                cnt += 1\n                vmax = l[i]\n        elif l[i] < vmin:\n                cnt += 1\n                vmin = l[i]\nprint cnt"
        },
        {
            "language": 1,
            "solution": "n = int(input())\nx = list(map(int,raw_input().split()))\nm = k = x[0]\nc = d = 0\nfor i in range(n):\n    if(x[i] < m):\n        m = x[i]\n        c += 1\n    if(x[i] > k):\n        k = x[i]\n        d += 1\nprint(c+d)"
        },
        {
            "language": 1,
            "solution": "count = 0\nm = []\nn = input()\nm = map(int, raw_input().split())\nif n == 1:\n    print '0'\n    exit()\nif m[0] > m [1]:\n    smo = m[1] \n    big = m[0]\n    count += 1\nelif m[0] < m [1]:\n    smo = m[0] \n    big = m[1]\n    count += 1\nelse:\n    smo = m[0] \n    big = m[1]\nfor i in xrange(1, n - 1):\n    if m[i] > m[i + 1] and m[i + 1] < smo :\n        smo = m[i + 1]\n        count += 1\n    if m[i] < m[i + 1] and m[i + 1] > big :\n        count += 1\n        big = m[i + 1]\nprint count"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\nimport static java.lang.Math.*;\nimport static java.util.Arrays.*;\n\npublic class ILoveUsername {\n\tpublic static void main(String[] args) throws IOException {\n\t  Scanner s = new Scanner(System.in);\n\t\t\n\t  //READ----------------------------------------------------\n    int n = s.nextInt();\n    int[] t = new int[n];\n    int max = s.nextInt();;\n    int min = max;\n    long res = 0;\n    for (int i = 1; i < t.length; i++)\n    {\n      t[i] = s.nextInt();\n      if(t[i]>max){\n        max = t[i];\n        res++;\n      }\n      else if(t[i]<min){\n        min = t[i];\n        res++;\n      }\n    }\n\t\t\n\t\t//SOLVE----------------------------------------------------\n\t\t\n\t\t\n\t\t\n\t\t\n    //CLOSE----------------------------------------------------\n    System.out.println(res);\n    s.close();\n\t}\n}"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nc_1=0\nfor i in range(1,n):\n    j=i-1\n    if l[i]>l[j]:\n        while(j>=0 and l[i]>l[j]):\n            j=j-1\n        if j==-1:\n            c_1=c_1+1\n    elif l[i]<l[j]:\n        while(j>=0 and l[i]<l[j]):\n            j=j-1\n        if j==-1:\n            c_1=c_1+1\nprint(c_1)            "
        },
        {
            "language": 3,
            "solution": "input()\n\nscores = input()\nscoresList = scores.split()\n\nbiggest = None\nsmallest = None\namazing = 0\n\ncount = 0\n\nfor i in scoresList:\n    if count == 0:\n        biggest = int(i)\n        smallest = int(i)\n    if count != 0:\n        if int(i) > biggest:\n            biggest = int(i)\n            amazing += 1\n        if int(i) < smallest:\n            smallest = int(i)\n            amazing += 1\n    count += 1\nprint(amazing)\n"
        },
        {
            "language": 3,
            "solution": "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Sat Jan 12 13:13:58 2019\n\n@author: nishantwrp\n\"\"\"\nn = int(input())\na = list(map(int,input().split()))\nmina = a[0]\nmaxa = a[0]\nans = 0\nfor i in range(1,n):\n    if a[i] > maxa:\n        ans += 1\n        maxa = a[i]\n    elif a[i] < mina:\n        ans += 1\n        mina = a[i]\nprint(ans)"
        },
        {
            "language": 1,
            "solution": "n = input()\ns = map( int, raw_input().split() )\nmini = s[ 0 ]\nmaxi = s[ 0 ]\nans = 0\nfor x in s[ 1 : ]:\n    if x > maxi:\n        maxi = x\n        ans += 1\n    if x < mini:\n        mini = x\n        ans += 1\nprint ans"
        },
        {
            "language": 3,
            "solution": "def main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    mx = mn = a[0]\n    for i in range(1, n):\n        if a[i] > mx:\n            ans += 1\n            mx = a[i]\n        if a[i] < mn:\n            ans += 1\n            mn = a[i]\n    print(ans)\n    pass\n\n\nif __name__ == '__main__':\n    main()\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint mostFrequent(int arr[], int n) {\n  sort(arr, arr + n);\n  int max_count = 1, res = arr[0], curr_count = 1;\n  for (int i = 1; i < n; i++) {\n    if (arr[i] == arr[i - 1])\n      curr_count++;\n    else {\n      if (curr_count > max_count) {\n        max_count = curr_count;\n        res = arr[i - 1];\n      }\n      curr_count = 1;\n    }\n  }\n  if (curr_count > max_count) {\n    max_count = curr_count;\n    res = arr[n - 1];\n  }\n  return max_count;\n}\nvector<int> factors(int n) {\n  vector<int> f;\n  for (int x = 2; x * x <= n; x++) {\n    while (n % x == 0) {\n      f.push_back(x);\n      n /= x;\n    }\n  }\n  if (n > 1) f.push_back(n);\n  return f;\n}\nint main() {\n  int n;\n  cin >> n;\n  int a[n];\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n  }\n  int c = 0;\n  int max = a[0];\n  for (int i = 1; i < n; i++) {\n    if (a[i] > max) {\n      max = a[i];\n      c++;\n    }\n  }\n  int min = a[0];\n  for (int i = 1; i < n; i++) {\n    if (a[i] < min) {\n      min = a[i];\n      c++;\n    }\n  }\n  if (n > 1)\n    cout << c << endl;\n  else\n    cout << \"0\" << endl;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "def Amazing(arr):\n    Max=arr[0]\n    Min=arr[0]\n    amazing=0\n    for i in range (1 , n):\n        if arr[i]>Max:\n            Max=arr[i]\n            amazing+=1\n        if arr[i]<Min:\n            Min=arr[i]\n            amazing+=1\n    return amazing        \n        \n        \n    \nn=int(input())\nContests=list(map(int , input().split()))\nprint(Amazing(Contests))\n\n\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nlis=input().split()\nfor i in range(n):\n    lis[i]=int(lis[i])\nm=lis[0]\nM=lis[0]\nc=0\nif n==1:\n    print('0')\nelse:\n    for i in range(1,n):\n        if lis[i]>M or lis[i]<m:\n            c+=1\n            if lis[i]>M:\n                M=lis[i]\n            else:\n                m=lis[i]\n    print(c)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = list(map(int,input().split()))\nmx = l[0]\nmn = l[0]\nans = 0\nfor i in l[1:]:\n    if(mn > i):\n        ans += 1\n        mn = i\n    elif(mx < i):\n        ans += 1\n        mx = i\n\nprint(ans)\n        \n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\narr=list(map(int,input().split()))\nmin=arr[0]\nmax=arr[0]\ncount=0\nfor i in range(1,n):\n    if arr[i]<min:\n        min=arr[i]\n        count+=1\n    elif arr[i]>max:\n        max=arr[i]\n        count+=1\nprint(count)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, i = 1;\n  int ma = 0, mi = 0, y = 0;\n  cin >> n;\n  int a[n];\n  cin >> a[0];\n  ma = a[0];\n  mi = a[0];\n  while (i < n) {\n    cin >> a[i];\n    if (ma == a[i] || mi == a[i]) {\n      i++;\n    } else {\n      ma = max(ma, a[i]);\n      if (ma == a[i]) {\n        y++;\n      }\n      mi = min(mi, a[i]);\n      if (mi == a[i]) {\n        y++;\n      }\n      i++;\n    }\n  }\n  cout << y;\n}\n"
        },
        {
            "language": 3,
            "solution": "def main():\n    n=int(input())\n    list1=list(map(int,input().split(\" \")))\n    min1=list1[0]\n    max1=list1[0]\n    c=0\n    for i in range(n-1):\n        if list1[i+1]>max1:\n            max1=list1[i+1]\n            c+=1\n        elif list1[i+1]<min1:\n            min1=list1[i+1]\n            c+=1\n        else:\n            pass\n    print(c)\nmain()\n            "
        },
        {
            "language": 3,
            "solution": "n=int(input())\nmin=0\nmax=0\nsum=0\nl=input().split()\nfor i in range(n):\n    if(i==0):\n        min=int(l[i])\n        max=int(l[i])\n    else:\n        if(int(l[i])>max):\n            max=int(l[i])\n            sum+=1\n        elif(int(l[i])<min):\n            min=int(l[i])\n            sum+=1\nprint(sum)"
        },
        {
            "language": 3,
            "solution": "from sys import stdin,stdout\ninp = stdin.readline\nout = stdout.write\n\nn = int(inp().strip())\na = list(map(int,inp().strip().split()))\nmx,mn,c=a[0],a[0],0\nfor i in range(1,n):\n\tif a[i]>mx:\n\t\tc+=1\n\t\tmx=a[i]\n\telif a[i]<mn:\n\t\tc+=1\n\t\tmn=a[i]\nprint(c)"
        },
        {
            "language": 3,
            "solution": "totalpoints=int(input())\nanswer=0\npoints=[int(i) for i in input().split()]\nprevmax,premin=points[0],points[0]\nfor i in range(2,len(points)+1):\n    a=points[0:i]\n    if(premin>min(a)):\n        premin=min(a)\n        answer+=1\n    elif(prevmax<max(a)):\n        prevmax=max(a)\n        answer+=1\nprint(answer)"
        },
        {
            "language": 3,
            "solution": "x=int(input())\ny=list(map(int,input().split()))\nd=0\n\nfor i in range (1,x):\n    if y[i]<min(y[:i]) or y[i]>max(y[:i]):\n        d+=1\nprint(d)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nline = input().split()\nmax = int(line[0])\nmin = int(line[0])\nans = 0\nfor i in line[1:]:\n    if int(i) > max:\n        max = int(i)\n        ans += 1\n    if int(i) < min:\n        min = int(i)\n        ans += 1\nprint(ans)\n"
        },
        {
            "language": 3,
            "solution": "\nif __name__ == \"__main__\":\n    \n    n = int(input())\n    \n    scores = list(map(int , input().rstrip().split()))\n    \n    maxScore = scores[0]\n    minScore = scores[0]\n    count = 0\n    for i in range(1 , len(scores)):\n        if scores[i] > maxScore:\n            maxScore = scores[i]\n            count += 1\n            continue\n        if scores[i] < minScore:\n            minScore = scores[i]\n            count += 1\n    print (count)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nm = input().split()\ncount = 0\nc = 0\nmy_list = []\nfor i in range(n):\n  c += 1\n  my_list.append(int(m[i]))\n  x = my_list.count(int(m[i]))\n  if max(my_list) == int(m[i]) and c > 1 and x < 2:\n    count += 1\n  elif min(my_list) == int(m[i]) and c > 1 and x < 2:\n    count += 1\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nm=l[0]\nn=l[0]\ncount=0\nfor i in l:\n    if i>m:\n        m=i\n        count=count+1\n    if i<n:\n        count=count+1\n        n=i\nprint(count)        "
        },
        {
            "language": 1,
            "solution": "n,count=input(),0\nx=map(int,raw_input().split())\nfor i in range(1,n):\n    if max(x[:i])<x[i] or min(x[:i])>x[i]:\n        count+=1\nprint count"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.FileInputStream;\nimport java.io.InputStreamReader;\n\npublic class Main {\n    \n    public static void main(String[] args) throws Exception {\n        BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n        \n        String[] parts = bf.readLine().trim().split(\"[ ]+\");\n        \n        int n = Integer.parseInt(parts[0]);\n        \n        parts = bf.readLine().trim().split(\"[ ]+\");\n        int[] scores = new int[n];\n        \n        int count = 0;\n        int best = 0, worst = 0;\n        for(int i = 0; i < n; i++) {\n            scores[i] = Integer.parseInt(parts[i]);\n            if(i == 0) {\n                best = scores[i];\n                worst = scores[i];\n            }\n            \n            if(scores[i] > best) {\n                count++;\n                best = scores[i];\n            }\n            if(scores[i] < worst) {\n                count++;\n                worst = scores[i];\n            }\n        }\n        \n        System.out.println(count);\n    }\n\n}\n"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\nline = raw_input()\nmax = -1\nmin = 10001\nwonder = 0\nfor v in line.split():\n    rating = int(v)\n    if rating > max:\n        max = rating\n        wonder = wonder + 1\n    if rating < min:\n        min = rating\n        wonder = wonder + 1\nprint wonder - 2"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class Contest {\n\tpublic static void main(String[] args) {\n\n\t\tScanner s = new Scanner(System.in);\n\t\tint n = s.nextInt();\n\n\t\tint[] arr = new int[n];\n\n\t\tint count = 0;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tarr[i] = s.nextInt();\n\t\t}\n\n\t\tint max=arr[0];\n\t\tint min=arr[0];\n\t\t\n\t\tfor(int i=0; i < n; i++) {\n\t\t\tif (arr[i] > max) {\n\t\t\t\tmax = arr[i];\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\t\n\t\t\tif(arr[i]<min) {\n\t\t\t\tmin=arr[i];\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\t\n\t\tSystem.out.println(count);\n\t}\n\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\ncount=0\nfor i in range(1,len(l)):\n    if(l[i]<min(l[:i]) or l[i]>max(l[:i])):\n        count+=1\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n =int(input())\nk = list(map(int, input().split()))\n\nz = list()\nc =list()\n\n\nfor i in range(1, len(k)):\n\n    c.append(k[i -1])\n    e = max(c)\n    d = min(c)\n\n    if k[i - 1] <k [i] and k[i] >e or k[i] <d:\n        if k[i] not in z:\n            z.append(k[i])\n\nif n ==1:\n    print(0)\nelse:\n    \n\n    print(len(z))\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.Scanner;\nimport java.util.StringTokenizer;\n\npublic class Main {public static void main(String[] args) throws Exception {new Solve();}}\n\nclass Solve { public Solve() throws Exception {solve();}\n\n    /*\n    2\n    R23C55\n    BC23\n\n    BC23\n    R23C55\n     */\n    void solve() throws Exception {\n        int n = NI();\n        int min, max;\n        min = max = NI();\n        int res = 0;\n        for (int i = 1; i < n; i++) {\n            int t = NI();\n            if (t < min || t > max) {\n                res++;\n                min = min(min, t);\n                max = max(max, t);\n            }\n        }\n        System.out.println(res);\n    }\n\n    class Cell {\n        int i;\n        boolean blocked;\n    }\n\n    static BufferedReader stdin = new BufferedReader(new InputStreamReader(System.in));\n    static StringTokenizer st = new StringTokenizer(\"\");\n    static Scanner sc = new Scanner(System.in);\n    int min(int i1,int i2){return i1<i2?i1:i2;}\n    long min(long i1,long i2){return i1<i2?i1:i2;}\n    int max(int i1,int i2){return i1>i2?i1:i2;}\n    long max(long i1,long i2){return i1>i2?i1:i2;}\n    String NS()throws Exception{while(!st.hasMoreTokens())st=new StringTokenizer(stdin.readLine());return st.nextToken();}\n    String NLn() throws Exception {return stdin.readLine();}\n    int NI()throws Exception{return Integer.parseInt(NS());}\n    long NL()throws Exception{return Long.parseLong(NS());}\n    double ND()throws Exception{return Double.parseDouble(NS());}\n    int abs(int x){return x<0?-x:x;}\n}"
        },
        {
            "language": 1,
            "solution": "#coding:utf-8\n\nimport sys\n\nn = int(sys.stdin.readline())\nps = [int(x) for x in sys.stdin.readline().split()]\np_min = ps[0]\np_max = ps[0]\nres = 0\nfor p in ps[1:]:\n  if p > p_max:\n    p_max = p\n    res += 1\n  elif p < p_min:\n    p_min = p\n    res += 1\nprint res\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\ns = input().split()\ns = [int(x) for x in s]\n\namazing = 0\nif n == 1:\n\tprint(0)\nelif n == 2:\n\tif s[1] > s[0] or s[1] < s[0]:\n\t\tprint(1)\n\telse:\n\t\tprint(0)\nelse:\n\n\tif s[1] > s[0] or s[1] < s[0]:\n\t\tamazing += 1\n\tfor i in range(2,n):\n\t\tif s[i] > max(s[:i]) or s[i] < min(s[:i]):\n\t\t\tamazing += 1\n\n\tprint(amazing)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = *map(int, input().split()),\nprint(sum(a[i] < min(a[:i]) or a[i] > max(a[:i]) for i in range(1, n)))\n"
        },
        {
            "language": 3,
            "solution": "\n\nn = int(input())\nscores = list(map(int, input().split()))\ncount = 0\nlow = scores[0]\nhigh = scores[0]\nfor i in range(1, n):\n    score = scores[i]\n    count += int(score < low)\n    low = min(low, score)\n    count += int(score > high)\n    high = max(high, score)\nprint (count)"
        },
        {
            "language": 3,
            "solution": "def solve(n, a):\n    mini = a[0]\n    maxi = a[0]\n    x = 0\n    for i in a[1:]:\n        if i < mini:  \n            x += 1\n            mini = min(mini, i)\n        elif i > maxi:\n            x += 1\n            maxi = max(maxi, i)\n    return x\n\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(solve(n, a))\n\n\nmain()\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\ns=l[0]\nr=l[0]\nq=0\nfor i in range(1,n):\n    if l[i]>s:\n        s=l[i]\n        q=q+1\n    elif l[i]<r:\n        r=l[i]\n        q=q+1\nprint(q)"
        },
        {
            "language": 1,
            "solution": "def main():\n    n = int(raw_input())\n    l = map(int, raw_input().split())\n    max_value = min_value = l[0]\n    amazing = 0\n    for i in range(1, n):\n        if l[i] > max_value or l[i] < min_value:\n            amazing += 1\n        max_value = max(max_value, l[i])\n        min_value = min(min_value, l[i])\n    return amazing\n\nprint main()\n"
        },
        {
            "language": 3,
            "solution": "a=int(input())\nb=list(map(int,input().split(\" \")))\nc=b[0]\nmax=c\nmin=c\ncount=0\nfor i in range(1,a):\n    if b[i]>max:\n        max=b[i]\n        count=count+1\n    elif b[i]<min:\n        min=b[i]\n        count=count+1\nprint(count)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int,input().split()))\nmaxval = minval = a[0]\ncount = 0\nfor i in a:\n    if i > maxval:\n        maxval = i\n        count += 1\n    elif i < minval:\n        minval = i\n        count += 1\nprint(count)"
        },
        {
            "language": 1,
            "solution": "import sys\ncontestN = int(sys.stdin.readline())\nscores = sys.stdin.readline().split()\nresult = 0\nmaxScore = int(scores[0])\nminScore = int(scores[0])\nfor i in range(1,contestN):\n    score = int(scores[i])\n    if(score > maxScore):\n        maxScore = score\n        result += 1\n    elif(score < minScore):\n        minScore = score\n        result += 1\nprint result"
        },
        {
            "language": 3,
            "solution": "input()\nnumbers = list(map(int, input().split()))\nsmall, big = numbers[0], numbers[0]\nc = 0\nfor number in numbers:\n  if number < small:\n    c+=1\n    small = number\n  elif number > big:\n    c+=1\n    big = number\n\nprint(c)"
        },
        {
            "language": 3,
            "solution": "a=int(input())\ns=input().split()\nn=0\nfor i in range(0,a):\n    s[i]=int(s[i])\nfor i in range(1,a):\n    if s[i]>max(s[0:i]) or s[i]<min(s[0:i]):\n        n+=1\nprint(n)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\n\nscores = list(map(int, input().split(' ')))\ncount= 0\nmin, max= scores[0], scores[0]\nfor i in scores:\n    if i>max:\n        count+=1\n        max=i\n    elif i<min:\n        count+=1\n        min=i\nprint(count)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint arr[1001];\nbool lessornot(int index, int low, int high) {\n  bool flag = true;\n  for (int i = 0; i <= index; i++) {\n    if (arr[i] < low || arr[i] > high)\n      flag = true;\n    else\n      flag = false;\n  }\n  return flag;\n}\nint main() {\n  int n, c = 0;\n  cin >> n;\n  for (int i = 0; i < n; i++) cin >> arr[i];\n  int max = arr[0], low = arr[0];\n  for (int i = 0; i < n; i++) {\n    if (i == n - 1) i++;\n    if (arr[i] > max) max = arr[i];\n    if (arr[i] < low) low = arr[i];\n    if (lessornot(i + 1, low, max)) c++;\n  }\n  cout << c << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  int max, min, ans = 0;\n  int f;\n  cin >> f;\n  max = f;\n  min = f;\n  for (int i = 0; i < n - 1; i++) {\n    int d;\n    cin >> d;\n    if (d > max) {\n      max = d;\n      ans++;\n    }\n    if (d < min) {\n      min = d;\n      ans++;\n    }\n  }\n  cout << ans;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\narr = [int(i) for i in input().split()]\nmin = max = arr[0]\ncnt = 0\nfor i in arr:\n    if max < i:\n        cnt += 1\n        max = i\n    if min > i:\n        cnt += 1\n        min = i\nprint(cnt)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nmini=a[0]\nmaxi=a[0]\nudiviteln=0\nfor i in range(1,n) :\n    if a[i]>maxi :\n        maxi=a[i]\n        udiviteln+=1\n    elif a[i]<mini :\n        mini=a[i]\n        udiviteln+=1\nprint(udiviteln)"
        },
        {
            "language": 3,
            "solution": "test = int(input())\ncontest = input()\namazing = 0\nallpoints = contest.split()\nfor i in range(0,test):\n    allpoints[i] = int(allpoints[i])\nmin_points = allpoints[0]\nmax_points = allpoints[0]\nfor i in range(1,test):\n    if allpoints[i] < min_points:\n        min_points = allpoints[i]\n        amazing += 1\n    elif allpoints[i] > max_points:\n        max_points = allpoints[i]\n        amazing += 1\nprint(amazing)\n"
        },
        {
            "language": 3,
            "solution": "def coder(n,nums):\n    if n == 1:\n        return 0\n    m = int(nums[0])\n    l = m\n    c = 0\n    for i in range(1, n):\n        if int(nums[i]) > m:\n            m = int(nums[i])\n            c += 1\n        elif int(nums[i]) < l:\n            l = int(nums[i])\n            c += 1\n    return c\nn=int(input())\nnums=[]\nnums=input().split()\nprint(coder(n,nums))\n"
        },
        {
            "language": 3,
            "solution": "n=int(input( ))\nsc=[int(i) for i in input( ).split( )]\nif len(sc)==1:\n    print(0)\n    exit( )\nelse:\n    b=0\n    s=0\n    ma=0\n    mi=0\n    for i in range(1,n):\n        if sc[i]!=sc[0]:\n            b=i\n            s+=1\n            ma=max(sc[i],sc[0])\n            mi=min(sc[i],sc[0])\n            break\n    if s==0:\n        print(0)\n        exit( )\n    for i in range(b+1,n):\n        if sc[i]>ma:\n            s+=1\n            ma=sc[i]\n        elif sc[i]<mi:\n            s+=1\n            mi=sc[i]\n            \n    print(s)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nli = input().split()\nma = int(li[0])\nmi = int(li[0])\na = int(0)\nfor l in li[1:]:\n    if int(l) > ma:\n        a += 1\n        ma = int(l)\n    if int(l) < mi:\n        a += 1\n        mi = int(l)\nprint(a)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nr=list(map(int,input().split()))\nmi=ma=r[0]\nt=0\nfor i in range(1,n):\n\tif r[i]<mi:\n\t\tt+=1\n\t\tmi=r[i]\n\tif r[i]>ma:\n\t\tt+=1\n\t\tma=r[i]\nprint(t)\n"
        },
        {
            "language": 1,
            "solution": "t=input()\namazing=0\nl=map(int,raw_input().split())\nmaxi,mini=l[0],l[0]\nfor element in l:\n    if element>maxi:\n        maxi=element\n        amazing+=1\n    elif element<mini:\n        mini=element\n        amazing+=1    \nprint amazing        "
        },
        {
            "language": 3,
            "solution": "n, a = int(input() ), list(map(int, input().split() ) )\nmx = mn = a[0]\nr = 0\nfor i in range(1, n):\n    if a[i] > mx:\n        mx = a[i]; r += 1\n    elif a[i] < mn:\n        mn = a[i]; r += 1\nprint(r)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\narr=list(map(int,input().split()))\nmini=arr[0]\nmaxi=arr[0]\nans=0\nfor i in arr[1:]:\n\tif i<mini:\n\t\tans+=1\n\t\tmini=i\n\telif i>maxi:\n\t\tans+=1\n\t\tmaxi=i\nprint(ans)\n"
        },
        {
            "language": 3,
            "solution": "\n\ndef calc(n, nums):\n    if not nums:\n        return 0\n    c, mini, maxi = 0, nums[0], nums[0]\n    for i in range(1, n):\n        if nums[i] < mini:\n            mini = nums[i]\n            c+=1\n        elif nums[i] > maxi:\n            maxi = nums[i]\n            c+= 1\n    return c\n\n\n# get inputs\nn = int(input())\nnums = list(map(int, input().split()))\nprint(calc(n, nums))\n\n\n\n\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedOutputStream;\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.lang.reflect.Array;\nimport java.security.acl.LastOwnerException;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.HashMap;\nimport java.util.StringTokenizer;\nimport java.util.*;\n\npublic class Main {\n\n  public static PrintWriter out = new PrintWriter(new BufferedOutputStream(System.out));\n\n  static class FastReader {\n\n    BufferedReader br;\n    StringTokenizer st;\n\n    public FastReader() {\n      br = new BufferedReader(new\n          InputStreamReader(System.in));\n    }\n\n    String next() {\n      while (st == null || !st.hasMoreElements()) {\n        try {\n          st = new StringTokenizer(br.readLine());\n        } catch (IOException e) {\n          e.printStackTrace();\n        }\n      }\n      return st.nextToken();\n    }\n\n    int nextInt() {\n      return Integer.parseInt(next());\n    }\n\n    long nextLong() {\n      return Long.parseLong(next());\n    }\n\n    double nextDouble() {\n      return Double.parseDouble(next());\n    }\n\n    String[] nextSArray() {\n      String sr[] = null;\n      try {\n        sr = br.readLine().trim().split(\" \");\n      } catch (IOException e) {\n        e.printStackTrace();\n      }\n      return sr;\n    }\n\n    String nextLine() {\n      String str = \"\";\n      try {\n        str = br.readLine();\n      } catch (IOException e) {\n        e.printStackTrace();\n      }\n\n      return str;\n    }\n  }\n  //static  ArrayList<Integer>al=new ArrayList<>()\n\n// out.println(al.toString().replaceAll(\"[\\\\[|\\\\]|,]\",\"\"));\n\tpublic static void main(String[] args) throws Exception{\n        FastReader sc=new FastReader();\n        int n=sc.nextInt();\n        int max=sc.nextInt(),min=max,count=0;\n        for(int i=1;i<n;i++){\n          int x=sc.nextInt();\n          if(x>max){\n            max=x;\n            count++;\n          }\n          if(x<min){\n            min=x;\n            count++;\n          }\n        }\n        out.print(count);\n        out.close();\n      }\n}"
        },
        {
            "language": 3,
            "solution": "\nn = int(input())\na = input().split()\nevent = []\ncount = 0\nfor i in range(n):\n    if len(event) == 0:\n        event.append(int(a[i]))\n    elif len(event) == 1:\n        if int(a[i]) != int(a[i - 1]):\n            event.append(int(a[i]))\n            count += 1\n    else:\n        if int(a[i]) < min(event):\n            event.remove(min(event))\n            event.append(int(a[i]))\n            count += 1\n        elif int(a[i]) > max(event):\n            event.remove(max(event))\n            event.append(int(a[i]))\n            count += 1\nprint(count)\n\n\n\n\n\n\n\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\ns=input().split()\nmi=ma=int(s[0])\nc=0\nfor i in range(1,n):\n\tif(mi>int(s[i])):\n\t\tmi=int(s[i])\n\t\tc+=1\n\tif(ma<int(s[i])):\n\t\tma=int(s[i])\n\t\tc+=1\nprint(c)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nm=list(map(int,input().split()))\nmax=m[0]\nmin=m[0]\ncount1=0\ncount2=0\nfor i in range(1,n):\n    if(m[i]<min):\n        min=m[i]\n        count1=count1+1\n    elif(m[i]>max):\n        max=m[i]\n        count2=count2+1\n    else:\n        continue\ncount=count1+count2\nprint(count)\n        "
        },
        {
            "language": 3,
            "solution": "n = int(input().strip())\ns = input().strip()\nl = list(int(x) for x in s.split(' '))\n\nmn = l[0]\nmx = l[0]\nc = 0\n\nfor i in range(1, n):\n\tif l[i] > mx:\n\t\tc += 1\n\t\tmx = l[i]\n\telif l[i] < mn:\n\t\tc += 1\n\t\tmn = l[i]\n\nprint(c)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\ncount=0\nx=list(map(int,input().split()))\nmx=x[0]\nfor i in range(n):\n    if x[i]>mx:\n        x[i],mx=mx,x[i]\n        count=count+1\nmm=x[0]\nfor i in range(n):\n    if x[i]<mm:\n        x[i],mm=mm,x[i]\n        count=count+1\nprint(count)"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\na = list(map(int,raw_input().split()))\nbest = a[0]\nworst = a[0]\nq = 0\nfor i in a[1:]:\n\tif i > best:\n\t\tq += 1\n\t\tbest = i\n\tif i < worst:\n\t\tq += 1\n\t\tworst = i\nprint q\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[1005];\nint main() {\n  int n;\n  scanf(\"%d\", &n);\n  for (int i = 0; i < n; ++i) scanf(\"%d\", &a[i]);\n  int mn = a[0], mx = a[0], sol = 0;\n  for (int i = 1; i < n; ++i) {\n    if (a[i] < mn || a[i] > mx) ++sol;\n    mx = max(mx, a[i]);\n    mn = min(mn, a[i]);\n  }\n  printf(\"%d\\n\", sol);\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\n\npublic class ILoveUsername {\n\n\t/**\n\t * @param args\n\t */\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\n\t\tint n;\n\t\tint[] a;\n\t\tint min=0;\n\t\tint max=0;\n\t\tint result=0;\n\t\t\t\n\t\tScanner sc = new Scanner(System.in);\n\t\tn = sc.nextInt();\n\t\ta = new int[n];\n\t\tfor(int i=0 ; i<n ; i++){\n\t\t\ta[i] = sc.nextInt();\n\t\t\tif(i==0){\n\t\t\t\tmin=max=a[0];\n\t\t\t}else{\n\t\t\t\tif(a[i]>max){\n\t\t\t\t\tmax=a[i];\n\t\t\t\t\tresult++;\n\t\t\t\t}\n\t\t\t\tif(a[i]<min){\n\t\t\t\t\tmin=a[i];\n\t\t\t\t\tresult++;\n\t\t\t\t}\t\n\t\t\t}\n\t\t}\n\t\tSystem.out.print(result);\n\t}\n\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\npoint=[int(x) for x in input().split()]\nma=point[0]\nmi=point[0]\na=0\nfor i in range (1,n):\n    if point[i]>ma:\n        a+=1\n        ma=point[i]\n    elif point[i]<mi:\n        a+=1\n        mi=point[i]\nprint(a)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int, input().split()))\n\nhigh = l[0]\nlow=l[0]\n\ncount=0\n\nfor i in range(1,n):\n    if l[i]>high:\n        count+=1\n        high=l[i]\n\n    elif l[i]<low:\n        count+=1\n        low = l[i]\n\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\narr = list(map(int,input().split()))\n\nminn = arr[0]\nmaxx = arr[0]\ncount = 0\nfor i in range(1, n):\n\tif arr[i] > maxx:\n\t\tmaxx = arr[i]\n\t\tcount += 1\n\tif arr[i] < minn:\n\t\tminn = arr[i]\n\t\tcount += 1\n\n\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = [int(i) for i in input().split()]\nx, y, res = a[0], a[0], 0\nfor i in range(1, n):\n\t# print(a[i], x, y)\n\tif a[i] < x:\n\t\t# print(i)\n\t\tres += 1\n\t\tx = a[i]\n\t\n\tif a[i] > y:\n\t\t# print(i)\n\t\tres += 1\n\t\ty = a[i]\n\t\t\nprint(res)"
        },
        {
            "language": 3,
            "solution": "N = int(input())\nline = [int(k) for k in input().split(' ')]\nmax = line[0]\nmin = line[0]\nsum = 0\nfor i in range(1,N):\n\tif line[i]> max:\n\t\tmax = line[i]\n\t\tsum = sum + 1\n\tif line[i] < min:\n\t\tmin = line[i]\n\t\tsum = sum + 1\nprint(sum)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nscores=[int(x) for x in input().split()]\ncount_amazing=0\ni=1\nwhile i<=n-1:\n    if scores[i]>max(scores[0:i]) or scores[i]<min(scores[0:i]):\n        count_amazing+=1\n    else:\n        count_amazing=count_amazing\n    i+=1\nprint(count_amazing)\n"
        },
        {
            "language": 3,
            "solution": "import sys\n\n#sys.stdin  = open(\"in.txt\",\"r\")\n#sys.stdout = open(\"out.txt\",\"w\")\n\nn = int(input())\npoints = []\npoint = map(int,input().split())\n\nfor p in point:\n    points.append(p)\n\nmax_point = points[0]\nmin_point = points[0]\namazing = 0\n\nfor i in range(1,n):\n    if(points[i]>max_point):\n        amazing+=1\n        max_point = points[i]\n\n    elif(points[i]<min_point):\n        amazing+=1\n        min_point = points[i]\n\nprint(amazing)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, points[1000], c = 0, max1, min1;\n  cin >> n;\n  for (int i = 0; i < n; i++) cin >> points[i];\n  max1 = points[0];\n  min1 = points[0];\n  for (int j = 1; j < n; j++) {\n    if (points[j] > max1) {\n      max1 = points[j];\n      c++;\n    }\n    if (points[j] < min1) {\n      min1 = points[j];\n      c++;\n    }\n  }\n  cout << c;\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\n\nx = map(int,raw_input().split())\n\ntot=0\nminn=x[0]\nmaxx=x[0]\n\nfor i in range(1,len(x)):\n\tif(x[i]<minn):\n\t\ttot+=1\n\t\tminn=x[i]\n\telif(x[i]>maxx):\n\t\ttot+=1\n\t\tmaxx=x[i]\n\nprint tot"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.math.MathContext;\nimport java.util.*;\n\npublic class Main {\n\n    FastScanner in;\n    PrintWriter out;\n\n    class FastScanner {\n        BufferedReader reader;\n        StringTokenizer tokenizer;\n\n        FastScanner() throws IOException {\n            reader = new BufferedReader(new InputStreamReader(System.in));\n        }\n\n        String next() throws IOException {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                String line = reader.readLine();\n                if (line == null) {\n                    throw new EOFException();\n                }\n                tokenizer = new StringTokenizer(line);\n            }\n            return tokenizer.nextToken();\n        }\n\n        int nextInt() throws IOException {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() throws IOException{\n            return Long.parseLong(next());\n        }\n    }\n\n\n    public static void main(String[] args) throws IOException {\n        new Main().run();\n    }\n\n    void run() throws IOException{\n        in =new FastScanner();\n        out = new PrintWriter(new OutputStreamWriter(System.out));\n        solve();\n        out.flush();\n    }\n\n    void solve() throws IOException {\n        int n=in.nextInt(), surprise=0, max, min, res;\n        max=min=in.nextInt();\n        for (int i=1; i<n; i++){\n            res=in.nextInt();\n            if (res>max){\n                max=res;\n                surprise++;\n            } else\n            if (res<min){\n                min=res;\n                surprise++;\n            }\n        }\n        out.print(surprise);\n    }\n\n\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\ns = input().split()\n\na=int(s[0])\nb=int(s[0])\nz=0\nfor i in range(1,n):\n    if int(s[i])>a:\n        a=int(s[i])\n        z=z+1\n    if int(s[i])<b:\n        b=int(s[i])\n        z=z+1\nprint(z)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main(void) {\n  int n, best, worst, d, ans = 0;\n  cin >> n;\n  cin >> d;\n  best = d;\n  worst = d;\n  for (int i = 1; i < n; i++) {\n    cin >> d;\n    if (d > best) {\n      best = d;\n      ans++;\n    }\n    if (d < worst) {\n      worst = d;\n      ans++;\n    }\n  }\n  cout << ans;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\nmx,mn = a[0],a[0]\nans=0\nfor i in range(1,n):\n    if a[i]>mx:\n        mx = a[i]\n        ans+=1\n    elif a[i]<mn:\n        mn=a[i]\n        ans+=1\nprint(ans)"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\ns = map(int, raw_input().split())\n\nmin = s[0]\nmax = s[0]\nst = 0\n\nfor i in range(1, len(s)):\n\tif s[i] > max:\n\t\tst += 1\n\t\tmax = s[i]\n\tif s[i] < min:\n\t\tst += 1\n\t\tmin = s[i]\nprint st"
        },
        {
            "language": 3,
            "solution": "n = int(input())\npts =input().split()\n\nmx = int(pts[0])\nmi = int(pts[0])\ncount = 0\n\nfor i in range(len(pts)):\n    if int(pts[i]) > mx:\n        mx = int(pts[i])\n        count = count + 1\n    if int(pts[i]) < mi:\n        mi = int(pts[i])\n        count = count + 1\n\nprint(count)\n"
        },
        {
            "language": 3,
            "solution": "T=int(input())\nlst=list(map(int,input().split()))[:T]\nx=[]\nx.append(lst[0])\ncount=0\nmaxx=lst[0]\nminn=lst[0]\nfor i in range(len(lst)):\n    if lst[i]>maxx:\n        count+=1\n        maxx=lst[i]\n    if lst[i]<minn:\n        count+=1\n        minn=lst[i]\nprint(count)        "
        },
        {
            "language": 3,
            "solution": "a=int(input())\na=list(map(int, input().split()))\nmini=a[0]\nmaxi=a[0]\nres=0\nfor i in range(len(a)):\n    b=a[i]\n    if i!=0:\n        if b<mini:\n            res+=1\n            mini=b\n        elif b>maxi:\n            res+=1\n            maxi=b\nprint(res)\n"
        },
        {
            "language": 3,
            "solution": "int(input())\nb=[int(i) for i in input().split()]\nmin=b[0]\nmax=b[0]\ncount=0\nfor i in range(1,len(b)):\n    if(b[i]>max):\n        max=b[i]\n        count+=1\n    if(b[i]<min):\n        min=b[i]\n        count+=1\nprint(count)\n    \n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\n\nma = a[0]\nmi = a[0]\nc=0\nfor i in range(1,n):\n    if a[i] > ma:\n        ma = a[i]\n        c+=1\n    \n    if a[i] < mi:\n        mi = a[i]\n        c+=1\n    \nprint(c)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nslist = list(map(int,input().split()))\nmax=slist[0]\nmin=slist[0]\ncount=0\nfor i in slist:\n    if i<min:\n        count+=1\n        min=i\n    else:\n        if i>max:\n            count+=1\n            max=i\n        else:\n            continue\nprint(count)"
        },
        {
            "language": 1,
            "solution": "n = input()\nl = map(int,raw_input().split())\nmaximum = l[0]\nminimum = l[0]\namazing = 0\nfor i in range(1,n):\n    if l[i]>maximum:\n        amazing += 1\n        maximum = l[i]\n    elif l[i]<minimum:\n        amazing += 1\n        minimum = l[i]\nprint amazing\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.stream.Stream;\n\n/*\n * To change this license header, choose License Headers in Project Properties.\n * To change this template file, choose Tools | Templates\n * and open the template in the editor.\n */\n\n/**\n *\n * @author Naufal Andika\n */\npublic class ILoveUsername {\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        int i, t, max, min, amazing = 0;\n        String[] in;\n        int[] score;\n        t = Integer.parseInt(br.readLine());\n        in = br.readLine().split(\" \");\n        score = Stream.of(in).mapToInt(Integer::parseInt).toArray();\n        max = min = score[0];\n        for(i = 1; i < t; i++){\n            if(score[i] > max){\n                max = score[i];\n                amazing++;\n            } else if(score[i] < min){\n                min = score[i];\n                amazing++;\n            }\n        }\n        System.out.println(amazing);\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "def count_amazing():\n    n = int(input())\n    lst = [int(x) for x in input().split()]\n    max_, min_ = lst[0], lst[0]\n    num_amazing = 0\n    for i in range(n):\n        if lst[i] > max_:\n            num_amazing += 1\n            max_ = lst[i]\n        if lst[i] < min_:\n            num_amazing += 1\n            min_ = lst[i]\n    return num_amazing\n\nif __name__ == '__main__':\n    print(count_amazing())"
        },
        {
            "language": 3,
            "solution": "n = int(input())\ns=list(map(int,input().split()))\nc=0\nfor i in range(1,n):\n    if (s[i]>max(s[0:i])) or (s[i] < min(s[0:i])):\n        c=c+1\nprint(c)"
        },
        {
            "language": 3,
            "solution": "def list_input(): return list(map(int, input().split()))\n\n\ndef multiple_input(): return map(int, input().split())\n\n\nn = int(input())\na = list_input()\nans = 0\nm1, m2 = a[0], a[0]\nfor i in range(1, n):\n    if a[i] > m1:\n        ans += 1\n        m1 = a[i]\n    elif a[i] < m2:\n        ans += 1\n        m2 = a[i]\nprint(ans)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\narr=list(map(int,input().split()))\nminim=arr[0]\nmaxim=arr[0]\nans=0\nfor i in range(1,n):\n    if arr[i]>maxim:\n        ans+=1\n        maxim=arr[i]\n    elif arr[i]<minim:\n        ans+=1\n        minim=arr[i]\nprint(ans)"
        },
        {
            "language": 3,
            "solution": "numbs = int(input())\nscores = str(input())\nscores = scores.split(\" \")\nfor n in range(numbs):\n    scores[n]=int(scores[n])\nk = 0\nm = 1\nmini = 0\nmaxi = 0\nmini = scores[0]\nmaxi = scores[0]\nwhile m < numbs:\n    if scores[m]>maxi:\n        k+=1\n        maxi = scores[m]\n    if scores[m]<mini:\n        k+=1\n        mini = scores[m]\n    m+=1\nprint(k)\n"
        },
        {
            "language": 1,
            "solution": "n = input()\n\nlist1 = map(int, raw_input().split(' '))\n\nmin=0\nmax=0\ni=1\nx=0\n\nwhile i<n:\n    if list1[i] > list1[max]:\n        max=i\n        x+=1\n    elif list1[i]<list1[min]:\n        min=i\n        x+=1\n    i+=1\nprint x\n"
        },
        {
            "language": 3,
            "solution": "import math\nn = int(input())\na = list(map(int,input().split(\" \")))\nmi = a[0]\nma = a[0]\ncount = 0\nfor ele in a:\n    if ele>ma:\n        count+=1\n        ma = ele\n    if ele<mi:\n        count+=1\n        mi = ele\nprint(count)\n\n\n\n"
        },
        {
            "language": 1,
            "solution": "#!/usr/bin/env python\n\n# Created\n#       by zaquest\n#       on 01.03.2012\n\n\nclass Counter(object):\n\n    def __init__(self, first_result):\n        self.max = self.min = first_result\n        self._unusual = 0\n\n    def stat(self, result):\n        if result > self.max:\n            self._unusual += 1\n            self.max = result\n        elif result < self.min:\n            self._unusual += 1\n            self.min = result\n\n    def unusual(self):\n        return self._unusual\n\n\ndef main():\n    input()\n    results = raw_input()\n    results = results.split(\" \")\n    counter = Counter(int(results[0]))\n    for result in results[1:]:\n        counter.stat(int(result))\n    print(counter.unusual())\n\n\nif __name__ == \"__main__\":\n    main()\n"
        },
        {
            "language": 1,
            "solution": "n = input()\na = map(int , raw_input().split())\nmax = a[0]\nmin = a[0]\nans = 0\nfor i in range(n) :\n    if a[i] > max or a[i] < min : ans += 1\n    if a[i] > max : max = a[i]\n    if a[i] < min : min = a[i]\nprint ans\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nlst=list(map(int,input().split()))\nminn=lst[0]\nmaxx=lst[0]\ncount=0\nfor i in range(1,n):\n    if lst[i]>maxx:\n        count+=1\n        maxx=lst[i]\n    if lst[i]<minn:\n        count+=1\n        minn=lst[i]\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nc=list(map(int,input().strip().split()))\ncount=0\nx=[]\nx.append(c[0])\nfor i in range(1,n):\n    if(c[i]>max(x)):\n        count=count+1\n        x.append(c[i])\n    elif(c[i]<min(x)):\n        count=count+1\n        x.append(c[i])\n    else:\n        count=count\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nc = 0\nscores = list(map(int,input().split()))\nfor i in range(1,n):\n    sch=0\n    scl=0\n    for a in range(0,i):\n        if scores[i]>scores[a]:\n            sch+=1\n        elif scores[i]<scores[a]:\n            scl+=1\n    if sch == i or scl == i :\n        c+=1\nprint(c)"
        },
        {
            "language": 3,
            "solution": "sutazi = int(input())\nsutaze = list(map(int, input().split()))\n\namazing = 0\nmini = sutaze[0]\nmaxi = sutaze[0]\nfor sutaz in sutaze:\n    if sutaz > maxi:\n        amazing += 1\n        maxi = sutaz\n    if sutaz < mini:\n        amazing += 1\n        mini = sutaz\n\nprint(amazing)\n"
        },
        {
            "language": 1,
            "solution": "n=input()\nd=[int(z) for z in raw_input().split(' ')]\ncount=0\nmin= d[0]\nmax= d[0]\n\nfor i in range(1,n):\n\tif d[i]>max:\n\t\tmax=d[i]\n\t\tcount+=1\n\telif d[i]<min:\n\t\tmin=d[i]\n\t\tcount+=1\n\telse:\n\t\tpass\nprint count\n"
        },
        {
            "language": 3,
            "solution": "input()\ns=list(map(int,input().split()))\nma=s[0]\nmi=s[0]\nt=0\nfor i in s:\n    if i>ma:\n        ma=i\n        t+=1\n    if i<mi:\n        mi=i\n        t+=1\nprint(t)"
        },
        {
            "language": 3,
            "solution": "n = int(input())  \na = list(map(int,input().strip().split()))[:n] \nmx = 0\nmn = 10000\ncnt = 0\n\nfor i in range(0,n):\n    x = a[i]\n    if(x>mx):\n        mx = x\n        if i>0:\n            cnt = cnt + 1\n            #print(mx)\n    if(mn>x):\n        mn = x;\n        if i>0:\n            cnt = cnt + 1\n            #print(mn)\nprint(cnt) \n"
        },
        {
            "language": 3,
            "solution": "i=input\ni()\nm, *s=map(int,i().split())\nn=m\nx=0\nfor c in s:\n\tif c>m:\n\t\tx+=1\n\t\tm=c\n\tif c<n:\n\t\tx+=1\n\t\tn=c\nprint(x)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nm = list(map(int,input().split()))\n\nl = []\ncount = 0\n\nl.append(m[0])\nfor i in range(1,n):\n    if (max(l) < m[i] or min(l) > m[i]):\n        l.append(m[i])\n        count += 1\n\nprint(count)\n"
        },
        {
            "language": 1,
            "solution": "n=input()\na=map(int,raw_input().split())\ncnt=0\nmaxi=mini=a[0]\nfor i in range(n):\n    if mini>a[i]:\n        cnt+=1\n        mini=a[i]\n    elif a[i]>maxi:\n        cnt+=1\n        maxi=a[i]\nprint cnt\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\ns = list(map(int, input().split()))\nmin = s[0]\nmax = s[0]\nk = 0\nfor i in range(1,n):\n    if s[i] > max:\n        k += 1\n        max = s[i]\n    if s[i] < min:\n        k += 1\n        min = s[i]\nprint(k)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\narr = list(map(int,input().split()))\nc = 0\nmin=arr[0]\nmax=arr[0]\nfor i in range(len(arr)):\n    if arr[i] > max:\n        max=arr[i]\n        c += 1\n    if arr[i] < min :\n        min = arr[i]\n        c += 1\n\nprint(c)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nli=list(map(int,input().split()))\nmax,min,c=li[0],li[0],0\nfor i in li:\n    if i>max:\n        c=c+1\n        max=i\n    elif i<min:\n        c=c+1\n        min=i\n    else:\n        continue\nprint(c)        "
        },
        {
            "language": 3,
            "solution": "n = int(input())\npoints = list(map(int,input().split()))\n\nlarge = points[0]\nsmall = points[0]\namazing = 0\nfor i in range(1,n):\n    if points[i] > large:\n        amazing+=1\n        large = points[i]\n    elif points[i] < small:\n        amazing+=1\n        small = points[i]\nprint(amazing)"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\npts = map(int, raw_input().split())\ncount = 0\nfor i in xrange(1,n):\n if(pts[i] > max(pts[:i])):count += 1\n elif(pts[i] < min(pts[:i])): count += 1\n \nprint count"
        },
        {
            "language": 3,
            "solution": "n=int(input())\narr=list(map(int,input().split()))\nmaxi=arr[0]\nmini=arr[0]\ncnt=0\nfor i in range(1,n):\n    if(arr[i] > maxi):\n        maxi = arr[i]\n        cnt += 1\n    elif(arr[i] < mini):\n        mini = arr[i]\n        cnt += 1\nprint(cnt)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\np = [int(i) for i in input().split()]\nmax = p[0]\nmin = p[0]\ns = 0\nfor i in range(1,n):\n    if p[i] > max:\n        max = p[i]\n        s += 1\n    elif p[i] < min:\n        min = p[i]\n        s += 1\nprint(s)\n"
        },
        {
            "language": 4,
            "solution": "\n\nimport java.io.PrintWriter;\n\nimport java.util.*;\nimport java.util.Arrays ; \nimport java .lang.String.* ;\nimport java .lang.StringBuilder ;\n\n\npublic class Test{\n    static int pos = 0 ; \n    static int  arr[] ; \n  static LinkedList l1 = new  LinkedList() ; \nstatic void find(int p ,char[]x,int put[],String s){\n    int c= 0 ; \n    for (int i = 0; i < s.length(); i++) {\n        if(x[p]==s.charAt(i)){\n        c++ ; }\n    }\n    put[p] = c ;  \n}\nstatic int mode(int m ,int[]x ){\n    int temp = 0 ; \n    for (int i = x.length-1; i >=0; i--) {\n        if(x[i]<=m){\n            temp= x[i] ; \n           /// break ; \n             return m-temp ; \n             \n        }\n    }\n     return m-temp ; \n}\nstatic int mode2(int m ,int[]x ){\n    int temp = 0 ; \n    \n    for (int i = x.length-1; i >=0; i--) {\n        if(x[i]<=m){\n            temp= x[i] ; \n           /// break ; \n             return x[i] ; \n             \n        }\n    }\n     return 0 ; \n}\nstatic int find(int x[],int temp){\n    int j = 0 ; \n    for (int i = x.length-1; i >=0; i--) {\n        if(x[i]==temp) return j+1 ; \n        j++ ; \n    }\n    return -1 ; \n}\nstatic String ch(long[]x,long b){\n    for (int i = 0; i < x.length; i++) {\n        if(x[i]==b)return \"YES\" ;\n    }\n    return \"NO\" ; \n}\nstatic int pis(String s,char k ){\n  \n    for (int i = 0; i < s.length(); i++) {\n        if(k==s.charAt(i) ) {\n            return i ;\n        } \n    }\n   \n    return -1 ; \n    \n}\nstatic  int fin(String s){\n   int count = 0 ; \n    for (int i = 0; i < s.length(); i++) {\n       if(s.charAt(i)>=65&&s.charAt(i)<=90) count++ ; \n    }\n   return count ; \n}\nstatic boolean config(int[]x ){\n    for (int i = 0; i < x.length; i++) {\n        if(x[i]==0) return false ;\n    }\n    return true  ; \n}\nstatic long count(long i ){\n    if(i%2==0){\n        return i ; \n    }else return i+count(i-1) ;  \n}\nstatic boolean ce(int [][]x){\n    for (int i = 0; i < x.length; i++) {\n        if(x[i][0]!=x[i][1]) return true ; \n    }\n    \n    return false ;\n}\nstatic boolean c(int[][]x,int[]y){\n    int j=y.length-1 ; \n    for (int i = 0; i < x.length; i++) {\n        if(x[i][1]!=y[j]) return true;\n        j-- ;\n    }\n    return false  ; \n}\nstatic long gcd(long a , long b){\n    if(b==0) return a ; \n    else return gcd(b,a%b) ; \n    \n}\nstatic boolean prime(int n,int y){\n    int count =0 ; \n    for (int i = 2; i <= Math.max(n, y); i++) {\n        if(n%i==0&&y%i==0)count++ ; \n    }\n    if(count>0) return false ;\n    \n    return true ;\n}\nstatic int getbig(int []x,int r){\n    for (int i = 0; i < x.length; i++) {\n        if(x[i]==r) return i ;\n    }\n    return -1 ; \n}\nstatic int getsmaal(int []x,int r){\n    for (int i = x.length-1; i >= 0; i--) {\n        if(x[i]==r) return i ;\n    }\n    return -1 ; \n}\n\n    public static void main(String[] args)  {\n\n        Scanner in = new Scanner(System.in) ;\n        PrintWriter pw = new PrintWriter(System.out);   \n        long n = in.nextLong();\n        long sum = 0 ; \n        long small =0, big=0 ; \n        long last ; \n        for (int i = 0; i < n; i++) {\n            int num = in.nextInt() ; \n            if(i==0){\n                big=num ;  small=num ; \n                continue ;\n            }\n            if(num>big){\n                sum++ ; \n                big=num ; \n             //   System.out.println(i);\n            }\n            if(num<small){\n                sum++ ; \n                small=num ;\n                //System.out.println(i);\n            }\n       // last=num ; \n        }\n       pw.println(sum);\n                pw.close();\n    }\n}\n\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class A155{\n\tpublic static void main(String args[]) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint times = sc.nextInt() - 1;\n\t\tint best = sc.nextInt();\n\t\tint worst = best;\n\t\tint amazing = 0;\n\t\tfor(int i = 0; i < times; i++) {\n\t\t\tint point = sc.nextInt();\n\t\t\tif(point > best ){\n\t\t\t\tamazing++;\n\t\t\t\tbest = point;\n\t\t\t} else if(point < worst){\n\t\t\t\tworst = point;\n\t\t\t\tamazing++;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(amazing);\n\n\t}\n}"
        },
        {
            "language": 1,
            "solution": "import sys\nn = raw_input()\nc = raw_input()\n\nlo = [int(i) for i in c.split()]\nl = lo[1:]\n\nlowr = lo[0]\nhighr = lo[0]\namazn = 0\n\nfor i in l:\n\tif i > highr:\n\t\thighr = i\n\t\tamazn += 1\n\tif i < lowr:\n\t\tlowr = i\n\t\tamazn +=1\n\nsys.stdout.write(str(amazn))\n\n    \t \t \t \t\t\t\t\t\t\t\t\t\t\t\t\t   \t"
        },
        {
            "language": 3,
            "solution": "a=int(input())\nn=list(map(int,input().split()))\nm=n[:1]\nfor i in n:\n    a-=min(m)<=i<=max(m)\n    m+=[i]\nprint(a)"
        },
        {
            "language": 3,
            "solution": "import sys\n\nn = int(sys.stdin.readline())\ninp = str(sys.stdin.readline())[:-1].split(' ')\nans = 0\nmx = int(inp[0])\nmn = mx\nfor i in range(1,n):\n    a = int(inp[i])\n    #print(mx,mn,a)\n    if a>mx:\n        mx = a\n        ans = ans+1\n    elif a<mn:\n        mn = a\n        ans = ans+1\nprint(ans)\n"
        },
        {
            "language": 3,
            "solution": "def solve(scores):\n    smallest = largest = scores[0]\n    amazing = 0\n    for score in scores[1:]:\n        if(score < smallest):\n            smallest = score\n            amazing+=1\n        if(score > largest):\n            largest = score\n            amazing+=1\n    return amazing\n\nif __name__ == \"__main__\":\n\n    n = int(input())\n    scores = list(map(int,input().split(\" \")))\n    print (solve(scores))"
        },
        {
            "language": 3,
            "solution": "n = int(input())\np = list(map(int, input().split()))\nscore = 0\nhi = p[0]\nlo = p[0]\np.pop(0)\nfor perf in p:\n    if perf < lo:\n        score += 1\n        lo = perf\n    elif perf > hi:\n        score +=1\n        hi = perf\n\nprint(score)"
        },
        {
            "language": 3,
            "solution": "n=input()\ns=input().split()\nls=list()\nls=s\nfor i in range(len(ls)):\n    ls[i]=(int)(ls[i])\n \nc=0\n\nfor i in range(1,len(ls)):\n    if(max(ls[:i])< ls[i] or min(ls[:i]) >ls[i]):\n        c+=1\nprint(c)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nmax1=a[0]\nmin1=a[0]\ncmax=0\ncmin=0\nfor i in range(1,len(a)):\n    if(a[i]>max1):\n        cmax=cmax+1\n        max1=a[i]\n    else:\n        if(a[i]<min1):\n            cmin=cmin+1\n            min1=a[i]\nprint(cmax+cmin)\n"
        },
        {
            "language": 3,
            "solution": "# -*- coding: utf-8 -*-\n\nn = int(input())\n\narr = list(map(int,input().split()))\n\nma = arr[0]\nmi = arr[0]\namaz = 0\nfor i in range(n):\n    if arr[i]> ma:\n        ma = arr[i]\n        amaz += 1\n    elif arr[i] < mi:\n        mi = arr[i]\n        amaz += 1\n        \nprint(amaz)        "
        },
        {
            "language": 3,
            "solution": "n = int(input())\nli = list(map(int,input().split()))\nmin = li[0]\nmax = li[0]\ncount = 0\nfor i in range(1,n):\n    if li[i] < min:\n        count+=1\n        min = li[i]\n    elif li[i] > max:\n        count+=1\n        max = li[i]\nprint(count)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\np = list(map(int, input().split()))\nif n == 1:\n    print(0)\nelse:\n    d = max(p[0], p[1])\n    x = min(p[0], p[1])\n    if d == x:\n        s = 0\n    else:\n        s = 1\n    for i in range(2, n):\n        if p[i] > d:\n            d = p[i]\n            s += 1\n        elif p[i] < x:\n            x = p[i]\n            s += 1\n    print(s)\n"
        },
        {
            "language": 4,
            "solution": "// package twins;\n\nimport java.util.*;\n\npublic class Twins {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int cont = 0, menor = 0, mayor = 0;\n        int op = sc.nextInt();\n        int[] vector = new int[op];\n        for (int i = 0; i < op; i++) {\n            vector[i] = sc.nextInt();\n        }\n        mayor = vector[0];\n        menor = vector[0];\n        for (int i = 1; i < op; i++) {\n            if (menor > vector[i]) {\n                cont++;\n                menor = vector[i];\n            }\n            if (vector[i] > mayor) {\n                cont++;\n                mayor = vector[i];\n            }\n        }\n\n        System.out.println(cont);\n\n    }\n\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nMax=l[0]\nMin=l[0]\nc=0\nfor i in range(1,n):\n    if(l[i]>Max):\n        Max=l[i]\n        c+=1\n    if(l[i]<Min):\n        Min=l[i]\n        c+=1\n    else:\n        continue\nprint(c)    \n        \n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nm = list(map(int, input().split()))\nb = m[0]\nv = m[0]\nc = 0\nfor i in range(1, n):\n    if b < m[i]:\n        b = m[i]\n        c += 1\n    elif v > m[i]:\n        v = m[i]\n        c += 1\nprint(c)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nlst = [int(j) for j in input().split()]\nM = lst[0]\nm = lst[0]\ncount = 0\nif n == 1:\n    print(0)\nelse:\n    for i in range(1,n):\n        if lst[i] > M:\n            count += 1\n            M = lst[i]\n        elif lst[i] < m:\n            count += 1\n            m = lst[i]\n\n    print(count)\n\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=[int(x) for x in input().split()]\nm=0\nmin=max=l[0]\nfor i in l:\n    if i<min:\n        min=i\n        m+=1\n    if i>max:\n        max=i\n        m+=1\nprint(m)"
        },
        {
            "language": 3,
            "solution": "f=lambda:map(int,input().split())\nn=int(input())\npt=list(f())\nc=0\nmx=mn=pt[0]\nfor i in pt:\n    c+=(i>mx or i<mn)\n    if i>mx:\n       mx=i\n    if mn>i:\n        mn=i\nprint(c)"
        },
        {
            "language": 3,
            "solution": "def Amazing(n, s):\n              a = 0\n              for i in range(1, n):\n                            if s[i] < min(s[0:i]) or s[i] > max(s[0:i]):\n                                          a = a + 1\n              return a;\nz = int(input())\ns = [int(n) for n in input().split()]\nprint(Amazing(z, s))"
        },
        {
            "language": 3,
            "solution": "n=int(input())\npoints=[int(i) for i in input().split()]\noutput=0\nfor i in range(1,n):\n    line=points[0:i+1]\n    if line[-1]>max(points[0:i]) or line[-1]<min(points[0:i]):\n        output+=1\nprint(output)\n"
        },
        {
            "language": 3,
            "solution": "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Fri Aug  2 11:53:29 2019\n\n@author: Khondoker\n\"\"\"\n\nn =int( input())\n\nq = input()\n\nqlist = q.split()\n\nans = []\nans.append(int(qlist[0]))\nfinal = 0\n\nfor s in range(1,n):\n    ans.sort()\n    \n    if ( int(qlist[s]) < ans[0]) or (int(qlist[s])>ans[-1]):\n        final +=1\n    ans.append(int(qlist[s]))\n    \nprint(final)\n\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nq = input().split(' ')\nimax = int(q[0])\nimin = imax\ncnt = 0\nfor i in range(1, n):\n    \n    x = int(q[i])\n    if x < imin:\n        cnt += 1\n        imin = x\n    if x > imax:\n        cnt += 1\n        imax = x\nprint(cnt)"
        },
        {
            "language": 3,
            "solution": "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Tue Oct 23 16:07:02 2018\n\n@author: Quaint Sun\n\"\"\"\n\n\n\nn=int(input())\n\npoints=input().split()\n\npoint=[int(points[0])]\n\nt=0\nfor i in points:\n    if int(i)>max(point) or int(i)<min(point):\n        t=t+1\n        point.append(int(i))\n    else:\n        point.append(int(i))\n    \nprint(t)\n\n\n\n\n\n\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, ma, mi, a, su;\n  while (cin >> n) {\n    su = 0;\n    scanf(\"%d\", &a);\n    mi = ma = a;\n    for (int i = 1; i < n; i++) {\n      scanf(\"%d\", &a);\n      if (a > ma) {\n        su++;\n        ma = a;\n      }\n      if (a < mi) {\n        su++;\n        mi = a;\n      }\n    }\n    cout << su << endl;\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input(\"\"))\nl = list(map(int, str(input(\"\")).split(\" \")))\ncount = 0\nmax = 0\nmin = 0\nfor i in range(n-1):\n    if l[i+1] > l[max]:\n        count += 1\n        max = i+1\n    elif l[i+1] < l[min]:\n        count += 1\n        min = i+1\nprint(count)\n"
        },
        {
            "language": 3,
            "solution": "a=int(input())\nb=list(map(int,input().split()))\nf=[]\nf.append(b[0])\nb.remove(b[0])\nk=0\nfor i in b:\n    if i not in f:\n        f.append(i)\n        if i==max(f) or i==min(f):\n            k+=1\nprint(k)\n"
        },
        {
            "language": 1,
            "solution": "n=int(raw_input())\nscores=map(int,raw_input().split(' '))\n\nbin=[scores[0]]\n\namazing=0\nfor i in range(1,n):\n    bin.append(scores[i])\n    if min(bin)==scores[i] and bin.count(scores[i])==1 or max(bin)==scores[i] and bin.count(scores[i])==1:\n        amazing+=1\n        \nprint amazing"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.Scanner;\n\n\npublic class Username {\n\n\n\n\n\tpublic static void main(String[] args) \n\t{\n\t\tScanner sc=new Scanner(System.in);\n\t\tint c=0,min,max;\n\t\tint n=sc.nextInt();\n\t\n\t\tint a[]=new int [n];\n\n\t\tfor(int i=0;i<n;i++)\n\t\t\ta[i]=sc.nextInt();\n\t\tmax=a[0];\n\t\tmin=a[0];\n\t\tfor(int i=1;i<n;i++) \n\t\t{\n\t\t\t\n\t\t\t\tif(a[i]>max)\n\t\t\t\t{\n\t\t\t\tmax=a[i];\t\n\t\t\t\tc++;\n\t\t\t\t}\n\t\t\t\telse if(a[i]<min)\n\t\t\t\t{\n\t\t\t\t\tmin=a[i];\n\t\t\t\t\tc++;\n\t\t\t\t}\n\t\t\t\n\t\t\t}\n\t\t\n\n\t\tSystem.out.print(c);\n\t\tsc.close();\n\t\t\n}\n\t}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\npoint=input().split()\ntotal=0\npoi=[int(point[0])]\nfor i in range(n-1):\n    M=max(poi)\n    m=min(poi)\n    if int(point[i+1])>M or int(point[i+1])<m:\n        total+=1\n        poi.append(int(point[i+1]))\nprint(total)\n"
        },
        {
            "language": 3,
            "solution": "a=int(input())\nk=[]\nk=list(map(int,input().split()))\nmn=k[0]\nmx=k[0]\nkl=0\nfor i in k:\n    if i>mx:\n        kl+=1\n        mx=i\n    if i<mn:\n        kl+=1\n        mn=i\nprint(kl)\n        \n"
        },
        {
            "language": 3,
            "solution": "input()\ntrain = list(map(int, input().split()))\n\nmax_ = train[0]\nmin_ = train[0]\nmagnificient = 0\n\nfor coach in train:\n    if coach > max_:\n        max_ = coach\n        magnificient += 1\n    if coach < min_:\n        min_ = coach\n        magnificient += 1\n        \nprint(magnificient)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nli = [int(x) for x in input().split()]\nmin = li[0]\nmax = li[0]\ncount = 0\nfor i in range(1,len(li)):\n    if(li[i] > max):\n        max = li[i]\n        count = count + 1\n    if(li[i] < min):\n        min = li[i]\n        count = count + 1\nprint(count)"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\n\npublic class A {\n    static BufferedReader reader;\n    static StringTokenizer tokenizer;\n    static PrintWriter writer;\n\n    static void init() {\n        reader = new BufferedReader(new InputStreamReader(System.in));\n\n        writer = new PrintWriter(System.out);\n    }\n\n    static String nextToken() {\n        while (tokenizer == null || !tokenizer.hasMoreTokens())\n            try {\n                tokenizer = new StringTokenizer(reader.readLine());\n            } catch (IOException e) {\n                System.out.println(e);\n                System.exit(1);\n            }\n        return tokenizer.nextToken();\n    }\n\n    static byte nextByte() {\n        return Byte.parseByte(nextToken());\n    }\n\n    static short nextShort() {\n        return Short.parseShort(nextToken());\n    }\n\n    static int nextInt() {\n        return Integer.parseInt(nextToken());\n    }\n\n    static long nextLong() {\n        return Long.parseLong(nextToken());\n    }\n\n    static float nextFloat() {\n        return Float.parseFloat(nextToken());\n    }\n\n    static double nextDouble() {\n        return Double.parseDouble(nextToken());\n    }\n\n    static void solve() {\n        short n = nextShort(), max = nextShort(), min = max, countAmazing = 0;\n        for (short i = 1; i < n; i++) {\n            short cur = nextShort();\n            if (cur > max) {\n                max = cur;\n                countAmazing++;\n            }\n            if (cur < min) {\n                min = cur;\n                countAmazing++;\n            }\n        }\n\n        writer.println(countAmazing);\n    }\n\n    static void close() {\n        try {\n            reader.close();\n\n            writer.flush();\n            writer.close();\n        } catch (IOException e) {\n            System.out.println(e);\n            System.exit(1);\n        }\n    }\n\n    public static void main(String[] args) {\n        init();\n        solve();\n        close();\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[int(i) for i in input().split()]\nl=a[0]\nm=a[0]\ncnt=0\n\nfor i in range(1,n):\n    if max(l,a[i])==a[i] and l!=a[i]:\n        cnt+=1\n        l=a[i]\n\n    elif min(m,a[i])==a[i] and m!=a[i]:\n        cnt+=1\n        m=a[i]\n\nprint(cnt)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nl=h=a[0]\nr=0\nfor i in a:\n    if i<l or i>h:\n        r+=1\n    l,h=min(l,i),max(h,i)\nprint(r)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint main() {\n  int n;\n  scanf(\"%d\", &n);\n  int arr[n];\n  int i, j, cnt = 0, largest = 1;\n  for (i = 0; i < n; i++) {\n    scanf(\"%d\", &arr[i]);\n  }\n  for (i = 1; i < n; i++) {\n    for (j = 0; j < i; j++) {\n      if (arr[i] <= arr[j]) {\n        largest = 0;\n        break;\n      }\n    }\n    if (largest) cnt++;\n    largest = 1;\n  }\n  for (i = 1; i < n; i++) {\n    for (j = 0; j < i; j++) {\n      if (arr[i] >= arr[j]) {\n        largest = 0;\n        break;\n      }\n    }\n    if (largest) cnt++;\n    largest = 1;\n  }\n  printf(\"\\n%d\", cnt);\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "x = input()\ns = map(int, raw_input().split())\nprint sum(1 for i in range (1,x) if max(s[:i])<s[i] or min(s[:i])>s[i])"
        },
        {
            "language": 3,
            "solution": "n = int(input())\narr = input().split(' ')\narr = [int(i) for i in arr]\ncount = 0\nif n == 1:\n    print(count)\nelse:\n    small = 0\n    great = 0\n    if arr[0]<arr[1]:\n        small = arr[0]\n        great = arr[1]\n        count+=1\n    elif arr[0]>arr[1]:\n        great = arr[0]\n        small = arr[1]\n        count+=1\n    else:\n        small = arr[0]\n        great = arr[0]\n\n    for i in range(2, n):\n        if arr[i]>great:\n            great = arr[i]\n            count+=1\n        elif arr[i]<small:\n            small = arr[i]\n            count+=1\n    print(count)\n\n\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[int(x) for x in input().split()]\nb=[a[0]]\nans=0\nfor i in range(1,n):\n    if a[i]<min(b) or a[i]>max(b):\n        ans=ans+1\n    b.append(a[i])\nprint(ans)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nc1=0\nfor i in range(1,n):\n    j=i-1\n    if l[i]>l[j]:\n        while(j>=0 and l[i]>l[j]):\n            j=j-1\n        if j==-1:\n            c1=c1+1\n    elif l[i]<l[j]:\n        while(j>=0 and l[i]<l[j]):\n            j=j-1\n        if j==-1:\n            c1=c1+1\nprint(c1)            "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, i, ar[10000], s = 0, lar, small;\n  cin >> n;\n  for (i = 0; i < n; i++) cin >> ar[i];\n  small = ar[0];\n  lar = ar[0];\n  for (i = 1; i < n; i++) {\n    if (ar[i] > lar) {\n      s++;\n      lar = ar[i];\n    } else if (ar[i] < small) {\n      s++;\n      small = ar[i];\n    }\n  }\n  printf(\"%d\", s);\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "#!/usr/bin/env python3\n\nif __name__ == \"__main__\":\n\tn =int(input())\n\tpoints = list(map(int, input().split()))\n\tcount = 0\n\tmaxx , minn = points[0], points[0]\n\tfor point in points[1:]:\n\t\tif point > maxx:\n\t\t\tcount += 1\n\t\t\tmaxx = point\n\t\telif point < minn:\n\t\t\tcount += 1\n\t\t\tminn = point\n\tprint(count)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nudiv = 0\nmaxi = 0\nmas = [int(i) for i in input().split()]\nmini = mas[0]\nfor i in range(1, n):\n\tfor j in range(i):\n\t\tif mas[j] > maxi: maxi = mas[j]\n\t\tif mas[j] < mini: mini = mas[j]\n\tif mas[i] > maxi or mas[i] < mini: udiv += 1\nprint(udiv)"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\nps = map(int, raw_input().split())\nmx, mn = ps[0], ps[0]\ncnt = 0\nfor i in xrange(1, n):\n    if mx < ps[i]:\n        mx = ps[i]\n        cnt += 1\n    if mn > ps[i]:\n        mn = ps[i]\n        cnt += 1\nprint cnt\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, a, min, max, ctr = 0;\n  cin >> n;\n  cin >> a;\n  max = a;\n  min = a;\n  for (int i = 0; i < n - 1; i++) {\n    cin >> a;\n    if (a > max) {\n      ctr++;\n      max = a;\n    } else if (a < min) {\n      min = a;\n      ctr++;\n    }\n  }\n  cout << ctr;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\np=list(map(int,input().split()))\nP=[p[0]]\ns=0\nfor i in range(1,n):\n    if p[i]>max(P) or p[i]<min(P):\n        s=s+1\n    P.append(p[i])\nprint(s)\n"
        },
        {
            "language": 3,
            "solution": "input()\nl = list(map(int, input().split(' ')))\nmn = l[0]\nmx = l[0]\ncount = 0\nfor i in range(1, len(l)):\n    if l[i] > mx:\n        mx = l[i]\n        count += 1\n    elif l[i] < mn:\n        mn = l[i]\n        count += 1\nprint(count)\n"
        },
        {
            "language": 1,
            "solution": "n = input()\na = map(int,raw_input().split())\nmin = a[0]\nmax = a[0]\ncnt = 0\nfor i in xrange(1,n):\n    if a[i] < min:\n        cnt += 1\n        min = a[i]\n    if a[i] > max:\n        cnt += 1\n        max = a[i]\nprint cnt"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nmax=min=l[0]\na=0\nfor i in range(1,n):\n    if l[i]<min:\n        min=l[i]\n        a+=1\n    elif l[i]>max:\n        max=l[i]\n        a+=1\nprint(a)"
        },
        {
            "language": 3,
            "solution": "\n# -*- coding: utf-8 -*-\n# @Date    : 2020-01-10 13:17:35\n# @Author  : raj lath (oorja.halt@gmail.com)\n# @Link    : link\n# @Version : 1.0.0\n\nimport sys\nsys.setrecursionlimit(10**5+1)\n\ninf     =  int(10 ** 20)\nmax_val =  inf\nmin_val = -inf\n\nRW  = lambda : sys.stdin.readline().strip()\nRI  = lambda : int(RW())\nRMI = lambda : [int(x) for x in sys.stdin.readline().strip().split()]\nRWI = lambda : [x for x in sys.stdin.readline().strip().split()]\n\n\nnb_contestant = RI()\nscores = RMI()\nmins = scores[0]\nmaxs = scores[0]\ncoolness = 0\nfor i in scores[1:]:\n    if i < mins:\n        coolness += 1\n        mins = i\n    if i > maxs:\n        coolness += 1\n        maxs = i\nprint(coolness)\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class I_love_username {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tint[] a = new int[n];\n\t\tfor(int i =0;i<n;i++) {\n\t\t\ta[i]  =sc.nextInt();\n\t\t}\n\t\tint cnt =0;\n\t\tint maxx=a[0];\n\t\tint minn=a[0];\n\t\tfor(int i=0;i<n;i++){\n\t\t\tif(a[i]>maxx){\n\t\t\t\tmaxx=a[i];\n\t\t\t\tcnt++;\n\t\t    }\n\t\t\tif(a[i]<minn){\n\t\t\t\tminn=a[i];\n\t\t\t\tcnt++;\n\t\t    }\n\t\t}\n\t\t    System.out.println(cnt);\n\t\t\n\t}\n}\n"
        },
        {
            "language": 3,
            "solution": "x = input();x =list(map(int,input().split()))\nf,a,b = 0,x[0],x[0]\nfor i in x[1:]:\n\tif i>b:\n\t\tb=i\n\t\tf+=1\n\telif i<a:\n\t\ta=i\n\t\tf+=1\nprint(f)"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class Main\n{\n    public static void main(String args[])\n    {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int count = 0,min,max,k;\n        max = sc.nextInt();\n        min = max;\n        for(int i=1;i<n;i++)\n        {\n            k = sc.nextInt();\n            if(k>max)\n            {\n                count++;\n                max = k;\n            }\n            if(k<min)\n            {\n                count++;\n                min = k;\n            }\n        }\n        System.out.println(count);\n    }\n}"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nlst = list(map(int, input().split()))\nmini = lst[0]\nmaxi = lst[0]\nans = 0\nfor x in lst[1:]:\n    if(x < mini):\n        mini = x\n        ans += 1\n    if(x > maxi):\n        maxi = x\n        ans += 1\nprint(ans)\n"
        },
        {
            "language": 4,
            "solution": "\n\nimport java.util.Scanner;\nimport java.util.Stack;\nimport javax.swing.JOptionPane;\n\n\n\n\n/**\n *\n * @author User\n */\npublic class Test {\n  \n    \n  \n  public static void main(String[]args){\n      \n      Scanner in = new Scanner(System.in);\n      \n      int n  = in.nextInt();\n      int count = 0;\n     int min = 0 ;\n     int max = 0 ;\n      for (int i = 0, j; i < n; i++) {\n          j =  in.nextInt();\n          if(i==0){\n              min =  j;\n              max = j;\n              continue;\n          }\n          if(j<min){\n              count++;\n              min=j;\n          }\n          if(j>max){\n              count++;\n              max = j;\n          }\n      }\n      System.out.println(count);\n      \n  }}\n      "
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nc=0\nhigh=low=a[0]\nfor i in range(1,n):\n   if a[i]>high:high=a[i];c+=1\n   if a[i]<low:low=a[i];c+=1\nprint(c)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na, counter = [int(i) for i in input().split()], 0\ncounter += sum(a[i] < min(a[:i]) or a[i] > max(a[:i]) for i in range(1, n))\nprint(counter)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint m;\nbool best[1000], worst[1000];\nint main() {\n  int n, a[1000];\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n    if (i != 0)\n      if (a[i] > a[0])\n        for (int z = 0; z < i; z++) {\n          if (a[z] < a[i])\n            best[i] = true;\n          else {\n            best[i] = false;\n            z = i;\n          }\n        }\n      else if (a[i] < a[0])\n        for (int z = 0; z < i; z++) {\n          if (a[z] > a[i])\n            worst[i] = true;\n          else {\n            worst[i] = false;\n            z = i;\n          }\n        }\n    if (best[i] || worst[i]) m++;\n  }\n  cout << m;\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class Main{\n\npublic static void main(String[] args) {\n\n  Scanner scn=new Scanner(System.in);\n  int n=scn.nextInt();\n  int[] arr=new int[n];\n  for(int i=0;i<n;i++){\n      arr[i]=scn.nextInt();\n  }\n  if(n==1){\n      System.out.println(0);\n      return;\n  }\n  int maxsofar=arr[0];\n  int minsofar=arr[0];\n  int count=0;\n   for(int i=1;i<arr.length;i++){\n       if(arr[i]>maxsofar || arr[i]<minsofar){\n           count++;\n           if(arr[i]>maxsofar){\n               maxsofar=arr[i];\n           }\n           if(arr[i]<minsofar){\n               minsofar=arr[i];\n           }\n       }\n   }\n   System.out.println(count);\n }\n}"
        },
        {
            "language": 3,
            "solution": "n=int(input())\npoints=[int(x) for x in input().split()]\nmin_point=points[0]\nmax_point=points[0]\namazing=0\nfor i in range(1,n):\n    if points[i]<min_point:\n        amazing+=1\n        min_point=points[i]\n    elif points[i]>max_point:\n        amazing+=1\n        max_point=points[i]\nprint(amazing)"
        },
        {
            "language": 3,
            "solution": "def iLoveUsername():\n  n = int(input())\n  values = input().split()\n  max = int(values[0])\n  min = int(values[0])\n  count = 0\n  for i in range(len(values)):\n    if int(values[i]) > max:\n      max = int(values[i])\n      count +=1\n    if int(values[i]) < min:\n      min = int(values[i])\n      count+=1\n  print(count)\n\niLoveUsername()"
        },
        {
            "language": 3,
            "solution": "n=int(input());\na=input().split();\nb=int(a[0]);\nw=int(a[0]);\ni=1;\nz=0;\nwhile i<n:\n    if int(a[i])>b:\n        z+=1;\n        b=int(a[i]);\n    if int(a[i])<w:\n        z+=1;\n        w=int(a[i]);\n    i+=1;\nprint(z);\n"
        },
        {
            "language": 1,
            "solution": "from __future__ import division\nfrom collections import Counter as ctr\nfrom math import ceil, log, factorial\ndef rl():\n\treturn [int(i) for i in raw_input().split()]\n\ndef rm(n=None):\n\tif n is None:\n\t\tn = input()\n\treturn [raw_input() for i in range(n)]\n\ndef rlm(n=None):\n\tif n is None:\n\t\tn = input()\n\treturn [rl() for i in range(n)]\n\ndef yn(b):\n\tif b:\n\t\tprint \"YES\"\n\telse:\n\t\tprint \"NO\"\n\nn = input()\nl = rl()\nbest = l[0]\nworst = l[0]\ncnt = 0\nfor i in l[1:]:\n\tif i > best:\n\t\tcnt += 1\n\t\tbest = i\n\tif i < worst:\n\t\tcnt += 1\n\t\tworst = i\nprint cnt"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class username {\n\tpublic static void main(String args[]){\n\t\tScanner sc=new Scanner(System.in);\n\t\tint n=sc.nextInt();\n\t\tint arr[]=new int[n];\n\t\tfor(int i=0;i<arr.length;i++){\n\t\t\tarr[i]=sc.nextInt();\n\t\t}\n\t\tint count=0;\n\t\tfor(int i=1;i<arr.length;i++){\n\t\t\tint a[]=new int[i];\n\t\t\tfor(int k=0;k<a.length;k++){\n\t\t\t\ta[k]=arr[k];\n\t\t\t}\n\t\t\tArrays.sort(a);\n\t\t\tint min=a[0];\n\t\t\tint max=a[a.length-1];\n\t\t\tif(arr[i]>max){\n\t\t\t\tcount+=1;\n\t\t\t}\n\t\t\telse if(arr[i]<min)\n\t\t\t{\n\t\t\t\tcount+=1;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(count);\n\t}\n}\n\n\n//5\n//100 50 200 150 200\n//max=100 min=100 arr[1]=50  "
        },
        {
            "language": 3,
            "solution": "n = int(input())\ns = [int(x) for x in input().split(' ')]\nans = 0\nfor i in range(1, n):\n    if s[i] > max(s[:i]) or s[i] < min(s[:i]):\n        ans += 1\nprint(ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, amazing = 0;\n  bool less = true, greater = true;\n  cin >> n;\n  vector<int> c(n);\n  for (int i = 0; i < n; i++) {\n    cin >> c[i];\n  }\n  for (int i = 1; i < n; i++) {\n    less = true;\n    greater = true;\n    for (int j = i - 1; j < i && j >= 0; j--) {\n      if (c[i] >= c[j]) {\n        less = false;\n        break;\n      }\n    }\n    for (int j = i - 1; j < i && j >= 0; j--) {\n      if (c[i] <= c[j]) {\n        greater = false;\n        break;\n      }\n    }\n    if (less || greater) amazing++;\n  }\n  cout << amazing << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, i, maxi, mini;\n  cin >> n;\n  int z[n], o = 0;\n  for (i = 0; i < n; i++) {\n    cin >> z[i];\n    if (i == 0) {\n      maxi = z[i];\n      mini = z[i];\n    }\n    if (i > 0) {\n      if (z[i] > maxi) {\n        o++;\n        maxi = z[i];\n      }\n      if (z[i] < mini) {\n        o++;\n        mini = z[i];\n      }\n    }\n  }\n  cout << o;\n}\n"
        },
        {
            "language": 3,
            "solution": "def solve(s):\n    count= 0\n    m = s[0]\n    mi = s[0]\n    for i in range (len(s)):\n        if(m<s[i]):\n            m = s[i]\n            count +=1\n        if(mi>s[i]):\n            mi = s[i]\n            count +=1\n            \n    return count\nif __name__ == '__main__':\n    n = int(input())\n    s = list(map(int, input().split()))\n    print(solve(s))\n\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nx=0;m=0;c=0\nif n==1 and len(l)==1:\n\tprint(\"0\")\n\texit()\nelse:\n\tfor i in range(n):\n\t\tif i==0:\n\t\t\tx=l[i]\n\t\t\tm=l[i]\n\t\telse:\n\t\t\tif l[i]>x:\n\t\t\t\tx=l[i]\n\t\t\t\tc+=1\n\t\t\telif l[i]<m:\n\t\t\t\tm=l[i]\n\t\t\t\tc+=1\nprint(c)"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.Scanner;\n\npublic class JavaApplication134 {\n\n\n    public static void main(String[] args) {\n    Scanner input=new Scanner(System.in);\n    int a=input.nextInt();int count=0;\n int []x=new int [a];\n    for (int i=0;i<x.length;i++){\nx[i]=input.nextInt();\n    }   \n   int max=x[0];\n   int minm=x[0];  \n   for (int i=1;i<x.length;i++){\n       if(x[i]>max){\n           max=x[i];\n      count++;\n       }\n   if (x[i]<minm){\n       minm=x[i];\n  count++;\n   }\n   \n   }\n    System.out.println(count);\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\narr=list(map(int,input().split()))\nmn=arr[0]\nmx=arr[0]\nans=0\nfor i in arr:\n    if i<mn or i>mx:\n        ans+=1\n    mn=min(mn,i)\n    mx=max(mx,i)\nprint(ans)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int,input().split()))\nsmall = a[0]\nlarge = a[0]\ns = 0\nl = 0\nfor i in range(1,n):\n    for j in range(0,i+1):\n        if(a[j]<small):\n            small = a[j]\n            s += 1\n        if(a[j]>large):\n            large = a[j]\n            l += 1\nprint(s+l)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, points;\n  cin >> n >> points;\n  int min(points), max(points), amazing(0);\n  while (--n) {\n    cin >> points;\n    if (points < min) {\n      min = points;\n      ++amazing;\n    }\n    if (points > max) {\n      max = points;\n      ++amazing;\n    }\n  }\n  cout << amazing << endl;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "# https://codeforces.com/problemset/problem/155/A\n\n\"\"\"\nFor each contest, Vasya writes number of points coder got\nNumbers are written in the order of the contests\n\nPerformance is amazing if:\n    Break his best performance earn strictly more points than in the past\n    Break his worst performance earn strictly less that in the past\n\nThe first contest is not considered amazing\n\nCount the number of amazing performances coder has\n\"\"\"\n\nimport sys\n\nn = int(sys.stdin.readline())\npoints = list(map(int, sys.stdin.readline().split()))\n\namazing = 0\n\nmax_points, min_points = points[0], points[0]\n\nfor point in points:\n    if point > max_points:\n        amazing += 1\n        max_points = point\n\n    if point < min_points:\n        amazing += 1\n        min_points = point\n\nsys.stdout.write(str(amazing))\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nsum=0\ni=1\na=input()\na=a.split()\nmax=int(a[0])\nmin=int(a[0])\nfor i in range(1,n):\n    if int(a[i]) >max:\n        max=int(a[i])\n        sum += 1\n    elif int(a[i]) <min:\n        min=int(a[i])\n        sum += 1\n    i += 1\nprint(sum)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\ncount=0\na=list(map(int,input().split()))\nmax=a[0];min=a[0]\nfor i in range(1,n) :\n    if a[i]>max:\n        count+=1\n        max=a[i]\n    if a[i]<min:\n        count+=1\n        min=a[i]\nprint(count)  \n#155A"
        },
        {
            "language": 3,
            "solution": "list=[]\nn=int(input())\nm=input().split()\nfor i in range(n):\n    list.append(int(m[i]))\nsmall=list[0]\nlarge=list[0]\ncount=0\nfor i in range(1,len(list)):\n    if(small>list[i]):\n        small=list[i]\n        count=count+1\nfor j in range(1,len(list)):\n    if(large<list[j]):\n        large=list[j]\n        count=count+1\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nresults = list(map(int, input().split()))\n\nrecord_high = results[0]\nrecord_low = results[0]\ncount = 0\n\nfor i in results[1:]:\n\t\n\tif i > record_high:\n\t\tcount +=1\n\t\trecord_high = i\n\t\n\telif i < record_low:\n\t\tcount +=1 \n\t\trecord_low = i\n\t\n\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nnums = [int(a) for a in input().split()]\nb = []\nfor a in nums:\n    if len(b)==0 or a>max(b):\n            b.append(a)\n    elif len(b)==0 or a<min(b):\n            b.append(a)\nprint(len(b)-1)"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nli = list(map(int,input().split()))[:t]\nmin = li[0]\nmax = li[0]\ncount = 0\nfor i in range(1,t):\n    if li[i]<min:\n        min = li[i]\n        count+=1\n    elif li[i]>max:\n        max = li[i]\n        count+=1\nprint(count)\n\n\n"
        },
        {
            "language": 1,
            "solution": "n=input()\nnums=map(int,raw_input().split())\nup,dwn,cnt=nums[0],nums[0],0\nfor a in nums[1:]:\n    if a<dwn:\n        cnt+=1;dwn=a\n    elif a>up:\n        cnt+=1;up=a\nprint cnt\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class Main{\n    public static void main(String[] args)\n    {\n        Scanner sc = new Scanner(System.in);\n        int n=sc.nextInt();\n        int a[]=new int[n];\n        for (int i=0;i<a.length;i++) {\n            a[i]=sc.nextInt();\n        }\n        int minc=0,maxc=0;\n        int min=a[0],max=a[0];\n        for (int i=1;i<a.length;i++) {\n            if(min>a[i]){\n                min=a[i];\n                minc++;\n            }\n            else if(max<a[i]){\n                max=a[i];\n                maxc++;\n            }\n        }\n        System.out.println((minc+maxc));\n    }\n}"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nscores = list(map(int, input().split()))\nmax_score, min_score = scores[0], scores[0]\nc = 0\nfor score in range(1, n):\n    # if scores[score] < scores[score - 1]\n    if scores[score] > max_score:\n        max_score = scores[score]\n        c += 1\n    elif scores[score] < min_score:\n        min_score = scores[score]\n        c += 1\nprint(c)  \n"
        },
        {
            "language": 1,
            "solution": "n = int(input())\nl = map(int,raw_input().split(\" \"))\nmi = ma = l[0]\nm = 0\nfor i in l[1:]:\n    if(i < mi):\n        mi = i\n        m+=1\n    if(i > ma):\n        ma = i\n        m+=1\nprint m\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nm=list(map(int,input().split()))\nk=0\nfor i in range(1,n):\n    if m[i]>max(m[:i]) or m[i]<min(m[:i]):\n        k+=1\nprint(k)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\ns=[int(i) for i in input().split()]\nM=s[0]\nN=s[0]\ncount=0\nfor i in range(1,n):\n    if s[i]>M:\n        count+=1\n        M=s[i]\n    if s[i]<N:\n        count+=1\n        N=s[i]\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nv=list(map(int,input().split()))\na=[]\nb=0\nfor i in v:\n    a.append(i)\n    if len(a)>1 and a.count(i)==1:\n        if i==max(a) or i==min(a):\n            b+=1\nprint(b)\n"
        },
        {
            "language": 3,
            "solution": "line1=int(input())\nline2=input().split()\n\nm=[]\nfor i in line2:\n    m.append(int(i))\n\na=m[0]\nb=m[0]\ncount=0\nfor x in range(line1):\n    if m[x] <a and m[x] <b:\n        a=m[x]\n        count=count+1\n    elif m[x] >a and m[x] >b:\n        b=m[x]\n        count=count+1\n\nprint(count)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nscore = input()\n\nscore = score.split(\" \")\n\namaz = 0\n\nhighest = 0\nlowest = 0\n\nif n == 1:\n    print (amaz)\n\nelse:\n    if int(score[0]) > int(score[1]):\n        highest = int(score[0])\n        lowest = int(score[1])\n        amaz += 1\n    elif int(score[0]) < int(score[1]):\n        highest = int(score[1])\n        lowest = int(score[0])\n        amaz += 1\n    else:\n        highest = int(score[1])\n        lowest = int(score[0])\n\n    for x in score:\n        if int(x) > highest :\n            highest = int(x)\n            amaz += 1\n        elif int(x) < lowest :\n            lowest = int(x)\n            amaz += 1\n        else:\n            pass\n\n    print (amaz)\n        \n        \n\n\n\n            \n        \n            \n\n        \n            \n\n\n\n        \n        \n    \n        \n\n\n\n            \n\n\n    \n    \n\n\n\n\n\n\n\n    \n\n\n\n        \n        \n        \n        \n\n\n            \n\n\n\n        \n            \n\n    \n\n\n    \n\n    \n\n\n\n        \n\n\n        \n\n\n\n    \n        \n        \n\n    \n\n\n\n\n\n\n\n    \n    \n \n\n    \n\n        \n    \n            \n    \n\n\n\n\n    \n\n\n        \n\n\n\n    \n\n\n\n\n\n        \n            \n        \n    \n"
        },
        {
            "language": 1,
            "solution": "raw_input()\ni = map(int,raw_input().split())\nlove = i[0]\nyou = 0\nforever = i[0]\nfor lu in i[1:]:\n    if lu > love:\n        love = lu\n        you += 1\n    if lu < forever:\n        forever = lu\n        you += 1\nprint you\n# :'("
        },
        {
            "language": 3,
            "solution": "n = input()\nscores = list(map(int, input().split(' ')))\nhighest = lowest = scores[0]\nans = 0\nfor (i, score) in enumerate(scores[1:]):\n    if score < lowest:\n        lowest = score\n        ans += 1\n    if score > highest:\n        highest = score\n        ans += 1\nprint(ans)\n"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\nvalues = [int(i) for i in raw_input().split()]\nmx = values[0]\nmn = values[0]\ncount = 0\nfor val in values:\n    if val > mx:\n        mx = val\n        count += 1\n    if val < mn:\n        mn = val\n        count += 1\nprint count\n"
        },
        {
            "language": 3,
            "solution": "import sys\nn = int(input())\nalist = list(map(int, sys.stdin.readline().split()))\namax = alist[0]\namin = alist[0]\nans = 0\nfor i in range(1,n):\n  if alist[i] > amax:\n    amax = alist[i]\n    ans += 1\n  elif alist[i] < amin:\n    amin = alist[i]\n    ans += 1\nprint(ans)\n"
        },
        {
            "language": 3,
            "solution": "x = int(input())\nlst = list(map(int,input().split()))\nless = lst[0]\nbig = lst[0]\nc=0\nfor i in range(1,x):\n    k = lst[i]\n    if k<less:\n        c+=1\n        less = k\n    if k>big:\n        c+=1\n        big = k\nprint(c)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nlist1=[int(i) for i in input().split()]\ns=0\nt=0\ntt=0\nfor i in range(n-1):\n    for m in range(i+1):\n        if list1[i+1]>list1[m]:\n            t=t+1\n        if list1[i+1]<list1[m]:\n            tt=tt+1\n        if t==i+1 or tt==i+1:\n            s=s+1\n    t=0\n    tt=0\nprint(s)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\ns=0\nb=[]\nb.append(a[0])\nfor i in range(n):\n    if a[i]>max(b) or a[i]<min(b):\n        s+=1\n        b.append(a[i])\nprint(s)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\ns=list(map(int,input().split()))\nf=[]\nc=0\nfor i in range(n):\n    if i==0:\n        f.append(s[i])\n        continue\n    if s[i]<min(f) or s[i]>max(f):\n        c+=1\n    f.append(s[i])\nprint(c)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint main() {\n  int n, x, c, y, l, m, a;\n  a = 0;\n  l = 0;\n  m = 0;\n  scanf(\"%d\", &n);\n  for (c = 1; c <= n; c++) {\n    scanf(\"%d\", &y);\n    if (c == 1)\n      x = y;\n    else if (c == 2) {\n      if (y > x) {\n        m = y;\n        l = x;\n        a = a + 1;\n      } else if (y < x) {\n        l = y;\n        m = x;\n        a = a + 1;\n      } else if (y = x) {\n        m = y;\n        l = y;\n      }\n    } else if (c > 2 && c <= n) {\n      if (y > m) {\n        m = y;\n        a = a + 1;\n      } else if (l > y) {\n        l = y;\n        a = a + 1;\n      }\n    }\n  }\n  printf(\"%d\\n\", a);\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().strip().split()))\nc=0\nmin=max=a[0]\nfor i in range(1,n):\n    if a[i]>max:\n        c+=1\n        max=a[i]\n    if a[i]<min:\n        c+=1\n        min=a[i]\nprint(c)        "
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class Main { \n    public static void main(String[] args) throws IOException { \n        try (BufferedReader br = new BufferedReader(new InputStreamReader(System.in))) {\n            PrintWriter out = new PrintWriter(System.out);\n            int n = Integer.parseInt(br.readLine());\n            StringTokenizer st = new StringTokenizer(br.readLine());\n            int largest = Integer.parseInt(st.nextToken());\n            int smallest = largest;\n            int count = 0;\n            while (n-- > 1) {\n                int tmp = Integer.parseInt(st.nextToken());\n                if (tmp > largest) {\n                    largest = tmp;\n                    count++;\n                }\n                else if(tmp < smallest) {\n                    smallest = tmp;\n                    count++;\n                }\n            }\n            out.println(count);\n            out.flush();\n            out.close();\n        }\n    }\n}\n            \n\n"
        },
        {
            "language": 1,
            "solution": "N=int(input())\nA=list(map(int,raw_input().split()))\nMayor=A[0]\nMenor=A[0]\ncont=0\nfor k in range(1,N):\n    if(Mayor<A[k]):\n        Mayor=A[k]\n        cont+=1\n    if(Menor>A[k]):\n        Menor=A[k]\n        cont+=1\nprint cont \n"
        },
        {
            "language": 3,
            "solution": "n = input()\nl = list(map(int, input().split()))\nlargest = l[0]\nsmallest = l[0]\ncount = 0\nfor i in range(1, len(l)):\n    if largest < l[i]:\n        largest = l[i]\n        count += 1\n    elif smallest > l[i]:\n        smallest = l[i]\n        count += 1\nprint(count)"
        },
        {
            "language": 3,
            "solution": "a = int(input())\nlista = list(map(int,input().split()))\nmenor = lista[0]\nmayor = lista[0]\nc =0\nfor i in range(0,a):\n    if(lista[i]<menor):\n        menor = lista[i]\n        c +=1\n    if(lista[i]>mayor):\n        mayor = lista[i]\n        c +=1\n\nprint(c)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = [ int(x) for x in input().split()]\ncount = 0\nfor i in range(n-1):\n    if l[i+1] > max(l[:i+1]):\n        count+=1\n    elif l[i+1]< min(l[:i+1]):\n        count+=1\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nlst=list(map(int,input().split()))\ntotal=0\nminn=lst[0]\nmaxx=lst[0]\nfor i in range(1,n):\n    if lst[i]>maxx:\n        total+=1\n        maxx=lst[i]\n    if lst[i]<minn:\n        total+=1\n        minn=lst[i]\nprint(total)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = [int(x) for x in input().split()]\nmaks = a[0]\nminim = a[0]\nhasil = 0\n\nfor i in range(1,len(a)):\n    if a[i] > maks:\n        hasil += 1\n        maks = a[i]\n    if a[i] < minim:\n        hasil += 1\n        minim = a[i]\nprint(hasil)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\npoints = list(map(int, input().split()))\ncount = 0\nfor i in range(1, n):\n    if i > 1:\n        if points[i] > points[i-1]:\n            great = True\n            for j in range(i-2, -1, -1):\n                if points[i] <= points[j]:\n                    great = False\n                    break\n        elif points[i] < points[i-1]:\n            great = True\n            for j in range(i-2, -1, -1):\n                if points[i] >= points[j]:\n                    great = False\n                    break\n        else:\n            great = False\n    else:\n        if points[i] == points[i-1]:\n            great = False\n        else:\n            great = True\n    if great:\n        count += 1\nprint(count)"
        },
        {
            "language": 3,
            "solution": "number = int(input())\nscores = [int(x) for x in input().split(' ')]\n\namazing_performances = 0\nmini = scores[0]\nmaxi = scores[0]\n\nfor i in range(1, number):\n    if scores[i] < mini:\n        amazing_performances += 1\n        mini = scores[i]\n    if scores[i] > maxi:\n        amazing_performances += 1\n        maxi = scores[i]\n\nprint(amazing_performances)\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.Scanner;\n\npublic class Codeforces {\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n, amazingPerform = 0, i, j;\n\t\tn = sc.nextInt();\n\t\tint[] contests = new int[n];\n\t\tfor (i = 0; i < n; i++) {\n\t\t\tcontests[i] = sc.nextInt();\n\t\t}\n\n\t\tfor (i = 1; i < n; i++) {\n\t\t\tboolean lessAmazing = true;\n\t\t\tboolean moreAmazing = true;\n\t\t\tfor (j = i - 1; j >= 0; j--) {\n\t\t\t\tlessAmazing = lessAmazing && contests[i] < contests[j];\n\t\t\t\tmoreAmazing = moreAmazing && contests[i] > contests[j];\n\t\t\t}\n\t\t\tif (lessAmazing || moreAmazing)\n\t\t\t\tamazingPerform++;\n\t\t}\n\t\tSystem.out.println(amazingPerform);\n\t}\n\n}"
        },
        {
            "language": 3,
            "solution": "n=int(input())\npoints=input().split()\namazing=[]\nans=0\nfor i in range(n):\n    points[i]=int(points[i])\namazing.append(points[0])\nfor i in range(1,n):\n    amazing.append(points[i])\n    amazing.sort()\n    if points[i]<amazing[1] or points[i]>amazing[i-1]:\n        ans+=1\nprint(ans)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\n\nl = list(map(int,input().split()))\nans = 0\nfor i in range(1,n):\n    p = min(l[:i])\n    q = max(l[:i])\n    if(l[i]>q or l[i]<p):\n        ans+=1\nprint(ans)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\ns = list(map(int, input().split()))\namazing = 0\nfor i in range(n):\n    if i > 0 and not s[i] in s[:i]:\n        if s[i] < min(s[:i]) or s[i] > max(s[:i]):\n            amazing +=1\nprint(amazing)"
        },
        {
            "language": 4,
            "solution": "    import javax.swing.*;\n    import java.util.ArrayList;\n    import java.util.Arrays;\n    import java.util.StringTokenizer;\n    import java.io.*;\n\n    public class Main {\n        public static class FastReader {\n            BufferedReader br;\n            StringTokenizer st;\n\n            public FastReader() {\n                br = new BufferedReader(new InputStreamReader(System.in));\n            }\n\n            String nextLine() {\n                String str = \"\";\n                try {\n                    str = br.readLine();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n                return str;\n            }\n\n            int nextInt() {\n                return Integer.parseInt(next());\n            }\n\n            long nextLong() {\n                return Long.parseLong(next());\n            }\n\n            double nextDouble() {\n                return Double.parseDouble(next());\n            }\n\n            String next() {\n                while (st == null || !st.hasMoreElements()) {\n                    try {\n                        st = new StringTokenizer(br.readLine());\n                    } catch (IOException e) {\n                        e.printStackTrace();\n                    }\n                }\n                return st.nextToken();\n            }\n\n\n        }\n\n        public static void main(String[] args) {\n            FastReader s = new FastReader();\n            int n=s.nextInt();\n            int[] arr=new int[n];\n            for(int i=0;i<n;i++)\n            {\n                arr[i]=s.nextInt();\n            }\n            int min=arr[0];\n            int max=arr[0];\n            int count=0;\n            for(int i=1;i<n;i++)\n            {\n                if(arr[i]<min)\n                {\n                    min=arr[i];\n                    count++;\n                }\n                if(arr[i]>max)\n                {\n                    max=arr[i];\n                    count++;\n                }\n\n            }\n            System.out.println(count);\n\n\n\n\n\n\n\n        }\n\n        static boolean isPrime(int n)\n        {\n            // Corner case\n            if (n <= 1) return false;\n\n            // Check from 2 to n-1\n            for (int i = 2; i < n; i++)\n                if (n % i == 0)\n                    return false;\n\n            return true;\n        }\n\n    }"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nm=list(map(int,input().split()))\nz=0\nx=[]\nif n==2 and m[0]==m[1]:\n    print(0)\n    exit()\nif n==2:\n    print(1)\n    exit()\nif n==1:\n    print(0)\n    exit()\nfor i in range(1,n):\n    x=m[:i+1]\n    if min(x)==m[i]:\n        if x.count(m[i])==1:\n        \t    z+=1\n    elif max(x)==m[i]:\n        if x.count(m[i])==1:\n            z+=1\nprint(z)\n\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\npoints = list(map(int,input().split()))\ncount = 0\nmin1 = max(points)+1\nmax1 = 0\nfor x in range(n-1):\n    if points[x]>max1:\n        max1 = points[x]\n    if points[x]<min1:\n        min1 = points[x]\n    if points[x+1]>max1 or points[x+1]<min1:\n        count+=1\nprint(count)"
        },
        {
            "language": 3,
            "solution": "input()\na=list(map(int,input().split()))\nmn=mx=a[0]\nc=0\nfor i in range(len(a)):\n    if a[i]<mn:\n        mn=a[i]\n        c+=1\n    if a[i]>mx:\n        mx=a[i]\n        c+=1\nprint(c)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = [int(x) for x in input().split()]\nmin = a[0]\nmax = a[0]\ncounter = 0\nfor i in a :\n    if i > max:\n        max = i\n        counter +=1\n    if i < min:\n        min = i\n        counter += 1\nprint(counter)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nline=[int(i) for i in input().split()]\nmaxnum=line[0]\nminnum=line[0]\ntotal=0\nfor i in range(n):\n    if line[i]>maxnum:\n        total+=1\n        maxnum=line[i]\n    if line[i]<minnum:\n        total+=1\n        minnum=line[i]\nprint(total)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\ncount=int(0)\n\nscore=list(map(int,input().split()))\nfor i in range(n):\n    \n    if i ==0:\n        low=score[i]\n        high=score[i]\n    elif score[i]<low:\n        low=score[i]\n        count+=1\n    elif score[i]>high:\n        high=score[i]\n        count+=1\nprint(count)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=input().split()\nb=[]\nfor i in a:\n    b.append(int(i))\ni=0\nfor k in range(1,n):\n    if b[k]>max(b[:k]) or b[k]<min(b[:k]):\n        i=i+1\n    else:\n        continue\nprint(i)\n"
        },
        {
            "language": 3,
            "solution": "p=input()\nk=input().split(\" \")\n#k=list(k)\nk=list(map(int,k))\ncnt=0\nfor i in range(len(k)):\n    flag=0\n    for j in range(0,i):\n        if(k[i]<k[j]):\n            flag=1\n        else:\n            flag=0\n            break\n    if(flag==1):\n        cnt+=1\n    else:\n        flag=0\n        for j in range(0,i):\n            if(k[i]>k[j]):\n                flag=1\n            else:\n                flag=0\n                break\n        if(flag==1):\n            cnt+=1\nprint(cnt)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nx,xx=l[0],l[0]\nc,c1=0,0\nfor i in range(1,n):\n  if x<l[i]:\n    c+=1\n    x=l[i]\nfor i in range(1,n):\n  if xx>l[i]:\n    c+=1\n    xx=l[i]\nprint(c)"
        },
        {
            "language": 3,
            "solution": "n, counter = int(input()), 0\na = *map(int, input().split()),\ncounter += sum(a[i] < min(a[:i]) or a[i] > max(a[:i]) for i in range(1, n))\nprint(counter)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  int n, max = -1, min = 10001, b = -2;\n  cin >> n;\n  vector<int> ar(n + 1);\n  for (int i = 1; i <= n; i++) {\n    cin >> ar[i];\n    if (ar[i] > max) {\n      max = ar[i];\n      b++;\n    }\n    if (ar[i] < min) {\n      min = ar[i];\n      b++;\n    }\n  }\n  cout << b;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\ns=list(map(int,input().split()))\n\nmin,max=s[0],s[0]\n\nx=0\nfor i in range(1,n):\n    if s[i]>max:\n        max=s[i]\n        x+=1\n    if s[i]<min:\n        min=s[i]\n        x+=1\nprint(x)"
        },
        {
            "language": 3,
            "solution": "con=int(input())\nnum=list(map(int,input().split()))\n\nk=0\nfor i in range(1,con):\n    list = []\n    for j in range(i):\n        list.append(num[j])\n    if max(list)<num[i]:\n        k+=1\n    elif min(list)>num[i]:\n        k+=1\nprint(k)"
        },
        {
            "language": 1,
            "solution": "a = raw_input()\na = [int(x) for x in raw_input().split(' ')]\nmi = a[0]\nmx = a[0]\ncounter = 0\nfor i in a[1:]:\n    if(i<mi):\n        mi=i\n        counter+=1\n    elif(i>mx):\n        mx=i\n        counter+=1\nprint counter,\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\np = list(map(int, input().split()))\nac = 0\nM = p[0]\nm = p[0]\nfor i in p[1:]:\n    if i > M :\n        M = i\n        ac+=1\n    elif i < m:\n        m = i\n        ac+=1\nprint(ac)        \n"
        },
        {
            "language": 3,
            "solution": "def func(n,l):\n    count = 0\n    for i in range(1, n):\n            c=l[:i]\n            a=max(c)\n            b=min(c)\n            if l[i] > a :\n                count=count+1\n            if l[i]< b:\n                count=count+1\n    return (count)\n\nif __name__==\"__main__\":\n    n = int(input())\n    l = list(map(int, input().strip().split()))\n    print(func(n,l))"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, i, x = 0, max, min;\n  cin >> n;\n  int a[n];\n  for (i = 0; i < n; i++) {\n    cin >> a[i];\n  }\n  max = a[0];\n  min = a[0];\n  for (i = 1; i < n; i++) {\n    if (a[i] > max) {\n      max = a[i];\n      x++;\n    } else if (a[i] < min) {\n      min = a[i];\n      x++;\n    }\n  }\n  cout << x;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nM = list(map(int, input().split()))\nmin = max = M[0]\nc = 0\nfor i in M:\n    if i > max:\n        max = i\n        c += 1\n    elif i < min:\n        min = i\n        c += 1\nprint(c)"
        },
        {
            "language": 3,
            "solution": "n=input()\nls=list(map(int,input().split()))\nworst=ls[0]\nbest=ls[0]\ncount=0\nfor i in range(1,len(ls)):\n\tif ls[i]<worst:\n\t\tcount=count+1\n\t\tworst=ls[i]\n\telif ls[i]>best:\n\t\tcount=count+1\n\t\tbest=ls[i]\nprint(count)"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\nimport java.util.Arrays;\n \npublic class main {\n    public static void main(String[] args) {\n        Scanner l=new Scanner(System.in);\n    int x=l.nextInt();\n    int con=0;\n    int max=0,min=999999;\n    for(int i=0; i<x; i++){\n    int temp=l.nextInt();\n    if(i==0){\n    max=temp;\n    min=temp;\n    }\n    if(i!=0){\n    if(temp<min){\n    min=temp;\n    con++;\n    }\n    if(temp>max){\n    max=temp;\n    con++;\n    }\n    }\n    }\n        System.out.println(con);\n    }\n}"
        },
        {
            "language": 3,
            "solution": "t = int(input())\na = list(map(int, input().split()[:t]))\nc = 0;\nc1 = 0;\ntemp = a[0];\ntemp1 = a[0]\n\nfor i in range(t - 1):\n    if temp > a[i + 1]:\n        c = c + 1\n        temp = a[i + 1]\n    elif temp1 < a[i + 1]:\n        c = c + 1\n        temp1 = a[i + 1]\n\nprint(c)\n\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\npoint=[int(x) for x in input().split()]\nmax_=point[0]\nmin_=max_\ndel point[0]\ns=0\nfor i in point:\n    if max_ < i:\n        s+=1\n        max_=i\n    elif min_ > i:\n        s+=1\n        min_=i\nprint(s)\n"
        },
        {
            "language": 1,
            "solution": "_ = raw_input()\np = map(int, raw_input().split())\nmax_ = p[0]\nmin_ = p[0]\namazing = 0\nfor i in p[1:]:\n    if i < min_:\n        min_ = i\n        amazing += 1\n    if max_ < i:\n        max_ = i\n        amazing += 1\nprint amazing\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nList=[int(j) for j in input().split(\" \")]\nAmazing=0\nfor i in range(1,n):\n\tcount=0\n\tcount_1=0\n\tfor k in range(i):\n\t\tif List[i] > List[k] :\n\t\t\tcount+=1\n\t\tif List[i] <List[k] :\n\t\t\tcount_1+=1\n\tif count==i:\n\t\tAmazing+=1\n\tif count_1==i:\n\t\tAmazing+=1\n\t\t\nprint(Amazing) \n"
        },
        {
            "language": 1,
            "solution": "n=input()\na=map(int, raw_input().split())\nmx=a[0]\nmn=a[0]\nc=0\nfor i in a:\n    if i>mx or i<mn:\n        c+=1\n    mx=max(mx, i)\n    mn=min(mn, i)\nprint c     "
        },
        {
            "language": 3,
            "solution": "n = int(input())\ncontests = [int(x) for x in input().split(' ')]\n\nnew_max = contests[0]\nnew_min = contests[0]\nres = 0\n\nfor i in range(1, n):\n\tif contests[i] > new_max:\n\t\tnew_max = contests[i]\n\t\tres += 1\n\telif contests[i] < new_min:\n\t\tnew_min = contests[i]\n\t\tres += 1\n\nprint(res)"
        },
        {
            "language": 3,
            "solution": "def amazingPerformance(scores):\n    smallest = largest = scores[0]\n    howMany = 0\n    for s in scores[1:]:\n        if s < smallest:\n            smallest = s\n            howMany += 1\n        if s > largest:\n            largest = s\n            howMany += 1\n    return howMany\n    \nsize = int(input())\nscores = [int(i) for i in input().split()]\nprint(amazingPerformance(scores))"
        },
        {
            "language": 1,
            "solution": "n=int(raw_input())\nlst=map(int,raw_input().split())\nmax=lst[0]\nmin=lst[0]\ncount=0\nfor i in lst:\n    if i>max:\n        max=i\n        count+=1\n    elif i<min:\n        min=i\n        count+=1\nprint count\n\n"
        },
        {
            "language": 3,
            "solution": "x = input()\nx = [int(y) for y in input().split()]\nma = x[0]\nmi = x[0]\nam = 0 \nfor n in x[1:]:\n    if n > ma:\n        ma = n\n        am+=1\n    elif n < mi:\n        mi = n\n        am+=1\nprint(am)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = [int(i) for i in input().split()]\nM = a[0]\nm = a[0]\ns = 0\nfor i in range(1,n):\n    if a[i]>M:\n        s += 1\n        M = a[i]\n    if a[i]<m:\n        s += 1\n        m = a[i]\nprint(s)"
        },
        {
            "language": 3,
            "solution": "n=int(input(\"\"))\nlist1=list(map(int,input().split()))\nlist2=[]\nlist3=[]\nfor i in range(1,len(list1)+1):\n    list2.append(max(list1[0:i]))\n    list3.append(min(list1[0:i]))\nl=list(set(list2))\nm=list(set(list3))\nprint(len(l)+len(m)-2)\n\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        I_love_username solver = new I_love_username();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class I_love_username {\n        public void solve(int testNumber, InputReader in, PrintWriter out) {\n            int n = in.nextInt();\n            int[] arr = in.nextIntArray(0, n);\n            if (n == 1) {\n                out.println(0);\n            } else {\n                int k = 0, first = arr[k++];\n                while (k < n && arr[k] == first) {\n                    k++;\n                }\n                if (k == n) {\n                    out.println(0);\n                } else {\n                    int max = Integer.max(arr[k], arr[k - 1]), min = Integer.min(arr[k], arr[k - 1]);\n                    int answer = 1;\n                    for (int i = k + 1; i < n; i++) {\n                        if (arr[i] > max) {\n                            max = arr[i];\n                            answer++;\n                        }\n                        if (arr[i] < min) {\n                            min = arr[i];\n                            answer++;\n                        }\n                    }\n                    out.println(answer);\n                }\n            }\n        }\n\n    }\n\n    static class InputReader {\n        private StringTokenizer tokenizer;\n        private BufferedReader reader;\n\n        public InputReader(InputStream inputStream) {\n            reader = new BufferedReader(new InputStreamReader(inputStream));\n        }\n\n        private void fillTokenizer() {\n            if (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (Exception e) {\n                    throw new RuntimeException(e);\n                }\n            }\n        }\n\n        public String next() {\n            fillTokenizer();\n            return tokenizer.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        public int[] nextIntArray(int offset, int length) {\n            int[] arr = new int[offset + length];\n            for (int i = offset; i < offset + length; i++) {\n                arr[i] = nextInt();\n            }\n            return arr;\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\n\npublic class I_love_username {\n\t\n\tpublic static void main(String[] args) {\n\t\t\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tint menor = sc.nextInt();\n\t\tint mayor = menor;\n\t\tint count = 0 ;\n\t\tfor (int i = 1; i < n; i++) {\n\t\t\tint temp = sc.nextInt();\n\t\t\tif(temp > mayor){ count++; mayor = temp;}\n\t\t\tif(temp < menor){ count++; menor = temp;}\n\t\t}\n\t\tSystem.out.println(count);\n\t\t\n\t}\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nli = list(map(int, input().split()))\ncount = 0\nmin, max = li[0], li[0]\nfor i in range(1, len(li)):\n    if li[i] < min:\n        min = li[i]\n        count = count + 1\n    if li[i] > max:\n        max = li[i]\n        count = count + 1\nprint(count)"
        },
        {
            "language": 4,
            "solution": "import java.util.ArrayList;\nimport java.util.List;\nimport java.util.Scanner;\n\npublic class IloveUsernameTest {\n\n\tpublic static void main(String[] args) {\n\t\t\n\t\tint n;\n\t\tList<Integer> points = new ArrayList<Integer>();\n\t\t\n\t\tScanner in = new Scanner(System.in);\n\t\ttry{\n\t\t\tn = in.nextInt();\n\t\t\tfor(int i = 0; i < n; i++){\n\t\t\t\tint point = in.nextInt();\n\t\t\t\tpoints.add(point);\n\t\t\t}\n\t\t}finally{\n\t\t\tin.close();\n\t\t}\n\t\t\n\t\tint count = 0;\n\t\t\n\t\tint max = points.get(0);\n\t\tint min = points.get(0);\n\t\t\n\t\tfor(int i = 1; i < n; i++){\n\t\t\tif(points.get(i) < min || points.get(i) > max){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\t\n\t\t\tif(points.get(i) > max){\n\t\t\t\tmax = points.get(i);\n\t\t\t}\n\t\t\t\n\t\t\tif(points.get(i) < min){\n\t\t\t\tmin = points.get(i);\n\t\t\t}\n\t\t}\n\t\t\n\t\tSystem.out.println(count);\n\t}\n\n}"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nval = list(map(int,input().split(' ')))\nmax = val[0]\nmin = val[0]\nanswer = 0\nfor i in range(1,len(val)):\n    if val[i]>max or val[i]<min:\n        answer+=1\n        max = val[i] if max<val[i] else max\n        min = val[i] if min>val[i] else min\nprint(answer)\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\npublic class A155 {\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\t\n\t\tScanner scan = new Scanner(System.in);\n\t\tint n= scan.nextInt();\n\t\tint ctr=0;\n\t\tint min=scan.nextInt();\n\t\tint max=min;\n\t\tint temp;\n\t\tfor(int i=1;i<n;i++) {\n\t\t\ttemp=scan.nextInt();\n\t\t\tif(temp>max) {\n\t\t\t\tctr++;\n\t\t\t\tmax=temp;\n\t\t\t}\n\t\t\telse if(temp<min) {\n\t\t\t\tctr++;\n\t\t\t\tmin=temp;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(ctr);\n\n\t}\n\n}"
        },
        {
            "language": 3,
            "solution": "n=input()\na=[int(i) for i in input().split()]\nx=[a[0]]\nc=0\nfor i in range(1,len(a)):\n    if a[i]<min(x):\n        c=c+1\n    elif a[i]>max(x):\n        c=c+1\n    x.append(a[i])\nprint(c)\n    "
        },
        {
            "language": 3,
            "solution": "n = int(input())\ns = input()\na = s.split()\nfor i in range(len(a)):\n\ta[i] = int(a[i])\n\nsum = 0\ni = 1\nwhile i < len(a):\n\tif all(a[i] > a[j] for j in range(0,i)):\n\t\tsum += 1\n\telif all(a[i] < a[j] for j in range(0,i)):\n\t\tsum += 1\n\ti += 1\nprint(sum)"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\n\npublic class userName\n{\n    public static void main(String[] args) \n    {\n        Scanner in = new Scanner(System.in);\n        int n = in.nextInt();\n        int data[] = new int[n];\n        for (int i = 0; i < data.length; i++) \n        {\n            data[i] = in.nextInt();\n        }\n        int number_max = data[0];\n        int number_min = data[0];\n        int result = 0;\n        \n        for (int i = 0; i < data.length; i++) \n        {\n            if(data[i]>number_max)\n            {\n                result++;\n                number_max = data[i];\n            }\n            if(data[i] < number_min)\n            {\n                result++;\n                number_min = data[i];\n            }\n        }\n        System.out.println(result);\n    }\n\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long n;\n  cin >> n;\n  long long a[n], count = 0, i;\n  for (i = 0; i < n; i++) cin >> a[i];\n  int min = a[0], max = a[0];\n  for (i = 1; i < n; i++) {\n    if (a[i] < min) {\n      count++;\n      min = a[i];\n    }\n    if (a[i] > max) {\n      count++;\n      max = a[i];\n    }\n  }\n  cout << count << endl;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na=list(map(int,input().split()))+['t']\nhigh = a[0]\nlow = a[0]\nk = 0\nfor i in range(1,len(a)-1):\n    if a[i] > high:\n        high = a[i]\n        k += 1\n    elif a[i] < low:\n        low=a[i]\n        k += 1\n    else:\n        continue \nprint(k)"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader; \nimport java.io.IOException; \nimport java.io.InputStreamReader; \nimport java.util.Scanner; \nimport java.util.StringTokenizer; \nimport java.util.*;\n  \npublic class i_love_this_coder\n{ \n    //By shwetank_verma\n    static class FastReader \n    { \n        BufferedReader br; \n        StringTokenizer st; \n  \n        public FastReader() \n        { \n            br = new BufferedReader(new\n                     InputStreamReader(System.in)); \n        } \n  \n        String next() \n        { \n            while (st == null || !st.hasMoreElements()) \n            { \n                try\n                { \n                    st = new StringTokenizer(br.readLine()); \n                } \n                catch (IOException  e) \n                { \n                    e.printStackTrace(); \n                } \n            } \n            return st.nextToken(); \n        } \n  \n        int nextInt() \n        { \n            return Integer.parseInt(next()); \n        } \n  \n        long nextLong() \n        { \n            return Long.parseLong(next()); \n        } \n  \n        double nextDouble() \n        { \n            return Double.parseDouble(next()); \n        } \n  \n        String nextLine() \n        { \n            String str = \"\"; \n            try\n            { \n                str = br.readLine(); \n            } \n            catch (IOException e) \n            { \n                e.printStackTrace(); \n            } \n            return str; \n        } \n    } \n    static int mod=1000000007;\n    static boolean primes[]=new boolean[1000007];\n    \n    static boolean seive(int n){\n        Arrays.fill(primes,true);\n        primes[0]=primes[1]=false;\n        for(int i=2;i*i<=n;i++){\n            if(primes[i]==true){\n                for(int p=i*i;p<=n;p+=i){\n                    primes[p]=false;\n                }\n            }\n        }\n        if(n<1000007){\n            return primes[n];\n        }\n        return false;\n        \n    }\n    static int gcd(int a,int b){\n        if(b==0)\n        return a;\n        return gcd(b,a%b);\n    }\n    static long GCD(long a,long b){\n        if(b==0)\n        return a;\n        return GCD(b,a%b);\n    }\n    \n  \n    public static void main(String[] args) \n    { \n        FastReader sc=new FastReader(); \n        try{\n           \n                int n=sc.nextInt();\n                \n                int a[]=new int[n];\n                int min=sc.nextInt(),max=min;\n                int ans=0;\n                for(int i=1;i<n;i++){\n                    a[i]=sc.nextInt();\n                    if(a[i]>max) {\n                    \tmax=a[i];\n                    \tans++;\n                    }\n                    else if(a[i]<min) {\n                    \tmin=a[i];\n                    \tans++;\n                    }\n                }\n                \n                System.out.println(ans);\n                \n                \n        \n                \n           \n            \n        }catch(Exception e){\n            return;\n        }\n    } \n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nlist = [int(i) for i in input().split()]\nt = 0\nB = list[0]\nS = list[0]\nfor i in range(1,n):\n    if list[i] > B:\n        t = t+1\n        B = list[i]\n    if list[i] < S:\n        t= t+1\n        S = list[i]\nprint(t)\n\n    "
        },
        {
            "language": 3,
            "solution": "num = eval(input())\nscore = [eval(i) for i in input().split()]\nbenchmarkMax = score[0]\nbenchmarkMin = score[0]\ncount = 0\nfor i in range(num):\n    if score[i] > benchmarkMax or score[i] < benchmarkMin: count += 1\n    benchmarkMax = max(benchmarkMax, score[i])\n    benchmarkMin = min(benchmarkMin, score[i])\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nb=list(map(int,input().split()))\n# print(n,b)\ncount=-1\nfor i in range(len(b)):\n\tmi=0\n\tma=0\n\tfor j in range(i):\n\t\tif b[i]<b[j]:\n\t\t\tmi+=1\n\t\telif b[i]>b[j]:\n\t\t\tma+=1\n\tif mi == i or ma == i:\n\t\t# print(b[i])\n\t\tcount+=1\nprint(count)\t\t\n\t\t\t"
        },
        {
            "language": 3,
            "solution": "\n\ntour = int (input(\"\"))\n\nnumbers=input(\"\")\n\nnumbers=numbers.split()\n\ni=0\n\nbiggest=int(numbers[0])\nlowest=int(numbers[0])\namazingNumbers=0\n\nfor i in numbers:\n    if int(i)>biggest:\n        biggest =int(i)\n        amazingNumbers+=1\n    elif int(i)<lowest:\n        lowest =int(i)\n        amazingNumbers+=1\nprint(amazingNumbers)\n    "
        },
        {
            "language": 3,
            "solution": "'''PRANDNYA WILDCARD ROUND 2019\n\nA) SWITCH CASE'''\n\n'''n=int(input())\nfor i in range(0,n):\n    p=input().rstrip().split(' ')\n    q=int(input())\n    F=int(p[0])\n    A=int(p[1])\n    B=int(p[2])\n    for j in range(0,q):\n        u=input().rstrip().split(' ')\n        T=A;\n        Y=B;\n        C=F;\n        if int(u[0])!=T:\n            if C==0:\n                C=1;\n            else:\n                C=0;\n        if int(u[1])!=Y:\n            if C==0:\n                C=1;\n            else:\n                C=0;\n        if C==0:\n            print(\"OFF\")\n        else:\n            print(\"ON\")'''\n\nX=0;\nn=int(input())\np=input().rstrip().split(' ')\nmaxf = -9999999;\nminf = 1000000\nfor i in range(0,len(p)):\n    if i==0:\n        if int(p[i])>maxf:\n            maxf = int(p[i])\n        if int(p[i])<minf:\n            minf = int(p[i])\n    else:\n        if int(p[i])>maxf:\n            X+=1;\n            maxf=int(p[i])\n        if int(p[i])<minf:\n            X+=1;\n            minf = int(p[i])\nprint(X)\n"
        },
        {
            "language": 3,
            "solution": "num = 0\nn=int(input())\nc=[int(i) for i in input().split()]\nm=[c[0]]\nminm=m[0]\nmaxm=m[0]\nfor i in range(1,len(c)):\n    f=c[i]\n    if f<minm:\n        num+=1\n        minm=f\n    elif f>maxm:\n        num+=1\n        maxm=f\nprint(num)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nnum=input()\nlist=[int(i) for i in num.split()]\nl=[list[0]]\nk=0\nfor i in range(1,n):\n    if int(list[i])>max(l) or int(list[i])<min(l) :\n        k+=1\n        l.append(list[i])\n    else:\n        k=k\n        l.append(list[i])\nprint(k)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\n\nnums = list(map(int, input().split(' ')))\n\namaz = 0\nlow = nums[0]\nhigh = nums[0]\nfor i in range(1, n):\n    if nums[i] < low:\n        amaz += 1\n        low = nums[i]\n    elif nums[i] > high:\n        amaz += 1\n        high = nums[i]\nprint(amaz)\n"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\n\nscore_n = map(int, raw_input().split())\n\nlowest = score_n[0]\nhighest = score_n[0]\ncount = 0\n\nfor i in score_n[1:]:\n    if i > highest:\n        count += 1\n        highest =i\n    elif i < lowest:\n        count += 1\n        lowest = i\n    \nprint count"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nlst = []\namazing = 0\n\nscores = input()\nscores = list(map(int, scores.split()))\n\nfor i in range(n):\n    score = scores[i]\n\n    if len(lst) > 0:\n        if score > max(lst) or score < min(lst):\n            amazing += 1\n        \n    lst.append(score)\n\nprint(amazing)\n\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[int(i)for i in input().split()]\nx=y=a[0]\ns=0\nfor i in range(1,n):\n    if a[i]>x or a[i]<y:\n        s=s+1\n    x=max(x,a[i])\n    y=min(y,a[i])\nprint(s)"
        },
        {
            "language": 3,
            "solution": "#155A\nnum = int(input())\narr = []\narr = [i for i in input().split()][:num]\narr = [int(i) for i in arr]\namazing = 0\nmax = arr[0]\nmin = arr[0]\nfor i in range(1,len(arr)):\n    if (arr[i] < min):\n        min = arr[i]\n        amazing = amazing + 1\n    if (arr[i] > max):\n        max = arr[i]\n        amazing = amazing + 1\nprint(amazing)\n\n\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = [int(x) for x in input().split()]\nc = 0\nfor i in range(1, n):\n    if(a[i] > max(a[0:i]) or a[i] < min(a[0:i])):\n        c += 1\nprint(c)        "
        },
        {
            "language": 3,
            "solution": "x=int(input())\nlt=[int(i) for i in input().split()]\nm=lt[0]\nn=lt[0]\nz=0\nfor i in range(1,x):\n    if lt[i]>m:\n        z+=1\n        m=lt[i]\n    elif lt[i]<n:\n        z+=1\n        n=lt[i]\nprint(z)"
        },
        {
            "language": 1,
            "solution": "n = int(input())\nt = raw_input().split(' ')\nmax = int(t[0])\nmin = max\ns=0\nfor i in t:\n    if int(i)>max:\n        s+=1\n        max = int(i)\n    if int(i)<min:\n        min=int(i)\n        s+=1\nprint s"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class Codeforces {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int k = scanner.nextInt();\n\n        scanner.nextLine();\n        int[] arr = new int[k];\n        int res = 0;\n        for (int i = 0; i < k; i++) arr[i] = scanner.nextInt();\n\n        int minV = arr[0];\n        int maxV = arr[0];\n\n        for (int i = 1; i < k; i++) {\n            if (arr[i] < minV) {\n                minV = arr[i];\n                res++;\n            } else if (arr[i] > maxV) {\n                maxV = arr[i];\n                res++;\n            }\n        }\n\n        System.out.println(res);\n\n    }\n\n}"
        },
        {
            "language": 3,
            "solution": "n = int(input())\n\narr = list(map(int, input().split()))\nmx = mn = arr[0] \nawsm = 0\nfor i in range(1,n):\n    if arr[i] > mx:\n        mx = arr[i]\n        awsm += 1\n    elif arr[i] < mn:\n        mn = arr[i]\n        awsm += 1\n \nprint(awsm)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\npoints = list(map(int, input().split()))\nlow = points[0]\nhigh= points[0]\namazing =0\nfor i in range(1, n):\n    if points[i] < low:\n        amazing+=1\n        low = points[i]\n    if points[i] > high:\n        amazing +=1\n        high = points[i]\nprint (amazing)"
        },
        {
            "language": 3,
            "solution": "#!/usr/bin/python3\nn = int(input())\nworst = 0\nbest = 0\ncount = 0\nscorestr = input().split()\nfor i in list(range(n)):\n    score = int(scorestr[i])\n    if i == 0:\n        worst = score\n        best = score\n    else:\n        if score < worst:\n            count += 1\n            worst = score\n        if score > best:\n            count += 1\n            best = score\nprint(count)"
        },
        {
            "language": 3,
            "solution": "def Sol(arr,n):\n\tcount = 0\n\n\tfor i in range(1,n):\n\t\tif arr[i] > max(arr[:i]) or arr[i] < min(arr[:i]):\n\t\t\tcount += 1\n\n\tprint(count)\n\treturn\t\n\n\n#for t in range(int(input())):\nn = int(input())\narr = list(map(int,input().split()))\n\n#l = list(map(int,input().split()))\nSol(arr,n)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\npoi=list(map(int,input().split()))\nmaxPoints=None\nminPoints=None\namazPoints=0\nfor i in poi:\n    if(maxPoints==None and minPoints==None):\n        maxPoints=i\n        minPoints=i\n    elif(i>maxPoints):\n        maxPoints=i\n        amazPoints+=1\n    elif(i<minPoints):\n        minPoints=i\n        amazPoints+=1\nprint(amazPoints)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=[i for i in input().split()]\nl=[int(i) for i in l]\np=0\ni=2\nwhile i<=n-1:\n\tif l[i]>max(l[0:i]) or l[i]<min(l[0:i]):\n\t\tp=p+1\n\ti=i+1\nif len(l)>1 and l[1]!=l[0]:\n    p=p+1\nprint(p)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint ToInt(string& s, int len) {\n  int r = 0;\n  for (int i = 0, max_ = (len); i < max_; ++i) {\n    r *= 10;\n    r += s[i] - '0';\n  }\n  return r;\n}\nint GCD(int a, int b) { return b != 0 ? GCD(b, a % b) : a; }\nint LCM(int a, int b) { return a * (b / GCD(a, b)); }\nlong long Pow(long long n, long long e) {\n  if (e == 0) return 1;\n  if (e == 1)\n    return n;\n  else if (e & 1) {\n    long long t = Pow(n, e / 2);\n    return n * t * t;\n  } else {\n    long long t = Pow(n, e / 2);\n    return t * t;\n  }\n}\nint main() {\n  int N, min, max, t, res = 0;\n  scanf(\"%d\", &N);\n  scanf(\"%d\", &t);\n  min = max = t;\n  for (int i = 0, max_ = (N - 1); i < max_; ++i) {\n    scanf(\"%d\", &t);\n    if (t < min) {\n      ++res;\n      min = t;\n    } else if (t > max) {\n      ++res;\n      max = t;\n    }\n  }\n  printf(\"%d\\n\", res);\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\na = [ int(x) for x in raw_input().split() ]\n\nmi, ma = a[0], a[0]\nans = 0\nfor i in xrange(1, n):\n    if a[i] > ma : \n        ma = a[i]\n        ans += 1\n    if a[i] < mi :\n        mi = a[i]\n        ans += 1\nprint ans\n\n\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\ns=0\nfor i in range(1,n):\n\tc1=0\n\tc2=0\n\tfor j in range(i-1,-1,-1):\n\t\tif a[i]<a[j]:\n\t\t\tc1=c1+1\n\t\tif a[i]>a[j]:\n\t\t\tc2=c2+1\n\tif c1==i or c2==i:\n\t\ts=s+1\nprint(s)"
        },
        {
            "language": 3,
            "solution": "count = 0\ncount_2 = 0\nn = int(input())\nlis = list(map(int, input().split()))\nb = lis[0]\nfor i in range(len(lis)):\n    if lis[i]>b:\n        b=lis[i]\n        count += 1\n#print(count)\n\nc = lis[0]\nfor num in range(1, len(lis)):\n    if lis[num] < c:\n        c = lis[num]\n        count_2 += 1\n#print(count_2)\nprint(count + count_2)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\n\nc=0\nmaxrecord=l[0]\nminrecord=l[0]\nfor i in range(1,len(l)):\n    if(l[i]>maxrecord):\n        maxrecord=l[i]\n        c+=1\n    elif(l[i]<minrecord):\n        minrecord=l[i]\n        c+=1\nprint(c)"
        },
        {
            "language": 3,
            "solution": "a=int(input())\nb=list(map(int,input().split()))\nc=0\ncpy=[]\ncpy.append(b[0])\nfor i in range(1,a):\n    cpy.append(b[i])\n    if ((b[i]==max(cpy)) or (b[i]==min(cpy))) and (cpy.count(b[i])==1):\n        c=c+1\nprint(c)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint main() {\n  int n, i, j, count1 = 0, count2 = 0, sum = 0;\n  scanf(\"%d\", &n);\n  int a[n];\n  for (i = 0; i < n; i++) {\n    scanf(\"%d\", &a[i]);\n  }\n  for (i = 1; i < n; i++) {\n    for (j = i - 1; j >= 0; j--) {\n      if (a[i] > a[j]) {\n        count1++;\n      }\n      if (a[i] < a[j]) {\n        count2++;\n      }\n      if (count1 == i) sum++;\n      if (count2 == i) sum++;\n    }\n    count1 = 0;\n    count2 = 0;\n  }\n  printf(\"%d\", sum);\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "i = int(input())\nj = list(map(int,input().split()))\nc =0\nd =[j[0]]\nmaax =j[0]\nmiin = j[0]\nfor a in range(1,i):\n\td.append(j[a])\n\tma = max(d)\n\tmi = min(d)\n\tif (ma ==j[a] and ma > maax):\n\t\tc+=1\n\t\tmaax = ma\n\tif (mi ==j[a] and mi < miin):\n\t\tc+=1\n\t\tmiin =mi\n\t\t\nprint(c)\n\t\t"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\nmx, mn, ans = a[0], a[0], 0\nfor c in a:\n    if(c > mx) : \n        ans += 1\n        mx = c\n    if(c < mn) :\n        ans += 1\n        mn = c\nprint(ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, x, c = 0;\n  cin >> n >> x;\n  int mx = x, mn = x;\n  for (int i = 1; i < n; i++) {\n    cin >> x;\n    if (x > mx) {\n      mx = x;\n      c++;\n    } else if (x < mn) {\n      mn = x;\n      c++;\n    }\n  }\n  cout << c;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\ns=la=l[0]\na=0\nfor i in l[1:]:\n         if(i<s):\n                  s=i\n                  a=a+1\n         if(i>la):\n                  la=i\n                  a=a+1\nprint(a)\n         "
        },
        {
            "language": 3,
            "solution": "n = int(input())\nx = tuple(map(int, input().split()))\nr = 0\nh = l =x[0]\nfor i in x:\n    if i > h:\n        h = i\n        r += 1\n    if i < l:\n        l = i\n        r += 1\n\nprint(r)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nlista = input().split(\" \")\nscores = list(map(int, lista))\ntempScores = []\namazing = 0\nactualScore = 0\nfor i in range(0, n):\n    if (i>=1):\n        actualScore = scores[i]\n        if (actualScore > max(tempScores) or actualScore < min(tempScores)):\n            amazing+=1\n    \n    \n    tempScores.append(scores[i])\n\nprint(amazing)"
        },
        {
            "language": 3,
            "solution": "\"\"\"\n    Nombre: I Love Username\n    id:\n    Fuente: Codeforces.com\n    Coder: Cgesu Coder \"\"\"\n\nn = int(input())\npoints = list(map(int, input().split()))\n\namazing = minimo = maximo = 0\nfor i in range(n):\n    if i == 0:\n        minimo = maximo  = points[i]\n    else:\n        if minimo > points[i]:\n            minimo = points[i]\n            amazing += 1\n        elif maximo < points[i]:\n            maximo = points[i]\n            amazing += 1\nprint(amazing)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = [int(i) for i in input().split()]\nc = []\nfor i in range(n):\n    if i == 0:()\n    else:\n        if a[i] > max(a[0:i]):\n           c.append(i)\n        else:\n            if a[i] < min(a[0:i]):\n                c.append(i)\n            else:()\nprint(len(c))"
        },
        {
            "language": 3,
            "solution": "a=int(input())\nb=list(map(int,input().split()))\nmaximum=b[0]\nminimum=b[0]\nwow=0\nfor i in b:\n    if i > maximum:\n        maximum = i\n        wow+=1\n    elif i < minimum:\n        minimum = i\n        wow+=1\nprint(wow)"
        },
        {
            "language": 3,
            "solution": "'''\nn = int(input().strip())\np = list(map(int,input().split()))\nzero1 = 0 ; zero2 = 0\nfor i in p:\n    if i < 0:\n        if zero2 > 0:\n            zero2 -= 1\n        else:\n            zero1 += 1\n    else:\n        zero2 += i\nprint(zero1)\n'''\nn = int(input().strip())\nll = list(map(int,input().split()))\nkmin = ll[0]\nkmax = ll[0]\njav = 0\nfor i in range(1,n):\n    if kmax < ll[i]:\n        kmax = ll[i]\n        jav += 1\n    elif kmin > ll[i]:\n        jav += 1\n        kmin = ll[i]\nprint(jav)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, i, c = 0, x;\n  cin >> n;\n  if (n == 1) {\n    cin >> x;\n    cout << \"0\";\n  } else {\n    int a[n];\n    for (i = 0; i < n; i++) {\n      cin >> a[i];\n    }\n    int choto = a[0];\n    int boro = a[0];\n    for (i = 1; i < n; i++) {\n      if (a[i] < choto) {\n        c++;\n        choto = a[i];\n      }\n      if (a[i] > boro) {\n        c++;\n        boro = a[i];\n      }\n    }\n    cout << c;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nsequence = [int(i) for i in input().split(\" \")]\n\nmin_list = sequence[0]; max_list = sequence[0]\namazing_perf = 0\n\nfor score in sequence:\n    if(score < min_list):\n        min_list = score\n        amazing_perf += 1\n    if(score > max_list):\n        max_list = score\n        amazing_perf += 1\n\nprint(amazing_perf)"
        },
        {
            "language": 3,
            "solution": "x=int(input(''))\n\nlistA=[int(x) for x in input().split()]\ncurrent=listA[0]\nworst=listA[0]\nbest=listA[0]\nnumAw=0\nif len(listA)==1:\n\tprint(0)\nelse:\n\n\tif listA[1]>current:\n\t\tbest=listA[1]\n\t\tnumAw+=1\n\telif listA[1]<current:\n\t\tworst=listA[1]\n\t\tnumAw+=1\n\tfor i in range(2,len(listA)):\n\t\tif listA[i]>best:\n\t\t\tbest=listA[i]\n\t\t\tnumAw+=1\n\t\telif listA[i]<worst:\n\t\t\tworst=listA[i]\n\t\t\tnumAw+=1\n\tprint(numAw)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n;\nint solution() { return 0; }\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cin >> n;\n  int ans = 0;\n  int num;\n  cin >> num;\n  int maxn = num;\n  int minn = num;\n  for (int i = 1; i < n; i++) {\n    cin >> num;\n    if (num > maxn) {\n      ans++;\n      maxn = num;\n    } else if (num < minn) {\n      ans++;\n      minn = num;\n    }\n  }\n  cout << ans;\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\nimport java.util.Arrays;\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n =sc.nextInt();\n        int array [] = new int[n];\n        array[0]=sc.nextInt();\n        int ans = 0;        \n        int min = array[0]; \n        int max = array[0];\n        for(int i=1;i<n;i++)\n        {\n            array[i]=sc.nextInt();\n            if(max<array[i])\n            {   \n                max = array[i];                  \n                ans++;\n            }\n            else if(min>array[i])\n            {\n                min = array[i];                  \n                ans++;\n            }       \n        }\n        System.out.println(ans);    \n    }\n\n}"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\n/**\n * Created by Ignazio Castrogiovanni on 2019-04-22.\n */\npublic class HRGraph {\n\n  public static void main(String[] args) {\n    Scanner scanner = new Scanner(System.in);\n    int n = scanner.nextInt();\n\n    int minimum = scanner.nextInt();\n    int maximum = minimum;\n\n    int numberOfAmazingResults = 0;\n\n    for (int i = 0; i < n - 1; i++) {\n      int curentValue = scanner.nextInt();\n      if (curentValue < minimum) {\n        numberOfAmazingResults++;\n        minimum = curentValue;\n      } else if (curentValue > maximum) {\n        numberOfAmazingResults++;\n        maximum = curentValue;\n      }\n    }\n    System.out.println(numberOfAmazingResults);\n  }\n}"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\ncount = 0\nmaxi = a[0]\nmini = a[0]\nfor i in range(len(a)):\n    if a[i] > maxi:\n        maxi = a[i]\n        count += 1\n    elif a[i] < mini:\n        mini = a[i]\n        count += 1\nprint(count)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nmx,mn,c=l[0],l[0],0\nfor x in range(1,n):\n\tif l[x]>mx:\n\t\tc+=1\n\t\tmx=l[x]\n\telif l[x]<mn:\n\t\tc+=1\n\t\tmn=l[x]\nprint(c)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nx = input()\nx = x.split()\nfor i in range(n):\n    x[i] = int(x[i])\nh = x[0]\nl = x[0]\nres = 0\nfor i in range(1,n):\n    if x[i]>h:\n        res += 1\n        h = x[i]\n    if x[i]<l:\n        res += 1\n        l = x[i]\nprint(res)"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.PrintWriter;\nimport java.util.InputMismatchException;\nimport java.math.BigInteger;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n * @author Walker\n */\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tInputReader in = new InputReader(inputStream);\n\t\tPrintWriter out = new PrintWriter(outputStream);\n\t\tTaskA solver = new TaskA();\n\t\tsolver.solve(1, in, out);\n\t\tout.close();\n\t}\n}\n\nclass TaskA {\n    public void solve(int testNumber, InputReader in, PrintWriter out) {\n        int n = in.readInt();\n        int max = in.readInt();\n        int min = max;\n        int amaz = 0;\n        for(int i = 0; i < n - 1; i++){\n            int k = in.readInt();\n            if(k  > max || k < min){\n                amaz++;\n            }\n            max = Math.max(max, k);\n            min = Math.min(min, k);\n        }\n        out.print(amaz);\n    }\n}\n\nclass InputReader {\n\n\tprivate InputStream stream;\n\tprivate byte[] buf = new byte[1024];\n\tprivate int curChar;\n\tprivate int numChars;\n\tprivate SpaceCharFilter filter;\n\n\tpublic InputReader(InputStream stream) {\n\t\tthis.stream = stream;\n\t}\n\n\tpublic int read() {\n\t\tif (numChars == -1)\n\t\t\tthrow new InputMismatchException();\n\t\tif (curChar >= numChars) {\n\t\t\tcurChar = 0;\n\t\t\ttry {\n\t\t\t\tnumChars = stream.read(buf);\n\t\t\t} catch (IOException e) {\n\t\t\t\tthrow new InputMismatchException();\n\t\t\t}\n\t\t\tif (numChars <= 0)\n\t\t\t\treturn -1;\n\t\t}\n\t\treturn buf[curChar++];\n\t}\n\n\tpublic int readInt() {\n\t\tint c = read();\n\t\twhile (isSpaceChar(c))\n\t\t\tc = read();\n\t\tint sgn = 1;\n\t\tif (c == '-') {\n\t\t\tsgn = -1;\n\t\t\tc = read();\n\t\t}\n\t\tint res = 0;\n\t\tdo {\n\t\t\tif (c < '0' || c > '9')\n\t\t\t\tthrow new InputMismatchException();\n\t\t\tres *= 10;\n\t\t\tres += c - '0';\n\t\t\tc = read();\n\t\t} while (!isSpaceChar(c));\n\t\treturn res * sgn;\n\t}\n\n\tpublic boolean isSpaceChar(int c) {\n\t\tif (filter != null)\n\t\t\treturn filter.isSpaceChar(c);\n\t\treturn isWhitespace(c);\n\t}\n\n\tpublic static boolean isWhitespace(int c) {\n\t\treturn c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n\t}\n\n\tpublic interface SpaceCharFilter {\n\t\tpublic boolean isSpaceChar(int ch);\n\t}\n}\n\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nmx=mn=a[0]; cnt=0\nfor item in a[1:]:\n    if item>mx:\n        cnt+=1; mx=item\n    elif item<mn:\n        cnt+=1; mn=item\nprint(cnt)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nx = map(int, input().split())\na = b = next(x)\nd = 0\nfor i in x:\n    if a > i:\n        a = i\n        d += 1\n    if b < i:\n        b = i\n        d += 1\nprint(d)"
        },
        {
            "language": 3,
            "solution": "number_of_events = int(input())\nresults = [int(i) for i in input().split()]\nhighest_value = results[0]\nlowest_value = results[0]\noutput = 0\n\nfor i in range(1, len(results)):\n    if results[i] > highest_value:\n        output += 1\n        highest_value = results[i]\n    if results[i] < lowest_value:\n        output += 1\n        lowest_value = results[i]\n\nprint(output)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = input().split()\n\nmin_l = int(l[0])\nmax_l = int(l[0])\n\nbr = 0\n\nfor i in range(1, n):\n    l[i] = int(l[i])\n    \n    if l[i] > max_l:\n        max_l = l[i]\n        br += 1\n\n    elif l[i] < min_l:\n        min_l = l[i]\n        br += 1\n\nprint(br)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[int(x) for x in input().split()]\ns=a[0]\nb=a[0]\nc=0\nfor i in a:\n    if i>b:\n        b=i\n        c+=1\n    if i<s:\n        s=i\n        c+=1\n\nprint(c)\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class IloveUserName {\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tint arr1[] = new int[n],i;\n\t\tfor(i = 0;i < n;i++){\n\t\t\tarr1[i] = sc.nextInt();\n\t\t}\n\t\tint max = arr1[0],min = arr1[0],count = 0;\n\t\tfor(i = 0;i < n;i++){\n\t\t\tif(arr1[i] > max){\n\t\t\t\tmax = arr1[i];\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\t\t\n\t\t\tif(arr1[i] < min){\n\t\t\t\tmin = arr1[i];\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(count);\n\n\t}\n\n}"
        },
        {
            "language": 3,
            "solution": "i = int(input())\nl = list(map(int,input().split()))\nmi = ma = l[0]\nt = 0\nfor x in l:\n    if x < mi: t +=1; mi = x\n    if x > ma: t += 1; ma = x\nprint(t)"
        },
        {
            "language": 1,
            "solution": "from sys import *\nCONS = 1\nif CONS:\n    f = stdin\nelse:\n    f = open(\"input.txt\")\nn = int(f.readline())\nballs = map(int, f.readline().split())\nminim=1000000\nmaxim=-2\nans = 0\nflag =1\nfor i in balls:\n    if (i < minim or i > maxim)and not flag:\n        ans += 1\n    if flag:\n        flag=0\n    maxim=max(i, maxim)\n    minim=min(i, minim)\nprint ans\n"
        },
        {
            "language": 3,
            "solution": "# import sys\n# sys.stdin = open(\"input\", \"r\")\nn = int(input())\nnums = [int(x) for x in input().split()]\n\nmin = nums[0]\nmax = nums[0]\nret = 0\nfor i in range(1,n):\n\tif nums[i] < min:\n\t\tmin = nums[i]\n\t\tret += 1\n\telif nums[i] > max:\n\t\tmax = nums[i]\n\t\tret += 1\nprint(ret)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\npt=list(map(int,input().split(' ')))\nmi,mx=pt[0],pt[0]\ncnt=0\ni=1\nfor i in range(len(pt)):\n\tif pt[i]<mi:\n\t\tmi=pt[i]\n\t\tcnt+=1\n\telif pt[i]>mx:\n\t\tmx=pt[i]\n\t\tcnt+=1\n\ti+=1\nprint(cnt)\n\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = [int(i) for i in input().split()]\nbig = a[0]\nsmall = a[0]\nres = 0\nfor i in a:\n    if i > big:\n        res += 1\n        big = i\n    if i < small:\n        res += 1\n        small = i\nprint(res)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nline=[int(i) for i in input().split()]\nmi=line[0]\nma=line[0]\nout=0\nfor i in range(1,n):\n    if line[i]<mi:\n        mi=line[i]\n        out+=1\n    if line[i]>ma:\n        ma=line[i]\n        out+=1\n    else:\n        pass\nprint(out)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int, input().split()))\nif n==1:\n    print(\"0\")\nelse:\n    mi=min(a[0],a[1])\n    ma=max(a[0],a[1])\n    if mi==ma:\n        x=0\n        for i in range(2,n):\n            if a[i]>ma:\n                ma=a[i]\n                x+=1\n            if a[i]<mi:\n                mi=a[i]\n                x+=1\n        print(x)\n    else:\n        mi=min(a[0],a[1])\n        ma=max(a[0],a[1])\n        x=1\n        for i in range(2,n):\n            if a[i]>ma:\n                ma=a[i]\n                x+=1\n            if a[i]<mi:\n                mi=a[i]\n                x+=1\n        print(x)\n"
        },
        {
            "language": 3,
            "solution": "input()\nl = list(map(int,input().split()))\na = 0\nn,x = [l[0],l[0]]\nfor i in l:\n\tif i < n:\n\t\tn = i\n\t\ta += 1\n\telif i > x:\n\t\tx = i\n\t\ta += 1\n\telse:\n\t\tpass\nprint(a)"
        },
        {
            "language": 1,
            "solution": "n=int(raw_input())\nscores=map(int,raw_input().split())\nmax=scores[0]\nmin=scores[0]\ncount=0\n\nfor score in scores:\t\n\tif max<score:\n\t\tcount+=1\n\t\tmax=score\n\tif min>score:\n\t\tcount+=1\n\t\tmin=score\n\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nL=[int(x) for x in input().split()]\nt=1\nif len(L)==1:\n    print(0)\nelif len(L)==2:\n    if L[0]==L[1]:\n        print(0)\n    else:\n        print(1)\nelse:\n    p=max(L[0],L[1])\n    q=min(L[0],L[1])\n    if p>q:\n        for i in range(2,len(L)):\n            if L[i]>p or L[i]<q:\n                t=t+1\n                p=max(p,L[i])\n                q=min(q,L[i])\n        print(t)\n    else:\n        t=0\n        for i in range(2,len(L)):\n            if L[i]>p or L[i]<q:\n                t=t+1\n                p=max(p,L[i])\n                q=min(q,L[i])\n        print(t)\n    \n"
        },
        {
            "language": 1,
            "solution": "n = input()\ninp = map(int, raw_input().split())\nct = 0\nfor idx, itm in enumerate(inp):\n    if ( idx>0 and itm > max(inp[0:idx])) or  (idx>0 and itm < min (inp[0:idx])) :\n        ct  = ct + 1\nprint (ct)\n"
        },
        {
            "language": 1,
            "solution": "from Queue import * # Queue, LifoQueue, PriorityQueue\nfrom bisect import * #bisect, insort\nfrom datetime import * \nfrom collections import * #deque, Counter,OrderedDict,defaultdict\n#set([]) \nimport calendar\nimport heapq\nimport math\nimport copy\nimport itertools\nimport string\nmyread = lambda : map(int,raw_input().split())\ndef solver():\n    n = input()\n    num = myread()\n    max_num = num[0]\n    min_num = num[0]\n    ans = 0\n    for x in num:\n        if max_num < x:\n                ans += 1\n                max_num = x\n        if min_num > x:\n                ans += 1\n                min_num = x\n    print ans\n\n\n\nif __name__ == \"__main__\":\n    solver()\n    \n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nh=[int(i) for i in input().split()]\nans=0\nm=s=h[0]\nfor i in range(n):\n    if h[i]>m:\n        ans+=1\n        m=h[i]\n    if h[i]<s:\n        s=h[i]\n        ans+=1\nprint(ans)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  int n;\n  cin >> n;\n  int idk;\n  cin >> idk;\n  int mi = idk, ma = idk, ans = 0;\n  for (long long i = 1; i < n; i++) {\n    cin >> idk;\n    if (idk < mi) {\n      ans++;\n      mi = idk;\n    } else if (idk > ma) {\n      ans++;\n      ma = idk;\n    }\n  }\n  cout << ans << endl;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nnumbers = list(map(int,input().split(\" \")))\ncount = int(0)\nminVal = numbers[0]\nmaxVal = numbers[0]\nfor i in numbers :\n    if(i < minVal) :\n        count+=int(1)\n        minVal = i\n    if(i > maxVal) :\n        count+=int(1)\n        maxVal = i\nprint(count)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nball = list(map(int, input().strip().split(' ')))\nq = 0\nfor i in range(1, n):\n    if (ball[i] < min(ball[:i])) or (ball[i] > max(ball[:i])):\n        q += 1\nprint(q)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nx=[int(q) for q in input().split()]\nc=0\nmn=x[0]\nmx=x[0]\nfor i in range(1,len(x)):\n    if x[i]>mx:\n        c+=1\n        mx=max(mx,x[i])\n    if x[i]<mn:\n        c+=1\n        mn=min(x[i],mn)\n    \nprint(c)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nmass = list(map(int, input().split()))\n\ncmax = cmin = mass[0]\nmass = mass[1:]\nrec = 0\n\nfor i in mass:\n    if i > cmax:\n        cmax = i\n        rec += 1\n    elif i < cmin:\n        cmin = i\n        rec += 1\n\nprint(rec)\n"
        },
        {
            "language": 3,
            "solution": "if __name__==\"__main__\":\n    n=int(input())\n    list1=input().split(' ')\n    list1=[int(a) for a in list1]\n    high=list1[0]\n    low=list1[0]\n    count=0\n    for i in range(1,len(list1)):\n        if low>list1[i] or high<list1[i]:\n            count+=1\n            if low>list1[i]:\n                low=list1[i]\n            else:\n                high=list1[i]\n    print(count)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nline = [int(i) for i in input().split()]\nnum = 0\nfor i in range(n-1):\n    if line[i+1]> max(line[0:i+1]) or line[i+1]<min(line[0:i+1]):\n        num += 1\nprint(num)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\n\nl = list(map(int, input().split()))\n\ncounter = 0\n\nfor i in range(1,n):\n    subcounter_highest = 0\n    subcounter_lowest = 0\n    for a in range(0,i):\n        if l[i] > l[a]:\n            subcounter_highest = subcounter_highest + 1\n        elif l[i] < l[a]:\n            subcounter_lowest = subcounter_lowest + 1\n    if subcounter_highest == i or subcounter_lowest == i:\n        counter = counter + 1\n        \nprint(counter)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nls = [int(i) for i in input().split(' ')] \nmin_ = ls[0]\nmax_ = ls[0]\nc = 0\nfor i in range(1, n):\n  if(min_ <= ls[i] <= max_):\n    continue\n  else:\n    if(ls[i] < min_):\n      min_ = ls[i]\n    elif(ls[i] > max_):\n      max_ = ls[i]\n    c+=1\nprint(c)\n\n  \n \t\t\t  \t\t\t \t\t\t\t\t\t\t\t\t\t  \t \t  \t \t"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[int (a) for a in input().split()]\ncount=0\n\nfor i in range(1,n):\n    if (a[i]>max(a[:i]) or a[i]<min(a[:i])):\n        count+=1\n        \nprint (count)"
        },
        {
            "language": 3,
            "solution": "x=int(input())\ny=list(map(int,input().split()))\nhigh=y[0]\nlow=y[0]\nsum=0\nfor i in range(1,x):\n    if y[i]>high:\n        high=y[i]\n        sum+=1\n    elif y[i]<low:\n        low=y[i]\n        sum+=1\nprint(sum)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nnum = list(map(int, input().split()))\nnumber = 0\nmini = maxi = num[0]\n\nfor i in range(1,n):\n    if num[i] > maxi:\n        number += 1\n        maxi = num[i]\n    if num[i] < mini:\n        number += 1\n        mini = num[i]\n\nprint(number)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nnumbers = [int(i) for i in input().split()]\ncount = -1\namazing = 0\nfor i in numbers:\n    count += 1\n    if count == 0:\n        continue\n    if i > max(numbers[:count]) or i < min(numbers[:count]):\n        amazing += 1\nprint(amazing)"
        },
        {
            "language": 3,
            "solution": "n = int(int(input()))\nL = [int(x) for x in input().split()]\nMin,Max,c = L[0],L[0],0\nfor i in range(1,n):\n    if Min != min(L[:i+1]) or Max != max(L[:i+1]): c += 1\n    Min,Max =min(L[:i+1]), max(L[:i+1])\nprint(c)"
        },
        {
            "language": 3,
            "solution": "import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time,copy,functools\n\nsys.setrecursionlimit(10**7)\ninf = 10**20\neps = 1.0 / 10**10\nmod = 10**9+7\ndd = [(-1,0),(0,1),(1,0),(0,-1)]\nddn = [(-1,0),(-1,1),(0,1),(1,1),(1,0),(1,-1),(0,-1),(-1,-1)]\n\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndef LI_(): return [int(x)-1 for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef S(): return input()\ndef pf(s): return print(s, flush=True)\n\n\ndef main():\n    n = I()\n    a = LI()\n    ma = mi = a[0]\n    r = 0\n    for c in a[1:]:\n        if ma < c:\n            r += 1\n            ma = c\n        elif mi > c:\n            r += 1\n            mi = c\n\n    return r\n\n\nprint(main())\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = [int(x) for x in input().split()]\nma = a[0]\nmi = a[0]\nc = 0\nfor i in range(1,n):\n    if a[i] > ma:\n        ma = a[i]\n        c += 1\n    if a[i] < mi:\n        mi = a[i]\n        c += 1\n\nprint(c)\n    "
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=input().split()\nfor i in range(0,len(a)):\n    a[i]=int(a[i])\nmax=min=a[0]\nc=0\nfor i in a:\n    if(i>max):\n        c+=1\n        max=i\n    if(i<min):\n        c+=1\n        min=i\nprint(c)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nxs = [int(x) for x in input().split()]\n\nmx = xs[0]\nmn = xs[0]\nans = 0 \n\nfor i in range(1,n):\n    if xs[i] < mn:\n        mn = xs[i]\n        ans += 1\n    elif xs[i] > mx:\n        mx = xs[i]\n        ans += 1\n\nprint(ans)\n"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input().strip())\nnums = map(int, raw_input().strip().split())\nmax_s = nums[0]\nlow_s = nums[0]\ncount = 0\nfor a0 in range(1,n):\n\tif nums[a0]>max_s:\n\t\tcount+=1\n\t\tmax_s = nums[a0]\n\tif nums[a0]<low_s:\n\t\tcount+=1\n\t\tlow_s = nums[a0]\nprint count\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin\n\nn=int(stdin.readline().strip())\nlis =list(map(int,stdin.readline().strip().split()))\nmaxim=lis[0]\nminin=lis[0]\ncont=0\nfor i in range(1,n):\n    if lis[i]>maxim:\n        cont+=1\n        maxim=lis[i]\n\n    elif lis[i]<minin:\n        cont+=1\n        minin=lis[i]\nprint(cont)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = list(map(int,input().split()))\n_min = l[0]\n_max = l[0]\ncount = 0\nfor i in range (1,len(l)):\n    if l[i] > _max:\n        count+=1\n        _max = l[i]\n    elif l[i] < _min:\n        count+=1\n        _min = l[i]\n\nprint(count)"
        },
        {
            "language": 3,
            "solution": "a=int(input())\n\nc=0\np=input().split()\nmax=int(p[0])\nmin=int(p[0])\nfor i in range(1,a):\n    t=int(p[i])\n    if t<min:\n        c=c+1 \n        min=t \n    elif t>max:\n        c=c+1 \n        max=t \nprint(c)"
        },
        {
            "language": 1,
            "solution": "n = input()\na = map(int, raw_input().split())\nmin_ = a[0]; max_ = a[0]\nans = 0\nfor i in xrange(1, n):\n    if a[i] < min_ or a[i] > max_: ans += 1\n    min_, max_ = min(min_, a[i]), max(max_, a[i])\nprint ans"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nt=0\nans=0\nfor i in input().split():\n    t+=1\n    if t==1:\n        mini=int(i)\n        maxi=int(i)\n    else:\n        ii=int(i)\n        if ii>maxi:\n            ans+=1\n            maxi=ii\n        if ii<mini:\n            ans+=1\n            mini=ii\nprint(ans)\n"
        },
        {
            "language": 3,
            "solution": "n = input()\nlst = input().split()\nlst = [int(i) for i in lst]\nmi, mx, ans = lst[0], lst[0], 0\nfor i in lst[1:]:\n    if i < mi: mi = i; ans += 1\n    if i > mx: mx = i; ans += 1\nprint(ans)"
        },
        {
            "language": 3,
            "solution": "n=int(input ())\ns=[int(z) for z in input().split ()]\nmmx=s[0]\nmmn=mmx\nans=0\nfor i in s:\n    if i<mmn:\n        mmn=i\n        ans+=1\n    if i>mmx:\n        mmx=i\n        ans+=1\nprint (ans)"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class amazing {\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tScanner scan = new Scanner(System.in);\n\t\tint num = scan.nextInt();\n\t\t\n\t\tint min = scan.nextInt();\n\t\tint max = min;\n\t\tint count = 0;\n\t\tfor(int i = 1; i < num; i++) {\n\t\t\tint curr = scan.nextInt();\n\t\t\tif(curr < min){\n\t\t\t\tcount++;\n\t\t\t\tmin = curr;\n\t\t\t}\n\t\t\tif(curr > max){\n\t\t\t\tcount++;\n\t\t\t\tmax = curr;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(count);\n\n\t}\n\n}\n"
        },
        {
            "language": 3,
            "solution": "# coding=utf-8 \n# Created by TheMisfits \nfrom sys import stdin\n_input = stdin.readline\n_max, _int, _range, _min = max, int, range, min\ndef solution():\n    n = _int(_input())\n    a = [_int(i) for i in _input().split()]\n    _min = a[0]\n    _max = a[0]\n    ans = 0\n    for i in _range(1,n):\n        if a[i] < _min:\n            ans += 1\n            _min = a[i]\n        if a[i] > _max:\n            ans += 1\n            _max = a[i]\n    print(ans)\nsolution()"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nscore = [int(x) for x in input().split()]\npassed = [score[0]]\ncount = 0\nfor i in range(1, n):\n  if score[i] > max(passed) or score[i] < min(passed):\n    count += 1\n    passed.append(score[i])\n  else:\n    passed.append(score[i])\nprint(count)"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\npublic class Main{\n    public static void main(String args[])\n    {\n        Scanner sc=new Scanner(System.in);\n        int n=sc.nextInt();\n        int a[]=new int[n];\n        for(int k=0;k<n;k++)\n        {\n            a[k]=sc.nextInt();\n        }\n        int ans=0;\n        for(int i=1;i<n;i++)\n        {  int c=0,d=0;\n            for(int j=0;j<i;j++)\n            {\n                if(a[j]<a[i])\n                {\n                    c++;\n                }\n                if(a[j]>a[i])\n                {\n                    d++;\n                }\n            }\n            if(c==i || d==i)\n            {\n                ans++;\n            }\n        }\n        System.out.println(ans);\n    }\n}"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nlst = list(map(int, input().strip().split()))[:n]\nhighest = lst[0]\nlowest = lst[0]\namazing = 0\nfor score in lst:\n    if score > highest:\n        highest = score\n        amazing += 1\n    elif score < lowest:\n        lowest = score\n        amazing += 1\nprint(amazing)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nlist=[int(i) for i in input().split()]\nlist1=[list[0]]\nx=0\nfor i in list[1:n]:\n    if i>max(list1) or i<min(list1):\n        x+=1\n    list1.append(i)\nprint(x)"
        },
        {
            "language": 1,
            "solution": "n = input()\namazing = 0\nscores = map(int, raw_input().split())\nmaxx = scores[0]\nminn = scores[0]\nfor i in range(1, n):\n\tif(scores[i] > maxx):\n\t\tamazing += 1\n\t\tmaxx = scores[i]\n\telif(scores[i] < minn):\n\t\tamazing += 1\n\t\tminn = scores[i]\n\nprint amazing\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\ninp = list(map(int,input().split()))\nmaxi=inp[0]\nmini=inp[0]\ncount=0\nfor i in range(0,len(inp)):\n    if(inp[i]<mini):\n        count+=1\n        mini=inp[i]\n    elif(inp[i]>maxi):\n        count+=1\n        maxi=inp[i]\nprint (count)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int,input().split()))\nc = 0\nmi = 100000;ma = -10\nfor i in range(1,len(a)) :\n    mi = min(a[i-1],mi)\n    ma = max(a[i-1],ma)\n    if(a[i]>ma or a[i]<mi) :\n        c += 1\nprint(c)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\no=0\ni=1\nwhile i<n:\n\tif a[i]>max(a[0:i]) or a[i]<min(a[0:i]):\n\t\to+=1\n\ti+=1\nprint(o)\n\t\t"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\n\nscores = (tuple(int(i) for i in raw_input().split()))\n\nsmall = scores[0]\nlarge = scores[0]\nanswer = 0\n\nfor s in scores[1:]:\n  if s < small:\n    answer += 1\n    small = s\n  if s > large:\n    answer += 1\n    large = s\n\nprint answer\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=input().split()\na=list(map(int,a))\ns=0\nc=a[0]\nv=a[0]\nfor i in range(1,n):\n    if a[i]>c:\n        c=a[i]\n        s+=1\n    elif a[i]<v:\n        v=a[i]\n        s+=1\nprint(s)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\n\nlis=list(map(int,input().split()))\n\nupper=lis[0]\nlower=lis[0]\nc=0\nfor i in range(1,n):\n    if(lis[i]>upper):\n        c=c+1\n        upper=lis[i]\n    if(lis[i]<lower):\n        c=c+1\n        lower=lis[i]\nprint(c)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nk=0\nl=list(map(int,input().split()))\nfor i in range(1,n):\n    ma=max(l[:i])\n    mi=min(l[:i])\n    if l[i]>ma:\n        k=k+1\n    if l[i]<mi:\n        k=k+1\nprint(k)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(input().split())\nnum=0\nfor i in range(1,len(l)):\n    c=0 #\u6bcf\u4e2a\u5faa\u73af\u90fd\u8981\u590d\u539f\n    for j in range(i):\n        if int(l[i])>int(l[j]):\n            c+=1\n        elif int(l[i])<int(l[j]):\n            c+=-1\n    if c==i or c==-i:\n        num+=1\nprint(num)\n"
        },
        {
            "language": 3,
            "solution": "x=int(input());a=list(map(int,input().split()));p=0\nfor i in range(1,x+1):\n\tif max(a[:i])<a[:i+1][-1] or min(a[:i])>a[:i+1][-1]:\n\t\tp+=1\nprint(p)\n#author:SK__Shanto__\u32db\n#code__define__your__smartness"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().rstrip().split()))\nmx = mn = a[0]\nc = 0\nfor i in range(n):\n    if a[i]>mx:\n        c += 1\n        mx = a[i]\n    if a[i]<mn:\n        c+=1\n        mn = a[i]\nprint(c)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nma=a[0]\nmi=a[0]\nx=0\nfor i in range(1,n):\n    r=a[i]\n    if r>ma:\n        x+=1\n        ma=r\n    elif r<mi:\n        x+=1\n        mi=r\nprint(x)\n\n\n    \n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\n\na = list(map(int,input().split()))\n\nb = []\nb.append(a[0])\n\nx=0\n\nfor i in range(1,n):\n    if a[i]>max(b) or a[i]<min(b):\n        b.append(a[i])\n        x+=1\n    else:\n        x+=0\nprint(x)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nscores = [int(i) for i in input().split()]\nk = 0\nmin = scores[0]\nmax = scores[0]\n\nfor i in scores[1:]:\n    if i < min:\n        k += 1\n        min = i\n    elif i > max:\n        k += 1\n        max = i\n\n\nprint(k)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split(' ')))\nd=[]\nfor i in range(1,len(a)):  \n    b=max(a[i::-1])\n    c=min(a[i::-1])\n    if b not in a[i-1::-1] or c not in a[i-1::-1]:\n        if b==a[i] or c==a[i]:\n            d.append(a[i])\n    else:\n        continue\nd=set(d)\nprint(len(d))\n        "
        },
        {
            "language": 3,
            "solution": "\nn = input()\n\nx = [int(x) for x in input().split()]\n\nmax = x[0]\nmin = x[0]\ncount = 0\nfor i in x:\n    if i > max:\n        count = count + 1\n        max = i\n    elif i < min:\n        count = count + 1\n        min = i\n        \n        \nprint(count)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\ns1=input().split()\ns2=[]\nb=s1[0]\nam=0\nfor i in range(n):\n    a=int(s1[i])\n    s2.append(a)\n\nh=s2[0]\nl=s2[0]\nfor i in range(1,n):\n    if s2[i]>h:\n        am=am+1\n        h=s2[i]\n    if s2[i]<l:\n        am=am+1\n        l=s2[i]\n\nprint(am)"
        },
        {
            "language": 1,
            "solution": "n=raw_input()\narr=map(int,raw_input().split())\ncount=sum([1 for i in range(1,len(arr)) if arr[i]<min(arr[:i]) or arr[i]>max(arr[:i])]) \nprint count"
        },
        {
            "language": 3,
            "solution": "'''\nAmirhossein Alimirzaei\nTelegram : @HajLorenzo\nInstagram : amirhossein_alimirzaei\nUniversity of Bojnourd\n'''\n\n\nx=int(input())\nn=list(map(int,input().split()))\nc=0\nfor _ in range(1,x):\n    if((n[_]>max(n[0:_])) or n[_]<min(n[0:_])):\n        c+=1\n        #print(\"n : \",n[_])\nprint(c)\n"
        },
        {
            "language": 3,
            "solution": "n,arr = int(input()),list(map(int,input().split(' ')))\nmax,min,sum = arr[0],arr[0],0\nfor i in range(1,n):\n    if max<arr[i]:\n        sum += 1\n        max = arr[i]\n    elif min>arr[i]:\n        sum += 1\n        min = arr[i]\nprint(sum)\n"
        },
        {
            "language": 3,
            "solution": "#!/usr/bin/env python\n \nimport sys, math\n\nif __name__ == '__main__':\n    wtf = sys.stdin.read()\n    wtf = wtf.strip().split('\\n')\n    n = int(wtf[0])\n    scs = [int(w) for w in wtf[1].split(' ')]\n    #1\u2264n\u22641000\n    #10000\n    assert n >= 1 and n <= 1000, \"Precondition failure\"\n    M = scs[0]\n    m = scs[0]\n    ans = 0\n    for sc in scs[1:]:\n    \tif sc < M:\n    \t\tM = sc\n    \t\tans += 1\n    \tif sc > m:\n    \t\tm = sc\n    \t\tans += 1\n    print(ans)"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\nimport java.io.IOException;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.InputStream;\nimport java.math.BigInteger;\nimport java.util.Arrays;\nimport java.util.HashSet;\nimport java.util.Set;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        Task solver = new Task();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class Task {\n\n        public void solve(int testNumber, InputReader in, PrintWriter out) {\n\n            int n = in.nextInt();\n            int max = -1;\n            int min = 100000;\n            int l[] = new int[n];\n            if (n == 1) {\n                System.out.println(\"0\");\n                return;\n\n            }\n\n            l[0] = in.nextInt();\n\n            max = l[0];\n            min = l[0];\n            int amazing = 0;\n            for (int i = 1; i < n; i++) {\n\n                l[i] = in.nextInt();\n                if (l[i] > max) {\n\n                    amazing++;\n                    max = l[i];\n                }\n\n                if (l[i] < min) {\n\n                    amazing++;\n                    min = l[i];\n                }\n\n            }\n\n            System.out.println(amazing);\n        }\n    }\n\n    static class InputReader {\n\n        public BufferedReader reader;\n        public StringTokenizer tokenizer;\n\n        public InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\n            tokenizer = null;\n        }\n\n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint coders, a[1002], ans;\nbool ok, ok2, ok3, ok4;\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  cin >> coders;\n  for (int i = 0; i < coders; i++) cin >> a[i];\n  for (int i = 1; i < coders; i++) {\n    ok = false, ok2 = true;\n    ok3 = false, ok4 = true;\n    int z = i, cur = a[i];\n    while (z--) {\n      if (a[i] > a[z])\n        ok = true;\n      else\n        ok2 = false;\n      if (a[i] < a[z])\n        ok3 = true;\n      else\n        ok4 = false;\n    }\n    if (ok && ok2 || ok3 && ok4) ans++;\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "######################################################\n############Created by Devesh Kumar###################\n#############devesh1102@gmail.com####################\n##########For CodeForces(Devesh1102)#################\n#####################2020#############################\n######################################################\nimport sys\ninput = sys.stdin.readline\n\n# import sys\nimport heapq \nimport copy\nimport math\nimport decimal\n# import sys.stdout.flush as flush\n# from decimal import *\n#heapq.heapify(li) \n#\n#heapq.heappush(li,4) \n#\n#heapq.heappop(li)\n#\n# &\tBitwise AND Operator\t10 & 7 = 2\n# |\tBitwise OR Operator\t10 | 7 = 15\n# ^\tBitwise XOR Operator\t10 ^ 7 = 13\n \n# <<\tBitwise Left Shift operator\t10<<2 = 40\n# >>\tBitwise Right Shift Operator\n# '''############ ---- Input Functions ---- #######Start#####'''\n \n\ndef inp():\n\treturn(int(input()))\ndef inlt(): \n\treturn(list(map(int,input().split())))\ndef insr():\n\ts = input()\n\treturn(list(s[:len(s) - 1]))\ndef insr2():\n\ts = input()\n\treturn((s[:len(s) - 1]))\ndef invr():\n\treturn(map(int,input().split()))\n ############ ---- Input Functions ---- #######End\n # #####   \ndef pr_list(a):\n\tprint(*a, sep=\" \")\ndef main():\n\t# tests =  inp()\n\ttests = 1\n\tmod = 998244353\n \n\tlimit = 10**18\n\tans = 0\n\tfor test in range(tests):\n\t\tn = inp()\n\t\ta = inlt()\n\t\tmini = a[0]\n\t\tmaxi = a[0]\n\t\tans = 0\n\t\tfor i in range(1,n):\n\t\t\tif a[i]>maxi:\n\t\t\t\tans+= 1\n\t\t\t\tmaxi = a[i]\n\t\t\telif a[i] < mini:\n\t\t\t\tans = ans + 1\n\t\t\t\tmini = a[i]\n\t\tprint(ans)\n\nif __name__== \"__main__\":\n\tmain()"
        },
        {
            "language": 3,
            "solution": "a = input()\nline = [int(i) for i in input().split()]\nma=line[0]\nmi=line[0]\nj=0\nfor i in line:\n    if i >ma:\n        j+=1\n        ma=i\n    elif i<mi:\n        j+=1\n        mi=i\nprint(j)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nlis=list(map(int,input().split()))\nbest=lis[0]\nworst=lis[0]\nres=0\nfor i in range(1,n):\n\tif(lis[i]>best):\n\t\tres+=1\n\t\tbest=lis[i]\n\telif(lis[i]<worst):\n\t\tres+=1\n\t\tworst=lis[i]\nprint(res)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[int(i) for i in input().split()]\nl=[]\nl.append(a[0])\na.remove(a[0])\ns=0\nwhile a!=[]:\n    x=max(l)\n    y=min(l)\n    if y<=a[0]<=x:\n        s+=0\n    else:\n        s+=1\n    l.append(a[0])\n    a.remove(a[0])\nprint(s)\n    "
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = map(int, input().split())\na = list(a)\na1 = [a[0]]\namazing = 0\nminNumber = a[0]\nmaxNumber = a[0]\nfor i in range(n - 1):\n    a1.append(a[i + 1])\n    if a[i + 1] == max(a1) and maxNumber != a[i + 1] or a[i + 1] == min(a1) and minNumber != a[i + 1]:\n        amazing = amazing + 1\n        if a[i + 1] == max(a1):\n            maxNumber = a[i + 1]\n        elif a[i + 1] == min(a1):\n            minNumber = a[i + 1]\nprint(amazing)"
        },
        {
            "language": 1,
            "solution": "__author__ = 'deveshbajpai'\n\n\n\ndef solve(scores):\n    smallest = largest = scores[0]\n    amazing = 0\n    for score in scores[1:]:\n        if(score < smallest):\n            smallest = score\n            amazing+=1\n        if(score > largest):\n            largest = score\n            amazing+=1\n    return amazing\n\nif __name__ == \"__main__\":\n\n    n = int(input())\n    scores = map(int,raw_input().split(\" \"))\n    print solve(scores)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int i, num, max = 0, min = 0, count = 0;\n  cin >> num;\n  int a[num];\n  for (i = 0; i < num; i++) cin >> a[i];\n  max = min = a[0];\n  for (i = 0; i < num; i++) {\n    if (a[i] > max) {\n      ++count;\n      max = a[i];\n    } else if (a[i] < min) {\n      ++count;\n      min = a[i];\n    }\n  }\n  cout << count << endl;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys,os,io,time\nif os.path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\n\n\ndef main():\n    n=int(input())\n    arr=list(map(int,input().split()))\n    mi=arr[0]\n    ma=arr[0]\n    res=0\n    for i in range(1,n):\n        if arr[i]<mi:\n            mi=arr[i]\n            res+=1\n        if arr[i]>ma:\n            ma=arr[i]\n            res+=1\n    print(res)\n\nmain()"
        },
        {
            "language": 3,
            "solution": "#ashu@gate22\nn=int(input())\nl=list(map(int,input().split()))\nmx=mn=l[0]\nno=0\nfor i in l:\n    if i>mx :\n        no+=1\n        mx=i\n    elif i<mn:\n        no+=1\n        mn=i\nprint(no)        "
        },
        {
            "language": 3,
            "solution": "\n\nn = int(input())\n\nnums = [int(x) for x in input().split()]\n\nmaxn = minn = nums[0]\namaze = 0\nfor x in range(1,n):\n    if nums[x] > maxn:\n        maxn = nums[x]\n        amaze += 1\n\n    if nums[x] < minn:\n        minn = nums[x]\n        amaze += 1\n\nprint(amaze)\n"
        },
        {
            "language": 3,
            "solution": "\ninput()\n\namazing = 0\n\nperformances = [int(num) for num in input().split()]\n\nbest = performances[0]\nworst = performances[0]\n\nfor performance in performances[1:]:\n    if performance > best:\n        best = performance\n        amazing += 1\n    if performance < worst:\n        worst = performance\n        amazing += 1\n\nprint(amazing)\n\n\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\n\nmaxb = a[0]\nminb = a[0]\ncnt = 0\n\nfor i in range(1, n):\n    if a[i] < minb:\n        minb = a[i]\n        cnt += 1\n    if a[i] > maxb:\n        maxb = a[i]\n        cnt += 1\n        \nprint(cnt)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = input().split()\nmin1 = int(a[0])\nmax1 = int(a[0])\nk = 0\nl = 0\nfor i in range(1,n):\n    if int(a[i]) > max1:\n        max1 = int(a[i])\n        k+=1\nfor j in range(1,n):\n    if int(a[j]) < min1:\n        min1 = int(a[j])\n        l+=1\nprint(k+l)"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.*;\nimport java.io.*;\n\npublic class A155 {\n    static class FastReader {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public FastReader() {\n            br = new BufferedReader(new\n                    InputStreamReader(System.in));\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine() {\n            String str = \"\";\n            try {\n                str = br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n    }\n\n    public static void main(String[] args) {\n        FastReader scn = new FastReader();\n        int n = scn.nextInt();\n        if(n==1){\n            System.out.println(0);\n            return;\n        }\n        int result = 0;\n        int low = scn.nextInt();\n        int high = low;\n        for(int i=1;i<n;i++){\n            int x = scn.nextInt();\n            if(low>x){\n                low = x;\n                result++;\n            }\n            if(x>high){\n                high = x;\n                result++;\n            }\n        }\n        System.out.println(result);\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "n, x, r = int(input()), input().split(), 0\nmx = mn = int(x.pop(0))\n\nfor i in x:\n    y = int(i)\n    if y > mx:\n        mx, r = y, r+1\n    else:\n        if y < mn:\n            mn, r = y, r+1\n\nprint(r)\n\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nx=0\na=list(map(int,input().split()))\nmi=a[0]\nma=a[0]\nfor i in a[1:]:\n    if i>ma:\n        ma=i\n        x+=1\n    elif i<mi:\n        mi=i\n        x+=1\nprint(x)\n\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\ncount=0\nN=list(map(int, input().split()))\nfor i in range(1,len(N)):\n     max1 = max(N[0:i])\n     min1 = min(N[0:i])\n     if N[i]>max1 or N[i]<min1:\n           count+=1\nprint (count)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().strip().split()))\nmi=ma=a[0]\nc=0\nfor i in range(1,n):\n    if(a[i]<mi):\n        mi=a[i]\n        c+=1\n    elif a[i]>ma :\n        ma=a[i]\n        c+=1\nprint(c)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\nx = a[0]\ny = a[0]\ncount = 0\nfor i in a:\n\tif i > x:\n\t\tx = i\n\t\tcount+=1\n\tif i < y:\n\t\ty = i\n\t\tcount+=1\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = list(map(int,input().split()))\ns = []\nc = 0\ns.append(l[0])\nfor i in range(1,n):\n    if(l[i] > max(s)):\n        c = c + 1\n    elif(l[i] < min(s)):\n        c = c + 1\n    else:\n        c = c\n    s.append(l[i])\nprint(c)"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\na = map(int, raw_input().split())\n\ncurmin = a[0]\ncurmax = a[0]\n\nresult = 0\n\nfor val in a:\n    if val > curmax:\n        curmax = val\n        result += 1\n    elif val < curmin:\n        curmin = val\n        result += 1\n\nprint result\n"
        },
        {
            "language": 3,
            "solution": "from sys import exit\nn=int(input())\nv=[int(x) for x in input().split()]\ncount=1\nc=20000\nif len(v)==1:\n    print('0')\n    exit(0)\nfor i in range(len(v)-1):\n        if v[i]!=v[i+1]:\n            c=i\n            break\nif c==20000:\n    print('0')\n    exit(0)\nif v[c]>v[c+1]:\n    l=v[c]\n    s=v[c+1]\n    for i in range(c+2,len(v)):\n        if v[i]>l:\n            count+=1\n            l=v[i]\n        elif v[i]<s:\n            count+=1\n            s=v[i]\n    print(count)\nelif v[c]<v[c+1]:\n    s=v[c]\n    l=v[c+1]\n    for i in range(c+2,len(v)):\n        if v[i]>l:\n            count+=1\n            l=v[i]\n        elif v[i]<s:\n            count+=1\n            s=v[i]\n    print(count)"
        },
        {
            "language": 1,
            "solution": "n=input()\ncount=0\na=map(int,raw_input().split())\nif n==0|1:\n\tprint '0'\nelse:\n\tfor i in range(1,n):\n\t\tif  a[i] >max(a[:i]) or a[i]<min(a[:i]):\n\t\t\tcount+=1\n\tprint count"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\n\nlines = map(int, raw_input().split())\n\nleast_number = lines[0]\nmost_number = lines[0]\n\nresult = 0\n\nfor i in range(len(lines)):\n    if lines[i] < least_number:\n        least_number = lines[i]\n        result += 1\n    if lines[i] > most_number:\n        most_number = lines[i]\n        result += 1\n\nprint result"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=input().split()\nb=[int(a[0])]\ns=0\nfor i in range(1,n):\n    if int(a[i])>max(b) or int(a[i])<min(b):\n        s+=1\n    b.append(int(a[i]))\nprint(s)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=[int(i) for i in input().split(\" \")]\ncount=0\nmaxi=mini=l[0]\nfor i in l[1:]:\n  if(i<mini):\n    count+=1\n    mini=i\n  elif(i>maxi):\n    count+=1\n    maxi=i\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\ndata = list(map(int, input().split()))\nM, m = data[0], data[0]\namazing = 0\nfor i in range(1, n):\n    if data[i] > M or data[i] < m:\n        amazing += 1\n        M = max(data[i], M)\n        m = min(data[i], m)\n\nprint(amazing)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\npoints = list(map(int, input().split()))\n\nMax, Min = points[0], points[0]\nres = 0\n\nfor x in points:\n    if x < Min:\n        Min = x\n        res += 1\n    if x > Max:\n        Max = x\n        res += 1\n\nprint(res)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = list(map(int, input().split()))\n\nmax_num = min_num = l[0]\n\namazing = 0\nfor i in l[1:]:\n    if i>max_num:\n        max_num = i\n        amazing+=1\n    if i<min_num:\n        min_num = i\n        amazing+=1\n        \nprint(amazing)"
        },
        {
            "language": 3,
            "solution": "n = input()\nline = input().split()\nc = len(line)\nif c >1:\n    big = max(int(line[0]),int(line[1]))\n    small = min(int(line[0]),int(line[1]))\n    amazing = 0\n    for i in range(1,c):\n            if int(line[i]) > big:\n                amazing = amazing+1\n                big = int(line[i])\n            if int(line[i]) < small:\n                amazing = amazing+1\n                small = int(line[i])\n    if line[0]!=line[1]:\n        amazing =amazing+1\nelse:\n    amazing = 0\nprint(amazing)\n                \n            \n    \n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\n/**\n * @author Son-Huy TRAN\n * \n */\npublic class P155A_ILoveUsername {\n\n\tprivate static int countAmazingPerformances(int nPerformances,\n\t\t\tint[] performances) {\n\t\tif (nPerformances < 1) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tint minPerformance = performances[0];\n\t\tint maxPerformance = performances[0];\n\t\tint amazingPerformances = 0;\n\n\t\tfor (int i = 1; i < nPerformances; i++) {\n\t\t\tint currentPerformance = performances[i];\n\n\t\t\tif (currentPerformance > maxPerformance) {\n\t\t\t\tamazingPerformances++;\n\t\t\t\tmaxPerformance = currentPerformance;\n\t\t\t} else if (currentPerformance < minPerformance) {\n\t\t\t\tamazingPerformances++;\n\t\t\t\tminPerformance = currentPerformance;\n\t\t\t}\n\t\t}\n\n\t\treturn amazingPerformances;\n\t}\n\n\t/**\n\t * @param args\n\t */\n\tpublic static void main(String[] args) {\n\t\tScanner scanner = new Scanner(System.in);\n\n\t\tint nPerformances = scanner.nextInt();\n\t\tint[] performances = new int[nPerformances];\n\n\t\tfor (int i = 0; i < nPerformances; i++) {\n\t\t\tperformances[i] = scanner.nextInt();\n\t\t}\n\n\t\tscanner.close();\n\n\t\tint result = countAmazingPerformances(nPerformances, performances);\n\t\tSystem.out.println(result);\n\t}\n}\n"
        },
        {
            "language": 3,
            "solution": "def main():\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    l = list(set(l))\n    counter = 1\n\n    r = 0\n\n    for i in range(0,len(l) - 1):\n        if l[i] == l[i+1]:\n            r += 1\n        else:\n            break\n\n    if len(l) == 1:\n        counter -= 1\n    elif l[r] > l[r+1]:\n        p = l[r]\n        q = l[r+1]\n    elif l[r] < l[r+1]:\n        p = l[r+1]\n        q = l[r]\n\n    for i in range(1, len(l)):\n        if l[i] > p:\n            p = l[i]\n            counter += 1\n        elif l[i] < q:\n            q = l[i]\n            counter += 1\n    print(counter)\n\n\nif __name__ == \"__main__\":\n    main()\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\nb = [a[0]]\ncount = 0\nfor i in range(1,n):\n    if a[i] > max(b):\n        count += 1\n    elif a[i] < min(b):\n        count += 1\n    b.append(a[i])\nprint(count)\n    \n"
        },
        {
            "language": 3,
            "solution": "N = int(input())\nscores = [ int(i) for i in input().split() ]\nMAX = scores[0]\nMIN = scores[0]\namazing = 0\nfor i in range(1, N):\n    if scores[i] > MAX:\n        amazing += 1\n        MAX = scores[i]\n    elif scores[i] < MIN:\n        amazing += 1\n        MIN = scores[i]\nprint(amazing)"
        },
        {
            "language": 3,
            "solution": "c = int(input())\ns = 0\ncoms = input().split(' ')\nma = mi = int(coms[0])\nfor i in range(c):\n    cur = int(coms[i])\n    if cur > ma:\n        ma = cur\n        s += 1\n    else:\n        if cur < mi:\n            mi = cur\n            s += 1\nprint(s)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nlist=[int(x) for x in input().split()]\nmin=list[0]\nmax=list[0]\nm=0\nfor i in range(n):\n\tif list[i]>max:\n\t\tmax=list[i]\n\t\tm+=1\n\telif list[i]<min:\n\t\tmin=list[i]\n\t\tm+=1\n\telse:\n\t\tm+=0\nprint(m)\n"
        },
        {
            "language": 1,
            "solution": "a = int(raw_input())\nb = map(int, raw_input().split())\nc=0\nd_m=b[0]\nd_min=b[0]\nfor i in range(1,a):\n    if b[i]>d_m:\n        d_m = b[i]\n        c+=1\n    if b[i]<d_min:\n        d_min = b[i]\n        c+=1\nprint c\n    "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint s[1000];\nint main() {\n  int a, b, c, result;\n  result = 0;\n  scanf(\"%d\", &a);\n  for (int i = 0; i < a; ++i) {\n    scanf(\"%d\", &s[i]);\n  }\n  b = s[0];\n  c = s[0];\n  for (int i = 0; i < a; i++) {\n    if (s[i] > b) {\n      b = s[i];\n      result++;\n    } else if (s[i] < c) {\n      c = s[i];\n      result++;\n    }\n  }\n  printf(\"%d\", result);\n}\n"
        },
        {
            "language": 3,
            "solution": "n=input()\narr=[int(x) for x in input().split()]\nc,minx,maxx=0,arr[0],arr[0]\nfor i in arr:\n        if i>maxx:\n                maxx=i\n                c+=1\n        elif i<minx:\n                minx=i\n                c+=1\nprint(c) "
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = [int(i) for i in input().split()]\nmaxi =a[0]\nmini =a[0]\no = 0\nfor i in a:\n    if i > maxi:\n        o += 1\n        maxi = i\n    elif i < mini:\n        o += 1\n        mini = i\nprint(o)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\ns = input().split(\" \")\ns = [int(n) for n in s]\nmaxim = s[0]\nminim = s[0]\namazing = 0\nfor i in range(1, len(s)):\n      contest = s[i]\n      \n      if contest > maxim:\n              \n              amazing += 1\n              maxim = contest\n      elif contest < minim:\n              amazing += 1\n              minim = contest\n              \n\nprint(amazing)\n"
        },
        {
            "language": 3,
            "solution": "n=input()\nm=input()\na=m.split()\nx=1\nb=[]\nsum=0\nwhile x<int(n):\n    b.append(int(a[x-1]))\n    b.sort()\n    if int(a[x])<b[0] or int(a[x])>b[x-1]:\n        sum+=1\n    else:\n        pass\n    x+=1\nprint(sum)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nc=0\nfor i in range(n-1):\n    if((l[i+1]>l[i]) and (l[i+1]>max(l[0:i+1]))):\n            c+=1\n    if((l[i+1]<l[i]) and (l[i+1]<min(l[0:i+1]))):\n            c+=1\nprint(c)"
        },
        {
            "language": 3,
            "solution": "x = int(input())\ne = list(map(int,input().split()))\nmakc = e[0]\nminimum = e[0]\nV = 0\nfor i in e:\n    if i > makc and i > minimum:\n        makc = i\n        V += 1\n    elif i < minimum and i < makc:\n        minimum = i\n        V += 1\nprint (V)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  int K = 0, l = 9999999, h, R = 0;\n  for (int i = 0; i < n; i++) {\n    cin >> K;\n    if (i == 0) {\n      l = K;\n      h = K;\n    }\n    if (h < K) {\n      R++;\n      h = K;\n    }\n    if (l > K) {\n      R++;\n      l = K;\n    }\n  }\n  cout << R << endl;\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "var n=+readline();\n\nvar a=readline().split(' ').map(function(v){return +v;});\n\nvar min=a[0];\nvar max=a[0];\nvar ans=0;\nfor(var i=1; i<n; i++){\n\tif(a[i]>max){\n\t\tans++;\n\t\tmax=a[i];\n\t}else if(a[i]<min){\n\t\tans++;\n\t\tmin=a[i];\n\t}\n}\nprint(ans);"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\npublic class ILovernaveensrinivas {\n    public static void main ( String[] args ){\n        Scanner get = new Scanner(System.in);\n\n        int numberOfInputs = get.nextInt();\n        int counter = 0 ;\n        int min ;\n        int max =0 ;\n\n        int[] scores = new int[numberOfInputs + 1];\n        for( int i = 0 ; i < numberOfInputs ; ++i )\n            scores[i] = get.nextInt();\n\n        min = scores[0];\n        for( int i = 1; i< numberOfInputs; ++i)\n            if ( scores[i] < min) {\n                min = scores[i];\n                counter++;\n            }\n        max = scores[0];\n        for( int i = 1; i< numberOfInputs; ++i)\n            if ( scores[i] > max) {\n                counter++;\n                max = scores[i];\n            }\n        \n        System.out.println(counter);\n    }\n}"
        },
        {
            "language": 3,
            "solution": "n = int(input())\ns = [int(x) for x in input().split()]\n\n\nans = 0\nfor i in range(1,n):\n  if s[i] < min(s[:i]) or s[i] > max(s[:i]):\n    ans += 1\nprint(ans)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nx=a[:1]\nfor i in a:\n    mi = min(x)\n    ma = max(x)\n    if mi <= i <= ma:\n        n-= 1\n    x += [i]\nprint(n)"
        },
        {
            "language": 3,
            "solution": "#!/usr/bin/env python\n# coding: utf-8\n\n# In[29]:\n\n\nn=input()\nmarks=input().split()\ncount=0\nfor i in range(len(marks)):\n    mark=int(marks[i])\n    if i==0:\n        max=mark\n        min=mark\n    elif mark>max:\n        count+=1\n        max=mark\n    elif mark<min:\n        count+=1\n        min=mark\nprint(count)\n\n\n# In[ ]:\n\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = input().split()\nsum = 0\nM = m = int(l[0])\nfor i in range(len(l)-1):\n    if int(l[i+1])> M:\n        M = int(l[i+1])\n        sum += 1\n    if int(l[i+1])< m:\n        m = int(l[i+1])\n        sum += 1\nprint(sum)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\narr=list(map(int,input().split()))\ncount=0\nfor i in range(1,len(arr)):\n\tbest=max(arr[:i])\n\tworst=min(arr[:i])\n\tif arr[i]<worst or arr[i]>best:\n\t\tcount=count+1\nprint(count)\n"
        },
        {
            "language": 3,
            "solution": "__author__ = 'myduomilia'\n\nn = int(input())\narr = list(map(int, input().split()))\n\nminimum = maximum = arr[0]\nans = 0\nfor i in range(1, len(arr)):\n    if arr[i] > maximum:\n        maximum = arr[i]\n        ans += 1\n    if arr[i] < minimum:\n        minimum = arr[i]\n        ans += 1\nprint(ans)\n\n\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\narr = list(map(int, input().split()))\nless = arr[0]\nmore = arr[0]\ncount = 0\nfor i in range(1,n):\n    if arr[i]> more :\n        more = arr[i]\n        count+=1\n    if arr[i]<less:\n        less =arr[i]\n        count+=1\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = [int(i) for i in input().split()]\n\ncnt = 0\nless = l[0]\nmore = l[0]\n\nfor i in range(1,n):\n        if l[i] < less:\n                cnt += 1\n                less = l[i]\n\n        if l[i] > more:\n                cnt += 1\n                more = l[i]\n\nprint(cnt)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nipt = [int(x) for x in input().split()]\n\nmin_ = ipt[0]\nmax_ = ipt[0]\ncounter = 0\nfor i, val in enumerate(ipt):\n    if val > max_:\n        max_ = val\n        counter += 1\n    if val < min_:\n        min_ = val\n        counter += 1\n\nprint(counter)\n"
        },
        {
            "language": 1,
            "solution": "_ = int(raw_input())\nnn = map(int, raw_input().split())\nmin_n = nn[0]\nmax_n = nn[0]\nwhoa = 0\nfor n in nn:\n  if n < min_n:\n    whoa += 1\n    min_n = n\n  if n > max_n:\n    whoa += 1\n    max_n = n\nprint whoa\n"
        },
        {
            "language": 3,
            "solution": "n= int(input ())\n\ncntr=0\nvalue_list = []\nget_values = input()\nvalue_list = get_values.split()\nmin=int(value_list[0])\nmax=int(value_list[0])\nfor i in range (1,n):\n    if int(value_list[i])<int(min) :\n        min=value_list[i]\n        cntr+=1\n    if(int(value_list[i])>int(max)):\n        max= value_list[i]\n        cntr+=1\nprint(cntr)"
        },
        {
            "language": 3,
            "solution": "inp=int(input())\ninp1=input().split()\nmi, ma=int(inp1[0]), int(inp1[0])\ncount=0\nfor _ in range(1, inp):\n    if mi>int(inp1[_]):\n        count+=1\n        mi=int(inp1[_])\n    elif ma<int(inp1[_]):\n        count+=1\n        ma=int(inp1[_])\nprint(count)\n\n\t   \t\t\t   \t      \t\t\t\t\t \t \t\t\t\t \t"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = list(input().split())\na = []\namazing = 0\nl = [int(i) for i in l]\nmin = l[0]\nmax = l[0]\nfor i in range(1, n):\n    if l[i] < min:\n        min = l[i]\n        amazing += 1\n    elif l[i] > max:\n        max = l[i]\n        amazing += 1\nprint(amazing)"
        },
        {
            "language": 1,
            "solution": "n=int(raw_input())\na=[int(i) for i in raw_input().strip().split()]\ncnt=0\ns=set()\ns.add(a[0])\nfor k in a[1:]:\n    if k<min(s) or k>max(s):\n        cnt+=1\n    s.add(k)\nprint (cnt)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nk = input()\nk = [int(x) for x in k.split()]\nmax, min, kol = k[0], k[0], 0\nfor i in range(len(k)):\n    if k[i] > max:\n        max = k[i]\n        kol += 1\n    if k[i] < min:\n        min = k[i]\n        kol += 1\nprint(kol)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint diru[] = {-1, -1, -1, 0, 0, 1, 1, 1};\nint dirv[] = {-1, 0, 1, -1, 1, -1, 0, 1};\nusing namespace std;\ntemplate <class T>\nT sq(T n) {\n  return n * n;\n}\ntemplate <class T>\nT gcd(T a, T b) {\n  return (b != 0 ? gcd<T>(b, a % b) : a);\n}\ntemplate <class T>\nT lcm(T a, T b) {\n  return (a / gcd<T>(a, b) * b);\n}\ntemplate <class T>\nbool inside(T a, T b, T c) {\n  return a <= b && b <= c;\n}\ntemplate <class T>\nvoid setmax(T &a, T b) {\n  if (a < b) a = b;\n}\ntemplate <class T>\nvoid setmin(T &a, T b) {\n  if (b < a) a = b;\n}\ntemplate <class T>\nT power(T N, T P) {\n  return (P == 0) ? 1 : N * power(N, P - 1);\n}\nint main() {\n  int i, n, res, num, mini, maxi;\n  while (scanf(\"%d\", &n) == 1) {\n    scanf(\"%d\", &num);\n    maxi = mini = num;\n    res = 0;\n    for (i = 0; i < n - 1; i++) {\n      scanf(\"%d\", &num);\n      if (num > maxi) {\n        res++;\n        maxi = num;\n      }\n      if (num < mini) {\n        res++;\n        mini = num;\n      }\n    }\n    printf(\"%d\\n\", res);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nmin_f=a[0];max_f=a[0]\nudivlenie=0\nfor i in range(1,n):\n    if a[i]>max_f:\n        udivlenie+=1\n        max_f=a[i]\n    if a[i]<min_f:\n        udivlenie+=1\n        min_f=a[i]\nprint(udivlenie)"
        },
        {
            "language": 1,
            "solution": "n = input()\narr = map(int, raw_input().split())\ni = 1\nmn = arr[0]\nmx = arr[0]\nc = 0\n\nwhile i<n:\n    if arr[i]<mn:\n        c+=1\n        mn = arr[i]\n    elif arr[i]>mx:\n        c+=1\n        mx = arr[i]\n    i+=1\nprint c"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[int(i) for i in input().split()]\nb=a\nncount=0\nfor i in range (0,n-1):\n    c=b[:i+1]\n    c.sort()\n    #print(c)\n    if b[i+1]<c[0]:\n        ncount+=1\n    elif b[i+1]>c[i]:\n        ncount+=1\nprint (ncount)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nu=a[0]\nd=a[0]\nam=0\nfor i in a:\n    if i>u:\n        u=i\n        am+=1\n    if i<d:\n        d=i;\n        am+=1\nprint(am)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[int(i) for i in input().split()]\ncnt=0\nless=a[0]\nmore=a[0]\nfor i in range(1,n):\n    if a[i]<less:\n        cnt+=1\n        less=a[i]\n    if a[i]>more:\n        cnt+=1\n        more=a[i]\n\nprint(cnt)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\n\nl = list(map(int, input().split()))\n\nmi, ma = l[0], l[0]\nc = 0\n\nfor i in range(1, n):\n  if l[i] < mi:\n    c += 1\n    mi = l[i]\n  elif l[i] > ma:\n    c += 1\n    ma = l[i]\nprint(c)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nls = list(map(int, input().split()))\n\nans = 0\nmxN = ls[0]\nmnN = ls[0]\n\nfor i in range(1, n):\n    if ls[i] > mxN:\n        ans += 1\n        mxN = ls[i]\n    \n    if ls[i] < mnN:\n        ans += 1\n        mnN = ls[i]\n    \nprint(ans)"
        },
        {
            "language": 1,
            "solution": "\ndef find_amazing(scores):\n    maxm = scores[0]\n    minm = scores[0]\n    no_of_amaze = 0\n    length = xrange(1,len(scores))\n    for i in length:\n        if scores[i] > maxm:\n            no_of_amaze += 1\n            maxm = scores[i]\n        elif scores[i] < minm:\n            no_of_amaze += 1\n            minm = scores[i]\n    return no_of_amaze\n\n\n\nn = int(raw_input())\nscores = []\nscores = [ int(num) for num in raw_input().split(\" \")]\n\nprint find_amazing(scores)\n\n        \n    \n"
        },
        {
            "language": 3,
            "solution": "def Main():\n    n = int(input())\n    pts = list(map(int, input().split()))\n\n    namz = 0\n    minn = pts[0]\n    maxx = pts[0]\n    for i in range(1, n):\n        if pts[i] < minn:\n            minn = pts[i]\n            namz += 1\n        elif pts[i] > maxx:\n            maxx = pts[i]\n            namz += 1\n\n    print(namz)\n\n\nif __name__ == \"__main__\":\n    Main()\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nli=[int(i) for i in input().split(\" \")]\ncnt,mn,mx=0,li[0],li[0]\nfor i in range(1,n):\n\tif li[i]<mn:\n\t\tcnt+=1\n\telif li[i]>mx:\t\n\t\tcnt+=1\n\tmn=min(mn,li[i])\n\tmx=max(mx,li[i])\nprint(cnt)"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.StringTokenizer;\npublic class CF0155A\n{\n public static void main(String[] helloWorld) throws IOException\n {\n  BufferedReader sIn = new BufferedReader(new InputStreamReader(System.in));\n  int n = Integer.parseInt(sIn.readLine());\n  StringTokenizer sT = new StringTokenizer(sIn.readLine());\n  int min, max;\n  min = max = Integer.parseInt(sT.nextToken());\n  int count = 0;\n  for (int i = 1; i < n; i ++)\n  {\n   int c = Integer.parseInt(sT.nextToken());\n   if (c > max)\n   {\n    max = c;\n    count ++;\n   }\n   if (c < min)\n   {\n    min = c;\n    count ++;\n   }\n  }\n  System.out.println(count);\n }\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\ns=[int(i) for i in input().split()]\nbest=s[0]\nworst=s[0]\nncount=0\nfor i in range(1,n):\n    if s[i]>best:\n        ncount+=1\n        best=s[i]\n    elif s[i]<worst:\n        ncount+=1\n        worst=s[i]\n    else:\n        continue\nprint(ncount)\n        \n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\n\npublic class CF155A {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int max = sc.nextInt();\n        int min = max;\n        int amazing = 0;\n        for (int i = 1; i < n; i++) {\n            int p = sc.nextInt();\n            if (p > max) {\n                amazing++;\n                max = p;\n            }\n            if (p < min) {\n                amazing++;\n                min = p;\n            }\n        }\n        System.out.println(amazing);\n    }\n\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nscores=list(map(int,input().split()))\nsmallest = largest = scores[0]\namazing = 0\nfor score in scores[1:]:\n    if(score < smallest):\n        smallest = score\n        amazing+=1\n    if(score > largest):\n        largest = score\n        amazing+=1\nprint(amazing)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=[int(i) for i in input().split()]\nt=0\nfor i in range(1,n):\n    if l[i]>max(l[0:i]) or l[i]<min(l[0:i]):\n        t+=1\nprint(t)\n"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nb=[int(i) for i in input().split()]\nmax=b[0]\nmin=b[0]\nd=0\nfor i in b:\n\tif i<min:\n\t\td+=1\n\t\tmin=i\n\telif i>max:\n\t\td+=1\n\t\tmax=i\nprint(d)"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\npublic class P155A\n{\n\tpublic static void main(String[] args)\n\t{\n\t\tScanner scan = new Scanner(System.in);\n\t\tint n = scan.nextInt();\n\t\tint first = scan.nextInt();\n\t\tint max = first, min = first;\n\t\tint amazing = 0;\n\t\tfor (int i = 1; i < n; i++)\n\t\t{\n\t\t\tint p = scan.nextInt();\n\t\t\tif (p > max)\n\t\t\t{\n\t\t\t\tmax = p;\n\t\t\t\tamazing++;\n\t\t\t}\n\t\t\telse if (p < min)\n\t\t\t{\n\t\t\t\tmin = p;\n\t\t\t\tamazing++;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(amazing);\n\t\tscan.close();\n\t}\n}"
        },
        {
            "language": 3,
            "solution": "# your code goes here\n# your code goes here\nn = int(input())\na = [int(i) for i in input().split()]\nif len(a)==1:\n    print(\"0\")\nelse:\n    c=0\n    x = a[0]\n    y = a[0]\n    for i in range(1,len(a)):\n        if a[i]>x:\n            c+=1\n            x=a[i]\n        elif a[i]<y:\n            c+=1\n            y=a[i]\n    print(c)"
        },
        {
            "language": 3,
            "solution": "if __name__ == '__main__':\n    n = int(input().strip())\n    arr = [int(__) for __ in input().strip().split()]\n    ma = mi = arr[0]\n    ans = 0\n    for i in range(1, n):\n        if arr[i] > ma:\n            ans += 1\n            ma = arr[i]\n        elif arr[i] < mi:\n            ans += 1\n            mi = arr[i]\n    print(ans)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=[int(i) for i in input().split()]\nk=0\nm=[l[0]]\nfor i in range(1,n):\n    if int(max(m))<int(l[i]) or int(min(m))>int(l[i]):\n        k=k+1\n    else:\n        pass\n    m.append(l[i])\nprint(k)\n\n    \n    \n"
        },
        {
            "language": 3,
            "solution": "#!/bin/python3\n\nint(input())\nscore = [int(i) for i in input().split()]\nbest = score[0]\nworst = score[0]\nc = 0\n\nfor x in score[1:]:\n\tif x > best or x < worst:\n\t\tc += 1\n\n\t\tif x > best:\n\t\t\tbest = x\n\t\telif x < worst:\n\t\t\tworst = x\n\t\t\nprint(c)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long int n;\n  cin >> n;\n  int mi = 0, mx = 0, a, cnt = 0, aa;\n  cin >> aa;\n  mi = aa;\n  mx = aa;\n  while (n > 1) {\n    cin >> a;\n    if (a < mi) {\n      mi = a;\n      cnt++;\n    }\n    if (a > mx) {\n      mx = a;\n      cnt++;\n    }\n    n--;\n  }\n  cout << cnt << endl;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nc=0\nfor i in range(1,n):\n    if a[i]>max(a[:i]):\n        c+=1\n    elif a[i]<min(a[:i]):\n        c+=1\nprint(c)\n"
        },
        {
            "language": 3,
            "solution": "length=int(input())\nscore=list(map(int,input().split(' ')))\nmax=score[0]\nmin=score[0]\ncount=0\nfor i in range(1,length):\n    if(score[i]>max):\n        max=score[i]\n        count+=1\n    elif(score[i]<min):\n        min=score[i]\n        count+=1\n    else:\n        continue\nprint(count)\n\n\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class I_love_username {\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc=new Scanner(System.in);\n\t\tint n=sc.nextInt();\n\t\tint arr[]=new int[n];\n\t\tint count=0;\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t\tarr[i]=sc.nextInt();\n\t\t}\n//\t\tint min=Integer.MAX_VALUE;\n//\t\tint max=Integer.MIN_VALUE;\n//\t\tfor(int i=1;i<n;i++)\n//\t\t{\n//\t\t\tif(arr[i]>max)\n//\t\t\t{\n//\t\t\t\tmax=arr[i];\n//\t\t\t}\n//\t\t\telse if(arr[i]<min)\n//\t\t\t{\n//\t\t\t\tmin=arr[i];\n//\t\t\t}\n//\t\t}\n//\t\tSystem.out.println(max+\" \"+min);\n\t\tint x=arr[0];\n\t\tint y=arr[0];\n\t\tfor(int i=1;i<n;i++)\n\t\t{\n\t\t\tif(arr[i]>x && arr[i]>=y)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t\tx=arr[i];\n\t\t\t}\n\t\t\telse if(arr[i]<x && arr[i]<y)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t\ty=arr[i];\n\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t}\n\t\tSystem.out.println(count);\n\t}\n\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main(int argc, char const *argv[]) {\n  int n = 0;\n  cin >> n;\n  int minimum = 10001;\n  cin >> minimum;\n  int maximum = minimum;\n  int coolnessCount = 0;\n  for (int i = 1; i < n; i++) {\n    int currentNumber;\n    cin >> currentNumber;\n    if (currentNumber > maximum) {\n      coolnessCount += 1;\n      maximum = currentNumber;\n    }\n    if (currentNumber < minimum) {\n      coolnessCount += 1;\n      minimum = currentNumber;\n    }\n  }\n  cout << coolnessCount << \"\\n\";\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nline_=input()\nline=[int(i) for i in line_.split()]\ni=1\ncount=0\nmax=line[0]\nmin=line[0]\nwhile i<len(line):\n    if line[i]>max :\n        count=count+1\n        max=line[i]\n        i=i+1\n    elif line[i]<min:\n        count=count+1\n        min=line[i]\n        i=i+1\n    else:\n        count=count\n        i=i+1\nprint(count)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nscores = [int(i) for i in input().split()]\nmin = max = scores[0]\namazing = 0\n\nfor i in range(1, n):\n    if scores[i] > max:\n        max = scores[i]\n        amazing += 1\n    elif scores[i] < min:\n        min = scores[i]\n        amazing += 1\n\nprint(amazing)"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\nimport java.io.DataInputStream;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.math.BigInteger;\nimport java.util.Arrays;\nimport java.util.HashSet;\nimport java.util.Set;\nimport java.util.Stack;\npublic class fast{\n    \n\nstatic class Parser\n{\nfinal  int BUFFER_SIZE = 1 << 16;\n DataInputStream din;\n byte[] buffer;\n int bufferPointer, bytesRead;\npublic Parser(InputStream in)\n{\ndin = new DataInputStream(in);\nbuffer = new byte[BUFFER_SIZE];\nbufferPointer = bytesRead = 0;\n}\npublic int nextInt() throws Exception\n{\nint ret = 0;\nbyte c = read();\nwhile (c <= ' ') c = read();\nboolean neg = c == '-';\nif (neg) c = read();\ndo\n{\nret = ret * 10 + c - '0';\nc = read();\n} while (c > ' ');\nif (neg) return -ret;\nreturn ret;\n}\npublic long nextLong() throws Exception\n{\nlong ret = 0;\nbyte c = read();\nwhile (c <= ' ') c = read();\nboolean neg = c == '-';\nif (neg) c = read();\ndo\n{\nret = ret * 10 + c - '0';\nc = read();\n} while (c > ' ');\nif (neg) return -ret;\nreturn ret;\n}\npublic double nextDouble() throws Exception\n{\ndouble ret = 0;\nbyte c = read();\nwhile (c <= ' ') c = read();\nboolean neg = c == '-';\nif (neg) c = read();\ndo\n{\nret = ret * 10 + c - '0';\nc = read();\n} while (c > ' ');\nif (neg) return -ret;\nreturn ret;\n}\npublic String next() throws Exception\n{\nStringBuffer ret=new StringBuffer();\nbyte c = read();\nwhile (c <= ' ') c = read();\ndo\n{\nret = ret.append((char)c);\nc = read();\n} while (c > ' ');\nreturn ret.toString();\n}\nprivate void fillBuffer() throws Exception\n{\nbytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE);\nif (bytesRead == -1) buffer[0] = -1;\n}\nprivate byte read() throws Exception\n{\nif (bufferPointer == bytesRead) fillBuffer();\nreturn buffer[bufferPointer++];\n}\n}\nstatic class data{\n    public Integer a;\n    public Integer b;\n    \n}\npublic static void main (String[] args) throws Exception{\nParser s = new Parser(System.in);\nPrintWriter ww = new PrintWriter(System.out,true);\nint t=s.nextInt();\nint arr[]=new int[t];\nfor(int i=0;i<t;i++)\n    arr[i]=s.nextInt();\nint min=arr[0];\nint max=arr[0];\nint cnt=0;\nfor(int i=1;i<t;i++){\n    if(min>arr[i]){\n        min=arr[i];\n        cnt++;\n    }\n    else if(max<arr[i]){\n        max=arr[i];\n        cnt++;\n    }\n        \n    \n    \n        \n}\nww.println(cnt);\n\n    \n\n\n\nww.close();\n}\n}"
        },
        {
            "language": 1,
            "solution": "n=input()\na=map(int, raw_input().split())\nmaxx=a[0]\nminn=a[0]\notv=0\nfor i in a:\n\tif i>maxx or i<minn:\n\t\totv+=1\n\tmaxx=max(maxx, i)\n\tminn=min(minn, i)\nprint otv\t\t\n"
        },
        {
            "language": 3,
            "solution": "a=int(input())\nb=list(map(int,input().split()))\nn=1\ntt=0\nman=b[0]\nmins=b[0]\nfor i in range (a):\n    if b[i] > man:\n        \n        man=b[i]\n        tt+=1\n    elif b[i] < mins:\n        \n        mins=b[i]\n        tt+=1\nprint(tt)\n\t    \t\t  \t\t \t\t\t   \t \t\t \t  \t\t\t\t"
        },
        {
            "language": 3,
            "solution": "a = int(input())\nb = [int(x) for x in input().split()]\ncount = 0\nfor i in range(1, a):\n    if(all([b[i] < c for c in b[:i]]) or all([b[i] > c for c in b[:i]])):\n        count = count + 1\nprint(count) "
        },
        {
            "language": 3,
            "solution": "n=int(input())\nx=input().split()\nx=[int(i)for i in x]\ny=[x[0]]\nk=0\nfor i in x:\n    if i>max(y) or i<min(y):\n        k=k+1\n        y.append(i)\n\nprint(k)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\ncontests = list(map(int, input().split()))\nmx = contests[0]\nmn = contests[0]\ncount = 0\n\nfor i in range(0, n):\n    if contests[i] > mx:\n        mx = contests[i]\n        count+=1\n\n    if contests[i] < mn:\n        mn = contests[i]\n        count+=1\n\nprint(count)\n\n\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nargs = list(map(int, input().split()))\n\nminResult, maxResult = args[0], args[0]\ncount = 0\nfor i in range(1, len(args)):\n    if args[i] > maxResult:\n        count += 1\n        maxResult = args[i]\n    if args[i] < minResult:\n        count += 1\n        minResult = args[i]\n\nprint(count)\n"
        },
        {
            "language": 3,
            "solution": "a=int(input())\nb=input().split()\nc=0\nd=int(b[0])\nf=int(b[0])\nfor i in range (1,a):\n    if int(b[i])>d:\n        c+=1\n        d=int(b[i])\n    if int(b[i])<f:\n        c+=1\n        f=int(b[i])\nprint(c)\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\npublic class Training80 {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        int n = in.nextInt();if(n==1)System.out.println(0);\n        else{int max = 0;int min=0;int c=0;\n        int l = in.nextInt();int x = in.nextInt();\n        if(x>l){max = x;min = l; }\n        else {max = l;min = x;}\n        if(x==l)\n        c--;\n        c++;\n        for(int i=0;i<n-2;i++)\n        {x = in.nextInt();\n        if(x>max){max = x;c++;}\n        else if(x<min){min = x;c++;}}\n        System.out.println(c);}}}"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class Amazing{\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint testCases = sc.nextInt();\n\t\ttestCases--;\n\t\t\n\t\tint input = sc.nextInt();\n\t\tint max = input; \n\t\tint min = input;\n\t\tint count = 0;\n\n\t\twhile(testCases-- > 0){\n\t\t\tinput = sc.nextInt();\n\n\t\t\tif(input < min){\n\t\t\t\tmin = input;\n\t\t\t\tcount++;\n\t\t\t}\n\n\t\t\tif(input > max){\n\t\t\t\tmax = input;\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\n\t\tSystem.out.println(count);\n\n\t}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, x, mn, mx, a;\nint main() {\n  cin >> n;\n  cin >> x;\n  mn = x;\n  mx = x;\n  for (int i = 2; i <= n; i++) {\n    cin >> x;\n    if (x > mx) {\n      mx = x;\n      a++;\n    }\n    if (x < mn) {\n      mn = x;\n      a++;\n    }\n  }\n  cout << a;\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "n=int(raw_input())\nscore=map(int,raw_input().split())\nhprev=score[0]\nlprev=score[0]\namazing=0\nfor i in range (1,n):\n    if score[i] >hprev or score[i]<lprev:\n        amazing+=1\n    if score[i] > hprev:\n        hprev=score[i]\n    elif score [i]<lprev:\n        lprev=score[i]\nprint amazing\n"
        },
        {
            "language": 1,
            "solution": "scores = []\nn = int(input())\np = raw_input()\np = p.split(' ') \nfor i in p:\n  scores.append(int(i))\n\nbest = scores[0]\nworst = scores[0]\namazing = 0\n\nfor i in range(1, n):\n  if scores[i] > best:\n    amazing+=1\n    best = scores[i]\n    continue\n  if scores[i] < worst:\n    amazing+=1\n    worst = scores[i]\n\nprint amazing,\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\ndata = [int(x) for x in input().split()]\ncurmin = data[0]\ncurmax = data[0]\ncount = 0\nfor i in range(1, len(data)):\n\tif curmin > data[i]:\n\t\tcurmin = data[i]\n\t\tcount += 1\n\telif curmax < data[i]:\n\t\tcurmax = data[i]\n\t\tcount += 1\nprint(count)"
        },
        {
            "language": 3,
            "solution": "input()\na = list(map(int,input().split()))\nmini = a[0]\nmaxi = a[0]\nresult = 0\nfor element in a[1:]:\n    if element < mini:\n        mini = element\n        result += 1\n    elif element > maxi:\n        maxi = element\n        result += 1\nprint(result)\n"
        },
        {
            "language": 1,
            "solution": "# -*- coding: utf-8 -*-\nn = int(raw_input())\npoints = map(int, raw_input().split(' '))\n\n_max = _min = points[0]\nresult = 0\nfor i in xrange(1, n):\n    if points[i] > _max:\n        _max = points[i]\n        result += 1\n\n    if points[i] < _min:\n        _min = points[i]\n        result += 1\n\nprint(result)\n"
        },
        {
            "language": 3,
            "solution": "if __name__ == \"__main__\":\n    n = int(input())\n    l = list(map(int,input().split()))\n    c = -1\n\n    ma = -1\n    mi = 11000\n\n    for i in range(n):\n        if l[i] > ma:\n            ma = l[i]\n            c += 1\n            if ma < mi:\n                mi = ma\n            continue\n        if l[i] < mi:\n            mi = l[i]\n            c += 1\n    print(c)\n\n  "
        },
        {
            "language": 3,
            "solution": "n =  input()\nx = 0\nl = [int(x) for x in input().split()]\nmin, high  = l [0] , l[0]\n\nfor elt in l:\n    if elt < min:\n        x+=1\n        min = elt\n    elif elt > high :\n        x+=1\n        high = elt\n\nprint(x)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int,input().split(' ')))\nmin = a[0]\nmax = a[0]\nc = 0\nfor i in range(1,n):\n    if a[i]<min:\n        min = a[i]\n        c = c+1\n    elif a[i]>max:\n        max = a[i]\n        c = c+1\nprint(c)"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class Iloveusername {\n    public static void main(String args[]){\n\tScanner s = new Scanner(System.in);\n\t    int n = s.nextInt();\n\t    int a[] = new int[n]; \n\t    for(int i=0; i<n; i++){\n\t\ta[i]=s.nextInt();\n\t    }\n\t    int max=a[0];\n\t    int min=a[0];\n\t    int count=0;\n\t    for(int i=1; i<n; i++){\n\t\tif(a[i]>max){\n\t\t    max=a[i];\n\t\t    count++;\n\t\t}\n\t\tif(a[i]<min){\n\t\t    min=a[i];\n\t\t    count++;\n\t\t}\n\t    }\n\t    System.out.print(count);\n    }\n    \n}\n"
        },
        {
            "language": 3,
            "solution": "Amazing = 0\ninput()\nScores = list(map(int, input().split()))\nfor i in range(1, Scores.__len__()):\n    if Scores[i] > max(Scores[:i]) or Scores[i] < min(Scores[:i]):\n        Amazing += 1\nprint(Amazing)"
        },
        {
            "language": 3,
            "solution": "a=int(input())\nb=list(map(int,input().split()))\nres=0\nmin=b[0]\nmax=b[0]\nfor k in range(1,a):\n    if b[k]<min:\n        res+=1\n        min=b[k]\n    if b[k]>max:\n        res+=1\n        max=b[k]\nprint(res)\n\n\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nscore = list(map(int, input().split()))\n\nmx = score[0]\nmn = score[0]\nans = 0\n\nfor i in range(1, n):\n    if score[i] > mx:\n        ans += 1\n        mx = score[i]\n    elif score[i] < mn:\n        ans += 1\n        mn = score[i]\n\nprint(ans)"
        },
        {
            "language": 3,
            "solution": "dumb = input()\nl = [int(x) for x in input().split()]\nma = l[0]\nmi = l[0]\ncount = 0\nfor i in l[1:]:\n    if i > ma:\n        ma = i\n        count += 1\n    elif i < mi:\n        mi = i\n        count += 1\nprint(count)"
        },
        {
            "language": 3,
            "solution": "t=int(input())\narr=list(map(int,input().split()))\nmax=arr[0]\nmin=arr[0]\ncount=0\nfor i in range(1,t):\n    if arr[i]>max:\n        count=count+1\n        max=arr[i]\n    elif arr[i]<min:\n        count=count+1\n        min=arr[i]\n    else:\n        continue\n        \nprint(count)    "
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = [int(i) for i in input().split()]\nh = l = a[0]\namazing = 0\nfor i in range(1,n):\n    if a[i] > h or a[i] < l:\n        amazing +=1\n    h = max(h,a[i])\n    l = min(l,a[i])\nprint(amazing)\n"
        },
        {
            "language": 1,
            "solution": "N = int(raw_input())\ndata = map(int,raw_input().split())\n\ncurmin = curmax = data[0]\namazing = 0\nfor x in data[1:]:\n    if x<curmin :\n        amazing+=1\n        curmin=x\n    elif x>curmax :\n        amazing+=1\n        curmax=x\n\nprint amazing\n "
        },
        {
            "language": 3,
            "solution": "n = int(input())\nls = [int(x) for x in input().split()]\nmn = ls[0]\nmx = ls[0]\ncount = 0\nfor i in range(1,n):\n    if (mn > ls[i]):\n        mn = ls[i]\n        count += 1\n    elif (mx < ls[i]):\n        mx = ls[i]\n        count += 1\nprint(count)"
        },
        {
            "language": 1,
            "solution": "n=input()\ns=map(int,raw_input().split())\nh,l = s[0],s[0]\ncnt = 0\nfor i in s[1:]:\n    if i>h:\n        h=i;cnt+=1\n    elif i<l:\n        l=i;cnt+=1\nprint cnt\n"
        },
        {
            "language": 3,
            "solution": "l=[]\nc=0\nn=int(input())\nl=list(map(int,input().split()))[:n]\nfor i in range(1,n):\n    if(l[i]>max(l[:i]) or l[i]<min(l[:i])):\n        c+=1\nprint (c)"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\npublic class Iloveusernam {\n\n\t/**\n\t * @param args\n\t */\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\n\t\tScanner input = new Scanner(System.in);\n\t\tint n = input.nextInt();\n\t\tint[] arr = new int[n];\n\t\tfor(int i=0;i<n;i++)arr[i] = input.nextInt();\n\t  int counter = 0;\n\t\tfor(int j=1;j<n;j++){\n\t\t\tif(max(arr,j)|min(arr,j)){counter++;\n\t\t\t\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(counter);\n\t}\n\t\n\tprivate static boolean max(int[] arr,int j){\n\t\t\n\t\tfor(int i=0; i<j;i++){\n\t\t\tif(arr[i] >= arr[j])return  false;\n\t\t}\n\t\treturn true;\n\t}\n\t\n\tprivate static boolean min(int[] arr,int j){\n\t\tfor(int i=0;i<j;i++){\n\t\t\tif(arr[i] <= arr[j])return false;\n\t\t}\n\t\treturn true;\n\t}\n\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nmas=list(map(int,input().split(\" \")))\ni=1\nmi=mas[0]\nma=mas[0]\nres=0\nwhile i<len(mas):\n    if mi>mas[i]:\n        mi=mas[i]\n        res+=1\n    if ma<mas[i]:\n        ma=mas[i]\n        res+=1\n    i+=1\nprint(res)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nx=list(map(int,input().split()))\ny=[x[0]]\ncount=0\nfor i in x:\n    if i > max(y) or i < min (y):\n        count=count+1\n        y.append(i)\nprint(count)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input()) \na=list(map(int,input().rstrip().split()))  \nC=0\nm=a[0] \nfor i in range(1,len(a)):  \n    if m>a[i]:  \n        C=C+1    \n        m=a[i]  \nm=a[0]\nfor i in range(1,len(a)): \n    if m<a[i]: \n        C=C+1\n        m=a[i]\nprint(C) \n    \n        \n        \n    \n    \n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint arr[10000];\nint main() {\n  int n, i, max, min, num = 0;\n  scanf(\"%d\", &n);\n  for (i = 0; i < n; i++) scanf(\"%d\", &arr[i]);\n  min = arr[0], max = arr[0];\n  for (i = 1; i < n; i++) {\n    if (arr[i] > max) {\n      max = arr[i];\n      num++;\n    }\n    if (arr[i] < min) {\n      min = arr[i];\n      num++;\n    }\n  }\n  printf(\"%d\", num);\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nmy_list = list(map(int, input().split()))\n\nmax = my_list[0]\nmin = my_list[0]\nsum = 0\nfor i in my_list:\n    if i > max:\n        max = i\n        sum += 1\n    if i < min:\n        min = i\n        sum += 1\n\nprint(sum)"
        },
        {
            "language": 1,
            "solution": "# I_love_%username%\n\nn = int(raw_input())\n\npoints = raw_input().split()\n\namazing = 0\n\npool = [int(points[0])]\n\nfor i in range(1, n):\n    if int(points[i]) > max(pool) or int(points[i]) < min(pool):\n        amazing += 1\n        pool.append(int(points[i]))\n\nprint amazing\n"
        },
        {
            "language": 3,
            "solution": "n=  int(input() )\nlis = [int(x) for x in input().split()]\nmin =  (lis[0])\nmax=lis[0]\ncount=0\nfor i in range(1,len(lis) ):\n    if max<lis[i]:\n        max = lis[i]\n        count+=1\n    elif min>lis[i]:\n        min = lis[i]\n        count+=1\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nlst = list(map(int, input().split()))\nflst = []\nc = 0\nflst.append(lst[0])\nfor i in lst[1:]:\n    flst.append(i)\n    if (max(flst) == i or min(flst) == i) and flst.count(i) == 1:\n        c += 1\nprint(c)\n\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = [int(x) for x in input().split()]\nmx = 0\nmi = 10000\ncnt = 0\nfor i in range(n):\n    if i > 0:\n        if a[i] > mx or a[i] < mi:\n            cnt += 1\n    if a[i] > mx:\n        mx = a[i]\n    if a[i] < mi:\n        mi = a[i]\n\n    if i == 0:\n        continue\n\nprint(cnt)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nk=[int(x) for x in input().split(\" \")]\nmin=k[0]\nmax=k[0]\nsum=0\nfor x in k:\n    if x<min:\n        min=x\n        sum+=1\n    elif x>max:\n        max=x\n        sum+=1\nprint(sum)"
        },
        {
            "language": 3,
            "solution": "x = int(input())\ny = input().split()\noutput = 0\nlst = []\nif(x==1):\n    print(output)\nelse:\n    i = 1\n    lst.append(int(y[0]))\n    while(i<x):\n        lst.sort()\n        if(int(y[i]) > lst[len(lst)-1]):\n            output += 1\n        elif(int(y[i]) < lst[0]):\n            output += 1\n        lst.append(int(y[i]))\n        i += 1\n    print(output)\n\n        \n    \n    \n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nscore=list(map(int,input().split()))\nl=score[0]\ns=score[0]\ncount=0\nfor i in score:\n    if i>l:\n        l=i\n        count=count+1\nfor i in score:\n    if i<s:\n        s=i\n        count=count+1\nprint(count)\n        "
        },
        {
            "language": 1,
            "solution": "print [reduce(lambda (a,b,c),x: (a+(b>x)+(c<x),min(b,x),max(c,x)),ar,(0,ar[0],ar[0])) for n, ar in [(int(raw_input()),[int(c) for c in raw_input().split()])]][0][0]"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[int(x) for x in input().split()]\nm=a[0]\nn=a[0]#m for max while n for min\ns=0\nfor i in a:\n    if i>m:\n        s+=1\n        m=i\n    if i<n:\n        s+=1\n        n=i\nprint(s)\n"
        },
        {
            "language": 1,
            "solution": "import sys\n\nbest = -1\nworst = -1\n\nn_scores = int(sys.stdin.readline())\nscores = [int(x) for x in sys.stdin.readline().split()]\n\namazing = 0\nfor x in scores:\n    if best == -1:\n        best = x\n        worst = x\n    else:\n        if x > best:\n            best = x\n            amazing += 1\n        if x < worst:\n            worst = x\n            amazing += 1\nprint amazing\n        \n"
        },
        {
            "language": 3,
            "solution": "def solve(arr):\n   ans = 0\n   for i in range(1,len(arr)):\n      if arr[i] > max(arr[0:i]) or arr[i] < min(arr[0:i]):\n         ans += 1\n   return ans\nif __name__ == \"__main__\":\n   input()\n   print(solve(list(map(int,input().split(\" \")))))"
        },
        {
            "language": 1,
            "solution": "n = raw_input()\nscore = [int(i) for i in raw_input().split()]\n\nbiggest = score[0]\nsmallest = score[0]\namazing = 0\n\nfor result in score:\n\tif result > biggest:\n\t\tamazing += 1\n\t\tbiggest = result\n\telif result < smallest:\n\t\tamazing += 1\n\t\tsmallest = result\n\nprint amazing"
        },
        {
            "language": 4,
            "solution": "//package javaapplication1;\nimport java.util.*;\nimport java.io.*;\n\npublic class JavaApplication1 implements Runnable {\n    BufferedReader in;\n    PrintWriter out;\n    StringTokenizer tok = new StringTokenizer(\"\");\n    final boolean OJ = System.getProperty(\"ONLINE_JUDGE\") != null;\n    \n    void init() throws FileNotFoundException {\n        if (OJ) {\n            in = new BufferedReader(new InputStreamReader(System.in));\n            out = new PrintWriter(System.out);\n        } else {\n            in = new BufferedReader(new FileReader(\"Input.txt\"));\n            out = new PrintWriter(\"Output.txt\");\n        }\n    }\n    \n    @Override\n    public void run() {\n        try {\n            init();\n            solve();\n            out.close();\n        } catch(Exception e) {\n            e.printStackTrace();\n            System.exit(-1);\n        }\n    }\n    \n    \n    public static void main(String[] args) {\n        new Thread(null, new JavaApplication1(), \"\", (1L << 20) * 256).start();\n    }\n\n    String readString() {\n        while(!tok.hasMoreTokens()) {\n            try {\n                tok = new StringTokenizer(in.readLine());\n            } catch(Exception e) {\n                e.printStackTrace();\n                System.exit(-1);\n            }\n        }\n        return tok.nextToken();\n    }\n    \n    int readInt() {\n        return Integer.parseInt(readString());\n    }\n    \n    long readLong() {\n        return Long.parseLong(readString());\n    }\n    \n    \n////////////////////////////////////////////////////////////////////////////////\n    \n    \n    \n    \n    void solve() {\n        int n = readInt();\n        int ans = 0;\n        int mn = -1;\n        int mx = -1;\n        for(int i = 0; i < n; i++) {\n            int curr = readInt();\n            if (i == 0) {\n                mn = mx = curr;\n            } else {\n                if (mn > curr) {\n                    mn = curr;\n                    ans++;\n                }\n                if (mx < curr) {\n                    mx = curr;\n                    ans++;\n                }\n            }\n        }\n        out.println(ans);\n    }\n    \n}"
        },
        {
            "language": 3,
            "solution": "n=int(input())\ninp=list(map(int,input().split()))\nmx=inp[0]\nmn=inp[0]\ncntr=0\nfor i in range(1,n):\n    if inp[i]>mx:\n        cntr+=1\n        mx=inp[i]\n    elif inp[i]<mn:\n        cntr+=1\n        mn=inp[i]\nprint(cntr)"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\n\npublic class AILoveUsername_155A {\n\tpublic static void main(String[] args) {\n\t\tScanner kb = new Scanner(System.in);\n\t\tint n = kb.nextInt();\n\t\tint[] a = new int[n];\n\t\tint count = 0;\n\t\tfor(int i=0;i<n;i++)\n\t\t\ta[i]=kb.nextInt();\n\t\tfor(int i=1;i<n;i++)\n\t\t{\n\t\t\tboolean flag1=true,flag2=true;\n\t\t\tfor(int j=0;j<i;j++)\n\t\t\t{\n\t\t\t\tif(a[i]<=a[j])\n\t\t\t\t{\n\t\t\t\t\tflag1=false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int j=0;j<i;j++)\n\t\t\t{\n\t\t\t\tif(a[i]>=a[j])\n\t\t\t\t{\n\t\t\t\t\tflag2=false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(flag1||flag2)\n\t\t\t\tcount++;\n\t\t}\n\t\tSystem.out.println(count);\n\t\tkb.close();\n\t}\n\n}\n"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\ns = raw_input()\ns = s.split()\nA = []\nfor i in range(0,n):\n    A.append(int(s[i]))\n\nmi = A[0]\nma = A[0]\nans = 0\n\nfor i in range(1,n):\n    if(A[i]>ma):\n        ma = A[i]\n        ans+=1\n    elif(A[i]<mi):\n        mi = A[i]\n        ans+=1\n\nprint ans\n"
        },
        {
            "language": 3,
            "solution": "#!/usr/bin/python3\n\ndef readln(): return tuple(map(int, input().split()))\n\nn, = readln()\nans = 0\na = 10**9\nb = -1\nfor r in readln():\n    ans += b != -1 and (r < a or r > b)\n    a = min(a, r)\n    b = max(b, r)\nprint(ans)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl = list(map(int,input().split()))\nminimum = l[0]\nmaximum = l[0]\nr = 0\nfor i in l:\n    if i > maximum:\n        r += 1\n        maximum = i\n    if i < minimum:\n        r += 1\n        minimum = i\nprint(r)\n"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\na = [int(x) for x in raw_input().split()]\n\nk = 0\n\nmxm = a[0]\nmnm = a[0]\n\nfor i in range(1 , n) :\n    if a[i] > mxm:\n        k += 1\n    if a[i] < mnm:\n        k += 1\n    mxm = max(mxm , a[i])\n    mnm = min(mnm , a[i])\n\n\nprint k"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=input().split()\na=[int(i) for i in a]\nb=1\nc=0\nwhile b<n:\n    list1=a[:b]\n    if a[b]>max(list1) or a[b]<min(list1):\n        c=c+1\n    else:c=c\n    b+=1\nprint(c)        \n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nx=list(map(int,input().split()))\nc=0\nm=x[0]\ns=x[0]\nfor i in range(1,len(x)):\n    if x[i]>m:\n        c+=1\n        m=x[i]\n    elif x[i]<s:\n        c+=1\n        s=x[i]\nprint(c)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\nrez = 0\nmx = a[0]\nmn = a[0]\nfor i in a:\n    if i < mn:\n        mn = i\n        rez += 1\n    if i > mx:\n        mx = i\n        rez += 1\nprint(rez)\n\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nam=0\ntemp=[]\ntemp.append(l[0])\nmx=temp[0]\nmn=temp[0]\nfor i in range(1,len(l)):\n    temp.append(l[i])\n    m1=max(temp)\n    m2=min(temp)\n    if mx<m1:\n        mx=m1\n        am+=1\n    else:\n        if mn>m2:\n            mn=m2\n            am+=1\nprint(am)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na = list(map(int, input().split()))\nmax=min=a[0]\naw=0\nif 1<=n<=1000:\n    for i in range(n):\n        if a[i]>max:\n            max=a[i]\n            aw+=1\n        elif a[i]<min:\n            min=a[i]\n            aw+=1            \n    print(aw)\nelse:\n    prinnt(\"Net resheenya\")\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=[int(i) for i in input().split()]\nx=y=l[0]\ncnt=0\nfor i in range(1,n):\n    if l[i]<y:\n        y=l[i]\n        cnt+=1\n    elif l[i]>x:\n        x=l[i]\n        cnt+=1\nprint(cnt)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nam = 0\ng = [int(s) for s in input().split()]\nmaxx, minn = g[0], g[0]\nfor ele in g:\n  if ele > maxx:\n    maxx = ele\n    am +=1\n  elif ele < minn :\n    minn = ele\n    am +=1\nprint(am)"
        },
        {
            "language": 3,
            "solution": "#!/usr/bin/env python\n# coding=utf-8\n\ninput_s = int(input())\ninput_l = input().split(' ')\nnumber_max = -1\nnumber_min = 999999\ns = 0\nfor l in input_l:\n    ll = int(l)\n    if ll > number_max:\n        s += (1 if number_max != -1 else 0)\n        number_max = ll\n    if ll < number_min:\n        s += (1 if number_min != 999999 else 0)\n        number_min = ll\nprint(s)\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class S {\n\n\tpublic static void main(String[] args) {\n\n\t\tScanner in = new Scanner(System.in);\n        \n\t\tint n = in.nextInt(), max = Integer.MIN_VALUE, min = Integer.MAX_VALUE, ans = 0;\n\t\tint[] arr = new int[n];\n\t\tarr[0] = in.nextInt();\n\t\tmin = arr[0];\n\t\tmax = arr[0];\n\t\tfor(int i = 1; i<n; i++) {\n\t\t\tarr[i] = in.nextInt();\n\t\t\tif(arr[i] > max) {\n\t\t\t\tans++;\n\t\t\t\tmax = arr[i];\n\t\t\t}\n\t\t\tif(arr[i] < min) {\n\t\t\t\tans++;\n\t\t\t\tmin = arr[i];\n\t\t\t}\n\t\t\t\n\t\t}\n\t\tSystem.out.println(ans);\n\t\t\n\t}\n}"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\nb = [a[0]]\nk = 0 \nfor i in range(1, n):\n    if a[i] not in b:\n        b.append(a[i])\n        if a[i] == max(b) or a[i] == min(b):\n            k += 1\nprint(k)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\ncd=[int(i)for  i in input().split()]\n\nj,k=cd[0],cd[0]\np=0\nfor i in range(1,n):\n    if cd[i]>j:\n        p=p+1\n        j=cd[i]\n    if cd[i]<k:\n        p=p+1\n        k=cd[i]\n\nprint(p)\n        \n        \n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nmx=l[0]\nmn=l[0]\nc=0\nfor i in l:\n    if i>mx:\n        mx=i\n        c+=1\n    if i<mn:\n        mn=i\n        c+=1\nprint(c)\n        \n"
        },
        {
            "language": 3,
            "solution": "x=input()\nz=int(x)\ny = input().split()\nminm=int(y[0])\nmaxm=minm\nsum=0\nfor i in y:\n    b=int(i)\n    if(b<minm):\n        sum+=1\n        minm=b\n    elif(b>maxm):\n        sum+=1\n        maxm=b\n\nprint(sum)\n"
        },
        {
            "language": 3,
            "solution": "i=input;i();s=list(map(int,i().split()));ans=0;mi=10001;ma=0\nfor k in s:ans+=[0,1][k>ma or k<mi];ma=[ma,k][k>ma];mi=[mi,k][k<mi]\nprint(ans-1)"
        },
        {
            "language": 3,
            "solution": "a = int(input())\nb = list(input().split())\ncounter = 0\nn = []\nfor i in range(a):\n\tb[i] = int(b[i])\nmax = b[0]\nmin = b[0]\nfor i in range(a):\n\tif b[i] > max:\n\t\tmax = b[i]\n\t\tcounter += 1\n\tif b[i] < min:\n\t\tmin = b[i]\n\t\tcounter += 1\nprint(counter)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nlst = list(map(int, input().split(' ')))\nbest = lst[0]\namazed = 0\nlow = lst[0]\n\nfor i in lst:\n    if i > best:\n        amazed += 1\n        best = i\n    elif i < low:\n        low = i\n        amazed += 1\n\nprint(amazed)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nlst=list(map(int,input().strip().split(' ')))\ncount=0\nminm=lst[0]\nmaxm=lst[0]\nfor j in lst[1::]:\n    if j<minm:\n        minm=j\n        count+=1\n    elif maxm<j:\n        maxm=j\n        count+=1\nprint(count)\n        \n        \n"
        },
        {
            "language": 4,
            "solution": "// A. I_love_%username%\nimport java.util.*;\npublic class ILoveUsername {\n    public static void main(String[] args) {\n    \n        Scanner input = new Scanner(System.in);\n        int contests = input.nextInt();\n        \n        int max = input.nextInt();\n        int min = max;\n        int amazing = 0;\n        \n        for (int i = 1; i < contests; ++i) {\n            int t = input.nextInt();\n            if (t > max) {\n                max = t;\n                ++amazing;\n            }\n            else if (t < min) {\n                min = t;\n                ++amazing;\n            }\n        }\n        System.out.println(amazing);\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\namazing = 0\nscore = list(map(int, input().split()))\nfor x in range(1, n):\n    test = score[0: x + 1]\n    if test[x] not in test[: x]:\n        if test[x] == max(test):\n            amazing += 1\n        elif test[x] == min(test):\n            amazing += 1\n\nprint(amazing)\n        "
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nmin=l[0]\nmax=l[0]\nc=0\nfor i in range(1,len(l)):\n    if(l[i]>max):\n        max=l[i]\n        c+=1\n    elif(l[i]<min):\n        min=l[i]\n        c+=1\nprint(c)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[int(x) for x in input().split(' ')]\nmaxi=a[0]\nmini=a[0]\nl=len(a)\ncount=0\nfor i in range(1,l):\n    if not mini<=a[i]<=maxi:\n        count+=1\n        maxi=max(a[x] for x in range(0,i+1))\n        mini=min(a[x] for x in range(0,i+1))\nprint(count)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\n\nmn = a[0]\nmx = a[0]\nans = 0\n\nfor i in range(1, n):\n    if a[i] < mn or a[i] > mx:\n        ans += 1\n    mn = min(mn, a[i])\n    mx = max(mx, a[i])\n\nprint(ans)\n"
        },
        {
            "language": 3,
            "solution": "from operator import itemgetter\n#int(input())\n#map(int,input().split())\n#[list(map(int,input().split())) for i in range(q)]\n#print(\"YES\" * ans + \"NO\" * (1-ans))\nn = int(input())\nai = list(map(int,input().split()))\nmini = ai[0]\nmaxi = ai[0]\nans = 0\nfor i in range(1,n):\n    if mini > ai[i]:\n        mini = ai[i]\n        ans += 1\n    if maxi < ai[i]:\n        maxi = ai[i]\n        ans += 1\nprint(ans)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = [int(i) for i in input().split()]\nmax = a[0]\nmin = a[0]\ns = 0\nfor i in range(n):\n    if a[i]>max:\n        s+=1\n        max = a[i]\n    elif a[i]<min:\n        s+=1\n        min = a[i]\nprint(s)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nk = list(map(int, input().split()))\naz = 0\nmax = k[0]\nmin = k[0]\nfor i in range(n):\n    if k[i] > max:\n        max = k[i]\n        az += 1\n    if k[i] < min:\n        min = k[i]\n        az += 1\n\nprint(az)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\npoints = list(map(int, input().split()))\nmax, min = points[0], points[0]\nres = 0\nfor x in points:\n    if x < min:\n        min = x\n        res += 1\n    if x > max:\n        max = x\n        res += 1\nprint(res)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  int points[n];\n  cin >> points[0];\n  int min(points[0]), max(points[0]), amazing(0);\n  for (int i = 1; i < n; i++) {\n    cin >> points[i];\n    if (points[i] < min) {\n      min = points[i];\n      ++amazing;\n    }\n    if (points[i] > max) {\n      max = points[i];\n      ++amazing;\n    }\n  }\n  cout << amazing << endl;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nprint(sum(a[i]>max(a[:i]) or a[i]<min(a[:i]) for i in range(1,n)))"
        },
        {
            "language": 3,
            "solution": "input()\narr=[int(x) for x in input().split()]\nmn,mx=arr[0],arr[0]\ncnt=0\nfor i in range(1,len(arr)):\n    if arr[i]<mn:\n        mn=arr[i]\n        cnt+=1\n    elif arr[i]>mx:\n        mx=arr[i]\n        cnt+=1\n    else:\n        continue\nprint(cnt)"
        },
        {
            "language": 4,
            "solution": "import java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.PriorityQueue;\nimport java.util.Scanner;\nimport java.io.BufferedReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\nimport java.io.InputStream;\n\npublic class palin {\n\tpublic static void main(String[] args) {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tInputReader in = new InputReader(inputStream);\n\t\tPrintWriter out = new PrintWriter(System.out);\n\t\tScanner scan = new Scanner(System.in);\n\t\tTaskC solver = new TaskC();\n\t\tsolver.solve(1, in, out);\n\t\tout.close();\n\t}\n}\n\nclass TaskC {\n\tpublic void solve(int testNumber, InputReader in, PrintWriter out) {\n\t\tint n = in.nextInt(), min = in.nextInt(), max = min, res = 0, temp;\n\t\tfor (int i = 0; i < n - 1; i++) {\n\t\t\ttemp = in.nextInt();\n\t\t\tif (temp > max) {\n\t\t\t\tres++;\n\t\t\t\tmax = temp;\n\t\t\t}\n\t\t\tif (temp < min) {\n\t\t\t\tres++;\n\t\t\t\tmin = temp;\n\t\t\t}\n\t\t}\n\t\tout.print(res);\n\t}\n}\n\nclass InputReader {\n\tBufferedReader br;\n\tStringTokenizer st;\n\n\tpublic InputReader(InputStream in) {\n\t\tbr = new BufferedReader(new InputStreamReader(in));\n\t\tst = null;\n\t}\n\n\tpublic String next() {\n\t\twhile (st == null || !st.hasMoreTokens()) {\n\t\t\ttry {\n\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t} catch (IOException e) {\n\t\t\t\tthrow new RuntimeException(e);\n\t\t\t}\n\t\t}\n\t\treturn st.nextToken();\n\t}\n\n\tpublic int nextInt() {\n\t\treturn Integer.parseInt(next());\n\t}\n\n\tpublic long nextLong() {\n\t\treturn Long.parseLong(next());\n\t}\n}"
        },
        {
            "language": 1,
            "solution": "if __name__ == '__main__':\n    n = int(raw_input())\n    scores = [int(num) for num in raw_input().split()]\n\n    worst_score = best_score = scores[0]\n    num_amazing = 0\n    for score in scores[1:]:\n        num_amazing += score < worst_score\n        num_amazing += score > best_score\n\n        worst_score = min(score, worst_score)\n        best_score = max(score, best_score)\n\n    print num_amazing\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[int(i) for i in input().strip().split()]\nmini=a[0]\nmaxi=a[0]\nans=0\nfor i in range(1,n):\n    if a[i]>maxi:\n        maxi=a[i]\n        ans+=1\n    elif a[i]<mini:\n        mini=a[i]\n        ans+=1\nprint(ans)\n\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\narr=list(map(int,input().split()))\nc=0\nfor i in range(1,n):\n    j=arr[0:i]\n    if arr[i] > max(j) or arr[i]<min(j):\n        c+=1\nprint(c)        \n"
        },
        {
            "language": 3,
            "solution": "import math\ndef f():\n    n = int(input()); total = 0\n    li = list(map(int,input().split()))\n    hi = li[0]; low = li[0]\n    for x in range(1,n):\n        if li[x] > hi:\n            total += 1\n            hi = li[x]\n        if li[x] < low:\n            total += 1\n            low = li[x]\n    print(total)\nf()"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nscores = list(map(int, input().split()))\ncnt = 0\n\nfor i in range(1, n):\n    if scores[i] > max(scores[:i]):\n        cnt += 1\n\n    if scores[i] < min(scores[:i]):\n        cnt += 1\n\nprint(cnt)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nx=list(map(int,input().split()))\nmin=x[0]\nmax=x[0]\nc=0\nfor i in range(1,n):\n    if x[i]>max:\n        c+=1\n        max=x[i]\n    if x[i]<min:\n        c+=1\n        min=x[i]\nprint(c)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\ns = input().split()\nl = []\ncount = 0\nfor i in s:\n    l.append(int(i))\nl2 = []\nbig = l[0]\nsmall = l[0]\nflag=True\nfor j in l:     \n    if j>big:\n        big=j\n        count=count+1\n    elif j<small:\n        small = j\n        count = count+1\n    \n\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\narr = list(map(int, input().split()))\nmmin = arr[0]\nmmax = arr[0]\nans = 0\nfor i in range (1, n):\n    if arr [i] > mmax:\n        mmax = arr [i]\n        ans += 1\n        \n    if arr [i] < mmin:\n        mmin = arr [i]\n        ans += 1\n        \nprint(ans)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\ns=[int(i) for i in input().split()]\nA=0;M,m=s[0],s[0]\nfor i in range(n) :\n    if s[i]<m :\n        A+=1\n        m=s[i]\n    if s[i]>M :\n        A+=1\n        M=s[i]\nprint(A)"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\n\npublic class Main {\n    //Fast Reader\n    private static class FastReader {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public FastReader() {\n            br = new BufferedReader(new InputStreamReader(System.in));\n        }\n\n        public String next() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        public void resetST() {\n            st = null;\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        public double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        public float nextFloat() {\n            return Float.parseFloat(next());\n        }\n\n        public String nextLine() {\n            String str = \"\";\n            try {\n                str = br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            st = null;\n            return str;\n        }\n\n        public int[] nextIntArray(int size) {\n            int[] arr = new int[size];\n            for (int i = 0; i < size; i++) {\n                arr[i] = nextInt();\n            }\n            return arr;\n        }\n\n        public long[] nextLongArray(int size) {\n            long[] arr = new long[size];\n            for (int i = 0; i < size; i++) {\n                arr[i] = nextLong();\n            }\n            return arr;\n        }\n\n        public double[] nextDoubleArray(int size) {\n            double[] arr = new double[size];\n            for (int i = 0; i < size; i++) {\n                arr[i] = nextDouble();\n            }\n            return arr;\n        }\n    }\n\n    public static void main(String[] args) {\n        final FastReader sc = new FastReader();\n        final PrintWriter pr = new PrintWriter(System.out);\n        int n = sc.nextInt();\n        int min = sc.nextInt();\n        int max = min;\n        int count = 0;\n        for (int i = 0; i < n - 1; i++) {\n            int temp = sc.nextInt();\n            if (temp > max) {\n                count++;\n                max = temp;\n            }\n            if (temp < min) {\n                count++;\n                min = temp;\n            }\n        }\n        pr.println(count);\n        pr.close();\n        // write your code here\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin\nn=int(input())\na=[int(x) for x in stdin.readline().split()]\nmaxx=a[0]\nminn=a[0]\nval=0\nfor i in range(1,n):\n\tif maxx<a[i] or minn>a[i] :\n\t\tval += 1\n\tmaxx=max(a[0:i+1])\n\tminn=min(a[0:i+1])\nprint(val)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().rstrip().split()))\nc=0\np=0\nd=0\nq=0\nfor i in range(n):\n    c=0\n    for j in range(i):\n        if(a[i]>a[j]):\n            c=c+1\n    if(c==i and c>0):\n        p=p+1\nfor i in range(n):\n    d=0\n    for j in range(i):\n        if(a[i]<a[j]):\n            d=d+1\n    if(d==i and d>0):\n        q=q+1\nprint(p+q)"
        },
        {
            "language": 3,
            "solution": "#list(map(int,input().split()))\nn=int(input())\nl=list(map(int,input().split()))\nc=0\nmi=l[0] \nma=l[0]\nfor i in l[1:]:\n    if i not in range(mi,ma+1):\n        c+=1\n        mi=min(mi,i)\n        ma=max(ma,i)\nprint(c)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nlst = [int(i) for i in input().split()]\nindexMax = 0\nindexMin = 0\ncount = 0\nfor i in range(len(lst)):\n    if lst[i] < lst[indexMin]:\n        indexMin = i\n        count += 1\n    if lst[i] > lst[indexMax]:\n        indexMax = i\n        count += 1\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n = int (input ())\na = list (map (int, input ().split ()))\nperf = []\nunik = []\n\nfor i in range (len (a)):\n\tif i == 0:\n\t\tperf.append (a[i])\n\telse:\n\t\tif a[i] < min(perf) or a[i] > max(perf):\n\t\t\tunik.append (a[i])\n\t\tperf.append (a[i])\n\nprint (len (unik))"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nip = [int(i) for i in input().split()]\nbest = ip[0]\nworst = ip[0]\namaze = 0\nfor i in range(1, len(ip)):\n    if (ip[i] > best):\n        best = ip[i]\n        amaze += 1\n    elif (ip[i] < worst):\n        worst = ip[i]\n        amaze += 1\nprint(amaze)"
        },
        {
            "language": 3,
            "solution": "a, b = int(input()), input().split(\" \")\nd = 0\nu = 0\nfor i in range(0, a):\n    b[i] = int(b[i])\nfor i in range(1, a):\n    for i2 in range(0, i):\n        if b[i2] <= b[i]:\n            u = - 1\n    if u == 0:\n        d += 1\n    u = 0\n    for i2 in range(0, i):\n        if b[i2] >= b[i]:\n            u = - 1\n    if u == 0:\n        d += 1\n    u = 0\nprint(d)"
        },
        {
            "language": 3,
            "solution": "from collections import defaultdict\n\ndef main():\n    n = int(input())\n    rating = list(map(int, input().split()))\n\n    mn = rating[0]\n    mx = rating[0]\n    cnt = 0\n    for rate in rating[1:]:\n        if rate > mx:\n            cnt += 1\n            mx = rate\n        elif rate < mn:\n            cnt += 1\n            mn = rate\n\n    print(cnt)\nmain()"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nmini=a[0]\nmaxa=a[0]\ncount=0\nfor i in range(1,n):\n\tif a[i]>maxa:\n\t\tmaxa=a[i]\n\t\tcount+=1\n\telif a[i]<mini:\n\t\tmini=a[i]\n\t\tcount+=1\nprint(count)\t\t\t\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\np=[int(i) for i in input().split()]\nmax=p[0]\nmin=p[0]\ns=0\nfor i in range(1,n):\n    if(p[i]>max):\n        max=p[i]\n        s=s+1\n    elif(p[i]<min):\n        min=p[i]\n        s=s+1\nprint(s)\n        \n"
        },
        {
            "language": 1,
            "solution": "t=int(raw_input().strip());\nm=map(int,raw_input().split());\nmi=m[0];ma=m[0];c=0;\nfor i in xrange(1,len(m)):\n    if (m[i]>ma):\n        ma=m[i];c+=1;\n    elif (m[i]<mi):\n        mi=m[i];c+=1;\nprint c\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\nimport java.nio.charset.StandardCharsets;\n// import java.math.BigInteger;\n\npublic class A {\n    static Writer wr;\n\n    public static void main(String[] args) throws Exception {\n        // long startTime = System.nanoTime();\n\n        // String testString = \"\";\n        // InputStream stream = new ByteArrayInputStream(testString.getBytes(StandardCharsets.UTF_8));\n        // Reader in = new Reader(stream);\n\n        Reader in = new Reader();\n        BufferedWriter out = new BufferedWriter(new OutputStreamWriter(System.out));\n        \n        wr = new Writer();\n\n        /* Precomputation */\n\n\n        // long elapsedTime = System.nanoTime() - startTime;\n        // double seconds = (double)elapsedTime / 1000000000.0;\n        // wr.writeRedLn(seconds);\n\n        /* Input */\n        int N = in.nextInt();\n\n        int max = 0, min = 0, ans=0;\n        for(int i=0;i<N;i++) {\n            int x = in.nextInt();\n            if(i==0) {\n                max = x;\n                min = x;\n            }\n            else {\n                if(x>max) {\n                    max=x;\n                    ans++;\n                }\n                else if(x<min) {\n                    min = x;\n                    ans++;\n                }\n            }\n        }\n\n\n        out.write(ans + \"\\n\");\n        out.flush();\n    }\n}\n\n\n\nclass Writer {\n    public void writeRedLn(Object x) { writeRedLn(x+\"\"); }\n    public void writeBlueLn(Object x) { writeBlueLn(x+\"\"); }\n    public void writeGreenLn(Object x) { writeGreenLn(x+\"\"); }\n    public void writePinkLn(Object x) { writePinkLn(x+\"\"); }\n    public void writeRedLn(String x) { System.out.println((char)27 + \"[31m\" + (char)27 + \"[40m\" + x + (char)27 + \"[0m\"); }\n    public void writeBlueLn(String x) { System.out.println((char)27 + \"[34m\" + (char)27 + \"[3m\" + x + (char)27 + \"[0m\"); }\n    public void writeGreenLn(String x) { System.out.println((char)27 + \"[32m\" + (char)27 + \"[3m\" + x + (char)27 + \"[0m\"); }\n    public void writePinkLn(String x) { System.out.println((char)27 + \"[30m\" + (char)27 + \"[45m\" + x + (char)27 + \"[0m\"); }\n    public void writeRed(String x) { System.out.print((char)27 + \"[31m\" + (char)27 + \"[40m\" + x + (char)27 + \"[0m\"); }\n    public void writeBlue(String x) { System.out.print((char)27 + \"[34m\" + (char)27 + \"[3m\" + x + (char)27 + \"[0m\"); }\n    public void writeGreen(String x) { System.out.print((char)27 + \"[32m\" + (char)27 + \"[3m\" + x + (char)27 + \"[0m\"); }\n    public void writePink(String x) { System.out.print((char)27 + \"[30m\" + (char)27 + \"[45m\" + x + (char)27 + \"[0m\"); }\n}\n\n\nclass Reader {\n    public int LINE_LIMIT = -1;\n    final private int BUFFER_SIZE = 1 << 16;private DataInputStream din;private byte[] buffer;private int bufferPointer, bytesRead;\n    public Reader(){din=new DataInputStream(System.in);buffer=new byte[BUFFER_SIZE];bufferPointer=bytesRead=0;}\n    public Reader(InputStream stream){din=new DataInputStream(stream);buffer=new byte[BUFFER_SIZE];bufferPointer=bytesRead=0;}\n    public int[] ni_array(int N) throws IOException { int[] ans = new int[N]; for(int i=0;i<N;i++) { ans[i] = nextInt(); } return ans; }\n    public String readLineUtil()throws IOException{byte[] buf=new byte[Math.max(1024,LINE_LIMIT)];int cnt=0,c;\n        while((c=read())!=-1){if(c=='\\n')break;buf[cnt++]=(byte)c;}return new String(buf,0,cnt);}\n    public String readLine() throws IOException{ String line = readLineUtil().trim(); while(line.length()==0) line = readLineUtil().trim(); return line; }\n    public char nextChar()throws IOException{byte c=read();while(c<=' ')c=read();return (char)c;}\n    public int nextInt()throws IOException{int ret=0;byte c=read();while(c<=' ')c=read();boolean neg=(c=='-');\n        if(neg)c=read();do{ret=ret*10+c-'0';}while((c=read())>='0'&&c<='9');if(neg)return -ret;return ret;} \n    public long nextLong()throws IOException{long ret=0;byte c=read();while(c<=' ')c=read();boolean neg=(c=='-');\n        if(neg)c=read();do{ret=ret*10+c-'0';}while((c=read())>='0'&&c<='9');if(neg)return -ret;return ret;}\n    public double nextDouble()throws IOException{double ret=0,div=1;byte c=read();while(c<=' ')c=read();boolean neg=(c=='-');if(neg)c = read();do {ret=ret*10+c-'0';}while((c=read())>='0'&&c<='9');\n        if(c=='.')while((c=read())>='0'&&c<='9')ret+=(c-'0')/(div*=10);if(neg)return -ret;return ret;}\n    private void fillBuffer()throws IOException{bytesRead=din.read(buffer,bufferPointer=0,BUFFER_SIZE);if(bytesRead==-1)buffer[0]=-1;}\n    private byte read()throws IOException{if(bufferPointer==bytesRead)fillBuffer();return buffer[bufferPointer++];}\n    public void close()throws IOException{if(din==null) return;din.close();}\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nlst = list(map(int,input().split()))\nmaxi = lst[0]\nmini = lst[0]\nres = 0\nfor i in range(1,n):\n    if lst[i]>maxi:\n        res+=1\n        maxi = lst[i]\n    elif lst[i]<mini:\n        res+=1\n        mini=lst[i]\nprint(res)\n"
        },
        {
            "language": 3,
            "solution": "n = input()\nx = list(map(int,input().split()))\nMin = x[0]\nMax = x[0]\ncount = 0\nfor i in range(1 , len(x)) :\n    if x[i] < Min :\n        count += 1\n        Min = x[i]\n    if x[i] > Max :\n        count += 1\n        Max = x[i]\n\nprint(count)"
        },
        {
            "language": 3,
            "solution": "number_of_contest = int(input())\npoints_earned = [int(i) for i in input().split()]\n\nlowest = points_earned[0]\nhighest = points_earned[0]\n\ncount = 0\n\nfor i in range(number_of_contest):\n    if points_earned[i] < lowest:\n        count += 1\n        lowest = points_earned[i]\n    elif points_earned[i] > highest:\n        count += 1\n        highest = points_earned[i]\n\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nli = list(map(int, input().split()))\n\nansw = 0\nmax = li[0]\nmin = li[0]\nfor i in range(1, len(li)):\n\tif li[i] < min:\n\t\tmin = li[i]\n\t\tansw += 1\n\telif li[i] > max:\n\t\tmax = li[i]\n\t\tansw += 1\nprint(answ)\n"
        },
        {
            "language": 3,
            "solution": "#####  A. I_love_%username%\n\namazing=0\n\nn=int(input())\npoint=list(map(int,input().split()))\nmini=point[0]\nmaxi=point[0]\nfor i in point:\n    if maxi<i:\n        maxi=i\n        amazing+=1\n    elif mini>i:\n        mini=i\n        amazing+=1        \nprint(amazing)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=[int(i) for i in input().split()]\na=l[0]\nb=l[0]\nc=0\nif n==1:\n    print('0')\nelse:\n    for i in l[1:]:\n        if i>a:\n            a=i\n            c+=1\n        if i<b:\n            b=i\n            c+=1\n    print(c)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\nmaxi = mini = a[0]\ncnt = 0\nfor i in a:\n    if i > maxi:\n        cnt += 1\n        maxi = i\n    if i < mini:\n        cnt += 1\n        mini = i\nprint(cnt)"
        },
        {
            "language": 3,
            "solution": "input()\nl=list(map(int,input().split()))\na=max(l[:2])\nb=min(l[:2])\nx=int(a!=b)\nfor i in l[2:]:\n    if i>a :\n            x+=1\n            a=i\n    if i<b:\n            x+=1\n            b=i\nprint(x)\n"
        },
        {
            "language": 3,
            "solution": "N=int(input())\nlista=[int(x) for x in input().split()]\ncontador=0\nmenor=lista[0]\nmayor=lista[0]\nfor i in range(len(lista)):\n    if(lista[i]<menor):\n        menor=lista[i]\n        contador+=1\n    if(mayor<lista[i]):\n        mayor=lista[i]\n        contador+=1\nprint(contador)\n\t  \t  \t  \t\t\t \t\t  \t \t  \t \t \t  \t"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid solve() {\n  int n;\n  cin >> n;\n  int arr[n];\n  for (int i = 0; i < n; i++) cin >> arr[i];\n  int mn = INT_MAX, mx = INT_MIN, amaz = 0;\n  for (int i = 0; i < n; i++) {\n    if (i != 0) {\n      if (arr[i] > mx) {\n        amaz++;\n        mx = arr[i];\n      }\n      if (arr[i] < mn) {\n        amaz++;\n        mn = arr[i];\n      }\n    }\n    if (i == 0) {\n      mx = arr[i];\n      mn = arr[i];\n    }\n  }\n  cout << amaz;\n}\nint main() {\n  int t = 1;\n  while (t--) {\n    solve();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "n = input()\na = [int(i) for i in raw_input().split()]\nminimum = a[0]\nmaximum = a[0]\ncount = 0\nfor i in a :\n    if i<minimum :\n        minimum = i\n        count += 1\n    elif i> maximum :\n        maximum  = i\n        count += 1\n    else :pass\n\nprint count\n"
        },
        {
            "language": 1,
            "solution": "input()\nfs = 1\nans = 0\nfor x in raw_input().split(' '):\n\ty = int(x)\n\tif fs == 1:\n\t\tfs = 0\n\t\tmax = y\n\t\tmin = y\n\t\tcontinue\n\tif max < y:\n\t\tmax = y\n\t\tans += 1\n\tif min > y:\n\t\tmin = y\n\t\tans += 1\nprint ans"
        },
        {
            "language": 3,
            "solution": "nStr = input()\nn = int(nStr)\n\npointStr = input()\npointLine = pointStr.split()\n\npMax = -1\npMin = 10001\n\namazing = -2\n\nfor i in range(n):\n\tpoint = int(pointLine[i])\n\t\n\tif point>pMax:\n\t\tamazing = amazing+1\n\t\tpMax = point\n\t\t\n\tif point<pMin:\n\t\tamazing = amazing+1\n\t\tpMin = point\n\t\t\nprint(amazing)"
        },
        {
            "language": 1,
            "solution": "n=input()\np=map(int,raw_input().split())\nprint sum(1 for i in xrange(1,n)if max(p[:i])<p[i]or min(p[:i])>p[i])"
        },
        {
            "language": 3,
            "solution": "n=int(input(''))\np=[int(i) for i in input('').split(' ')]\na=0\nfor i in range(1,n):\n    if all(p[i]>x for x in p[:i]) or all(p[i]<x for x in p[:i]):\n        a+=1\nprint(a)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nperf= list(map(int, input().split()))\nworst=best=perf[0]\ncount=0\nfor i in range(1, n):\n    if  perf[i]>best:\n        best=perf[i]\n        count+=1\n    elif perf[i]<worst:\n        worst=perf[i]\n        count+=1\n    else:\n        pass\nprint(count)        "
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int,input().split()))\ns = 0\nfor i in range(1,n):\n    if a[i] > max(a[:i]) or a[i] < min(a[:i]):\n        s += 1\nprint (s)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=[int(a) for a in input().split()]\nc=0\nfor i in range(len(l)):\n    if i>0 and (l[i]>max(l[:i]) or l[i]<min(l[:i])):\n        c+=1\nprint(c)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int x;\n  int counter = 0;\n  cin >> x;\n  int lowest;\n  int increased;\n  int arr[x];\n  for (int i = 0; i < x; i++) {\n    cin >> arr[i];\n  }\n  lowest = arr[0];\n  increased = lowest;\n  for (int i = 1; i < x; i++) {\n    if (lowest > arr[i]) {\n      counter++;\n      lowest = arr[i];\n    } else if (increased < arr[i]) {\n      counter++;\n      increased = arr[i];\n    }\n  }\n  cout << counter << endl;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nline=input().split()\nline1=[]\nx,y=0,0\nfor i in range(n):\n    line[i]=int(line[i])\n    line1.append(int(line[i]))\nfor i in range(1,n):\n    if line[i]>line[0]:\n        line[0]=line[i]\n        x=x+1\n\nfor i in range(1,n):\n    if line1[i]<line1[0]:\n        line1[0]=line1[i]\n        y=y+1\nprint(x+y)"
        },
        {
            "language": 3,
            "solution": "n,a,x=int(input()),list(map(int,input().split())),0\nq,w=a[0],a[0]\nfor i in range(1,len(a)):\n    if q>a[i]:\n        q=min(q,a[i])\n        x+=1\n    elif w<a[i]:\n        w=max(w,a[i])\n        x+=1\nprint(x)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\npoints = [int(x) for x in input().strip().split()]\nlowest = highest = points[0]\nresult = 0\n\nfor point in points[1:]:\n    if point < lowest:\n        lowest = point\n        result += 1\n    elif point > highest:\n        highest = point\n        result += 1\n\nprint(result)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  int a[n];\n  int i, j, k;\n  for (i = 0; i < n; i++) cin >> a[i];\n  int max = a[0], min = a[0], x = 0, y = 0;\n  max = a[0];\n  min = a[0];\n  for (i = 1; i < n; i++) {\n    if (max < a[i]) {\n      max = a[i];\n      x++;\n    }\n    if (min > a[i]) {\n      min = a[i];\n      x++;\n    }\n  }\n  cout << x << endl;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nline=input()\nls=line.split()\na=int(ls[0])\nb=int(ls[0])\nt=0\nfor i in range(1,n):\n    c=int(ls[i])\n    if c>b:\n        t+=1\n        b=c\n    if a>c:\n        t+=1\n        a=c\nprint(t)\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collection;\nimport java.util.Collections;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.LinkedList;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Queue;\nimport java.util.Scanner;\nimport java.util.Set;\nimport java.util.StringTokenizer;\n\nimport javafx.animation.Transition;\npublic class codeforces { \n\t \n    public static void main(String[] args) throws IOException  {\n    //BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n\tScanner read = new Scanner(new BufferedReader(new InputStreamReader(System.in)));\n\tPrintWriter out=new PrintWriter(System.out);\n    int n=read.nextInt();\n\tint first=read.nextInt();\n\tint min=first;\n\tint max=first;\n\tint counter=0;\n\tfor(int i=1;i<n;i++) {\n\t\t\n\t\tint b=read.nextInt();\n\t\tif(b>max) {\n\t\t\tmax=b;\n\t\t\tcounter++;\n\t\t}\n\t\telse if (b<min)\n\t\t{\n\t\t\tmin=b;\n\t\t\tcounter++;\n\t\t}\n\t\telse\n\t\t\tcontinue;\n\t\t\n\t\t\n\t}\n    \n\tSystem.out.println(counter);\n\t\n\t}\n}"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.math.*;\nimport java.io.*;\n\npublic class Main\n{\n    public static void main(String[] args)\n    {\n        Scanner in = new Scanner(System.in);\n        int n = in.nextInt();\n        int[] a = new int[n];\n        for(int i = 0; i < n; ++i)\n            a[i] = in.nextInt();\n        int minValue = a[0], maxValue = a[0];\n        int ans=0;\n        for(int i=1;i<n;++i)\n        {\n            if(a[i] > maxValue){maxValue = a[i]; ans++;}\n            if(a[i] < minValue){minValue = a[i]; ans++;}\n        }\n        System.out.println(ans);\n    }\n}\n"
        },
        {
            "language": 1,
            "solution": "n=input()\ncount=0\nl=map(int,raw_input().split())\nmaxi,mini=l[0],l[0]\nfor x in range(1,len(l)):\n    if(max(maxi,l[x])!=maxi):\n        count+=1\n        maxi=l[x]\n    if(min(mini,l[x])!=mini):\n        count+=1\n        mini=l[x]\nprint count\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nlst = list(map(int, input().split()))\n\nx = lst[0]\ny = lst[0]\na = b = 0\n\nif len(lst) == 1:\n    print(0)\nelse:\n    for i in lst:\n        if i > x:\n            x = i\n            a += 1\n\n    for i in lst:\n        if i < y:\n            y = i\n            b += 1\n\n    print(a + b)"
        },
        {
            "language": 3,
            "solution": "\n\n\ndef get_number(ls):\n    count = 0\n    indexes = list()\n    for i in range(1, len(ls)):\n        xs = ls[:i+1]\n        if (min(xs) == ls[i] or max(xs) == ls[i]) and xs.count(ls[i]) == 1:\n            indexes.append(i+1)\n            count += 1\n    return count\n\n\n\n\nif __name__ == '__main__':\n    n = int(input())\n    ls = [int(i) for i in input().split()]\n    print(get_number(ls))\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\ns=list(map(int,input().split()))\nmin=s[0]\nmax=s[0]\nans=0\nfor i in range(1,n):\n    if s[i]<min:\n        ans+=1\n        min=s[i]\n    if s[i]>max:\n        ans+=1\n        max=s[i]\nprint(ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 1E5 + 3;\nint n, f, awesome;\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  cin >> n;\n  cin >> f;\n  int maximum = f;\n  int minimum = f;\n  for (int i = 1; i < n; i++) {\n    cin >> f;\n    if (f > maximum) {\n      awesome++;\n      maximum = f;\n      continue;\n    }\n    if (f < minimum) {\n      awesome++;\n      minimum = f;\n      continue;\n    }\n  }\n  cout << awesome << endl;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.ArrayList;\nimport java.util.List;\nimport java.util.Scanner;\n\npublic class ILoveUserName {\n\n\n    public static void main(String[] args) {\n\n        int cantNums, cont = 0;\n        Scanner tec = new Scanner(System.in);\n\n        cantNums = Integer.valueOf(tec.nextLine());\n\n        String[] nums;\n        nums = tec.nextLine().split(\" \");\n\n        int[] numsInt = new int[nums.length];\n\n        for (int i = 0; i < numsInt.length; i++) { //Se convierte el arreglo de cadenas a arreglo de enteros\n            numsInt[i] = Integer.valueOf(nums[i]);\n        }\n\n        int min, max;\n        min = 10001;\n        max = 0;\n\n        for (int j = 0; j < numsInt.length; j++) {\n\n            //Se encuentra el numero minimo y el maximo hasta el numero a comparar\n            if (numsInt[j] < min) {\n                min = numsInt[j];\n                \n                if (j!= 0) {\n                    cont++;\n                }\n            }\n            if (numsInt[j] > max) {\n                max = numsInt[j];\n                \n                if (j!= 0) {\n                    cont++;\n                }\n            }\n        }\n        System.out.println(cont);\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nnumbers = input().split()\nless = int(numbers[0])\nmore = int(numbers[0])\ntotal = 0\nfor i in range(0, n):\n    if int(numbers[i]) > more:\n        more = int(numbers[i])\n        total += 1\n    elif int(numbers[i]) < less:\n        less = int(numbers[i])\n        total += 1\nprint(total)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\np = [int(i) for i in input().split()]\nq, r = p[0], p[0]\ncount = 0\nfor i in range(1, n):\n    if p[i] > q:\n        count += 1\n        q = p[i]\n    elif p[i] < r:\n        count += 1\n        r = p[i]\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\ns=list(map(int, input().split()))\na=s[0]\nc=0\nl=[]\nt=[]\nl.append(a)\nt.append(a)\nfor i in range(1,len(s)):\n    co=0\n    for j in range(len(l)):\n        if s[i]>l[j]:\n            co=co+1\n    if co==len(l):\n        c=c+1\n    l.append(s[i])\nfor i in range(1,len(s)):\n    co=0\n    for j in range(len(t)):\n        if s[i]<t[j]:\n            co=co+1\n    if co==len(t):\n        c=c+1\n    t.append(s[i])\nprint(c)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\n_min = a[0]\n_max = a[0]\namazing = 0\nfor i in range(1, n):\n    if a[i] > _max:\n        amazing += 1\n        _max = a[i]\n    elif a[i] < _min:\n        amazing += 1\n        _min = a[i]\nprint(amazing)"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\n\t\t\tpublic class BM  {\n\t\t\t\t\n\t\t\t\tpublic static void main(String[] args) {\n\t\t\t\t\n\t\t\t\t\tScanner sc = new Scanner(System.in);\n\t\t\t\t\tint n = sc.nextInt();\n\t\t\t\t\tint min = sc.nextInt();\n\t\t\t\t\tint max = min;\n\t\t\t\t\tint count = 0;\n\t\t\t\t\twhile(n-- >1)\n\t\t\t\t\t{\n\t\t\t\t\t\tint a = sc.nextInt();\n\t\t\t\t\t\tif(a > max)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmax = a;\n\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(a < min)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmin = a;\n\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\tSystem.out.println(count);\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\np=input().split()\nP=[int(p[0])]\ns=0\nfor i in range(1,n):\n    if int(p[i])>max(P) or int(p[i])<min(P):\n        s=s+1\n    P.append(int(p[i]))\nprint(s)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\nb = []\nk = 0\nm = 0\ns = 0\nfor i in a:\n    b.append(i)\n    if (i > k or i < m) and i != a[0]:\n        s = s + 1\n    k = max(b)\n    m = min(b)\nprint(s)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nsp = list(map(int, input().split()))\n\nmn = sp[0]\nmx = mn\nk = 0\nfor i in range(1,n):\n    if sp[i] < mn:\n        k += 1\n        mn = sp[i]\n    elif sp[i] > mx:\n        k += 1\n        mx = sp[i]\nprint(k)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nx = list(map(int,input().split()))\nmi = x[0]\nma = x[0]\nsum = 0\nfor i in range(1, n):\n    if x[i] > ma:\n        ma = x[i]\n        sum += 1\n    if x[i] < mi:\n        mi = x[i]\n        sum += 1\nprint(sum)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\ns = list(map(int, input().split()))\na = s[0]\nb = s[0]\nz = 0\nu = 0\nfor i in s:\n    if i>a:\n        a = i\n        z+=1\n    if i<b:\n        b = i\n        u+=1\nprint(z+u)"
        },
        {
            "language": 3,
            "solution": "\nn = int(input())\na = list(map(int,input().split()))\n\nmin = max = a[0]\nc = 0\nfor i in range(1,n):\n\tif a[i]<min:\n\t\tmin = a[i]\n\t\tc+=1\n\tif a[i]>max:\n\t\tmax = a[i]\n\t\tc+=1\nprint (c)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nscores=list(map(int,input().split()))\n\ncnt_amazing_performances=0\n\nfor i in range (1,n):\n    count1 = 0\n    count2 = 0\n    j, k = 0, 0\n\n    for j in range (i):\n        if scores[i]>scores[j]:\n           count1+=1\n\n    if count1==j+1:\n        cnt_amazing_performances+=1\n        continue\n\n    for k in range(i):\n        if scores[i] < scores[k]:\n            count2+= 1\n\n    if count2 == k+1:\n        cnt_amazing_performances += 1\n        continue\n\nprint(cnt_amazing_performances)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = list(map(int,input().split()))\nct = 0\n\nfor i in range(1,n):\n    if l[i] > max(l[:i]) or l[i] < min(l[:i]):\n        ct +=1\n\nprint(ct)\n\n\n"
        },
        {
            "language": 1,
            "solution": "n = int (raw_input ())\nA = map (int, raw_input ().split (' '))\nB = []\nans = 0\n\nfor i in range (0, n):\n\tif i > 0:\n\t\tif A[i] < B[0] or A[i] > B[-1]: ans += 1\n\tB.append (A[i])\n\tB.sort ()\nprint ans\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nL = list(map(int,input().split()))\nans = 0\nfor i in range(n):\n\tflag = 1\n\tfor j in range(i):\n\t\tif L[j] >= L[i]:\n\t\t\tflag = 0\n\t\t\tbreak\n\tans += flag\n\tflag = 1\n\tfor j in range(i):\n\t\tif L[j] <= L[i]:\n\t\t\tflag = 0\n\t\t\tbreak\n\tans += flag\nans -= 2\nprint(ans)\n\n              \t\t\t\t\t    \t  \t  \t"
        },
        {
            "language": 3,
            "solution": "n = int(input())\ncontests = [int(x) for  x in input().split()]\n\ncounter = cmin = cmax = 0\n\ndef max_min(lst):\n    if isinstance(lst, int):\n        lst = [lst]\n    return max(lst), min(lst)\n\nfor idx, cntst in enumerate(contests):\n    if idx == 0:\n        cmax, cmin = max_min(contests[0])\n        continue\n\n    if cntst > cmax:\n        counter += 1\n    elif cntst < cmin:\n        counter += 1\n\n    cmax, cmin = max_min(contests[:idx+1])\n\n\nprint(counter)"
        },
        {
            "language": 1,
            "solution": "n = int( raw_input() )\nans = 0\nMax = -1 \nMin = 10000000000000000\nA = map(int, raw_input().split())\ni = 0\nfor a in A:\n    if i == 0 :\n        Max = a \n        Min = a\n        i = 1\n    else :\n        if a > Max :\n           # print a\n            Max = a\n            ans = ans + 1\n        if a < Min :\n           # print a \n            Min = a\n            ans = ans + 1\nprint ans \n"
        },
        {
            "language": 3,
            "solution": "n= int(input())\nls=list(map(int,input().split()))\n\na=ls[0] ; b=ls[0]\n\ndel ls[0]\nc=0\n\nfor i in ls:\n    if i > a:\n        c+=1\n        a=i\n    \n    if i < b:\n        c+=1\n        b=i\n    \n\nprint(c)\n        \n\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\ndata = []\ninp = input()\ninpchars = inp.split(\" \")\nfor i in inpchars:\n\tdata.append(int(i))\n\nhigh = data[0]\nlow = data[0]\namazing = 0\nfor i in data:\n\tif i>high:\n\t\thigh=i\n\t\tamazing+=1\n\telif i<low:\n\t\tlow=i\n\t\tamazing+=1\nprint (amazing)\n"
        },
        {
            "language": 1,
            "solution": "n=input();a=map(int,raw_input().split())\nx=a[:1]\nfor i in a:n-=min(x)<=i<=max(x);x+=[i]\nprint n"
        },
        {
            "language": 3,
            "solution": "numCont = int(input())\ncontests = list(map(int, input().split()))\namazings = 0\nmaxScore = contests[0]\nminScore = contests[0]\nfor i in range(numCont):\n    if contests[i] > maxScore:\n        amazings += 1\n        maxScore = contests[i]\n    elif contests[i] < minScore:\n        amazings += 1\n        minScore = contests[i]\nprint(amazings)\n    \n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class WaterMelon {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        int contests = in.nextInt();\n        in.nextLine();\n        int min = in.nextInt();\n        int max = min;\n        int temp;\n        int counter = 0;\n\n        for (int i = 1; i < contests; i++) {\n            temp = in.nextInt();\n            if (temp > max) {\n                max = temp;\n                counter++;\n\n            }\n            else if (temp<min){\n                min=temp;\n                counter++;\n            }\n\n        }\n        System.out.println(counter);\n    }\n}\n\n"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\nx = raw_input()\nx = x.split(' ')\n#x = map(int, x)\nx = [int(i) for i in x]\n\nawesomeness_count = 0\nfor i in range(len(x)):\n    if i == 0:\n        min_value = x[i]\n        max_value = x[i]\n    else:\n        #print type(x[i])\n        if x[i] < min_value:\n            #print 'min ', x[i]\n            awesomeness_count += 1\n            min_value = x[i]\n        elif x[i] > max_value:\n            #print 'max ', x[i]\n            awesomeness_count += 1\n            max_value = x[i]\n\nprint awesomeness_count\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nL=list(map(int,input().split(\" \")))\nL2=[]\nL2.append(L[0])\ncnt=0\nfor i in range(1,n):\n    if L[i]>max(L2) or L[i]<min(L2):\n        cnt+=1\n    L2.append(L[i])\nprint(cnt)\n    "
        },
        {
            "language": 1,
            "solution": "n=int(raw_input())\n\npts=raw_input().split()\n\npoints=[]\ngreater=0\nlesser=0\namazing=0\n\nfor i in range(n):\n   points.append(int(pts[i]))\n\nfor i in range(1,n):\n   greater=0\n   lesser=0\n   for j in range(i):\n      if points[i]>points[j]:\n         greater+=1\n      elif points[i]<points[j]:\n         lesser+=1\n   if greater==i or lesser==i:\n      amazing+=1\n\nprint amazing\n"
        },
        {
            "language": 1,
            "solution": "import sys\n\nn = int(sys.stdin.readline().strip())\n\nsurprises = 0\nbest_score = None\nworst_scope = None\n\nfor score in map(int, sys.stdin.readline().split()):\n    if best_score is None:\n        best_score = score\n        worst_scope = score\n        continue\n    if score < worst_scope:\n        surprises += 1\n        worst_scope = score\n        continue\n    if score > best_score:\n        surprises += 1\n        best_score = score\n        continue\n\nprint surprises"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=[int(x) for x in input().split()]\ncount=0\na=l[0]\nl=l[1:]\nl1=[a]\nfor i in l:\n    if i>max(l1) or i<min(l1):\n        count+=1\n    l1.append(i)\nprint(count)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  vector<int> a(n);\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n  }\n  int count = 0;\n  int maxi = a[0];\n  int mini = a[0];\n  for (int i = 1; i < n; i++) {\n    if (a[i] > maxi || a[i] < mini) {\n      count++;\n    }\n    maxi = max(maxi, a[i]);\n    mini = min(mini, a[i]);\n  }\n  cout << count;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\np=input().split()\ni=0\ns=[]\nwhile i<n:\n    s.append(int(p[i]))\n    i+=1\ni=1\nans=0\nwhile i<n:\n    a=s[:i]\n    if s[i]>max(a) or s[i]<min(a):\n        ans+=1\n    i+=1\nprint(ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  vector<int> scores;\n  int x, con, a = 0;\n  cin >> x;\n  cin >> con;\n  scores.push_back(con);\n  for (int i = 0; i < x - 1; i++) {\n    cin >> con;\n    if ((con > *max_element(scores.begin(), scores.end())) ||\n        (con < *min_element(scores.begin(), scores.end())))\n      a++;\n    scores.push_back(con);\n  }\n  cout << a;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = [int(x) for x in input().split()]\n\nmx = l[0]\nmini = l[0]\ncount = 0\n\nfor x in l:\n    if x > mx:\n        count += 1\n        mx = x\n\n    if x < mini:\n        count += 1\n        mini = x\n\nprint(count)\n\n"
        },
        {
            "language": 3,
            "solution": "\nn=int(input())\np=[int(x) for x in input().split()]\nif n==1:\n    print(0)\nelif n==2:\n    if p[0]==p[1]:\n        print(0)\n    else:\n        print(1)\nelse:\n    a=max(p[0],p[1])\n    b=min(p[0],p[1])\n    if a>b:\n        t=1\n    else:\n        t=0\n    for i in range (2,n):\n        if p[i]>a:\n            a=p[i]\n            t+=1\n        elif p[i]<b:\n            b=p[i]\n            t+=1\n    print(t)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nct=list(map(int,input().split()))\nhi=[ct[0]]\namz=0\nfor i in range(1,n):\n    if ct[i]>max(hi) or ct[i]<min(hi):\n        amz+=1\n    hi.append(ct[i])\nprint(amz)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split(' ')))\ncount=0\nfor i in range(1,len(a)):\n    if a[i]<min(a[0:i]) or a[i]>max(a[0:i]):\n        count+=1\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\narr=list(map(int,input().split()))\nmin1=arr[0]\nmax1=arr[0]\nans=0\nfor i in range(1,n):\n    if arr[i]<min1:\n        ans+=1\n        min1=arr[i]\n    if arr[i]>max1:\n        ans+=1\n        max1=arr[i]\nprint(ans)\n\n\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = [int(i) for i in input().split()]\nd = 0\nfor i in range(1,n):\n    b = 0\n    c = 0\n    for j in range(i):\n        if a[j] < a[i]:\n            b += 1\n        elif a[j] > a[i]:\n            c += 1\n    if b == i or c == i:\n        d += 1\nprint(d)\n"
        },
        {
            "language": 3,
            "solution": "input()\ns = list(map(int, input().split()))\ncount = 0\nmin = s[0]\nmax = s[0]\nfor i in s:\n\tif i < min:\n\t\tcount += 1\n\t\tmin = i\n\telif i > max:\n\t\tcount += 1\n\t\tmax = i\n\telse:\n\t\tpass\nprint(count)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main(void) {\n  int a, count = 0;\n  cin >> a;\n  int arr[a - 1];\n  for (int i = 0; i < a; i++) cin >> arr[i];\n  int max = arr[0];\n  int min = arr[0];\n  for (int i = 1; i < a; i++) {\n    if (arr[i] < min) {\n      min = arr[i];\n      count++;\n    } else if (arr[i] > max) {\n      max = arr[i];\n      count++;\n    }\n  }\n  cout << count << endl;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\n\npublic class Iloveusername {\n\n\t\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tint tab[] = new int[n];\n\t\tint count=0;\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t\ttab[i] = sc.nextInt();\n\t\t}\n\t\tint max = tab[0];\n\t\tint min = tab[0];\n\t\tfor(int i=1;i<n;i++){\n\t\t\tif(tab[i]>max){\n\t\t\t\tmax = tab[i];\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\tif(tab[i]<min){\n\t\t\t\tmin = tab[i];\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\t\n\t\tSystem.out.println(count);\n\t\t\n\t}\n\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = [int(x) for x in input().split()]\n\n_min = a[0]\n_max = a[0]\nl = 0\n\nfor i in a[1:]:\n  if i < _min:\n    _min = i\n    l += 1\n  if i > _max:\n    _max = i\n    l += 1\nprint(l)"
        },
        {
            "language": 3,
            "solution": "times = int(input())\npoints = [int(i) for i in input().split()]\n\nmax, min = points[0], points[0]\nsuperior = 0\n\nfor i in range(1, times):\n    if points[i] > max:\n        max = points[i]\n        superior += 1\n    elif points[i] < min:\n        min = points[i]\n        superior += 1\n\nprint(superior)"
        },
        {
            "language": 1,
            "solution": "a=int(raw_input())\nb=map(int,raw_input().split())\nmn=mx=b[0]\nr=0\nfor i in b:\n    if i<mn:\n        r+=1\n        mn=i\n    if i>mx:\n        r+=1\n        mx=i\nprint r\n"
        },
        {
            "language": 3,
            "solution": "def hachiman(l):\n    mx, mn = l[0], l[0]\n    cnt = 0\n    for i in l:\n        if i > mx:\n            cnt += 1\n            mx = i\n        elif i < mn:\n            cnt += 1\n            mn = i\n    return cnt\n\nn = int(input())\nl = list(map(int, input().split()))\nprint(hachiman(l))"
        },
        {
            "language": 3,
            "solution": "a=int(input())\nk=[]\nk=list(map(int,input().split()))\nmn=k[0]\nmx=k[0]\nkl=0\nfor i in k:\n    if i>mx:\n        kl+=1\n        mx=i\n    if i<mn:\n        kl+=1\n        mn=i\nprint(kl)\n#fd\n        \n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nscores=list(map(int,input().split()))\n\nhs=ls=scores[0]\nhcount=lcount=0\nfor i in range(len(scores)):\n    if scores[i]>hs:\n        hs=scores[i]\n        hcount+=1\n    elif scores[i]<ls:\n        ls=scores[i]\n        lcount+=1\nprint(hcount+lcount)\n"
        },
        {
            "language": 3,
            "solution": "# ===============================================================================================\n# importing some useful libraries.\nfrom __future__ import division, print_function\nfrom fractions import Fraction\nimport sys\nimport os\nfrom io import BytesIO, IOBase\nfrom itertools import *\nimport bisect\nfrom heapq import *\nfrom math import *\nfrom copy import *\nfrom collections import deque\nfrom collections import Counter as counter  # Counter(list)  return a dict with {key: count}\nfrom itertools import combinations as comb  # if a = [1,2,3] then print(list(comb(a,2))) -----> [(1, 2), (1, 3), (2, 3)]\nfrom itertools import permutations as permutate\nfrom bisect import bisect_left as bl\n# If the element is already present in the list,\n\n# the left most position where element has to be inserted is returned.\nfrom bisect import bisect_right as br\nfrom bisect import bisect\n\n# If the element is already present in the list,\n# the right most position where element has to be inserted is returned\n\n# ==============================================================================================\n# fast I/O region\n\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\ndef print(*args, **kwargs):\n    \"\"\"Prints the values to a stream, or to sys.stdout by default.\"\"\"\n    sep, file = kwargs.pop(\"sep\", \" \"), kwargs.pop(\"file\", sys.stdout)\n    at_start = True\n    for x in args:\n        if not at_start:\n            file.write(sep)\n        file.write(str(x))\n        at_start = False\n    file.write(kwargs.pop(\"end\", \"\\n\"))\n    if kwargs.pop(\"flush\", False):\n        file.flush()\n\n\nif sys.version_info[0] < 3:\n    sys.stdin, sys.stdout = FastIO(sys.stdin), FastIO(sys.stdout)\nelse:\n    sys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\n\n# inp = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\n# ===============================================================================================\n### START ITERATE RECURSION ###\nfrom types import GeneratorType\n\n\ndef iterative(f, stack=[]):\n    def wrapped_func(*args, **kwargs):\n        if stack: return f(*args, **kwargs)\n        to = f(*args, **kwargs)\n        while True:\n            if type(to) is GeneratorType:\n                stack.append(to)\n                to = next(to)\n                continue\n            stack.pop()\n            if not stack: break\n            to = stack[-1].send(to)\n        return to\n\n    return wrapped_func\n\n\n#### END ITERATE RECURSION ####\n\n# ===============================================================================================\n# some shortcuts\n\nmod = 1000000007\n\n\ndef inp(): return sys.stdin.readline().rstrip(\"\\r\\n\")  # for fast input\n\ndef out(var): sys.stdout.write(str(var))  # for fast output, always take string\n\ndef lis(): return list(map(int, inp().split()))\n\ndef stringlis(): return list(map(str, inp().split()))\n\ndef sep(): return map(int, inp().split())\n\ndef strsep(): return map(str, inp().split())\n\n\ndef zerolist(n): return [0] * n\n\ndef nextline(): out(\"\\n\")  # as stdout.write always print sring.\n\ndef testcase(t):\n    for p in range(t):\n        solve()\n\ndef printlist(a):\n    for p in range(0, len(a)):\n        out(str(a[p]) + ' ')\n\ndef solve():\n    n=int(inp())\n    ar=lis()\n    mi=ar[0]\n    ma=ar[0]\n    s=0\n    for i in ar:\n        if i<mi:\n            s+=1\n            mi=i\n        elif i>ma:\n            s+=1\n            ma=i\n    print(s)\n\n\n\n\n\nsolve()\n\n\n"
        },
        {
            "language": 3,
            "solution": "def main():\n\tn=int(input())\n\ta=list(map(int,input().split()))\n\tam=0\n\tfor i in range(1,n):\n\t\tmn=min(a[:i])\n\t\tmx=max(a[:i])\n\t\tif a[i]>mx or a[i]<mn:\n\t\t\tam+=1\n\tprint(am)\n\nif __name__=='__main__':\n\tmain()"
        },
        {
            "language": 3,
            "solution": "n = int( input() )\nm = list( map( int,input().split() ) )\nmax=m[0]\nmin=m[0]\nc=0\nfor i in range(n):\n    if m[i] > max:\n        c+=1\n        max=m[i]\n    elif m[i] < min:\n        c+=1\n        min=m[i]\n\nprint (c)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\narr = list(map(int,input().split()))\n\nrs = 0\nmaxA = arr[0]\nminA = arr[0]\nfor i in range(1,n):\n    if(arr[i] > maxA):\n        rs += 1\n        maxA = arr[i]\n    if(arr[i] < minA):\n        rs += 1\n        minA = arr[i]\nprint(rs)\n    "
        },
        {
            "language": 3,
            "solution": "n=input()\np=input()\np=p.split()\ns=[]\n\nfor i in p:\n    s.append(int(i))\n\namz=0\nbest=s[0]\nworst=s[0]\n\nfor i in s:\n    if i > best:\n        best=i\n        amz=amz+1\n    if i < worst:\n        worst=i\n        amz=amz+1\nprint(amz)\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class I\n{\n    public static void main(String args[])\n    {\n        Scanner sc=new Scanner(System.in);\n       int n=sc.nextInt();\n       int a[]=new int[n];\n       for(int i=0;i<n;i++)\n       {\n           a[i]=sc.nextInt();\n       }\n       int max=a[0];\n       int min=a[0];\n       int count=0;\n       for(int i = 1; i < n ; i++)\n\t\t\t\t    {\n\t\t\t\t    \t if(a[i]>max)\n\t\t\t\t    \t   {\n\t\t\t\t\t\t count++;\n\t\t\t\t    \t   max = a[i];\n\t\t\t\t\t}\n\t\t\t\t    \t    else if(a[i]<min)\n\t\t\t\t          {\n\t\t\t\t\t\t\t\t\t      count++;\n\t\t\t\t\t      min = a[i];\n\t\t\t\t              \n\t\t\t\t          }\n\t\t\t\t\t}\n\t\t\t\t\t\n    \n\t\t\t\t\tSystem.out.println(count);\n \n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nx = 0\na = 0\nfor i in list(map(int, input().split())):\n    if a == 0:\n        max = i\n        min = i\n    if min > i or max < i:\n        if max < i:\n            max = i\n        else:\n            min = i\n        x += 1\n    a = 1\nprint(x)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\ns=[int(i) for i in input().split()]\namaz=0\nfor i in range(1,n):\n    if s[i]>max(s[:i]) or s[i]<min(s[:i]):\n        amaz+=1\nprint(amaz)\n"
        },
        {
            "language": 3,
            "solution": "input()\na = input()\nresults = a.split()\nintegered = list(map(int, results))\n\nmax = integered[0]\nmin = integered[0]\ncounter = 0\nfor x in integered:\n    if x > max:\n        max = x\n        counter += 1\n    elif x < min:\n        min = x\n        counter += 1\n\nprint(counter)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstruct comp {\n  bool operator()(const vector<int>& lhs, const vector<int>& rhs) const {\n    return lhs.size() > rhs.size();\n  }\n};\nstruct comps {\n  bool operator()(const string& lhs, const string& rhs) const {\n    return lhs > rhs;\n  }\n};\nbool ff(pair<int, int> a, pair<int, int> b) { return a.first < b.first; }\ndouble dis(double x1, double y1, double x2, double y2) {\n  return sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n}\nint gcd(long long unsigned int a, long long unsigned int b) {\n  return (b == 0) ? a : gcd(b, a % b);\n}\nint comb(int a, int b) {\n  if (a == 0) return 1;\n  if (a < b) return 1;\n  if (a == b) return 1;\n  if (b == 1) return a;\n  if (b == 0) return 1;\n  long long unsigned int aa = 1, bb = 1;\n  for (int i = b; i > 0; i--, a--) {\n    aa *= a;\n    bb *= i;\n    int gc = gcd(aa, bb);\n    if (gc > 1) {\n      aa /= gc;\n      bb /= gc;\n    }\n  }\n  return aa % 1000000007;\n}\nbool isprime(long long unsigned int n) {\n  for (int i = 2; i <= sqrt(n); i++)\n    if (n % i == 0) return false;\n  return true;\n}\nint main() {\n  int n, d, a = 0;\n  int min = 100000, max = 0;\n  scanf(\"%d\", &n);\n  scanf(\"%d\", &d);\n  min = d;\n  max = d;\n  for (int i = 1; i < n; i++) {\n    scanf(\"%d\", &d);\n    if (d < min) {\n      a++;\n      min = d;\n    } else if (d > max) {\n      a++;\n      max = d;\n    }\n  }\n  cout << a;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "# I_love_Velichko \u2665\nn=int(input())\nans=0\nl=list(map(int, input().split()))\nmimi=l[0]\nmami=l[0]\nfor i in l:\n     if i>mimi:\n          ans+=1\n          mimi=i\n     else:\n          if i<mami:\n               ans+=1\n               mami=i\nprint(ans)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nA=list(map(int,input().split()))\nmaxi=A[0]\nmini=A[0]\nans=0\nfor i in range(n):\n    if A[i]>maxi:\n        maxi=A[i]\n        ans+=1\n    if A[i]<mini:\n        mini=A[i]\n        ans+=1\nprint(ans)\n"
        },
        {
            "language": 3,
            "solution": "_ = input()\ncompetitionList =  list(input().split(' '))\nfor i in range(len(competitionList)):\n    competitionList[i] = int(competitionList[i])\n\ncurrentMathMax = competitionList[0]\ncurrentMathMin = competitionList[0]\nawesome = 0\n\nfor competition in competitionList:\n    if competition > currentMathMax:\n        currentMathMax = competition\n        awesome += 1\n\n    elif competition < currentMathMin:\n        currentMathMin = competition\n        awesome += 1\n\nprint(awesome)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nlista=list(map(int,input().split()))\nminimo=lista[0]\nmaximo=lista[0]\namazing=0\nfor i in range(1,n):\n    if lista[i]>maximo:\n        amazing+=1\n        maximo=lista[i]\n    elif lista[i]<minimo:\n        amazing+=1\n        minimo=lista[i]\nprint(amazing)"
        },
        {
            "language": 3,
            "solution": "a=int(input())\nb=input().split()\ni=0\ns=0\nt=0\nfor i in range(a):\n\tb[i]=int(b[i])\ni=0\nwhile i<a:\n\tfor j in range(i):\n\t\tif b[i]>b[j]:\n\t\t\tt=t+1\n\tif t==(i):\n\t\ts=s+1\n\tt=0\n\tfor j in range(i):\n\t\tif b[i]<b[j]:\n\t\t\tt=t+1\n\tif t==(i):\n\t\ts=s+1\n\tt=0\n\ti=i+1\ns=s-2\nprint(s)\n"
        },
        {
            "language": 1,
            "solution": "def great():\n    num = int(raw_input())\n    marks = map(int, raw_input().split())\n\n    x = marks[:1]\n\n    for i in marks:\n        num -= min(x) <= i <= max(x)\n        x += [i]\n    print num\n\ngreat()\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class SolveA {\n\tBufferedReader br;\n\tStringTokenizer in;\n\tPrintWriter out;\n\n\tpublic String nextToken() throws IOException {\n\t\twhile (in == null || !in.hasMoreTokens()) {\n\t\t\tin = new StringTokenizer(br.readLine());\n\t\t}\n\t\treturn in.nextToken();\n\t}\n\n\tpublic int nextInt() throws IOException {\n\t\treturn Integer.parseInt(nextToken());\n\t}\n\n\tpublic double nextDouble() throws IOException {\n\t\treturn Double.parseDouble(nextToken());\n\t}\n\n\tpublic long nextLong() throws IOException {\n\t\treturn Long.parseLong(nextToken());\n\t}\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tnew SolveA().run();\n\t}\n\tpublic void solve() throws IOException {\n\t\tint n = nextInt();\n\t\tint cur = nextInt();\n\t\tint min = cur;\n\t\tint max = cur;\n\t\tint ans = 0;\n\t\tfor (int i = 1; i < n; i++) {\n\t\t\tint x = nextInt();\n\t\t\tif (x > max) {\n\t\t\t\tans++;\n\t\t\t\tmax = x;\n\t\t\t}\n\t\t\tif (x < min) {\n\t\t\t\tans++; \n\t\t\t\tmin = x;\n\t\t\t}\n\t\t}\n\t\tout.println(ans);\n\t}\n\tpublic void run() {\n\t\ttry {\n\t\t\tbr = new BufferedReader(new InputStreamReader(System.in)); // new\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// InputStreamReader(System.in)\n\t\t\tout = new PrintWriter(System.out); // System.out\n\n\t\t\tsolve();\n\n\t\t\tout.close();\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t\tSystem.exit(1);\n\t\t}\n\t}\n}"
        },
        {
            "language": 3,
            "solution": "#A. I_love_%username%\ncontest  = int(input())\ndata = list(map(int,input().split(' ')))\namazingperformance = 0\nhigh,low = data[0],data[0]\nfor i in range(contest):\n    if(data[i]>high):\n        high = data[i]\n        amazingperformance += 1\n    elif (data[i]<low):\n        low = data[i]\n        amazingperformance += 1\n\nprint(amazingperformance)"
        },
        {
            "language": 3,
            "solution": "a=input()\ns=input()\nlst=s.split()\ns=0\nfor i in range(len(lst)):\n    lst[i]=int(lst[i])\nlstmax=lst[0]\nlstmin=lst[0]\nfor i in range(1,len(lst)):\n    if lst[i]>lstmax:\n        s=s+1\n        lstmax=lst[i]\n    elif lst[i]<lstmin:\n        s=s+1\n        lstmin=lst[i]\nprint(s)\n"
        },
        {
            "language": 1,
            "solution": "NAME = \"A\"\ntry:\n    inFile = open(NAME+\".txt\")\nexcept:\n    pass\n\ndef read():\n    try:\n        return inFile.readline().strip()\n    except:\n        return raw_input().strip()\n\nn = int(read())\nstuff = map(int,read().split())\nlow = high = stuff[0]\nans = 0\nfor i in range(1,len(stuff)):\n    if stuff[i]<low or stuff[i]>high:\n        ans += 1\n    low = min(low,stuff[i])\n    high = max(high,stuff[i])\nprint ans"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[int(i) for i in input().split()]\nMin=a[0]\nMax=a[0]\njav=0\nfor i in range(1,n):\n    if Max<a[i]:\n        Max=a[i]\n        jav+=1\n    elif Min>a[i]:\n        Min=a[i]\n        jav+=1\nprint(jav)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nx=[int(i) for i in input().split()]\ns=0\nmin=10000\nmax=0\nfor i in x:\n    if i>x[0]:\n        if i>max:\n            max=i\n            s=s+1\n    elif i<x[0]:\n        if i<min:\n            min=i\n            s=s+1\nprint(s)\n        \n        \n\n    \n\n        \n\n    \n    \n\n"
        },
        {
            "language": 3,
            "solution": "n,result,c,box = input(),[],0,[]\nfor i in input().split():\n    result.append(int(i))\n    if len(result) > 1:\n        if (int(i) == max(result) or int(i) == min(result)) and int(i) not in box and int(i) != result[0]: box.append(int(i))\nprint(len(box))"
        },
        {
            "language": 3,
            "solution": "input()\nx, *b = map(int, input().split())\ny, r = x, 0\nfor v in b:\n    if v < x or v > y:\n        r += 1\n    x = min(x, v)\n    y = max(y, v)\nprint(r)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nif len(a)==1:\n    print(0)\nelse:\n    x=0\n    b=[a[0],a[1]]\n    c=[a[0],a[1]]\n\n    if a[0]!=a[1]:\n        x+=1\n    for i in range(2,n):\n        b.append(a[i])\n        if min(c)>b[i] or max(c)<b[i]:\n                x+=1\n        c.append(b[i])\n    print(x)\n    \n    \n"
        },
        {
            "language": 3,
            "solution": "test = int(input())\nrec=list(map(int, input().split()))\nma=rec[0]\nmi=rec[0]\nc = 0\n\nfor i in range(1, test):\n\tif rec[i]>ma:\n\t\tma=rec[i]\n\t\tc+=1\n\telif rec[i]<mi:\n\t\tmi=rec[i]\n\t\tc+=1\nprint(c)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\narr=list(map(int,input().split()[:n]))\ns=len(arr)\nw=[]\ncount=0\nfor i in range(s):\n    if not arr[i] in w:\n        w.append(arr[i])\n        w.sort()\n        if arr[i]==w[0] or arr[i]==w[-1] :\n            count=count+1\nprint(count-1)\n\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nnum = list(map(int,input().split()))\nprint(len([\"1\" for i in range(1,len(num)) if max(num[0:i]) < num[i] or min(num[0:i]) > num[i]]))"
        },
        {
            "language": 3,
            "solution": "amazing = 0\nn = int(input())\na = [int(i) for i in input().split()]\nfor i in range(1, n):\n    if a[i] > max(a[:i]) or a[i] < min(a[:i]):\n        amazing += 1\nprint(amazing)"
        },
        {
            "language": 3,
            "solution": "n,l=int(input()), [int(i) for i in map(int,input().split())]\nf=0\nif n==1:\n\tprint(\"0\")\nelse:\n\tfor i in range(1,n):\n\t\tif l[i] > max(l[0:i]) or l[i]<min(l[0:i]):\n\t\t\tf+=1\n\tprint(f)"
        },
        {
            "language": 3,
            "solution": "from sys import exit\nn = int(input())\na =[int(x) for x in input().split()]\nif len(a)==1:\n    print('0')\n    exit(0)\nmax1 = a[0]\nmin1 = a[0]\nlength = len(a)\nc = 0\nfor i in range(0,length):\n    if a[i]>max1:\n        c+=1\n        max1 = a[i]\n    elif a[i]<min1:\n        c+=1\n        min1 = a[i]\nelse:\n    print(c)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nscores=list(map(int,input().split(\" \")))\nworst=scores[0];best=scores[0];i=1;count=0\nwhile(i<n):\n    if scores[i]>best:\n        best=scores[i]\n        count+=1\n    elif scores[i]<worst:\n        worst=scores[i]\n        count+=1\n    i+=1\nprint(count)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\nx = 0\nmn = a[0]\nmx = a[0]\nfor i in range(1, n):\n    if a[i] < mn:\n        x += 1\n        mn = a[i]\n    if a[i] > mx:\n        x += 1\n        mx = a[i]\nprint(x)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  int a[n];\n  for (int i = 0; i < n; i++) cin >> a[i];\n  int max = a[0], min = a[0];\n  int amazing = 0;\n  for (int i = 1; i < n; i++) {\n    if (a[i] > max) {\n      max = a[i];\n      amazing++;\n    }\n    if (a[i] < min) {\n      min = a[i];\n      amazing++;\n    }\n  }\n  cout << amazing << endl;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner ;\npublic class Main{\npublic static void main(String[] args)\n{\nint x , first , max , min , count ;\nScanner in = new Scanner(System.in) ;\nx = in.nextInt() ;\nfirst = in.nextInt() ;\nmax = first ; \nmin = first ;\ncount = 0 ;\n\nfor ( int i = 0 ; i < x - 1 ; i++)\n{\n  first = in.nextInt() ;\n  if ( first < min ) \n  {\n    count++ ;\n     min = first ;\n   }\n   if ( max < first) \n   {\n     count++ ;\n     max = first ;\n   }\n\n}\nSystem.out.println(count) ;\n}\n}"
        },
        {
            "language": 3,
            "solution": "n = int(input()); num_list = list(map(int, input().split())); mMax, mMin, ans = num_list[0], num_list[0], 0\nfor i in range(1,n):\n    if mMax < num_list[i]: mMax = num_list[i]; ans+=1\n    if mMin > num_list[i]: mMin = num_list[i]; ans+=1\nprint(ans)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=[int(x) for x in input().split()]\nmi=ma=l[0]\nres=0\nfor i in  range(1,n):\n    if l[i]<mi:\n        res+=1\n        mi=l[i]\n    elif l[i]>ma:\n        res+=1\n        ma=l[i]\nprint(res)\n"
        },
        {
            "language": 3,
            "solution": "cases = int(input())\nperf = list(map(int, input().split()))\nmins = maxi = perf[0] \namazing = 0\nfor i in perf:\n    if i < mins:\n        mins = i\n        amazing += 1\n    elif i > maxi:\n        maxi = i\n        amazing += 1\nprint(amazing)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\n\ns=input()\np=s.split()\n\ns=[]\nfor a in p:\n    a=int(a)\n    s.append(a)\n    \nmax=s[0]\nmin=s[0]\namazing=0\nfor a in s:\n    if a>max:\n        amazing+=1\n        max=a\n        \n    elif a<min:\n        amazing+=1\n        min=a\n       \n\n        \nprint(amazing) "
        },
        {
            "language": 3,
            "solution": "n=int(input())\nlst=list(map(int,input().split()))\nMAX=MIN=lst[0]\nans=0\nfor i in lst[1:]:\n    if i>MAX:\n        MAX=i\n        ans+=1\n    if i<MIN:\n        MIN=i\n        ans+=1\nprint(ans)"
        },
        {
            "language": 3,
            "solution": "p=0\ny=int(input())\nx=list(map(int,input().split()))\nfor i in range(2,y+1):\n    if x[i-1]>max(x[0:i-1]) or x[i-1]<min(x[0:i-1]): p+=1\nprint(p)"
        },
        {
            "language": 1,
            "solution": "n=int(raw_input())\ninp=raw_input()\narr=[int(i) for i in inp.split()]\nlarge=arr[0]\nsmall=arr[0]\nc=0\nfor i in range(1,len(arr)):\n    if arr[i]>large:\n        c+=1\n        large=arr[i]\n    if arr[i]<small:\n        c+=1\n        small=arr[i]\nprint c\n"
        },
        {
            "language": 3,
            "solution": "n  =  int(input())\nl = []\na = list(map(int, input().split()))\nl.append(a[0])\nx = 0\nfor i in range(1,n):\n    if a[i] not in l:\n        l.append(a[i])\n    \n        if max(l)==a[i] or min(l)==a[i]:\n            x+=1\nprint(x) "
        },
        {
            "language": 3,
            "solution": "n=int(input())\nL=list(map(int,input().split()))\nmin1=L[0]\nmax1=L[0]\nc=0\nfor i in range(1,len(L)):\n   if L[i]<min1:\n      c=c+1\n      min1=L[i]\n   elif L[i]>max1:\n      c=c+1\n      max1=L[i]\nprint(c)\n      \n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nMin=l[0]\nMax=l[0]\ncount=0\nfor i in range(1,n):\n    if l[i]>Max:\n        count+=1\n        Max=l[i]\n    elif l[i]<Min:\n        count+=1\n        Min=l[i]\nprint(count)\n"
        },
        {
            "language": 4,
            "solution": "\timport java.util.*;\n\tpublic class forces {\n\n\t\tpublic static void main(String[] args) {\n\t\t\tScanner sc = new Scanner(System.in);\n\t\t\tint n=sc.nextInt();\n\t\t\tint []arr=new int[n];\t\n\t\t\tint count=0;\n\t\t\tfor (int i=0;i<n ;i++ ) {\n\t\t\t\tarr[i]=sc.nextInt();\n\t\t\t}\n\t\t\tint min=arr[0];\n\t\t\tint max=arr[0];\n\t\t\tfor (int i=1;i<n ;i++ ) {\n\t\t\t\tif (arr[i]>max) {\n\t\t\t\t\tmax=arr[i];\n\t\t\t\t\tcount++;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (arr[i]<min) {\n\t\t\t\t\tmin=arr[i];\n\t\t\t\t\tcount++;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tSystem.out.println(count);\n\t\t}\n\t}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\nm = len(a)\nres = 0\nmax = a[0]\nmin = a[0]\nfor i in range(m - 1):\n    if a[i + 1] > a[i] and a[i + 1] > max:\n        max = a[i + 1]\n        res += 1\n    if a[i + 1] < a[i] and a[i + 1] < min:\n        min = a[i + 1]\n        res += 1\nprint(res)\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class B\n{\n    public static void main(String args[])\n    {\n        Scanner in = new Scanner(System.in);\n        PrintWriter out = new PrintWriter(System.out);\n        new B(in, out);\n        out.close();\n    }\n\n    int[] arr;\n    B(Scanner in, PrintWriter out)\n    {\n        int n = in.nextInt();\n        arr = new int[n];\n        int min = Integer.MAX_VALUE;\n        int max = Integer.MIN_VALUE;\n        int cnt = -2;\n        for (int i=0; i < n; i++)\n        {\n            arr[i] = in.nextInt();\n            if(arr[i] > max)\n            {\n                max = arr[i];\n                cnt++;\n            }\n            if(arr[i] < min)\n            {\n                min = arr[i];\n                cnt++;\n            }\n\n        }\n\n        out.println(cnt);\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\n\npublic class ILoveUserName {\n\n  public static void main(String[] args) {\n          Scanner input = new Scanner(System.in);\n          int n = input.nextInt();\n          int[] arr = new int[n];\n          int count = 0;\n          for(int i = 0;  i < n; i++){\n                arr[i] = input.nextInt();\n          }\n          \n          int max = arr[0];\n          int min = arr[0];\n          for(int j =1; j < n; j++){\n                if(arr[j] > max){\n                     max = arr[j];\n                     count++;\n                }\n                \n                if(arr[j] < min){\n                     min = arr[j];\n                     count++;\n                }\n          }\n          System.out.println(count);\n   }\n}"
        },
        {
            "language": 3,
            "solution": "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Sun Dec  8 16:18:51 2019\n\n@author: 86138\n\"\"\"\n\n#155A  I_love_%username%\nn = int(input())\nscore = [int(x) for x in input().split()]\nlow = score[0]\nhigh = score[0]\na = 0\nfor i in range(n):\n\n    if score[i] < low or score[i] > high:\n        a += 1\n        low = min(low,score[i])\n        high = max(high,score[i])\nprint(a)\n        "
        },
        {
            "language": 3,
            "solution": "n=int(input())\nnum=input()\nlist=num.split()\nref=int(list[0])\ncount=0\ncount2=0\n\nfor i in range(len(list)):\n    if int(list[i])>ref:\n        count=count+1\n        ref=int(list[i])\n        #print(str(ref)+'yo')\n        \nref2=int(list[0])\nfor i in range(len(list)):\n    if int(list[i])<ref2:\n        count2=count2+1\n        ref2=int(list[i])\n       # print(ref2)\nprint(count2+count)"
        },
        {
            "language": 3,
            "solution": "a = int(input())\nb = input()\nc = len(b)\nd = []\ng = 0\nmax1=0\nmin1=10000\nwhile b > \"\":\n    if not \" \" in b:\n        d.append(b)\n        break\n    e = b.index(\" \")\n    f = b[0:e]\n    d.append(f)\n    b = b[e+1: ]\n\nfor i in d:\n    i = int(i)\n    \n    if i < min1 or i > max1:\n        g = g + 1\n    if i > max1:\n        max1 = i\n        \n    if i < min1:\n        min1 = i\nprint(g - 1)\n\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[int(j) for j in input().split()]\nl=[]\nl.append(a[0])\n\njieguo=0\nfor i in range(1,n):\n\n\n    if a[i]>int(max(l)) or a[i]<int(min(l)):\n        l.append(a[i])\n\n        jieguo=jieguo+1\n    else:\n        l.append(a[i])\n\n\nprint(jieguo)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nm = list(map(int, input().split()))\n\nres = 0\n\nfor i in range(1, n):\n    small = True\n    big = True\n    for j in range(i):\n        if m[i] >= m[j]:\n            small = False\n        if m[i] <= m[j]:\n            big = False\n    if small or big:\n        res += 1\n\nprint(res)\n"
        },
        {
            "language": 1,
            "solution": "raw_input();a,c = map(int,raw_input().split()),0\nmn = mx = a[0]\nfor b in a:\n    if b<mn:mn=b;c+=1;\n    if b>mx:mx=b;c+=1;\nprint c\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\ns = input()\na = s.split()\nfor i in range(n): a[i] = int(a[i])\nans = 0\nfor i in range(1,n):\n    d = a[0];x = a[0]\n    for j in range(i):\n        if a[j]>d: d = a[j]\n        if a[j]<x: x = a[j]\n    if a[i]>d: ans+=1\n    if a[i]<x: ans+=1\nprint(ans)\n"
        },
        {
            "language": 3,
            "solution": "n, m = int(input()), list(map(int, input().split()))\nans, a, b = 0, m[0], m[0]\nfor i in range(1, n):\n    if m[i] < a:\n        a = m[i]\n        ans += 1\n    elif m[i] > b:\n        b = m[i]\n        ans += 1\nprint(ans)\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\npublic class A155 {\n\n    /**\n     * @param args the command line arguments\n     */\n    public static void main(String[] args) throws IOException {\n        BufferedReader br =new BufferedReader(new InputStreamReader(System.in));\n        int n=Integer.parseInt(br.readLine());\n        String arr[]=br.readLine().split(\" \");\n        int a[]=new int[n];\n        for(int i=0;i<n;i++)\n            a[i]=Integer.parseInt(arr[i]);\n        int max=a[0];\n        int min=a[0];\n        int count=0;\n        for(int i=1;i<n;i++)\n        {\n            if(max<a[i])\n            {\n                max=a[i];\n                count++;\n            }\n            if(min>a[i])\n            {\n                min=a[i];\n                count++;\n            }\n        }\n        \n        System.out.println(count);\n    }\n    \n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nll=input().split()\nmin=int(ll[0])\nmax=int(ll[0])\nspe=0\nfor i in range(0,n):\n    if int(ll[i])>max:\n        spe=spe+1\n        max=int(ll[i])\n    if int(ll[i])<min:\n        spe=spe+1\n        min=int(ll[i])\nprint(spe)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nvals = [int(x) for x in input().split()]\n\nmaxV, minV = vals[0], vals[0]\nctr = 0\n\nfor i in range(1, n):\n\tval = vals[i]\n\tif val > maxV:\n\t\tctr += 1\n\t\tmaxV = val\n\tif val < minV:\n\t\tctr += 1\n\t\tminV = val\n\nprint(ctr)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nc=0\nl=[int(x) for x in input().split()]\nfor i in range(1,len(l)):\n    if l[i]<min(l[:i]) or l[i]>max(l[:i]):\n        c+=1\nprint(c)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nans = 0\narr = list(map(int, input().split()))\nmi = ma = arr[0]\nfor i in arr[1:]:\n    if i > ma:\n        ma = i\n        ans += 1\n    if i < mi:\n        mi = i\n        ans += 1\nprint(ans)"
        },
        {
            "language": 1,
            "solution": "#Codeforces 155A\nimport sys\n\nn = int(raw_input())\na = map(int, raw_input().split())\n\nma = a[0]\nmi = a[0]\n\nif n == 1:\n    print 0\n    sys.exit(0)\n\ncounter = 0\n\nfor i in range(n):\n    if a[i] > ma:\n        counter += 1\n        ma = a[i]\n    if a[i] < mi:\n        counter += 1\n        mi = a[i]\n\nprint counter\n"
        },
        {
            "language": 3,
            "solution": "# Description of the problem can be found at http://codeforces.com/problemset/problem/155/A\n\n_ = input()\nscores = [int(x) for x in input().split()]\na = 0\nw_p = scores[0]\nb_p = scores[0]\n\nfor s in scores:\n    if s > b_p:\n        a += 1\n        b_p = s\n    elif s < w_p:\n        a += 1\n        w_p = s\n\nprint(a)"
        },
        {
            "language": 3,
            "solution": "__author__ = 'Utena'\nt=0\nn=int(input())\ns=list(map(int,input().split()))\nmax=s[0]\nmin=s[0]\nif n==1:print(0)\nelse:\n    for i in range(1,n):\n        if s[i]>max:\n            max=s[i]\n            t+=1\n        elif s[i]<min:\n            min=s[i]\n            t+=1\n    print(t)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  ;\n  int n, a, b, mx, mn, cnt = 0;\n  cin >> n;\n  cin >> a;\n  mx = mn = a;\n  for (int i = 1; i < n; i++) {\n    cin >> b;\n    if (b > mx) {\n      cnt++;\n      mx = b;\n    } else if (b < mn) {\n      cnt++;\n      mn = b;\n    }\n  }\n  cout << cnt;\n}\n"
        },
        {
            "language": 3,
            "solution": "games=input()\nscore=list(map(int,input().split()))\nhigh=score[0]\nlow=score[0]\nans=0\nfor i in score :\n    if i < low:\n        low=i\n        ans+=1\n    elif i>high:\n        high=i\n        ans+=1\nprint(ans)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nperformance = list(map(int, input().split()))\n\nlo_pivot = hi_pivot = performance[0]\ncount = 0\nfor i in range(1, n):\n    if performance[i] > hi_pivot:\n        count += 1\n        hi_pivot = performance[i]\n    elif performance[i] < lo_pivot:\n        count += 1\n        lo_pivot = performance[i]\n\nprint(count)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nr=[[0,0]]*(n+1)\nscore=[int(i)for i in input().split()]\nr[0]=[score[0],score[0]]\namazing=0\nfor i in range(1,n):\n    if score[i]<r[i-1][0]:\n        r[i][0]=score[i]\n        r[i][1]=r[i-1][1]\n        amazing+=1\n    elif score[i]>r[i-1][1]:\n        r[i][1]=score[i]\n        r[i][0]=r[i-1][0]\n        amazing+=1\n    else:\n        r[i]=r[i-1]\nprint(amazing)\n        \n    \n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  while (scanf(\"%d\", &n) != EOF) {\n    int max, min, tmp, cnt = 0;\n    scanf(\"%d\", &tmp);\n    max = min = tmp;\n    n--;\n    while (n--) {\n      scanf(\"%d\", &tmp);\n      if (tmp > max) {\n        cnt++;\n        max = tmp;\n      }\n      if (tmp < min) {\n        cnt++;\n        min = tmp;\n      }\n    }\n    printf(\"%d\\n\", cnt);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=input().split()\nhigh=int(a[0])\nlow=int(a[0])\ns=0\nfor i in range(n-1):\n    if int(a[i+1])>high:\n        high=int(a[i+1])\n        s+=1\n    if int(a[i+1])<low:\n        low=int(a[i+1])\n        s+=1\nprint(int(s))\n        \n"
        },
        {
            "language": 3,
            "solution": "if __name__ == '__main__':\n        n = int(input())\n        l = list( int(i) for i in  input().split(' '))\n        first = l[0]\n        num_amazing = 0\n        cur_max = cur_min = first\n        for i in range(1,len(l)):\n                #print('-------------- %d ' % i)\n                if l[i] > cur_max:\n                        #print('new best found at %d'  % i)\n                        cur_max = l[i]\n                        num_amazing+=1\n                        #print('best: %d' % cur_max)\n                elif l[i] < cur_min:\n                        #print('new worst found at %d' % i)\n                        \n                        cur_min = l[i]\n                        num_amazing +=1\n                        #print('worst: %d' % cur_min)\n        print(num_amazing)        \n        \n                \n        \n                \n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nmi=ma=a[0];k=0\nfor i in a[1:]:\n    if i<mi:\n        k+=1\n        mi=i\n    elif i>ma:\n        k+=1\n        ma=i\nprint(k)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\n#print(n)\nlist = [int(x) for x in input().split()]\nma = list[0]\nmi = list[0]\n#print(list)\nans = 0\nfor i in list:\n    #print(str(mi) + \" \" + str(ma))\n    if i > ma:\n        ma = i\n        ans+=1\n    elif i < mi:\n        mi = i\n        ans+=1\nprint(ans)\n"
        },
        {
            "language": 1,
            "solution": "import sys\n\n\nn=int(sys.stdin.readline())\nscores=[int(x) for x in sys.stdin.readline().split()]\n\nlaagste=scores[0]\nhoogste=scores[0]\n\namazing=0\n\nfor x in range(1,n):\n    if scores[x]>hoogste:\n        amazing+=1\n        hoogste=scores[x]\n    if scores[x]<laagste:\n        amazing+=1\n        laagste=scores[x]\n    \n        \nprint amazing\n\n        \n    \n    \n\n\n        \n\n\n\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = list(map(int,input().split()))\nc = 0\nfor i in range(n):\n   if i == 0:\n      mi = l[0]\n      ma = l[0]\n   else:\n      if l[i] > ma:\n         c += 1\n         ma = l[i]\n      elif l[i] < mi:\n         c += 1\n         mi = l[i]\nprint(c)\n      \n   "
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nk1=[]\nfor i in range(n):\n    k=[]\n    for j in range(0,i+1):\n        k.append(l[j])\n    k.sort()\n    if l[i]==k[0] or l[i]==k[-1]:\n        k1.append(l[i])\ns=set(k1)\nprint(len(s)-1)\n        \n"
        },
        {
            "language": 3,
            "solution": "list = []\nn = int(input())\na = [int(x) for x in input().split()]\n\nchecked = []\namazing = 0\n\nchecked.append(a[0])\nfor i in range(1, n):\n    if a[i] > max(checked) or a[i] < min(checked):\n        amazing += 1\n    checked.append(a[i])\n\nprint(amazing)\n\n\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nn=len(a)\nb=[a[0]]\nc=[]\nfor i in range(n):\n    if a[i]>max(b) or a[i]<min(b):\n        c.append(a[i])\n    b.append(a[i])\nprint(len(c))\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nnums = [int(i) for i in input().split()]\ncount = 0\nbest = nums[0]\nworst = nums[0]\nfor i in range(1, n):\n\tif(nums[i] > best):\n\t\tbest=nums[i]\n\t\tcount += 1\n\tif(nums[i] < worst):\n\t\tworst = nums[i]\n\t\tcount += 1\nprint(count)"
        },
        {
            "language": 3,
            "solution": "input()\nlista = input().split()\nmenor = int(lista[0])\nmaior = int(lista[0])\naux = 0\nfor i in range(1,len(lista),1):\n  if int(lista[i]) > maior:\n    maior = int(lista[i])\n    aux+=1\n  if int(lista[i]) < menor:\n    menor = int(lista[i])\n    aux+=1\n    \nprint(aux)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=[int(i) for i in input().split()]\na=[]\na.append(l[0])\nm=1\ns=0\nwhile m<=n-1:\n    b=max(a)\n    d=min(a)\n    a.append(l[m])\n    if l[m]>b or l[m]<d:\n        s+=1\n    m=m+1\nprint(s)\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\n/**\n *\n * @author freee\n */\n public class LKTCP18 {\n\n    /**\n     * @param args the command line arguments\n     */\n    public static void main(String[] args) {\n        Scanner k = new Scanner(System.in);\n        int a = k.nextInt();\n        int[] arr = new int[a];\n        for (int i = 0;i<a;i++){\n            arr [i] = k.nextInt();\n        }\n        int Hrecord = arr[0];\n        int Lrecord = arr[0];\n        int amazing = 0;\n        for (int i = 1;i<a;i++){\n            if(arr [i]>Hrecord){\n                amazing++;\n                Hrecord = arr[i];\n            } else if (arr [i]<Lrecord){\n                amazing++;\n                Lrecord = arr[i];\n            } \n        }\n        System.out.println(amazing);\n    }\n\n}\n\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nk = list(map(int,input().split()))\nl1 = k[0]\nl2 = k[0]\nc = 0\nfor i in range(1,n):\n    if k[i]>l1 :\n        l1 = k[i]\n        c+=1\n    elif k[i]<l2:\n        l2 = k[i]\n        c += 1\nprint(c)\n"
        },
        {
            "language": 3,
            "solution": "n,a,mn,mx,c=int(input()),list(map(int,input().split())),10**10,-10**10,0\nfor i in range(1,n):\n\tmx=max(mx,a[i-1])\n\tmn=min(mn,a[i-1])\n\tif a[i]>mx or a[i]<mn:c+=1\nprint(c)"
        },
        {
            "language": 3,
            "solution": "def fun(lest):\n    smallest = largest = lest[0]\n    amazing = 0\n    for score in lest[1:]:\n        if(score < smallest):\n            smallest = score\n            amazing+=1\n        if(score > largest):\n            largest = score\n            amazing+=1\n    return amazing\n\nif __name__ == \"__main__\":\n\n    n = int(input())\n    lest = map(int,input().split())\n    lest =list(lest)\n    print (fun(lest))\n\n  \t \t    \t\t \t\t\t\t \t \t   \t \t  \t\t"
        },
        {
            "language": 3,
            "solution": "n=int(input())\narr=list(map(int,input().split()))\nmini=arr[0]\nmaxi=arr[0]\ncnt=0\nfor i in range(1,n):\n    if arr[i]>maxi:\n        cnt+=1\n        maxi=arr[i]\n    elif arr[i]<mini:\n        cnt+=1\n        mini=arr[i]\nprint(cnt)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nc=0\nfor i in range(1,n):\n        x=min(l[:i])\n        y=max(l[:i])\n        if l[i]<x or l[i]>y:\n                c+=1\nprint(c)\n        "
        },
        {
            "language": 1,
            "solution": "n = input()\na = map(int, raw_input().split())\nprint sum([1 for i in range(1, n) if a[i] > max(a[:i]) or a[i] < min(a[:i])])"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[int(x) for x in input().split()]\ns=0\nif n==1:\n    print(s)\nelse:\n    if a[1]==a[0]:\n        s=0\n    else:\n        s=1\n    for i in range(2,n):\n        if a[i]>max(a[0:i]) or a[i]<min(a[0:i]):\n            s=s+1\n    print(s)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nz=0\nfor i in range(n):\n    c=0\n    b=0\n    for j in range(i):\n        if i>0:\n            if a[i]>a[j]:\n                b+=1\n    for k in range(i):\n        if i>0:\n            if a[i]<a[k]:\n                c+=1\n    if c==i or b==i:\n        z+=1\nprint(z-1)\n    "
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = [int(i) for i in input().split()]\nmax_l = l[0]\nmin_l = l[0]\ns = 0\nfor i in range(1,n):\n    if l[i]>max_l:\n        s += 1\n        max_l = l[i]\n    elif l[i]<min_l:\n        s += 1\n        min_l = l[i]\n\nprint(s)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\npoints=list(map(int,input().split()))\nma=None\nmi=None\namzp=0\nfor i in points:\n    if ma==None and mi==None:\n        ma=i\n        mi=i\n    elif i>ma:\n        ma=i\n        amzp+=1\n    elif i<mi:\n        mi=i\n        amzp+=1\nprint(amzp)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\narr=list(map(int,input().split()))\ndef f():\n    if n==1:\n        print(0)\n        return\n    a=arr[0]\n    m=a\n    result=0\n    for i in arr[1:]:\n        if i>a:\n            result+=1\n            a=i\n        elif i<m:\n            result+=1\n            m=i\n    print(result)\n    return\nf()"
        },
        {
            "language": 3,
            "solution": "def arr_inp():\n    return [int(x) for x in input().split()]\n\n\ndef fun(ele):\n    global ma, mi\n    if ele > ma:\n        ma = ele\n        return True\n    elif ele < mi:\n        mi = ele\n        return True\n    else:\n        return False\n\n\nn, a, ans = int(input()), arr_inp(), 0\nma, mi = a[0], a[0]\n\nprint(len(list(filter(fun, a[1:]))))\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nmx=l[0]\nmn=l[0]\nc=0\nfor i in range(1,n):\n    if l[i] >mx:\n        mx=l[i]\n        c+=1\n    elif l[i]<mn:\n        mn=l[i]\n        c+=1\nprint(c)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\narr=input().split()\ni=0\nresults=[int(i) for i in arr]\nmx=-1\nmn=1000000\nc=0\nfor x in results:\n\tif x>mx:\n\t\t#print(x,' ',mx)\n\t\tmx=x\n\t\tc+=1\n\tif x<mn:\n\t\t#(x,' ',mn)\n\t\tmn=x\n\t\tc+=1\nprint(c-2)\n\n\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = list(map(int, input().split()))\namz = 0\nmx, mn = 0, 0\nfor i in range(1, len(l)):\n    if l[i] > l[mx]:\n        amz += 1\n        mx = i\n    if l[i] < l[mn]:\n        amz += 1\n        mn = i\nprint(amz)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nnumbers = [int(num) for num in input().split(\" \", n-1)]\ncount = 0\nb = []\nfor i in numbers:\n    if len(b) == 0:\n        b.append(i)\n    else:\n        if i < min(b):\n            count += 1\n        elif i > max(b):\n            count += 1\n        b.append(i)\nprint(count)\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\n \npoints = list(map(int, input().split()))\n \nmax_p = points[0]\nmin_p = points[0]\namazing_count = 0\n \nfor point in points:\n \n    if point > max_p:\n        amazing_count += 1\n        max_p = point\n \n    elif point < min_p:\n        amazing_count += 1\n        min_p = point\n \nprint(str(amazing_count))"
        },
        {
            "language": 1,
            "solution": "n = raw_input()\nresults = raw_input().split()\n\nresults = [int(x) for x in results]\nmaxr = minr = results[0]\ncount = 0\n\nfor i in results[1:]:\n    if i < minr:\n        count += 1\n        minr = i\n    elif i > maxr:\n        count += 1\n        maxr = i\n\nprint count\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\ngame = [int(x) for x in input().split()]\nif n == 1:\n    m = 0\nelif n == 2:\n    if game[0] == game[1]:\n        m = 0\n    else:\n        m = 1\nelse:\n    if game[0] == game[1]:\n        m = 0\n    else:\n        m = 1\n    s = [game[0], game[1]]\n    for i in range(2, n):\n        if game[i]>max(game[0:i]) or game[i]<min(game[0:i]):\n            m += 1\nprint(m)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\n\nmax_points = min_points = a[0]\nn_records = 0\nfor i in a[1:]:\n\tif i > max_points:\n\t\tmax_points = i\n\t\tn_records += 1\n\telif i < min_points:\n\t\tmin_points = i\n\t\tn_records += 1\n\nprint(n_records)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong n, a[10000];\nlong progress1(long k) {\n  long i;\n  for (i = 1; i < k; i++)\n    if (a[i] >= a[k]) return 0;\n  return 1;\n}\nlong progress2(long k) {\n  long i;\n  for (i = 1; i < k; i++)\n    if (a[i] <= a[k]) return 0;\n  return 1;\n}\nint main() {\n  long dem = 0;\n  cin >> n;\n  for (long i = 1; i <= n; i++) {\n    cin >> a[i];\n    if (i >= 2)\n      if (progress1(i) == 1 || progress2(i)) dem++;\n  }\n  cout << dem;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int,input().split()))\nl = 0\nmax = min = a[0]\nfor i in range(n):\n    if a[i] > max:\n        max = a[i]\n        l += 1\n    elif a[i] < min:\n        min = a[i]\n        l += 1\nprint(l)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nlist=input().split()\nlist=[int(i) for i in list]\nk=0\nfor i in range(1,n):\n    if list[i]>max(list[:i]) or  list[i]<min(list[:i]):\n        k+=1\nprint(k)"
        },
        {
            "language": 3,
            "solution": "n =int( input())\na= list(map(int, input().split()))\nmaxo=a[0]\nmino=a[0]\nsupera=0\nfor i in range(n):\n   srez=a[0:i+1]\n   if max(srez)!= maxo:\n      maxo=max(srez)\n      supera=supera+1\n   if min(srez)!= mino:\n      mino=min(srez)\n      supera=supera+1\nprint(supera)\n   \n  "
        },
        {
            "language": 3,
            "solution": "from sys import stdin\nN = int(stdin.readline())\narray = [int(i) for i in stdin.readline().split()]\nlow = high = array[0]\nans = 0\nfor i in range(1, N):\n    if array[i] > high:\n        ans += 1\n        high = array[i]\n    elif array[i] < low:\n        ans += 1\n        low = array[i]\nprint(ans)"
        },
        {
            "language": 1,
            "solution": "n = raw_input()\nn = int(n)\na = []\nb = []\na = raw_input().split()\nfor i in range(0, len(a)):\n    b.append(int(a[i]))\nmx = b[0]\nmi = b[0]\ns = 0\nfor i in range(0,n):\n    if b[i] > mx:\n        mx = b[i]\n        s = s + 1\n    elif b[i] < mi:\n        mi = b[i]\n        s = s + 1\nprint s\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\narr=list(map(int,input().split()))\nmaxi=mini=arr[0]\ncount=0\nfor i in range(1,n):\n    if(arr[i]>maxi):\n        count+=1\n        maxi=arr[i]\n    elif(arr[i]<mini):\n        count+=1\n        mini=arr[i]\n    else:\n        continue\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().strip().split()))[:n]\nmin_val,max_val=a[0],a[0]\ncount=0\nfor i in range(1,n):\n  if a[i]<min_val:\n    min_val=a[i]\n    count+=1\n  elif a[i]>max_val:\n    max_val=a[i]\n    count+=1\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=input().split()\na=0\nma=int(l[0])\nmi=int(l[0])\nfor i in range(1,n):\n    if int(l[i])>ma or int(l[i])<mi:\n        a+=1\n        ma=max(ma,int(l[i]))\n        mi=min(mi,int(l[i]))\nprint(a)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, x, cnt = 0, mx, mn;\n  cin >> n >> x;\n  n--;\n  mx = x;\n  mn = x;\n  while (n--) {\n    cin >> x;\n    if (x > mx) {\n      mx = x;\n      cnt++;\n    }\n    if (x < mn) {\n      mn = x;\n      cnt++;\n    }\n  }\n  cout << cnt;\n}\n"
        },
        {
            "language": 3,
            "solution": "useless = int(input())   #dont really need this.\nscores = [int(a) for a in input().strip().split(' ')]   #puts all into a list\n\nnewlist = []\ncounter = 0\n\n#makes new list from inputs and checks min and max\nfor i in scores:\n    if i is scores[0]:\n        newlist.append(i)\n    else:\n        if i > max(newlist):\n            counter +=1\n        elif i < min(newlist):\n            counter +=1\n    newlist.append(i)\n\nprint(counter)\n"
        },
        {
            "language": 1,
            "solution": "n=int(raw_input())\nt=[]\nstr=raw_input()\nfor i in range(0,n):\n    t.append(int(str.split(\" \")[i]))\nsum=0\nmin=t[0]\nmax=t[0]\nfor i in range(1,n):\n    if t[i]<min:\n        sum+=1\n        min=t[i]\n    elif t[i]>max:\n        sum+=1\n        max=t[i]\nprint sum"
        },
        {
            "language": 3,
            "solution": "n = int(input())\ns = [int(x)for x in input().split()]\nmn=s[0]\nmx=s[0]\ncount=0\nfor i in range (len(s)):\n    if s[i]>mx:\n        mx=s[i]\n        count+=1\n    elif s[i]<mn:\n        mn=s[i]\n        count+=1\n    else:\n        continue\n\nprint(count)"
        },
        {
            "language": 3,
            "solution": "def amazing_performance(perf, contests, i):\n    return perf < min(contests[:i]) or perf > max(contests[:i])\n\n\ndef main():\n    n = int(input())\n    contests = list(map(int, input().split()))\n    \n    count = 0\n    for i in range(1, n):\n        if amazing_performance(contests[i], contests, i) :\n            count += 1\n    print(count)\n\n\nmain()\n\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=[int(x) for x in input().split()]\nmaxx,minn,cnt=l[0],l[0],0\nfor ele in l:\n  if ele>maxx:\n    maxx=ele\n    cnt+=1\n  if ele<minn:\n    minn=ele\n    cnt+=1\nprint(cnt)\n  "
        },
        {
            "language": 3,
            "solution": "n=int(input())\np=[int(i) for i in input().split()]\nminp=p[0]\nmaxp=p[0]\nans=0\nfor i in range(1,n):\n    if(p[i]<minp):\n        ans+=1\n        minp=p[i]\n    if(p[i]>maxp):\n        ans+=1\n        maxp=p[i]\nprint(ans)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\ncount=0\nl=list(map(int,input().split()))\nmin=l[0]\namz=l[0]\nfor i in range(1,n):\n    if(l[i]>amz):\n        count+=1\n        amz=l[i]\n    elif(l[i]<min):\n        count+=1\n        min=l[i]\n    else:\n        pass    \nprint(count)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\ns = list(map(int, input().split()))\na = []\nk = 0\nfor i in range(n):\n    a.append(s[i])\n    if len(a) > 1:\n        if (a[len(a)-1] == max(a) or a[len(a)-1] == min(a)) and a.count(a[len(a)-1]) == 1:\n            k += 1\n                \nprint(k)"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\n\npublic class A155 {\n\tFastScanner in;\n\tPrintWriter out;\n\n\tpublic void solve() throws IOException {\n\t\tint n = in.nextInt();\n\t\tint[] a = new int[n];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\ta[i] = in.nextInt();\n\t\t}\n\t\tint max = a[0];\n\t\tint min = a[0];\n\t\tint ans = 0;\n\t\tfor (int i = 1; i < n; i++) {\n\t\t\tif (a[i] > max) {\n\t\t\t\tans++;\n\t\t\t\tmax = a[i];\n\t\t\t} \n\t\t\tif (a[i] < min) {\n\t\t\t\tans++;\n\t\t\t\tmin = a[i];\n\t\t\t}\n\t\t}\n\t\tout.println(ans);\n\t\t\n\t}\n\n\tpublic void run() {\n\t\ttry {\n\t\t\tInputStream inputStream = System.in;\n\t\t\tin = new FastScanner(inputStream);\n\t\t\tout = new PrintWriter(System.out);\n\t\t\tsolve();\n\t\t\tout.close();\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n\n\tprivate class FastScanner {\n\t\tBufferedReader br;\n\t\tStringTokenizer st;\n\n\t\tpublic FastScanner(InputStream is) {\n\t\t\tbr = new BufferedReader(new InputStreamReader(is));\n\t\t}\n\n\t\tpublic boolean hasNext() {\n\t\t\twhile (st == null || !st.hasMoreTokens()) {\n\t\t\t\ttry {\n\t\t\t\t\tString line = br.readLine();\n\t\t\t\t\tif (line == null) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tst = new StringTokenizer(line);\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (st != null && st.hasMoreTokens()) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\tpublic String next() {\n\t\t\tif (hasNext()) {\n\t\t\t\treturn st.nextToken();\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tpublic int nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tpublic long nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tpublic double nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew A155().run();\n\t}\n}"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nsc=[int(i) for i in input().split()]\nx=0\ny=[]\nfor i in range(n):\n\tif i==0:\n\t\ty.append(sc[i])\n\telse:\n\t\tif sc[i]>max(y) or sc[i]<min(y):\n\t\t\tx=x+1\n\t\t\ty.append(sc[i])\n\t\telse:\n\t\t\ty.append(sc[i])\nprint(x)\n"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\nws = map(int, raw_input().split())\nmx = ws[0]\nmn = ws[0]\ncnt, i = 0, 1\nwhile i < n:\n\tv = ws[i]\n\tif v > mx:\n\t\tmx = v\n\t\tcnt += 1\n\tif v < mn:\n\t\tmn = v\n\t\tcnt += 1\n\ti += 1\nprint cnt\n"
        },
        {
            "language": 1,
            "solution": "n = raw_input()\nb = raw_input()\nb = b.split()\nfirst_numb = b[0]\ncounter = 0\nmin_bal = int(first_numb)\nmax_bal = int(first_numb)\nfor i in b[1:]:\n    if int(i) < min_bal:\n        min_bal = int(i)\n        counter+=1\n\n    if int(i)  > max_bal:\n        max_bal = int(i)\n        counter+=1\nprint counter"
        },
        {
            "language": 4,
            "solution": "//import java.io.IOException;\n//import java.io.BufferedReader;\n//import java.io.InputStreamReader;\nimport java.util.Scanner;\nimport java.lang.Math;\nimport java.util.HashSet;\npublic class Main{\n    public static void main(String[]args){\n        Scanner scan = new Scanner(System.in);\n        int n = scan.nextInt(), k=0;\n        int max = scan.nextInt(), min = max;\n        for(int i=1; i<n; i++){\n            int temp = scan.nextInt();\n            if(temp>max||temp<min)k++;\n            min = Math.min(temp, min);\n            max = Math.max(temp, max);\n        }\n        System.out.println(k);\n}\n}"
        },
        {
            "language": 3,
            "solution": "maxi, mini, current, answer = -1, 10000, 0, 0\nmassiv=[]\n\nSCount = int(input())\na = list(map(int, input().split()))\n\nfor x in range(0,SCount):    \n    if x == 0:\n        maxi = a[x]\n        mini = a[x]\n    elif x != 0:\n        if maxi < a[x]:\n            maxi = a[x]\n            answer += 1\n        if mini > a[x]:\n            mini = a[x]\n            answer += 1  \n\nprint(answer)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=[int(x) for x in input().split()]\nmin=l[0]\nmax=l[0]\nc=0\nfor x in l:\n    if x<min:\n        min=x\n        c+=1\n    elif x>max:\n        max=x\n        c+=1\nprint(c)"
        },
        {
            "language": 3,
            "solution": "ab = int(input())\na = [int(i) for i in input().split()]\nb = 0\nbm = a[0]\nc = 0\ncm = a[0]\nv = 0\nd = 0\nfor i in range(1, ab):\n    if a[i] > bm:\n        b += 1\n        bm = a[i]\n    if a[i] < cm:\n        c += 1\n        cm = a[i]\nd = d + c + b\nprint(d)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint main() {\n  int n, j, i, t = 0, s, min, max;\n  scanf(\"%d\", &n);\n  if (n == 0) {\n    printf(\"0\");\n    return 0;\n  }\n  int a[n];\n  scanf(\"%d\", &a[0]);\n  if (n == 0 || n == 1) {\n    printf(\"0\");\n    return 0;\n  }\n  scanf(\"%d\", &a[1]);\n  if (a[1] > a[0]) {\n    max = a[1];\n    min = a[0];\n    s = 1;\n  } else if (a[0] > a[1]) {\n    min = a[1];\n    max = a[0];\n    s = 1;\n  } else if (a[0] == a[1]) {\n    s = 0;\n    max = a[1];\n    min = a[1];\n  }\n  for (i = 2; i < n; i++) {\n    scanf(\"%d\", &a[i]);\n    if (a[i] <= max && a[i] >= min) {\n      s = s;\n      continue;\n    } else if (a[i] > max) {\n      max = a[i];\n      s = s + 1;\n    } else if (a[i] < min) {\n      min = a[i];\n      s = s + 1;\n    }\n  }\n  printf(\"%d\", s);\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "'''\nCreated on Feb 24, 2012\n\n@author: Moatasem\n'''\n\na=int(raw_input())\nn= map(int,raw_input().split())\nmax_=n[0]\nmin_=n[0]\ni=1\nam=0;\nfor i in range(a):\n    if(n[i]>max_):\n        am+=1\n        max_=n[i]\n    elif(n[i]<min_):\n        am+=1\n        min_=n[i]\nprint am"
        },
        {
            "language": 1,
            "solution": "#!/usr/bin/python\n# -*- coding: utf-8 -*-\n\nimport sys\n\nn = int(sys.stdin.readline().strip())\npts = [int(x) for x in sys.stdin.readline().split(None)[0:n]]\nminimum = pts[0]\nmaximum = pts[0]\namazing = 0\nfor p in pts[1:]:\n    if p < minimum:\n        minimum = p\n        amazing += 1\n    elif p > maximum:\n        maximum = p\n        amazing += 1\nprint amazing\n\n"
        },
        {
            "language": 1,
            "solution": "class ILoveUsername:\n    def solve(self, n, arr):\n        maximum = 0\n        minimum = 0\n        awesome = 0\n        for x in range(0, len(arr)):\n            if x == 0:\n                maximum = arr[x]\n                minimum = arr[x]\n            else:\n                if arr[x] > maximum:\n                    maximum = arr[x]\n                    awesome += 1\n                elif arr[x] < minimum:\n                    minimum = arr[x]\n                    awesome += 1\n                else:\n                    continue\n        return awesome\n\n\nif __name__ == \"__main__\":\n    n = int(raw_input())\n    arr = map(int, raw_input().split(\" \"))\n    ilu = ILoveUsername()\n    print ilu.solve(n, arr)"
        },
        {
            "language": 3,
            "solution": "def amazing_performance():\n    input()\n    scores = [int(elem) for elem in input().split(\" \")]\n    result = 0\n    minn = maxx = scores[0]\n    for elem in scores[1:]:\n        if elem < minn:\n            result += 1\n            minn = elem\n        elif elem > maxx:\n            result += 1\n            maxx = elem\n    return result\n\n\nprint(amazing_performance())"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nL=input().split()\nL=[int(i) for i in L]\nmini=maxi=L[0]\ncount=0\nfor i in range(1,len(L)):\n    if L[i]<mini:\n        count+=1\n        mini=L[i]\n    elif L[i]>maxi:\n        count+=1\n        maxi=L[i]\nprint(count)\n        "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int c = 0, n, min = INT_MAX, max = INT_MIN;\n  cin >> n;\n  while (n--) {\n    int a;\n    cin >> a;\n    if (a > max) {\n      max = a;\n      c++;\n    }\n    if (a < min) {\n      min = a;\n      c++;\n    }\n  }\n  cout << c - 2;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nline=[int(i) for i in input().split()]\nmaxi=line[0]\nmini=line[0]\namaz=0\nfor i in range(1,n):\n    if line[i]>maxi:\n        maxi=line[i]\n        amaz+=1\n    if line[i]<mini:\n        mini=line[i]\n        amaz+=1\nprint(amaz)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\narr = list(map(int,input().split()))\ntotal = 0\nbest = arr[0]\nworse = arr[0]\nfor x in arr:\n    if x > best:\n        best = x\n        total += 1\n    elif x < worse:\n        worse = x\n        total += 1\nprint(total)"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\nns = map(int, raw_input().split(\" \"))\nmi = ma = ns[0]\nt = 0\nfor i in range(1,len(ns)):\n    if ns[i]<mi:\n        t+=1\n        mi = ns[i]\n    if ns[i]>ma:\n        t+=1\n        ma = ns[i]\nprint t"
        },
        {
            "language": 3,
            "solution": "n=input()\nx=map(int,input().split())\nl=[]\nfor i in x:\n    l.append(i)\ncounter=0\nlow=l[0]\ntop=l[0]\nfor i in range(1,len(l)):\n    if (l[i]>l[i-1])and l[i]>top:\n        counter+=1\n        top=l[i]\n    elif (l[i]<l[i-1]) and (l[i]<low):\n        low=l[i]\n        counter+=1\nprint(counter)\n\t\t   \t \t\t \t\t \t    \t   \t\t\t \t\t\t \t"
        },
        {
            "language": 3,
            "solution": "n=input()\nx=input().split()\na=0\nh = x[0]\nl = x[0]\nfor i in range (1,len(x)):\n    if int(x[i])> int(h):\n        a+=1\n        h=x[i]\n    if int(x[i])< int(l):\n        a+=1\n        l = x[i]\n\nprint (a)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nasdf = input().split()\na = []\nfor bs in asdf:\n    a.append(int(bs))\ns = 0\nfor i in range(1, n):\n    if a[i] > max(a[:i]) or a[i] < min(a[:i]):\n        s += 1\nprint (s)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nmin,max,count=a[0],a[0],0\nfor i in range(0,n):\n\tk=a[i]\n\tif(k>max):\n\t\tcount+=1\n\t\tmax=k\n\telif(k<min):\n\t\tcount+=1\n\t\tmin=k\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nif n == 1:\n    print(0)\nelse:\n    ct = [int(i)for i in input().split()]\n    best = ct[0]\n    worst = ct[0]\n    num = 0\n    for i in ct:\n        if i > best:\n            best = i\n            num += 1\n        if i < worst:\n            worst = i\n            num += 1\n    print(num)\n        \n    \n    \n"
        },
        {
            "language": 1,
            "solution": "'''\n@author: wangguoxin\n'''\n#for i in range(input()):\nn = input()\nm = map(int,raw_input().split())\nmi = m[0]\nmx = m[0]\ncnt = 0\nfor i in xrange(1,n):\n    if m[i] > mx:\n        mx = m[i]\n        cnt += 1\n    elif m[i] < mi:\n        cnt += 1\n        mi = m[i]\n        \nprint cnt"
        },
        {
            "language": 3,
            "solution": "n=int(input())\narr=list(map(int,input().split()))\nansm=arr[0]\nansl=arr[0]\nc=0\nfor i in range(n):\n    if(arr[i]>ansm):\n        c+=1\n        ansm=arr[i]\n    elif(arr[i]<ansl):\n        c+=1\n        ansl=arr[i]\nprint(c)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nc=0\np=list(map(int, input().split()))\na=[p[0]]\nq=p[1:]\nfor i in q:\n    if i>max(a) or i<min(a):\n        c+=1 \n    else:\n        continue\n    a.append(i)\nprint(c)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\n\nscores = [int(x) for x in input().split()]\n\ncur_min = scores[0]\ncur_max = scores[0]\n\ncnt = 0\n\nfor s in scores[1:]:\n    if cur_min > s:\n        cnt += 1\n        cur_min = s\n    elif cur_max < s:\n        cnt += 1\n        cur_max = s\n\nprint(cnt)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nb = []\nc = 0\nd = 0\nk = 0\na = list(map(int,input().split()))\nfor i in range(1,len(a)+1):\n    b = a[0:i]\n    c = max(b)\n    d = min(b)\n    e = b[0:len(b)-1]\n    if b[len(b)-1] == c and not c in e or b[len(b)-1] == d and not d in e:\n        k += 1\nprint(k-1)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[int(i) for i in input().split()]\n\nif n==1:\n\tamaz=0\n\nif n>1:\n\n\tamaz=0\n\tQ=True\n\n\tfor i in range(1,n):\n\t\tfor j in range(0,i):\n\t\t\tif a[i]>a[j]:\n\t\t\t\tQ=True\n\t\t\telse:\n\t\t\t\tQ=False\n\t\t\t\tbreak\n\t\tif Q==True:\n\t\t\tamaz+=1\n\n\tP=True\n\tfor i in range(1,n):\n\t\tfor j in range(0,i):\n\t\t\tif a[i]<a[j]:\n\t\t\t\tP=True\n\t\t\telse:\n\t\t\t\tP=False\n\t\t\t\tbreak\n\t\tif P==True:\n\t\t\tamaz+=1\n\n\nprint(amaz)\n\n\n\n\n"
        },
        {
            "language": 4,
            "solution": "/* package whatever; // don't place package name! */\n\nimport java.util.*;\nimport java.lang.*;\nimport java.io.*;\n\n/* Name of the class has to be \"Main\" only if the class is public. */\npublic class username\n{\n\tpublic static void main (String[] args) throws java.lang.Exception\n\t{\n\t\t// your code goes here\n\t\tScanner cin = new Scanner(System.in);\n\t\tint n = cin.nextInt() - 1;\n\t\tint mx, mn, x, ans = 0;\n\t\tint pre = cin.nextInt();\n\t\tmx = mn = pre;\n\t\twhile (n-- > 0) {\n\t\t\tx = cin.nextInt();\n\t\t\tif (x > mx) {\n\t\t\t\tmx = x;\n\t\t\t\t++ans;\n\t\t\t}\n\t\t\tif (x < mn) {\n\t\t\t\tmn = x;\n\t\t\t\t++ans;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(ans);\n\t}\n}"
        },
        {
            "language": 3,
            "solution": "import sys\nimport io\nimport os\n\ntotal = 0\nfailed = 0\ndef run(test,res):\n    x = io.StringIO()\n    with io.StringIO(test) as sys.stdin:\n        with x as sys.stdout:\n            work()\n            z = x.getvalue().strip()\n    sys.stdout = sys.__stdout__\n    print(\"Passed?\", z == res)\n    print(\"Expected: \", res)\n    print(\"Actual  : \", z)\n    global total, failed\n    total  += 1\n    failed += 1 if (z != res) else 0\n\ndef work():\n    n = input()\n    a = list(map(int, input().split()))\n    min = a[0]\n    max = a[0]\n    c = 0\n    for x in a[1:]:\n        if x<min:\n            min = x\n            c += 1\n        if x>max:\n            max = x\n            c += 1\n    print(c)\n\n\ndef test():\n    run(\"\"\"5\n100 50 200 150 200\"\"\", \"2\")\n    run(\"\"\"10\n4664 6496 5814 7010 5762 5736 6944 4850 3698 7242\"\"\", \"4\")\n\nif('LOCALTEST' in os.environ):\n    test()\n    print(\"\\n Result: %s (%d total, %d passed)\" % (\"FAILED\" if (failed>0) else \"PASSED\", total, failed))\nelse:\n    work()\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid to_upper(string &s) {\n  for (int i = 0; i < s.size(); i++) s[i] = toupper(s[i]);\n}\nvoid to_lower(string &s) {\n  for (int i = 0; i < s.size(); i++) s[i] = tolower(s[i]);\n}\nint main() {\n  int n;\n  cin >> n;\n  int x;\n  cin >> x;\n  n--;\n  int minim = x, maxim = x;\n  int res = 0;\n  while (n--) {\n    cin >> x;\n    if (x < minim) {\n      minim = x;\n      res++;\n    } else if (x > maxim) {\n      maxim = x;\n      res++;\n    }\n  }\n  cout << res << \"\\n\";\n}\n"
        },
        {
            "language": 3,
            "solution": "_ = int(input())\nr = [int(x) for x in input().split()]\n_max = r[0]\n_min = r[0]\nn = 0\nfor i in range(1, len(r)):\n    res = r[i]\n    if res > _max:\n        n += 1\n        _max = res\n    elif res < _min:\n        n += 1\n        _min = res\nprint(n)"
        },
        {
            "language": 3,
            "solution": "n,r=int(input()),list(map(int,input().split()))\nb,w,t=r[0],r[0],0\nfor x in r[1:]:\n    if x > b:\n        b=x\n        t+=1\n    elif x < w:\n        w=x\n        t+=1\nprint(t)"
        },
        {
            "language": 3,
            "solution": "a=input()\nlst = input().split()\nmax = int(lst[0])\nmin = int(lst[0])\ncount = 0\nfor i in lst:\n i=int(i)\n if i > max:\n  max = i\n  count+=1\n if i < min:\n  min = i\n  count+=1\nprint(count)\n  \t\t\t    \t \t\t\t\t\t\t \t\t \t \t\t\t  \t\t\t"
        },
        {
            "language": 3,
            "solution": "n=input()\nl=list(map(int,input().split()))\nt=0\nfor i in range(len(l)):\n    if i>0 and (l[i]>max(l[:i]) or l[i]<min(l[:i])):\n        t+=1\nprint(t)\n            \n"
        },
        {
            "language": 1,
            "solution": "if __name__ == \"__main__\":\n    n = int(raw_input())\n    w = map(int, raw_input().split())\n    min = w[0]\n    max = w[0]\n    count = 0\n    for i in w[1:]:\n        if i > max:\n            max = i\n            count += 1\n        if i < min:\n            min = i\n            count += 1\n    print count"
        },
        {
            "language": 3,
            "solution": "i = int\ny = input\nn = i(y())\nar = [i(x) for x in y().split(' ')]\na = 0\nm = [ar[0]]*2\nfor j in range(1,n):\n    if (ar[j]<m[0]):\n        a+=1\n        m[0]=ar[j]\n    elif (ar[j]>m[1]):\n        a+=1\n        m[1]=ar[j]\nprint(a)\n    \n"
        },
        {
            "language": 3,
            "solution": "n = int(input(''))\nm = [int(i) for i in input('').split(' ')[:n]]\nmx = m[0]\nmn = m[0]\ncnt = 0\nfor i in range(0,len(m)):\n    if m[i] > mx:\n        cnt += 1\n        mx = m[i]\n    elif m[i] < mn:\n        cnt += 1\n        mn = m[i]\nprint(cnt)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntypedef vector<pair<int, int> > vii;\nint n, x, maks, mins, jml;\nint main() {\n  ios_base::sync_with_stdio(NULL);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  cin >> n;\n  cin >> x;\n  maks = x;\n  mins = x;\n  for (int i = 1; i < n; i++) {\n    cin >> x;\n    if (x > maks) {\n      maks = x;\n      jml++;\n    }\n    if (x < mins) {\n      mins = x;\n      jml++;\n    }\n  }\n  cout << jml;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\ns = list(map(int,input().split()))\n\nmax_s = s[0]\nmin_s = s[0]\nc = 0\nfor i in range(n):\n\n    if s[i] < min_s:\n        min_s = s[i]\n        c+=1\n    elif s[i] > max_s:\n        max_s = s[i]\n        c+=1\nprint(c)"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\n\npublic class C_155A {\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc=new Scanner(System.in);\n\t\tint n=sc.nextInt();\n\t\tint cnt=0; \n\t\tint max=sc.nextInt();\n\t\tint min=max;\n\t\tfor (int i = 1; i < n; i++) {\n\t\t\tint s=sc.nextInt();\n\t\t\tif (max<s) {\n\t\t\t\tcnt++;\n\t\t\t\tmax=s;\n\t\t\t}\n\t\t\tif (min>s) {\n\t\t\t\tcnt++;\n\t\t\t\tmin=s;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(cnt);\n\t}\n\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\npieces=input().split()\nP=[]\nfor i in pieces:\n    P.append(int(i))\nama=0\nfor i in range(1,len(P)):\n    big=0\n    small=0\n    for j in range(i):\n        if P[j]>P[i]:\n            big += 1\n        elif P[j]<P[i]:\n            small += 1\n    if big==i or small==i:\n        ama += 1\nprint(ama)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\npoints=[int(i) for i in input().split()]\nsum1=0\nfor i in range(1,n):\n    if points[i]<min(points[:i]) or points[i]>max(points[:i]):\n        sum1+=1\nprint(sum1)\n    \n"
        },
        {
            "language": 1,
            "solution": "#-*- encoding:utf-8 -*-\n\n'''\n\uc785\ub825:\nn \ucf58\ud14c\uc2a4\ud2b8\uc758 \ud69f\uc218\n\ub2e4\uc74c\ud589\uc740 \ucf58\ud14c\uc2a4\ud2b8\ubcc4 \ud68d\ub4dd \uc810\uc218\n\uccab \uc810\uc218 \uc774\ud6c4, \uc810\uc218\uac00 \ucd5c\uace0, \ud639\uc740 \ucd5c\uc800 \uc810\uc218\ub97c \ubc1b\ub294 \uacbd\uc6b0\nAmazing\uc744 \ub744\uc6c0\n\n\ucd9c\ub825 :\nAmazing\uc758 \uac1c\uc218\n\n'''\n\nn = input()\n\npoints = map(int, raw_input().split())\n\n\nmx = points[0]\nmn = points[0]\namazing = 0\nfor i in range(n):\n\tif points[i] > mx :\n\t\tmx = points[i]\n\t\tamazing+=1\n\telif points[i] < mn:\n\t\tmn = points[i]\n\t\tamazing+=1\n\telse:\n\t\tcontinue\n\nprint amazing\n\n\n'''\n5\n100 50 200 150 200\n\n\n2\n'''"
        },
        {
            "language": 3,
            "solution": "t = int(input())\narr = [int(x) for x in input().split()]\nM = arr[0]\nm = arr[0]\ncount = 0\nfor i in range(1,t):\n    if arr[i]>M:\n        count += 1\n        M = arr[i]\n    elif arr[i]<m:\n        count += 1\n        m = arr[i]\nprint(count)\n"
        },
        {
            "language": 1,
            "solution": "x=int(raw_input())\nnums=raw_input().split()\nmaxnum=int(nums[0])\nmininum=int(nums[0])\ncount=0\nfor i in range(1,x):\n    if int(nums[i])>maxnum:\n        count=count+1\n        maxnum=int(nums[i])\n    if int(nums[i])<mininum:\n        count=count+1\n        mininum=int(nums[i])\nprint count\n"
        },
        {
            "language": 3,
            "solution": "n= int(input())\npnts=list(map(int,input().split()))\ncom=list()\nama=0\ncom.append(pnts[0])\nfor i in range(1,n):\n    if pnts[i]>max(com) or  pnts[i]<min(com) :\n        ama+=1\n    com.append(pnts[i])\nprint(ama)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[int(i) for i in input().split()]\nk=0\nfor i in range(1,len(a)):\n    if a[i]<min(a[:i]) or a[i]>max(a[:i]):\n        k+=1\nprint(k)"
        },
        {
            "language": 3,
            "solution": "m=int(input())\nx=[int(x) for x in input().split()]\nif(m==1):\n  print(0)\nelse:\n  maximum=x[0]\n  minimum=x[0]\n  count=0\n  for i in x:\n    if(i<minimum):\n      count=count+1\n      minimum=i\n\n    if(i>maximum):\n      count=count+1\n      maximum=i\n\n\n  print(count)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nb = []\nz = 0\na = list(map(int, input().split()))\nfor i in range(n):\n\tb.append(a[i])\n\tif i > 0:\n\t\tif a[i] < min(a[:i]):\n\t\t\tz = z + 1\n\t\telif a[i] > max(a[:i]):\n\t\t\tz = z + 1\nprint(z)"
        },
        {
            "language": 3,
            "solution": "# i=input\n# i()\n# m,*s=map(int,i().split())\n# n=m\n# x=0\n# for c in s:\n# \tif c>m:\n# \t\tx+=1\n# \t\tm=c\n# \tif c<n:\n# \t\tx+=1\n# \t\tn=c\n# print(x)\n\nn = int(input())\ns = list(map(int,input().split()))[:n]\n\nc = 0\n\nx = s[0]\nx2 = s[0]\n\nfor i in range(1,n+1):\n    if (s[i-1]>x):\n        c+=1\n        x = s[i-1]\n\n    if (s[i - 1] < x2):\n        c += 1\n        x2 = s[i - 1]\n\nprint(c)\n\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nvals = list(map(int, input().split()))\n\ncount = 0\nmi = ma = vals[0]\nfor v in vals[1:]:\n\tif v < mi:\n\t\tmi = v\n\t\tcount += 1\n\tif v > ma:\n\t\tma = v\n\t\tcount += 1\n\nprint(count)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nstring = [int(i) for i in input().split()]\nmaximum = string[0]\nminimum = string[0]\ncounter = 0\nfor i in string:\n    if i > maximum:\n        maximum = i\n        counter += 1\n    elif i < minimum:\n        minimum = i\n        counter += 1\nprint(counter)\n        "
        },
        {
            "language": 3,
            "solution": "if __name__ == \"__main__\":\n    ariel = int(input())\n    arriel = input().split(\" \")\n    contAriel = 0\n    arriel = list(map(int, arriel))\n    for i in range(1, len(arriel)):\n        contArielMenor = 0\n        contArielMayor = 0\n        for j in range(i):\n            if arriel[i] >= arriel[j]:\n                contArielMenor = 1\n            if arriel[i] <= arriel[j]:\n                contArielMayor = 1\n        if not contArielMayor:\n            contAriel += 1\n        if not contArielMenor:\n            contAriel += 1\n    print(contAriel)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nli=list(map(int,input().split()))\nmin_=li[0]\nmax_=li[0]\ncount=0\nfor i  in range(1, len(li)):\n    if li[i]>max_:\n        max_=li[i]\n        count+=1\n    elif li[i]<min_:\n        min_=li[i]\n        count+=1\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\npoints = [int(x) for x in input().split()]\n\nmin_points = points[0]\nmax_points = points[0]\ncounter = 0\n\n\nfor result in range(1, len(points)):\n    if points[result] < min_points:\n        counter += 1\n        min_points = points[result]\n\n    if points[result] > max_points:\n        counter += 1\n        max_points = points[result]\n\nprint(counter)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nscores = list(map(int, input().split()))\n\nmin = scores[0]\nmax = scores[0]\n\na = 0\n\nfor i in range(1,len(scores)):\n    if scores[i] < min:\n        a += 1\n        min = scores[i]\n\n    if scores[i] > max:\n        a += 1\n        max = scores[i]\n\nprint(a)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input());\nx=[int(x) for x in input().split()];\ny=[x[0]];\nresult=0;\nfor i in range(1,n):\n    if x[i]>max(y) or x[i]<min(y):\n        result+=1;\n    y.append(i);\n    y[i]=x[i];\nprint(result);"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nm1=l[0]\nm2=l[0]\nc=0\nfor i in range(n):\n     if l[i]<m2:\n          m2=l[i]\n          c=c+1\n     elif l[i]>m1:\n          m1=l[i]\n          c=c+1\n     else:\n          continue\nprint(c)     \n     \n     "
        },
        {
            "language": 3,
            "solution": "t=1\n#t= int(input())\ndef solve(score,n):\n    ls = [score[0]]\n    k=0\n    for i in range(1,n):\n        if (score[i]>max(ls)) or (score[i]<min(ls)):\n            k+=1\n            #print(score[i])\n        ls.append(score[i]) \n    print(k)\nwhile t:\n    n = int(input())\n    score = list(map(int, input().split()))\n    solve(score,n)\n    t-=1"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nm = list(map(int, input().split()))\nmax, min, c = m[0], m[0], 0\nfor i in range(n):\n    if m[i] > max:\n        max = m[i]\n        c += 1\n    if m[i] < min:\n        min = m[i]\n        c += 1\nprint(c)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = [int(i) for i in input().split(' ')]\nminn = a[0]\nmaxx = a[0]\ntotal = 0\nfor i in range(1, n):\n    if a[i] < minn:\n        minn = a[i]\n        total += 1\n    if a[i] > maxx:\n        maxx = a[i]\n        total += 1\nprint(total)\n"
        },
        {
            "language": 3,
            "solution": "#from collections import *\n#from math import *\n#from operator import *\nI=lambda:map(int,input().split())\ndef main():\n\tn=int(input())\n\ta=list(I())\n\tans=0\n\tcmx,cmin=a[0],a[0]\n\tfor i in range(1,n):\n\t\tif a[i]>cmx:\n\t\t\tans+=1\n\t\t\tcmx=a[i]\n\t\tif a[i]<cmin:\n\t\t\tans+=1\n\t\t\tcmin=a[i]\n\tprint(ans)\nmain()"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, i;\n  int Min, Max, ans = 0;\n  cin >> n;\n  int arr[n];\n  cin >> arr[0];\n  Max = Min = arr[0];\n  for (i = 1; i < n; i += 1) {\n    cin >> arr[i];\n    if (arr[i] > Max) {\n      Max = arr[i];\n      ans += 1;\n    }\n    if (arr[i] < Min) {\n      Min = arr[i];\n      ans += 1;\n    }\n  }\n  cout << ans;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n= int(input())\nm=[int(i) for i in input().split()]\nk=0\nl=m[0]\nlock=True\nfor j in range(1,n):\n    if l > m[j]:\n        for y in range(0,j):\n            if m[j] >= m[y]:\n                lock =False\n        if lock:\n            k+=1\n        \n    if l < m[j]:\n        for y in range(0,j):\n            if m[j] <= m[y]:\n                lock =False\n        if lock:\n            k+=1\n    lock=True    \n    l=m[j]\nprint(k)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=input().split(\" \")\nfor i in range(n):\n    l[i]=int(l[i])\nm,M,t=l[0],l[0],0\nfor i in range(n):\n    if l[i]<m:\n        m=l[i]\n        t+=1\n    elif l[i]>M:\n        M=l[i]\n        t+=1\nprint(t)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nmas = list(map(int, input().split()))\ns = 0\nmx, mn = mas[0], mas[0]\nfor i in range(1, n):\n    if mas[i] > mx:\n        mx = mas[i]\n        s += 1\n    if mas[i] < mn:\n        mn = mas[i]\n        s += 1\nprint(s)"
        },
        {
            "language": 3,
            "solution": "_ = int(input())\ntest = list(map(int, input().split()))\n\nbala = test[0]\npaein = test[0]\nant = 0\nfor i in test[1:]:\n    if i > bala:\n        bala = i\n        ant += 1\n    elif i < paein:\n        paein = i\n        ant += 1\n\nprint(ant)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\narr=list(map(int,input().split()))\nctr=0\nmax=min=arr[0]\nfor i in range(1,n):\n  if arr[i]>max: \n    ctr+=1\n    max=arr[i]\n  elif arr[i]<min:\n    ctr+=1\n    min=arr[i]\n    \nprint(ctr)"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class A {\n\tScanner sc = new Scanner(System.in);\n\tprivate void doIt()\n\t{\n\t\tint n = sc.nextInt();\n\t\tint ans = 0;\n\t\tint max = sc.nextInt(), min = max;\n\t\tfor(int i = 1; i < n; i++) {\n\t\t\tint v = sc.nextInt();\n\t\t\tif(v < min) { min = v; ans++; }\n\t\t\telse if(v > max) { max = v; ans++; }\n\t\t}\n\t\tSystem.out.println(ans);\n\t}\n\tpublic static void main(String[] args) {\n\t\tnew A().doIt();\n\n\t}\n\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nc=0\na=list(map(int,input().split()))\nmaximum=a[0]\nminimum=a[0]\nfor i in range(n):\n\tif a[i]>maximum:\n\t\tc=c+1\n\t\tmaximum=a[i]\n\t\t# print(c)\n\telif a[i]<minimum:\n\t\tc=c+1\n\t\tminimum=a[i]\n\t\t# print(c)\nprint(c)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\namazing=0\na=list(map(int,input().split()))\nsmall=large=a[0]\nfor i in a[1:]:\n    if i<small:\n        small=i\n        amazing+=1\n    if i>large:\n        large=i\n        amazing+=1\nprint(amazing)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nresults = [int(elem) for elem in input().split()]\nmin_r, max_r, counter = results[0], results[0], 0\nfor i in range(1, n):\n    key = False\n    if results[i] > max_r:\n        max_r = results[i]\n        key = True\n    if results[i] < min_r:\n        min_r = results[i]\n        key = True\n    if key:\n        counter+=1\nprint(counter)"
        },
        {
            "language": 1,
            "solution": "raw_input()\nnums = map(int, raw_input().split())\n\nsmin = 10001\nsmax = -1\ntotal = 0\n\nfor n in nums:\n\tif n < smin:\n\t\tsmin = n\n\t\ttotal += 1\n\tif n > smax:\n\t\tsmax = n\n\t\ttotal += 1\n\nprint total - 2\n"
        },
        {
            "language": 3,
            "solution": "useless = input()\ndata = [int(x) for x in input().split()]\n\ntop, bot, a = data[0], data[0], 0\nfor score in data:\n    if score > top:\n        a += 1\n        top = score\n    elif score < bot:\n        a += 1\n        bot = score\n\nprint(a)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nli = input().split(' ')\nli = list(map(int, li))\nres = 0\nj = 1\nfor i in li[1:]:\n    if i > max(li[:j]) or i < min(li[:j]):\n        res += 1\n    j += 1\nprint(res)"
        },
        {
            "language": 3,
            "solution": "a=[]\nb=[]\nwhile True:\n    try:\n        a.append(input())\n    except:\n        break\nn=int(a[0])\nb=a[1].split(' ')\nmin=int(b[0])\nmax=int(b[0])\nm=0\nx=0\nfor i in range(len(b)):\n    if int(b[i])>max:\n        m+=1\n        max=int(b[i])\n    if int(b[i])<min:\n        x+=1\n        min=int(b[i])\nprint(m+x)"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class Main {\n\n    public static class Solution {\n\n        public String YoungPhysicist() {\n            Scanner input = new Scanner(System.in);\n            int n = input.nextInt();\n\n            int[] arr = new int[] { 0, 0, 0 };\n            for (int i = 0; i < n; i++) {\n                // String[] vecs = args.get(i).split(\" \");\n                int a = input.nextInt();\n                int b = input.nextInt();\n                int c = input.nextInt();\n                arr[0] += a;\n                arr[1] += b;\n                arr[2] += c;\n            }\n            input.close();\n            return (arr[0] == 0 && arr[1] == 0 && arr[2] == 0) ? \"YES\" : \"NO\";\n        }\n\n        public int BeautifulMatrix() {\n            int[][] matrix = new int[5][5];\n            Scanner input = new Scanner(System.in);\n            int row = -1, col = -1;\n\n            for (int i = 0; i < matrix.length; i++) {\n                for (int j = 0; j < matrix[0].length; j++) {\n                    matrix[i][j] = input.nextInt();\n                    if (matrix[i][j] == 1) {\n                        input.close();\n                        return Math.abs(i - 2) + Math.abs(j - 2);\n                    }\n                }\n            }\n            input.close();\n            return row + col;\n        }\n\n        public String QueueAtTheSchool() {\n            Scanner input = new Scanner(System.in);\n            int n = input.nextInt();\n            int t = input.nextInt();\n            input.nextLine();\n            String queue = input.nextLine();\n            char[] arr = queue.toCharArray();\n\n            for (int k = 0; k < t; k++) {\n                for (int i = 1; i < n; i++) {\n                    if (arr[i] == 'B' && arr[i - 1] == 'G') {\n                        arr[i] = 'G';\n                        arr[i - 1] = 'B';\n                    }\n                }\n            }\n\n            input.close();\n            return new String(arr);\n        }\n\n        public String Borze() {\n            Scanner input = new Scanner(System.in);\n            String str = input.nextLine();\n            String sol = \"\";\n            int n = str.length();\n\n            for (int i = 0; i < n; i++) {\n                String a = str.charAt(i) + \"\";\n                String b = \"\";\n                if (i < n - 1)\n                    b = \"\" + str.charAt(i + 1);\n\n                if (a.equals(\".\")) {\n                    sol = sol + \"0\";\n                } else if (a.equals(\"-\")) {\n                    i++;\n                    if (b.equals(\".\")) {\n                        sol = sol + \"1\";\n                    } else if (b.equals(\"-\")) {\n                        sol = sol + \"2\";\n                    }\n                }\n            }\n\n            input.close();\n            return sol;\n        }\n\n        public int BeautifulYear() {\n            Scanner input = new Scanner(System.in);\n            int year = input.nextInt();\n            year++;\n            while (!isUnique(year)) {\n                year++;\n            }\n\n            input.close();\n            return year;\n        }\n\n        public boolean isUnique(int num) {\n            boolean unique = true;\n            Set<Character> set = new HashSet<>();\n            String str = num + \"\";\n            for (int i = 0; i < str.length(); i++) {\n                if (set.contains(str.charAt(i)))\n                    return false;\n                set.add(str.charAt(i));\n            }\n            return unique;\n        }\n\n        public String[][] lightsOut() {\n            int sq = 3;\n            int[][] input = new int[sq][sq];\n            String[][] sol = new String[sq][sq];\n\n            Scanner scanner = new Scanner(System.in);\n\n            for (int i = 0; i < sq; i++) {\n                for (int j = 0; j < sq; j++) {\n                    sol[i][j] = \"1\";\n                }\n            }\n\n            for (int i = 0; i < sq; i++) {\n                for (int j = 0; j < sq; j++) {\n                    input[i][j] = scanner.nextInt();\n\n                    if (input[i][j] % 2 != 0) {\n                        toggleAdj(sol, i, j);\n                    }\n                }\n            }\n            System.out.println(\"\\n\\n\\n\");\n            for (int i = 0; i < sol.length; i++) {\n                String a = sol[i][0];\n                String b = sol[i][1];\n                String c = sol[i][2];\n                System.out.println(a + b + c);\n            }\n            scanner.close();\n            return sol;\n        }\n\n        public void toggleAdj(String[][] sol, int row, int col) {\n            if (row + 1 < sol.length) {\n                if (sol[row + 1][col].equals(\"1\")) {\n                    sol[row + 1][col] = \"0\";\n                } else {\n                    sol[row + 1][col] = \"1\";\n                }\n            }\n\n            if (row - 1 >= 0) {\n                if (sol[row - 1][col].equals(\"1\")) {\n                    sol[row - 1][col] = \"0\";\n                } else {\n                    sol[row - 1][col] = \"1\";\n                }\n            }\n\n            if (col + 1 < sol[0].length) {\n                if (sol[row][col + 1].equals(\"1\")) {\n                    sol[row][col + 1] = \"0\";\n                } else {\n                    sol[row][col + 1] = \"1\";\n                }\n            }\n\n            if (col - 1 >= 0) {\n                if (sol[row][col - 1].equals(\"1\")) {\n                    sol[row][col - 1] = \"0\";\n                } else {\n                    sol[row][col - 1] = \"1\";\n                }\n            }\n        }\n\n        public String word(){\n            Scanner scanner = new Scanner(System.in);\n            String w = scanner.nextLine();\n            int n = w.length();\n\n            int a = (int)'a';\n            int z = (int)'z';\n\n            int count = 0;\n            for(int i = 0; i < n; i++){\n                int curr = (int)w.charAt(i);\n                if(curr >= a && curr <= z)\n                    count++;\n            }\n\n            if(count >= n - count){\n                w = w.toLowerCase();\n            } else {\n                w = w.toUpperCase();\n            }\n\n            //System.out.println(w);\n            scanner.close();\n            return w;\n        }\n\n        public String wordCapitalization(){\n            Scanner scanner = new Scanner(System.in);\n            String word = scanner.nextLine();\n            char[] c = word.toCharArray();\n            c[0] = ((word.charAt(0) + \"\").toUpperCase()).charAt(0);\n            String sol = new String(c);\n            scanner.close();\n            return sol;\n        }\n\n        public  String nearlyLuckyNumber(){\n            Scanner scanner = new Scanner(System.in);\n            int n = scanner.nextInt();\n            String s = n + \"\";\n            int cnt = 0;\n            for(int i = 0; i < s.length(); i++){\n                char c = s.charAt(i);\n                if(c == '4' || c == '7')\n                    cnt++;\n                if(cnt > 7)\n                    return \"NO\";\n            }\n            scanner.close();\n            return (cnt == 7 || cnt == 4)? \"YES\" : \"NO\";\n        }\n\n        public int stonesOnTheTable(){\n            Scanner scanner = new Scanner(System.in);\n            int n = scanner.nextInt();\n            scanner.nextLine();\n            String s = scanner.nextLine();\n            int sol = removeStones(s);\n            scanner.close();\n            return sol;\n        }\n\n        public int removeStones(String s){\n            if(isValidStoneArrangement(s))\n                return 0;\n\n            int n = s.length();\n            int min = n;\n            for(int i = 0; i < n; i++){\n                int k = removeStones(removeChar(s,i));\n                if(k < min)\n                    min = k;\n            }\n\n            return min + 1;\n        }\n\n        public boolean isValidStoneArrangement(String s){\n            for(int i = 0; i < s.length() - 1; i++){\n                if(s.charAt(i) == s.charAt(i+1))\n                    return false;\n            }\n\n            return true;\n        }\n\n        public String removeChar(String s, int idx){\n            String nw = \"\";\n            int n = s.length();\n\n            for(int i = 0; i < n; i++){\n                if(i == idx)\n                    continue;\n                nw = nw + s.charAt(i);\n            }\n            return nw;\n        }\n\n        public String panoramixPrediction(){\n            Scanner scanner = new Scanner(System.in);\n            int n = scanner.nextInt();\n            int m = scanner.nextInt();\n            if(!isPrime(m))\n                return \"NO\";\n\n            for(int i = n + 1; i < m; i++){\n                if(isPrime(i))\n                    return \"NO\";\n            }\n\n            scanner.close();\n            return \"YES\";\n        }\n\n        public boolean isPrime(int n){\n\n            for(int i = 2; i < n; i++){\n                float f = (float)n/(float)i;\n                int r = (int)f;\n                if(f == r)\n                    return false;\n            }\n\n            return true;\n        }\n\n        public String ultraFastMathematician(){\n            String sol = \"\";\n            Scanner scanner = new Scanner(System.in);\n            String n1 = scanner.nextLine();\n            String n2 = scanner.nextLine();\n            int n = n1.length();\n\n            for(int i = 0; i < n; i++){\n                if(n1.charAt(i) == n2.charAt(i)){\n                    sol = sol + \"0\";\n                } else {\n                    sol = sol + \"1\";\n                }\n            }\n\n            scanner.close();\n            return sol;\n        }\n\n        public List<Integer> perfectPermutation(){\n            Scanner scanner = new Scanner(System.in);\n            int n = scanner.nextInt();\n\n            List<Integer> sol = pPerm(n, new ArrayList<Integer>());\n\n            scanner.close();\n            return sol;\n        }\n\n        public List<Integer> pPerm(int n, List<Integer> lst){\n            List<Integer> sol = new ArrayList<>();\n            if(lst.size() == n){\n                for(int i = 0; i < lst.size(); i++){\n                    if(lst.get(i) == i+1){\n                        sol.add(-1);\n                        return sol;\n                    }\n                }\n\n                return lst;\n            }\n\n            List<Integer> res;\n            for(int i = 0; i < n; i++){\n                if(lst.contains(i+1))\n                    continue;\n\n                lst.add(i+1);\n\n                res = pPerm(n, lst);\n                if(res.get(0) != -1 ){\n                    return res;\n                }\n\n                lst.remove(lst.size()-1);\n            }\n\n            sol.add(-1);\n            return sol;\n        }\n\n        public int arrivalOfTheGeneral(){\n            Scanner scanner = new Scanner(System.in);\n            int n = scanner.nextInt();\n\n            List<Integer> line = new ArrayList<>();\n\n            int a = scanner.nextInt();\n            int b = scanner.nextInt();\n            line.add(a);\n            line.add(b);\n\n            int min;\n            int minidx;\n            int max;\n            int maxidx;\n\n            if(a < b){\n                min = a;\n                minidx = 0;\n                max = b;\n                maxidx = 1;\n            } else {\n                min = b;\n                minidx = 1;\n                max = a;\n                maxidx = 0;\n            }\n\n            for(int i = 2; i < n; i++){\n                int num = scanner.nextInt();\n                line.add(num);\n\n                if(num > max){\n                    max = num;\n                    maxidx = i;\n                } else if (num <= min){\n                    min = num;\n                    minidx = i;\n                }\n            }\n\n            int leftSwap = n-1 - minidx;\n            int rightSwap = maxidx;\n\n            scanner.close();\n            int sol = leftSwap + rightSwap;\n\n            return (minidx < maxidx )? sol-1: sol;\n        }\n\n        public float drinks(){\n            Scanner scanner = new Scanner(System.in);\n\n            int n = scanner.nextInt();\n            int num = 0;\n            int denom = 0;\n\n            for(int i = 0; i < n; i++){\n                num += scanner.nextInt();\n                denom += 100;\n            }\n\n            scanner.close();\n            return (float)num/(float)denom * 100;\n        }\n\n        public int insomniaCure(){\n            Scanner scanner = new Scanner(System.in);\n            int k = scanner.nextInt();\n            int l = scanner.nextInt();\n            int m = scanner.nextInt();\n            int n = scanner.nextInt();\n            int d = scanner.nextInt();\n            List<Integer> lst = new ArrayList<>();\n\n            lst.add(k);\n            lst.add(l);\n            lst.add(m);\n            if(n != 0)\n                lst.add(n);\n\n            int sol = 0;\n            for(int i = 0; i < d; i++){\n                int dragonNum = i+1;\n                for(int j = 0; j < lst.size(); j++){\n                    if(dragonNum % lst.get(j) == 0){\n                        sol++;\n                        break;\n                    }\n                }\n            }\n\n            scanner.close();\n            return sol;\n        }\n\n        public int cupboards(){\n            Scanner scanner = new Scanner(System.in);\n            int n = scanner.nextInt();\n            int sol = 0;\n            int l = 0; \n            int r = 0;\n\n            for(int i = 0; i < n; i++){\n                int nl = scanner.nextInt();\n                if(nl == 1) l++;\n                int rl = scanner.nextInt();\n                if(rl == 1) r++;\n            }\n\n            int lClosed = n - l;\n            int rClosed = n - r;\n\n            int lres = (lClosed < l)? lClosed : l;\n            int rres = (rClosed < r)? rClosed : r;\n            sol = lres + rres;\n            scanner.close();\n            return sol;\n        }\n\n        public int iLoveUsername(){\n            Scanner scanner = new Scanner(System.in);\n            int n = scanner.nextInt();\n            int l = scanner.nextInt();\n            int h = -1;\n\n            int amazing = 0;\n            for(int i = 1; i < n; i++){\n                int c = scanner.nextInt();\n\n                if(i == 1){\n                    if(c < l){\n                        h = l;\n                        l = c;\n                    } else {\n                        h = c;\n                    }\n                    \n                    if(h != l)\n                        amazing++;\n                    continue;\n                }\n\n                if(c < l){\n                    l = c;\n                    amazing++;\n                } else if (c > h){\n                    h = c;\n                    amazing++;\n                }\n            }\n\n            scanner.close();\n            return amazing;\n        }\n\n    }\n\n        public static void main(String[] args) {\n            /*\n             * File file = new\n             * File(\"C:\\\\Users\\\\Rich\\\\workspace\\\\InterviewPractice\\\\src\\\\input.txt\"); try {\n             * BufferedReader br = new BufferedReader(new FileReader(file)); List<String>\n             * fileArgs = new ArrayList<>(); String st; while ((st = br.readLine()) != null)\n             * fileArgs.add(st);\n             *\n             * br.close(); Solution sol = new Solution();\n             * //System.out.println(sol.YoungPhysicist(fileArgs));\n             * System.out.println(sol.BeautifulMatrix(fileArgs)); } catch (Exception ex) {\n             * System.out.println(\"Exception encountered\" + ex.toString()); }\n             */\n            Solution sol = new Solution();\n            // System.out.println(sol.BeautifulMatrix());\n            // System.out.println(sol.YoungPhysicist());\n            // System.out.println(sol.QueueAtTheSchool());\n            // System.out.println(sol.Borze());\n            // System.out.println(sol.BeautifulYear());\n            // System.out.println(sol.lightsOut());\n            // System.out.println(sol.word());\n            //System.out.println(sol.wordCapitalization());\n            //System.out.println(sol.nearlyLuckyNumber());\n            //System.out.println(sol.stonesOnTheTable());\n            //System.out.println(sol.panoramixPrediction());\n            //System.out.println(sol.ultraFastMathematician());\n            //System.out.println(sol.perfectPermutation());\n            //System.out.println(sol.arrivalOfTheGeneral());\n            //System.out.println(sol.drinks());\n            //System.out.println(sol.insomniaCure());\n            //System.out.println(sol.cupboards());\n            System.out.println(sol.iLoveUsername());\n        }\n    }\n\n"
        },
        {
            "language": 3,
            "solution": "x = int(input())\n\ny = [int(i) for i in input().split(\" \")]\n\nlyst = [y[0]]\ncounter = 0\n\nfor i in y[1:]:\n    if i < min(lyst) or max(lyst) < i:\n        counter += 1\n    lyst.append(i)\n\nprint(counter)\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.*;\nimport java.util.*;\n\n\n\npublic class Main {\n\n    public static void main(String[] args) {\n        MyScanner sc = new MyScanner();\n        out = new PrintWriter(new BufferedOutputStream(System.out));\n\n        // ----- input\n        int n = sc.nextInt();\n        int[] arr = new int[n];\n\n        for(int i=0; i<n; i++) {\n            arr[i] = sc.nextInt();\n        }\n        int pastMin = Integer.MAX_VALUE;\n        int pastMax = Integer.MIN_VALUE;\n        int numOfAmazing = 0;\n\n        for(int i = 0; i<n; i++) {\n            int num = arr[i];\n            if(arr[i] < pastMin) {\n                numOfAmazing++;\n                pastMin = num;\n            }\n            if(arr[i] > pastMax) {\n                numOfAmazing++;\n                pastMax = num;\n            }\n        }\n\n        System.out.println(numOfAmazing - 2);\n\n\n\n\n        out.close();\n\n    }\n\n\n\n\n//    int numOfHouses = sc.nextInt();\n//    int numOfTasks = sc.nextInt();\n//    long[] tasks = new long[numOfTasks];\n//        for(int i=0; i<numOfTasks; i++) {\n//        tasks[i] = sc.nextInt();\n//    }\n//\n//    long count = tasks[0] - 1;\n//        for(int i=0; i<numOfTasks-1; i++) {\n//        if(tasks[i+1] == 1 && tasks[i] == numOfHouses) {\n//            count++;\n//        } else if(tasks[i] <= tasks[i+1]) {\n//            count += tasks[i+1] - tasks[i];\n//        } else if(tasks[i] > tasks[i+1]) {\n//            count += (numOfHouses - tasks[i]) +tasks[i+1];\n//        }\n//    }\n//\n//\n//        System.out.println(count);\n\n\n\n\n\n    //        int n = sc.nextInt();\n//\n//        int max = 1000001;\n//        boolean[] sieve = new boolean[max];\n//        for(int i=2; i<1000; i++) {\n//            if(!sieve[i]) {\n//                for(int j=0; i*j <= 1000000; j++) {\n//                    sieve[j*i] = true;\n//                }\n//            }\n//        }\n//\n//        while(n != 0) {\n//            int d = sc.nextInt();\n//            if(d == 1) {\n//                System.out.println(\"NO\");\n//                continue;\n//            }\n//            double sqrt = Math.pow(d, 0.5);\n//\n//            if(Math.floor(sqrt) != sqrt || !sieve[(int)sqrt]) {\n//                System.out.println(\"NO\");\n//            } else {\n//                System.out.println(\"YES\");\n//            }\n//\n//\n//\n//            n--;\n//        }\n\n\n\n\n\n//    int strength = sc.nextInt();\n//    int n = sc.nextInt();\n//\n//    ArrayList<Map.Entry<Integer, Integer>> entries = new ArrayList<>();\n//        for(int i=0; i<n; i++) {\n//        int x = sc.nextInt();\n//        int y = sc.nextInt();\n//        Map.Entry<Integer, Integer> entry = new AbstractMap.SimpleEntry<>(x, y);\n//        entries.add(entry);\n//    }\n//\n//    Comparator<Map.Entry<Integer, Integer>> comparator = (Map.Entry<Integer, Integer> entry1, Map.Entry<Integer, Integer> entry2) ->\n//            entry1.getKey().compareTo(entry2.getKey());\n//\n//        Collections.sort(entries, comparator);\n//\n//        for(Map.Entry<Integer, Integer> entry : entries) {\n//        if(strength <= entry.getKey()) {\n//            System.out.println(\"NO\");\n//            return;\n//        } else {\n//            strength += entry.getValue();\n//        }\n//    }\n//        System.out.println(\"YES\");\n\n\n\n\n\n\n\n\n\n\n//    int n = sc.nextInt();\n//    int l = sc.nextInt();\n//\n//    int[] arr = new int[n];\n//        for(int i=0; i<n; i++) {\n//        arr[i] = sc.nextInt();\n//    }\n//\n//        Arrays.sort(arr);\n//    //System.out.println(Arrays.toString(arr));\n//    int a = 0;\n//    int b = arr[arr.length - 1];\n\n//    public static int gcd1(int a, int b) {\n//        BigInteger b1 = BigInteger.valueOf(a);\n//        BigInteger b2 = BigInteger.valueOf(b);\n//        BigInteger gcd = b1.gcd(b2);\n//        return gcd.intValue();\n//\n//    }\n//\n//    public static int lcm2(int a, int b) {\n//        return (a*b)/ gcd1(a,b);\n//    }\n//    public static int lcm3(int a, int b, int c) {\n//        return lcm2(a,lcm2(b,c));\n//    }\n//    public static int lcm4(int a, int b, int c, int d) {\n//        return lcm2(lcm2(a,b), lcm2(c,d));\n//    }\n\n\n\n\n\n\n\n\n\n\n\n\n\n    public static PrintWriter out;\n    //-----------MyScanner class for faster input----------\n    public static class MyScanner {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public MyScanner() {\n            br = new BufferedReader(new InputStreamReader(System.in));\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine(){\n            String str = \"\";\n            try {\n                str = br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n\n    }\n\n}\n\n\n\n\n//    MyScanner sc = new MyScanner();\n//        out = new PrintWriter(new BufferedOutputStream(System.out));\n//                int numOfTests = sc.nextInt();\n//\n//                for(int i=0; i<numOfTests; i++) {\n//        int numOfStations = sc.nextInt();\n//        //System.out.println(numOfStations);\n//        int[] arrive = new int[numOfStations + 1];\n//        int[] depart = new int[numOfStations + 1];\n//        int[] tm = new int[numOfStations + 1];\n//        depart[0] = 0;\n//\n//        for(int j=1; j<=numOfStations; j++) {\n//        arrive[j] = sc.nextInt();\n//        depart[j] = sc.nextInt();\n//        }\n//\n//        for(int k=1; k<=numOfStations; k++) {\n//        tm[k] = sc.nextInt();\n//        }\n//\n//        int res = 0;\n//\n//        for(int x=1; x<=numOfStations; x++) {\n//\n//        res = res + (arrive[x] - depart[x-1]) + tm[x];\n//        int temp = depart[x] - arrive[x];\n//\n//        if(temp % 2 == 0) {\n//        temp = temp / 2;\n//        } else {\n//        temp = (temp / 2) + 1;\n//        }\n//\n//        if(x<numOfStations) {\n//        res += temp;\n//        if(res < depart[x]) {\n//        res = depart[x];\n//        }\n//        }\n//\n//        }\n//        System.out.println(res);\n//\n//\n//\n//        }\n\n\n\n\n\n\n\n\n//int t = sc.nextInt();\n//        for(int i=0; i<t; i++) {\n//        int n = sc.nextInt();\n//        ArrayList<Integer> list = new ArrayList<>();\n//        for(int j=0; j<n; j++) {\n//        list.add(sc.nextInt());\n//        }\n//\n//\n//        int tempC = 0;\n//        int tempM = 0;\n//        int tempS = 0;\n//        int tempN = n;\n//        int retVal = 0;\n//        if(list.size() == 1) {\n//        tempS = list.get(0);\n//        tempM = Integer.MAX_VALUE;\n//        }\n//\n//        for(int k=1; k<list.size(); k++) {\n//        if(k - 1 == 0) {\n//        int first = list.get(0);\n//        int second = list.get(1);\n//        tempC = second - first;\n//        tempM = Integer.MAX_VALUE;\n//        tempS = first;\n//\n//        if(tempC < 0) {\n//        retVal = -1;\n//        }\n//        }\n//\n//        // we have tempC\n//        // we have tempM\n//        // we have tempS\n//        // we have tempN\n//\n//        if(retVal != -1) {\n//        int a1 = list.get(k-1);\n//        int a2 = list.get(k);\n//        // (a1 = 9) + (c = 8) = 17\n//        // if 9 + 8 ==\n//        if(a1 + tempC == a2) {\n//        tempC = tempC;\n//        tempM = tempM;\n//\n//        } else if (a1 + tempC < a2) {\n//        retVal = -1;\n//        } else if (a1 + tempC > a2) {\n//        tempM = a1 + tempC - a2;\n//        }\n//        }\n//\n//        }\n//\n//        if(tempS < 0) {\n//        System.out.println(-1);\n//        continue;\n//        }\n//\n//        if(retVal == -1) {\n//        System.out.println(-1);\n//        continue;\n//        }\n//\n//        if(tempC >= tempM) {\n//        System.out.println(-1);\n//        continue;\n//        }\n//        if(tempM == Integer.MAX_VALUE) {\n//        System.out.println(0);\n//        continue;\n//        }\n//\n//        System.out.println(tempM + \" \" + tempC);\n//\n//        }\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1001;\nint n, x, cnt, mn, mx;\nint main() {\n  cin >> n;\n  cin >> x;\n  if (n == 1) {\n    cout << 0 << endl;\n    return 0;\n  }\n  mn = mx = x;\n  for (int i = 1; i < n; i++) {\n    cin >> x;\n    if (x < mn || x > mx) {\n      cnt++;\n      mn = min(mn, x);\n      mx = max(mx, x);\n    }\n  }\n  cout << cnt << endl;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nmaxi=mini=l[0]\ncount=0\nfor i in l:\n    if i>maxi:\n        count+=1\n        maxi=i\n    if i<mini:\n        count+=1\n        mini=i\nprint(count)\n        \n"
        },
        {
            "language": 3,
            "solution": "cnt=0\nn=int(input())\ns=list(map(int,input().split()))\nmi,ma=s[0],s[0]\nfor i in range (n) :\n    if s[i]>ma:\n        cnt+=1\n        ma=s[i]\n    elif s[i]<mi:\n        cnt+=1\n        mi=s[i]\nprint(cnt)\n"
        },
        {
            "language": 3,
            "solution": "def max(t):\n\tmax=t[0]\n\tfor i in range(1,len(t)):\n\t\tif t[i]>max:\n\t\t\tmax=t[i]\n\treturn max\n\ndef min(t):\n\tmin=t[0]\n\tfor i in range(1,len(t)):\n\t\tif t[i]<min:\n\t\t\tmin=t[i]\n\treturn min\n\nn=int(input())\nst=list(map(int,input().split()))\nnb=0\nfor i in range(1,len(st)):\n\tm=max(st[0:i])\n\tn=min(st[0:i])\n\tif st[i]>m:\n\t\tnb+=1\n\telif st[i]<n:\n\t\tnb+=1\nprint(nb)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nmax=l[0]\nmin=l[0]\ncount=0\nfor i in range(1,n):\n    if l[i]>max:\n        max=l[i]\n        count=count+1\n    if l[i]<min:\n        min=l[i]\n        count=count+1\nprint(count)\n    "
        },
        {
            "language": 1,
            "solution": "\"\"\"\n// Author : snape_here - Susanta Mukherjee\n     \n\"\"\"\n \nfrom __future__ import division, print_function\n \nimport os,sys\nfrom io import BytesIO, IOBase\n \nif sys.version_info[0] < 3:\n    from __builtin__ import xrange as range\n    from future_builtins import ascii, filter, hex, map, oct, zip\n \n \ndef ii(): return int(input())\ndef si(): return input()\ndef mi(): return map(int,input().split())\ndef li(): return list(mi())\n \n \ndef gcd(x, y):\n    while y:\n        x, y = y, x % y\n    return x\n    \n \ndef read():\n    sys.stdin = open('input.txt', 'r')  \n    sys.stdout = open('output.txt', 'w') \n \n \nimport math\n\nfrom itertools import permutations\n\nmod=100000007 \n\ndef main():\n\n    n=ii()\n    a=li()\n    c=0\n    for i in range(1,n):\n        if a[i]>max(a[0:i]) or a[i]<min(a[0:i]):\n            c+=1 \n    print(c)\n\n\n# region fastio#\n \nBUFSIZE = 8192\n \n \nclass FastIO(IOBase):\n    newlines = 0\n \n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n \n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n \n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n \n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n \n \nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n \n \ndef print(*args, **kwargs):\n    \"\"\"Prints the values to a stream, or to sys.stdout by default.\"\"\"\n    sep, file = kwargs.pop(\"sep\", \" \"), kwargs.pop(\"file\", sys.stdout)\n    at_start = True\n    for x in args:\n        if not at_start:\n            file.write(sep)\n        file.write(str(x))\n        at_start = False\n    file.write(kwargs.pop(\"end\", \"\\n\"))\n    if kwargs.pop(\"flush\", False):\n        file.flush()\n \n \nif sys.version_info[0] < 3:\n    sys.stdin, sys.stdout = FastIO(sys.stdin), FastIO(sys.stdout)\nelse:\n    sys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\n \ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n \n# endregion\n \n \nif __name__ == \"__main__\":\n    #read()\n    main() \n#Comment read()\n"
        },
        {
            "language": 1,
            "solution": "t = input() ; n = map(int, raw_input().split()); m=r=n[0]; c=0\nfor i in range(1,t):\n  if n[i]<m: c+=1 ; m = n[i]\n  elif n[i]>r: c+=1 ; r = n[i]\nprint c"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\nimport static java.lang.Math.*;\n\npublic class Main {\n    public static void main(String [] args){\n        Scanner in = new Scanner(System.in);\n        int[] arr = new int[1004];\n        int n = in.nextInt(), ans = 0;\n\n        for (int i = 1; i <= n; i++)\n            arr[i] = in.nextInt();\n\n        for (int i = 2; i <= n; i++){\n            int m = 10001, M = -1;\n            for (int j = 1; j < i; j++) {\n                M = max(M, arr[j]);\n                m = min(m, arr[j]);\n            }\n            if(arr[i] > M || arr[i] < m) ans++;\n        }\n\n        System.out.print(ans);\n    }\n}"
        },
        {
            "language": 1,
            "solution": "n=int(raw_input())\nl=map(int,raw_input().split())\nk=[]\nctr=0\nif l[0]==max(l) or l[0]==min(l):\n    k.append(l[0])\n\n\nfor i in range(1,n):\n    if l[i]==max(l[:i+1]) or l[i]==min(l[:i+1]):\n       if l[i]not in k:\n           # print i,l[i]\n           k.append(l[i])\n           ctr+=1\nprint ctr"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = list(map(int,input().split()))\n#print(l)\n#list for storing amazing numbers\nt = []\nfor i in range(1,len(l)):\n    c1 = c2 = 0\n    #c1 is for minimum c2 is for maximum\n    for j in range(0,i):\n        if l[j] > l[i]:\n            c1 += 1\n        if l[j] < l[i]:\n            c2 += 1\n    if c1 == i:\n      t.append(l[i])\n    elif c2 == i:\n        t.append(l[i])\nprint(len(t))\n\n    "
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nc=0\n\nmx=l[0]\nmn=l[0]\nfor i in range(len(l)-1):\n    if l[i+1]>mx:\n        mx=l[i+1]           #4664 6496 5814 7010 5762 5736 6944 4850 3698 7242\n        c=c+1\n    if l[i+1]<mn:\n        mn=l[i+1]\n        c=c+1\n        \nprint(c)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  int arr[n];\n  for (int i = 0; i < n; ++i) cin >> arr[i];\n  int maxi = arr[0], mini = arr[0];\n  int count = 0;\n  for (int i = 1; i < n; ++i) {\n    if (arr[i] > maxi) {\n      maxi = arr[i];\n      count++;\n    } else if (arr[i] < mini) {\n      mini = arr[i];\n      count++;\n    }\n  }\n  cout << count;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\ns = tuple(map(int, input().split()))\nmin = s[0]\nmax = s[0]\nans = 0\nfor a in s:\n    if a < min:\n        min = a\n        ans = ans + 1\n    elif a > max:\n        max = a\n        ans = ans + 1\nprint(ans)"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\nimport java.util.Random;\nimport java.util.Collections;\nimport java.util.ArrayList;\nimport java.util.Arrays;\npublic class practice\n{\n\tstatic Scanner input = new Scanner(System.in);\n\tstatic void test_case(int t)\n\t{\n\t\tint n= input.nextInt();\n\t\tint p[] = new int[n];\n\t\tint awesome = 0;\n\t\tint best = 0 ;\n\t\tint worst=9999999;\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\n\t\t\tp[i] = input.nextInt();\n\n\t\t}\n\n\t\tfor(int k=0;k<n-1;k++)\n\t\t{\n\t\t\tbest = Math.max(best,p[k]);\n\t\t\tworst = Math.min(worst,p[k]);\n\n\t\t\tif(p[k+1] > best || p[k+1]<worst)\n\t\t\t{\n\t\t\t\tawesome++;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(awesome);\n\n\t}\n\tpublic static void main(String[] args)\n\t{\n\t\tpractice call = new practice();\n\t\tint Number_of_test_cases = 1;\n\t\tfor(int i =0;i<Number_of_test_cases;i++)\n\t\t{\n\t\t\tcall.test_case(i);\n\t\t}\n\n\t}\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class solution_a {\n    static StreamTokenizer input = null;\n    static BufferedWriter output = null;\n    \n    public static void main(String[] args) {\n        try {\n            input = new StreamTokenizer(System.in);\n            input.nextToken();\n            int n = (int) input.nval;\n            int count = 0;\n            int max, min, x;\n            input.nextToken();\n            max = (int) input.nval; min = max;\n            n--;\n            while (n > 0) {\n                n--;\n                input.nextToken();\n                x = (int) input.nval;\n                if (x > max) { max = x; count++; }\n                if (x < min) { min = x; count++; }\n            }\n            System.out.println(count);\n        } catch (Exception ex) {\n            System.out.println(ex.toString());\n        }\n    }\n\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = list(map(int,input().split(\" \")))\nma=l[0]\nmi=l[0]\ncnt=0\nfor i in range(1,len(l)):\n\tif l[i]>ma:\n\t\tcnt+=1\n\t\tma=l[i]\n\telif l[i]<mi:\n\t\tcnt+=1\n\t\tmi=l[i]\nprint(cnt)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\nmx = mn = a[0]\nans = 0\nfor i in range(1,n):\n    if a[i]>mx:\n        mx=a[i]\n        ans+=1\n    if a[i]<mn:\n        mn=a[i]\n        ans+=1\nprint(ans)"
        },
        {
            "language": 1,
            "solution": "a=input()\nb=[int(x) for x in raw_input().split()]\namazing=0\nfor x in range(1,a):\n    m=0\n    l=0\n    c=[]\n    y=0\n    while y!=x:\n        c.append(b[y])\n        y+=1\n    for q in c:\n        if b[x]<=q:\n            l=1\n        if b[x]>=q:\n            m=1\n    if l==1 and m!=1:\n        amazing+=1\n    elif l!=1 and m==1:\n        amazing+=1\n\nprint amazing\n"
        },
        {
            "language": 3,
            "solution": "a = int(input())\nb = [int(i) for i in input().split()]\nmin = b[0]\nmax = b[0]\nnice = 0\nfor i in range(a-1):\n    if b[i+1] > max:\n        max = b[i+1]\n        nice+=1\n    elif b[i+1] < min:\n        min = b[i+1]\n        nice+=1\nprint(nice)"
        },
        {
            "language": 3,
            "solution": "contestNum = input()\nperformance = [int(x) for x in input().split(' ')]\nmaxNum = performance[0]\nminNum = performance[0]\namazing = 0\nfor x in performance:\n    if x > maxNum:\n        maxNum = x\n        amazing += 1\n    elif x < minNum:\n        minNum = x\n        amazing += 1\nprint(amazing)"
        },
        {
            "language": 4,
            "solution": "/* package codechef; // don't place package name! */\n\nimport java.util.*;\nimport java.lang.*;\nimport java.io.*;\n\n/* Name of the class has to be \"Main\" only if the class is public. */\npublic class Codechef\n{\n    public static class FastIO\n\t{\n\t\tBufferedReader br;\n\t\tBufferedWriter bw, be;\n\t\tStringTokenizer st;\n\n\t\tpublic FastIO()\n\t\t{\n\t\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t\t\tbw = new BufferedWriter(new OutputStreamWriter(System.out));\n\t\t\tbe = new BufferedWriter(new OutputStreamWriter(System.err));\n\t\t\tst = new StringTokenizer(\"\");\n\t\t}\n\n\t\tprivate void read() throws IOException\n\t\t{\n\t\t\tst = new StringTokenizer(br.readLine());\n\t\t}\n\n\t\tpublic String ns() throws IOException\n\t\t{\n\t\t\twhile(!st.hasMoreTokens())\n\t\t\t\tread();\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tpublic int ni() throws IOException\n\t\t{\n\t\t\treturn Integer.parseInt(ns());\n\t\t}\n\n\t\tpublic long nl() throws IOException\n\t\t{\n\t\t\treturn Long.parseLong(ns());\n\t\t}\n\n\t\tpublic float nf() throws IOException\n\t\t{\n\t\t\treturn Float.parseFloat(ns());\n\t\t}\n\n\t\tpublic double nd() throws IOException\n\t\t{\n\t\t\treturn Double.parseDouble(ns());\n\t\t}\n\n\t\tpublic char nc() throws IOException\n\t\t{\n\t\t\treturn ns().charAt(0);\n\t\t}\n\n\t\tpublic int[] nia(int n) throws IOException\n\t\t{\n\t\t\tint[] a = new int[n];\n\t\t\tfor(int i = 0; i < n; i++)\n\t\t\t\ta[i] = ni();\n\n\t\t\treturn a;\n\t\t}\n\n\t\tpublic long[] nla(int n) throws IOException\n\t\t{\n\t\t\tlong[] a = new long[n];\n\t\t\tfor(int i = 0; i < n; i++)\n\t\t\t\ta[i] = nl();\n\n\t\t\treturn a;\n\t\t}\n\n\t\tpublic void out(String s) throws IOException\n\t\t{\n\t\t\tbw.write(s);\n\t\t}\n\n\t\tpublic void flush() throws IOException\n\t\t{\n\t\t\tbw.flush();\n\t\t\tbe.flush();\n\t\t}\n\n\t\tpublic void err(String s) throws IOException\n\t\t{\n\t\t\tbe.write(s);\n\t\t}\n\t}\n\t static boolean isPrime(int n)\n    {\n     // Check if number is less than\n       // equal to 1\n        if (n <= 1)\n            return false;\n        // Check if number is 2\n        else if (n == 2)\n            return true;\n        // Check if n is a multiple of 2\n        else if (n % 2 == 0)\n            return false;\n        // If not, then just check the odds\n        for (int i = 3; i <= Math.sqrt(n); i += 2) \n        {\n            if (n % i == 0)\n                return false;\n        }\n        return true;\n    }\n     static int gcd(int a, int b)\n    {\n        if (a == 0)\n            return b; \n        return gcd(b % a, a); \n    }\n     \n    // method to return LCM of two numbers\n    static int lcm(int a, int b)\n    {\n        return (a / gcd(a, b)) * b;\n    }\n    \n    static int smallestDivisor(int n)  \n{  \n    // if divisible by 2  \n    if (n % 2 == 0)  \n        return 2;  \n  \n    // iterate from 3 to sqrt(n)  \n    for (int i = 3; i * i <= n; i += 2) {  \n        if (n % i == 0)  \n            return i;  \n    }  \n  \n    return n;  \n}  \n\n\tstatic FastIO f;\n\t\n\tpublic static void main(String args[]) throws IOException\n\t{  int j=0;\n\t\tf = new FastIO();\nint i=0;\n\t\tint t;\n\t\tint c=0;\n\t\tt = f.ni();int a[]=new int[t];\n\t\tfor(i=0;i<t;i++) a[i]=f.ni();\n\tfor(i=0;i<t;i++)\n\t{ j=0;\n\t    if(a[i]>a[0]){\n\t       \n\t        while(j<i) {j++; if(a[i]<=a[j]) break;}\n\t        if(i==j) c++;\n\t    }\n\t    else if(a[i]<a[j])\n\t    {\n\t          while(j<i) {j++; if(a[i]>=a[j]) break;}\n\t        if(i==j) c++;\n\t    }\n\t}\n   f.out(c+\"\");\n\t\tf.flush();\n\t}\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int,input().split()))\n\np = -10 ** 10\nm = 10 ** 10\nans = -2\n\nfor val in a:\n  if val < m:\n    ans += 1\n    m = val\n  if val > p:\n    ans += 1\n    p = val\nprint(max(ans, 0))\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\n\nl=list(map(int,input().split()))\n\nworst=l[0]\nbest=l[0]\ncount=0\nfor i in l:\n    if worst>i:\n        count+=1\n        worst=i\n    if best<i:\n        count+=1\n        best=i\n\nprint(count)"
        },
        {
            "language": 3,
            "solution": "if __name__== \"__main__\":\n    T=int(input())\n    lst=input()\n    lst=lst.split(\" \")\n    maxm=int(lst[0])\n    minm=int(lst[0])\n    ans=0\n    for i in lst:\n        i=int(i)\n        if maxm<i:\n            ans=ans+1\n            maxm=i\n        if minm>i:\n            ans=ans+1\n            \n            minm=i\n    print(ans)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nc=0\nmaxx,minn=a[0],a[0]\nfor i in range (0,n):\n    if(a[i]>maxx):\n        maxx=a[i]\n        c=c+1\n    if(a[i]<minn):\n        minn=a[i]\n        c=c+1\nprint(c)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = list(map(int, input().split()))\nmin = l[0]\ncount = 0\nmax = l[0]\nfor i in l:\n    if i > max:\n        max = i\n        count = count + 1\n    elif i<min:\n        min = i\n        count = count + 1\nprint(count)"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.Scanner;\n\n/**\n *\n * @author informatica\n */\npublic class code2 {\n    \n    public static void main(String[] args) {\n        Scanner teclado;\n\n        int n, points,menor=10000,mayor=0,ama=0,contmenos=0,contmas=0;\n\n        teclado = new Scanner(System.in);\n\n        n = teclado.nextInt();\n        \n        int[] torneos = new  int[n];\n        \n        for (int i = 0; i < n; i++) {\n           \n            points = teclado.nextInt();\n            \n            torneos[i] = points;\n        }\n        \n        for (int i = 1; i < torneos.length; i++) {\n\n            for (int j = 0; j < i; j++) {\n             \n                \n                if (torneos[i]< torneos[j]) {\n                    contmenos ++;\n\n                }\n                if (torneos[i] > torneos[j]) {\n                    contmas ++;\n            \n                }\n                \n            }\n            \n            if (contmas == i || contmenos == i ) {\n                ama++;\n            }\n            \n            contmas=0;\n            contmenos=0;\n            \n        }\n        System.out.println(ama);\n        \n    }\n    \n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nm=l[0]\nM=l[0]\nans=0\nfor i in range(n):\n    if l[i]<m:\n        m=l[i]\n        ans+=1\n    elif l[i]>M:\n        M=l[i]\n        ans+=1\nprint(ans)"
        },
        {
            "language": 1,
            "solution": "n = input()\nscores = map(int,raw_input().split())\nmin_score = scores[0]\nmax_score = scores[0]\ncount = 0\nfor i in scores:\n    if i<min_score:\n        count += 1\n        min_score = i\n    elif i > max_score:\n        count += 1\n        max_score = i\n        \nprint count"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nscores = list(map(int, input().split()))\ncurrMax = currMin = scores[0]\namazing = 0\nfor i in scores:\n    if i > currMax:\n        amazing += 1\n        currMax = i\n    if i < currMin:\n        amazing += 1\n        currMin = i\n        \nprint (amazing)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nif n==1:\n    print(0)\nelse:\n    max=l[0]\n    min=l[0]\n    c=0\n    for i in range(1,n):\n        if l[i]<min:\n            c+=1\n            min=l[i]\n        if l[i]>max:\n            c+=1\n            max=l[i]\n    print(c)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nm = list(map(int, input().split()))\na = m[0]\nb = m[0]\ns = 0\nfor i in range(1, len(m)):\n    if(m[i] > a):\n        s+=1\n        a = m[i]\n    if(m[i] < b):\n        s+=1\n        b = m[i]\nprint(s)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nlis = list(map(int,input().split()))\ncount = 0\nfor i in range(1,n):\n    j = i - 1\n    while lis[i] > lis[j] and j >= 0:\n        j -= 1\n    if j == -1:\n        count += 1\n        continue\n    j = i - 1        \n    while lis[i] < lis[j] and j >= 0:\n        j -= 1\n    if j == -1:\n        count += 1\n        continue\n\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[int(w) for w in input().split()]\nb=[a[0]]\nAns=0\nfor i in range(len(a)):\n    if a[i]>max(b) or a[i]<min(b): Ans+=1\n    b.append(a[i])\nprint(Ans)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\npoint = [int(x) for x in input().split()]\ncount =0\nif n == 1:\n    count =0\nelse:\n    a0 = point[0]\n    a1 = point[1]\n    amax = max(a0, a1)\n    amin = min(a0, a1)\n    if a0 == a1:\n        count =0\n    else:\n        count =1\n    for i in range(2, n):\n        if point[i] > amax:\n            count += 1\n            amax = point[i]\n        elif point[i]< amin:\n            count +=1\n            amin = point[i]\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nq=[l[0]]\nnum=0\nfor i in range(1,n):\n    if min(q)<=l[i]<=max(q):\n        q.append(l[i])\n    else:\n        num+=1\n        q.append(l[i])\nprint(num)\n"
        },
        {
            "language": 3,
            "solution": "import math\nn = int(input())\na = list(map(int,input().split()))\nmaxN = a[0]\nres = 0\nminN = a[0]\nfor i in range(1,len(a)):\n    if (a[i] > maxN or a[i] < minN):\n        res += 1\n        maxN = max(maxN, a[i])\n        minN = min(minN, a[i])\nprint(res)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\n\npts = list(map(int, input().split()))\n\nmin_pts = pts[0]\nmax_pts = pts[0]\ncount = 0\n\nfor p in pts[1:]:\n    if min_pts > p:\n        min_pts = p\n        count += 1\n    if max_pts < p:\n        max_pts = p\n        count += 1\n\nprint(count)\n"
        },
        {
            "language": 3,
            "solution": "import re\nn=int(input())\nr=input()\ns=re.split(r'\\s+',r)\nfor i in range(n):\n    s[i]=int(s[i])\nmi=s[0]\nma=s[0]\na=0\nfor i in range(n):\n    if s[i]<mi:\n        mi=s[i]\n        a+=1\n    elif s[i]>ma:\n        ma=s[i]\n        a+=1\nprint(a)\n\n\n\n\n\n\n\n\n\n"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\narr = map(int, raw_input().split())\nct = 0\nfor i in xrange(n):\n\tif i >= 1:\n\t\tmaxx = max(arr[:i])\n\t\tminn = min(arr[:i])\n\t\tif arr[i] > maxx or arr[i] < minn: ct += 1\nprint ct\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\nsum = 0\nfor i in range(1, n):\n    if max(a[:i]) < a[i] or min(a[:i]) > a[i]:\n        sum += 1\nprint(sum)"
        },
        {
            "language": 3,
            "solution": "total = int(input())\npoints = [x for x in map(int,input().split())]\nhigh = points[0]\nlow = points[0]\namazing = 0\nfor i in points:\n\tif i < low:\n\t\tamazing += 1\n\t\tlow = i\n\telif i > high:\n\t\tamazing += 1\n\t\thigh = i\nprint(amazing)\n"
        },
        {
            "language": 3,
            "solution": "contests =int(input())\nscores = input().split()\nlow = int(scores[0])\nhigh = int(scores[0])\namazing = 0\nfor score in scores:\n    if int(score) > high:\n        high=int(score)\n        amazing+=1\n    if int(score)<low:\n        low = int(score)\n        amazing+=1\nprint(amazing)"
        },
        {
            "language": 3,
            "solution": "def scores():\n  global n, s\n  n = int(input())\n  s = list(map(int, input().split(\" \")))\n  small = large = s[0]\n  cA = 0\n  for i in s[1:]:\n    if (i < small):\n      small = i\n      cA += 1\n    \n    if (i > large):\n      large = i\n      cA += 1\n\n  return cA\n\nprint(scores())"
        },
        {
            "language": 1,
            "solution": "raw_input()\ns = map(int, raw_input().split())\nmini = s[0]\nmaxi = s[0]\ntotal = 0\nfor i in s[1::]:\n    if i < mini:\n        mini = i\n        total += 1\n    elif i > maxi:\n        maxi = i\n        total += 1\n    else:\n        pass\nprint total\n"
        },
        {
            "language": 3,
            "solution": "'''input\n10\n4664 6496 5814 7010 5762 5736 6944 4850 3698 7242\n'''\nn = int(input())\ns = list(map(int, input().split()))\nc = 0\nfor x in range(1,n):\n\tif s[x] > max(s[:x]):\n\t\tc += 1\n\telif s[x] < min(s[:x]):\n\t\tc += 1\n\nprint(c)"
        },
        {
            "language": 3,
            "solution": "if 1:\n    n=int(input())\n    a=list(map(int,input().split()))\n    minv,maxv,mincount,maxcount=a[0],a[0],0,0\n    for elem in a:\n        if elem<minv:\n            minv=min(elem,minv)\n            mincount+=1\n        elif elem>maxv:\n            maxv=max(maxv,elem)\n            maxcount+=1\n    \n    print(mincount+maxcount)\n        \n        \n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nstr = input()\nls = [int(u) for u in str.split()]\n#ls.sort()\nans = 0\nmax = ls[0]\nmin = ls[0]\ncount = 0\nfor u in ls:\n    if u < min:\n        min = u\n        count += 1\n    elif u > max:\n        max = u\n        count += 1\nprint(count)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  int n;\n  cin >> n;\n  vector<int> scores;\n  for (int i = 0; i < n; i++) {\n    int temp;\n    cin >> temp;\n    scores.push_back(temp);\n  }\n  int max = scores[0];\n  int min = scores[0];\n  int count = 0;\n  for (int s : scores) {\n    if (s > max) {\n      max = s;\n      count++;\n    }\n    if (s < min) {\n      min = s;\n      count++;\n    }\n  }\n  cout << count << \"\\n\";\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=[int(i) for i in input().split()]\ncount=0\nfor i in range(1,n):\n    if l[i]>max(l[:i]) or l[i]<min(l[:i]):\n        count+=1\nprint(count)\n    "
        },
        {
            "language": 3,
            "solution": "num = int(input())\ns = str(input()).split()\n\nminus = int(s[0])\nmaxis = int(s[0])\na = 0\nfor i in range(num):\n    if(int(s[i]) > maxis):\n        a+=1\n        maxis = int(s[i])\n    elif(int(s[i]) < minus):\n        a+=1\n        minus = int(s[i])\n\nprint(a)\n\n"
        },
        {
            "language": 3,
            "solution": "a=int(input())\ns= list(map(int,(input().split())))\ncount=0\nmin=s[0]\nmax=s[0]\nfor i in range(1,a):\n    if(s[i]>max):\n        count=count+1\n        max=s[i]\n    elif(s[i]<min):\n        count=count+1\n        min=s[i]\nprint(count)\n    \n    \n"
        },
        {
            "language": 3,
            "solution": "#!/usr/bin/env python3\nfrom sys import stdin, stdout\nimport re\n\n\ndef solve():\n    n = int(stdin.readline().strip())\n    li = list(map(int,stdin.readline().split()))\n\n    ans = 0\n    lo = li[0]\n    hi = li[0]\n    for i in range(1,n):\n        if li[i]<lo:\n            lo = li[i]\n            ans += 1\n        elif li[i]>hi:\n            hi = li[i]\n            ans += 1\n    print(ans)\n\n\nLOCAL_TEST = not __debug__\nif LOCAL_TEST:\n    infile = __file__.split('.')[0] + '-test.in'\n    stdin = open(infile, 'r')\n\ntcs = (int(stdin.readline().strip()) if LOCAL_TEST else 1)\nt = 1\nwhile t <= tcs:\n    solve()\n    t += 1"
        },
        {
            "language": 3,
            "solution": "n = int(input().strip())\nll = list(map(int,input().split()))\nkmin = ll[0]\nkmax = ll[0]\njav = 0\nfor i in range(1,n):\n    if kmax < ll[i]:\n        kmax = ll[i]\n        jav += 1\n    elif kmin > ll[i]:\n        jav += 1\n        kmin = ll[i]\nprint(jav)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = [int(x) for x in input().split()]\ncount = 0\n#if a[1] < a[0]  or a[1] > a[0]:\n #   count += 1\nfor i in range(1, len(a)):\n    if a[i] > max(a[:i]) or a[i] < min(a[:i]):\n        count += 1\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nmi=l[0]\nma=l[0]\nc=0\nfor i in range(1,n):\n    if(l[i]>ma):\n        ma=l[i]\n        c+=1\n    if(l[i]<mi):\n        mi=l[i]\n        c+=1\nprint(c)        \n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nscores = [ i for i in map(int,input().split())]\nans = 0\nfor i in range(1,n):\n    if (scores[i] == max(scores[:i+1]) and scores[:i+1].count(max(scores[:i+1])) == 1) or (scores[i] == min(scores[:i+1]) and scores[:i+1].count(min(scores[:i+1])) == 1):\n        ans += 1\nprint(ans)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\n\nper = input().split()\n\nperi = [int(x) for x in per]\n\nscore_p = 0\nscore_n = 0\n\namazing = set()\n\nfor i in range(len(peri)):\n    score_p = 0\n    score_n = 0\n    for j in range(i):\n        if peri[i] > peri[j]:\n            score_p += 1\n        if peri[i] < peri[j]:\n            score_n += 1\n    if score_p == i and i != 0:\n        amazing.add(peri[i])\n    if score_n == i and i != 0:\n        amazing.add(peri[i])\n\n\nprint(len(amazing))\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  int t;\n  cin >> t;\n  int a[t];\n  for (int i = 0; i < t; i++) {\n    cin >> a[i];\n  }\n  int minim = a[0];\n  int maxim = a[0];\n  int count = 0;\n  for (int i = 0; i < t; i++) {\n    if (i == 0) {\n      continue;\n    }\n    if (a[i] > maxim) {\n      maxim = a[i];\n      count++;\n    } else if (a[i] < minim) {\n      minim = a[i];\n      count++;\n    }\n  }\n  cout << count << \"\\n\";\n}\n"
        },
        {
            "language": 3,
            "solution": "def stringtonum(string):\n    i=0\n    number=[]\n    array1=[]\n    array=[]\n    string= string+\" \"\n    while i<len(string):\n        if string[i]!=\" \":\n            number.append(string[i])\n        else:\n            array.append(number)\n            number=[]\n        i=i+1\n    j=0\n    while j<len(array):\n        k=0\n        s=\"\"\n        while k<len(array[j]):\n            s=s+array[j][k]\n            k=k+1\n        s=int(s)\n        array1.append(s)\n        j=j+1\n    l=0\n    return(array1)\nn=int(input())\ni=1\ns=input()\nresult=stringtonum(s)\nMin=result[0]\nMax=result[0]\na=0\nwhile i<n:\n    if result[i]>Max:\n        a=a+1\n        Max=result[i]\n    elif result[i]<Min:\n        a=a+1\n        Min=result[i]\n    i=i+1\nprint(a)"
        },
        {
            "language": 3,
            "solution": "#code\ndef score(lst,n):\n    count=0\n    for i in range(1,n):\n        if lst[i]<lst[i-1]:\n            flag=True\n            for j in range(i-1,-1,-1):\n                if lst[i]>=lst[j]:\n                    flag=False\n                    break\n            if flag==True:\n                count+=1\n        elif lst[i]>lst[i-1]:\n            flag=True\n            for j in range(i-1,-1,-1):\n                if lst[i]<=lst[j]:\n                    flag=False\n                    break\n            if flag==True:\n                count+=1\n    return count\nn=int(input())\nlst=list(map(int,input().split())) \nprint(score(lst,n))\n        "
        },
        {
            "language": 3,
            "solution": "\"\"\"\n\u2588\u2588\u2557 \u2588\u2588\u2588\u2588\u2588\u2588\u2557 \u2588\u2588\u2557    \u2588\u2588\u2588\u2588\u2588\u2588\u2557  \u2588\u2588\u2588\u2588\u2588\u2588\u2557  \u2588\u2588\u2557 \u2588\u2588\u2588\u2588\u2588\u2557\n\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2551    \u255a\u2550\u2550\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2554\u2550\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\n\u2588\u2588\u2551\u2588\u2588\u2551   \u2588\u2588\u2551\u2588\u2588\u2551     \u2588\u2588\u2588\u2588\u2588\u2554\u255d\u2588\u2588\u2551\u2588\u2588\u2554\u2588\u2588\u2551\u255a\u2588\u2588\u2551\u255a\u2588\u2588\u2588\u2588\u2588\u2588\u2551\n\u2588\u2588\u2551\u2588\u2588\u2551   \u2588\u2588\u2551\u2588\u2588\u2551    \u2588\u2588\u2554\u2550\u2550\u2550\u255d \u2588\u2588\u2588\u2588\u2554\u255d\u2588\u2588\u2551 \u2588\u2588\u2551 \u255a\u2550\u2550\u2550\u2588\u2588\u2551\n\u2588\u2588\u2551\u255a\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d\u2588\u2588\u2551    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u255a\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d \u2588\u2588\u2551 \u2588\u2588\u2588\u2588\u2588\u2554\u255d\n\u255a\u2550\u255d \u255a\u2550\u2550\u2550\u2550\u2550\u255d \u255a\u2550\u255d    \u255a\u2550\u2550\u2550\u2550\u2550\u2550\u255d \u255a\u2550\u2550\u2550\u2550\u2550\u255d  \u255a\u2550\u255d \u255a\u2550\u2550\u2550\u2550\u255d\n\"\"\"                                        \n__author__ = \"Dilshod\"\nn = int(input())\nmn = float(\"inf\")\nmx = -float(\"inf\")\nm = list(map(int, input().split()))\ncnt = 0\nfor i in range(n):\n\tif i == 0:\n\t\tmn = m[i]\n\t\tmx = m[i]\n\telse:\n\t\tif m[i] < mn:\n\t\t\tcnt += 1\n\t\t\tmn = m[i]\n\t\tif m[i] > mx:\n\t\t\tcnt += 1\n\t\t\tmx = m[i]\nprint(cnt)\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class ILoveUsername\n{\n  public static void main(String[]args)\n  {\n    Scanner sc = new Scanner(System.in);\n    int n = sc.nextInt();\n    int [] arr = new int[n];  \n    for(int i = 0; i < n; i++)\n      arr[i] = sc.nextInt();\n    int res = 0;\n    for(int i = 1; i < n; i++)\n    {\n      boolean greater = true;\n      boolean smaller = true;\n      for(int j = i-1; j >= 0; j--)\n      {\n        if(arr[i] <= arr[j])\n          greater = false;\n        if(arr[i] >= arr[j])\n          smaller = false;\n      }\n      if(greater || smaller)\n        res++;\n    }\n    System.out.println(res);\n  }\n}"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nA = input().split()\npoint = []\nfor i in range (n):\n    point.append(int(A[i]))\n\nC = 0\nfor i in range (2,n + 1):\n    forcet = point[0:i - 1]\n    if point[i - 1] > max(forcet):\n        C = C + 1\n    elif point[i - 1] < min(forcet):\n        C = C + 1\n\nprint(C)\n        \n    "
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nc=0\nfor i in range(1,n):\n    if (a[i]>max(a[0:i])) or (a[i] < min(a[0:i])):\n        c=c+1\n        \nprint(c)\n"
        },
        {
            "language": 3,
            "solution": "# Problem 155 A - I love username\n\n# input\nn = int(input())\nnums = list(map(int, input().split()))\n\n# initialization\ntmp_nums = [nums.pop(0)]\ncount = 0\n\n# count\nfor num in nums:\n    is_less = True\n    is_more = True\n\n    # less check\n    for t in tmp_nums:\n        if t<=num:\n            is_less = False\n\n    # more check\n    for t in tmp_nums:\n        if t>=num:\n            is_more = False\n\n    # check\n    if is_less or is_more:\n        count += 1\n\n    # next step\n    tmp_nums.append(num)\n\n# output\nprint(count)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nscores=[int(x) for x in input().split()]\nsma=lar=scores[0]\namaz=0\nfor i in scores[1:]:\n    if(i<sma):\n        sma=i\n        amaz=amaz+1\n    if(i>lar):\n        lar=i\n        amaz=amaz+1\nprint(amaz)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\ns=input()\nls=[int(x) for x in s.split()]\nma=ls[0]\nmi=ls[0]\nc=0\nfor i in range(1,n):\n    if ls[i]<mi:\n        mi=ls[i]\n        c+=1\n    if ls[i]>ma:\n        ma=ls[i]\n        c+=1\n\nprint(c)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\npoints = input().split()\nmax_points = int(points[0])\nmin_points = int(points[0])\ncount = 0\n\nfor i in range(1, n):\n    compare = int(points[i])\n    if compare > max_points:\n        max_points = compare\n        count += 1\n    elif compare < min_points:\n        min_points = compare\n        count += 1\n\nprint(count)\n"
        },
        {
            "language": 1,
            "solution": "n=input()\nv=map(int,raw_input().split())\nlo=hi=v[0]\na=0\nfor x in v[1:]:\n    if x>hi or x<lo:\n        a+=1\n    lo=min(lo,x)\n    hi=max(hi,x)\nprint a\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\ndiv = 0\n\ns = input().split()\ns = [int (i) for i in s]\n\nmax = s[0]\nmin = s[0]\nfor i in range(len(s)):\n    if s[i] > max:\n        max = s[i]\n        div += 1\n    elif s[i] < min:\n        min = s[i]\n        div += 1\nprint(div)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nans = 0\narr = []\ncnt = 0\nfor i in input().split():\n    if cnt == 0:\n        arr.append(int(i))\n    else:\n        if int(i) > max(arr) or int(i) < min(arr):\n            ans += 1\n        arr.append(int(i))\n    cnt += 1\nprint(ans)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int i, min, max, t = 0, n, a;\n  cin >> n >> a;\n  min = a, max = a;\n  for (i = 1; i < n; i++) {\n    cin >> a;\n    if (a > max) {\n      max = a;\n      t++;\n    }\n    if (a < min) {\n      min = a;\n      t++;\n    }\n  }\n  cout << t << endl;\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "\n\ndef main():\n\tn = input()\n\txs = [int(i) for i in raw_input().split()]\n\twoooooooonder = 0\n\tmmax, mmin = xs[0],xs[0]\n\tfor i in xs[1:]:\n\t\tif (i<mmin):\n\t\t\twoooooooonder+=1\n\t\t\tmmin = i\n\t\tif (i>mmax):\n\t\t\twoooooooonder+=1\n\t\t\tmmax = i\n\tprint woooooooonder \n\n\n\nmain()"
        },
        {
            "language": 4,
            "solution": "import java.util.*; \npublic class Codeforces \n{\npublic static void main(String []args) \n{\nScanner sc = new Scanner(System.in); \nint n = sc.nextInt(); \nint count=0;\nint arr[]= new int [n];\nfor(int i=0;i<n;i++) \n{\n    arr[i]= sc.nextInt();\n}\nint min=arr[0],max=arr[0];     \n\nfor(int i=1;i<n;i++) \n{\n   if(arr[i]<min) \n   {\n       min=arr[i]; \n       count++; \n       \n   } \n    if(arr[i]>max) \n   {\n       max=arr[i]; \n       count++; \n     \n   }\n    \n} \nSystem.out.print(count);\n}\n    \n}"
        },
        {
            "language": 3,
            "solution": "import sys\nimport math\nimport bisect\n\ndef main():\n    n = int(input())\n    A = list(map(int, input().split()))\n    ans = 0\n    for i in range(1, n):\n        if A[i] > max(A[0:i]):\n            ans += 1\n        elif A[i] < min(A[0:i]):\n            ans += 1\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class Main {\n  public static void main(String[] args) {\n    Scanner in = new Scanner(System.in);\n    int n = in.nextInt();\n    int max = 0, min = 0, ans = 0;\n\n    max = min = in.nextInt();\n\n    for (int i = 1; i < n; i++) {\n      int p = in.nextInt();\n\n      if (p == min || p == max)\n        continue;\n\n      min = Math.min(min, p);\n      max = Math.max(max, p);\n\n      if (max == p || min == p)\n        ans++;\n    }\n\n    System.out.format(\"%d\\n\", ans);\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = input().split()\nfor i in range(n):\n    a[i]= int(a[i])\nif n <= 1:\n    print(0)\nelse:\n    count = 0\n    for i in range(n):\n        countd = 0\n        countx = 0\n        for j in range(i):\n            if a[i]>a[j]:\n                countd += 1\n            elif a[i]<a[j]:\n                countx += 1\n        if countd == i or countx == i:\n            count += 1\n    print(count-1)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = [int(x) for x in input().split()]\nif len(a)==1: amazing = 0\nelse:\n    amazing = 1\n    if a[1]<a[0]: \n        mini = a[1]\n        maxi = a[0]\n    elif a[1]==a[0]:\n        mini = a[0]\n        maxi = a[1]\n        amazing-=1\n    else:\n        mini = a[0]\n        maxi = a[1]\nfor i in a[2:]:\n    if i>maxi:\n        maxi = i\n        amazing+=1\n    elif i<mini:\n        mini = i\n        amazing+=1\nprint(amazing)"
        },
        {
            "language": 3,
            "solution": "import sys\n\nn = int(sys.stdin.readline().split()[0])\n\nscores = [int(i) for i in sys.stdin.readline().split()]\n\namazing = 0\ni = 1\n\nwhile i < len(scores):\n    j = i - 1\n    less_count = 0\n    more_count = 0\n\n    while j >= 0:\n        if scores[i] > scores[j]:\n            less_count += 1\n        if scores[i] < scores[j]:\n            more_count += 1\n        j -= 1\n    if less_count == i or more_count == i:\n        amazing += 1\n    i += 1\n\nprint(amazing)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nresults = [int(x) for x in input().split()]\nr_min, r_max = results[0], results[0]\ncounter = 0\nfor i in range(1, n):\n    if r_min > results[i]:\n        counter += 1\n        r_min = results[i]\n    elif r_max < results[i]:\n        counter += 1\n        r_max = results[i]\n\nprint(counter)"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.StringTokenizer;\n\npublic class A155 {\n\n\tpublic static void main(String[] args) {\n\t\tsc sc = new sc();\n\t\tint a =sc.nextInt();\n\t\tint max=sc.nextInt();\n\t\tint min=max;\n\t\tint ans=0;\n\t\tfor (int i = 0; i < a-1; i++) {\n\t\tint curr =sc.nextInt();\n\t\tif(curr>max)\n\t\t{\n\t\t\tans++;\n\t\t\tmax=curr;\n\t\t}\n\t\telse if(curr<min)\n\t\t{\n\t\t\tans++;\n\t\t\tmin=curr;\n\t\t}\n\t\t\n\t\t}\n\t\tSystem.out.println(ans);\n\t}\n\n}\nclass sc {\n\tBufferedReader br;\n\tStringTokenizer st;\n\n\tpublic sc() {\n\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t}\n\n\tString next() {\n\t\twhile (st == null || !st.hasMoreElements()) {\n\t\t\ttry {\n\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t} catch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn st.nextToken();\n\t}\n\n\tint nextInt() {\n\t\treturn Integer.parseInt(next());\n\t}\n\n\tlong nextLong() {\n\t\treturn Long.parseLong(next());\n\t}\n\n\tdouble nextDouble() {\n\t\treturn Double.parseDouble(next());\n\t}\n\n\tString nextLine() {\n\t\tString str = \"\";\n\t\ttry {\n\t\t\tstr = br.readLine();\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\treturn str;\n\t}\n}\n\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = [int(x) for x in input().split(' ')]\ncnt = 0\nfor i in range(len(a)):\n  if i != 0:\n    sub = a[0:i]\n    ma = max(sub)\n    mi = min(sub)\n    if a[i] < mi or a[i] > ma:\n      cnt += 1\nprint(cnt)\n"
        },
        {
            "language": 3,
            "solution": "def ismin(l,i):\n    k=0\n    while k<=i:\n        if l[i]>=l[k] and i!=k:\n            return 0\n        k+=1\n    return 1\ndef ismax(l,i):\n    k=0\n    while k<=i:\n        if l[i]<=l[k] and i!=k:\n            return 0\n        k+=1\n    return 1    \nn=int(input())\nl=[int(x) for x in input().split()]\ni=1\ncnt=0\nwhile i<n:\n    if ismin(l,i) or ismax(l,i):\n        cnt+=1\n    i+=1\nprint(cnt)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\narr=list(map(int,input().split()))\ntemp=[]\nans=0\nfor i in range(n):\n    if i==0:\n        temp.append(arr[i])\n    else:\n        if max(temp)<arr[i]:\n            ans+=1\n        if min(temp)>arr[i]:\n            ans+=1\n        temp.append(arr[i])\nprint(ans)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\npoints=[int(x) for x in input().split()]\namazing=0\nmaxpoint=points[0]\nminpoint=points[0]\nfor i in range(n):\n    if points[i]<minpoint:\n        amazing+=1\n        minpoint=points[i]\n    elif points[i]>maxpoint:\n        amazing+=1\n        maxpoint=points[i]\nprint(amazing)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\ns=[int(x) for x in input().split()]\nz=0\nc=0\nMax=0\nMini=0\nfor i in s:\n    if z==0:\n        Max=i\n        Mini=i\n        z+=1\n    else:\n        if i>Max:\n            Max=i\n            c+=1\n        if i<Mini:\n            Mini=i\n            c+=1\nprint(c)\n            \n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nlist=[int(i) for i in input().split()]\nlist1=[]\nlist1.append(list[0])\nlist.pop(0)\nsum=0\nfor i in list:\n    if i<min(list1) or i>max(list1):\n        sum=sum+1\n    else:\n        pass\n    list1.append(i)\nprint(sum)"
        },
        {
            "language": 3,
            "solution": "noOfCases = int(input())\nlistOfNum = [int(x) for x in input().split()]\n\nbest = listOfNum[0]\ncountB = 0\nworst = listOfNum[0]\ncountW = 0\n\nfor i in range(1, noOfCases):\n    if listOfNum[i] > best:\n        best = listOfNum[i]\n        countB += 1\n    if listOfNum[i] < worst:\n        worst = listOfNum[i]\n        countW += 1\nprint(countB+countW)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=[int(i) for i in input().split()]\nif n==1:\n    print(0)\nelif n==2 and l[0]==l[1]:\n    print(0)\nelif n==2 and l[0]!=l[1]:\n    print(1)\nelse:\n    a=max(l[0],l[1])\n    b=min(l[0],l[1])\n    if a==b:\n        sum=0\n    else:\n        sum=1\n    for i in range(2,n):\n        if l[i]>a:\n            a=l[i]\n            sum=sum+1\n        elif l[i]<b:\n            b=l[i]\n            sum=sum+1\n        else:\n            continue\n    print(sum)"
        },
        {
            "language": 1,
            "solution": "#author: uniqueinx\n#codeforces: I_love_%username%\nn = int(raw_input())\npoints = map(int,raw_input().split())\ncounter = 0\ngreat = less = points[0]\nfor point in points[1:]:\n\tif point > great:\n\t\tgreat = point\n\t\tcounter += 1\n\tif point < less:\n\t\tcounter += 1\n\t\tless = point\nprint counter"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nk=a[0]\np=a[0]\ncount=0\nfor i in range(1,n):\n  if k<a[i]:\n      count+=1\n      k=a[i]\n  if p>a[i]:\n      count+=1\n      p=a[i]\nprint(count)"
        },
        {
            "language": 1,
            "solution": "I = lambda:map(int,raw_input().split())\nn = int(input())\nl = I()\namaz = 0\nm_n = l[0]\nm_x = l[0]\n\nfor i in range(1,n):\n    if l[i] > m_x:\n        amaz += 1\n        m_x = l[i]\n    elif l[i] < m_n:\n        amaz += 1\n        m_n = l[i]\n    else:\n        continue\nprint amaz"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nif(n==1):\n    print(0)\n    exit()\nscores = [int(n) for n in input().split()]\namazing = 1\nequal=False\nif(scores[1]==scores[0]):\n    equal=True\nif (scores[1] > scores[0]):\n    minscore = scores[0]\n    maxscore = scores[1]\nelse:\n    minscore = scores[1]\n    maxscore = scores[0]\nfor i in range(2, n):\n    if (scores[i] < minscore):\n        minscore = scores[i]\n        amazing += 1\n    if (scores[i] > maxscore):\n        maxscore = scores[i]\n        amazing += 1\nif(equal):\n    print(amazing-1)\nelse:\n    print(amazing)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\npoint=[int(i) for i in input().split()]\nda,xiao=point[0],point[0]\ncishu=0\nfor i in range(1,n):\n    if point[i]>da:\n        da=point[i]\n        cishu += 1\n    if point[i]<xiao:\n        xiao=point[i]\n        cishu += 1\nprint(cishu)\n"
        },
        {
            "language": 3,
            "solution": "a=int(input())\nb=input().split()\ni=1\nj=0\nx=0\ny=0\nr=0\nz=0\nlst=[]\nfor i in range(a):\n    x=0\n    y=0\n    z=0\n    for j in range(i):\n        if(int(b[i])<int(b[j])):\n               x=x+1\n        elif(int(b[i])>int(b[j])):\n               y=y+1\n        elif(int(b[i])==int(b[j])):\n               z=z+1\n    if((x>0 and y==0 and z==0) or (y>0 and z==0 and x==0) or (z>0 and x==0 and z==0)):\n        r=1\n        lst.append(r)\nprint(len(lst))                \n                 "
        },
        {
            "language": 3,
            "solution": "n = int(input())\nm = list(map(int, input().split()))\nresult = []\nmax = m[0]\nmin = m[0]\nfor i in range(1, len(m)):\n    if m[i] > max or m[i] < min:\n        result.append(m[i])\n        if m[i] < min:\n            min = m[i]\n        elif m[i] > max:\n            max = m[i]\n\nprint(len(result))"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst double PI = acos(-1);\nconst double eps = 1e-9;\nconst int inf = 2000000000;\nconst long long infLL = 9000000000000000000;\nint dx[] = {0, 0, +1, -1};\nint dy[] = {+1, -1, 0, 0};\ntemplate <typename first, typename second>\nostream &operator<<(ostream &os, const pair<first, second> &p) {\n  return os << \"(\" << p.first << \", \" << p.second << \")\";\n}\ntemplate <typename T>\nostream &operator<<(ostream &os, const vector<T> &v) {\n  os << \"{\";\n  for (auto it = v.begin(); it != v.end(); ++it) {\n    if (it != v.begin()) os << \", \";\n    os << *it;\n  }\n  return os << \"}\";\n}\ntemplate <typename T>\nostream &operator<<(ostream &os, const set<T> &v) {\n  os << \"[\";\n  for (auto it = v.begin(); it != v.end(); ++it) {\n    if (it != v.begin()) os << \", \";\n    os << *it;\n  }\n  return os << \"]\";\n}\ntemplate <typename T>\nostream &operator<<(ostream &os, const multiset<T> &v) {\n  os << \"[\";\n  for (auto it = v.begin(); it != v.end(); ++it) {\n    if (it != v.begin()) os << \", \";\n    os << *it;\n  }\n  return os << \"]\";\n}\ntemplate <typename first, typename second>\nostream &operator<<(ostream &os, const map<first, second> &v) {\n  os << \"[\";\n  for (auto it = v.begin(); it != v.end(); ++it) {\n    if (it != v.begin()) os << \", \";\n    os << it->first << \" = \" << it->second;\n  }\n  return os << \"]\";\n}\nvoid faltu() { cerr << '\\n'; }\ntemplate <typename T>\nvoid faltu(T a[], int n) {\n  for (int i = 0; i < n; ++i) cerr << a[i] << ' ';\n  cerr << '\\n';\n}\ntemplate <typename T, typename... hello>\nvoid faltu(T arg, const hello &...rest) {\n  cerr << arg << ' ';\n  faltu(rest...);\n}\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  ;\n  int a, count = 0, store = 0;\n  cin >> a;\n  int arr[a];\n  for (int i = 0; i < a; i++) {\n    cin >> arr[i];\n  }\n  int max = arr[0];\n  int min = arr[0];\n  for (int i = 0; i < a; i++) {\n    if (arr[i] > max) {\n      max = arr[i];\n      count++;\n    }\n    if (arr[i] < min) {\n      min = arr[i];\n      count++;\n    }\n  }\n  cout << count;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "a=int(input())\nb=input()\nc=b.split()\nd=[]\nfor i in c:\n    d.append(int(i))\nmin=d[0]\nmax=d[0]\n#print(min,max)\ncount=0\nfor i in d:\n    if i>max:\n        count+=1\n        max=i\n#        print('l')\n    if i<min:\n        count+=1\n        min=i\n#print('s')\nprint(count)\n#print(d)\n    "
        },
        {
            "language": 3,
            "solution": "n = int(input())\npoints = list(map(int,input().split()))\namazing = 0\nmin_for_now = 0\nmax_for_now = 0\n\nfor i in range(n):\n    if i == 0:\n        min_for_now = points[i]\n        max_for_now = points[i]\n    else:\n        if points[i] > max_for_now:\n            amazing +=1\n            max_for_now = points[i]\n        elif points[i] < min_for_now:\n            amazing +=1\n            min_for_now = points[i]\nprint(amazing)\n"
        },
        {
            "language": 3,
            "solution": "N=int(input(\"\"))\nLine2=input(\"\")\narr=list(map(int, Line2.split(' ')))\n\nmax_min=[]\nmax_min.append(arr[0])\ncounter=0\nfor itr in range(1, len(arr)):\n    if arr[itr] > max(max_min):\n        max_min.append(arr[itr])\n        counter+=1\n    if arr[itr]<min(max_min):\n        max_min.append(arr[itr])\n        counter+=1\n\nprint(counter)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, m;\nbool debug = false;\nint k;\nint dx[4] = {0, 1, 0, -1}, dy[4] = {1, 0, -1, 0};\nint main() {\n  int l, r, ans = 0;\n  scanf(\"%d\", &n);\n  for (int(i) = 0; (i) < (int)(n); (i)++) {\n    scanf(\"%d\", &m);\n    if (!i) {\n      l = r = m;\n    } else {\n      if (m > r) {\n        ans++;\n        r = m;\n      } else if (m < l) {\n        ans++;\n        l = m;\n      }\n    }\n  }\n  printf(\"%d\\n\", ans);\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nh=0\na=[int(i) for i in input().split()]\nmin=a[0]\nmax=a[0]\nfor i in range(n):\n    if a[i] < min:\n        min=a[i]\n        h+=1\n    elif a[i] > max:\n        max=a[i]\n        h+=1\nprint(h)\n\n\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "num = int(input())\nn = input()\nl = map(int,n.split())\nmain = list(l)\n\n\nmaxi= main[0]\nmini = main[0]\n\namazing = 0\nfor i in main:\n    if i > maxi:\n        maxi = i\n        amazing += 1\n    elif i < mini:\n        mini = i\n        amazing += 1\nprint(amazing)\n\n    "
        },
        {
            "language": 3,
            "solution": "n = int(input())\narr = list(map(int, input().split()))\nmx= arr[0]\nmn = arr[0]\nc = 0\nfor i in range(1, n):\n    if arr[i] > mx or arr[i] < mn:\n        c += 1\n    mx = max(arr[i], mx)\n    mn = min(arr[i], mn)\nprint(c)"
        },
        {
            "language": 1,
            "solution": "n = input()\np = map(int, raw_input().split())\nprint sum([(p[i] > max(p[:i]) or p[i] < min(p[:i])) for i in range(1, n)])\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = [int(x) for x in input().split()]\ndp = [a[0], a[0]]\ncount = 0\nfor val in a:\n\tif val < dp[0]:\n\t\tdp[0] = val\n\t\tcount += 1\n\tif val > dp[1]:\n\t\tdp[1] = val\n\t\tcount += 1\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\n\nif(n==1):\n    a=int(input())\n    print('0')\n    exit()\n\na=[int(x) for x in input().split()]\nc=0\n\nif(a[0]>a[1]):\n    maxa=a[0]\n    mina=a[1]\n    c+=1\nelif(a[0]<a[1]):\n    maxa=a[1]\n    mina=a[0]\n    c+=1\n\nif(c==0):\n    maxa=a[0]\n    mina=a[1]\n\nfor i in range(2,n):\n    if(a[i]>maxa or a[i]<mina):\n        c+=1\n        if(a[i]>maxa):\n            maxa=a[i]\n        else:\n            mina=a[i]\n\nprint(c)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nline=[int(x) for x in input().split()]\nma=line[0]\nmi=line[0]\nsur=0\nfor i in range(1,n):\n    if(line[i]>ma):\n        ma=line[i]\n        sur+=1\n    elif(line[i]<mi):\n        mi=line[i]\n        sur+=1\n\nprint(sur)\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class BitMask {\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\nScanner sc=new Scanner(System.in);\nint n=sc.nextInt();\n\nint a[]=new int[n];\nint ans=0;\nfor(int i=0; i<n; i++) {\n\ta[i]=sc.nextInt();\n}\nint max=a[0],min=a[0];\nfor(int i=1; i<n; i++) {\n\tif(a[i]>max) {\n\t\tans++;\n\t\tmax=a[i];\n\t}\n\tif(a[i]<min) {\n\t\tmin=a[i];\n\t\tans++;\n\t}\n}\n\nSystem.out.println(ans);\n\t}\n\n}"
        },
        {
            "language": 3,
            "solution": "x = int(input())\ny = list(map(int, input().split()))\nmin = y[0]\nmax = y[0]\nwin = 0\n\nfor c in y:\n    if c > max:\n        win = win +1\n        max = c\n    if c < min:\n        win = win +1\n        min = c\n\nprint(win)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nL=[int(x) for x in input().split()]\ncount=0\nfor i in range(1,len(L)):\n    \n    if L[i]>max(L[:i]):\n            count+=1\n    elif L[i]<min(L[:i]):\n            count+=1\nprint(count)"
        },
        {
            "language": 3,
            "solution": "integer = int\nstring = str\nlength = len\n\n\ndef main():\n    n=integer(input())\n    l=list(map(integer,input().split()))\n    minimum=l[0]\n    maximum=l[0]\n    ans=0\n    for i in l:\n        if i < minimum:\n            ans+=1\n            minimum=i\n        elif i>maximum:\n            ans+=1\n            maximum=i\n    print(ans)\n\nmain()"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = [int(i) for i in input().split()]\n\nminimum = a[0]\nmaximum = a[0]\namazing = 0\n\nfor i in range(1,n):\n    if a[i]>maximum:\n        amazing += 1\n        maximum = a[i]\n    elif a[i]<minimum:\n        amazing += 1\n        minimum = a[i]\n        \nprint(amazing)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nmax=a[0]\nmin=a[0]\ni=0\nfor l in a:\n    if l>max:\n        i+=1\n        max=l\n    elif min>l:\n        i+=1\n        min=l\nprint(i)\n        \n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\narr=list(map(int, input().split()))\nm=arr[0]\nmi=arr[0]\ncount=0\nfor i in arr:\n    if i>m or i<mi:\n        count+=1\n        m=max(m, i)\n        mi=min(mi, i)\nprint(count)\n        \n    "
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=[]\nc=0\na=list(map(int,input().split()))\nl.append(a[0])\nfor i in range(1,n):\n\tif a[i]>max(l) or a[i]<min(l):\n\t\tc+=1\n\tl.append(a[i])\nprint(c)"
        },
        {
            "language": 3,
            "solution": "def I_love_username(li):\n    cnt = 0\n    for i in range(1,len(li)):\n        if max(li[0:i]) < li[i] or min(li[0:i]) > li[i]:\n            cnt += 1\n    return cnt\nn = input()\nli = map(int,input().split())\nprint(I_love_username(list(li)))"
        },
        {
            "language": 3,
            "solution": "from functools import reduce\nn = int(input())\npoints = [int(string) for string in input().split()]\nprint(reduce(lambda r, c : (r[0] + (0 if (r[1] <= c and c <= r[2]) else 1), min(r[1], c), max(r[2], c)),  points, (0, points[0], points[0]))[0])"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint main(void) {\n  long long n, t, i, min, max, co = 0, c = 0;\n  scanf(\"%lld\", &n);\n  long long a[n];\n  for (i = 1; i <= n; i++) scanf(\"%lld\", &a[i]);\n  max = a[1];\n  min = a[1];\n  for (i = 2; i <= n; i++) {\n    if (a[i] > max) {\n      max = a[i];\n      c++;\n    } else if (a[i] < min) {\n      min = a[i];\n      co++;\n    }\n  }\n  printf(\"%lld\\n\", co + c);\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nar=list(map(int,input().split()))\ncount=0\nmax1=ar[0];min1=ar[0]\nfor i in range(1,n):\n    if ar[i]>max1:\n        count+=1\n        max1=ar[i]\n    else:\n        if ar[i]<min1:\n            count+=1\n            min1=ar[i]\nprint(count)      "
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split(\" \")))\nmi=l[0]\nmx=l[0]\nc=0\nfor i in range(n):\n    if(l[i]>mx):\n        mx=l[i]\n        c+=1 \n    if(l[i]<mi):\n        mi=l[i]\n        c+=1 \nprint(c)"
        },
        {
            "language": 1,
            "solution": "def r(): return raw_input().strip()\ndef ri(): return int(r())\ndef riv(): return map(int, r().split())\n\ndef main():\n    n = ri()\n    total = 0\n    for i, k in enumerate(riv()):\n        if i == 0:\n            mx, mn = k, k\n        else: \n            if k > mx:\n                mx = k\n                total += 1\n            elif k < mn:\n                mn = k\n                total += 1\n    \n    print total\n    \nif __name__ == \"__main__\":\n    main()\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nx=[int(i) for i in input().split(' ')]\nmax_v=x[0]\nmin_v=x[0]\ns=0\nfor i in range(1,len(x)):\n    if(x[i]>max_v):\n        s+=1\n        max_v=x[i]\n    if (x[i]<min_v):\n        s+=1\n        min_v=x[i]\nprint(s)\n    \n"
        },
        {
            "language": 3,
            "solution": "a=int(input())\nb=input().split()\nl=[int(b[0])]\ns=0\nfor i in range(a):\n    m=max(l)\n    n=min(l)\n    p=int(b[i])\n    if p>m or p<n:\n        s=s+1\n        l.append(p)\nprint(s)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nr=0\nk=[]\nk.append(l[0])\nfor i in range(len(l)):\n    if l[i]>max(k):\n        r+=1\n        k.append(l[i])\n    elif l[i]<min(k):\n        r+=1\n        k.append(l[i])\nprint(r)\n"
        },
        {
            "language": 1,
            "solution": "t = input()\n\ninp = map(int, raw_input().split())\n\nmini = 0\nmaxi = 0\nans = 0\nfor i in range(1, len(inp)):\n\n\tif i == 1:\n\n\t\tif inp[i - 1] != inp[i]:\n\t\t\t#print \"i \", inp[i]\n\n\t\t\tans += 1\n\t\t\tif inp[i - 1] < inp[i]:\n\n\t\t\t\tmini = inp[i - 1]\n\t\t\t\tmaxi = inp[i]\n\t\t\telse:\n\t\t\t\tmini = inp[i]\n\t\t\t\tmaxi = inp[i-1]\n\n\t\t\tcontinue\n\t\telse:\n\n\t\t\tmini = inp[i]\n\t\t\tmaxi = inp[i]\n\n\t#print \"mini, maxi\", mini, maxi\n\n\tif inp[i] >= mini and inp[i] <= maxi:\n\n\t\tcontinue\n\telse:\n\n\t\t#print \"i \", inp[i]\n\n\t\tif inp[i] > maxi:\n\n\t\t\tmaxi = inp[i]\n\t\telse:\n\n\t\t\tmini = inp[i]\n\t\t\n\t\tans += 1\n\nprint ans\n\n\n\n\n\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.*;\n\npublic class Main {\n    static Scanner scanner;\n    public static void main(String[] args) {\n        scanner = new Scanner(System.in);\n        new CF155A().main();\n    }\n    static class CF155A {\n        public void main()\n        {\n            int n = scanner.nextInt();\n            int max = scanner.nextInt();\n            int min = max;\n            int count=0;\n            for(int i=1;i<n;i++)\n            {\n                int score = scanner.nextInt();\n                if(score>max)\n                {\n                    max=score;\n                    count++;\n\n                }\n                if(score<min)\n                {\n                    min=score;\n                    count++;\n\n                }\n            }\n            System.out.println(count);\n        }\n\n    }\n}"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nmi=l[0]\nma=l[0]\nk=0\nfor i in range(1,n) :\n    if mi>l[i] :\n        mi=l[i]\n        k=k+1\n    if ma<l[i] :\n        ma=l[i]\n        k=k+1\nprint(k)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nnum=[int(i) for i in input().split()]\ns=0\nq=num[0]\np=num[0]\nfor i in range(1,n):\n    if num[i]<q:\n        s+=1\n        q=num[i]\n    if num[i]>p:\n        s+=1\n        p=num[i]\nprint(s)\n"
        },
        {
            "language": 3,
            "solution": "a=int(input())\nm=[int(i) for i in input().split()]\ns=0\nmaximum=m[0]\nminimum=m[0]\nfor i in range(len(m)):\n    if maximum<m[i]:\n        s+=1\n        maximum=m[i]\n    if minimum>m[i]:\n        s+=1\n        minimum=m[i]\nprint(s)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(input().split())\nb=[]\nb.append(int(a[0]))\nk=0\nfor i in range(1,n):\n    if int(a[i])<b[0] or int(a[i])>b[i-1]:\n        k=k+1\n    b.append(int(a[i]))\n    b=sorted(b)\nprint(k)"
        },
        {
            "language": 4,
            "solution": "import java.util.Arrays;\nimport java.util.Scanner;\npublic class NewClass {\n    public static void main(String[] args) {\n        Scanner sc=new Scanner(System.in);\n        int n=sc.nextInt();\n        int[]a=new int[n];\n        for(int i=0;i<n;i++){\n            a[i]=sc.nextInt();\n        }\n        int max=a[0],min=a[0],co=0;\n        for(int i=1;i<n;i++){\n            if(a[i]>max){max=a[i];co++;}\n            if(a[i]<min){min=a[i];co++;}\n        }\n        System.out.println(co);\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "x=int(input())\n\nnumbers=input()\nnumbers=numbers.split(\" \")\n\ntemp=0\nlow=int(numbers[0])\nhigh=int(numbers[0])\n\nfor i in range(1,x):\n    if int(numbers[i])>high:\n        high=int(numbers[i])\n        temp+=1\n    elif int(numbers[i])<low:\n        low=int(numbers[i])\n        temp+=1\n\nprint(temp)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\n\npoint = list(map(int, input().split()))\n\nmax_point = point[0]\nmin_point = point[0]\namazing = 0\n\nfor i in range(1,len(point)) :\n    if point[i] > max_point :\n        max_point = point[i]\n        amazing += 1\n    elif point[i] < min_point :\n        min_point = point[i]\n        amazing += 1\n        \nprint(amazing)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=[int(i) for i in input().split()]\nAmz=0\n\nfor i in range(1,n):   \n    if l[i]>max(l[:i]) or l[i]<min(l[:i]):\n        Amz+=1\n        \nprint(Amz)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nscores=input().split()\nhigh=int(scores[0])\nlow=int(scores[0])\namazing=0\n\nfor i in range(n):\n    if int(scores[i])>high:\n        high=int(scores[i])\n        amazing+=1\n    if int(scores[i])<low:\n        low=int(scores[i])\n        amazing+=1\n\nprint(amazing)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nperformances = list(map(int, input().split()))\n\nnum_amazing = 0\nmn = mx = -1\nfor i, performance in enumerate(performances):\n    if i == 0:\n        mn = mx = performance\n    elif performance < mn:\n        mn = performance\n        num_amazing += 1\n    elif performance > mx:\n        mx = performance\n        num_amazing += 1\n\nprint(num_amazing)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\npoints = list(map(int, input().split()))\nmin, max = points[0], points[0]\namazing_count = 0\nfor i in range(len(points)):\n    if points[i] < min:\n        amazing_count += 1\n        min = points[i]\n    elif points[i] > max:\n        amazing_count += 1\n        max = points[i]\nprint(amazing_count)"
        },
        {
            "language": 3,
            "solution": "# python 3\n\nnum_contests = int(input())\nscores = list(map(int, input().split()))\nmin_score = scores[0]\nmax_score = scores[0]\namazing = 0\nfor idx in range(1, num_contests):\n    if scores[idx] < min_score:\n        amazing += 1\n        min_score = scores[idx]\n    elif scores[idx] > max_score:\n        amazing += 1\n        max_score = scores[idx]\n    else:\n        pass\nprint(amazing)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\narr=list(map(int,input().split()))\nres=0\nfor i in range(1,n):\n    f=0\n    for j in range(i):\n        if arr[i]<=arr[j]:\n            f=1\n            break\n    if f==0:\n        res+=1\nfor i in range(1,n):\n    f=0\n    for j in range(i):\n        if arr[i]>=arr[j]:\n            f=1\n            break\n    if f==0:\n        res+=1\nprint(res)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\npts=[int(i) for i in input().split()]\ncount=0\nif n <2:\n    count=0\nelif n==2:\n    if pts[0]!=pts[1]:\n        count=1\nelse:\n    M=max(pts[0],pts[1])\n    m=min(pts[0],pts[1])\n    for i in range(1,n):\n        if i ==1:\n            if pts[i]!=pts[0]:\n                count+=1\n        if pts[i]>M:\n            count+=1\n            M=pts[i]\n        if pts[i]<m:\n            count+=1\n            m=pts[i]\n        else:\n            continue\nprint(count)"
        },
        {
            "language": 3,
            "solution": "count = 0\nnum = int(input())\nscores = list(map(int,input().split()))\nworst = scores[0]\nbest = scores[0]\nfor i in range(1,num):\n    if scores[i] > best:\n        best = scores[i]\n        count += 1\n    if scores[i] < worst:\n        worst = scores[i]\n        count += 1\nprint(count)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nmylist = input().split()\n\nfor i in range(n):\n    mylist[i] = int(mylist[i])\n\nmax = mylist[0]\nmin = mylist[0]\ncounter = 0\nfor i in range(1,n):\n    if mylist[i] > max:\n        max = mylist[i]\n        counter+= 1\n\n    if mylist[i] < min:\n        min = mylist[i]\n        counter +=1\n\nprint(counter)\n\n\n\t\t\t  \t  \t\t  \t   \t \t    \t  \t\t \t"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long MOD = 1e9 + 7;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  ;\n  int n;\n  cin >> n;\n  long long a[n];\n  for (int i = 0; i < n; ++i) {\n    cin >> a[i];\n  }\n  long long ans = 0, mn = a[0], mx = a[0];\n  for (int i = 0; i < n; ++i) {\n    if (a[i] > mx) {\n      ans++;\n      mx = a[i];\n    }\n    if (a[i] < mn) {\n      ans++;\n      mn = a[i];\n    }\n  }\n  cout << ans;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\narr = list(map(int, input().split()))\nb = w = arr[0]\ncount = 0\nfor i in arr[1:]:\n    if i > b :\n        b = i\n        count += 1\n    if i < w:\n        w = i\n        count += 1\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nscores = list(map(int, input().split()))\nmaximum = scores[0]\nminimum = scores[0]\ncount = 0\nfor i in range(1, n):\n\tif scores[i] > maximum:\n\t\tcount += 1\n\t\tmaximum = scores[i]\n\telif scores[i] < minimum:\n\t\tcount += 1\n\t\tminimum = scores[i]\nprint(count)"
        },
        {
            "language": 1,
            "solution": "n = input()\ndata = [int(i) for i in raw_input().split()]\nmaxx = data[0]\nminn = data[0]\ncnt = 0\nfor a in range(n):\n    if data[a]>maxx:\n        maxx = data[a]\n        cnt = cnt+1\n    if data[a]<minn:\n        minn=data[a]\n        cnt = cnt+1\nprint cnt"
        },
        {
            "language": 3,
            "solution": "a=int(input())\nprim=[int(i) for i in input().split()]\nans=0\ncal=[prim[0]]\nfor i in range(1,a):\n    cal.append(prim[i])\n    if max(cal)==cal[i] or min(cal)==cal[i]:\n        if cal.count(cal[i])==1:\n            ans+=1\nprint(ans)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nc=0\nl=[int(i) for i in input().split()]\nmaxi=mini=l[0]\nfor i in range(1,n):\n    if l[i]>maxi:\n        c+=1 \n        maxi=l[i]\n    if l[i]<mini:\n        c+=1 \n        mini=l[i]\nprint(c)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint minn, maxx;\nint n, ans;\nint main() {\n  cin >> n;\n  cin >> minn;\n  maxx = minn;\n  for (int i = 1; i < n; ++i) {\n    int a;\n    cin >> a;\n    if (a > maxx) maxx = a, ans++;\n    if (a < minn) minn = a, ans++;\n  }\n  cout << ans;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, Min, Max, cnt = 0, x;\n  scanf(\"%d\", &n);\n  scanf(\"%d\", &x);\n  Max = x;\n  Min = x;\n  while (n--) {\n    scanf(\"%d\", &x);\n    if (x > Max) {\n      cnt++;\n      Max = x;\n    }\n    if (x < Min) {\n      cnt++;\n      Min = x;\n    }\n  }\n  printf(\"%d\", cnt);\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\npoint=list(map(int, input().split()))\ncount=0\nmaximum=point[0]\nminimum=point[0]\nfor i in range(1, n):\n    if point[i]>maximum:\n        maximum=point[i]\n        count+=1\n    elif point[i]<minimum:\n        minimum=point[i]\n        count+=1\n\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nL = input()\nL = L.split()\np = 1\nfor i in range (n):\n    L[i] = int(L[i])\nR = [L[0]]\nc = 0    \nfor k in range (1,n):\n    mayor = L[0]\n    menor = L[0]\n    \n    for i in range (k+1):\n        \n        if (L[i] > mayor):\n            mayor = L[i]\n            \n        if (L[i] < menor):\n            menor = L[i]\n            \n    if L[k] not in R and (L[k] == mayor or L[k] == menor) and mayor != menor:\n        \n        R.append(L[k])\n        c += 1\n\nprint (c)"
        },
        {
            "language": 3,
            "solution": "lenn = int(input())\narr = list(map(int,input().split()))\n\nminn = arr[0]\nmaxx = arr[0]\ncount=0\n\nfor i in range(1,lenn):\n  temp_min = min(minn,arr[i])\n  temp_max = max(maxx,arr[i])\n  if temp_min <minn:\n    count+=1\n    minn = temp_min\n  elif temp_max>maxx:\n    count+=1\n    maxx = temp_max\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nls = list(map(int, input().split(\" \")))\ncount = 0\nmin_ref = ls[0]\nmax_ref = ls[0]\nfor i in range(1, n):\n    if min_ref > ls[i]:\n        min_ref = ls[i]\n        count += 1\n    elif max_ref < ls[i]:\n        max_ref = ls[i]\n        count += 1\nprint(count)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = [int(x) for x in input().split(' ')]\nmin, max = a[0], a[0]\ns = 0\nfor x in a[1:]:\n    if x > max:\n        max = x\n        s += 1\n    elif x < min:\n        min = x\n        s += 1\nprint(s)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\np=[int(i) for i in input().split()]\na=0\nfor i in range(1,n):\n    l=[0]*i\n    for k in range(i):\n        l[k]=p[k]\n    if p[i]>max(l):\n        a+=1\n    if p[i]<min(l):\n        a+=1\nprint(a)\n"
        },
        {
            "language": 3,
            "solution": "aa = int(input())\na = list(map(int, input().split()))\nsum = 0\nc = a[0]\nd = a[0]\ni = 0\nfor i in range(len(a)):\n    if a[i] > c:\n        sum += 1\n        c = a[i]\n        i += 1\n    elif a[i] < d:\n        sum += 1\n        d = a[i]\n        i += 1\n    else:\n        i += 1\nprint(sum)\n            \n        \n    \n    \n"
        },
        {
            "language": 1,
            "solution": "\"\"\" ***E-property of Saket Saumya ***\n            IIITM\n\n\"\"\"\nfrom __future__ import division\nfrom fractions import Fraction\nimport math\n#import os\n#import random\n#import re\n#from sys import stdin, stdout\n#from collections import Counter,deque,OrderedDict,defaultdict\n#from itertools import permutations,ansduct,combinations\n#from heapq import heapify,heappush,heappop,heappushpop,heapify,heapreplace,nlargest,nsmallest\n#import numpy as np\n#from operator import mul\n\nMOD=10**9+7\nINF=float('+inf')\n\ndef si():\n\treturn str(stdin.readline())\ndef ii():\n    return int(raw_input())\ndef mi():\n    return map(int, raw_input().split())\ndef li():\n    return [int(i) for i in raw_input().split()]\ndef debug(x):\n\treturn stdout.write(str(x))\ndef limul(list):\n\treturn eval('*'.join(str(item) for item in list))\n\n\"-----------------------------------------------\"\ndef main():\n    n=ii()\n    arr=li()\n    c=0\n    mini=maxi=arr[0]\n    for i in range(n):\n        if arr[i]>maxi:\n            maxi=arr[i]\n            c+=1\n        elif arr[i]<mini:\n            mini=arr[i]\n            c+=1\n    print c\n\n\n\n\n\n\n\n\n\nmain()\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=input().split()\n\nmi=int(a[0])\nma=int(a[0])\nkol=0\n\nfor elem in a:\n    if int(elem)>ma:\n        kol+=1\n        ma=int(elem)\n    elif int(elem)<mi:\n        kol+=1\n        mi=int(elem)\nprint(kol)\n\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nA=[int(x)for x in input().split()]\nnum=0\nfor i in range(1,n):\n    m=min(A[0:i])\n    M=max(A[0:i])\n    if A[i]>M or A[i]<m:\n        num+=1\nprint(num)\n"
        },
        {
            "language": 3,
            "solution": "import sys\n\n\ndef main():\n    sys.stdin.readline()\n    contests = list(map(int, sys.stdin.readline().split()))\n\n    ans = []; new_min = []; new_max = []\n    for i in contests:\n        ans.append(i)\n        new_min.append(min(ans))\n        new_max.append(max(ans))\n\n\n    sys.stdout.write(f'{len(set(new_min))+len(set(new_max))-2}')\n\n\nif __name__ == '__main__':\n    main()"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, a[10000], i, sum = 0;\n  scanf(\"%d\", &n);\n  for (i = 0; i < n; i++) {\n    scanf(\"%d\", &a[i]);\n  }\n  int maxv = a[0];\n  int minv = a[0];\n  for (i = 1; i < n; ++i) {\n    if (maxv < a[i]) {\n      maxv = a[i];\n      sum++;\n    } else if (minv > a[i]) {\n      minv = a[i];\n      sum++;\n    }\n  }\n  printf(\"%d\\n\", sum);\n}\n"
        },
        {
            "language": 3,
            "solution": "n = input()\np = input()\n\nperformance_list = p.split()\nperformance_list = [ int(x) for x in performance_list ]\n\ncount = 0\n\nmax = performance_list[0]\nmin = performance_list[0]\n\nfor i in performance_list:\n    if i>max:\n        max = i \n        count += 1\n    if i<min:\n        min = i\n        count += 1\nprint(count)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\npoints = list(map(int, input().split(' ')))\ncount = 0\nfor i in range(len(points)-1):\n    point_list = points[: i + 2]\n    new_point = point_list[-1]\n    if new_point > max(point_list[:-1]) or new_point < min(point_list[:-1]):\n        count += 1\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int,input().split()))\nk = []\nk.append(a[0])\ncn = 0\nfor i in range(1,n):\n    if a[i] > max(k) or a[i] < min(k):\n          cn += 1\n    k.append(a[i])\nprint(cn)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nc = map(int,input().split())\nd = []\ncount = 0\nfor i in c:\n\tif i not in d:\n\t\td.append(i)\n\t\tif max(d)==i:\n\t\t\tcount =count+1\n\t\telif min(d)==i:\n\t\t\tcount = count+1\nprint (count-1)"
        },
        {
            "language": 3,
            "solution": "input()\na=[int(i) for i in input().split()]\nmax,min=a[0],a[0]\na.pop(0)\nans=0\nwhile a:\n    score=a.pop(0)\n    if score<min:\n        ans+=1\n        min=score\n    elif score>max:\n        ans+=1\n        max=score\nprint(ans)"
        },
        {
            "language": 3,
            "solution": "n=(int)(input())\ns=list(map(int, input().strip().split(\" \")))\ncount=0\nfor i in range(n-1):\n    if(max(s[:i+1])<s[i+1]):\n        count+=1\n    elif(min(s[:i+1])>s[i+1]):\n        count+=1\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[int(i) for i in input().split()]\nif n==1:\n    print ('0')\n    exit()\nm=1\nmax=max(a[0],a[1])\nmin=min(a[0],a[1])\nfor i in range (2,n):\n    if a[i]>max:\n        max=a[i]\n        m+=1\n    elif a[i]<min:\n        min=a[i]\n        m+=1\nif a[0]==a[1]:\n    m-=1\nprint (m)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nmx=0\nmn=0\nans=0\nfor i in range(n):\n    eq=l[0]-l[i]\n    if eq>0:\n        if abs(eq)>abs(mn):\n            mn=eq\n            ans+=1\n    elif eq<0:\n        if abs(eq)>abs(mx):\n            mx=eq\n            ans+=1\nprint(ans)\n"
        },
        {
            "language": 3,
            "solution": "# https://codeforces.com/problemset/problem/155/A\nimport sys\n#-----------------------------------------------------------------------------#\ntry:\n    sys.stdin = open('inputs.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\nexcept:\n    pass\nfinally:\n    input = sys.stdin.readline\n    print = sys.stdout.write\n\n#-----------------------------------------------------------------------------#\n\nn = int(input())\n\npoints = list(map(int, input().split()))\n\nmax_p = points[0]\nmin_p = points[0]\namazing_count = 0\n\nfor point in points:\n\n    if point > max_p:\n        amazing_count += 1\n        max_p = point\n\n    elif point < min_p:\n        amazing_count += 1\n        min_p = point\n\nprint(str(amazing_count))\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nscore=[int(i) for i in input().split()]\nx=score[0];y=x;am=0\nfor i in score[1:]:\n        if i>x:\n            am+=1\n            x=i\n        elif i<y:\n            am+=1\n            y=i\nprint(am)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[int(i) for i in input().split()]\nans=0\nbig=a[0]\nsmall=a[0]\nfor i in range(1,n):\n    if a[i]>big:\n        big=a[i]\n        ans+=1\n    elif a[i]<small:\n        small=a[i]\n        ans+=1\nprint(ans)"
        },
        {
            "language": 1,
            "solution": "qtdd = int(raw_input())\npoints = map(int, raw_input().split())\n\nmenor = points[0]\nmaior = points[0]\namazing = 0\n\nfor i in xrange(1, qtdd):\n    if points[i] < menor:\n        amazing += 1\n        menor = points[i]\n    if points[i] > maior:\n        amazing += 1\n        maior = points[i]\n\nprint amazing"
        },
        {
            "language": 3,
            "solution": "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Sat Jun 27 15:57:25 2020\n\n@author: pc612\n\"\"\"\n\nn = int(input())\nl = list(map(int, input().split()))\ncount = 0 \nm = mi = l[0]\nfor i in range(1, n):\n    if l[i]>m:\n        m = l[i]\n        count += 1\n    elif l[i]<mi:\n        mi = l[i]\n        count += 1\nprint(count)"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class CF155A {\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tint n = Integer.parseInt(br.readLine());\n\t\tStringTokenizer st = new StringTokenizer(br.readLine());\n\t\tint min, max, cnt = 0;\n\t\tmin = max = Integer.parseInt(st.nextToken());\n\t\twhile (--n > 0) {\n\t\t\tint a = Integer.parseInt(st.nextToken());\n\t\t\tif (min > a) {\n\t\t\t\tmin = a;\n\t\t\t\tcnt++;\n\t\t\t}\n\t\t\tif (max < a) {\n\t\t\t\tmax = a;\n\t\t\t\tcnt++;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(cnt);\n\t}\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = list(map(int, input().split()))\nans = 0\n_max = l[0]\n_min = l[0]\nfor i in range(1, n):\n\tif l[i] > _max:\n\t\t_max = l[i]\n\t\tans += 1\n\tif l[i] < _min:\n\t\t_min = l[i]\n\t\tans += 1\nprint (ans)\n"
        },
        {
            "language": 3,
            "solution": "_ = input()\nscores = [int(x) for x in input().strip().split(' ')]\ncnt = 0\nmax_re = min_re = scores[0]\nfor x in scores[1:]:\n    if x > max_re:\n        max_re = x\n        cnt += 1\n    elif x < min_re:\n        min_re = x\n        cnt += 1\nprint(cnt)"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\n\npublic class Solution {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        \n        int n = sc.nextInt();\n        \n        int min = Integer.MAX_VALUE;\n        int max = -1;\n        int amazing = 0;\n        \n        \n        for(int i = 0; i<n; i++) {\n            int num = sc.nextInt();\n            \n            if(num > max) amazing++;\n            else if(num < min) amazing++;\n            \n            max = Math.max(num, max);\n            min = Math.min(num, min);\n        }\n        \n        System.out.println(amazing - 1);\n        sc.close();\n    }\n    \n}\n"
        },
        {
            "language": 3,
            "solution": "number = int(input())\nIp = input()\n\nIp = Ip.split(' ')\nIp =[int(x) for x in Ip]\n\nMax, Min = Ip[0], Ip[0]\nTotal = 0\nfor i in range(1, number):\n\tif Ip[i] > Max:\n\t\tTotal += 1\n\t\tMax = Ip[i]\n\telif Ip[i] < Min:\n\t\tTotal += 1\n\t\tMin = Ip[i]\nprint(Total)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[int(i) for i in input().split()]\nsum=0\nmax=a[0]\nmin=a[0]\nfor i in range(n):\n    if a[i]<min:\n        min=a[i]\n        sum+=1\n    if a[i]>max:\n        max=a[i]\n        sum+=1\nprint(sum)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nk=0\nfor i in range(1,n):\n    x=[a[0]]\n    for j in range(i):\n        x.append(a[j])\n    if a[i]<min(x):\n        k+=1\n    if a[i]>max(x):\n        k+=1\nprint(k)\n    "
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\narr = [int(x) for x in raw_input().strip().split()]\nl = arr[0]\nr = arr[0]\nans = 0\nfor i in range(1,n):\n    if not (l <= arr[i] <= r):\n        ans += 1\n        if arr[i] > r:\n            r = arr[i]\n        else:\n            l = arr[i]\nprint ans\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int,input().split(' ')))\nminP,maxP = a[0],a[0]\ncount = 0\nfor i in range(1,n):\n    if a[i] > maxP:\n        count += 1\n        maxP = a[i]\n    elif a[i] < minP:\n        count += 1\n        minP = a[i]\nprint(count)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\nbig = a[0]\nsmall = a[0]\nres = 0\nfor i in range(1, n):\n    if a[i] > big:\n        res += 1\n        big = a[i]\n    elif a[i] < small:\n        res += 1\n        small = a[i]\nprint(res)"
        },
        {
            "language": 3,
            "solution": "n = input()\n\narr = list(map(int, input().split()))\n\namazing = 0\n\nfor i, a in enumerate(arr):\n    if i == 0:\n        mx = mn = a\n    else:\n        if a > mx:\n            amazing += 1\n            mx = a\n        if a < mn:\n            amazing += 1\n            mn = a\n\nprint(amazing)"
        },
        {
            "language": 1,
            "solution": "n=int(input())\n\nl=[]\nl[:n]=map(int,raw_input().split())\ncount=0\nfor i in range(1,n):\n    mi=min(l[:i])\n    ma=max(l[:i])\n    if l[i]>ma:\n        count+=1\n    elif l[i]<mi:\n        count+=1\nprint count\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class Main{\n    public static void main(String args[])\n    {\n        Scanner sc = new Scanner(System.in);\n        int n=sc.nextInt();\n        int [] a = new int[n];\n        for(int i=0;i<n;i++)\n         a[i] =sc.nextInt();\n        int c=0;\n        int max=a[0],min=a[0];\n        for(int i=0;i<n;i++){\n         if(a[i]>max) {max=a[i]; c++;}\n         if(a[i]<min) {min=a[i]; c++;}\n        }\n         System.out.println(c);\n    }\n}"
        },
        {
            "language": 3,
            "solution": "input ()\na = list ( map ( int, input ().split () ) )\nb = a[0]\nc = a[0]\ncount = 0\nfor i in a :\n\tif i > b :\n\t\tb = i\n\t\tcount += 1\n\telif i < c :\n\t\tc = i\n\t\tcount += 1\nprint ( count )"
        },
        {
            "language": 3,
            "solution": "n=int(input())\npoint=input().split()\nx=0\nfor i in range(len(point)):\n    point[i]=int(point[i])\nl=[point[0]]\nfor i in range(len(point)-1):\n    if point[i+1]>max(l) or point[i+1]<min(l):\n        x=x+1\n    l+=[point[i+1]]\nprint(x)"
        },
        {
            "language": 3,
            "solution": "n = input()\nl = list(map(int,input().split()))\nm = l[0]\nmn = l[0]\ncnt = 0\nfor i in l:\n\tif i >m :\n\t\tm=i\n\t\tcnt+=1\n\tif i<mn:\n\t\tcnt+=1\n\t\tmn = i\n\nprint(cnt)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nls = list(map(int,input().split()))\nc = 0\nfor i in range(1,n):\n    if ls[i]>max(ls[:i]) or ls[i]<min(ls[:i]):\n        c+=1\nprint(c)"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class I_love_username_155A {\n    public static void main(String[] args) {\n        Scanner scn = new Scanner(System.in);\n        int n = scn.nextInt();\n        int[] arr = new int[n];\n        for (int i = 0; i < n; i++) {\n            arr[i] = scn.nextInt();\n        }\n        int amezing = 0;\n        int max = arr[0];\n        int min = arr[0];\n        for (int i = 1; i < n; i++) {\n\n            if (arr[i] < min)\n                amezing++;\n            if (arr[i] > max)\n                amezing++;\n\n            if (min > arr[i])\n                min = arr[i];\n            if (max < arr[i])\n                max = arr[i];\n\n        }\n        System.out.println(amezing);\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[int(i) for i in input().split(' ')]\na1=a[0]\na2=a[0]\ni=1\nans=0\nwhile i<n:\n    if a[i]>a1:\n        ans=ans+1\n        a1=a[i]\n    if a[i]<a2:\n        ans=ans+1\n        a2=a[i]\n    i=i+1\nprint (ans)\n        \n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=map(int,input().split())\nl1=list(l)\nif(len(l1) == 1):\n   print(\"0\")\nelse:\n   min=0\n   max=0\n   if(l1[0] <= l1[1]):\n      min=l1[0]\n      max=l1[1]\n   else:\n      min=l1[1]\n      max=l1[0]\n   count=1\n   if(l1[0] == l1[1]):\n      count=0\n   for i in range(2,len(l1)):\n      if(l1[i]<min):\n         count+=1\n         min=l1[i]\n      if(l1[i]>max):\n         count+=1\n         max=l1[i]\n   print(count)\n\n\n   \n   \n   \n"
        },
        {
            "language": 3,
            "solution": "input()\nl = [int(x) for x in input().split()]\ncurMin = l[0]\ncurMax = l[0]\nans = 0\nfor x in l[1:]:\n\tif x < curMin:\n\t\tans += 1\n\t\tcurMin = x\n\tif x > curMax:\n\t\tans += 1\n\t\tcurMax = x\nprint(ans)\n"
        },
        {
            "language": 3,
            "solution": "my_input=int(input())\nmy_scores=input()\nmy_scores=my_scores.split()\ncount=0\n\nmy_score=[]\nfor i in my_scores:\n    my_score.append(int(i))\nbig=my_score[0]\nsmall=my_score[0]\n\n\n\nfor i in range(my_input):\n\n    if my_score[i]>big:\n        big=my_score[i]\n        count+=1\n\n    if my_score[i]<small:\n        small=my_score[i]\n        count+=1\n\nprint(count)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  vector<int> v;\n  int total, num, i, koita = 0;\n  scanf(\"%d\", &total);\n  for (i = 0; i < total; i++) {\n    scanf(\"%d\", &num);\n    v.push_back(num);\n  }\n  int maximum = v[0];\n  int minimum = v[0];\n  for (i = 1; i < total; i++) {\n    num = v[i];\n    if (num > maximum) {\n      maximum = num;\n      koita++;\n    }\n    if (num < minimum) {\n      minimum = num;\n      koita++;\n    }\n  }\n  printf(\"%d\\n\", koita);\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nc=0\nmax=a[0]\nmin=a[0]\nfor i in range(1,n):\n    if a[i]>max:\n        max=a[i]\n        c=c+1\n    if a[i]<min:\n        min=a[i]\n        c=c+1\n        \nprint(c)        "
        },
        {
            "language": 3,
            "solution": "def gr(key,idx,l):\n    for i in range(idx):\n        if(key<=l[i]):\n            return(False)\n    return(True)\ndef low(key,idx,l):\n    for i in range(idx):\n        if(key>=l[i]):\n            return(False)\n    return(True)\nn=int(input())\nl=list(map(int,input().split()))\ncount=0\nfor i in range(1,n):\n    if(low(l[i],i,l)):\n        count+=1\n    elif(gr(l[i],i,l)):\n        count+=1\nprint(count)"
        },
        {
            "language": 1,
            "solution": "n = input()\na = map(int,raw_input().split())\nmin = a[0]\nmax = a[0]\ncnt = 0\nfor i in range(1,n):\n    if a[i] < min:\n        cnt += 1\n        min = a[i]\n    if a[i] > max:\n        cnt += 1\n        max = a[i]\nprint cnt"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.*;\nimport java.util.Arrays;\nimport java.util.Locale;\nimport java.util.StringTokenizer;\n\npublic class Problem339A_20150604_222402 extends PrintWriter {\n    public static String SOURCE;\n\n    void solve() throws IOException {\n        int n = nextInt();\n        int ans = 0;\n\n        int min = Integer.MAX_VALUE;\n        int max = Integer.MIN_VALUE;\n\n        for (int i = 0; i < n; i++) {\n            int p = nextInt();\n\n            if (p > max) {\n                max = p;\n                ans++;\n            }\n            if (p < min) {\n                min = p;\n                ans++;\n            }\n        }\n        println(ans - 2);\n    }\n\n    // ----------------- system staff ----------------------- //\n\n    void run() throws IOException {\n        try {\n            solve();\n            close();\n        } catch (Exception e) {\n            e.printStackTrace();\n            System.exit(1);\n        }\n    }\n\n    public static void main(String[] args) throws IOException {\n        try {\n            Locale.setDefault(Locale.US);\n        } catch (Exception ignore) {\n        }\n        if (SOURCE == null) {\n            new Problem339A_20150604_222402().run();\n        } else {\n            new Problem339A_20150604_222402(SOURCE).run();\n        }\n    }\n\n    BufferedReader br;\n    StringTokenizer stok;\n\n    Problem339A_20150604_222402() {\n        super(System.out);\n        br = new BufferedReader(new InputStreamReader(System.in));\n    }\n\n    Problem339A_20150604_222402(String s) throws FileNotFoundException {\n        super(\"\".equals(s) ? \"output.txt\" : s + \".out\");\n        br = new BufferedReader(new FileReader(\"\".equals(s) ? \"input.txt\" : s + \".in\"));\n    }\n\n    String next() {\n        try {\n            while (stok == null || !stok.hasMoreTokens()) {\n                String str = br.readLine();\n                stok = new StringTokenizer(str);\n            }\n        } catch (IOException e) {\n            return null;\n        }\n        return stok.nextToken();\n    }\n\n    int nextInt() {\n        return Integer.parseInt(next());\n    }\n\n    long nextLong() {\n        return Long.parseLong(next());\n    }\n\n    double nextDouble() {\n        return Double.parseDouble(next());\n    }\n\n    int[] nextIntArray(int len) {\n        int[] res = new int[len];\n        for (int i = 0; i < len; i++) {\n            res[i] = nextInt();\n        }\n        return res;\n    }\n}\n"
        },
        {
            "language": 1,
            "solution": "a=input()\nL=[int(x) for x in raw_input().split()]\nk=0\nfor i in range(1,len(L)):\n    if L[i]>max(L[:i]) or L[i]<min(L[:i]):\n        k+=1\nprint k\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nperformance=list(map(int,input().split()))\nmax_grade=min_grade=performance[0]\ncount=0\nfor i in range(1,len(performance)):\n    if performance[i]>max_grade:\n        max_grade=performance[i]\n        count+=1\n    if performance[i]<min_grade:\n        min_grade=performance[i]\n        count+=1\nprint (count)"
        },
        {
            "language": 3,
            "solution": "result = 0\n\nn = input()\nstr = input()\nnumbers = str.split(' ')\nmax = min = int(numbers[0])\n\nfor number in numbers[1:]:\n    if int(number) > max:\n        max = int(number)\n        result += 1\n    elif int(number) < min:\n        min = int(number)\n        result += 1\n            \nprint(result)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = [int(x) for x in input().split()]\nmax = a[0]\nmin = a[0]\ncount = 0\nfor i in range (1,n):\n\tif(a[i] > max):\n\t\tcount += 1\n\t\tmax = a[i]\n\telif(a[i] < min):\n\t\tcount +=1\n\t\tmin = a[i]\nprint (count)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = list(map(int,input().split()))\nhigh = l[0]\nlow = l[0]\ncount = 0\nfor i in range(len(l)):\n    if(l[i]>high):\n        high = l[i]\n        count+=1\n    elif(l[i]<low):\n        low = l[i]\n        count+=1\nprint(count)"
        },
        {
            "language": 1,
            "solution": "#\n#\t155A. I_love_%username%\n#\n\nn = int(raw_input())\nl = list(map(int, raw_input().strip().split()))\nminimum = l[0]\nmaximum = l[0]\ncount_amazing = 0\nfor i in range(1, len(l)):\n\tif minimum > l[i]:\n\t\tcount_amazing += 1\n\t\tminimum = l[i]\n\telif maximum < l[i]:\n\t\tcount_amazing += 1\n\t\tmaximum = l[i]\nprint count_amazing\n\n\n"
        },
        {
            "language": 1,
            "solution": "#http://codeforces.com/problemset/problem/155/A\ndef get_amazing_perfs(scores):\n    mn = scores[0]\n    mx = scores[0]\n    amzing = 0\n    for i in scores[1:]:\n        if i < mn:\n            mn = i\n            amzing += 1\n        elif i > mx:\n            mx = i\n            amzing += 1\n    return amzing\n\n\nif __name__ == '__main__':\n    n = int(raw_input())\n    scores = map(int, raw_input().strip().split())\n    print get_amazing_perfs(scores)\n"
        },
        {
            "language": 3,
            "solution": "input()\npoints = list(map(int, input().split()))\nmaximum = points[0]\nminimum = points[0]\namazing = 0\nfor point in points[1:]:\n    if point > maximum:\n        amazing += 1\n        maximum = point\n    elif point < minimum:\n        amazing += 1\n        minimum = point\nprint(amazing)\n"
        },
        {
            "language": 1,
            "solution": "n=int(raw_input())\na=raw_input().split()\nfor i in range(n):\n    a[i]=int(a[i])\n\nb=[]\ncount=0\nb.append(a[0])\nfor i in range(1,n):\n    if a[i]>max(b) or a[i]<min(b):\n        count+=1\n    b.append(a[i])\n\nprint(count)"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\nl = map(int, raw_input().split())\n\nmaxi = l[0]\nmini = l[0]\n\nans = 0\nfor e in l:\n    if e > maxi:\n        ans += 1\n        maxi = e\n    if e < mini:\n        ans += 1\n        mini = e\nprint ans\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nc=0\nmax=l[0]\nmin=l[0]\nfor i in range(0,len(l)):\n\tif l[i]>max:\n\t\tc=c+1\n\t\tmax=l[i]\n\tif l[i]<min:\n\t\tc=c+1\n\t\tmin=l[i]\nprint(c)\n"
        },
        {
            "language": 3,
            "solution": "a=int(input())\nb=list(map(int,input().split()))\n\ncount=0\n\ni=1\nwhile i < len(b):\n    temp=b[:i]\n    if b[i]>max(temp) or b[i]<min(temp):\n        count+=1\n    i+=1\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\ns=list(map(int,input().split()))\nc=0\nfor i in range(1,n):\n    if s[i]>max(s[:i]) or s[i]<min(s[:i]):c+=1\nprint(c)"
        },
        {
            "language": 3,
            "solution": "a=int(input())\ns=list(map(int,input().split()))\nmax=s[0]\nmin=s[0]\nc=0\nfor i in range(1,a):\n    if(s[i]>max):\n        max=s[i]\n        c+=1\n    elif(s[i]<min):\n        min=s[i]\n        c+=1\nprint(c)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nA=[int(i) for i in input().split()]\nMax=A[0]\nMin=A[0]\nans=0\nfor i in range(n):\n        if A[i]>Max:\n            ans+=1\n            Max=A[i]\n        elif A[i]<Min:\n            ans+=1\n            Min=A[i]\nprint(ans)\n#mshmmqn"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nmin=a[0]\nmax=a[0]\nc=0\ni=1\nwhile(i<n):\n    if a[i]>max:\n        c+=1\n        max=a[i]\n    if a[i]<min:\n        c+=1\n        min=a[i]\n    i+=1\nprint(c)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\ns = [int(i)for i in input().split()]\ncnt = 0\nfor i in range(1,n):\n    if s[i]>max(s[0:i]) or s[i]<min(s[0:i]):\n        cnt += 1\nprint(cnt)"
        },
        {
            "language": 3,
            "solution": "s = int(input())\narr = [int(x) for x in input().split()]\nmaxX, minX, cnt = arr[0], arr[0], 0\nfor x in arr:\n  if x > maxX:\n    cnt = cnt + 1\n    maxX = x\n  elif x < minX:\n    cnt = cnt + 1\n    minX = x\nprint(cnt)"
        },
        {
            "language": 3,
            "solution": "import sys\nn=int(input())\nl=list(map(int,input().split()))\nmx=l[0]\nmn=l[0]\ncnt=0\nif n>1:\n    for i in l:\n        if i>mx:\n            mx=i\n            cnt=cnt+1\n        if i<mn:\n            mn=i\n            cnt=cnt+1 \n    print(cnt)\n\nelse:\n    print(cnt)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=[int(x) for x in input().split()]\nm1=l[0]\nm2=l[0]\nc=0\nfor i in range(1,n):\n    if(l[i]<m1):\n        c+=1\n        m1=l[i]\n    elif(l[i]>m2):\n        c+=1\n        m2=l[i]\nprint(c)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nu=0\nfor i in range(1,n):\n    if l[i]>max(l[:i]) or l[i]<min(l[:i]): u+=1\nprint(u)"
        },
        {
            "language": 3,
            "solution": "res = 0\nn = int(input())\nx = [int(i) for i in input().split()]\nmi = ma = x[0]\nfor i in range(len(x)):\n    if x[i]> ma:\n        res+=1\n        ma = max(ma, x[i])\n    elif x[i]<mi:\n        res+=1\n        mi = min(mi, x[i])\nprint(res)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nbool comp(pair<int, int> a, pair<int, int> b) {\n  if (a.first == b.first) return (a.first > b.first);\n  return (a.first < b.first);\n}\nstruct point {\n  double x;\n  double y;\n  point(double x1, double y1) {\n    x = x1;\n    y = y1;\n  }\n};\nint main() {\n  int n;\n  cin >> n;\n  int k = 0;\n  int x;\n  cin >> x;\n  int mn = x, mx = x;\n  for (size_t i = 1; i < n; i++) {\n    cin >> x;\n    if (x > mx) {\n      k++;\n      mx = x;\n    }\n    if (x < mn) {\n      k++;\n      mn = x;\n    }\n  }\n  cout << k;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  vector<int> arr(n);\n  for (int i = 0; i < n; ++i) {\n    cin >> arr[i];\n  }\n  int maxi = arr[0];\n  int mini = arr[0];\n  int ctr = 0;\n  for (int i = 0; i < n; ++i) {\n    if (arr[i] > maxi) {\n      ctr++;\n      maxi = arr[i];\n    }\n    if (arr[i] < mini) {\n      ctr++;\n      mini = arr[i];\n    }\n  }\n  cout << ctr;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class ILoveUsername {\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n =sc.nextInt();\n\t\tint[] arr = new int[n];\n\t\tfor(int i = 0; i < n; i++) {\n\t\t\tarr[i] = sc.nextInt();\n\t\t}\n\t\tint max = arr[0], min = arr[0], c= 0;\n\t\tfor(int i = 1; i < n; i++) {\n\t\t\tif(arr[i] > max) {\n\t\t\t\tc++;\n\t\t\t\tmax = arr[i];\n\t\t\t}\n\t\t\n\t\t\n\t\t\t\n\t\t\t\tif(arr[i] < min) {\n\t\t\t\t\tc++;\n\t\t\t\t\tmin = arr[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\t\nSystem.out.println(c);\n\t\t\n\t}\n\t}\n\n\n"
        },
        {
            "language": 1,
            "solution": "a=input()\na=map(int,raw_input().split())\n\nminn=a[0]\nmaxx=a[0]\nres=0\nfor x in range(1,len(a)):\n\tif(a[x]<minn):\n\t\tres+=1\n\t\tminn=a[x]\n\tif(a[x]>maxx):\n\t\tres+=1\n\t\tmaxx=a[x]\n\nprint res\n\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nmax=a[0]\nmin=a[0]\nk=0\nfor i in range(1,len(a)):\n    if a[i]>max:\n        max=a[i]\n        k=k+1\n    elif min>a[i]:\n        min=a[i]\n        k=k+1\nprint(k)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int a[1001];\n  int n;\n  cin >> n;\n  int max, min;\n  int count = 0;\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n  }\n  max = a[0];\n  min = a[0];\n  for (int i = 1; i < n; i++) {\n    if (a[i] > max) {\n      max = a[i];\n      count++;\n    }\n    if (a[i] < min) {\n      min = a[i];\n      count++;\n    }\n  }\n  cout << count << endl;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nnum=list(map(int, input().split()))\nmax=num[0]\nmin=num[0]\ns=0\nfor i in range(n):\n    if num[i]>max:\n        max=num[i]\n        s+=1\n    elif num[i]<min:\n        min=num[i]\n        s+=1\nprint(s)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\narr = list(map(int, input().split()))\nans = 0\nfor i in range(1, n):\n    if arr[i] < min(arr[:i]) or arr[i] > max(arr[:i]):\n        ans += 1\nprint(ans)\n"
        },
        {
            "language": 3,
            "solution": "numEvent = int(input())\nlista = [int(x) for x in input().split()]\nbest = lista[0]\nworst = lista.pop(0)\namazing = 0\nfor i in lista:\n    if i > best:\n        amazing+=1\n        best = i\n    elif i < worst:\n        amazing+=1\n        worst = i\nprint(amazing)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nli=[int(x) for x in input().split()]\nmini=li[0]\nmaxi=li[0]\ntot=0\nfor i in range(1,n):\n    if(li[i]>maxi or li[i]<mini):\n        tot+=1\n    mini=min(mini,li[i])\n    maxi=max(maxi,li[i])\nprint(tot)"
        },
        {
            "language": 3,
            "solution": "t=int(input())\n\nx=list(map(int,input().split()))\nmini=maxi=x[0]\namazing=0\nfor i in range(1,t):\n    if x[i]<mini:\n        amazing+=1\n        mini=x[i]\n    elif x[i]>maxi:\n        amazing+=1\n        maxi=x[i]\nprint(amazing)"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\npublic class contestprogrammer155A {\n    public static void main(String[] args){\n        Scanner scanner = new Scanner(System.in);\n        int n = scanner.nextInt();\n        int max=scanner.nextInt(); int min=max;\n        int amazing = 0;\n        for(int i=1; i<n; i++){\n            int next = scanner.nextInt();\n            if(next>max){\n                max=next;\n                amazing++;\n            }\n            if(next<min){\n                min=next;\n                amazing++;\n            }\n            \n        }\n        \n        System.out.print(amazing);\n        \n        \n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\npoints = list(map(int, input().split()))[:n]\nhigh = points[0]\nlow = points[0]\ncount = 0\nfor i in range(1, n):\n    if points[i] > high:\n        high = points[i]\n        count += 1\n    elif points[i] < low:\n        low = points[i]\n        count += 1\nprint(count)\n"
        },
        {
            "language": 1,
            "solution": "n = input()\ns = raw_input()\ns = s.split()\nfor i in range(len(s)):\n\ts[i] = int(s[i])\n\t#if s[i] > max:\n\t#\tmax = s[i]\nfirst = s[0]\ncounter = 0\nmax = s[0]\nmin = s[0]\nfor i in range(1, len(s)):\n\tif s[i] > s[i - 1] and s[i] > max:\n\t\tcounter += 1\n\t\tmax = s[i]\n\telif s[i] < s[i - 1] and s[i] < min:\n\t\tcounter += 1\n\t\tmin = s[i]\nprint counter"
        },
        {
            "language": 3,
            "solution": "def main():\n        n = int(input())\n        a = list(map(int, input().split()))\n\n        min = a[0]\n        max = a[0]\n        c = 0\n\n        for i in range(1, len(a)):\n                if a[i] < min:\n                        c = c+1\n                        min = a[i]\n                elif a[i] > max:\n                        c = c+1\n                        max = a[i]\n        print(c)\n\nif __name__ == '__main__':\n        main()\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = 0\nscore = list(map(int, input().split()))\n\nfor x in range(n):\n    if x == 0:\n        l, m = score[x], score[x]\n    if score[x] > m:\n        m = score[x]\n        a += 1\n    if score[x] < l:\n        l = score[x]\n        a += 1\nprint(a)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = [int(x) for x in input().split()]\nans = 0\nfor x in range(1, n):\n    g = 1\n    l = 1\n    for y in range(x):\n        if a[y] >= a[x]:\n            g = 0\n        if a[y] <= a[x]:\n            l = 0\n    if g ==1 or l == 1:\n        ans += 1\nprint(ans)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = input().split()\nmi = int(l[0])\nma = int(l[0])\nans = 0\n\nfor i in range(1,n):\n    if int(l[i]) < mi:\n        ans += 1\n        mi = int(l[i])\n    elif int(l[i]) > ma:\n        ans += 1\n        ma = int(l[i])\n\nprint(ans)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint main() {\n  int mayor, resp, band, menor;\n  int n, i;\n  scanf(\"%d\", &n);\n  int points[n];\n  for (i = 0; i < n; i++) {\n    scanf(\"%d\", &points[i]);\n  }\n  mayor = points[0];\n  menor = points[0];\n  resp = 0;\n  band = 1;\n  for (i = 1; i < n; i++) {\n    if (points[i] > mayor) {\n      resp++;\n      mayor = points[i];\n    }\n    if (points[i] < menor) {\n      resp++;\n      menor = points[i];\n    }\n  }\n  printf(\"%d\", resp);\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nworst=l[0]\nbest=l[0]\nc=0\nfor i in range(1,len(l)):\n    if l[i]<worst:\n        c+=1\n        worst=l[i]\n    if l[i]>best:\n        c+=1\n        best=l[i]\nprint(c)\n        "
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nb=a[0]\nd=a[0]\ne=0\nfor i in range(1,n):\n    if a[i]>b or a[i]<d:\n        e+=1\n        if a[i]>b:\n            b=a[i]\n        if a[i] <d:\n            d=a[i]\nprint(e)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = list(map(int,input().split()))\nmi,ma = l[0],l[0]\na = 0\nfor i in range(1,n):\n  if mi>l[i]:\n    mi = l[i]\n    a+=1\n  if ma<l[i]:\n    a+=1\n    ma = l[i]\nprint(a)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\narr = list(map(int,input().split()))\nif(n==1):\n    print(0)\nelse:\n    mini = 0\n    maxi =0 \n    val = arr[0]\n    val1 = arr[1]\n    count =0 \n    if(val1>val):\n        maxi = val1\n        mini = val\n        count+=1\n    elif(val1<val):\n        mini = val1\n        maxi = val\n        count+=1\n    else:\n        maxi = val\n        mini = val\n    for i in range(2,n):\n        if(arr[i]>maxi):\n            maxi = arr[i]\n            count+=1\n        elif(arr[i]<mini):\n            mini = arr[i]\n            count+=1\n    print(count)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\namazing=0\nmax1=min1=a[0]\nfor i in range(1,n):\n    if a[i]>max1:\n        max1=a[i]\n        amazing+=1\n    if a[i]<min1:\n        min1=a[i]\n        amazing+=1\n        \nprint(amazing)        "
        },
        {
            "language": 3,
            "solution": "input()\na = [int(x) for x in input().split()]\nmi = a[0]\nma = mi\nt = 0\nfor i in a:\n\tif i > ma:\n\t\tma = i\n\t\tt += 1\n\telif i < mi:\n\t\tmi = i\n\t\tt += 1\nprint(t)"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n \npublic class iLoveUsername{\n    \n    public static void main(String[] args){\n        \n        Scanner scn = new Scanner(System.in);\n        int n = scn.nextInt();\n        int[] arr = new int[n];\n        arr[0] = scn.nextInt();\n        int ans = 0, min = arr[0], max = arr[0];\n        for(int i = 1; i < n; i++){\n            \n            arr[i] = scn.nextInt();\n            if(arr[i] > max){\n                max = arr[i];\n                ans += 1;\n            }else if(arr[i] < min){\n                min = arr[i];\n                ans += 1;\n            }\n        }\n        \n        System.out.println(ans);\n    }\n}"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[int(i) for i in input().split()]\nnCount=0\nif len(a)==1:\n\tprint('0')\nif len(a)>=2:\n\tb=[a[0]]\n\tfor i in range(1,len(a)):\n\t\tif a[i]>max(b):\n\t\t\tnCount+=1\n\t\t\tb.append(a[i])\n\t\telif a[i]<min(b):\n\t\t\tnCount+=1\n\t\t\tb.append(a[i])\n\t\telse:\n\t\t\tb.append(a[i])\n\tprint(nCount)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nsc=[int(i) for i in input().split()]\nans=0\nfor i in range (1,n):\n    if sc[i]>max(sc[:i]) or sc[i]<min(sc[:i]):\n        ans+=1\n    else:\n        pass\nprint(ans)   "
        },
        {
            "language": 1,
            "solution": "#!/usr/bin/python\n\np = []\nn=int(raw_input())\np = map(int, raw_input().split())\n\"\"\"\nfor en in range(input()):\n    p.append(input())\n\"\"\"\nx = p[0]; y = x; r = 0\nfor i in p:\n    if x < i:\n        x = i\n        r+=1\n    if y > i:\n        y = i\n        r+=1        \nprint r\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = [int(i) for i in input().split()]\nmin_a = a[0]\nmax_a = a[0]\nans = 0\nfor i in range(len(a)):\n    if a[i] > max_a:\n        max_a = a[i]\n        ans += 1\n    if a[i] < min_a:\n        min_a = a[i]\n        ans += 1\nprint(ans)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nx=list(map(int,input().split()))\namazing=0\nfor i in range(1,len(x)):\n    if x[i]>max(x[:i]) or x[i]<min(x[:i]):\n        amazing=amazing+1\nprint(amazing)"
        },
        {
            "language": 1,
            "solution": "n = int(input())\nb = map(int, raw_input().split(' '))\n\nmn = b[0]\nmx = b[0]\n\nans = 0\n\nfor x in b[1:]:\n    if x > mx:\n        ans += 1\n        mx = x\n    \n    if x < mn:\n        ans += 1\n        mn = x\n\nprint ans\n"
        },
        {
            "language": 3,
            "solution": "input()\na=list(map(int,input().split()))\namazing=0\nmaximun=minimun=a[0]\nfor i in range(1,len(a)):\n    if a[i]>maximun:\n        amazing+=1\n        maximun=a[i]\n    elif a[i]<minimun:\n        amazing+=1\n        minimun=a[i]\nprint(amazing)\n"
        },
        {
            "language": 1,
            "solution": "n=input()\nc=map(int, raw_input().split())\nprint len([i for i in range(1, len(c)) if c[i] not in c[:i] and (c[i] == max(c[:i+1]) or c[i] == min(c[:i+1]))])"
        },
        {
            "language": 3,
            "solution": "n= int(input())\nscores = [int(s) for s in input().split()]\n\nmaxi = scores[0]\nmini = scores[0]\nr = 0\nfor i in scores:\n    if i> maxi:\n        maxi = i\n        r+=1\n    if i< mini:\n        mini = i\n        r+=1\nprint(r)\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class Main {\n    /************************************************** FAST INPUT IMPLEMENTATION *********************************************/\n    static class Reader {\n        final private int BUFFER_SIZE = 1 << 16;\n        private DataInputStream din;\n        private byte[] buffer;\n        private int bufferPointer, bytesRead;\n        private int line_length;\n\n        public Reader(int ll) {\n            din = new DataInputStream(System.in);\n            buffer = new byte[BUFFER_SIZE];\n            bufferPointer = bytesRead = 0;\n            line_length = ll;\n        }\n\n        public Reader(String file_name) throws IOException {\n            din = new DataInputStream(\n                    new FileInputStream(file_name));\n            buffer = new byte[BUFFER_SIZE];\n            bufferPointer = bytesRead = 0;\n        }\n\n        public String readLine() throws IOException {\n            byte[] buf = new byte[line_length]; // line length\n            int cnt = 0, c;\n            while ((c = read()) != -1) {\n                if (c == '\\n') {\n                    if (cnt != 0) {\n                        break;\n                    } else {\n                        continue;\n                    }\n                }\n                buf[cnt++] = (byte) c;\n            }\n            return new String(buf, 0, cnt);\n        }\n\n        public int nextInt() throws IOException {\n            int ret = 0;\n            byte c = read();\n            while (c <= ' ') {\n                c = read();\n            }\n            boolean neg = (c == '-');\n            if (neg)\n                c = read();\n            do {\n                ret = ret * 10 + c - '0';\n            } while ((c = read()) >= '0' && c <= '9');\n\n            if (neg)\n                return -ret;\n            return ret;\n        }\n\n        public long nextLong() throws IOException {\n            long ret = 0;\n            byte c = read();\n            while (c <= ' ')\n                c = read();\n            boolean neg = (c == '-');\n            if (neg)\n                c = read();\n            do {\n                ret = ret * 10 + c - '0';\n            } while ((c = read()) >= '0' && c <= '9');\n            if (neg)\n                return -ret;\n            return ret;\n        }\n\n        public double nextDouble() throws IOException {\n            double ret = 0, div = 1;\n            byte c = read();\n            while (c <= ' ')\n                c = read();\n            boolean neg = (c == '-');\n            if (neg)\n                c = read();\n\n            do {\n                ret = ret * 10 + c - '0';\n            } while ((c = read()) >= '0' && c <= '9');\n\n            if (c == '.') {\n                while ((c = read()) >= '0' && c <= '9') {\n                    ret += (c - '0') / (div *= 10);\n                }\n            }\n\n            if (neg)\n                return -ret;\n            return ret;\n        }\n\n        private void fillBuffer() throws IOException {\n            bytesRead = din.read(buffer, bufferPointer = 0,\n                    BUFFER_SIZE);\n            if (bytesRead == -1)\n                buffer[0] = -1;\n        }\n\n        private byte read() throws IOException {\n            if (bufferPointer == bytesRead)\n                fillBuffer();\n            return buffer[bufferPointer++];\n        }\n\n        public void close() throws IOException {\n            if (din == null)\n                return;\n            din.close();\n        }\n    }\n    /********************************************************* USE FULL CODE **************************************************/\n\n    /* https://www.geeksforgeeks.org/java-tricks-competitive-programming-java-8/ */\n    static class Util{\n        public static final int MOD=1000000007;\n        public static <T>  void swap(T[] arr,int i,int j){\n            T temp=arr[i];\n            arr[i]=arr[j];\n            arr[j]=temp;\n        }\n        public static <T> void printArray(T[] arr){\n            for(int i=0;i<arr.length;i++){\n                System.out.print(arr[i]);\n            }\n            System.out.println(\"\");\n        }\n\n    }\n\n    /***************************************************************************************************************************\n    *********************************************************** MAIN CODE ******************************************************\n    ****************************************************************************************************************************/\n\n    public static void main(String[] args) throws IOException{\n        Reader rd = new Reader(1000000);  //Enter Required Line Length\n        int n=rd.nextInt();\n        int max=Integer.MIN_VALUE;\n        int min=Integer.MAX_VALUE;\n        int amazing=0;\n        for(int i=0;i<n;i++){\n            int temp=rd.nextInt();\n            if((temp>max||temp<min )&&i!=0){\n                amazing++;\n            }\n            if(temp>max){\n                max=temp;\n            }\n            if(temp<min){\n                min=temp;\n            }\n\n\n        }\n        System.out.println(amazing);\n//        solve();\n    }\n\n    /********************************************************* MAIN LOGIC HERE ****************************************************/\n\n    public static void solve(int k,int l,int m,int n,int d) {\n\n    }\n\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=[int(e) for e in input().split()]\nmax=l[0]\nmin=l[0]\ncl=0\nfor e in l[1:]:\n    if(e<min):\n        cl+=1\n        min=e\n    if(e>max):\n        cl+=1\n        max=e    \nprint(cl)    "
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[int(i) for i in input().split()]\nx=0\nfor i in range(1, n):\n    t=i\n    for j in range(i):\n        if a[j]<a[i]:\n            t-=1\n    if t==0:\n        x+=1\nfor i in range(1, n):\n    t=i\n    for j in range(i):\n        if a[j]>a[i]:\n            t-=1\n    if t==0:\n        x+=1\nprint(x)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int count = 0, n, max, a, min;\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> a;\n    if (i == 0) {\n      max = a;\n      min = a;\n    } else if (a > max) {\n      max = a;\n      count++;\n    } else if (a < min) {\n      min = a;\n      count++;\n    }\n  }\n  cout << count << endl;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nscores = [int(x) for x in input().split()]\nperformance = [scores[0]]\namazing = 0\nfor i in range(1,n):\n    if scores[i] > max(performance) or scores[i] < min(performance):amazing += 1\n    performance.append(scores[i])\nprint(amazing)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = [int(i) for i in input().split()]\nc = 0\nmini = min(l)\nif n==1:\n    print(0)\nelse:\n    last = l[0]\n    mini = l[0]\n    for i in range(1,n):\n        if(l[i] > last):\n            last = l[i]\n            c+=1\n        if(l[i] < mini):\n            mini = l[i]\n            c+=1\n        \n    print(c)\n \n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\ns=input()\na=[int(x) for x in s.split()]\nmin=a[0]\nmax=a[0]\nans=0\nfor x in range(1,n):\n\tif a[x]>max:\n\t\tmax=a[x]\n\t\tans+=1\n\telif a[x]<min:\n\t\tmin=a[x]\n\t\tans+=1\nprint(ans)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\ncount=0\nl1=1\nfor i in range(1,n):\n\tflag=0\n\ta=0\n\tm=l[i]\n\t# print(\"+\")\n\tfor j in range(i-1,-1,-1):\n\t\t# print(l[j])\n\t\tif m>l[j]:\n\t\t\tflag+=1\n\t\telif m<l[j]:\n\t\t\ta+=1\n\t# print(flag,a,l1)\n\tif flag == l1 or a == l1:\n\t\tcount+=1\n\tl1+=1\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int,input().split()))\nhis =[]\nhis.append(a[0])\nk=0\nfor i in range(1,n):\n    maxx=max(his)\n    minn=min(his)\n    if a[i]>maxx or a[i]<minn:\n        k+=1\n    his.append(a[i])\nprint(k)"
        },
        {
            "language": 1,
            "solution": "n = input()\nm = map(int, raw_input().split())\n\nc = 0\nmax = m[0]\nmin = m[0]\nfor i in range(1, len(m)):\n  if m[i] > max:\n    max = m[i]\n    c += 1\n  if m[i] < min:\n    min = m[i]\n    c += 1\nprint c"
        },
        {
            "language": 1,
            "solution": "n, a = input(), map(int, raw_input().split())\nmaxv, minv, r = a[0], a[0], 0\n\nfor c in a:\n    if c > maxv:\n        r += 1\n        maxv = c\n\n    if c < minv:\n        r += 1\n        minv = c\n\nprint r"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = [int(s) for s in input().split()]\nmaxi, mini, k = a[0],a[0],0\nfor i in range(1,len(a)):\n    if maxi < a[i]:\n        maxi = a[i]\n        k += 1\n    elif mini > a[i]:\n        mini = a[i]\n        k += 1\nprint(k)"
        },
        {
            "language": 3,
            "solution": "import math\nimport sys\nimport collections\n\n# imgur.com/Pkt7iIf.png\n\ndef getdict(n):\n    d = {}\n    if type(n) is list:\n        for i in n:\n            if i in d:\n                d[i] += 1\n            else:\n                d[i] = 1\n    else:\n        for i in range(n):\n            t = ii()\n            if t in d:\n                d[t] += 1\n            else:\n                d[t] = 1\n    return d\ndef cdiv(n, k): return n // k + (n % k != 0)\ndef ii(): return int(input())\ndef mi(): return map(int, input().split())\ndef li(): return list(map(int, input().split()))\ndef lcm(a, b): return abs(a*b) // math.gcd(a, b)\n\nn = mi()\na = li()\ncmin = cmax = a[0]\nr = 0\nfor i in a:\n    if i > cmax:\n        r += 1\n        cmax = i\n    if i < cmin:\n        r += 1\n        cmin = i\nprint(r)\n"
        },
        {
            "language": 3,
            "solution": "\n\ndef main():\n\tcontests = int(input())\n\tarr = input().split(' ')\n\tfor i in range(0, len(arr)):\n\t\tarr[i] = int(arr[i])\n\n\thigh = arr[0]\n\tlow = arr[0]\n\tcurr = 0\n\tfor i in range(1, len(arr)):\n\t\tif high < arr[i]:\n\t\t\thigh = arr[i]\n\t\t\tcurr+=1\n\t\telif low > arr[i]:\n\t\t\tlow = arr[i]\n\t\t\tcurr+=1\n\tprint(curr)\n\n\n\n\nmain()\n"
        },
        {
            "language": 1,
            "solution": "n = input()\na = map(int, raw_input().split(\" \"))\n\nans = 0\nbig = a[0]\nsmall = a[0]\n\nfor x in a[1:]:\n    if x > big:\n        big = x\n        ans += 1\n    if x < small:\n        small = x\n        ans += 1\n\nprint ans\n"
        },
        {
            "language": 3,
            "solution": "def main():\n    N = int(input())\n    CUP = list(map(int, input().split()))\n    PIZDEC = 0\n    check1 = 0\n    check2 = 0\n    for i in range (1, N):\n        for j in range (0, i):\n            if CUP[i]<CUP[j]:\n                check1 +=1\n            elif CUP[i]>CUP[j]:\n                check2 +=1\n        if check1 == i or check2 == i:\n            PIZDEC += 1\n        check1 = 0\n        check2 = 0\n    print(PIZDEC)\n    \nmain()   "
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nmaxx,minn,cnt=l[0],l[0],0\nfor ele in l:\n  if ele>maxx:\n    maxx=ele\n    cnt+=1\n  if ele<minn:\n    minn=ele\n    cnt+=1\nprint(cnt)\n  "
        },
        {
            "language": 3,
            "solution": "n = int(input())\np = [int(i) for i in input().split(' ')]\n\nprev = [p[0]]\na = 0\nfor i in p[1:]:\n    if i < min(prev) or i > max(prev):\n        a += 1\n    prev.append(i)\n\nprint(a)\n"
        },
        {
            "language": 1,
            "solution": "def main():\n    n = int(raw_input())\n    l = map(int, raw_input().split())\n    max_value = l[0]\n    min_value = l[0]\n    amazing = 0\n    for i in range(1,n):\n        if l[i] > max_value:\n            max_value = l[i]\n            amazing += 1\n        elif l[i] < min_value:\n            min_value = l[i]\n            amazing += 1\n    return amazing\n\nprint main()\n"
        },
        {
            "language": 3,
            "solution": "t=int(input())\np=list(map(int,input().split()))\nmin_array=[]\nmax_array=[]\nfor i in range(1,t):\n\tflag=1\n\tfor j in range(i):\n\t\tif p[j]>p[i] or p[j]==p[i]:\n\t\t\tflag=0\n\t\t\tbreak\n\tif flag!=0:\n\t\tmin_array.append(i)\nfor i in range(1,t):\n\tflag=1\n\tfor j in range(i):\n\t\tif p[j]<p[i] or p[j]==p[i]:\n\t\t\tflag=0\n\t\t\tbreak\n\tif flag!=0:\n\t\tmax_array.append(i)\nprint(len(min_array)+len(max_array))"
        },
        {
            "language": 3,
            "solution": "t=int(input())\narr=list(map(int,input().split()))\nmi=arr[0]\nma=arr[0]\nc=0\nfor i in range(len(arr)):\n    if arr[i]>ma:\n        c+=1\n        ma=arr[i]\n    if arr[i]<mi:\n        c+=1\n        mi=arr[i]\nprint(c)\n    "
        },
        {
            "language": 3,
            "solution": "n=int(input())\nli=[int(i)for i in input().split()]\nl=len(li)\nc=0\ncount=0\nd=0\nlis=li\nfor i in range(l):\n    c=0\n    d=0\n    for j in range(i):\n        if j==i:\n            break\n        if li[i]>lis[j]:\n            c=c+1\n            if c==i:\n                count=count+1\n        if li[i]<lis[j]:\n            d=d+1\n            if d==i:\n                count=count+1\nprint(count)\n\n\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, a[10000], high, low, amaze = 0;\n  cin >> n;\n  cin >> a[0];\n  if (n == 1) {\n    cout << \"0\";\n    return 0;\n  }\n  cin >> a[1];\n  high = a[0];\n  if (a[1] > high) {\n    high = a[1];\n    low = a[0];\n  } else {\n    low = a[1];\n  }\n  if (a[0] != a[1]) {\n    amaze++;\n  }\n  if (n == 2) {\n    cout << amaze;\n    return 0;\n  }\n  for (int i = 2; i < n; i++) {\n    cin >> a[i];\n    if (a[i] > high) {\n      high = a[i];\n      amaze++;\n    }\n    if (a[i] < low) {\n      low = a[i];\n      amaze++;\n    }\n  }\n  cout << amaze;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nscores = list(map(int,input().split()))\nsmallest = largest = scores[0]\ncount = 0\nfor score in scores[1:]:\n    if score < smallest:\n        smallest = score\n        count += 1\n    if score > largest:\n        largest = score\n        count += 1\nprint(count)"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\n\npublic class Iloveusername {\n\n\t/**\n\t * @param args\n\t */\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tScanner sc = new Scanner(System.in) ;\n\t\twhile (sc.hasNext())\n\t\t{\n\t\t\tint n = sc.nextInt() ;\n\t\t\tint arr[] = new int[n] ;\n\t\t\tint max , min ;\n\t\t\tint counter = 0 ;\n\t\t\tfor (int i = 0; i < arr.length; i++) {\n\t\t\t\tarr[i] = sc.nextInt() ;\n\t\t\t}\n\t\t\tmax = min = arr[0] ;\n\t\t\tfor (int i = 0; i < arr.length; i++) {\n\t\t\t\tif (arr[i] > max) {\n\t\t\t\t\tmax = arr[i] ;\n\t\t\t\t\tcounter ++ ;\n\t\t\t\t}\n\t\t\t\tif (arr[i] < min) {\n\t\t\t\t\tmin = arr[i] ;\n\t\t\t\t\tcounter ++ ;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(counter);\n\t\t}\n\n\t}\n\n}\n"
        },
        {
            "language": 3,
            "solution": "def solve(lst):\n    min_val = max_val = lst[0]\n    amazing = 0\n    for i in lst[1:]:\n        if i < min_val:\n            min_val = i\n            amazing += 1\n        elif i > max_val:\n            max_val = i\n            amazing += 1\n    return amazing\n\n\nn = int(input())\nscores = list(map(int, input().split()))\nprint(solve(scores))\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\nma = a[0]\nmi = a[0]\nr = 0\nif len(a)<2:\n    print(0)\n    exit()\nfor i in a:\n    if i > ma:\n        ma = i\n        r += 1\n    if i < mi:\n        mi = i\n        r += 1\nprint(r)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = input().split()\nk = 0\nscore = 0\nmaax = int(l[0])\nmiin = int(l[0])\nwhile k < n:\n    if int(l[k])>maax:\n        score = score + 1\n        maax = int(l[k])\n    if int(l[k])<miin:\n        score = score + 1\n        miin = int(l[k])\n    k = k + 1\nprint(score)\n    \n"
        },
        {
            "language": 3,
            "solution": "\n\ndef main():\n    n = int(input())\n    scores = list(map(int , input().split()))\n    m, M, count =  scores[0], scores[0], 0\n    for i in range(1, n):\n        if m < scores[i]:\n            m = scores[i]\n            count += 1\n        elif M > scores[i]:\n            M = scores[i]\n            count+= 1\n\n    print(count)\nmain()\n"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nlst=list(map(int,input().split()))\nz=0\np=q=lst[0]\nfor i in range(1,len(lst)):\n    if(lst[i]<p):\n        p=lst[i]\n        z+=1\n    if(lst[i]>q):\n        q=lst[i]\n        z+=1\nprint(z)"
        },
        {
            "language": 4,
            "solution": "import java.io.DataInputStream; \nimport java.io.FileInputStream; \nimport java.io.IOException; \nimport java.io.InputStreamReader; \nimport java.util.*;\npublic class amazing {\n    public static void main(String[] args) throws IOException {\n        Reader in = new Reader();\n        int n = in.nextInt();\n        int max = in.nextInt();\n        int min = max;\n        int rec = 0;\n        for (int i = 1; i < n; i++) {\n            int a = in.nextInt();\n            if(a>max){\n                max = a;\n                rec++;\n            }else if(a<min){\n                min = a;\n                rec++;\n            }\n        }\n        System.out.println(rec);\n    }\n    \n    static class Reader {\n        final private int BUFFER_SIZE = 1 << 16;\n        private DataInputStream din;\n        private byte[] buffer;\n        private int bufferPointer, bytesRead;\n\n        public Reader() {\n            din = new DataInputStream(System.in);\n            buffer = new byte[BUFFER_SIZE];\n            bufferPointer = bytesRead = 0;\n        }\n\n        public Reader(String file_name) throws IOException {\n            din = new DataInputStream(new FileInputStream(file_name));\n            buffer = new byte[BUFFER_SIZE];\n            bufferPointer = bytesRead = 0;\n        }\n\n        public String readLine() throws IOException {\n            byte[] buf = new byte[64]; // line length\n            int cnt = 0, c;\n            while ((c = read()) != -1) {\n                if (c == '\\n')\n                    break;\n                buf[cnt++] = (byte) c;\n            }\n            return new String(buf, 0, cnt);\n        }\n\n        public int nextInt() throws IOException {\n            int ret = 0;\n            byte c = read();\n            while (c <= ' ')\n                c = read();\n            boolean neg = (c == '-');\n            if (neg)\n                c = read();\n            do {\n                ret = ret * 10 + c - '0';\n            } while ((c = read()) >= '0' && c <= '9');\n            if (neg)\n                return -ret;\n            return ret;\n        }\n\n        public long nextLong() throws IOException {\n            long ret = 0;\n            byte c = read();\n            while (c <= ' ')\n                c = read();\n            boolean neg = (c == '-');\n            if (neg)\n                c = read();\n            do {\n                ret = ret * 10 + c - '0';\n            } while ((c = read()) >= '0' && c <= '9');\n            if (neg)\n                return -ret;\n            return ret;\n        }\n\n        public double nextDouble() throws IOException {\n            double ret = 0, div = 1;\n            byte c = read();\n            while (c <= ' ')\n                c = read();\n            boolean neg = (c == '-');\n            if (neg)\n                c = read();\n            do {\n                ret = ret * 10 + c - '0';\n            } while ((c = read()) >= '0' && c <= '9');\n            if (c == '.') {\n                while ((c = read()) >= '0' && c <= '9') {\n                    ret += (c - '0') / (div *= 10);\n                }\n            }\n            if (neg)\n                return -ret;\n            return ret;\n        }\n\n        private void fillBuffer() throws IOException {\n            bytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE);\n            if (bytesRead == -1)\n                buffer[0] = -1;\n        }\n\n        private byte read() throws IOException {\n            if (bufferPointer == bytesRead)\n                fillBuffer();\n            return buffer[bufferPointer++];\n        }\n\n        public void close() throws IOException {\n            if (din == null)\n                return;\n            din.close();\n        }\n    }\n}"
        },
        {
            "language": 3,
            "solution": "num = int(input())\nscores = list(map(int, input().split()))\ncount = 0\nminScore = scores[0]\nmaxScore = scores[0]\nfor i in range(1, len(scores)):\n    if scores[i] > maxScore:\n        count += 1\n        maxScore= scores[i]\n        continue\n    if scores[i] < minScore:\n        count += 1\n        minScore = scores[i]\nprint(count)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input());\nar = [int(x) for x in input().split()];\nmax = ar[0];\nmin = ar[0];\nc = 0;\nfor i in range(1,n):\n    if(max < ar[i]):\n        c = c+1;\n        max = ar[i];\n    elif(min > ar[i]):\n        min = ar[i];\n        c = c+1\nprint(c);"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nmaximum=a.pop(0)\nminimum=maximum\nc=0\nfor i in a:\n    if i>maximum:\n        c=c+1\n        maximum=i\n    elif i<minimum:\n        c=c+1\n        minimum=i\nprint(c)\n        \n"
        },
        {
            "language": 3,
            "solution": "numScores = int(input())\nscoreList = [int(x) for x in input().split()]\nnewList = []\nnewList.append(scoreList[0])\ncounter = 0\nfor i in range (1,numScores):\n\n    a = max(newList)\n    b = min(newList)\n    newList.append(scoreList[i])\n    if newList[i] > a or newList[i] < b:\n        counter += 1\nprint (counter)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\narr=list(map(int,input().split()))\nl=[arr[0]]\ns=0\nfor i in range(1,n):\n    if(max(l)<arr[i] or arr[i]<min(l)):\n        s+=1\n    l.append(arr[i])\nprint(s)      \n    "
        },
        {
            "language": 1,
            "solution": "t = int(raw_input())\n\nmin = 0\nmax = 0\nans = 0\nfirst = True\n\ninp = raw_input().split(\" \")\n\nfor i in range(t):\n  n = int(inp[i])\n  if(first):\n    min = n\n    max = n\n    first = False\n  else:\n    if(n > max):\n      max = n\n      ans = ans + 1\n    if(n < min):\n      min = n\n      ans = ans + 1\n\nprint ans\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nc=0\nfor i in range(1,len(l)):\n    g=0\n    s=0\n    for j in range(i):\n        if l[i]>l[j]:\n            g+=1\n        if l[i]<l[j]:\n            s+=1\n    if g==i or s==i:\n        c+=1\nprint(c)\n            \n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\narr = [int(x) for x in input().split()]\nama = 0\nmin = arr[0]\nmax = arr[0]\nfor x in arr:\n    if x < min:\n        min = x\n        ama += 1\n    elif x > max:\n        max = x\n        ama += 1\nprint(ama)\n\n"
        },
        {
            "language": 3,
            "solution": "import sys\n\nn = int(sys.stdin.readline())\nin_str = (sys.stdin.readline()).split()\n\nvmax = int(in_str[0])\nvmin = vmax\n\ncount = 0 \nfor i in in_str[1:]:\n    val = int(i);\n    if(val > vmax):\n        count += 1\n        vmax = val\n    elif(val < vmin):\n        count += 1\n        vmin = val\n        \nprint(count)\n    \n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nscores=[int(i) for i in input().split()]\nM=scores[0]\nm=scores[0]\namazing=int(0)\nfor i in range(1,n):\n    if scores[i]>M:\n        amazing+=1\n        M=scores[i]\n    elif scores[i]<m:\n        amazing+=1\n        m=scores[i]\nprint(amazing)\n"
        },
        {
            "language": 3,
            "solution": "# A. I_love_%username%\nn = int(input())\nballs = list(map(int, input().split()))\nlong_list = len(balls)\namazing = 0\nmax_ball = balls[0]\nmin_ball = balls[0]\n\nfor i in range(long_list - 1):\n    if balls[i + 1] > max_ball:\n        max_ball = balls[i + 1]\n        amazing += 1\n    elif balls[i + 1] < min_ball:\n        min_ball = balls[i + 1]\n        amazing += 1\nprint(amazing)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint main() {\n  int a, tmp, low, high;\n  int cnt = 0;\n  scanf(\"%d\", &a);\n  scanf(\"%d\", &tmp);\n  low = tmp;\n  high = tmp;\n  for (int i = 1; i < a; i++) {\n    scanf(\"%d\", &tmp);\n    if (tmp > high) {\n      high = tmp;\n      cnt++;\n    } else if (tmp < low) {\n      low = tmp;\n      cnt++;\n    }\n  }\n  printf(\"%d\\n\", cnt);\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nmin=max=l[0]\ns=0\nfor i in range(n):\n    x=l[i]\n    if x<min:\n        min=x\n        s+=1\n    if x>max:\n        max=x\n        s+=1\nprint(s)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, max_, min_, t = 0;\n  int a;\n  cin >> n >> a;\n  max_ = a;\n  min_ = a;\n  for (int i = 1; i < n; i++) {\n    cin >> a;\n    if (a > max_) {\n      t++;\n      max_ = a;\n    } else if (a < min_) {\n      t++;\n      min_ = a;\n    }\n  }\n  cout << t;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\naList = [int(i) for i in input().split()]\nmax = aList[0]\nmin = aList[0]\namz = 0\nfor a in aList:\n    if a>max:\n        amz += 1\n        max = a\n    if a<min:\n        amz +=1\n        min = a\nprint(amz)"
        },
        {
            "language": 3,
            "solution": "import math\nimport os\nimport sys\n\nimport re\nimport string\n\nimport itertools\nimport functools\nimport operator\n\n\nn = int(input())\nA = list( map(int, input().split()) )\n\nminv, maxv, res = A[0], A[0], 0\n\nfor i in range(1, len(A)):\n    if A[i] < minv or A[i] > maxv:\n        res = res + 1\n        \n    minv = min(minv, A[i])\n    maxv = max(maxv, A[i])\n    \nprint(res)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  int n, a[1005], cnt = 0, i, j;\n  cin >> n;\n  for (i = 0; i < n; i++) cin >> a[i];\n  for (i = 1; i < n; i++) {\n    sort(a, a + i);\n    if (a[i] < a[0] || a[i] > a[i - 1]) cnt++;\n  }\n  cout << cnt << endl;\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "n = input()\nscores = map(int, raw_input().split())\nbest = worset = scores[0]\namazing = 0\nfor i in xrange(1, len(scores)):\n    if scores[i] > best:\n        best = scores[i]\n        amazing += 1\n    elif scores[i] < worset:\n        worset = scores[i]\n        amazing += 1\n\nprint amazing\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nnumber=input()\nm=number.split( )\nk=0\nt=10000\ns=0\nfor i in range (1,n):\n    k=max(k,int(m[i-1]))\n    t=min(t,int(m[i-1]))\n    if int(m[i])>k:\n        s=s+1\n    if int(m[i])<t:\n        s=s+1\nprint(s)\n    \n    \n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\nmin_, max_ = a[0], a[0]\nk = 0\nfor i in a:\n    if i > max_:\n        k += 1\n        max_ = i\n    if i < min_:\n        k += 1\n        min_ = i\nprint(k)\n"
        },
        {
            "language": 3,
            "solution": "a=int(input())\na=list(map(int,input().split()))\nmax=a[0]\nmin=a[0]\ncount=0\nfor i in a:\n    if max<i:\n        max=i\n        count+=1\n    elif min>i:\n        min=i\n        count+=1\nprint(count)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int a[100005], n, cnt = 0, flag = 0, glaf = 0;\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n  }\n  for (int i = 1; i < n; i++) {\n    flag = 0;\n    glaf = 0;\n    for (int j = 0; j <= i - 1; j++) {\n      if (a[i] > a[j]) {\n        flag = 1;\n      } else if (a[i] < a[j]) {\n        glaf = 1;\n      } else\n        goto w;\n      if (flag == 1 && glaf == 1) {\n        flag = 0;\n        glaf = 0;\n        break;\n      }\n    }\n    if ((flag == 1 && glaf != 1) || (glaf == 1 && flag != 1)) cnt++;\n  w:;\n  }\n  cout << cnt;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "size = int(input())\ncount = 0\n\npoints = [int(x) for x in input().split()]\n\nfor i in range(1, size):\n    more = True\n    less = True\n    for j in range(0, i):\n        if points[i] <= points[j]:\n            more = False\n        if points[i] >= points[j]:\n            less = False\n    if more or less:\n        count += 1\n\nprint(count)\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint main() {\n  int n, j = 0, i;\n  int a[1000];\n  scanf(\"%d\", &n);\n  for (i = 0; i < n; i++) {\n    scanf(\"%d\", &a[i]);\n  }\n  int b = a[0];\n  int c = a[0];\n  for (i = 0; i < n; i++) {\n    if (a[i] > b) {\n      j++;\n      b = a[i];\n    } else if (a[i] < c) {\n      j++;\n      c = a[i];\n    }\n  }\n  printf(\"%d\", j);\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "a=int(input())\ns=0\nb=[int(s) for s in input().split()]\nfor i in range(1, len(b)):\n\tmink=min(b[:i])\n\tmaxk=max(b[:i])\n\tif b[i]>maxk or b[i]<mink:\n\t\ts+=1\nprint(s)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nx,y,c=l[0],l[0],0\nfor i in range(n):\n    if(l[i]>x):\n        c=c+1\n        x=l[i]\n    elif(l[i]<y):\n        c=c+1\n        y=l[i]\nprint(c)\n"
        },
        {
            "language": 1,
            "solution": "\n\nraw_input()\nns = map(int, raw_input().split(' '))\n\n\nnmax, nmin = -1, -1\nres = 0\nfor n in ns:\n    if (nmin != -1 and n < nmin):\n        res += 1\n        nmin = n\n    elif (nmax != -1 and n > nmax):\n        res += 1\n        nmax = n\n    \n    if nmin == -1:\n        nmin = n\n    if nmax == -1:\n        nmax = n\n\n\nprint res\n\n"
        },
        {
            "language": 3,
            "solution": "\nn=int(input())\na=list(map(int,input().split()))\nma=a[0]\nmi=a[0]\nans=0\nfor i in range(1,n):\n\tif a[i]>ma:\n\t\tans+=1\n\t\tma=a[i]\n\tif a[i]<mi:\n\t\tans+=1\n\t\tmi=a[i]\nprint(ans)"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\npublic class A155 {\n    public static void main(String[] args)throws IOException{\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        int N = Integer.parseInt(br.readLine());\n        int[] score = new int[N];\n        String[] in = br.readLine().split(\" \");\n        for(int i=0;i<N;i++)\n            score[i]=Integer.parseInt(in[i]);\n        int best = score[0];\n        int worst = score[0];\n        int count=0;\n        for(int i=1;i<N;i++){\n            if(best<score[i]){\n                best = score[i];\n                count++;\n            }\n            if(worst>score[i]){\n                worst = score[i];\n                count++;\n            }\n        }\n        System.out.println(count);\n    }\n}\n"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\nx = map(int,raw_input().split())\nm=k=x[0]\nc=count=0\nfor i in range(n):\n    if(x[i]<m):\n        m = x[i]\n        c += 1\n    if(x[i]>k):\n        k = x[i]\n        count += 1\nprint(c+count)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nvar=[int(x) for x in input().split()]\nmini=var[0]\nmaxi=var[0]\ncount=0\nfor index in range(0,len(var)):\n\tif(var[index]<mini):\n\t\tcount+=1\n\t\tmini=var[index]\n\tif(var[index]>maxi):\n\t\tcount+=1\n\t\tmaxi=var[index]\nprint(count)\n"
        },
        {
            "language": 1,
            "solution": "n=input()\na=map(int,raw_input().split())\nmn=a[0]\nmx=a[0]\nc=0\nfor i in a:\n    if i>mx:\n        c=c+1\n        mx=i\n    elif i<mn:\n        c=c+1\n        mn=i\nprint c"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\ns=0\nfor i in range(1,n):\n    if max(a[:i]) < a[i] or min(a[:i]) > a[i]:\n        s+=1\nprint(s)\n\n\n##n = int(input())\n##p = list(map(int, input().split()))\n##print(sum(1 for i in range(1, n) if max(p[:i]) < p[i] or min(p[:i]) > p[i]))\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split(\" \")))\ntotal=0\nfor i in range(1,n):\n\tif l[i]>max(l[0:i]) or l[i]<min(l[0:i]):\n\t\ttotal=total+1\nprint(total)"
        },
        {
            "language": 4,
            "solution": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args){\n        Scanner in = new Scanner(System.in);\n        int n = in.nextInt();\n        int[] A = new int[n];\n        for (int i = 0; i < n; i++) A[i] = in.nextInt();\n        int out = 0, max = A[0], min = A[0];\n        for (int i = 1; i < n; i++) {\n            if (A[i] < min) {\n                out += 1;\n                min = A[i];\n            }\n            else if (A[i] > max) {\n                out += 1;\n                max = A[i];\n            }\n        }\n        System.out.println(out);\n\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nline2=[int(i) for i in input().split()]\ntotal=0\nline=[line2[0]]\nfor i in range(len(line2)):\n    if i>0:\n        if line2[i]>max(line) or line2[i]<min(line):\n            total=total+1\n            line.append(line2[i])\n            \nprint(total)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nlst = list(map(int, input().split()))\ncount = 0\nmini = lst[0]\nmaxi = lst[0]\nfor i in lst:\n    if i < mini:\n        mini = i\n        count += 1\n    elif i > maxi:\n        maxi = i\n        count += 1\nprint(count)"
        },
        {
            "language": 3,
            "solution": "a = int(input())\n\nl = list(map(int, input().split()))\n\ncounter = 0\n\nfor i in range(1,a):\n    subcounter_highest = 0\n    subcounter_lowest = 0\n    for a in range(0,i):\n        if l[i] > l[a]:\n            subcounter_highest = subcounter_highest + 1\n        elif l[i] < l[a]:\n            subcounter_lowest = subcounter_lowest + 1\n    if subcounter_highest == i or subcounter_lowest == i:\n        counter = counter + 1\n        \nprint(counter)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\narr = tuple(map(int,input().split()))\nma = arr[0] \nmi = arr[0]\nans = 0\nfor i in range(1,n):\n    if arr[i]>ma:\n        ans+=1\n        ma = arr[i]\n    if arr[i]<mi:\n        ans+=1\n        mi = arr[i]\nprint(ans)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nlt=list(map(int,input().split()))\ns=0\nfor i in range(1,n):\n    if lt[i]>max(lt[:i]) or lt[i]<min(lt[:i]):\n        s+=1\n        \nprint(s)\n    \n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl =[int(i) for i in input().split()]\nmi = ma = l[0]\nc = 0\nfor i in l:\n    if i < mi or i > ma:\n        c += 1\n        mi = min(i, mi)\n        ma = max(i, ma)\nprint(c)"
        },
        {
            "language": 3,
            "solution": "#!/usr/bin/python3\nn = input()\na = list(map(int, input().split(' ')))\nmn = mx = a[0]\nans = 0\nfor i in a:\n        tmp = i\n        if tmp < mn or tmp > mx:\n                ans = ans + 1\n        mn = min(mn, tmp)\n        mx = max(mx, tmp)\nprint(ans)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long int i, j, m, n, max, min, count = 0;\n  int a[1001], b[1001];\n  cin >> n;\n  for (i = 1; i <= n; i++) cin >> a[i];\n  max = a[1];\n  min = a[1];\n  for (i = 2, j = 0; i <= n; i++) {\n    if (a[i] > max) {\n      count++;\n      max = a[i];\n    }\n  }\n  for (i = 2, j = m; i <= n; i++) {\n    if (a[i] < min) {\n      count++;\n      min = a[i];\n    }\n  }\n  cout << count;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nstring = list(map(int, input().split()))\ncount = 0\nnew = []\nfor i in range(n):\n    new.append(string[i])\n    if i == 0:\n        count = 0\n        a = min(new)\n        b = max(new)\n    elif string[i] < a:\n        count += 1\n        a = string[i]\n    elif string[i] > b:\n        count +=1\n        b = string[i]\nprint(count)"
        },
        {
            "language": 3,
            "solution": "input()\nx = input().split()\nc=0\nhigh=low=int(x[0])\n\n\nfor i in x:\n    i=int(i)\n    c+=1 if (i>high or i<low) else 0\n    high=max(high,i)\n    low=min(low,i)\nprint(c)\n    \n    \n"
        },
        {
            "language": 3,
            "solution": "\"\"\"\nAuthor: Ove Bepari\n\n         _nnnn_                      \n        dGGGGMMb     ,''''''''''''''''''''''.\n       @p~qp~~qMb    | Promoting GNU/Linux  |\n       M|@||@) M|   _;......................'\n       @,----.JM| -'\n      JS^\\__/  qKL\n     dZP        qKRb\n    dZP          qKKb\n   fZP            SMMb\n   HZM            MMMM\n   FqM            MMMM\n __| \".        |\\dS\"qML\n |    `.       | `' \\Zq\n_)      \\.___.,|     .'\n\\____   )MMMMMM|   .'\n     `-'       `--' hjm\n\n\"\"\"\nn = int(input())\narr = list(map(int, input().split())) \n\nbest = arr[0]\nworst = arr[0]\n\nresult = 0\nfor i in range(1,n):\n    if arr[i] > best:\n        result += 1\n        best = arr[i]\n    elif arr[i] < worst:\n        result += 1\n        worst = arr[i]\n\nprint(result)\n"
        },
        {
            "language": 3,
            "solution": "\nn=int(input())\nl=list(map(int,input().split()))\nmaxx=l[0]\nminn=l[0]\ncnt=0\nfor i in range(1,n):\n    if(l[i]<minn):\n        cnt+=1\n        minn=l[i]\n    elif(l[i]>maxx):\n        cnt+=1\n        maxx=l[i]\nprint(cnt)\n\n    \n    \n\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nmax=a[0]\nmin=a[0]\nc=0\nfor i in a:\n    if(i<min):\n        min=i\n        c+=1\n    if(i>max):\n        max=i\n        c+=1\nprint(c)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=[int(x) for x in input().split(' ')]\ntime=0\nfor i in range(1,n):\n    if l[i]>max(l[:i]) or l[i]<min(l[:i]):\n        time+=1\nprint(time)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  scanf(\"%d\", &n);\n  int seq[2000];\n  int min = 100000, max = 0;\n  int ans = -1;\n  for (int i = 0; i < n; ++i) {\n    scanf(\"%d\", seq + i);\n    bool flag = 0;\n    if (seq[i] > max) {\n      max = seq[i];\n      flag = 1;\n      ans++;\n    }\n    if (seq[i] < min) {\n      min = seq[i];\n      if (!flag) {\n        ans++;\n      }\n    }\n  }\n  printf(\"%d\\n\", ans);\n}\n"
        },
        {
            "language": 4,
            "solution": "\n\nimport java.util.Scanner;\n\npublic class Tasks {\n\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        short n = in.nextShort(), p, a = 1, max = 0, min = 0;\n        if (n == 1) {\n            System.out.println(0);\n        } else if (n == 2) {\n            min = in.nextShort();\n            max=in.nextShort();\n            if(min== max)\n                System.out.println(0);\n            else \n                System.out.println(1);\n        } else {\n            for (short i = 1; i <= n; i++) {\n                p = in.nextShort();\n                if (i == 1) {\n                    max = p;\n                } else if (i == 2) {\n                    min = p;\n                    if (max < min) {\n                        min += max;\n                        max = (short) (min - max);\n                        min -= max;\n                    } else if (min == max) {\n                        a--;\n                    }\n                }\n                if (p > max) {\n                    a++;\n                    max = p;\n                } else if (p < min) {\n                    a++;\n                    min = p;\n                }\n            }\n            System.out.println(a);\n        }\n    }\n}\n"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\na = map(int, raw_input().split())\nans = 0\nfor i in range(1, n):\n    if a[i] < min(a[:i]) or a[i] > max(a[:i]):\n        ans += 1\nprint ans"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nm=mi=l[0]\nc=0\nfor i in range(n-1):\n    if l[i+1]>m:\n        m=l[i+1]\n        c=c+1\n    if l[i+1]<mi:\n        mi=l[i+1]\n        c=c+1\nprint(c)        "
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\nlista = map(int,raw_input().split())\npmax = lista[0]\npmin = lista[0]\ncount = 0\nfor e in xrange(1,n):\n\tif lista[e] > pmax:\n\t\tpmax = lista[e]\n\t\tcount += 1 \n\tif lista[e] < pmin:\n\t\tpmin = lista[e]\n\t\tcount += 1\nprint count"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nscores=list(map(int,input().split()))\nif len(scores)==1:\n    print(0)\nelse:\n    amazing=0\n    cur_max=scores[0]\n    cur_min=scores[0]\n    for i in range(1,len(scores)):\n        if scores[i]>cur_max:\n            amazing+=1\n            cur_max=scores[i]\n        if scores[i]<cur_min:\n            amazing+=1\n            cur_min=scores[i]\n    print(amazing)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nscores=[int(i) for i in input().split()]\nif n==1:\n    print(0)\nelif n==2:\n    if scores[0]==scores[1]:\n        print(0)\n    else:\n        print(1)\nelse:\n    mx=max(scores[0],scores[1])\n    mi=min(scores[0],scores[1])\n    if mx==mi:\n        num=0\n    else:\n        num=1\n    for i in scores:\n        if i>mx:\n            mx=i\n            num=num+1\n        if i<mi:\n            mi=i\n            num=num+1\n    print(num)        \n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  int a;\n  cin >> a;\n  int maxs = a;\n  int mins = a;\n  int ans = 0;\n  for (int i = 2; i <= n; i++) {\n    cin >> a;\n    if (a > maxs) {\n      ans++;\n      maxs = a;\n    }\n    if (a < mins) {\n      ans++;\n      mins = a;\n    }\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = [int(k) for k in input().split( )]\namaze = 0\nfor i in range (1,n) :\n    flagm = 1\n    for j in range(0,i) :\n        if l[i] <= l[j] :\n            flagm = 0\n            break\n    if flagm == 1 :\n        amaze += 1\nfor p in range(1,n):\n    flagn = 1\n    for q in range(0,p) :\n        if l[p] >= l[q] :\n            flagn = 0\n            break\n    if flagn == 1 :\n        amaze += 1\nprint(amaze)"
        },
        {
            "language": 3,
            "solution": "N = int(input())\nL = input()\nL = L.split()\nMenor= int(L[0])\nMayor= int(L[0])\nc = 0\nfor k in range (1,N):\n    if int(L[k])>Mayor:\n        c+=1\n        Mayor = int(L[k])\n    elif int(L[k])<Menor:\n        c+=1\n        Menor = int(L[k])\nprint(c)\n    "
        },
        {
            "language": 3,
            "solution": "n = int(input())\n\na_list = [int(x) for x in input().split()]\n\nans = 0\n\nfor i in range(1,n):\n    b = 0\n    s = 0\n    e = 0\n    for j in range(0,i):\n        if a_list[i] > a_list[j]:\n            b += 1\n        elif a_list[i] < a_list[j]:\n            s += 1\n        else:\n            e += 1\n    if e == 0:\n        if b == 0 or s == 0:\n            ans += 1\n            \nprint(str(ans))            \n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = list(map(int,input().split()))\nmx = l[0]\nmi = l[0]\namz = 0\nfor i in range(1,len(l)):\n    if(mx < l[i]):\n        mx = l[i]\n        amz += 1\n    elif(mi > l[i]):\n        mi = l[i]\n        amz += 1\nprint(amz)"
        },
        {
            "language": 3,
            "solution": "import sys\n\ndef input():    return sys.stdin.readline().strip()\ndef iinput():   return int(input())\ndef rinput():   return map(int, sys.stdin.readline().strip().split()) \ndef get_list(): return list(map(int, sys.stdin.readline().strip().split())) \n\n\nn=iinput()\nl = list(map(int,input().split()))\n# maxi=mini=[]\ncount=0\n\nfor i in range(1, len(l)):\n    j = 0\n    while(j<i and l[i]<l[j]):\n        j+=1\n    if (j==i):\n        count+=1\n\n    j = 0\n    while(j<i and l[i]>l[j]):\n        j+=1\n    if (j==i):\n        count+=1       \n\n        \nprint(count)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = [int(i) for i in input().split()]\n\nb = s = l[0]\nc = 0\nfor i in range(1, n):\n    if l[i] > b:\n        c += 1\n        b = l[i]\n    elif l[i] < s:\n        c += 1\n        s = l[i]\nprint(c)"
        },
        {
            "language": 1,
            "solution": "#coding=utf-8\nimport re\nimport sys\n\n\ndef factorial(n):\n    if not n:\n        return 1\n    else:\n        return reduce(lambda x, y: x * y, xrange(1, n + 1))\n\n\ndef fibonacci():\n    a, b = 1, 1\n    while True:\n        yield a\n        a, b = b, a + b\n\n\ndef is_pandigital(num, s=9):\n    n = str(num)\n    return len(n) == s and not '1234567890'[:s].strip(n)\n\n\ndef is_prime(n):\n    if n <= 1:\n        return False\n    for i in xrange(2, int(n ** 0.5) + 1):\n        if n % i == 0:\n            return False\n    return True\n\n\ndef prime_list(n):\n    begin_list = [0, 0] + [1] * (n - 1)\n    for i in xrange(2, int(n ** 0.5) + 1):\n        if begin_list[i]:\n            for j in xrange(i, n / i + 1):\n                begin_list[j * i] = 0\n    return [i for i in xrange(len(begin_list)) if begin_list[i] == 1]\n\n\ndef sum_of_divisors_of_num(number):\n    result = 1\n    for x in xrange(2, int(number ** 0.5) + 1):\n        if number % x == 0:\n            result += x\n            if x != number / x:\n                result += number / x\n    return result\n\n\ndef latest_bigger_int(num):\n    if float(num) < 0:\n        return 0\n    elif num == int(num):\n        return int(num)\n    else:\n        return int(num) + 1\n\n\ndef gcd(first, second):\n    if (first < second):\n        first, second = second, first\n    while second != 0:\n        first, second = second, first % second\n    return first\n\n\ndef main():\n    n=input()\n    if n==1:\n        print 0\n    else:\n        arr=map(int,raw_input().split())\n        result=0\n        for i in xrange(1,n):\n            if min(arr[:i])<=arr[i]<=max(arr[:i]):\n                continue\n            result+=1\n        print result\n\n\n\n\nif __name__ == '__main__':\n    main()\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\n\npoints = [int(i) for i in input().split()]\n\ncount = 0\nbest = points[0]\nworst = points[0]\nfor i in range(1, n):\n    if points[i]>best:\n        count += 1\n        best = points[i]\n    elif points[i]<worst:\n        count += 1\n        worst = points[i] \n\nprint(count)"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class ProContest {\n    public static void main(String[] args) {\n        Scanner input = new Scanner(System.in);\n        int contests = input.nextInt();\n        int[] arr = new int[contests];\n        for (int i = 0; i < arr.length; i++) {\n            arr[i] = input.nextInt();\n        }\n\n        int biggest = arr[0];\n        int smallest = arr[0];\n        int result = 0;\n        for (int i = 1; i < arr.length; i++) {\n            int temp = arr[i];\n            if (temp > arr[i - 1] && temp > biggest) {\n                biggest = temp;\n                result++;\n            } else if (temp <= arr[i - 1] && temp < smallest) {\n                smallest = temp;\n                result++;\n            }\n        }\n        System.out.println(result);\n        input.close();\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\nimport java.math.BigInteger;\npublic class Main {\n    static long mod = (long) Math.pow(10, 9) + 7;\n    static FastScanner f = new FastScanner(System.in);\n    static Scanner S = new Scanner(System.in);\n    public static void main(String[] args) {\n        int n = f.nextInt();\n        int arr[] = inpint(n);\n        int max = arr[0];\n        int min = max;\n        int c = 0;\n        for(int i = 1; i < n; i++) {\n            if(arr[i] > max) {\n                c++;\n                max = arr[i];\n            }\n            else if(arr[i] < min) {\n                c++;\n                min = arr[i];\n            }\n        }\n        pn(c);\n    }\n/******************************END OF MAIN PROGRAM*******************************************/\n    // Fast Scanner Alternative of Scanner \n    // Uses Implementation of BufferedReader Class\n    public static class FastScanner {\n        BufferedReader br;\n        StringTokenizer st;\n        FastScanner(InputStream stream) {\n            try {\n                br = new BufferedReader(new\n                    InputStreamReader(stream));\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n        }\n        String next() {\n            while (st == null || !st.hasMoreTokens()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n    }\n    \n    // Print in console\n    static void pn(Object o){System.out.println(o);}\n    static void p(Object o){System.out.print(o);}\n    static void pni(Object o){System.out.println(o);System.out.flush();}\n\n    //GCD of two integers\n    static int gcd(int a, int b) {\n        if(b == 0) return a;\n        else {\n            return gcd(b, a % b);\n        }\n    }\n    // Input int array\n    static int[] inpint(int n) {\n        int arr[] = new int[n];\n        for(int i = 0; i < n; i++) \n            arr[i] = f.nextInt();\n        return arr;\n    }\n\n    //Input long array\n    static long[] inplong(int n) {\n        long arr[] = new long[n];\n        for(int i = 0; i < n; i++) \n            arr[i] = f.nextLong();\n        return arr;\n    }\n\n    // GCD of a array of integers\n    static int gcdarray(int a[]) {\n        int res = a[0];\n        for(int i = 1; i < a.length; i++) {\n            res = gcd(a[i] , res);\n        }\n        return res;\n    }\n    \n    // Return boolean sieve of first n prime nos.\n    static boolean[] sieve(int n) {\n        boolean isprime[] = new boolean[n + 1];\n        for(int i = 0; i <= n;++i) {\n            isprime[i] = true;\n        }\n        isprime[0] = false;\n        isprime[1] = false;\n        for(int i = 2; i * i <= n; ++i) {\n             if(isprime[i] == true) {               \n                 for(int j = i * i; j <= n;j += i)\n                     isprime[j] = false;\n            }\n        }\n        return isprime;\n    }\n\n    // Return HashSet of factors of a number\n    static HashSet<Long> factors(long n) {\n        HashSet<Long> hs = new HashSet<Long>();\n        for(long i = 1; i <= (long)Math.sqrt(n); i++) {\n            if(n % i == 0) {\n                hs.add(i);\n                hs.add(n / i);\n            }\n        }\n        return hs;\n    }\n\n    //Is n prime ?\n    static boolean isPrime(int n) {\n        if(n == 1) return false;\n        int i = 2;\n        while((i * i) <= n) {\n            if(n % i == 0) return false;\n            i += 1;\n        }\n        return true;\n    }\n\n    // Gives next (Lexicographical) permutation of String\n    public static String nextPerm(String s) {\n        StringBuffer sb = new StringBuffer(s);\n        String ans = \"No Successor\";\n        int ii = -1 , jj = -1;\n        for(int i = 0; i < s.length() - 1; i++) {\n            if((int)s.charAt(i) < (int)s.charAt(i + 1))\n                ii = i;\n        }\n        for(int j = ii + 1; j < s.length() && j != 0; j++) {\n            if((int)s.charAt(j) > (int)s.charAt(ii))\n                jj = j;\n        }\n        if(ii == -1)\n            return ans;\n        else {\n        char tempi = s.charAt(ii);\n        char tempj = s.charAt(jj);\n        sb.setCharAt(jj , tempi);\n        sb.setCharAt(ii , tempj);\n        StringBuffer sub = new StringBuffer(sb.substring(ii + 1));\n        sub.reverse();\n        int v = sub.length();\n        while(v-- > 0) {\n            sb.deleteCharAt(sb.length() - 1);\n        }\n        sb.append(sub);\n        ans = sb.toString();\n        return ans;\n        }\n    }\n}"
        },
        {
            "language": 1,
            "solution": "t=int(input())\ncount=0\nx=list(raw_input().split())\nmini,maxi=int(x[0]),int(x[0])\nfor i in range(t):\n\tif int(x[i])<mini:\n\t\tcount+=1\n\t\tmini=int(x[i])\n\telif int(x[i])>maxi:\n\t\tcount+=1\n\t\tmaxi=int(x[i])\nprint count\n"
        },
        {
            "language": 3,
            "solution": "n = input()\ncontest = [int(contest) for contest in input().split()]\nmmin = mmax = contest[0]\namz = 0\nfor i in contest:\n    if i > mmax:\n        amz += 1\n        mmax = i\n    if i < mmin:\n        amz += 1\n        mmin = i\nprint(amz)"
        },
        {
            "language": 3,
            "solution": "num_attempts = input()\nargs = input()\n\nargs = args.split()\narray = [int(i) for i in args]\n\n    \namazing_count = 0\n\nfor i in range(1, len(array)):\n    short_array = array[:i]\n\n    if array[i] > max(short_array) or array[i] < min(short_array):\n        amazing_count += 1\n\nprint(amazing_count)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[int(j) for j in input().split()]\nl=list([])\nl.append(a[0])\n\njieguo=0\nfor i in range(1,n):\n\n    l.sort()\n    if a[i]>l[-1] or a[i]<l[0]:\n        l.append(a[i])\n\n        jieguo=jieguo+1\n    else:\n        l.append(a[i])\n\n\nprint(jieguo)\n"
        },
        {
            "language": 3,
            "solution": "\nn = int(input())\nnums = [int(x) for x in input().split()]\nlow = 10001\nhi = -1\ncount = -2\nfor i in range(n):\n    if nums[i] > hi:\n        hi = nums[i]\n        count += 1\n    if nums[i] < low:\n        low = nums[i]\n        count += 1\nprint(count)"
        },
        {
            "language": 3,
            "solution": "# https://codeforces.com/problemset/problem/155/A\n\nn = int(input())\npoints = list(map(int, input().split()))\n\n_min = points[0]\n_max = points[0]\n\ncount = 0\n\nfor i in points:\n    if _max < i:\n        count += 1\n        _max = i\n    if _min > i:\n        count += 1\n        _min = i\n\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\npoints = list(map(int, input().split()))\nn = 0\nmin = max = points[0]\nfor i in points:\n    if i >max:\n        max = i\n        n += 1\n    if i < min:\n        min = i\n        n +=1\nprint(n)"
        },
        {
            "language": 3,
            "solution": "n = input()\nstr1 = input()\nlist1 = [int(k) for k in str1.split()]\nmin = list1[0]\nmax = list1[0]\nN = 0\nfor i in range(1,len(list1)):\n    if list1[i] < min:\n        min = list1[i]\n        N = N + 1\n    elif list1[i] > max:\n        max = list1[i]\n        N = N + 1\nprint(N)"
        },
        {
            "language": 3,
            "solution": "#!/usr/bin/env python\nfrom __future__ import division, print_function\n\nimport os\nimport sys\nfrom io import BytesIO, IOBase\n\nif sys.version_info[0] < 3:\n    from __builtin__ import xrange as range\n    from future_builtins import ascii, filter, hex, map, oct, zip\n\nfrom math import sqrt, floor, factorial, gcd\nfrom collections import deque, Counter, defaultdict\n\n\n# region fastio\n\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\ndef print(*args, **kwargs):\n    \"\"\"Prints the values to a stream, or to sys.stdout by default.\"\"\"\n    sep, file = kwargs.pop(\"sep\", \" \"), kwargs.pop(\"file\", sys.stdout)\n    at_start = True\n    for x in args:\n        if not at_start:\n            file.write(sep)\n        file.write(str(x))\n        at_start = False\n    file.write(kwargs.pop(\"end\", \"\\n\"))\n    if kwargs.pop(\"flush\", False):\n        file.flush()\n\n\nif sys.version_info[0] < 3:\n    sys.stdin, sys.stdout = FastIO(sys.stdin), FastIO(sys.stdout)\nelse:\n    sys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\n\n\nfrom collections import deque\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\nread = lambda: list(map(int, input().split(\" \")))\n# endregion\n\ndef func(arr):\n    return(sum([arr[i] for i in range(0, len(arr), 2)]))\n\ndef solve():\n    n = int(input()); arr = read()\n    c = 0; mac = mic = arr[0]\n    for i in range(1, n):\n        if arr[i] > mac:c+=1;mac=arr[i]\n        elif arr[i]<mic:c+= 1; mic=arr[i]\n    print(c)\n\n\n\n\n\n\n\n\nif __name__ == \"__main__\":\n\tsolve()"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nres = list(map(int,input().strip().split(' ')))\nbest = res[0]\nworst= res[0]\ncount = 0\nfor i in range(1,len(res)):\n    if res[i] > best or res[i] < worst:\n        count+=1\n        if res[i] > best:\n            best = res[i]\n        else:\n            worst = res[i]\nprint(count)"
        },
        {
            "language": 1,
            "solution": "tot = input()\n#print tot\n\na = map(int,raw_input().split())\n#print a\n\n\n\nx = 0\ni = 0\nminf = a[0]\nmaxf = a[0]\n\n\nfor i in a:\n    if i > maxf:\n        maxf = i;\n        x += 1\n    if i < minf:\n        minf = i;\n        x += 1\nprint (x)\n    \n"
        },
        {
            "language": 1,
            "solution": "#!/usr/bin/python\n\na=int(raw_input())\nb=raw_input().split(' ')\nb=map(int, b)\n\nc=b[0]\nd=b[0]\ni=0\n\nfor j in range(1,a):\n\t#condition to check whether it is amazing performance or not.\n\t#amazing performance is when no. is highest or lowest for no. received earlier.\n\tif b[j]>c:\n\t\tc=b[j]\n\t\ti+=1\n\telif b[j]<d:\n\t\td=b[j]\n\t\ti+=1\n\nprint i"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  int ar[n];\n  int cnt = 0;\n  for (int i = 0; i < n; i++) cin >> ar[i];\n  for (int i = 1; i < n; i++) {\n    bool mn = 1, mx = 1;\n    for (int j = i - 1; j >= 0; j--) {\n      if (ar[i] <= ar[j]) mx = 0;\n      if (ar[i] >= ar[j]) mn = 0;\n    }\n    if (mn == 1 || mx == 1) cnt++;\n  }\n  cout << cnt << endl;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\npoints = [int(x) for x in input().split()]\namazing = 0\nbest = points[0]\nworst = points[0]\nfor i in range(1, len(points)):\n    if points[i] > best:\n        best = points[i]\n        amazing += 1\n    elif points[i] < worst:\n        worst = points[i]\n        amazing += 1\nprint(amazing)"
        },
        {
            "language": 3,
            "solution": "def username(lst):\n    small=large=lst[0]\n    amng=0\n    for i in lst[1:]:\n        if i<small:\n            small=i\n            amng+=1\n        if i>large:\n            large=i\n            amng+=1\n    return amng\nn=int(input())\nlst=list(map(int,input().split()))\nprint(username(lst))"
        },
        {
            "language": 3,
            "solution": "num = int(input())\ncontests = list(map(int, input().split(\" \")))\ncount = 0\nwhile len(contests) > 1:\n  currentNum = contests.pop()\n  if currentNum > max(contests) or currentNum < min(contests):\n    count+= 1\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nL = list(map(int, input().split()))\nt = d = ans = 0\nfor i in range(1, n):\n    for j in range(i):\n        if L[i] > L[j]:\n            t += 1\n        elif L[i] < L[j]:\n            d += 1\n    if t == i or d == i:\n        ans += 1\n    t = d = 0\nprint(ans)"
        },
        {
            "language": 1,
            "solution": "n=int(raw_input())\na=[int(i) for i in raw_input().split()]\nmini=a[0]\nmaxi=a[0]\ncount=0\nfor i in range(1,len(a)):\n    if a[i]>maxi:\n        count+=1\n        maxi=a[i]\n    elif a[i]<mini:\n        count+=1\n        mini=a[i]\nprint count"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nm=l[0]\nM=l[0]\na=0\nfor x in range(1,len(l)):\n    if l[x]>M:\n        M=l[x]\n        a+=1\n    if l[x]<m:\n        m=l[x]\n        a+=1\nprint(a)\n\n    \n"
        },
        {
            "language": 1,
            "solution": "#Question Name --> I_love_%username%\nx = input()\ny = map(int,list(raw_input().split(\" \")))\nc = 0\nfor i in range(1,x): \n\tif(y[i] < min(y[:i]) or y[i] > max(y[:i])):\n\t\tc = c+1\nprint c"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nm=input().split()\nL=[]\na=0\nfor i in range(0,n):\n    L.append(int(m[i]))\nfor t in range(1,n):\n    N=L[:t]\n    if L[t]<min(N) or L[t]>max(N):\n        a=a+1\nprint(a)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int, input().split()))\nmaxx=a[0]\nminn=a[0]\ncount=0\nfor i in range(1, n):\n    if a[i]>maxx:\n        count+=1\n        maxx=a[i]\n    if a[i]<minn:\n        count+=1\n        minn=a[i]\nprint(count)\n"
        },
        {
            "language": 3,
            "solution": "count=0\n\n\n\nn=int(input())\nl=list(map(int,input().split()))\nmini=l[0]\nmaxi=l[0]\n\nfor i in range(1,n):\n    if (l[i]>maxi):\n        maxi=l[i]\n        count+=1\n    if(l[i]<mini):\n        mini=l[i]\n        count+=1\nprint(count)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\ncnt=0\nli=list(map(int,input().split()))\nfor i in range(1,n):\n    if li[i]>max(li[:i]) or li[i]<min(li[:i]):\n        cnt+=1\nprint(cnt)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\na_max = a[0]; a_min = a[0]\ns = 0\nfor i in range(1, n):\n    if a[i] > a_max:\n        a_max = a[i] \n        s += 1\n    elif a[i] < a_min:\n        a_min = a[i]\n        s += 1\nprint(s)\n    "
        },
        {
            "language": 3,
            "solution": "n = input()\na = [int(x) for x in input().split()]\ns = 0\nfor i in range(1,len(a)):\n    if max(a[0:i]) < a[i] or min(a[0:i]) > a[i]:\n        s += 1\nprint(s)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nu = 0\nz = list(map(int, input().split()))\nfor i in range(1,n):\n    if z[i]>max(z[:i]):\n        u+=1\n    if z[i]<min(z[:i]):\n        u+=1\nprint(u)"
        },
        {
            "language": 1,
            "solution": "n = input()\na = map(int,raw_input().split())\nm,b = 0,[]\nfor x in a:\n    b.append(x)\n    if b[-1] == max(b) and b.count(x) == 1 and len(b) > 1:\n        m += 1\n    elif b[-1] == min(b) and b.count(x) == 1 and len(b) > 1:\n        m += 1\nprint m"
        },
        {
            "language": 3,
            "solution": "# Je d\u00e9teste que j'aime que je d\u00e9teste\n\nn = int(input())\narr = list(map(int, input().split()))\ntop = low = arr[0]\nr, arr = 0, arr[1:]\nwhile arr:\n    if arr[0] > top:\n        r += 1\n        top = arr[0]\n    if arr[0] < low:\n        r += 1\n        low = arr[0]\n    arr = arr[1:]\nprint(r)\n        \n"
        },
        {
            "language": 3,
            "solution": "_ = input()\nsc = [int(x) for x in input().split()]\n\ncur_max = sc[0]\ncur_min = sc[0]\n\nawe = 0\nfor s in sc[1:]:\n\tif s > cur_max:\n\t\tawe += 1\n\t\tcur_max = s\n\tif s < cur_min:\n\t\tawe += 1\n\t\tcur_min = s\n\nprint (awe)"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class Test {\n\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        int n = in.nextInt();\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = in.nextInt();\n        }\n        int min = Integer.MAX_VALUE, max = 0, c = 0;\n        for (int i = 1; i < n; i++) {\n            boolean isMin = true, isMax = true;\n            for (int j = 0; j < i; j++) {\n                if (a[j] >= a[i]) {\n                    isMax = false;\n                }\n                if (a[j] <= a[i]) {\n                    isMin = false;\n                }\n            }\n            if (isMax || isMin) {\n                c++;\n            }\n        }\n        System.out.println(c);\n    }\n}"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\nset = 0\nmax = a[0]\nmin = a[0]\nfor i in range(1,len(a)):\n    if a[i]>max:\n        max = a[i]\n        set +=1\n    elif a[i]<min:\n        min = a[i]\n        set +=1\nprint(set)\n    \n    \n"
        },
        {
            "language": 3,
            "solution": "n = int(input().strip())\nl = [int(x) for x in input().split()]\npoints = l[0]\nmini, maxi, amazing = points, points, 0\nfor point in l[1:]:    \n    if point < mini:\n        mini = point\n        amazing+=1    \n    if point > maxi:\n        maxi = point\n        amazing+=1    \nprint(amazing)"
        },
        {
            "language": 3,
            "solution": "ii     =lambda: int(input())\nsi     =lambda: input()\nlii    =lambda: list(map(int,input().split()))\n\nn=ii()\narr=lii()\ncount=0\nfor i in range(1,n):\n    if arr[i]>max(arr[:i]) or arr[i]<min(arr[:i]):\n        count+=1\nprint(count)\n        \n        \n    \n"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.Scanner;\n\npublic class code155A {\n\n\tpublic static void main(String[] args) {\n\t\tScanner in = new Scanner(System.in);\n\t\tint n = in.nextInt();\n\t\tint max = in.nextInt();\n\t\tint min = max;\n\t\tint amazing = 0;\n\t\twhile(--n > 0){\n\t\t\tint point = in.nextInt();\n\t\t\tif( point > max){\n\t\t\t\tamazing++;\n\t\t\t\tmax = point;\n \t\t\t} \n\t\t\tif(point < min){\n\t\t\t\tamazing++;\n\t\t\t\tmin = point;\n \t\t\t}\n\t\t \n\t\t}\t\t\n\t \n\t\tSystem.out.println(amazing);\n\t}\n}\n"
        },
        {
            "language": 3,
            "solution": "a=int(input())\nb=list(map(int,input().split()))\nx=int(1)\nm=b[0]\nn=b[0]\nt=[]\nt.append(b[0])\nk=int(0)\nwhile x<a:\n    if b[x]>m or b[x]<n:\n        k=k+1\n    t.append(b[x])\n    m=max(t)\n    n=min(t)\n    x=x+1\nprint(k)"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\np = map(int, raw_input().split())\ns = 0\na = b = p[0]\nfor i  in range(1,n):\n    if p[i]>a:\n        s+=1\n        a=p[i]\n    if p[i]<b:\n        s+=1\n        b=p[i]\nprint s"
        },
        {
            "language": 3,
            "solution": "import sys\nx,*t = map(int, sys.stdin.read().strip().split('\\n')[1].split())\nmn = mx = x\nc = 0\nfor i in t:\n    if i > mx:\n        mx = i\n        c += 1\n    elif i < mn:\n        mn = i\n        c += 1\nprint(c)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\npoints = list(map(int, input().split()))\n\ncounter = 0\n\nma, mi = points[0], points[0]\n\nfor i in range(1, n):\n    if ma < points[i]:\n        counter += 1\n        ma = points[i]\n    elif mi > points[i]:\n        counter += 1\n        mi = points[i]\n\nprint(counter)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\np = [int(x) for x in input().split()]\n\nout, lastmax, lastmin = 0, 0, 0\n\nfor i in range(n):\n    if p[i] > p[lastmax]:\n        lastmax = i\n        out += 1\n        continue\n    if p[i] < p[lastmin]:\n        lastmin = i\n        out += 1\n        continue\n\nprint(out)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\ns=list(map(int,input().split())) \nm=s[0]\na=s[0]\nl=0\nfor i in range(n):\n    if(s[i]>m):\n        m=s[i]\n        l+=1\n    if(s[i]<a):\n        a=s[i]\n        l+=1\nprint(l)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\namz=0\nfor i in range(1,n):\n    c=l[0:i+1]\n    if(max(c)==l[i] or min(c)==l[i]):\n        if max(c) not in l[0:i]:\n            amz+=1\n        if min(c) not in l[0:i]:\n            amz+=1\nprint(amz)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\ns = 0\nmin = -1\nmax = -1\ntar = -2\nfor i in range(len(a)):\n    for j in range(i):\n        if a[i] > a[j]:\n            max = a[i]\n        if a[i] < a[j]:\n            min = a[i]\n        if a[i] == a[j]:\n            tar = a[i]\n    if min == max or tar == min or tar == max:\n        s += 0\n    else:\n        s += 1\n    tar = -2\nprint(s)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nb=l[0]\nw=l[0]\na=0\nfor i in range(1,n):\n    if(b<l[i]):\n        b=l[i]\n        a+=1\n    if(w>l[i]):\n        w=l[i]\n        a+=1\nprint(a)\n\n"
        },
        {
            "language": 3,
            "solution": "y = int(input())\nmass = list(map(int, input().split()))\nmin = mass[0]\nmax = mass[0]\nscore = 0\nfor i in range(1, y):\n    if mass[i] > max:\n        max = mass[i]\n        score += 1\n    elif mass[i] < min:\n        min = mass[i]\n        score += 1\nprint(score)"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\nimport java.io.IOException;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n *\n * @author Mirio\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        FReader in = new FReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskA solver = new TaskA();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class TaskA {\n        public void solve(int testNumber, FReader in, PrintWriter out) {\n            int n = in.nextInt();\n            int min = (int) 2e5, max = -(int) 2e5;\n            int ans = 0;\n\n            for(int i = 0; i < n; ++i) {\n                int p = in.nextInt();\n                if(p > max)\n                    ++ans;\n                else if(p < min)\n                    ++ans;\n\n                min = Math.min(min, p);\n                max = Math.max(max, p);\n            }\n\n            out.print(ans - 1);\n        }\n\n    }\n\n    static class FReader {\n        private BufferedReader  r;\n        private String          line;\n        private StringTokenizer st;\n        private String          token;\n\n        public FReader() {\n            this(System.in);\n        }\n\n        public FReader(InputStream i) {\n            r = new BufferedReader(new InputStreamReader(i));\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(nextToken());\n        }\n\n        private String peekToken() {\n            if(token == null)\n                try {\n                    while(st == null || !st.hasMoreTokens()) {\n                        line = r.readLine();\n                        if(line == null) return null;\n                        st = new StringTokenizer(line);\n                    }\n                    token = st.nextToken();\n                } catch(IOException e) { }\n            return token;\n        }\n\n        private String nextToken() {\n            String ans = peekToken();\n            token = null;\n            return ans;\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=[]\nl=list(map(int,input().split()))\nc=0\nf=0\nf2=0\nfor i in range(1,n):\n    for j in range(0,i):\n        f=0\n        if (not(l[i]>l[j])):\n            f=1\n            break\n    for j in range(0,i):\n        f2=0\n        if (not(l[i]<l[j])):\n            f2=1\n            break\n            \n    if f==0 or f2==0:\n        c+=1\nprint(c)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nmax = None\nmin = None\nresult = 0\nscores = map(int, input().split(\" \"))\nfor data in scores:\n    if min == None or max == None:\n        min = data\n        max = data\n    elif data > max:\n        result = result + 1\n        max = data\n    elif data < min:\n        result = result + 1\n        min = data\nprint(result)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\ns=[int(x) for x in input().split()]\ncount=0\nfor i in range(1,n):\n    if s[i]>max(s[:i]) or s[i]<min(s[:i]):\n        count+=1\nprint(count)"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\nscores = map(int, raw_input().split())\namazing = 0\ncur_min = scores[0]\ncur_max = scores[0]\nfor i in scores:\n\tif i > cur_max:\n\t\tamazing += 1\n\t\tcur_max = i\n\tif i < cur_min:\n\t\tamazing += 1\n\t\tcur_min = i\n\nprint amazing"
        },
        {
            "language": 3,
            "solution": "t=int(input())\ns=input().split()\ncount=0\nb=c=None\nfor w in s:\n    i=int(w)\n    if b is None or i>b:\n        b=i\n        count=count+1\n    if c is None or i<c:\n        c=i\n        count=count+1\nprint(count-2)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  vector<int> scores;\n  int performances = 0;\n  for (int i = 0; i < n; i++) {\n    int x;\n    cin >> x;\n    int min = 99999;\n    int max = -1;\n    for (int j = 0; j < scores.size(); j++) {\n      if (scores[j] < min) {\n        min = scores[j];\n      }\n      if (scores[j] > max) {\n        max = scores[j];\n      }\n    }\n    if (i > 0) {\n      if (x > max || x < min) {\n        performances++;\n      }\n    }\n    scores.push_back(x);\n  }\n  cout << performances << endl;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "i=int(input())\nlst=list(map(int,input().strip().split()))\nmn=lst[0]\nmx=lst[0]\nn=len(lst)\nres=0\nfor j in range(1,n):\n    if lst[j]<mn:\n        res+=1\n        mn=lst[j]\n    elif lst[j]>mx:\n        res+=1\n        mx=lst[j]\nprint(res)"
        },
        {
            "language": 3,
            "solution": "a = int(input())\nar = list(map(int, input().split()))\nmaxx, minn = ar[0], ar[0]\nrez = 0\nfor i in ar:\n    if i < minn:\n        minn = i\n        rez += 1\n    elif i > maxx:\n        maxx = i\n        rez += 1\nprint(rez)\n"
        },
        {
            "language": 3,
            "solution": "\ndef main():\n    n = input()\n    results = list(map(int, input().split()))\n\n    max_result = min_result = results[0]\n    results.pop(0)\n    \n    wonderful_results = 0\n    \n    for result in results:\n        if result > max_result:\n            max_result = result\n        elif result < min_result:\n            min_result = result\n        else:\n            continue\n        wonderful_results += 1\n        \n    print(wonderful_results)\n\n\nmain()"
        },
        {
            "language": 3,
            "solution": "a = int(input())\ns = input().split()\nfor i in range(a):\n        s[i]=int(s[i])\nmaxpoint=s[0]\nminpoint=s[0]\nres=0\nfor i in range(1,a):\n        if s[i]> maxpoint:\n                res+=1\n                maxpoint=s[i]\n        if s[i]< minpoint:\n                res+=1\n                minpoint=s[i]\nprint(res)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\npoints = list(map(int,input().split(' ')))\n\nmin_points = max_points = points[0]\n\namazing = 0\nfor point in points[1:]:\n    if point < min_points or point > max_points:\n        amazing += 1\n    min_points = min(point, min_points)\n    max_points = max(point, max_points)\n        \nprint(amazing)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\nmaxEle = a[0]\nminEle = a[0]\nres = 0\nfor i in range(1, n):\n    if a[i] > maxEle:\n        maxEle = a[i]\n        res += 1\n    if a[i] < minEle:\n        minEle = a[i]\n        res += 1\nprint(res)\n"
        },
        {
            "language": 3,
            "solution": "# n = int(input())\n# a = list(map(int, input().split()))\n# p = 0\n# k = 0\n#\n# for i in a:\n#     p += i\n#     if p < 0:\n#         k += 1\n#         p = 0\n#  print(k)\nn = int(input())\np = list(map(int, input().split()))\nb = p[0]\nv = p[0]\nc = 0\nfor i in range(1, n):\n    if b < p[i]:\n        b = p[i]\n        c += 1\n    elif v > p[i]:\n        v = p[i]\n        c += 1\nprint(c)\n"
        },
        {
            "language": 3,
            "solution": "\n\ndef solve():\n    n = int(input())\n    m = [int(s) for s in input().split()]\n    max_m = m[0]\n    min_m = m[0]\n    ans = 0\n    for i in range(1, n):\n        if m[i] > max_m:\n            ans += 1\n            max_m = m[i]\n        if m[i] < min_m:\n            ans += 1\n            min_m = m[i]\n    print(ans)\n\n\nif __name__ == \"__main__\":\n    solve()"
        },
        {
            "language": 3,
            "solution": "from sys import stdin\nr = [[int(y) for y in x.rstrip().split()] for x in stdin.readlines()][1]\nr_max = r_min = r[0]\ns = 0\nfor x in r[1:]:\n    if x<r_min:\n        s+=1\n        r_min = x\n    elif x>r_max:\n        s+=1\n        r_max = x\nprint(s)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=[int(item) for item in input().split()]\nmi=l[0]\nma=l[0]\nc=0\nfor i in range(1,n):\n    if(l[i]<mi):\n        mi=l[i]\n        c=c+1\n    if(l[i]>ma):\n        ma=l[i]\n        c=c+1\nprint(c)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\npoints = [int(x) for x in input().split()]\nmin = points[0]\nmax = points[0]\n\namazing = 0\nfor x in range(1, n):\n    if points[x] > max:\n        max = points[x]\n        amazing += 1\n        continue\n    if points[x] < min:\n        min = points[x]\n        amazing += 1\n        continue\n\nprint(amazing)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  int arr[n];\n  for (int i = 0; i < n; i++) {\n    cin >> arr[i];\n  }\n  int max = arr[0];\n  int min = arr[0];\n  int cnt = 0;\n  for (int i = 1; i < n; i++) {\n    if (arr[i] > max) {\n      cnt++;\n      max = arr[i];\n    } else if (arr[i] < min) {\n      cnt++;\n      min = arr[i];\n    }\n  }\n  cout << cnt;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\ng=list()\ng.append(l[0])\ncount=0\nfor i in range(1,len(l)):\n    maxuntil=max(g)\n    minuntil=min(g)\n    g.append(l[i])\n    if l[i]>maxuntil or l[i]<minuntil:\n        count+=1\nprint(count)"
        },
        {
            "language": 1,
            "solution": "def solve(scor):\n    smallest = largest = scor[0]\n    amazing = 0\n    for score in scor[1:]:\n        if(score < smallest):\n            smallest = score\n            amazing+=1\n        if(score > largest):\n            largest = score\n            amazing+=1\n    return amazing\n\nif __name__ == \"__main__\":\n    n = int(input())\n    scor = map(int,raw_input().split(\" \"))\n    print solve(scor)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nx=[int(i) for i in input().split()]\nmax=min=x[0]\na=0\nfor i in range(1,n):\n    if x[i]>max:\n        max=x[i]\n        a+=1\n    if x[i]<min:\n        min=x[i]\n        a+=1\nprint(a)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  int arr[n];\n  for (int i = 0; i < n; i++) cin >> arr[i];\n  int c = 0;\n  int maxsofar = arr[0];\n  int minsofar = arr[0];\n  for (int i = 1; i < n; i++) {\n    if (arr[i] > maxsofar)\n      c++;\n    else if (arr[i] < minsofar)\n      c++;\n    maxsofar = max(maxsofar, arr[i]);\n    minsofar = min(minsofar, arr[i]);\n  }\n  cout << c << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int ma = -1;\n  int mi = -1;\n  int n;\n  cin >> n;\n  int k;\n  cin >> k;\n  ma = k;\n  mi = k;\n  int sum = 0;\n  for (int i = 1; i < n; i++) {\n    cin >> k;\n    if (k > ma) {\n      sum++;\n      ma = k;\n    }\n    if (k < mi) {\n      sum++;\n      mi = k;\n    }\n  }\n  cout << sum << endl;\n}\n"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\na = map(int, raw_input().split())\nans = 0\nfor i in range(1, n):\n\tif min(a[:i]) > a[i] or max(a[:i]) < a[i]:\n\t\tans += 1\nprint ans"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nscores = list(map(int, input().split()))\nmin = 0\nmax = 0\ncount = 0\nfor i in range(n):\n    if i == 0:\n        min = scores[i]\n        max = scores[i]\n    else:\n        if scores[i] > max:\n            max = scores[i]\n            count += 1\n        elif scores[i] < min:\n            min = scores[i]\n            count += 1\nprint(count)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nA = list(map(int, input().split()))\nmax_num = A[0]\nmin_num = A[0]\nans = 0\nfor i in range(1, n):\n    if A[i] > max_num:\n        ans += 1\n        max_num = A[i]\n    elif A[i] < min_num:\n        ans += 1\n        min_num = A[i]\nprint(ans)\n"
        },
        {
            "language": 1,
            "solution": "def main(lst):\n    mi = lst[0]\n    ma = lst[0]\n    r = 0\n    for i in lst:\n        if i > ma:\n            ma = i\n            r+=1\n        elif i < mi:\n            mi = i\n            r+=1\n    return r\na = input()\nb = raw_input()\nc = [int(i) for i in b.split()]\nprint main(c)"
        },
        {
            "language": 1,
            "solution": "raw_input()\na = map(int,raw_input().split())\nmx=mn=a[0]\ncmx=cmn=0\nfor s in a[1:]:\n\tif s>mx:\n\t\tmx=s\n\t\tcmx+=1\n\telif s<mn:\n\t\tmn=s\n\t\tcmn+=1\nprint cmx+cmn"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nmarks = list(map(int,input().split()))\nminMarks, maxMarks = marks[0],marks[0];count = 0\nfor i in marks[1:]:\n    if i > maxMarks:\n        count += 1\n        maxMarks = i\n    elif i < minMarks:\n        count += 1\n        minMarks = i\nprint(count)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint main() {\n  int n, a[1000], b = 0, i, max, min = -2000001;\n  scanf(\"%d\", &n);\n  for (i = 0; i < n; i++) scanf(\"%d\", &a[i]);\n  max = a[0];\n  min = a[0];\n  for (i = 1; i < n; i++) {\n    if (a[i] < min) {\n      min = a[i];\n      b++;\n    }\n    if (a[i] > max) {\n      b++;\n      max = a[i];\n    }\n  }\n  printf(\"%d\\n\", b);\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "\nn = int(input())\nscore = [int(x) for x in input().split()]\nmax = score[0]\nmin = score[0]\namaze = 0\nfor i in range(1,n):\n    b = score[i]\n    if b > max:\n        amaze += 1\n        max = b\n    elif b < min:\n        amaze += 1\n        min = b\nprint(int(amaze))\n\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\narr=list(map(int,input().split()))\nmini=arr[0]\nmaxi=arr[0]\nc=0\nfor i in range(1,n):\n\tif(arr[i]>maxi):\n\t\tmaxi=arr[i]\n\t\tc+=1\n\tif(arr[i]<mini):\n\t\tmini=arr[i]\n\t\tc+=1\nprint(c)"
        },
        {
            "language": 3,
            "solution": "\n\nn = int(input())\ndata = list(map(int, input().split()))\nmax_result = data.pop(0)\nmin_result = max_result\nresult = 0\n\nfor i in data:\n    if i > max_result:\n        result += 1\n        max_result = i\n    elif i < min_result:\n        result += 1\n        min_result = i\n\nprint(result)\n\n\n\n\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\namazing = 0\nb = []\nfor ele in a:\n\tb.append(ele)\n\tif b.index(ele) > 0:\n\t\tif b.count(ele) == 1 and (ele is max(b) or ele is min(b)):\n\t\t\tamazing+=1\nprint(amazing)"
        },
        {
            "language": 4,
            "solution": "/*\n * To change this template, choose Tools | Templates\n * and open the template in the editor.\n */\n\n\nimport java.util.Scanner;\n\npublic class JavaApplication56 {\n\n    /**\n     * @param args the command line arguments\n     */\n    public static void main(String[] args) \n    {\n       Scanner sc=new Scanner(System.in);\n       \n       \n       int n=sc.nextInt();\n       \n       int[] a=new int[n+1];\n       for(int i=1;i<=n;i++)\n           a[i]=sc.nextInt();\n       \n       int count=0;\n       int min=a[1];\n       int max=a[1];\n       for(int i=2;i<=n;i++)\n       {\n           \n           if(a[i]>max)\n           {\n               max=a[i];\n               count++;\n           }\n           \n           if(a[i]<min)\n           {\n               min=a[i];\n               count++;\n           }\n           \n           \n       }\n       \n       System.out.println(count);\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "inp = input()\ninp1 = input().split()\n\nbest = inp1[0]\nworst = inp1[0]\nx = 0\n\nfor num in range(1, len(inp1)):\n    if int(inp1[num]) > int(best):\n        best = inp1[num]\n        x += 1\n    elif int(inp1[num]) < int(worst):\n        worst = inp1[num]\n        x += 1\nprint(x)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\nMAX, MIN = a[0], a[0]\nk = 0\nfor i in range(1, n):\n\tif a[i] > MAX:\n\t\tMAX = a[i]\n\t\tk += 1\n\tif a[i] < MIN:\n\t\tMIN = a[i]\n\t\tk += 1\nprint(k)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int test;\n  cin >> test;\n  int number;\n  int arr[1000];\n  int min = 10000;\n  int max = 0;\n  int i;\n  int counter = 0;\n  for (i = 0; i < test; i++) {\n    cin >> number;\n    arr[i] = number;\n  }\n  max = arr[0];\n  min = arr[0];\n  for (int j = 0; j < test; j++) {\n    if (arr[j] > max) {\n      max = arr[j];\n      counter++;\n    }\n    if (arr[j] < min) {\n      min = arr[j];\n      counter++;\n    }\n  }\n  cout << counter << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long N = 1e5 + 5;\nlong long n, m, cnt;\nlong long a[N], mn = N, mx;\nint main() {\n  cin >> n;\n  for (int i = 1; i <= n; i++) {\n    cin >> a[i];\n  }\n  for (int i = 2; i <= n; i++) {\n    mx = max(a[i - 1], mx);\n    mn = min(a[i - 1], mn);\n    if (a[i] > mx || a[i] < mn) {\n      cnt++;\n    }\n  }\n  cout << cnt;\n}\n"
        },
        {
            "language": 3,
            "solution": "competitions = int(input())\nmarks = list(map(int, input().split()))\nincredible_competitions = 0\nlength = len(marks)\nmaximum = marks[0]\nminimum = marks[0]\n\nfor incredible in range(1, length):\n    if marks[incredible] > maximum:\n        maximum = marks[incredible]\n        incredible_competitions += 1\n    elif marks[incredible] < minimum:\n        minimum = marks[incredible]\n        incredible_competitions += 1\nprint(incredible_competitions)\n"
        },
        {
            "language": 3,
            "solution": "a=int(input())\nd=[int(i) for i in input().split()]\nstart_amaze=d[0]\nlast_amaze=d[0]\ncount=0\nfor i in range(len(d)-1):\n    if (start_amaze > d[i+1]):\n        start_amaze=d[i+1]\n        count=count+1\n    if (last_amaze < d[i+1]):\n        last_amaze=d[i+1]\n        count=count+1\nprint(count)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\ncont=[int(x) for x in input().split()]\na=0\nb=cont[0]\nc=cont[0]\nfor i in range (1,len(cont),1):\n    if cont[i] > b:\n        b=cont[i]\n        a+=1\n    elif cont[i] < c:\n        c=cont[i]\n        a+=1\nprint(a)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\n\nlis = list(map(int, input().split()))\n\nmax = lis[0]\nmin = lis[0]\n\namz = 0\n\nfor i in lis:\n    if i > max:\n        amz += 1\n        max = i\n        \n    else:\n        if i < min:\n            amz += 1\n            min = i\n            \nprint(amz)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int nmax = 1e3 + 5;\nint n, a[nmax], cnt;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  cin >> n;\n  for (int i = 0; i < n; i++) cin >> a[i];\n  int mi = a[0], ma = a[0];\n  for (int i = 0; i < n; i++) {\n    if (a[i] > ma) {\n      cnt++;\n      ma = a[i];\n    }\n    if (a[i] < mi) {\n      cnt++;\n      mi = a[i];\n    }\n  }\n  cout << cnt;\n}\n"
        },
        {
            "language": 1,
            "solution": "data=input()\na=map(int,raw_input().split())\ncont=0\nmas=minn=a[0]\nfor i in range(data):\n    if minn>a[i]:\n        cont+=1\n        minn=a[i]\n    elif a[i]>mas:\n        cont+=1\n        mas=a[i]\nprint cont\n"
        },
        {
            "language": 3,
            "solution": "n, t = int(input()), list(map(int, input().split()))\ns, m, M = 0, t[0], t[0]\nfor i in range(1, len(t)):\n    if t[i] > M:\n        M = t[i]\n        s += 1\n    elif t[i] < m:\n        m = t[i]\n        s += 1\nprint(s)"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\na = map(int, raw_input().split())\nmn, mx = a[0], a[0]\ncnt = 0\nfor i in range(1, n):\n    if a[i] < mn or a[i] > mx:\n        cnt += 1\n    mn = min(mn, a[i])\n    mx = max(mx, a[i])\nprint cnt\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\np = list(map(int, input().split()))\nprint(sum(1 for i in range(1, n) if max(p[:i]) < p[i] or min(p[:i]) > p[i]))"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint main() {\n  int n;\n  int MAX, MIN, x, ans = 0;\n  scanf(\"%d\", &n);\n  scanf(\"%d\", &x);\n  MIN = MAX = x;\n  for (int i = 1; i < n; i++) {\n    scanf(\"%d\", &x);\n    if (x > MAX) {\n      MAX = x;\n      ans++;\n    }\n    if (x < MIN) {\n      MIN = x;\n      ans++;\n    }\n  }\n  printf(\"%d\\n\", ans);\n}\n"
        },
        {
            "language": 3,
            "solution": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Thu Sep  3 11:42:55 2020\n\n@author: anirudhasarmatumuluri\n\"\"\"\n\n\ndef main():\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    min = max = arr[0]\n    count = 0\n    for i in range(1,n):\n        if arr[i]>max:\n            max = arr[i]\n            count+=1\n        if arr[i]<min:\n            min = arr[i]\n            count+=1\n    print(count)\n\n\nmain()"
        },
        {
            "language": 3,
            "solution": "a=int(input())\nk=0\nA=[int(i) for i in input().split()]\nmin=A[0]\nmax=A[0]\nfor i in range(1,len(A)):\n    if A[i]>max:\n        k+=1\n        max=A[i]\n    if A[i]<min:\n        min=A[i]\n        k+=1\nprint(k)\n"
        },
        {
            "language": 3,
            "solution": "repetition = int(input())\nnumbers = list(map(int, input().split()))\nlowest_num = 0\nhighest_num = 0\ncounter = 0\nfor i in range(repetition):\n    if (i == 0):\n        lowest_num = numbers[i]\n        highest_num = numbers[i]\n    if (numbers[i] > highest_num):\n        counter += 1\n        highest_num = numbers[i]\n    elif (numbers[i] < lowest_num):\n        counter += 1\n        lowest_num = numbers[i]\nprint(counter)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nz=input().split()\nz=list(map(int,z))\ndef uu(k):\n    qq=True\n    if z[k]>max(z[:k]) or z[k]<min(z[:k]):\n        qq=False\n    return qq\na=0   \nfor i in range(n):\n    if i==0:\n        continue#0 meifabi zhijie tiaoguo\n    if uu(i)==False:\n        a+=1\nprint(a)"
        },
        {
            "language": 1,
            "solution": "import sys\n\nn = int(sys.stdin.readline())\nl = map(int, sys.stdin.readline().split())\n\nmin1 = l[0]\nmax1 = l[0]\ncount = 0\n\nfor i in range(1,n):\n    if (l[i] < min1):\n        count = count + 1\n        min1 = l[i]\n    elif(l[i] > max1):\n        count = count + 1\n        max1 = l[i]\n        \nprint count"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nres=input().split(' ')\nk=0\nfor i in range(1, len(res)):\n    result=int(res[i])\n    mi=100000\n    ma=-1\n    for j in range(i):\n        if (int(res[j])<mi):\n            mi=int(res[j])\n        if (int(res[j])>ma):\n            ma=int(res[j])\n    if (result<mi or result>ma):\n        k+=1\nprint(k)\n"
        },
        {
            "language": 3,
            "solution": "prefs = int(input())\n\npreformances = [int(i) for i in input().split()]\n\nbest = preformances[0]\nworst = preformances[0]\n\namazing = 0\n\nfor i in preformances:\n    if i > best:\n        best = i\n        amazing += 1\n    elif i < worst:\n        worst = i\n        amazing += 1\n\nprint(amazing)"
        },
        {
            "language": 3,
            "solution": "a = int(input())\nmarks = list(map(int, input().split()))\nminimum = marks[0]\nmaximum = marks[0]\ncount = 0\nfor i in marks :\n\tif i > maximum :\n\t\tmaximum = i\n\t\tcount += 1\n\tif i < minimum :\n\t\tminimum = i\n\t\tcount += 1\n\telse :\n\t\tpass\nprint (count)"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\nA = [int(x) for x in raw_input().split()]\n\nmaxi = A[0]\nmini = A[0]\nans = 0\nfor x in A[1:]:\n\tif x < mini:\n\t\tans += 1\n\t\tmini = x\n\tif x > maxi:\n\t\tans += 1\n\t\tmaxi = x\nprint ans\n"
        },
        {
            "language": 3,
            "solution": "input=__import__('sys').stdin.readline\nn = int(input())\nlis=  list(map(int,input().split()))\nmm=mi=lis[0]\nans=0\nfor i in range(1,n):\n    cur=lis[i]\n    if cur>mm:\n        ans+=1\n        mm=cur\n    if cur<mi:\n        ans+=1\n        mi=cur  \nprint(ans)          \n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\ntotal=0\nnumbers=[int(i) for i in input().split()]\nmax1,min1=numbers[0],numbers[0]\nfor i in range(1,n):\n    if numbers[i]>max1:\n        total+=1\n        max1=numbers[i]\n    elif numbers[i]<min1:\n        total+=1\n        min1=numbers[i]\nprint(total)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nGrades = [int(i) for i in input().split(' ')]\na = max(Grades)\nb = min(Grades)\ni = 0\nHA = 0\nif n == 1:\n    print(0)\nelse:\n    while i < n:\n        m = 0\n        counter = 0\n        while m < i:\n            if Grades[i] > Grades[m]:\n                counter += 1\n            m += 1\n        if counter == m:\n            HA += 1\n\n        counter = 0\n        m = 0\n        while m < i:\n            if Grades[i] < Grades[m]:\n                counter += 1\n            m += 1\n        if counter == m:\n            HA += 1\n        i += 1\n    print(HA-2)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nls=input().split()\nls=[int(i) for i in ls]\nls1=[ls[0]]\ncount=0\nfor i in ls:\n    if i>max(ls1) or i<min(ls1):\n        count+=1\n    ls1.append(i)\nprint(count)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nscores = [int(i) for i in input().split()]\nmin = scores[0]\nmax = scores[0]\nres = 0\nfor i in range(1,n):\n    if scores[i] > max:\n        res+=1\n        max = scores[i]\n    if scores[i] < min:\n        res+=1\n        min = scores[i]\nprint(str(res))\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = list(map(int,input().split()))\nmax = l[0]\nmin= l[0]\nc = 0\nfor i in range(n):\n    if l[i] > max:\n        max = l[i]\n        c += 1\n    if l[i] < min:\n        min = l[i]\n        c += 1\nprint(c)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nA=[int(x) for x in input().split()]\nMin=A[0]\nMax=A[0]\ncnt=0\nfor i in range(1,n):\n  flag_Min=False\n  flag_Max=False\n  if Min>A[i]:\n    flag_Min=True\n    Min=A[i]\n  if Max<A[i]:\n    flag_Max=True\n    Max=A[i]\n  if flag_Max or flag_Min:\n    cnt+=1\nprint(cnt)"
        },
        {
            "language": 3,
            "solution": "num = int(input(\"\"))\nlst = list(map(int,input().split(\" \")))\namazing = 0\nmax_lst = lst[0]\nmin_lst = lst[0]\n\nfor i in range(0,len(lst)):\n    if  lst[i] < min_lst:\n        min_lst = lst[i]\n        amazing = amazing+1\n\n    if  lst[i] > max_lst :\n        max_lst = lst[i]\n        amazing = amazing+1\n\nprint(amazing)\n\n"
        },
        {
            "language": 3,
            "solution": "if __name__ == \"__main__\":\n    n=int(input())\n    N=list(map(int,input().split()))\n    minmum=N[0]\n    maxmum=N[0]\n    amazing=0\n    for i in N[1:]:\n        if (i<minmum):\n            minmum=i\n            amazing+=1\n        if (i>maxmum):\n            maxmum=i\n            amazing+=1\n    \n    print (amazing)\n\n        "
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nmi=l[0]\nma=l[0]\nc=0\nfor i in range(1,n):\n    if(l[i]<mi):\n        mi=l[i]\n        c+=1\n    if(l[i]>ma):\n        ma=l[i]\n        c+=1\nprint(c)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, x, count = 0;\n  cin >> n >> x;\n  int mayor, menor;\n  mayor = menor = x;\n  for (int i = 1; i < n; i++) {\n    cin >> x;\n    if (x > mayor && x > menor || x < menor && x < menor) count++;\n    if (x > mayor) mayor = x;\n    if (x < menor) menor = x;\n  }\n  cout << count;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "_=input()\nlst=[int(i) for i in input().split()]\nbig=lst[0]\nsmall=lst[0]\nc=0\nfor i in lst[1:]:\n    if i > big:\n        big=i\n        c+=1\n    elif i<small:\n        small=i\n        c+=1\nprint(c)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nlis = map(int,input().split())\nlis = list(lis)\nmaxi = lis[0]\nmini = lis[0]\ncnt = 0\nfor i in lis:\n    if(i > maxi):\n        maxi = i\n        cnt+=1\n    if(i < mini):\n        mini = i\n        cnt += 1\n\n    # print(maxi,mini)\n\nprint(cnt)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\narr=list(map(int,input().split()))\ncounter=0\ni=1\nwhile i<n:\n\tif arr[i]>max(arr[0:i]) or arr[i]<min(arr[0:i]):\n\t\tcounter+=1\n\ti+=1\nprint(counter)\n\t"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.StringTokenizer;\n\npublic class ILoveUsername {\n    public static void main(String[] args) {\n        FastReader sc = new FastReader();\n        int n = sc.nextInt();\n        int[] arr = new int[n];\n        for (int i = 0; i < n; i++) {\n            arr[i] = sc.nextInt();\n        }\n        int min = arr[0], max = arr[0];\n        int cnt = 0;\n        for (int i = 1; i < n; i++) {\n            if (arr[i] > max) {\n                max = arr[i];\n                cnt += 1;\n            } else if (arr[i] < min) {\n                min = arr[i];\n                cnt += 1;\n            }\n        }\n        System.out.println(cnt);\n    }\n\n    static class FastReader {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public FastReader() {\n            br = new BufferedReader(new\n                    InputStreamReader(System.in));\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine() {\n            String str = \"\";\n            try {\n                str = br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\namazingHigh = 0\namazingLow = 0\namazingCount = 0\npointList = [int(x) for x in input().split()]\namazingHigh = pointList[0]\namazingLow = pointList[0]\npointList = pointList[1:len(pointList)]\nfor point in pointList:\n    if point > amazingHigh:\n        amazingCount += 1\n        amazingHigh = point\n    elif point < amazingLow:\n        amazingCount += 1\n        amazingLow = point\n\nprint(amazingCount)\n"
        },
        {
            "language": 3,
            "solution": "count = int(input())\nm = list(map(int, input().split()))\n\nmn = m[0]\nmx = m[0]\namazing = 0\nfor i in m:\n    if i > mx:\n        amazing += 1\n        mx = i\n        continue\n    if i < mn:\n        amazing += 1\n        mn = i\n\nprint(amazing)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  bool flag = true;\n  int n, min(10001), max(-1), counter(0), arr[1000];\n  cin >> n;\n  for (int i = 0; i < n; ++i) {\n    cin >> arr[i];\n    if (arr[i] > max) {\n      max = arr[i];\n      ++counter;\n    }\n    if (arr[i] < min) {\n      min = arr[i];\n      ++counter;\n    }\n  }\n  cout << counter - 2 << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  int a[n + 1];\n  for (int i = 1; i <= n; i++) cin >> a[i];\n  int k = 0;\n  for (int i = 2; i <= n; i++) {\n    int c = 0, d = 99999;\n    for (int j = 1; j <= i - 1; j++) {\n      c = max(c, a[j]);\n      d = min(d, a[j]);\n    }\n    if (a[i] > c || a[i] < d) k++;\n  }\n  cout << k;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = list(map(int,input().split()))\nif n==1:\n    print('0')\nelse:\n    minv=l[0]\n    maxv=l[0]\n    a=0\n    for i in l:\n        if i<minv:\n            minv=i\n            a+=1\n        elif i>maxv:\n            maxv=i\n            a+=1\n    print(a)\n    \n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\narr = list(map(int, input().split()[:n]))\nmx = arr[0]\nmn = arr[0]\nc = 0\nfor i in range(1, n):\n    if arr[i] > mx:\n        mx = arr[i]\n        c += 1\n    elif arr[i] < mn:\n        mn = arr[i]\n        c += 1\nprint(c)\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\npublic class Iloveusername {\n\tpublic static void main(String[] args) {\n\t\tScanner in = new Scanner(System.in);\n\t\tint n = in.nextInt();\n\t\tint min=in.nextInt(), max=min, count=0;\n\t\t\n\t\tfor(int i=1; i<n;i++){\n\t\t\tint m = in.nextInt();\n\t\t\tif(m>max){\n\t\t\t\tcount++;\n\t\t\t\tmax=m;\n\t\t\t}else if(m<min){\n\t\t\t\tcount++;\n\t\t\t\tmin=m;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(count);\n\t\t\n\t}\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input(\"\"))\na=list(map(int, input().split()))\nmaximum=a[0]\nminimum=a[0]\ncount=0\nfor i in a:\n    if (i>maximum):\n        maximum=i\n        count+=1\n    elif (i<minimum):\n        minimum=i\n        count+=1\nprint(count)\n        \n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nscores = [int(a) for a in input().split(\" \")]\n\ncount = 0\nsurprise = 0\nmin = scores[0]\nmax = scores[0]\n\nwhile count < len(scores) - 1:\n\tscore = scores[count]\n\tif scores[count +1] > max:\n\t\tmax = scores[count +1]\n\t\tsurprise += 1\n\telif scores[count +1] < min:\n\t\tmin = scores[count +1]\n\t\tsurprise += 1\n\t\t\n\tcount += 1\nprint(surprise)\n"
        },
        {
            "language": 3,
            "solution": "\nt=int(input())\nl=list(map(int,input().split()))\nco=0\nfor i in range (1,t):\n\tg=l[0:i]\n\tm=max(g)\n\tn=min(g)\n\tif l[i]>m or l[i]<n:\n\t\tco+=1\n\nprint(co)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, cnt = 0, mx, mn;\n  cin >> n;\n  int arr[n + 1];\n  for (int i = 1; i <= n; i++) {\n    cin >> arr[i];\n  }\n  mx = arr[1];\n  mn = arr[1];\n  for (int i = 2; i <= n; i++) {\n    if (mx < arr[i]) {\n      cnt++;\n      mx = arr[i];\n    } else if (mn > arr[i]) {\n      cnt++;\n      mn = arr[i];\n    }\n  }\n  cout << cnt << endl;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  int d, count = 0;\n  cin >> d;\n  int m1 = d, m2 = d;\n  count = 0;\n  n--;\n  while (n--) {\n    cin >> d;\n    if (m1 < d) {\n      count++;\n      m1 = d;\n    }\n    if (m2 > d) {\n      count++;\n      m2 = d;\n    }\n  }\n  cout << count;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\narray=list(map(int,input().split()))\nlst=list()\nc=0\nlst.append(array[0])\nfor j in range(1,n):\n    if array[j]>max(lst) or array[j]<min(lst) :\n        c=c+1\n    lst.append(array[j])\nprint(c)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nk = list(map(int,input().split()))\nl = [k[0]]\nc = 0\nfor i in range(1,n):\n    if k[i]>max(l) or k[i]<min(l):\n        l.append(k[i])\n        c += 1\nprint(c)\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class I_love_username {\n\n\n    public static void main(String[] args) throws IOException {\n        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n        int index=Integer.parseInt(br.readLine().trim());\n        String []s=br.readLine().trim().split(\"\\\\s+\");\n        int []arr=new int [index];\n        for (int i = 0; i < s.length; i++) \n            arr[i]=Integer.parseInt(s[i]);\n        int counter=0;boolean found=true,found2;\n        for (int i = 1; i < arr.length; i++) {\n            found=true; found2=true;\n            for (int j = i-1; j >=0; j--) {\n                if(!(arr[i]>arr[j])){\n                    found=false;\n                }\n                if(!(arr[i]<arr[j])){\n                    found2=false;\n                }\n            }\n            if(found)\n                counter++;\n            if(found2)\n                counter++;\n        }\n        System.out.println(counter);\n        \n    }\n\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl =list( map(int ,input().split()))\nminl , maxl , am = l[0] , l[0] , 0\nfor i in range(1,n):\n    if minl > l[i]:\n        am +=1\n        minl = l[i]\n    if maxl < l[i]:\n        maxl = l[i]\n        am +=1\nprint(am)\n        \n    "
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\n\tpublic class Training {\t\t\n\t\tpublic static void main(String[] args) {\n\t\t\tScanner in = new Scanner(System.in);\n\t\t\tint n = in.nextInt();\n\t\t\tint a;\n\t\t\tint min = 0;\n\t\t\tint max = 0;\n\t\t\tint ans = 0;\n\t\t\tfor(int i = 0; i < n; i++) {\n\t\t\t\ta = in.nextInt();\n\t\t\t\tif(i == 0) {\n\t\t\t\t\tmin = a;\n\t\t\t\t\tmax = a;\n\t\t\t\t}\n\t\t\t\tif(a > max) {\n\t\t\t\t\tmax = a;\n\t\t\t\t\tans++;\n\t\t\t\t}\n\t\t\t\tif(a < min) {\n\t\t\t\t\tmin = a;\n\t\t\t\t\tans++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(ans);\n\t\t}\n\t}"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nmass = input().split()\ncount = 0\n\nfor i in range(len(mass)):\n\n    mass[i] = int(mass[i])\n\nmx = mass[0]\nmn = mass[0]\n\nfor i in range(len(mass)):\n\n    if mass[i] > mx:\n        mx = mass[i]\n        count += 1\n\n    if mass[i] < mn:\n        mn = mass[i]\n        count += 1\n\n\nprint(count)\n    \n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nt=1\ns=0\nline=list(map(int,input().split()))\nx=line[0]\ny=line[0]\nwhile t<n:\n    if line[t]>x or line[t]<y:\n        s=s+1\n    x=max(x,line[t])\n    y=min(y,line[t])\n    t=t+1\nprint(s)\n    \n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nk=a[0]\nl=a[0]\nc=0\nfor i in a:\n\tif i>k:\n\t\tc+=1\n\t\tk=i\n\telif i<l:\n\t\tc+=1\n\t\tl=i\nprint(c)\n\t\t"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n/*\n/  M\u00f4h\u00e2m\u00e9d H\u00e2sh\u00e9m\n/  Let's Fun\n/  Java 8\n*/\npublic class Codeforces{\n    public static void main(String args []){\n        Scanner input = new Scanner(System.in);\n        int cntr = 0;\n        int SIZE;\n        SIZE = input.nextInt();\n        int [] arr = new int [SIZE];\n        for ( int i = 0 ;i < SIZE ; i ++)\n        {\n            arr [i] = input.nextInt();\n        }\n        int maximum = arr[0];\n        int minimum = arr[0];\n        for(int i = 1 ;i < SIZE ; i ++ )\n        {\n            if(arr[i]>maximum){maximum = arr[i]; cntr++;}\n            if(arr[i]<minimum){minimum = arr[i]; cntr++;}\n        }\n        System.out.println(cntr);\n        \n    }\n}"
        },
        {
            "language": 3,
            "solution": "f = int(input())\ns = [int(x) for x in input().split()]\nama = 0\nfor i in range(1, len(s)):\n    comp = s[:i]\n    if s[i] > max(comp) or s[i] < min(comp):\n        ama += 1\nprint(ama)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nL=list(map(int, input().split()))\na=b=L[0]\nc=0\nfor i in L[1:]:\n    if i<a:\n        c=c+1\n        a=i\n    elif i>b:\n        c=c+1\n        b=i\nprint(c)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nmylist = list(map(int, input().split()))\nlow, high = mylist[0], mylist[0]\namazing = 0\nfor i in range(1, n):\n    if mylist[i] < low:\n        amazing += 1\n        low = mylist[i]\n    if mylist[i] > high:\n        amazing += 1\n        high = mylist[i]\nprint(amazing)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int,input().split()))\n\nres = 0\n\ndef check1(x):\n    for i in range(x):\n        if a[i] <= a[x]:\n            return False\n    return True\n\ndef check2(x):\n    for i in range(x):\n        if a[i] >= a[x]:\n            return False\n    return True\n\nfor i in range(1,n):\n    if check1(i):\n        res += 1\n    if check2(i):\n        res += 1\n\nprint(res)\n"
        },
        {
            "language": 3,
            "solution": "num_g = input()\nnum_g = int(num_g)\nli = input().split()\nfor i in range(len(li)):\n    temp = li[i]\n    temp = int(temp)\n    li[i] = temp\n\namazings = 0\nmax = li[0]\nmin = li[0]\nfor ele in range(1,len(li)):\n    if li[ele] > max:\n        max = li[ele]\n        amazings += 1\n    elif li[ele] < min:\n        min = li[ele]\n        amazings += 1\n\nprint(amazings)\n        \n"
        },
        {
            "language": 3,
            "solution": "def amazing_results(results):\n    max_result = results[0]\n    min_result = results[0]\n    count = 0\n    for value in results:\n        if value > max_result:\n            max_result = value\n            count += 1\n        elif value < min_result:\n            min_result = value\n            count += 1\n    return count\n\nnumber = int(input())\nresults_of_competitions = list(map(int, input().split()))\nprint(amazing_results(results_of_competitions))"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nmin1,max1=l[0],l[0]\nans=0\nfor i in l[1:]:\n    if(i<min1):\n        min1=i \n        ans+=1 \n    if(i>max1):\n        max1=i \n        ans+=1\nprint(ans)        "
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\npublic class Marks{\npublic static void main(String []args)\n{\n    Scanner s = new Scanner(System.in);\n    int n = s.nextInt();  //number of contests\n    int points[] = new int[n];\n    int  i = 0;\n    while(i < n)\n    {\n    points[i++] = s.nextInt();\n    }\n    int bestcase = points[0];\n    int worstcase = points[0];\n    int amazing = 0 ;\n    for(i = 1; i < n; i++)\n    {\n       if(points[i] > bestcase)\n        {   \n            bestcase = points[i];\n            ++amazing;  \n        }\n    else if(points[i] < worstcase)\n        {   \n            worstcase = points[i];\n            ++amazing;  \n        }\n    }\n    \n    System.out.println(amazing);    \n}\n}"
        },
        {
            "language": 1,
            "solution": "n = input()\na = map(int,raw_input().split())\nmin = a[0]\nmax = a[0]\nl = 0\nfor i in a[1:]:\n\tif i<min:\n\t\tmin = i\n\t\tl+=1\n\telif i>max:\n\t\tmax = i\n\t\tl+=1\nprint l"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nc=0\nli=[int(i) for i in input().split()]\nmi,ma=li[0],li[0]\nfor i in range(1,n):\n    if(mi>li[i]):\n        mi=li[i]\n        c+=1\n    elif(ma<li[i]):\n        ma=li[i]\n        c+=1\nprint(c)\n    \n    \n "
        },
        {
            "language": 3,
            "solution": "l=int(input(\"\"))\nar=list(map(int,input(\"\").split()))\nz=[ar[0]]\ncount=0\nfor i in range(1,len(ar)):\n    if(ar[i]>max(z) or ar[i]<min(z)):\n        count=count+1\n    z.append(ar[i])\n\nprint(count)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[10000];\nint main() {\n  int n, s = 0, k = 0, l = 0;\n  cin >> n;\n  for (int i = 1; i <= n; i++) {\n    cin >> a[i];\n  }\n  for (int i = 2; i <= n; i++) {\n    for (int j = 1; j < i; j++) {\n      if (a[j] < a[i]) {\n        s++;\n      } else if (a[j] > a[i]) {\n        k++;\n      }\n      if (s == i - 1 || k == i - 1) {\n        l++;\n      }\n    }\n    s = 0;\n    k = 0;\n  }\n  cout << l << endl;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "if int(input())==1:print(0)\nelse:\n a = list(map(int, input().split()));c = 0;d = a[0];e = a[0]\n for i in range(1,len(a)+1):\n    if d<max(a[1:i+1]):c+=1;d=max(a[1:i+1])\n    if e>min(a[1:i+1]):c+=1;e=min(a[1:i+1])\n print(c)\n"
        },
        {
            "language": 3,
            "solution": "n= int(input())\nl=list(map(int,input().split()))\n\namazing=0\nbest=l[0]\nworst=l[0]\n\n\nfor i in range(1,n):\n    if(l[i]>best):\n        amazing+=1\n        best=l[i]\n    if(l[i]<worst):\n        amazing+=1\n        worst=l[i]\n\nprint(amazing)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int x, temp, max, min, cnt = 0;\n  cin >> x;\n  cin >> temp;\n  min = temp;\n  max = temp;\n  for (int i = 1; i < x; i++) {\n    cin >> temp;\n    if (temp < min) {\n      min = temp;\n      cnt++;\n    }\n    if (temp > max) {\n      max = temp;\n      cnt++;\n    }\n  }\n  cout << cnt;\n}\n"
        },
        {
            "language": 3,
            "solution": "\nN = int(input())\nscores = list(map(int,input().split()))\nresult = 0\nmaxScore = int(scores[0])\nminScore = int(scores[0])\nfor i in range(1,N):\n    score = int(scores[i])\n    if(score > maxScore):\n        maxScore = score\n        result += 1\n    elif(score < minScore):\n        minScore = score\n        result += 1\nprint (result)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(0);\n  int n;\n  cin >> n;\n  int maxv = -1, minv = 1000000;\n  int ret = 0;\n  for (int i = 0; i < (int)(n); i++) {\n    int x;\n    cin >> x;\n    if (i) {\n      if (x > maxv)\n        ++ret;\n      else if (x < minv)\n        ++ret;\n    }\n    maxv = max(maxv, x);\n    minv = min(minv, x);\n  }\n  cout << ret << endl;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int,input().split()))\nx = a[0]\ny = a[0]\nt = 0\nfor i in a:\n\tif i > x:\n\t\tx = i\n\t\tt += 1\n\tif i < y:\n\t\ty = i\n\t\tt += 1\nprint(t)"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\npublic class I_love_Username\n{\n\n    public static void main(String[] args)\n    {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int []a = new int[n];\n\n        for(int i = 0; i < n; i++)\n        {\n            a[i] = sc.nextInt();\n        }\n\n        int max = a[0], min = a[0], ans = 0;\n        for(int i = 1; i < n; i++)\n        {\n            if(a[i] > max)\n            {\n                max = a[i];\n                ans++;\n            }\n            if(a[i] < min)\n            {\n                min = a[i];\n                ans++;\n            }\n        }\n        System.out.println(ans);\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\n\npublic class A {\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tint[]a = new int[n];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\ta[i] = sc.nextInt();\n\t\t}\n\t\tint ans = 0;\n\t\tfor (int i = 1; i < n; i++) {\n\t\t\tboolean f = true;\n\t\t\tfor (int j = 0; j < i; j++) {\n\t\t\t\tif (a[i] <= a[j]) {\n\t\t\t\t\tf = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (f) {\n\t\t\t\tans++;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tf = true;\n\t\t\tfor (int j = 0; j < i; j++) {\n\t\t\t\tif (a[i] >= a[j]) {\n\t\t\t\t\tf = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (f) {\n\t\t\t\tans++;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(ans);\n\t}\n}\n"
        },
        {
            "language": 3,
            "solution": "\nn = int(input())\nscores = [int(i) for i in input().split()]\nmaxs = scores[0]\nmins = scores[0]\ncount = 0\n\nfor s in scores:\n    if s > maxs:\n        count += 1\n        maxs = s\n    if s < mins:\n        count += 1\n        mins = s\n\nprint(count)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input()) \nb=list(map(int,input().split())) \nln=b[0]\nhn=b[0]\ncount=0 \nfor i in range (1,n):\n    if (b[i]<ln):\n        count+=1\n        ln=b[i]\n    if (b[i]>hn):\n        count+=1\n        hn=b[i]\nprint(count)"
        },
        {
            "language": 3,
            "solution": "num_of_contests = int(input())\nscores = input().split()\nscores = [int(y) for y in scores]\nmax_val = scores[0]\nmin_val = scores[0]\ncounter = 0\nfor x in scores:\n    if x > max_val:\n        max_val = x\n        counter += 1\n    elif x < min_val:\n        min_val = x\n        counter += 1\nprint(counter)\n"
        },
        {
            "language": 4,
            "solution": "/*package whatever //do not write package name here */\n\nimport java.util.*;\nimport java.lang.*;\nimport java.io.*;\n\npublic class GFG {\n\t\n\tpublic static void main(String[] args) {\n\t\tScanner s=new Scanner(System.in);\n\t\tint n=s.nextInt();\n\t\tint a[]=new int[n];\n\t\tfor(int i=0;i<n;i++) {\n\t\t\ta[i]=s.nextInt();\n\t\t}\n\t\tint count=0;\n\t\tint max=a[0];\n\t\tint min=a[0];\n\t\tfor(int i=1;i<n;i++) {\n\t\t\tif(min>a[i]) {\n\t\t\t\tmin=a[i];\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\tif(max<a[i]) {\n\t\t\t\tmax=a[i];\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(count);\n\t}\n\t\n}"
        },
        {
            "language": 3,
            "solution": "n = int(input())\n\na = [int(el) for el in input().split(' ')]\n\nif n == 1 :\n    print(0)\nelse :\n    min_a = a[0]\n    max_a = a[0]\n    count = 0\n    for i in range(1, n) :\n        if a[i] > max_a :\n            count += 1\n            max_a = a[i]\n        elif a[i] < min_a :\n            count += 1\n            min_a = a[i]\n    print(count)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\namazing = 0\npoints = [int(x) for x in input().split()]\nmaxCur = points[0]\nminCur = points[0]\nfor i in range (1, n):\n    if points[i] > maxCur:\n        amazing += 1\n        maxCur = points[i]\n    elif points[i] < minCur:\n        amazing += 1\n        minCur = points[i]\n        \nprint(amazing)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\n\na= [int(s) for s in input().split()]\n\nc=0\nrefm = a[0]\nrefl = a[0]\nfor i in range(1, n):\n    if a[i] > refm:\n        refm = a[i]\n        c+=1 \n    elif a[i] < refl :\n        refl = a[i]\n        c+=1 \n        \nprint(c)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[int(j) for j in input().split()]\nl=list([])\nl.append(a[0])\n\njieguo=0\nfor i in range(1,n):\n\n\n    if a[i]>l[-1] or a[i]<l[0]:\n        l.append(a[i])\n\n        jieguo=jieguo+1\n    else:\n        l.append(a[i])\n\n    l.sort()\nprint(jieguo)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nlst=list(map(int,input().split()))\ncount=0\nmaxx=minn=lst[0]\nfor i in range(1,n):\n   if lst[i]>maxx:\n    \tmaxx=lst[i]\n    \tcount+=1\n   \n   elif lst[i]<minn:\n   \tminn=lst[i]\n   \tcount+=1\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nlst=[int(x) for x in input().split()]\nc=0\nminy=lst[0]\nmaxy=lst[0]\nfor i in range(1,n):\n        if lst[i]<miny:\n            miny=lst[i]\n            c+=1\n        if lst[i]>maxy:\n            maxy=lst[i]\n            c+=1\nprint(c)"
        },
        {
            "language": 3,
            "solution": "a=int(input())\nb=[int(i) for i in input().split()]\npast=[b[0]]\namazing=0\n\nfor i in b[1:]:\n    if i>max(past):\n        amazing+=1\n    elif i<min(past):\n        amazing+=1\n    past.append(i)\n\nprint(amazing)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = [int(a) for a in input().split()]\ncmin=a[0]\ncmax=a[0]\ncount=0\nfor i in range(n):\n    if a[i]<cmin:\n         count+=1\n         cmin=a[i]\n    elif a[i]>cmax:\n        count+=1\n        cmax=a[i]\nprint(count)"
        },
        {
            "language": 3,
            "solution": "# I_love_%username% - codeforces\n#\n\n\nimport math\nimport sys\ninput = sys.stdin.readline\n\n\ndef inp():\n    return int(input())\n\n\ndef invr():\n    return list(map(int, input().split()))\n\n\nn = inp()\nnn = invr()\n\nm = nn[0]\nM = m\na = 0\n\nfor i in range(1, n):\n    x = nn[i]\n    if x < m:\n        m = x\n        a += 1\n        # print(i+1)\n    elif x > M:\n        M = x\n        a += 1\n        # print(i+1)\n\nprint(a)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nlist = [int(x) for x in input().split()]\ns = 0\nif n==1:\n    print(0)\nelse:\n    for i in range(1,n):\n        if any(x<=list[i] for x in list[0:i]) and any(x>=list[i] for x in list[0:i]):\n            s = s\n        else:\n            s += 1\n    print(s)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint vis[200];\nint main() {\n  int a, b, mx = 0, mn = 2000000000;\n  cin >> a;\n  int res = 0;\n  for (int i = 0; i < a; ++i) {\n    cin >> b;\n    if (i) {\n      if (b > mx) res++;\n      if (b < mn) res++;\n      mx = max(mx, b);\n      mn = min(mn, b);\n    } else\n      mx = mn = b;\n  }\n  cout << res << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  int n;\n  cin >> n;\n  int entry;\n  cin >> entry;\n  int max = entry, min = entry, ans = 0;\n  for (int i = 0; i < n - 1; i++) {\n    cin >> entry;\n    if (entry > max) {\n      max = entry;\n      ans++;\n    } else if (entry < min) {\n      min = entry;\n      ans++;\n    }\n  }\n  cout << ans << \"\\n\";\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nc=0\nfor i in range(1,len(l)):\n    v=l[i]\n    bg=0\n    sm=0\n    lg=i\n    for j in range(i-1,-1,-1):\n        \n        if l[i]>l[j]:\n            bg+=1\n        elif l[i]<l[j]:\n            sm+=1\n    if bg==lg or sm==lg:\n        c+=1\nprint(c)\n        "
        },
        {
            "language": 3,
            "solution": "n=int(input())\nA=[int(i) for i in input().split()]\ns=0\nfor i in range(n):\n    i=i+1\n    B=A[0:i]\n    if i<n:\n        if A[i]<min(B) or A[i]>max(B):\n            s+=1\nprint(s)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\narr=list(map(int,input().split()))\nc_min=0\nc_max=0\nmax_ele=arr[0]\nmin_ele=arr[0]\nfor i in range(1,n):\n    if(min_ele>arr[i]):\n        c_min+=1\n        min_ele=arr[i]\n    elif(max_ele<arr[i]):\n        c_max+=1\n        max_ele=arr[i]\nprint(c_max+c_min)\n"
        },
        {
            "language": 1,
            "solution": "a = input()\nb = raw_input()\nj = []\nflag = 0\nj = b.split(\" \")\nj = [int(i) if i == str(i) else 0 for i in j]\nlargest = int(j[0])\nsmallest = int(j[0])\nfor i in j:\n    if int(i) > largest:\n        largest = i\n        flag+=1\n    if int(i) < smallest:\n        smallest = i\n        flag+=1\nprint flag"
        },
        {
            "language": 4,
            "solution": "/* package codechef; // don't place package name! */\n\nimport java.util.*;\nimport java.lang.*;\nimport java.io.*;\n\n/* Name of the class has to be \"Main\" only if the class is public. */\npublic class Codechef\n{\n\tpublic static void main (String[] args) throws java.lang.Exception\n\t{\n\t\tScanner in=new Scanner(System.in);\n\t\tint i,n,j,g=0,l=0,c=0;\n\t\tn=in.nextInt();\n\t\tint[] a=new int[n];\n\t\tfor (i=0;i<n;i++)\n\t\t{\n\t\t    a[i]=in.nextInt();\n\t\t}\n\t\tfor (i=1;i<n;i++)\n\t\t{\n\t\t    g=0;\n\t\t    l=0;\n\t\t    for (j=0;j<i;j++)\n\t\t    {\n\t\t        if(a[j]<a[i])\n\t\t        g++;\n\t\t        if(a[j]>a[i])\n\t\t        l++;\n\t\t    }\n\t\t    if ((g==i)||(l==i))\n\t\t    c++;\n\t\t}\n\t\tSystem.out.println(c);\n\t}\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nnums = [int(x) for x in input().split()]\nmin_v, max_v = nums[0], nums[0]\nres = 0\n\nfor i in nums[1:]:\n    if i < min_v or i > max_v:\n        res += 1\n        min_v, max_v = min(i, min_v), max(i, max_v)\nprint(res)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\nb = [a[0]]\ncount = 0\nfor i in range(1, n):\n    if a[i] < min(b) or a[i] > max(b):\n        count += 1\n    b.append(a[i])\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\n\nvar = input()\n\nvar = list(map(int, var.split()))\n\nminim = maxim = var[0]\n\naws = 0\n\nfor i in range(1, n):\n\tif var[i] < minim:\n\t\taws += 1\n\t\tminim = var[i]\n\telif var[i] > maxim:\n\t\taws += 1\n\t\tmaxim = var[i]\n\nprint(aws)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\npoint_list = [int(x) for x in input().split()]\nres = 0\nmax = point_list[0]\nmin = point_list[0]\nfor point in point_list:\n    if point > max:\n        res += 1\n        max = point\n    elif point < min:\n        res += 1 \n        min = point\nprint(res)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\ns=list(map(int,input().split()))\nlast=[s[0]]\nlmin=s[0]\nlmax=s[0]\nr=0\nfor i in range(n-1):\n    last.append(s[i+1])\n    if s[i+1]==max(last) and lmax!=last[i+1] or s[i+1]==min(last) and lmin!=last[i+1]:\n        r+=1\n        if s[i+1]==max(last):\n            lmax=s[i+1]\n        if s[i+1]==min(last):\n            lmin=s[i+1]        \nprint(r)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = [int(i) for i in input().split()]\ns = 0\nfor i in range(n):\n    for j in range(0, i):\n        if a[j]==a[i]:\n            a[i]='delete'\nb=a.count('delete')\nfor i in range(b):\n    a.remove('delete')\nfor i in range(1, len(a)):\n    mina, maxa = a[0], a[0]\n    for j in range(0, i + 1):\n        if a[j] > maxa:\n            maxa = a[j]\n        if a[j] < mina:\n            mina = a[j]\n    if a[i] == mina or a[i] == maxa:\n        s += 1\nprint(s)"
        },
        {
            "language": 3,
            "solution": "'''\nCF problem 155A\n@autor Yergali B\n'''\nn=int(input())\na=list(map(int,input().split()))\nMax, Min = a[0], a[0]\ncounter = 0\n\nfor x in a:\n    if x < Min:\n        Min = x\n        counter+= 1\n    if x > Max:\n        Max = x\n        counter+= 1\nprint(counter)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  int x;\n  cin >> x;\n  int count = 0;\n  int maxi;\n  int mini;\n  for (int i = 0; i < x; i++) {\n    cin >> n;\n    if (i == 0) {\n      maxi = n;\n      mini = n;\n    }\n    if (n > maxi) {\n      count++;\n      maxi = n;\n    }\n    if (n < mini) {\n      count++;\n      mini = n;\n    }\n  }\n  cout << count << endl;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = [int(x) for x in input().split()]\ncount = 0\nres = []\nres.append(a[0])\nfor i in range(1,n):\n    temp = a[0:i+1]\n    if a[i] == max(temp):\n        if a[i] not in res:\n            count += 1\n            res.append(a[i])\n    elif a[i] == min(temp):\n        if a[i] not in res:\n           count += 1\n           res.append(a[i])\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = list(map(int,input().split()))\ns = 0\n\nfor i in range(1,n):\n    if l[i] < min(l[:i]) or l[i] > max(l[:i]):\n        s+=1\n\nprint(s)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nmax = -1\nmin = 1e9\nans = 0\n\nfor i in map(int, input().split(' ')):\n    if i > max:\n        max = i\n        ans += 1\n    if i < min:\n        min = i\n        ans += 1\n\nprint(ans - 2)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\nb = c = a[0]\nans = 0\nfor i in range(1, n):\n    if a[i] > b:\n        ans += 1\n        b = a[i]\n    if a[i] < c:\n        ans += 1\n        c = a[i]\nprint(ans)\n    "
        },
        {
            "language": 4,
            "solution": "\nimport java.util.Scanner;\n\npublic class Iloveusername {\n    public static void main(String[] args) {\n        Scanner sc=new Scanner(System.in);\n        int n=sc.nextInt();\n        int a[]=new int[n];\n        for (int i = 0; i < n; i++) {\n            a[i]=sc.nextInt();\n        }\n        int min=a[0];\n        int max=min;\n        int c=0;\n        for (int i = 1; i < n; i++) {\n            if(a[i]<min){\n                ++c;\n                min=a[i];\n            }\n        }\n        for (int i = 1; i < n; i++) {\n            if(a[i]>max){\n                ++c;\n                max=a[i];\n            }\n        }\n        System.out.println(c);\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nb=[a[0]]\ncount=0\n\nfor i in a:\n    if i<min(b) or i>max(b):\n        count+=1\n    b.append(i)\nprint(count)\n"
        },
        {
            "language": 3,
            "solution": "n=input()\nli=list(map(int,input().split( )))\nmax=li[0]\nmin=li[0]\ncounter=0\nfor i in range(int(n)):\n    if max<li[i]:\n        max=li[i]\n        counter+=1\n    if min >li[i]:\n        min=li[i]\n        counter+=1\n\n\nprint(counter)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\npoints = list(map(int, input().split()))\na = []\ncount = 0\nfor i in points:\n    try:\n        if i > max(a):\n            count += 1\n        elif i < min(a):\n            count += 1\n    except ValueError:\n        pass\n\n    a.append(i)\n\nprint(count)\n"
        },
        {
            "language": 4,
            "solution": "\n\nimport java.util.*;\n\npublic class cosa {\n\n\tpublic static void main(String[] args) {\n\n\t\tScanner en = new Scanner(System.in);\n\t\tint n, m, max, cont, min;\n\n\t\tn = en.nextInt();\n\t\tmax = -1;\n\t\tcont = 0;\n\t\tm = en.nextInt();\n\t\tmax = m;\n\t\tmin = m;\n\t\tfor (int i = 0; i < n - 1; i++) {\n\n\t\t\tm = en.nextInt();\n\t\t\tif (m > max) {\n\t\t\t\tmax = m;\n\t\t\t\tcont++;\n\t\t\t} else if (m < min) {\n\t\t\t\tmin = m;\n\t\t\t\tcont++;\n\t\t\t}\n\n\t\t}\n\t\tSystem.out.println(cont);\n\t}\n\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main(void) {\n  int n, max, min;\n  cin >> n;\n  int arr1[n], arr2[n];\n  for (int i = 0; i < n; i++) {\n    arr2[i] = 0;\n  }\n  for (int i = 0; i < n; i++) {\n    cin >> arr1[i];\n  }\n  max = arr1[0];\n  for (int i = 1; i < n; i++) {\n    if (arr1[i] > max) {\n      max = arr1[i];\n      arr2[i] = 1;\n    }\n  }\n  min = arr1[0];\n  for (int i = 1; i < n; i++) {\n    if (arr1[i] < min) {\n      min = arr1[i];\n      arr2[i] = 1;\n    }\n  }\n  int tot = 0;\n  for (int i = 0; i < n; i++) {\n    if (arr2[i] == 1) {\n      tot += 1;\n    }\n  }\n  cout << tot;\n}\n"
        },
        {
            "language": 3,
            "solution": "num = int(input())\nresults = input().split(\" \")\ncur_max = int(results[0])\ncur_min = int(results[0])\nanswer = 0\n\nfor i in results:\n    val = int(i)\n    if cur_max < val:\n        cur_max = val\n        answer += 1\n    if cur_min > val:\n        cur_min = val\n        answer += 1\n\nprint(answer, end=\"\")\n"
        },
        {
            "language": 1,
            "solution": "#!/usr/bin/env python2\n# -*- coding: utf-8 -*-\nimport sys\nifs = sys.stdin\nofs = sys.stdout\n\n\ndef solve(A):\n    first = A[0]\n    m = first\n    M = first\n    n = 0\n    for a in A[1:]:\n        if a < m or M < a:\n            n += 1\n        m = min(m,a)\n        M = max(M,a)\n    return n\n\n\ndef numbers_from_line(d=' '):\n    return [int(s) for s in ifs.readline().strip().split(d) if len(s.strip())>0]\n\nn = int(ifs.readline())\nA = numbers_from_line()\n\na = solve(A)\n\nofs.write('%d\\n' % a)\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\n\n\npublic class Main {\n\n  \n\n    public static void main(String[] args){\n        \n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        \n        int max = sc.nextInt();\n        int min = max;\n        int great = 0;\n        for(int i = 1; i < n;i++){\n            \n            int inp = sc.nextInt();\n            if(inp > max){\n                great++;\n                max = inp;\n            }else if(inp < min){\n                great++;\n                min = inp;\n            }\n            \n        }\n        \n        System.out.println(great);\n        \n        \n    }\n}\n\n    \n"
        },
        {
            "language": 3,
            "solution": "# 155A - I_love_\\%username\\%\n# https://codeforces.com/problemset/problem/155/A\ndef main():\n    n = int(input())\n    A = tuple(map(int, input().rstrip().split()))\n    ans, ma, mi = 0, A[0], A[0]\n    for i in A[1:]:\n        if i > ma:\n            ans += 1\n            ma = i\n        elif i < mi:\n            ans += 1\n            mi = i\n    print(ans)\n\n\nif __name__ == \"__main__\":\n    main()"
        },
        {
            "language": 3,
            "solution": "n = int(input())\narr = [int(x) for x in input().split()]\n\nhighest = lowest = arr[0]\ncount = 0\nfor x in arr:\n    if x > highest:\n        count += 1\n        highest = x\n    elif x < lowest:\n        count += 1\n        lowest = x\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\npnt = list(map(int, input().split()))\n\nmx = pnt[0]\nmn = pnt[0]\namazing = 0\n\nfor i in range(1, n) :\n    if pnt[i] > mx or pnt[i] < mn :\n        amazing += 1\n    mx = max(mx, pnt[i])\n    mn = min(mn, pnt[i])\n\nprint(amazing)"
        },
        {
            "language": 1,
            "solution": "input()\na=map(int,raw_input().split())\nl=h=a[0]\nr=0\nfor i in a:\n    if i<l or i>h:\n        r+=1\n    l,h=min(l,i),max(h,i)\nprint r\n"
        },
        {
            "language": 3,
            "solution": "n, lst = int(input()), list(map(int, input().split()))\nprint(sum([max(lst[:i]) < lst[i] or min(lst[:i]) > lst[i] for i in range(1, n)]))"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int,input().split()))\nma = a[0]\nmn = a[0]\nres = 0\nfor i in a[1::]:\n    if i > ma:\n        ma  = i\n        res +=1\n    if i < mn:\n        mn = i \n        res += 1\nprint(res)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\ncontest_scores = list(map(int, input().split()))\n\nmin_score = max_score = contest_scores[0]\nresult = 0\nfor k in range(1, len(contest_scores)):\n    tmp_score = contest_scores[k]\n    if tmp_score > max_score:\n        result += 1\n    if tmp_score < min_score:\n        result += 1\n\n    max_score = max(tmp_score, max_score)\n    min_score = min(tmp_score, min_score)\n\nprint(result)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int t;\n  int min = -1;\n  int max = 10001;\n  int count = 0;\n  cin >> t;\n  int a[t];\n  for (int i = 0; i < t; i++) {\n    cin >> a[i];\n  }\n  max = a[0];\n  min = a[0];\n  for (int i = 1; i < t; i++) {\n    if (max < a[i]) {\n      max = a[i];\n      count++;\n    }\n    if (min > a[i]) {\n      min = a[i];\n      count++;\n    }\n  }\n  cout << count << endl;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nb=[a[0]]\nf=0\nfor i in range(1,n):\n    if a[i]>b[-1] or a[i]<b[0]:\n        f+=1\n    b+=[a[i]]\n    b.sort()\nprint(f)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nz=list(map(int,input().split()))\nmin=z[0]\nmax=z[0]\nc=0\nfor i in range(1,n):\n      if(z[i]>max):\n            c=c+1 \n            max=z[i]\n      if(z[i]<min):\n            c=c+1\n            min=z[i]\nprint(c)"
        },
        {
            "language": 1,
            "solution": "n = input()\npoints = map(int,raw_input().split())\n\nupper = points[0]\nlower = points[0]\namazing = 0\n\nfor i in range(1,n):\n    if points[i] > upper:\n        upper = points[i]\n        amazing +=1\n    if points[i] < lower:\n        lower = points[i]\n        amazing +=1\n\nprint amazing"
        },
        {
            "language": 3,
            "solution": "n = int(input()) - 1\nif not n:\n    input()\n    print(0)\nelse:\n    m = [int(x) for x in input().split()]\n    pair = [0, -1]\n    pair[0] = m[0]\n    for item in m[1:]:\n        if item != pair[0]:\n            pair[1] = item\n            break\n    if pair[1] == -1:\n        print(0)\n    else:\n        pair.sort()\n        s = 1\n        for el in m[2:]:\n            if el > pair[1]:\n                pair[1] = el\n                s += 1\n            elif el < pair[0]:\n                pair[0] = el\n                s += 1\n        print(s)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = list(map(int, input().rstrip().split()))\n\ncount = 0\nfor i in range(1,n):\n    if l[i] > max(l[:i]) or l[i] < min(l[:i]):\n        count += 1\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\ns=input().split()\nk=[0]*(n+1)\nfor i in range(n):\n    k[i]=int(s[i])\na=b=k[0]\nm=0\nfor i in range(1,n):\n    if k[i]<b:\n        m=m+1\n        b=k[i]\n    elif k[i]>a:\n        m=m+1\n        a=k[i]\nprint(m)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\ns = list(map(int, input().split()))\nmaxi = mini = s[0]\nans = 0\nfor i in s[1:]:\n    if i > maxi:\n        ans += 1\n        maxi = i\n    elif i < mini:\n        ans += 1\n        mini = i\nprint(ans)\n"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\nscores = map(int,raw_input().split())\n\nbest = worst = scores[0]\nc = 0\n\nfor i in range(1,n):\n    if scores[i]>best:\n        c += 1\n        best = scores[i]\n    elif scores[i] < worst:\n        c += 1\n        worst = scores[i]\n\nprint c\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\n\nl = input().split()\nl = [int(x) for x in l]\n\nhigh = l[0]\nlow = l[0]\ncount = 0\n\nfor i in range(n):\n    if l[i] > high:\n        high = l[i]\n        count += 1\n    elif l[i] < low:\n        low = l[i]\n        count += 1\n    else:\n        count += 0\n\nprint(count)\n    \n"
        },
        {
            "language": 3,
            "solution": "n = input()\nscore = input().split()\namazing = 0\nbawah = int(score[0])\natas = int(score[0])\n\nfor i in score:\n    if int(i) < bawah:\n        amazing += 1\n        bawah = int(i)\n    elif int(i) > atas:\n        amazing += 1\n        atas = int(i)\n\nprint(amazing)\n\t\t\t  \t \t\t\t   \t\t\t\t\t\t\t\t  \t\t  \t"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long int n, x;\n  long long int ans = 0;\n  long long int min = INT_MAX, max = INT_MIN;\n  cin >> n;\n  for (int i = 0; i < n; ++i) {\n    cin >> x;\n    if (i == 0) {\n      min = x;\n      max = x;\n    }\n    if (x < min) {\n      min = x;\n      ans++;\n    }\n    if (x > max) {\n      max = x;\n      ans++;\n    }\n  }\n  cout << ans;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nlst = list(map(int,input().split()))\nminMax = [lst[0],lst[0]]\ncount = 0\nfor i in range(len(lst)-1):\n    if lst[i+1]>lst[i] and lst[i+1]>max(minMax):\n        minMax[1] = lst[i+1]\n        count += 1\n    if lst[i+1]<lst[i] and lst[i+1]<min(minMax):\n        minMax[0] = lst[i+1]\n        count += 1\nprint(count)\n"
        },
        {
            "language": 1,
            "solution": "# Codeforces Round #109\n# Problem A -- I_love_%username%\nn = input()\na = map(int, raw_input().split())\nresult = 0\nfor i in xrange(1, n):\n    if a[i] > max(a[:i]) or a[i] < min(a[:i]):\n        result += 1\nprint result\n"
        },
        {
            "language": 1,
            "solution": "\n\n\nn = int(raw_input())\n\nlis = [int(x) for x in raw_input().split()]\n\nmin = lis[0]\nmax = lis[0]\n\ncount = 0\n\nfor n in lis:\n  if n < min:\n    min = n\n    count += 1\n    continue\n\t\n  if n > max:\n    max = n\n    count += 1\n    continue\t\n\nprint count\n"
        },
        {
            "language": 3,
            "solution": "num = eval(input())\nscore = [eval(i) for i in input().split()]\na = score[0]\nb = score[0]\ncount = 0\nfor i in range(num):\n    if score[i] > a or score[i] < b: count += 1\n    a = max(a, score[i])\n    b = min(b, score[i])\nprint(count)"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class strrrr {\n\tstatic FastReader sc = new FastReader();\n\n\tpublic static void main(String[] args) throws IOException {\n\t\ttry {\n\t\t\tsolve();\n\t\t} catch (Exception e) {\n\t\t\treturn;\n\t\t}\n\t}\n\n\tstatic void solve() {\n\t\tint n = sc.nextInt();\n\t\t\n\t\tint f=sc.nextInt();\n\t\tint w=f , b=f , t=0;\n\t\t\n\t\tfor(int i=1;i<n;i++) {\n\t\t\tint a = sc.nextInt();\n\t\t\tif(i!=0) {\n\t\t\t\tif(a<w) {\n\t\t\t\t\tw=a; t++;\n\t\t\t\t}\n\t\t\t\tif(a>b) {\n\t\t\t\t\tb=a; t++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(t);\n\t}\n\n\tstatic boolean[] seiveOfEratosthenes(int n) {\n\t\tboolean[] isPrime = new boolean[n + 1];\n\t\tArrays.fill(isPrime, true);\n\t\tfor (int i = 2; i * i <= n; i++) {\n\t\t\tfor (int j = i * i; j <= n; j += i) {\n\t\t\t\tisPrime[j] = false;\n\t\t\t}\n\t\t}\n\t\treturn isPrime;\n\t}\n\n}\n\nclass FastReader {\n\tBufferedReader br;\n\tStringTokenizer st;\n\n\tpublic FastReader() {\n\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t}\n\n\tString next() {\n\t\twhile (st == null || !st.hasMoreElements()) {\n\t\t\ttry {\n\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t} catch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn st.nextToken();\n\t}\n\n\tint nextInt() {\n\t\treturn Integer.parseInt(next());\n\t}\n\n\tlong nextLong() {\n\t\treturn Long.parseLong(next());\n\t}\n\n\tint[] readIntArray(int n) {\n\t\tint a[] = new int[n];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\ta[i] = Integer.parseInt(next());\n\t\t}\n\t\treturn a;\n\t}\n\n\tvoid printIntArray(int a[]) {\n\t\tfor (int i = 0; i < a.length; i++) {\n\t\t\tSystem.out.print(a[i] + \" \");\n\t\t}\n\t}\n\n\tlong[] readLongArray(int n) {\n\t\tlong a[] = new long[n];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\ta[i] = Long.parseLong(next());\n\t\t}\n\t\treturn a;\n\t}\n\n\tvoid printLongArray(long a[]) {\n\t\tfor (int i = 0; i < a.length; i++) {\n\t\t\tSystem.out.print(a[i] + \" \");\n\t\t}\n\t}\n\n\tdouble nextDouble() {\n\t\treturn Double.parseDouble(next());\n\t}\n\n\tString nextLine() {\n\t\tString str = \"\";\n\t\ttry {\n\t\t\tstr = br.readLine();\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\treturn str;\n\t}\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nstr1=input()\nlist1=str1.split(\" \")\nlist2=[int(list1[0])]\nx=0\nfor i in range(1,n):\n    if int(list1[i])>max(list2) or int(list1[i])<min(list2):\n        x=x+1\n        list2.append(int(list1[i]))\n    else:\n        list2.append(int(list1[i]))\nprint(x)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nnums = input().split()\n\namaz = 0\nmaxim,minim = int(nums[0]),int(nums[0])\n\nfor i in range(1,n):\n    nums[i] = int(nums[i])\n    if nums[i] < minim:\n        minim = nums[i]\n        amaz += 1\n    elif nums[i] > maxim:\n        maxim = nums[i]\n        amaz += 1\n\nprint(amaz)\n"
        },
        {
            "language": 3,
            "solution": "def Boredom():\n    n = int(input())\n    x = list(map(int, input().split()))\n    if n == 0 or n == 1:\n        print(\"0\")\n    else:\n        small = x[0]\n        big = x[0]\n        times = 0\n        for i in range(1, n):\n            if x[i] < small:\n                small = x[i]\n                times += 1\n            elif x[i] > big:\n                big = x[i]\n                times += 1\n        print(times)\n\nBoredom()\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n;\nint a;\nint x, y = 10001, z = -1;\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = 0; i < n; i++) {\n    scanf(\"%d\", &x);\n    if (x < y) {\n      y = x;\n      a++;\n    }\n    if (x > z) {\n      z = x;\n      a++;\n    }\n  }\n  cout << a - 2 << endl;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nmin_s = None\nmax_s = None\ncnt = 0\nfor s in input().split():\n    if min_s == None:\n        min_s = int(s)\n    if max_s == None:\n        max_s = int(s)\n    if min_s > int(s):\n        min_s = int(s)\n        cnt += 1\n    elif max_s < int(s):\n        max_s = int(s)\n        cnt += 1\nprint(cnt)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int,input().split()))\nmin_so_far = max_so_far = a[0]\n\nnum_amazing = 0\n\nfor i in range(1,n):\n    if a[i] > max_so_far:\n        num_amazing += 1\n        max_so_far = a[i]\n    elif a[i] < min_so_far:\n        num_amazing += 1\n        min_so_far = a[i]\n\nprint(num_amazing)"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.lang.*;\nimport java.util.*;\n\npublic class Main\n{\n    static class FastReader \n    { \n        BufferedReader br; \n        StringTokenizer st; \n  \n        public FastReader() \n        { \n            br = new BufferedReader(new\n                     InputStreamReader(System.in)); \n        } \n  \n        String next() \n        { \n            while (st == null || !st.hasMoreElements()) \n            { \n                try\n                { \n                    st = new StringTokenizer(br.readLine()); \n                } \n                catch (IOException  e) \n                { \n                    e.printStackTrace(); \n                } \n            } \n            return st.nextToken(); \n        } \n  \n        int nextInt() \n        { \n            return Integer.parseInt(next()); \n        } \n  \n        long nextLong() \n        { \n            return Long.parseLong(next()); \n        } \n  \n        double nextDouble() \n        { \n            return Double.parseDouble(next()); \n        } \n  \n        String nextLine() \n        { \n            String str = \"\"; \n            try\n            { \n                str = br.readLine(); \n            } \n            catch (IOException e) \n            { \n                e.printStackTrace(); \n            } \n            return str; \n        } \n    } \n  \n    public static void main(String args[])throws IOException\n\t{\n\t\t\n\t\tFastReader r = new FastReader();\n\t\tint N = r.nextInt();\n\t\tint max  = r.nextInt();\n\t\tint min  = max;\n\n\t\tint ans = 0;\n\n\t\tfor(int i = 1; i < N; i++)\n\t\t{\n\t\t\tint a = r.nextInt();\n\t\t\tif(a > max)\n\t\t\t{\n\t\t\t\tmax = a; \n\t\t\t\tans ++;\n\t\t\t}\n\n\t\t\tif( a < min)\n\t\t\t{\n\t\t\t\tmin = a;\n\t\t\t\tans ++;\n\t\t\t}\n\t\t}\n\n\t\tSystem.out.println(ans);\n\t}\n   \n} \n\t"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nm=list(map(int,input().split()))[:n]\nmaxi=m[0]\nmini=m[0]\ns=0\nfor i in range(1,n):\n    if (m[i]<mini):\n        s=s+1\n        mini=m[i]\n    elif(m[i]>maxi):\n        s=s+1\n        maxi=m[i]\nprint(s)\n        \n    \n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, each, mx, mn, count(0);\n  cin >> n;\n  cin >> each;\n  mx = each;\n  mn = each;\n  while (n-- > 1) {\n    cin >> each;\n    if (each < mn) {\n      count++;\n      mn = each;\n    } else if (each > mx) {\n      count++;\n      mx = each;\n    }\n  }\n  cout << count << \"\\n\";\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Fri Oct 16 19:05:39 2020\n\n@author: feibiaodi\n\"\"\"\n\nn=int(input())\nd=[int(x) for x in input().split()]\nc=0\nfor i in range(1,n):\n    if d[i]>max(d[0:i]) or d[i]<min(d[0:i]):\n        c=c+1\nprint(c)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\npoints = [int(c) for c in input().split()]\n\nans = 0\n_min, _max = 10001, 0\nfor i, p in enumerate(points):\n    if i == 0:\n        _min = _max = p\n    elif p > _max:\n        _max = p\n        ans += 1\n    elif p < _min:\n        _min = p\n        ans += 1\n        \nprint(ans)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nlst = list(map(int, input().split()))\nmx = lst[0]\nmn = lst[0]\ncur = lst[0]\nsolve = 0\nfor i in range(len(lst)):\n    if i == 0:\n        continue\n    if lst[i] > mx:\n        mx = lst[i]\n        solve += 1\n    if lst[i] < mn:\n        mn = lst[i]\n        solve += 1\n\nprint(solve)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\n\ncounter = 0\nmaxNum = minNum = a[0]\n\nfor num in a:\n    if num > maxNum:\n        maxNum = num\n        counter += 1\n\n    if num < minNum:\n        minNum = num\n        counter += 1\n\nprint(counter)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nc=[int(i) for i in input().split()]\nbest=c[0]\nworst=c[0]\namazing=0\nfor i in range(1,n):\n    if c[i]>best:\n        amazing+=1\n        best=c[i]\n    if c[i]<worst:\n        amazing+=1\n        worst=c[i]\nprint(amazing)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\ns=set()\nli=[int(i)for i in input().split()]\ns.add(li[0])\nm=li[0]\nn=li[0]\nc=0\nfor i in li[1:]:\n  if i not in s and ((i>m and i>n) or (i<m and i<n)):\n    s.add(i)\n    c=c+1\n    m=max(m,i)\n    n=min(n,i)\nprint(c)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\n\ninp = input().split()\npts = [int(i) for i in inp]\n\nmin_pts = pts[0]\nmax_pts = pts[0]\n\nans = 0\n\nfor i in pts:\n    if i < min_pts:\n        ans += 1\n        min_pts = i\n    elif i > max_pts:\n        ans += 1\n        max_pts = i\n\nprint (ans)\n"
        },
        {
            "language": 3,
            "solution": "n=input()\nn=int(n)\nm=input()\nm=m.split()\na=[]\nfor i in range(n):\n    a.append(int(m[i]))\nma=a[0]\nmi=a[0]\ncount=0\nfor i in range(1,n):\n    if(a[i]<mi):\n        mi=a[i]\n        count+=1\n    elif(a[i]>ma):\n        ma=a[i]\n        count+=1\nprint(count)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nx=[int(x) for x in input().split()]\n\n\nif len(x)<2:\n    print(0)\n    \nelif len(x)>=2:\n    for i in range (n-1):\n        if x[i]== x[i+1]:\n            c=0\n        else:\n            c=1\n            for i in range (n-1):\n                if x[i]!=x[i+1]:\n                    b=min(x[i],x[i+1])\n                    a=max(x[i], x[i+1])\n                    break\n        \n            for i in range(2,n):\n                if x[i]>a :\n                    c+=1\n                    a=x[i]\n                elif x[i]<b:\n                    c+=1\n                    b=x[i]\n        \n    print(c)\n"
        },
        {
            "language": 1,
            "solution": "# -*-coding:utf-8 -*-\nn=input()\nnumbers=map(int,raw_input().split(' '))\nmax=min=numbers[0]\namazing=0\nfor i in range(1,n):\n    if numbers[i]>max:\n        amazing+=1\n        max=numbers[i]\n    elif numbers[i]<min:\n        amazing+=1\n        min=numbers[i]\nprint amazing"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nl=list(map(int,input().split()))\nm=l[0]\nmx=l[0]\ncount=0\nfor i in l:\n    if mx<i:\n        count+=1\n        mx=i\n    if i<m:\n        count+=1\n        m=i\nprint(count)\n    \n\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\np=[int(i)for i in input().split()]\na=0\nfor i in range(1,len(p)):\n    if p[i]>max(p[0:i]):\n        a+=1\n    elif p[i]<min(p[0:i]):\n        a+=1\nprint(a)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\ncom = list(map(int, input().split()))\nmin = com[0]\nmax = com[0]\nres = 0\nfor i in range(1, len(com)):\n    if com[i] < min:\n        min = com[i]\n        res += 1\n    elif com[i] > max:\n        max = com[i]\n        res += 1\nprint(res)\n"
        },
        {
            "language": 3,
            "solution": "a=int(input())\nb=input().split()\nmi=int(b[0])\nma=int(b[0])\nz=0\nfor i in range(a):\n    r=int(b[i])\n    if r>ma:\n        ma=r\n        z+=1\n    elif r<mi:\n        mi=r\n        z+=1\nprint(z)\n"
        },
        {
            "language": 3,
            "solution": "length = int(input())\nscores = [int(i) for i in input().split()]\nmax = scores[0]\nmin = scores[0]\ncounter = 0\nfor i in range(length-1):\n\tif scores[i+1] > max:\n\t\tmax = scores[i+1]\n\t\tcounter += 1\n\tif scores[i+1] < min:\n\t\tmin = scores[i+1]\n\t\tcounter += 1\nprint(counter)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nline=input().split()\nlist=[int(x) for x in line]\ncounter=0\nfor i in range(1,n):\n    l=list[:i]\n    if list[i]>max(l) or list[i]<min(l):\n        counter+=1\nprint(counter)"
        },
        {
            "language": 3,
            "solution": "'''\ninstagram : essipoortahmasb2018\nchannel Telegram : essi_python\n'''\n\ni = input\ni()\ncount = 0\n\nl = list(map(int,i().split()))\n\n \nMAX = MIN = l[0]\nc = 0\nfor j in range(1,len(l)):\n    if l[j] > MAX:\n        MAX = l[j]\n        c+=1\n    elif l[j] < MIN:\n        MIN = l[j]\n        c+=1\n    else:\n        pass\n\nprint(c)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0), cout.tie(0);\n  int n;\n  cin >> n;\n  int arr[n];\n  int mn, mx;\n  cin >> mn;\n  int c = 0;\n  mx = mn;\n  for (int i = 1; i < n; i++) {\n    cin >> arr[i];\n    if (arr[i] > mx) {\n      c++;\n      mx = arr[i];\n    } else if (arr[i] < mn) {\n      c++;\n      mn = arr[i];\n    }\n  }\n  cout << c;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=(input().split())\nmaks=int(a[0])\nmini=int(a[0])\ns=0\nif(n==1):\n    print(s)\n    exit()\nelse:\n    for i in range(0, n):\n        if(int(a[i])>maks):\n            s=s+1;\n            maks=int(a[i])\n        elif(int(a[i])<mini):\n            s=s+1\n            mini=int(a[i])\nprint(s)"
        },
        {
            "language": 3,
            "solution": "def solve(scores):\n    smallest = largest = scores[0]\n    amazing = 0\n    for score in scores[1:]:\n        if(score < smallest):\n            smallest = score\n            amazing+=1\n        if(score > largest):\n            largest = score\n            amazing+=1\n    return amazing\n\n\nn = int(input())\nscores = input().split(\" \")\nscores = [int(i) for i in scores]\nprint(solve(scores))"
        },
        {
            "language": 1,
            "solution": "import sys\nimport string\n\nconsole_io = 1\nif console_io:\n    inf,ouf = sys.stdin,sys.stdout\nelse:\n    inf,ouf = open(\"input.txt\",\"r\",1),open(\"output.txt\",\"w\",1)\n#---------------------------------------------------------------------------\n\nn = int(inf.readline())\npoints = map(int, inf.readline().split(' '))\n\ndef isGreater(a):\n    for i in range(0,a):\n        if points[i] >= points[a]:\n            return 0\n    \n    return 1\n\ndef isSmaller(a):\n    for i in range(0,a):\n        if points[i] <= points[a]:\n            return 0\n    \n    return 1\n\ndef isWonder(a):\n    return isGreater(a) or isSmaller(a)\n\ncount = 0\nfor i in range(1,n):\n    if isWonder(i):\n        count += 1\n        \nouf.write(str(count))\ninf.close()\nouf.close()\n\n\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = list(map(int, input().split()))\nperformances = 0\nmore = l[0]\nsmaller = l[0]\nfor i in l[1:]:\n    if i > more:\n        performances += 1\n        more = i\n    elif i < smaller:\n        performances += 1\n        smaller = i\nprint(performances)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nnumbers = list(map(int, input().split()))\nmaxi = mini = list(numbers)[0]\nwow = 0\nfor i in numbers:\n\tif i < mini:\n\t\twow+=1\n\t\tmini = i\n\telif i > maxi:\n\t\twow+=1\n\t\tmaxi = i\n\telse:\n\t\tcontinue\nprint(wow)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\ns = list(map(int, input().split()))\nres = 0\ncmin, cmax = s[0], s[0]\nfor i in range(1, n):\n    if s[i] > cmax:\n        res += 1\n        cmax = s[i]\n    elif s[i] < cmin:\n        res += 1\n        cmin = s[i]\nprint(res)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\n\na = list(map(int, input().split()))\n\nmn = mx = a[0]\nawe = 0\nfor i in range(1, n):\n    if mn > a[i]:\n        awe += 1\n        mn = a[i]\n    if mx < a[i]:\n        awe += 1\n        mx = a[i]\n\nprint(awe)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\ncount=0\nfor i in range(1,n):\n    if a[i]> max(a[0:i]) or a[i]< min(a[0:i]):\n        count+=1\nprint(count)"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class Vasya {\n\tpublic static void main(String args[]) {\n\tScanner scan=new Scanner(System.in);\n\tint t=scan.nextInt();\n\tint a=scan.nextInt();\n\tint max=a,min=a,count=0;\n\t\n\tfor(int i=0;i<t-1;i++) {\n\t\ta=scan.nextInt();\n\t\tif(a>max) {\n\t\t\tcount++;\n\t\t\tmax=a;\n\t\t}\n\t\tif(a<min) {\n\t\t\tcount++;\n\t\t\tmin=a;\n\t\t}\n\t}\n\tSystem.out.print(count);\n}\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int,input().split()))\nmaxi = a[0]\nmini = a[0]\nans = 0\nfor i in range(1,n):\n    if(a[i]>maxi):\n        ans+=1\n        maxi = a[i]\n    if(a[i]<mini):\n        ans+=1\n        mini = a[i]\nprint(ans)"
        },
        {
            "language": 3,
            "solution": "a = input()\nb = list(map(int,input().strip().split()))\nc = None \nd = None\nl = len(b)\ncount = 0\nfor i in range(0,l):\n    if c is None and d is None:\n        c = b[0]\n        d = b[0]\n    if b[i] > c:\n        count += 1\n        c = b[i]\n    elif b[i] < d:\n        count += 1\n        d = b[i]\nprint(count)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int mod = 1000000007;\nint main() {\n  int n;\n  cin >> n;\n  int a[n];\n  for (int i = 0; i < n; i++) cin >> a[i];\n  int b = a[0], c = a[0], x = 0;\n  for (int i = 0; i < n; i++) {\n    if (a[i] > b) {\n      b = a[i];\n      x++;\n    }\n    if (a[i] < c) {\n      c = a[i];\n      x++;\n    }\n  }\n  cout << x;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\n\npoints = list(map(int, input().split()))\n\ncounter = 0\n\nfor i in range(1,n):\n    subcounter_highest = 0\n    subcounter_lowest = 0\n    for a in range(0,i):\n        if points[i] > points[a]:\n            subcounter_highest = subcounter_highest + 1\n        elif points[i] < points[a]:\n            subcounter_lowest = subcounter_lowest + 1\n    if subcounter_highest == i or subcounter_lowest == i:\n        counter = counter + 1\n        \nprint(counter)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nnum=list(map(int,input().split()))\ncount=0\nfor i in range(1,n):\n    l=num[:i]\n    ls=[j<num[i] for j in l]\n    ps=[j>num[i] for j in l]\n    if all(ls) or all(ps):\n        count+=1\nprint(count)"
        },
        {
            "language": 3,
            "solution": "def trial():\n\tnum = int(input())\n\tps = list(map(int, input().split()))\n\tcounter = 0\n\tmove = ps[0]\n\tlow = ps[0]\n\tfor i in range(1, num):\n\t\tif ps[i] < low:\n\t\t\tcounter += 1\n\t\t\tlow = ps[i]\n\t\telif ps[i] > move:\n\t\t\tcounter += 1\n\t\t\tmove = ps[i]\n\treturn print(counter)\n\ntrial()"
        },
        {
            "language": 3,
            "solution": "def _155A(scores):\n\n    count = 0\n    min_score = scores[0]\n    max_score = scores[0]\n    for index, score in enumerate(scores):\n\n        if index != 0:\n            if score > max_score:\n                max_score = score\n                count += 1\n            elif score < min_score:\n                min_score = score\n                count += 1\n    return(count)\n\ninput()\nscores = list(map(lambda x: int(x), input().split()))\nprint(_155A(scores))\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nval=list(map(int,input().split()))\n\ninti=val[0]\ninti2=val[0]\ncount=0\nfor i in range(1,n):\n    if val[i]>inti:\n        inti=val[i]\n        count+=1\n    if val[i]<inti2:\n        inti2=val[i]\n        count+=1\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = list(map(int, input().split()))\nbest = l[0]\nworst = l[0]\nans = 0\nfor i in range(1,n):\n\tif l[i]>best: \n\t\tans+=1\n\t\tbest = l[i]\n\tif l[i]<worst:\n\t\tans += 1\n\t\tworst = l[i]\nprint(ans)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=input().split()\nmi=int(l[0])\nma=mi\nans=0\nfor i in range(1,n):\n    s=int(l[i])\n    if s>ma:\n        ma=s\n        ans+=1\n    if s<mi:\n        mi=s\n        ans+=1\nprint(ans)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nscore = [int(i) for i in input().split()]\namaze = 0\nma = mi = score[0]\n\nfor i in range(1,n):\n    if (score[i] > ma):\n        ma = score[i]\n        amaze += 1\n    elif (score[i] < mi):\n        mi = score[i]\n        amaze += 1\n\nprint(amaze)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\ng = []\nr = []\nevent = 0\nfor i in range(n):\n    a = map(int,input().split())\n    g += a\n    break\nfor u in g:\n    r.append(u)\n    if u == max(r) or u == min(r):\n        if r.count(u) == 1:\n            event += 1\n        else:\n            continue\n    else:\n        event += 0\nprint(event - 1)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nnum_list = list(map(int, input().split()))\nmax_num = num_list[0]\nmin_num = num_list[0]\namaze_count = 0\nfor i in num_list:\n    if i> max_num:\n        amaze_count+=1\n        max_num = i\n    elif i< min_num:\n        amaze_count+=1\n        min_num = i\nprint(amaze_count)\n"
        },
        {
            "language": 1,
            "solution": "n = input()\na = map(int, raw_input().split())\nc = 0\nM = m = a[0]\n\nfor i in a[1:]:\n    if i > M:\n        c += 1\n        M = i\n    if i < m:\n        c += 1\n        m = i\nprint c"
        },
        {
            "language": 3,
            "solution": "a = int(input())\nb = input()\nlist1 = [int(i) for i in b.split()]\nm,n = [list1[0],list1[0]]\nw = 0\nfor i in range(1,a):\n    if list1[i] > n:\n        w += 1\n        n = list1[i]\n    if list1[i] < m:\n        w += 1\n        m = list1[i]\nprint(w)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  int n;\n  cin >> n;\n  unsigned int arr[n];\n  for (int i = 0; i < n; i++) {\n    cin >> arr[i];\n  }\n  int count = 0;\n  int min = arr[0];\n  int max = arr[0];\n  for (int i = 0; i < n; i++) {\n    if (max < arr[i]) {\n      count++;\n      max = arr[i];\n    } else if (min > arr[i]) {\n      count++;\n      min = arr[i];\n    }\n  }\n  cout << count;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nb=input().split()\nt=[]\nm=[]\nscore=0\nfor i in range(1,n+1):\n    t.append(int(b[i-1]))\n    if len(t)>1:\n        if t[-1]>max(m) or t[-1]<min(m):\n            score=score+1\n            m.append(int(b[i-1]))\n        else:\n            m.append(int(b[i-1]))\n    else:\n        m.append(int(b[i-1]))\nprint(score)\n"
        },
        {
            "language": 1,
            "solution": "n = int(input())\n\nscores = map(int, raw_input().split())\n\nminHistory = scores[0]\nmaxHistory = scores[0]\n\ncnt = 0;\nfor i in range(1, len(scores)) :\n    if scores[i] > maxHistory :\n        cnt += 1;\n        maxHistory = scores[i]\n    elif scores[i] < minHistory :\n        cnt += 1;\n        minHistory = scores[i]\nprint cnt\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.OutputStreamWriter;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\n\n/**\n * Author : Arihant Bansal\n * Date : 10-10-2020, Saturday\n **/\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        PrintWriter pw = new PrintWriter(new OutputStreamWriter(System.out));\n\n        int n = Integer.parseInt(br.readLine());\n        StringTokenizer st = new StringTokenizer(br.readLine());\n\n        int[] scores = new int[n];\n        int count = 0;\n        boolean dec = false, inc = false;\n\n        for (int i = 0; i < n; i++) {\n            scores[i] = Integer.parseInt(st.nextToken());\n            if(scores[0] > scores[i]) { dec = true; }\n            else if(scores[0] < scores[i]) { inc = true; }\n\n            for (int j = 0; j < i; j++) {\n                if(dec) {\n                    if(scores[j] <= scores[i]) { dec = false; }\n                } else if(inc) {\n                    if(scores[j] >= scores[i]) { inc = false; }\n                }\n            }\n\n            if(dec || inc) { count++; }\n        }\n\n        pw.println(count);\n\n        pw.flush();\n        pw.close();\n        br.close();\n    }\n}"
        },
        {
            "language": 3,
            "solution": "x = int(input())\ny = [int(i) for i in input().split()]\nb = 0\na = -1\nz = 0\nc = 999999\nfor i in y:\n    if a == -1:\n        a = i\n        c = i\n    else:\n        if i > a:\n            a = i\n            z += 1\n        elif i < c:\n            c = i\n            z += 1\nprint(z)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\nsmall = 0\nbig = 0\ns = 0\nfor i in range(n):\n    if i == 0:\n        big = small = a[i]\n    if a[i] > big:\n        big = a[i]\n        s += 1\n    if a[i] < small:\n        small = a[i]\n        s += 1\nprint(s)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\npoints = [int(i) for i in input().split()]\na = 0\nminp, maxp = points[0], points[0]\nfor i in range(1,n):\n    if points[i] < minp:\n        minp = points[i]\n        a += 1\n    elif points[i] > maxp:\n        maxp = points[i]\n        a += 1\nprint(a)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int nax = 1e5 + 5;\nconst int MOD = 1e9 + 7;\nconst int INTF = 2147483647;\nconst long long LLF = 9223372036854775807;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  int n, a, majing = 0;\n  cin >> n;\n  cin >> a;\n  int best = a;\n  int worst = a;\n  for (int i = 1; i < n; i++) {\n    cin >> a;\n    if (a > best) {\n      majing++;\n      best = a;\n    }\n    if (a < worst) {\n      majing++;\n      worst = a;\n    }\n  }\n  cout << majing << \"\\n\";\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "x=int(input())\na=list(map(int,input().split()))\nmn=a[0]\nmx=a[0]\nans=0\nfor i in range(1,x):\n    if a[i]<mn:\n        mn=a[i]\n        ans+=1\n    elif a[i]>mx:\n        mx=a[i]\n        ans+=1\nprint(ans)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nball = list(map(int, input().split()))\nabd = 0\nfor el in range(1, n):\n    if ball[el] > max(ball[:el]) or ball[el] < min(ball[:el]):\n        abd += 1\nprint(abd)"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\ns = map(int, raw_input().split())[:n]\nres = 0\nmins, maxs = s[0], s[0]\nfor i in range(1, n):\n  if mins > s[i]:\n    res += 1\n    mins = s[i]\n  if maxs < s[i]:\n    res += 1\n    maxs = s[i]\nprint res"
        },
        {
            "language": 1,
            "solution": "n=input()\na=map(int,raw_input().split(' '))\nmd=Md=a[0]\nc=0\nfor i in a[1:]:\n  if i<md:\n    md=i\n    c+=1\n  elif i>Md:\n    Md=i\n    c+=1\nprint c"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = list(map(int,input().split()))\nbest, worst = l[0],l[0]\nnumPerformances = 0\nfor i in range(1,len(l)):\n  if l[i] < worst:\n    numPerformances += 1\n    worst = l[i]\n  elif l[i] > best:\n    numPerformances += 1\n    best = l[i] \nprint(numPerformances)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\n\narr = list(map(int, input().split()))\n\nminScore,maxScore,ans = arr[0],arr[0],0\n\nfor i in range(1,n):\n    \n    if arr[i] < minScore:\n        \n        ans += 1\n        \n        minScore = arr[i]\n        \n    elif arr[i] > maxScore:\n        \n        ans += 1\n        \n        maxScore = arr[i]\n        \nprint(ans)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = [int(m) for m in input().split()]\ncount = 0\nfor i in range(1, len(l)):\n    flag = True\n    for j in range(0,i):\n        if l[i] <= l[j]:\n            flag = False\n            break\n    if flag == True:\n        count = count + 1\nfor i in range(1, len(l)):\n    flag = True\n    for j in range(0,i):\n        if l[i] >= l[j]:\n            flag = False\n            break\n    if flag == True:\n        count = count +1\nprint(count)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nscore = list(map(int,input().split()))\namazing = 0\nma = mi = score[0]\nfor i in range(n-1):\n    if score[i+1] < mi:\n        amazing += 1 \n        mi = score[i+1]\n    if score[i+1] > ma:\n        amazing += 1\n        ma = score[i+1]\nprint(amazing)\n    \n    "
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nmi=l[0]\nma=l[0]\nc=0\nfor i in range(1,n):\n    if(l[i]>ma):\n        c+=1\n        ma=l[i]\n    elif(l[i]<mi):\n        c+=1\n        mi=l[i]\nprint(c)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[int(i) for i in input().split()]\nma=a[0]\nmi=a[0]\nm=0\nfor i in range(1,n):\n    if a[i]>ma:\n        m+=1\n        ma=a[i]\n    elif a[i]<mi:\n        m+=1\n        mi=a[i]\nprint(int(m))"
        },
        {
            "language": 1,
            "solution": "__author__ = 'MoustaphaSaad'\n\nn = int(raw_input())\nli = map(int, raw_input().split())\nkoko = li[0]\nkokon = li[0]\nres = 0\n\nfor i in xrange(1, len(li)):\n    if koko < li[i]:\n        res += 1\n        koko = li[i]\n    if kokon > li[i]:\n        res += 1\n        kokon = li[i]\nprint res"
        },
        {
            "language": 3,
            "solution": "n = int(input())\narr = list(map(int, input().split()))\n\nmn = 0\nmx = 0\ncount = 0\nfor i in range(n):\n    if i == 0:\n        mn = arr[0]\n        mx = arr[0]\n        continue\n    if mn <= arr[i] <= mx:\n        continue\n    if mn > arr[i]:\n        mn = arr[i]\n        count += 1\n    elif mx < arr[i]:\n        mx = arr[i]\n        count += 1\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nmax=min=a[0]\nc=0\nfor i in range(1,n):\n    if max>a[i]:\n        c=c+1\n        max=a[i]\n    elif min<a[i]:\n        min=a[i]\n        c=c+1\nprint(c)"
        },
        {
            "language": 3,
            "solution": "a=int(input())\nsa=input().split(' ')\nsa2=[]\nfor element in sa:\n    sa2.append(int(element))\nmaxim=sa2[0]\nminim=sa2[0]\ncount=0\nfor x in range(1, len(sa2)):\n    if sa2[x]<minim:\n        count+=1\n        minim=sa2[x]\n    if sa2[x]>maxim:\n        count+=1\n        maxim=sa2[x]\nprint(count)\n"
        },
        {
            "language": 1,
            "solution": "q,m = input(), map(int, raw_input().split())\nmin = max = m[0]\nc = 0\nfor m in m[1:]:\n    if min > m:\n        min = m\n        c += 1\n    if max < m:\n        max = m\n        c += 1\nprint c"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, c = 0, a[1000];\n  cin >> n;\n  cin >> a[0];\n  int mx = a[0];\n  int mn = a[0];\n  for (int i = 1; i < n; ++i) {\n    cin >> a[i];\n    if (a[i] > mx) {\n      c++;\n      mx = a[i];\n    }\n    if (a[i] < mn) {\n      c++;\n      mn = a[i];\n    }\n  }\n  cout << c;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nk=0\n\na=[int(n) for n in input().split(\" \")]\nrec=a[0]\nantirec=a[0]\ni=1\nfor i in range(len(a)):\n    if a[i]>rec:\n        rec=a[i]\n        k=k+1\n\n    elif a[i]<antirec:\n        antirec=a[i]\n        k=k+1\nprint(k)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\n\nl=list(map(int, input().split()))\ncount=0\nmin=l[0]\nmax=l[0]\n    \nfor i in range(1,n):\n\n    if l[i]<min:\n        min=l[i]\n        count+=1\n    \n    elif l[i]>max:\n        max=l[i]\n        count+=1\n        \nprint(count)\n        "
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nif len(a)<=1:\n    print(0)\nelse:\n    x=0\n    for i in range(1, n):\n        if (a[i]>max(a[0:i])) or (a[i]<min(a[0:i])):\n            x+=1\n    print(x)\n    \n\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[int(x) for x in input().split()]\ncount=0\nfor i in range(1,n):\n    b=a[0:i+1]\n    if min(b[0:i])>b[-1] or max(b[0:i])<b[-1]:\n        count+=1\nprint(count)"
        },
        {
            "language": 3,
            "solution": "# for( int len = 1; len < n; len++){\n# \tfor( int i = 0; i + len < n; i++){\n# \t\tint j = i + len;\n# \t\tif(s1[i - 1] == s1[j - 1]){\n# \t\t\t/* Your code */\n# \t\t}\n# \t\telse{\n# \t\t\t/* Your code */\n# \t\t}\n# \t}\n# }\n\n# for len in range(1, 5):\n#     for i in range(0, 5):\n#         if i+len>=10:\n#             break\n#         j=i+len\n#         print(i,j)\n\n# from bisect import bisect\n\n# for t in range(1,int(input())+1):\n#     n,k=[*map(int, input().split())]\n#     arr=[*map(int, input().split())]\n#     arr.sort()\n#     exp=sum(arr)/len(arr)\n#     for _ in range(k):\n#         idx = bisect(arr, exp)\n#         exp=(exp*idx + sum(arr[idx:]))/len(arr)\n#     print(\"case #{}: {}\".format(t, exp))\n\n# from math import gcd\n# N=100\n# seen = set()\n# for n in range(1, N):\n#     for m in range(n+1, N):\n#         x = m**2 - n**2\n#         y = 2*m*n\n#         z = m**2 + n**2\n#         xyz_gcd = gcd(z,gcd(x,y))\n#         if z<=N:\n#             triplet = tuple(sorted((x//xyz_gcd, y//xyz_gcd, z//xyz_gcd)))\n#             if triplet not in seen:\n#                 print(triplet)\n#                 seen.add(triplet)\n                \n                \n\ninput()\narr=[*map(int, input().split())]\n\nmin=[arr[0]]\nmax=[arr[0]]\nres=0\nfor i in range(1,len(arr)):\n    el=arr[i]\n    if el>max[-1]:\n        max.append(el)\n        res+=1\n    elif el<min[-1]:\n        min.append(el)\n        res+=1\nprint(res)\n        \n\n\n    \n"
        },
        {
            "language": 3,
            "solution": "input()\nm=-1;n=10001;c=0;count=0\nfor i in map(int,input().strip().split()):\n    if c!=0 and (i>m or i<n):\n            count+=1\n    m=max(i,m)\n    n=min(i,n)\n    c=1\nprint(count)\n"
        },
        {
            "language": 3,
            "solution": "length = input()\nscores = input().split()\nl = 0\nlow = (int)(scores[0])\nhigh = (int)(scores[0])\nfor i in scores:\n    if (int)(i)<low:\n        l = l + 1\n        low = (int)(i)\n    if (int)(i)>high:\n        l = l + 1\n        high = (int)(i)\nprint(l)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nnums = [int(x) for x in input().split()]\nmaxa = mina = nums[0]\ncount = 0\nfor i in range(1, n):\n\n    if nums[i] > maxa:\n        count += 1\n        maxa = nums[i]\n\n    elif nums[i] < mina:\n        count += 1\n        mina = nums[i]\n\nprint(count)"
        },
        {
            "language": 3,
            "solution": "input()\ns=[int(i) for i in input().split()]\nma,mi=s[0],s[0]\namazing=0\nfor i in s:\n    if i>ma:\n        amazing+=1\n        ma=i\n    elif i<mi:\n        amazing+=1\n        mi=i\nprint(amazing)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nc = map(int,input().split())\nd = []\nans = 0\nfor i in c:\n\tif i not in d:\n\t\td.append(i)\n\t\tif max(d)==i:\n\t\t\tans += 1\n\t\telif min(d)==i:\n\t\t\tans += 1\nprint(ans-1)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int a, b, n, x, r = 0;\n  cin >> n >> x;\n  a = b = x;\n  for (int i = 1; i < n; ++i) {\n    cin >> x;\n    if (x > a) ++r, a = x;\n    if (x < b) ++r, b = x;\n  }\n  cout << r;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "x=int(input())\ny=[int(a) for a in input().split()]\nz=y[0]\ny.remove(y[0])\nmi=z\nma=z\na=0\nfor i in y:\n    if i<mi:\n        mi=i\n        a+=1\n    elif i>ma:\n        ma=i\n        a+=1\nprint(a)"
        },
        {
            "language": 3,
            "solution": "a = int(input())\nif a == 1:\n    print(0)\nelse:\n    e = 0\n    b = list(map(int, input().split()))\n    c = b[0]\n    d = b[0]\n    for i in range (1, a):\n        if b[i] > c:\n            c = b[i]\n            e += 1\n        elif b[i] < d:\n            d = b[i]\n            e += 1\n    print(e)"
        },
        {
            "language": 3,
            "solution": "a = int(input())\nb = list(map(int, input().split()))\namz = 0\nhs = ls = b[0]\n\nfor i in b[1:]:\n    if i > hs:\n        amz += 1\n        hs = i\n    if i < ls:\n        amz += 1\n        ls = i\n\nprint(amz)\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n = int(input())\n    alst = list(map(int, input().split()))\n    max_ = alst[0]\n    min_ = alst[0]\n    ans = 0\n    for a in alst[1:]:\n        if a > max_:\n            max_ = a\n            ans += 1\n        elif a < min_:\n            min_ = a\n            ans += 1\n    print(ans)\n\nmain()\n\"\"\"\nfor _ in range(int(input())):\n    main()\n\"\"\""
        },
        {
            "language": 3,
            "solution": "n = int(input())\nm = list(map(int, input().split()))\n\ncnt = -2\nmin_val = 10001\nmax_val = -1\n\nfor v in m:\n    if v < min_val:\n        cnt += 1\n        min_val = v\n    if v > max_val:\n        cnt += 1\n        max_val = v\n\nprint(cnt)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nmx=0\nmaax=a[0]\nmiin=a[0]\nif(len(a)==1):\n    print (0)\nelif(len(a)==1):\n    print (1)\nelse:\n    if(a[0]>a[1]):\n        miin=a[1]\n        mx=mx+1\n    elif(a[0]<a[1]):\n        maax=a[1]\n        mx=mx+1\n    for i in range (2,len(a)):\n        if(a[i]>maax):\n            maax=a[i]\n            mx=mx+1\n        elif(a[i]<miin):\n            miin=a[i]\n            mx=mx+1\n    print (mx)\n"
        },
        {
            "language": 4,
            "solution": "import java.util.* ;\nimport java.lang.Math ;\nimport java.io.*;\npublic class Main\n{\n    \n\tpublic static int ar[] = new int[100005] ;\n\tpublic static int br[] = new int[100005] ;\n\tpublic static void main(String[] args)\n\t{\n\t\tsolve() ;\n\t}\n\tpublic static void solve(){\n\t\tScanner in = new Scanner(System.in) ;\n\t\tint n, mn = 0, mx = 0, ans = 0 ;\n\t\tn = in.nextInt() ;\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tint x, y ;\n\t\t\tx = in.nextInt() ;\n\t\t\tif(i == 0){\n\t\t\t\tmx = x; mn = x ;\n\t\t\t}\n\t\t\tif(x > mx ){\n\t\t\t\tmx = x ;\n\t\t\t\tans++ ;\n\t\t\t}\n\t\t\telse if(x < mn){\n\t\t\t\tmn = x ;\n\t\t\t\tans++ ;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(ans) ;\n\t}\n}"
        },
        {
            "language": 3,
            "solution": "n = int(input())\n\nA= list(map(int,input().split()))\n\nma, mi = A[0], A[0]\nans = 0\nfor i in A[1:]:\n    if i > ma:\n        ma = i\n        ans += 1\n    if i < mi:\n        mi = i\n        ans += 1\nprint(ans)        "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  int a[n];\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n  }\n  int cnt = 0;\n  int max1 = a[0];\n  int min1 = a[0];\n  for (int i = 0; i < n; i++) {\n    if (a[i] > max1) {\n      max1 = a[i];\n      cnt++;\n    }\n    if (a[i] < min1) {\n      min1 = a[i];\n      cnt++;\n    }\n  }\n  cout << cnt;\n}\n"
        },
        {
            "language": 3,
            "solution": "#include <bits/stdc++.h>\n#define SYNC ios_base::sync_with_stdio(0);\n#define IO STD std_enable = 1; cin.tie(0);\n#define STD /*\nfrom sys import (\nstdin, stdout, exit as sys_ret)\n\"\"\"****************************\n\n       Interactive Tasks:\n\n          / Python: /       \"\"\"\nf_input, f_print, f_flush = (\n        stdin.readline,\n        stdout.write,\n        stdout.flush)\n\n\"\"\"        / C++ /\n       #import <cstdio>\n       fflush(stdout);\n             or\n       #import <iostream>\n       cout << endl;\n\n   \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n    Don't raise your voice,\n    improve your argument.\n   \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n   cat /dev/ass > /dev/head\n            Ctrl+C\n   cat /knowledge > /dev/head\n\n                \u00a9 Jakov Gellert\n                        frvr.ru\n\n****************************\"\"\"\n# */ using namespace std; int\n#define boost_stream(); IO SYNC\n\n# 5\n\ncount, min_i, max_i = 0, 0, 0\namount = int(f_input())\ncontest = [int(_) for _ in f_input().split()]\nfor i in range(1, amount):\n    if contest[i] > contest[max_i]:\n        count += 1\n        max_i = i\n    if contest[i] < contest[min_i]:\n        count += 1\n        min_i = i\nf_print(str(count))"
        },
        {
            "language": 3,
            "solution": "n=int(input())\ns=input().split()\nk=0\nt=[int(s[0])]\nfor i in range(n-1):\n    ti=int(s[i+1])\n    if ti>max(t) or ti<min(t):\n        k=k+1\n    t.append(ti)\nprint(k)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(input().split(' '))\na=[int(i) for i in a]\nif n!=1:\n    if a[0]!=a[1]:\n        b=min(a[0],a[1])\n        c=max(a[0],a[1])\n        s=1\n    else:\n        b=a[0]\n        c=a[0]\n        s=0\n    for i in range(2,n):\n        if a[i]>c :\n            s+=1\n            c=a[i]\n        elif a[i]<b:\n            s+=1\n            b=a[i]\n\n    print(s)\nelse:\n    print(0)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nA=[int(i) for i in input().split()]\nMax=A[0]\nMin=A[0]\nans=0\nfor i in range(n):\n        if A[i]>Max:\n            ans+=1\n            Max=A[i]\n        elif A[i]<Min:\n            ans+=1\n            Min=A[i]\nprint(ans)"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class Main\n{\n    public static void main(String args[])\n    {\n        Scanner sc=new Scanner(System.in);\n        int n=sc.nextInt();\n        //int a[]=new int[n];\n        int a=sc.nextInt();\n        int count=0;\n        int min=a;\n        int max=a;\n        for(int i=1;i<n;i++)\n        {\n           a=sc.nextInt();\n           if(a>max)\n           {\n               count++;\n               max=a;\n           }\n          else if(a<min)\n          {\n              count++;\n              min=a;\n          }\n        }\n        System.out.println(count);\n    }\n}"
        },
        {
            "language": 3,
            "solution": "t=int(input())\na=list(map(int,input().split()))\n\nif t==1:\n    print(0)\nelse:\n    b=a[0]\n    c=a[0]\n    count=0\n    for i in range(1,t):\n        if i==1:\n            if a[i]>b:\n                count+=1\n                b=max(b,a[i])\n            elif a[i]<c:\n                count+=1\n                c=min(c,a[i])\n        else:\n            if a[i]>b:\n                count+=1\n                b=a[i]\n            elif a[i]<c:\n                count+=1\n                c=a[i]\n    print(count)\n           \n        \n"
        },
        {
            "language": 3,
            "solution": "a,b,=int(input()),list(map(int,input().split()))\nmi,ma,am=b[0],b[0],0\nfor i in b[1:]:\n    if i>ma:\n        am+=1\n        ma=i\n    if i<mi:\n        am+=1\n        mi=i\nprint(am)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input()); a = [int(x) for x in input().split()]; ct = 0\nfor i in range(1, n):\n    if a[i] < min(a[:i]) or a[i] > max(a[:i]): ct += 1\nprint(ct)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long int n, c = 0;\n  cin >> n;\n  vector<long long int> a(n);\n  cin >> a[0];\n  long long int max = a[0];\n  long long int min = a[0];\n  for (long long int i = 1; i < n; i++) {\n    cin >> a[i];\n    if (a[i] > max) {\n      max = a[i];\n      c++;\n    }\n    if (a[i] < min) {\n      min = a[i];\n      c++;\n    }\n  }\n  cout << c;\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\n/**\n * @author Mikhail Sedov [28.02.13 1:32]\n */\npublic class Problem155A {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n\n        int n = in.nextInt();\n\n        int score = in.nextInt();\n        int min = score;\n        int max = score;\n\n        int ret = 0;\n        for (int i = 1; i < n; i++) {\n            score = in.nextInt();\n            if (score > max) {\n                max = score;\n                ret++;\n            }\n            if (score < min) {\n                min = score;\n                ret++;\n            }\n        }\n\n        System.out.println(ret);\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nscore = [int(x) for x in input().split()]\na = score[0]\nb = score[0]\nans = 0\nfor i in range(1,n):\n    if score[i] > a:\n        ans += 1\n        a = score[i]\n    elif score[i] < b:\n        ans += 1\n        b = score[i]\nprint(ans)\n"
        },
        {
            "language": 3,
            "solution": "x=int(input())\nl=list(map(int,input().split()))\ns=0\nfor i in range(1,x):\n    if max(l[:i])<l[i]:\n        s+=1\n    if min(l[:i])>l[i]:\n        s+=1\nprint(s)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nma=l[0]\nmi=l[0]\ncount=0\nfor i in range(n):\n\tif l[i]>ma:\n\t\tma=l[i]\n\t\tcount+=1\n\telif l[i]<mi:\n\t\tmi=l[i]\n\t\tcount+=1\nprint(count)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, a, max, min;\n  cin >> n;\n  cin >> a;\n  int count = 0;\n  max = a;\n  min = a;\n  for (int i = 1; i < n; i++) {\n    cin >> a;\n    if (a > max) {\n      max = a;\n      count++;\n    } else if (a < min) {\n      min = a;\n      count++;\n    }\n  }\n  cout << count;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[int(i) for i in input().split()]\nmin=a[0]\nmax=a[0]\namazing=0\nfor i in range(0,n):\n    if a[i]>max:\n        max=a[i]\n        amazing+=1\n    elif a[i]<min:\n        min=a[i]\n        amazing+=1\n    else:\n        continue\nprint(amazing)"
        },
        {
            "language": 1,
            "solution": "n=input()\ns=map(int,raw_input().split())\nans=0\nbig=s[0];small=s[0]\nfor i in s[1:]:\n    if i>big or i<small:\n        ans+=1\n    big=max(big,i)\n    small=min(small,i)\nprint ans\n"
        },
        {
            "language": 3,
            "solution": "n=int(input().strip())\na=list(map(int,input().strip().split()))\nmax=a[0]\nmin=a[0]\nc=0\nfor i in range(1,len(a)):\n    if a[i]>max:\n        max=a[i]\n        c+=1\n    if a[i]<min:\n        min=a[i]\n        c+=1\nprint(c)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(int(i) for i in input().split())\nmin_point=a[0]\nmax_point=a[0]\nnum=0\nfor i in a:\n\tif i>max_point:\n\t\tnum+=1\n\t\tmax_point=i\n\tif i<min_point:\n\t\tnum+=1\n\t\tmin_point=i\nprint(num)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nc=0\nfor i in range(1,n):\n    if(a[i]>max(a[0:i]) or a[i]<min(a[0:i])):\n        c=c+1\nprint(c)\n    \n    "
        },
        {
            "language": 3,
            "solution": "input()\nMin=None\nMax=None\nx=input().split()\nc=0\n\nfor i in x:\n\n    if Min==None:\n        Min=int(i)\n    if Max==None:\n        Max=int(i)\n        continue\n\n    if int(i)<Min:\n        Min=int(i)\n        c+=1\n    elif int(i)>Max:\n        Max=int(i)\n        c+=1\n\nprint(c)\n        \n    \n"
        },
        {
            "language": 1,
            "solution": "n = input()\nscores = map(int, raw_input().strip().split())\n\nmins = scores[0]\nmaxs = scores[0]\n\namaze = 0\n\nfor x in scores[1:]:\n\tif x < mins:\n\t\tamaze += 1\n\t\tmins = x\n\telif x > maxs:\n\t\tamaze += 1\n\t\tmaxs = x\n\nprint amaze\n"
        },
        {
            "language": 3,
            "solution": "while True:\n\ttry:\n\t\tn=int(input())\n\t\tl=[int(i) for i in input().split()]\n\t\tminl=maxl=l[0]\n\t\tamazing=0\n\t\tfor i in range(n-1):\n\t\t\tc=l[i+1]\n\t\t\tif l[i+1]>maxl or l[i+1]<minl:\n\t\t\t\tamazing+=1\n\t\t\tminl=min(minl,c)\n\t\t\tmaxl=max(maxl,c)\n\t\tprint(amazing)\n\texcept EOFError:\n\t\tbreak"
        },
        {
            "language": 4,
            "solution": "import java.io.File;\nimport java.io.IOException;\nimport java.util.Scanner;\n\npublic class Main {\n\tstatic Scanner sc;\n\tstatic boolean debug = false;\n\tstatic boolean specialChecker = false;\n\tstatic boolean statement = true;\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tif (args.length > 0 && args[0].equals(\"debug\")) debug = true;\n\t\tsc = debug == false ? new Scanner(System.in) : new Scanner(new File(\"input.txt\"));\n\t\t\n\t\tint t = debug == false ? 1 : sc.nextInt();\n\t\tfor (int i = 0; i < t ; i++) {\n\t\t\tif (debug) {\n\t\t\t\tstatement = true;\n\t\t\t\tSystem.out.print(\"TEST#\" + (i + 1) + \": \");\n\t\t\t}\t\t\t\n\t\t\tsolve();\n\t\t\tif (debug && specialChecker) specialChecker();\n\t\t\tSystem.out.println(debug == false ? \"\" : statement == false ? \"WRONG\" : \"ACCEPT\");\n\t\t\tif (!statement) break;\n\t\t}\n\t}\n\n\tstatic void solve() {\n\t\tint n = sc.nextInt();\n\t\tint i = sc.nextInt();\n\t\tint result = 0;\n\t\tint max = i, min = i;\n\t\t\n\t\tfor (int j = 1 ; j < n ; j++) {\n\t\t\tint x = sc.nextInt();\n\t\t\t\n\t\t\tif (x > max) {\n//\t\t\t\tSystem.out.println(\"s\" + x);\n\t\t\t\tresult++;\n\t\t\t\tmax = x;\n\t\t\t} else if (x < min) {\n//\t\t\t\tSystem.out.println(\"x\" + x);\n\t\t\t\tresult++;\n\t\t\t\tmin = x;\n\t\t\t}\n\t\t}\n\t\t\n\t\tout(result, \"\\n\");\n\t}\n\t\n\tstatic void out(Object s, String s2) {\n\t\tString s1 = s.toString();\n\t\tif (debug && !specialChecker) {\n\t\t\tString[] words = s1.split(\" \");\n\t\t\t\n\t\t\tfor (int i = 0 ; i < words.length ; i++) {\n\t\t\t\tString ans = sc.next();\n\t\t\t\tif (words[i].compareTo(ans) != 0) {\n\t\t\t\t\tSystem.out.print(\"Should be \\\"\" + ans + \"\\\", not \\\"\" + words[i] + \"\\\". \");\n\t\t\t\t\tstatement = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\t\t\t\n\t\t} else if (debug && specialChecker) {\n\t\t\t//\n\t\t} else {\n\t\t\tSystem.out.print(s1 + s2);\n\t\t}\n\t}\n\t\n\tstatic void specialChecker() {\n\t\t//\n\t}\n}"
        },
        {
            "language": 3,
            "solution": "# http://codeforces.com/problemset/problem/155/A\n\nn = int(input())\nlis = [int(x) for x in input().split()]\nmax = min = lis[0]\namz = 0;\nfor i in range(1,n):\n    if lis[i] > max:\n        max = lis[i]\n        amz+=1\n    elif lis[i] < min:\n        min = lis[i]\n        amz+=1\nprint(amz)\n"
        },
        {
            "language": 3,
            "solution": "num = int(input())\nl = list(map(int, input().split()))\nmaxnum = l[0]\nminnum = l[0]\nf = 0\nfor i in range(1, len(l)):\n  if l[i] > maxnum:\n    f += 1\n    maxnum = l[i]\n  elif l[i] < minnum:\n    f += 1\n    minnum = l[i]\nprint(f)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nli = list(map(int, input().split()))\ncount = 0\nmax_temp = li[0]\nmin_temp = li[0]\nfor i in range(n-1):\n    if li[i+1] > li[i]:\n        if li[i+1] > max_temp:\n            count += 1\n            max_temp = li[i+1]\n    elif li[i+1] < li[i]:\n        if li[i+1] < min_temp:\n            count += 1\n            min_temp = li[i+1]\nif len(li) == 1:\n    print(0)\nelif len(li) == 2:\n    if li[0] == li[1]:\n        print(0)\n    else:\n        print(1)\nelse:\n    print(count)\n\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nx=input().split()\nmn=int(x[0])\nmx=int(x[0])\nc=0\nfor i in x:\n    if int(i)>mx:\n        c+=1\n        mx=int(i)\n    elif int(i)<mn:\n        c+=1\n        mn=int(i)\nprint(c)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\ns=0\nfor i in range(1,n):\n    if l[i]<min([l[r] for r in range(0,i)]) or l[i]>max([l[r] for r in range(0,i)]):\n        s=s+1\nprint(s)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, a[1005], i, max1, min1, count = 0;\n  cin >> n;\n  for (i = 0; i < n; i++) {\n    cin >> a[i];\n  }\n  max1 = a[0];\n  min1 = a[0];\n  for (i = 1; i < n; i++) {\n    if (a[i] > max1) {\n      max1 = a[i];\n      count++;\n    }\n    if (a[i] < min1) {\n      min1 = a[i];\n      count++;\n    }\n  }\n  cout << count;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  int t;\n  cin >> t;\n  int x;\n  cin >> x;\n  int max = x, min = x, ans = 0;\n  for (int i = 1; i < t; i++) {\n    int y;\n    cin >> y;\n    if (y > max) {\n      ans++;\n      max = y;\n    }\n    if (y < min) {\n      min = y;\n      ans++;\n    }\n  }\n  cout << ans;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "input()\nn = list(map(int, input().split(\" \")))\nmn, mx, count = n[0], n[0], 0\nfor i in range(1, len(n)):\n    if n[i] > mx:\n        mx = n[i]\n        count += 1\n    elif n[i] < mn:\n        mn = n[i]\n        count += 1\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().strip().split()))\ncount=0;\nmin=l[0];\nmax=l[0];\nfor i in range(1,len(l)):\n    if(l[i]<min):\n        min=l[i];\n        count+=1;\n    elif(l[i]>max):\n        max=l[i];\n        count+=1;\n    else:\n        pass;\nprint(count);"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\n\npublic class A_155 {\n    static PrintWriter pw = new PrintWriter(System.out);\n\n    public static void main(String arg[]) throws IOException {\n        InputStreamReader isr = new InputStreamReader(System.in);\n        BufferedReader br = new BufferedReader(isr);\n        StringTokenizer token = new StringTokenizer(\" \");\n\n\n//        int t = 0;\n        int n = 0;\n        int i = 0;\n        int arr[];\n\n        n = Integer.parseInt(br.readLine());\n        token = new StringTokenizer(br.readLine());\n        arr=new int[n];\n\n\n        for (i = 0; i <= n - 1; i++) {\n            arr[i]= Integer.parseInt(token.nextToken());\n        }\n\n        pw.println(getResult(arr));\n\n        pw.close();\n\n    }\n\n    private static int getResult(int arr[]) {\n        int count=0;\n\n        int max=arr[0];\n        int min=arr[0];\n\n        int i=0;\n        int len=arr.length;\n\n        for(i=1;i<=len-1;i++) {\n            if (arr[i] > max) {\n                max = arr[i];\n                count++;\n            } else if (arr[i] < min) {\n                min = arr[i];\n                count++;\n            }\n        }\n\n\n        return count;\n\n\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint main() {\n  int i, j, k, n, p, count = 0;\n  int ara[1000];\n  scanf(\"%d\", &n);\n  for (i = 0; i < n; i++) {\n    scanf(\"%d\", &ara[i]);\n  }\n  for (i = 1; i < n; i++) {\n    k = 0;\n    p = 0;\n    for (j = 0; j < i; j++) {\n      if (ara[i] > ara[j])\n        k += 1;\n      else if (ara[i] < ara[j])\n        p += 1;\n    }\n    if (i == k || i == p) count += 1;\n  }\n  printf(\"%d\", count);\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "# coding=utf-8\n\nif __name__ == '__main__':\n    n = int(input())\n    line = str(input()).split()\n    line = [int(it) for it in line]\n    max_it = line[0]\n    min_it = line[0]\n    value = 0\n    for i in range(1, n):\n        if line[i] > max_it:\n            max_it = line[i]\n            value += 1\n        if line[i] < min_it:\n            min_it = line[i]\n            value += 1\n    print(value)\n"
        },
        {
            "language": 3,
            "solution": "\ninput()\nn = list(map(int, input().split()))\ncounter = 1\nmaximum, minimum = max(n[0:2]), min(n[0:2])\nif minimum == maximum:\n    counter = 0\nfor i in range(2, len(n)):\n    if n[i] > maximum:\n        counter += 1\n        maximum = n[i]\n    elif n[i] < minimum:\n        counter += 1\n        minimum = n[i]\nprint(0 if len(n) == 1 else counter)\n\n# UBCF\n# CodeForcesian\n# \u2665\n# \u0635\u062f\u0627\u06cc \u0628\u06cc \u062c\u0627\u0646\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, a;\n  cin >> n >> a;\n  int min = a, max = a;\n  int ans = 0;\n  for (int i = 1; i < n; i++) {\n    cin >> a;\n    if (a > max) {\n      max = a;\n      ans++;\n    }\n    if (a < min) {\n      min = a;\n      ans++;\n    }\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nnumbers = list(map(lambda x: int(x), input().split() ))\namazing = 0\n_max = numbers[0]\n_min = numbers[0]\nfor i in range (1, n):\n    if numbers[i] > _max:\n        amazing += 1\n        _max = numbers[i]\n    elif numbers[i] < _min:\n        amazing += 1\n        _min = numbers[i]\nprint(amazing)\n\n    "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios ::sync_with_stdio(false);\n  long long n, i, cnt = 0;\n  int a[1005];\n  cin >> n;\n  for (i = 0; i < n; i++) cin >> a[i];\n  int mx = a[0], mn = a[0];\n  for (i = 1; i < n; i++) {\n    if (a[i] > mx || a[i] < mn) cnt++;\n    mx = max(mx, a[i]);\n    mn = min(mn, a[i]);\n  }\n  cout << cnt;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nA=[int(i) for i in input().split()]\ntotal=0\nfor i in range(1,n):\n    if A[i]>max(A[:i]):\n        total+=1\n    elif A[i]<min(A[:i]):\n        total+=1\n    else:\n        continue\nprint(total)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\ncount = 0\nlist1 = list(map(int,input().split()))\nlist2 = [list1[0]]\nfor m in range(1,n):\n    if list1[m] > max(list2) or list1[m] < min(list2):\n        count += 1\n    list2.append(list1[m])\nprint(count)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[int(i) for i in input().split()]\nsumm=0\nfor i in range(n):\n    if i==0:\n        less=a[0]\n        more=a[0]\n        continue\n    if a[i]>more:\n        summ+=1\n        more=a[i]\n    elif a[i]<less:\n        summ+=1\n        less=a[i]\nprint(summ)"
        },
        {
            "language": 3,
            "solution": "n,a=int(input()),[int(i) for i in input().split()]\nprint(sum(not min(a[:i]) <= a[i] <= max(a[:i]) for i in range(1,n)))"
        },
        {
            "language": 3,
            "solution": "N = int(input())\nL = list(map(int, input().split()))\n\nminv = L[0]\nmaxv = L[0]\nans = 0\nfor i in range(1, N):\n    if L[i] < minv:\n        ans += 1\n        minv = L[i]\n    if L[i] > maxv:\n        ans += 1\n        maxv = L[i]\nprint(ans)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na = list(map(int, input().split()))\nmini=a[0]\nmaxi=a[0]\nk=0\nfor i in range(1,n):\n    if a[i]>maxi:\n        maxi=a[i]\n        k+=1\n    if a[i]<mini:\n        mini=a[i]\n        k+=1\nprint(k)"
        },
        {
            "language": 3,
            "solution": "__author__ = \"runekri3\"\n\nn = int(input())\npoints_list = list(map(int, input().split()))\ncur_min = cur_max = points_list.pop(0)\nperformances = 0\n\nfor points in points_list:\n    if points < cur_min:\n        cur_min = points\n        performances += 1\n    elif points > cur_max:\n        cur_max = points\n        performances += 1\n\nprint(performances)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nc=0\nx=[]\nfor i in range(n):\n    if(i==0):\n        x.append(l[i])\n        a=l[i]\n        b=l[i]\n    else:\n        if(l[i]<a or l[i]>b):\n            c+=1\n        x.append(l[i])\n        a=min(x)\n        b=max(x)\nprint(c)"
        },
        {
            "language": 1,
            "solution": "n = input()\na = map(int, raw_input().split())\nflag = 1\nmx = 0\nc = 0\nmi = 0\nfor x in a:\n    if flag == 1:\n        flag = 0\n        mx = x\n        mi = x\n    else:\n        if x > mx:\n            c += 1\n            mx = x\n        if x < mi:\n            c += 1\n            mi = x\nprint c\n"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\nmarks = map(int, raw_input().split())\nmi = marks[0]\nma = marks[0]\n\nans = 0\nfor i in xrange(1, len(marks)):\n    if (marks[i] > ma):\n        ma = marks[i]\n        ans += 1\n    elif (marks[i] < mi):\n        mi = marks[i]\n        ans += 1\nprint ans"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint main() {\n  int n, s[1000], i, count = 0, max, min, a, b;\n  scanf(\"%d\", &n);\n  for (i = 0; i < n; i++) scanf(\"%d\", &s[i]);\n  min = max = s[0];\n  for (i = 0; i < n; i++) {\n    if (min > s[i]) {\n      min = s[i];\n      count++;\n    }\n    if (max < s[i]) {\n      max = s[i];\n      count++;\n    }\n  }\n  printf(\"%d\\n\", count);\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "num = int(raw_input())\narray = map(int, raw_input().split())\nmax, min = array[0], array[0]\naux = 0\nfor i in array:\n    if i > max:\n        max = i\n        aux += 1\n    elif i < min:\n        min = i\n        aux += 1\nprint aux\n\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = [int(x) for x in input().split()]\na = 0\nfor i in range(1,len(l)):\n    c1 = 0\n    c2 = 0\n    for j in range(i-1,-1,-1):\n        if l[i]  < l[j]:\n            c1 += 1\n        elif l[i] > l[j]:\n            c2 += 1\n    if c1 == i or c2 == i:\n        a += 1\nprint(a)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int, input().rstrip().split()))\nmax=a[0]\nmin=a[0]\nc=0\nfor _ in range(n):\n    if a[_]<min:\n        c+=1\n        min=a[_]\n    if a[_]>max:\n        c+=1\n        max=a[_]\nprint(c)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nL=[int(i) for i in input().split()]\namazing=0\ndef t(i):\n    A=[L[x] for x in range(0,i)]\n    if L[i]>max(A) or L[i]<min(A):\n        return'YES'\n    else:\n        return'NO'\nfor i in range(1,len(L)):\n    if t(i)=='YES':\n        amazing=amazing+1\n    else:\n        pass\nprint(amazing)\n"
        },
        {
            "language": 1,
            "solution": "def solve(scores):\n    smallest = largest = scores[0]\n    amazing = 0\n    for score in scores[1:]:\n        if(score < smallest):\n            smallest = score\n            amazing+=1\n        if(score > largest):\n            largest = score\n            amazing+=1\n    return amazing\n\n\nn = int(input())\nscores = map(int,raw_input().split(\" \"))\nprint solve(scores)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int a[100000], n, i, max, min, mx, mn, req;\n  cin >> n;\n  mx = 0;\n  mn = 0;\n  for (i = 0; i < n; i++) {\n    cin >> a[i];\n  }\n  max = a[0];\n  min = a[0];\n  for (i = 1; i < n; i++) {\n    if (a[i] > max) {\n      mx++;\n      max = a[i];\n    }\n    if (a[i] < min) {\n      mn++;\n      min = a[i];\n    }\n  }\n  req = mx + mn;\n  cout << req;\n}\n"
        },
        {
            "language": 4,
            "solution": "\n\nimport java.util.Scanner;\n\npublic class A\n{\n    public A()\n    {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int mas[] = new int[n];\n        \n        for (int i = 0 ; i < n ; i ++)\n        {\n            mas[i] = sc.nextInt();\n        }\n        int b = mas[0];\n        int a = mas[0];\n        int v = 0;\n        for (int i = 1; i < n ; i ++)\n        {\n            if(mas[i]>b)\n            {\n                b = mas[i];\n                v++;\n            }\n            else if(mas[i]<a)\n            {\n                a = mas[i];\n                v++;\n            }\n        }\n        \n        System.out.print(v);\n        \n        \n        \n    }\n    public static void main(String[] args)\n    {\n        new A();      \n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nnumbers = list(map(int, input().split()))\nmaxi = mini = numbers[0]\nwow = 0\nfor i in numbers[1:]:\n\tif i < mini:\n\t\twow+=1\n\t\tmini = i\n\telif i > maxi:\n\t\twow+=1\n\t\tmaxi = i\n\telse:\n\t\tcontinue\nprint(wow)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nA = [int(i) for i in input().split()]\nprint(sum([1 for i in range(1,n) if (all(j > A[i] for j in A[:i]) or all(j < A[i] for j in A[:i]))]))"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=input().split()\nfor i in range(n):\n    a[i]=int(a[i])\nt=0\nma=a[0]\nmi=a[0]\nfor i in range(1,n):\n    if a[i]>ma:\n        ma=a[i]\n        t+=1\n    elif a[i]<mi:\n        mi=a[i]\n        t+=1\nprint(t)"
        },
        {
            "language": 3,
            "solution": "temp = input()\nar = []\nfor i in input().split(' '):\n    ar.append(int(i))\ncurrMax = ar[0]\ncurrMin = ar[0]\ncount = 0\nfor i in ar:\n    if i<currMin:\n        count = count + 1\n        currMin = i\n    elif i>currMax:\n        count = count + 1\n        currMax = i\nprint(count)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int smallest, largest, n, count = 0, a;\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> a;\n    if (i == 0) {\n      smallest = a;\n      largest = a;\n    } else {\n      if (a > largest) {\n        count += 1;\n        largest = a;\n      } else if (a < smallest) {\n        count += 1;\n        smallest = a;\n      }\n    }\n  }\n  cout << count;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nA=list(map(int,input().split()))\ncount=0\nD=[]\nfor i in A:\n    if i not in D:\n        D.append(i)\n        if max(D)==i:\n            count+=1\n        elif min(D)==i:\n            count+=1\nprint(count-1)"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class Main{\npublic static void main(String[] args){\nScanner in=new Scanner(System.in);\nint n=in.nextInt();\nint a[]=new int[n];\nfor(int i=0;i<n;i++)\na[i]=in.nextInt();\nint c=0;\n\nint max=a[0];\nint min=a[0];\nfor(int i=1;i<n;i++)\n{\nif(a[i]>max)\n{\nmax=a[i];\nc++;\n}\nelse if(a[i]<min)\n{\nmin=a[i];\nc++;\n}\n}\nSystem.out.println(c);\n}\n}\n"
        },
        {
            "language": 3,
            "solution": "a=int(input())\nb=[int(c) for c in input().split(' ')]\nq=0\nmini=b[0]\nmaxi=b[0]\nfor i in range(1,a):\n    if b[i]>maxi:\n        maxi=b[i]\n        q+=1\n    elif b[i]<mini:\n        mini=b[i]\n        q+=1\n    else:\n        continue\nprint(q)\n    \n    \n"
        },
        {
            "language": 3,
            "solution": "loop = int(input())\ne = str(input())\ns = e.split(\" \")\nsums = 0\nmaxs =int(s[0])\nmins=int(s[0])\nfor i in range(loop):\n    if int(s[i]) > maxs:\n        maxs = int(s[i])\n        sums+=1\n    elif int(s[i]) < mins:\n        mins =int(s[i])\n        sums+=1\nprint(sums)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = [int(x) for x in input().split()]\nalltimemin = l[0]\nalltimemax = l[0]\ncount = 0\nfor item in l[1:]:\n    if item < alltimemin or item > alltimemax:\n        count += 1\n    alltimemin = min(item,alltimemin)\n    alltimemax = max(item,alltimemax)\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nm=0\nmi=l[0]\nma=l[0]\nfor i in range(n):\n\tif l[i]<mi:\n\t\tm+=1\n\t\tmi=l[i]\n\telif l[i]>ma:\n\t\tm+=1\n\t\tma=l[i]\n\telse:\n\t\tpass\nprint(m)"
        },
        {
            "language": 4,
            "solution": "import java.io.PrintWriter;\nimport java.util.Scanner;\n\npublic class SolA {\n\n\tstatic Scanner in;\n\tstatic PrintWriter out;\n\n\tpublic static void main(String[] args) {\n\t\tin = new Scanner(System.in);\n\t\tout = new PrintWriter(System.out);\n\n\t\tnew SolA().run();\n\n\t\tin.close();\n\t\tout.close();\n\n\t}\n\n\tprivate void run() {\n\t\tint n = in.nextInt();\n\t\tint max = 0;\n\t\tint min = 20000;\n\t\tint res = 0;\n\t\tfor(int i = 0; i< n; i++) {\n\t\t\tint cur = in.nextInt();\n\t\t\tif (cur > max ) {\n\t\t\t\tif (i !=0) {\n\t\t\t\t\tres++;\n\t\t\t\t}\n\t\t\t\tmax = cur;\n\t\t\t}\n\t\t\tif (cur < min) {\n\t\t\t\tif (i !=0) {\n\t\t\t\t\tres++;\n\t\t\t\t}\n\t\t\t\tmin = cur;\n\t\t\t}\n\t\t}\n\t\tout.print(res);\n\t}\n\n}\n"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\ns = raw_input()\ns = s.split()\ns = [int(i) for i in s]\n\nsmin = s[0]\nsmax = s[0]\nud = 0\n\nfor c in s[1:]:\n    if c > smax:\n        ud += 1\n        smax = c\n    if c < smin:\n        ud += 1\n        smin = c\n\nprint ud"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nA=input().split()\na=0\nb=int(A[0])\nc=int(A[0])\nfor i in range (n-1):\n    if int(A[i+1])>b:\n        a+=1\n        b=int(A[i+1])\n    elif int(A[i+1])<c:\n        a+=1\n        c=int(A[i+1])\nprint(a)"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.HashSet;\nimport java.util.Set;\n\n\npublic class Main {\n\n    public static void main(String[] args) throws IOException {\n        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\n        try(PrintWriter writer = new PrintWriter(System.out)){\n            int k = Integer.parseInt(reader.readLine());\n            String data[] = reader.readLine().split(\" \");\n            int min = Integer.parseInt(data[0]);\n            int max = Integer.parseInt(data[0]);\n            int n = 0;\n            for(int i = 1; i < k; i++){\n                int a = Integer.parseInt(data[i]);\n                if (a < min){\n                    n++;\n                    min = a;\n                }\n                if (a > max){\n                    n++;\n                    max = a;\n                }\n            }\n            writer.println(n);\n        }\n    }\n}"
        },
        {
            "language": 1,
            "solution": "__author__ = 'abbas'\nn = int(raw_input())\npts = raw_input().split()\nworst = best = int(pts[0])\nans  = 0\nfor i in pts[1:]:\n    num = int(i)\n    if(num < worst):\n        ans += 1\n        worst = num\n    elif(num > best):\n        ans += 1\n        best = num\nprint ans"
        },
        {
            "language": 3,
            "solution": "def read():\n\treturn [int(v) for v in input().split()]\n\ndef main():\n\tn = read()[0]\n\ta = read()\n\tbest, worst = 0, 0\n\tamazing = 0\n\tfor i in range(1, n):\n\t\tif a[best] < a[i]:\n\t\t\tamazing += 1\n\t\t\tbest = i\n\t\telif a[worst] > a[i]:\n\t\t\tamazing += 1\n\t\t\tworst = i\n\tprint(amazing)\n\t\n\nif __name__ == '__main__':\n\tmain()\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nb = list(map(int, input().split()))\nmax_n, min_n, amazing = b[0], b[0], 0\nfor i in range(1, n):\n    m = b[i]\n    if m > max_n:\n        max_n = m\n        amazing += 1\n    elif m < min_n:\n        min_n = m\n        amazing += 1\nprint(amazing)"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(new InputStreamReader(System.in));\n        int n = scanner.nextInt();\n        int[] a = new int[n];\n        for (int i = 0; i < n; ++i) {\n            a[i] = scanner.nextInt();\n        }\n        int minVal = a[0], maxVal = a[0], ans = 0;\n        for (int i = 1; i < n; ++i) {\n            if (a[i] > maxVal || a[i] < minVal) {\n                ++ans;\n            }\n            if (a[i] < minVal) {\n                minVal = a[i];\n            }\n            if (a[i] > maxVal) {\n                maxVal = a[i];\n            }\n        }\n        System.out.println(ans);\n        scanner.close();\n    }\n}\n"
        },
        {
            "language": 1,
            "solution": "def solve(resul):\n    _max = resul[0]\n    _min = resul[0]\n    answer = 0\n    for cur in resul:\n        if cur > _max:\n            answer+= 1\n            _max = cur\n        elif cur < _min:\n            answer+= 1\n            _min = cur\n    print (answer)\nn = int(input())\nresul = map(int, raw_input().split())\nsolve(resul)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nc = 0\na = [int (i) for i in input().split()]\nmax = a[0]\nmin = a[0]\nfor i in range (1, len(a)):\n    if a[i] > max:\n        c += 1\n        max = a[i]\n    elif a[i] < min:\n        c += 1\n        min = a[i]\nprint(c)\n        "
        },
        {
            "language": 1,
            "solution": "n=raw_input()\ns=map(int,raw_input().split())\nc=0;ma=mi=s[0]\nfor i in range(1,int(n)):\n    if(s[i]>ma):c=c+1;ma=s[i]\n    elif(s[i]<mi):c=c+1;mi=s[i]\nprint c\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\nmi = a[0]\nma = mi\nanswer = 0\nfor i in range(1, n):\n    x = a[i]\n    if x < mi:\n        mi = x\n        answer += 1\n    if x > ma:\n        ma = x\n        answer += 1\nprint(answer)"
        },
        {
            "language": 3,
            "solution": "n = int(input().strip())\ncontests = map(int, input().strip().split())\nbest = -1\nworst = 10001\nanswer = 0\nfor contest in contests:\n    if contest > best and contest < worst: \n        best = worst = contest # first round\n    elif contest > best:\n        answer += 1\n        best = contest\n    elif contest < worst:\n        answer += 1\n        worst = contest\n\nprint(answer)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int, input().split()))\nsum1=0\nsum2=0\nfor i in range(1,n):\n    cnt=0\n    cnt1=0\n    for j in range(i,-1,-1):\n        if l[i]<l[j]:\n            cnt+=1\n        elif l[i]>l[j]:\n            cnt1+=1\n    if cnt==i:\n        sum1+=1\n    elif cnt1==i:\n        sum2+=1\nprint(sum1+sum2)\n        "
        },
        {
            "language": 3,
            "solution": "# Lang: pypy3.6-v7.1.0-win32\\pypy3.exe\n# Problem Name: I_love_%username%\n# Problem Serial No: 155\n# Problem Type: A\n# Problem Url: https://codeforces.com/problemset/problem/155/A \n# Solution Generated at: 2019-05-11 02:26:48.760825 UTC\n\n\nn=int(input())\narr=list(map(int,input().split()))\n\ni_max=arr[0]\ni_min=arr[0]\nrec=0\nfor k in range(1,len(arr)):\n    if arr[k]>i_max:\n        i_max=arr[k]\n        rec+=1\n    elif arr[k]<i_min:\n        rec+=1\n        i_min=arr[k]\nprint(rec)\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Accepted"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = tuple(map(int, input().split()))\ns = 0\nma = mi = l[0]\nfor i in l[1:]:\n    if i > ma:\n        ma = i\n        s += 1\n    elif i < mi:\n        mi = i\n        s += 1\nprint(s)\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\npublic class x{\n    public static void main(String srgs[])throws IOException{\n        BufferedReader ob=new BufferedReader(new InputStreamReader(System.in));\n        int n=Integer.parseInt(ob.readLine());\n        String s[]=ob.readLine().split(\" \");\n        int ar[]=new int[n];\n        for(int i=0;i<n;i++)\n            ar[i]=Integer.parseInt(s[i]);\n        int max=0,min=0;\n        int wow=0;\n    if(n!=1){\n        int x=0;\n        for(int i=0;i<n;i++){\n            if(ar[0]!=ar[i]){\n                x=ar[i];\n                wow++;\n                break;\n                \n            }\n        }\n        if(ar[0]>x){\n            max=ar[0];\n            min=x;\n        }\n        else{\n            max =x;\n            min=ar[0];\n        }\n        for(int i=0;i<n;i++){\n            if(ar[i]>max){\n                max =ar[i];\n                wow++;\n            }\n            if(min>ar[i]){\n                min=ar[i];\n                wow++;\n            }\n        }\n     }\n        System.out.println(wow);\n    }\n}"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nline=[int(k)for k in input().split()]\nt=[line[0]]\ntotal=0\nfor i in range(n):\n    maxa=max(t)\n    mina=min(t)\n    if line[i]>maxa or line[i]<mina:\n        total+=1\n        t+=[line[i]]\nprint(total)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na = list(map(int, input().split()))\nmax=a[0]\nmin=a[0]\namz=0\nfor i in range(n):\n    if a[i] > max:\n        max=a[i]\n        amz+=1\n    if a[i] < min:\n        min=a[i]\n        amz+=1\nprint(amz)"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class Problem11 {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        \n        int n = in.nextInt(), count=0;\n        in.nextLine();\n        int max = in.nextInt(), min = max;\n        for(int i=1; i<n; i++) {\n            int temp = in.nextInt();\n            if(temp > max) {\n                max = temp;\n                count++;\n            } else if(temp < min) {\n                min = temp;\n                count++;\n            }\n        }\n        System.out.println(count);\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nc = [int(x) for x in input().split()]\n_min = _max = c[0]\na = 0\nfor i in range(n):\n  if c[i] > _max:\n    _max = c[i]\n    a += 1\n  elif c[i] < _min:\n    _min = c[i]\n    a += 1\nprint(a)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\narr=list(map(int,input().strip().split()))\nmin=arr[0]\nmax=arr[0]\nc=0\nfor i in range(n):\n    if(min>arr[i]):\n        min=arr[i]\n        c+=1\n    if(max<arr[i]):\n        max=arr[i]\n        c+=1\nprint(c)\n    "
        },
        {
            "language": 3,
            "solution": "n = int(input())\n\nlst = input().split()\ncount = 0\nfor i in range(n):\n    lst[i] = int(lst[i])\n    if i == 0:\n        continue\n    else:\n        if lst[i] > max(lst[:i]) or lst[i] < min(lst[:i]):\n            count = count + 1\nprint(count)"
        },
        {
            "language": 3,
            "solution": "# https://codeforces.com/problemset/problem/155/A\n\nkol = int(input())\nscores = [int(i) for i in input().split()]\ncounter = 0\nmaxim = scores[0]\nminim = scores[0]\n\nfor elem in scores:\n    if elem > maxim:\n        counter +=1\n        maxim = elem\n\n    elif elem < minim:\n        counter +=1\n        minim = elem\n\nprint(counter)\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, total = 0;\n  cin >> n;\n  int maxi, mini;\n  int a[n];\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n    if (i == 0) {\n      maxi = a[i];\n      mini = a[i];\n    } else {\n      if (a[i] > maxi) {\n        total++;\n        maxi = a[i];\n      } else if (a[i] < mini) {\n        total++;\n        mini = a[i];\n      }\n    }\n  }\n  cout << total << endl;\n}\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin\n\n\ndef main():\n    stdin.readline()\n    l = list(map(int, stdin.readline().split()))\n    mi = ma = l[0]\n    cnt = 0\n    for x in l:\n        if ma < x:\n            ma = x\n            cnt += 1\n        elif mi > x:\n            mi = x\n            cnt += 1\n    print(cnt)\n\n\nmain()\n"
        },
        {
            "language": 4,
            "solution": "import java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class practice {\n\n\tpublic static void main(String[] args) {\n\t\tScanner s = new Scanner(System.in);\n\t\tint con = s.nextInt();\n\t\tint worst = 0;\n\t\tint best = 0;\n\t\tint ans = 0;\n\t\tfor(int i = 0; i < con; i++) {\n\t\t\tint num = s.nextInt();\n\t\t\tif(i == 0) {\n\t\t\t\tworst = num;\n\t\t\t\tbest = num;\n\t\t\t} else {\n\t\t\t\tif(num < worst) {\n\t\t\t\t\tworst = num;\n\t\t\t\t\tif(i != 0) ans++;\n\t\t\t\t}\n\t\t\t\tif(num > best) {\n\t\t\t\t\tbest = num;\n\t\t\t\t\tif(i != 0) ans++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\t\n\t\t}\n\t\tSystem.out.println(ans);\n\t}\n\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.Set;\nimport java.util.stream.Stream;\n\npublic class Main\n{\n    public static void main(String[] args) throws IOException\n    {\n        new Main().run();\n    }\n\n    StreamTokenizer in;\n    PrintWriter out;\n\n    int nextInt() throws IOException\n    {\n        in.nextToken();\n        return (int)in.nval;\n    }\n\n    void run() throws IOException\n    {\n        in = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));\n        out = new PrintWriter(new OutputStreamWriter(System.out));\n        solve();\n        out.flush();\n    }\n\n    void solve() throws IOException\n    {\n        int n = nextInt();\n        int currentMin = nextInt();\n        int currentMax = currentMin;\n        int ans = 0;\n        for (int i = 1; i < n; i++) {\n            int current = nextInt();\n            if (current > currentMax | current < currentMin)\n                ++ans;\n\n            currentMin = Math.min(currentMin, current);\n            currentMax = Math.max(currentMax, current);\n        }\n        out.println(ans);\n    }\n}"
        },
        {
            "language": 1,
            "solution": "n = input()\n\nls = map(int,raw_input().split())\n\nmaxi = ls[0]\nmini = ls[0]\ncount=0\nfor i in range(1,n):\n    if ls[i]>maxi or ls[i]<mini:\n        count+=1\n    if maxi<ls[i]:\n        maxi = ls[i]\n    if mini>ls[i]:\n        mini = ls[i]\n        \nprint(count)"
        },
        {
            "language": 3,
            "solution": "n=input()\nn=int(n)\ns = [int(x) for x in  input().split()]\nmaxn=s[0]\nminn=s[0]\ncnt=0\nfor i in range(n):\n    if s[i]>maxn:\n        maxn=s[i]\n        cnt+=1\n    elif s[i]<minn:\n        minn=s[i]\n        cnt+=1\nprint(cnt)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nma,mi,c=a[0],a[0],0\nfor i in range(1,n):\n    if(a[i]>ma):\n        c=c+1\n        ma=a[i]\n    elif(a[i]<mi):\n        c=c+1\n        mi=a[i]\nprint(c)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nc=0\nmaxs=l[0]\nmn=l[0]\nfor i in range(1,n):\n    if l[i]>maxs:\n        #print(l[i])\n        maxs=l[i]\n        c+=1\n    elif mn>l[i]:\n        mn=l[i]\n        c+=1\nprint(c)\n    "
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class a{\n    public static void main(String args[]){\n        int n;\n        Scanner sc=new Scanner(System.in);\n        n=sc.nextInt();\n        int c=0,min=1000000,max=-1;\n        int a[]=new int[n];\n        for(int i=0;i<n;i++){\n            a[i]=sc.nextInt();\n            if(i==0){\n            if(max<a[i]){\n                max=a[i];\n            }\n            if(min>a[i]){\n                min=a[i];\n            }\n            }\n            else{\n                if(a[i]>max){\n                    c++;\n                    max=a[i];\n                }\n                if(a[i]<min){\n                    c++;\n                    min=a[i];\n                }\n            }\n        }\n       \n         System.out.println(c);\n    }\n} "
        },
        {
            "language": 3,
            "solution": "sz=int(input())\npoints=list(map(int,input().split()))\nminn=maxx=points[0]\namazing=0\nfor i in points:\n    if i>maxx:\n        maxx=i\n        amazing+=1\n    elif i<minn:\n        minn=i\n        amazing+=1\nprint(amazing)"
        },
        {
            "language": 3,
            "solution": "# 155A. I_love_%username%\nn = int(input())\nlst = [int(k) for k in input().split()]\nmini = 10001\nmaxi = -1\ns = 0\nfor i in range(n):\n    if lst[i] > maxi:\n        maxi = lst[i]\n        s += 1\n    if lst[i] < mini:\n        mini = lst[i]\n        s += 1\nif s >= 2:\n    print(s - 2)\nelse:\n    print(0)\n"
        },
        {
            "language": 4,
            "solution": "import java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.HashSet;\nimport java.util.LinkedList;\nimport java.util.Scanner;\n\npublic class A {\n\tpublic static void main(String[] args) throws IOException{\n\t\tScanner in = new Scanner(System.in);\n\t\t//BufferedReader in= new BufferedReader(new InputStreamReader(System.in));\n\t\tint n= in.nextInt();\n\t\tint best= in.nextInt();\n\t\tint worst= best;\n\t\tint res=0;\n\t\tfor (int i = 0; i < n-1; i++) {\n\t\t\tint cur= in.nextInt();\n\t\t\tif(cur>best){\n\t\t\t\tres++;\n\t\t\t\tbest= cur;\n\t\t\t}\n\t\t\telse if(cur<worst){\n\t\t\t\tres++;\n\t\t\t\tworst= cur;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(res);\n\t}\n}"
        },
        {
            "language": 3,
            "solution": "import re\nimport sys\nfrom bisect import bisect, bisect_left, insort, insort_left\nfrom collections import Counter, defaultdict, deque\nfrom copy import deepcopy\nfrom decimal import Decimal\nfrom itertools import (\n    accumulate, combinations, combinations_with_replacement, groupby,\n    permutations, product)\nfrom math import (acos, asin, atan, ceil, cos, degrees, factorial, gcd, hypot,\n                  log2, pi, radians, sin, sqrt, tan)\nfrom operator import itemgetter, mul\nfrom string import ascii_lowercase, ascii_uppercase, digits\n\n\ndef inp():\n    return(int(input()))\n\n\ndef inlist():\n    return(list(map(int, input().split())))\n\n\ndef instr():\n    s = input()\n    return(list(s[:len(s)]))\n\n\ndef invr():\n    return(map(int, input().split()))\n\n\nn = inp()\na = inlist()\nmx = a[0]\nmn = a[0]\nres = 0\nfor i in range(1, n):\n    if a[i] < mn:\n        res += 1\n        mn = a[i]\n    if a[i] > mx:\n        res += 1\n        mx = a[i]\nprint(res)\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class Main{\n    public static void main(String args[]) {\n        Scanner scanner = new Scanner(System.in);\n        String num_s = scanner.nextLine();\n        String scoreline = scanner.nextLine();\n        int num;\n        int score;\n        int min = 0;\n        int max = 0;\n        int awesome = 0;\n\n        String[] scoreList = scoreline.split(\" \");\n\n        num = Integer.parseInt(num_s);\n\n        for (int i = 0; i < num; i++) {\n            score = Integer.parseInt(scoreList[i]);\n            if (i == 0) {\n                min = score;\n                max = score;\n            } else if (score > max) {\n                max = score;\n                awesome++;\n            } else if (score < min) {\n                min = score;\n                awesome++;\n            }\n        }\n\n        System.out.println(awesome);\n\n        scanner.close();\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=input()\nA=a.split()\nc=int(A[0])\nC=[c]\nM=0\nfor i in range (1,n):\n    L=int(A[i])\n    if L>max(C) or L<min(C):\n        M=M+1\n    C.append(L)\nprint(M)\n"
        },
        {
            "language": 3,
            "solution": "#I_love_%username%\nn = int(input())\nli = list(map(int,input().split()))\nc = 0\nfor i in range(1,len(li)):\n    if li[i] > max(li[:i]) or li[i]<min(li[:i]):\n        c+=1\n        \nprint(c)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, i, Count = 0;\n  cin >> n;\n  int ar[n];\n  for (i = 0; i < n; i++) {\n    cin >> ar[i];\n  }\n  int Max = ar[0];\n  int Min = ar[0];\n  for (i = 1; i < n; i++) {\n    if (ar[i] < Min) {\n      Min = ar[i];\n      Count++;\n    }\n    if (ar[i] > Max) {\n      Max = ar[i];\n      Count++;\n    }\n  }\n  cout << Count << endl;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nsum=0\na=[int(x) for x in input().split()]\nfor i in range(2,n+1):\n    b=max(a[0:i-1])\n    d=min(a[0:i-1])\n    if a[i-1]>b or a[i-1]<d:sum+=1\nprint(sum)"
        },
        {
            "language": 1,
            "solution": "n = input()\nscore = map(int, raw_input().split(' '))\nxlist = []\ntotal = 0\n\nfor num in score:\t\n\tif len(xlist) > 0:\t\t\n\t\tif num > max(xlist):\n\t\t\ttotal+=1\n\t\telif num < min(xlist):\n\t\t\ttotal+=1\n\txlist.append(num)\n\nprint total\n"
        },
        {
            "language": 1,
            "solution": "n = input()\nl = raw_input()\nl = l.split()\nk = []\nfor i in range(0,len(l)):\n    k.append(int(l[i]))\nmi = k[0]\nma = k[0]\nc = 0\nfor i in range(1,len(k)):\n    if(k[i]<mi):\n        mi = k[i]\n        c = c+1\n    if(k[i]>ma):\n        ma = k[i]\n        c = c+1\nprint c\n"
        },
        {
            "language": 3,
            "solution": "n=int(input(\"\"))\nl=list(map(int,input().split(\" \")))\ncont=0\nmayor=l[0]\nmenor=l[0]\nfor k in l:\n    if(k>mayor):\n        cont+=1\n        mayor=k\n    elif(k<menor):\n            cont+=1\n            menor=k\nprint(cont)"
        },
        {
            "language": 1,
            "solution": "n = input()\npoint = map(int, raw_input().split())\nprint sum([1 for i in range(1, n) if point[i] > max(point[:i]) or point[i] < min(point[:i])])"
        },
        {
            "language": 3,
            "solution": "n = int(input())\n\nscores = list(int(s) for s in input().split())\nhi = low = scores.pop(0)\namazing = 0\n\nfor i in scores:\n    if i > hi or i < low:\n        amazing += 1\n        hi = max(hi, i)\n        low = min(low, i)\n\nprint(amazing)"
        },
        {
            "language": 1,
            "solution": "r = int(raw_input())\na = raw_input()\nl = a.split(' ')\nl = [int(i) for i in l]\ntest = []\nadd = 0\nfor x in range(0,r):\n    if x == 0:\n        test.append(l[x])\n    else:\n        if l[x] > max(test) or l[x] < min(test):\n            add = add +1\n            test.append(l[x])\nprint add"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nL = list(map(int,input().split()))\nmax_score=L[0]\nmin_score=L[0]\namazing = 0\nfor i in range(1,n):\n    if L[i] < min_score:\n        amazing+=1\n        min_score = L[i]\n    elif L[i] > max_score:\n        amazing+=1\n        max_score = L[i]\n\nprint(amazing)\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n        Scanner snr=new Scanner(System.in);\n        int n=snr.nextInt();\n        int[] a=new int[n];\n        for(int i=0;i<n;i++)\n        a[i]=snr.nextInt();\n        int cnt=0;\n        int max=a[0];\n        int min=a[0];\n        for(int i=0;i<n;i++){\n           if(a[i]>max){\n              max=a[i];\n              cnt++;\n            }\n           if(a[i]<min){\n              min=a[i];\n               cnt++;\n             }\n         }\n    System.out.println(cnt);\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n    }\n}\n\n    "
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=[]\nl=input().split()\ns=0\nfor i in range (len(l)):\n    l[i]=int(l[i])\nfor i in range (len(l)-1):\n    if l[i+1]>max(l[:i+1]) or l[i+1]<min(l[:i+1]):\n        s=s+1\nprint(s)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nl=[]\nfor i in range(n):\n    if i == 0:\n        l.append(a[i])\n        continue\n    if a[i]>max(l)or a[i]<min(l):\n        l.append(a[i])\nprint(len(l)-1)"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\nresults = map(int, raw_input().split())\n\nbest = results[0]\nworst = best\nresult = 0\nfor i in results:\n    if i > best:\n        best = i\n        result += 1\n    elif i < worst:\n        worst = i\n        result += 1\n\nprint result\n"
        },
        {
            "language": 3,
            "solution": "while True:\n try:\n     n=int(input())\n     l=input().split()\n     ma=int(l[0])\n     a=0\n     mi=int(l[0])\n     \n     for i in range(1,n):\n         c=int(l[i])\n         if c<mi:\n             mi=c\n             a=a+1\n         elif c>ma:\n             ma=c\n             a=a+1\n         else:\n             mi=mi\n             ma=ma\n             a=a\n             \n     print(a)\n     \n except EOFError:\n    break\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nscore = list(map(int, input().split()))\nif n == 1:\n    num = 0\nelif n >= 2 and score[0] == score[1]:\n    num = 0\n    for i in range(2, n):\n        lst = score[:i]\n        s = max(lst)\n        b = min(lst)\n        if score[i] > s or score[i] < b:\n            num += 1\nelse:\n    num = 1\n    for i in range(2, n):\n        lst = score[:i]\n        s = max(lst)\n        b = min(lst)\n        if score[i] > s or score[i] < b:\n            num += 1\nprint(num)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = list(map(int,input().split()))\np=[]\np.append(l[0])\ncount=0\nfor i in l[1:]:\n    if i > max(p) or i<min(p):\n        count += 1\n    p.append(i)\nprint(count)"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class i_luv_username\n{\n    public static void main(String args[])\n    {\n        Scanner in=new Scanner(System.in);\n        int n,max=0,min=20000,c=0,i,j;\n        n=in.nextInt();\n        int a[]=new int[n];\n        a[0]=in.nextInt();\n        for(i=1;i<n;i++)\n        {\n            a[i]=in.nextInt();\n            for(j=0;j<i;j++)\n            {\n                if(a[j]>max)\n                 max=a[j];\n                if(a[j]<min)\n                 min=a[j];\n                }\n                if(a[i]>max)\n                     c++;\n                else if(a[i]<min)\n                 c++;\n                }\n                System.out.println(c);\n            }\n        }\n                 "
        },
        {
            "language": 1,
            "solution": "aa=int(raw_input())\nb=map(int,raw_input().split())\nmn=mx=b[0]\nr=0\nfor i in b:\n    if i<mn:\n        r+=1\n        mn=i\n    if i>mx:\n        r+=1\n        mx=i\nprint r"
        },
        {
            "language": 3,
            "solution": "n,ans=int(input()),0\na= list(map(int, input().split()))\nfor i in range(1,n):\n    if a[i]<min(a[:i]):ans+=1\n    elif a[i]>max(a[:i]):ans+=1\nprint(ans)\n"
        },
        {
            "language": 3,
            "solution": "#155A\na = int(input())\np = list(map(int, input().split()))\nk = 0; g = []; g.append(p[0])\nfor i in p:\n    if (i > max(g) or i < min(g)):\n        g.append(i)\n        k+=1\nprint(k)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\ninp=list(map(int,input().split()))\nmax1=inp[0]\nmin1=inp[0]\nlst=[]\nfor i in range(1,n):\n    if(inp[i] > max1):\n        max1=inp[i]\n        lst.append(inp[i])\n    elif(inp[i] < min1):\n        min1=inp[i]\n        lst.append(inp[i])\n        \nprint(len(set(lst)))\n    "
        },
        {
            "language": 3,
            "solution": "n=int(input())\nline=[int(i) for i in input().split()]\nmaxline=[line[0]]\nminline=[line[0]]\ntotal=0\nfor i in line:\n    if i>maxline[-1]:\n        maxline.append(i)\n        total +=1\n    elif i<minline[-1]:\n        minline.append(i)\n        total +=1\n    else:\n        continue\n\nprint(total)\n        \n        \n    \n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nmax=l[0]\nmin=l[0]\ncount=0\nfor i in range(1,n):\n    if l[i]<min:\n        count=count+1\n        min=l[i]\n    elif l[i]>max:\n        count=count+1\n        max=l[i]\nprint(count)"
        },
        {
            "language": 3,
            "solution": "a = int(input())\nlst = list(map(int,input().split()))\nmax=lst[0]\nmin=lst[0]\ncounter=0\nfor i in range(1,a):\n    if lst[i]> min:\n        counter +=1\n        min=lst[i]\n    elif lst[i]<max:\n        counter+=1\n        max=lst[i]\nprint(counter)\n"
        },
        {
            "language": 3,
            "solution": "# cook your dish here\nn=int(input())\nlst=list(map(int,input().split()))\nmini,maxi=lst[0],lst[0]\ncount=0\nfor i in range(1,len(lst)):\n    if lst[i]>maxi:\n        maxi=lst[i]\n        count+=1\n    elif lst[i]<mini:\n        mini=lst[i]\n        count+=1\nprint(count)"
        },
        {
            "language": 1,
            "solution": "s = input()\nsn = map(int, raw_input().strip().split())\ng = 0\nk = 0\nresult = 0\nfor i in range(s):\n    for j in range(len(sn))[:i]:\n        if sn[i] > sn[j]:\n            k = k + 1\n        if sn[i] < sn[j]:\n            g = g + 1\n        result = result + (g==i) + (k==i)\n    k = 0\n    g = 0\n        \nprint result"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nresults = [int(i) for i in input().split()]\nrecord = anti_record = results[0]\namazing_perfomances = 0\nfor i in range(1, n):\n    if results[i] > record:\n        record = results[i]\n        amazing_perfomances += 1\n    elif results[i] < anti_record:\n        anti_record = results[i]\n        amazing_perfomances += 1\nprint(amazing_perfomances)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[int(i) for i in input().split()]\ni=1\ns=0\nwhile i<n:\n  if a[i]>max(a[0:i]) or a[i]<min(a[0:i]):\n    s+=1\n  i+=1\nprint(s)"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class I_love_username {\n\tpublic static void main(String[] args) {\n\t\tScanner scan = new Scanner(System.in);\n\t\tint n = scan.nextInt();\n\t\tint min = Integer.MAX_VALUE;\n\t\tint max = Integer.MIN_VALUE;\n\t\tint count = -2;\n\t\tfor (int i = 0 ; i < n ; i++) {\n\t\t\tint num = scan.nextInt();\n\t\t\tif (num > max) {\n\t\t\t\tcount++;\n\t\t\t\tmax = num;\n\t\t\t}\n\t\t\t\n\t\t\tif (num < min) {\n\t\t\t\tcount++;\n\t\t\t\tmin = num;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(count);\n\t}\n\n}\n"
        },
        {
            "language": 1,
            "solution": "n = input()\na = map(int , raw_input().split())\nmax1,min1=a[0],a[0]\ncount=0\nfor i in xrange(n):\n    if a[i]>max1:\n        count+=1\n        max1=a[i]\n    elif a[i]<min1:\n        count+=1\n        min1=a[i]\nprint count\n"
        },
        {
            "language": 1,
            "solution": "a = int(raw_input())\nb = raw_input().split(' ')\nb = map(int,b)\nbest = b[0]\nworst = b[0]\namz =0\nfor p in b:\n\tif p > best:\n\t\tbest = p\n\t\tamz+=1\n\tif p < worst:\n\t\tworst = p\n\t\tamz+=1\n\t\n\nprint amz\n\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nmi=0\nmx=0\ncount=0\nif n==1:\n    print(0)\nelse:\n    mi=l[0]\n    mx=l[0]\n    for i in range(1,n):\n        if l[i]<mi:\n            count+=1\n            mi=l[i]\n        elif l[i]>mx:\n            count+=1\n            mx=l[i]\n    print(count)            \n            "
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\npublic class Aplicacao {\n\t\n\tpublic static void main(String[] args) {\n\t\tScanner leitor = new Scanner(System.in);\n\t\tint n = leitor.nextInt();\n\t\tleitor.nextLine();\n\t\tString pontos = leitor.nextLine();\n\t\tint resp = competicoes(n, pontos);\n\t\tSystem.out.println(resp);\n\t\tleitor.close();\n\t\treturn;\n\t}\n\t\n\tpublic static int competicoes(int n, String pontos) {\n\t\tint menorPt;\n\t\tint maiorPt;\n\t\tint atual;\n\t\tint amazingPerformance = 0;\n\t\tString[] strNum = pontos.split(\" \");\n\t\tatual = Integer.parseInt(strNum[0]);\n\t\tmenorPt = atual;\n\t\tmaiorPt = atual;\n\t\tfor(int aux = 1; aux<n; aux++) {\n\t\t\tatual = Integer.parseInt(strNum[aux]);\n\t\t\tif(atual < menorPt) {\n\t\t\t\tmenorPt = atual;\n\t\t\t\tamazingPerformance += 1;\n\t\t\t}\n\t\t\tif(atual > maiorPt) {\n\t\t\t\tmaiorPt = atual;\n\t\t\t\tamazingPerformance += 1;\n\t\t\t}\n\t\t}\n\t\treturn amazingPerformance;\n\t\t\n\t\t\n\t}\n\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\ns=input().split()\nlst=list()\ncount=0\nfor i in range(n):\n    lst.append(int(s[i]))\nfor i in range(n):\n    if i==0:\n        best=lst[i]\n        worst=lst[i]\n    else:\n        if lst[i]>best:\n            best=lst[i]\n            count+=1\n        if lst[i]<worst:\n            count+=1\n            worst=lst[i]\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nscores = list(map(int,input().split()))\nbest = scores[0]\nworst = scores[0]\nres=0\nfor i in scores[1:]:\n    if i < worst:\n        worst=i\n        res+=1\n    if i>best:\n        best=i\n        res+=1 \nprint(res)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\ns=input().split()\nk=0\nfor i in range(1,len(s)):\n         br=0\n         b=0\n         for j in range(0,i):\n                  if int(s[i])>int(s[j]):\n                           br+=1\n                  if int(s[i])<int(s[j]):\n                           b+=1\n         if br==i or b==i:\n                  k+=1\nprint(k)\n                  \n         \n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int,input().split())) \ncnt = 0\nmini = a[0]\nmaxi = a[0]\nfor i in range(len(a)-1):\n    if a[i+1]>maxi:\n        cnt+=1\n        maxi = a[i+1]\n    if a[i+1]<mini:\n        cnt+=1\n        mini = a[i+1] \n    \nprint(cnt)"
        },
        {
            "language": 3,
            "solution": "import math\n\n\nn=int(input())\ndata=list(map(int,input().split()))\nMAX=data[0]\nMIN=data[0]\ncnt=0\n\nfor i in range(1, n):\n    if data[i]>MAX:\n        MAX=data[i]\n        cnt+=1\n    if data[i]<MIN:\n        MIN=data[i]\n        cnt+=1\n\nprint(cnt)"
        },
        {
            "language": 3,
            "solution": "T = int(input())\n\ndata = list(map(int, input().split()))\n\ninitial = data[0]\nmin_score = initial\nmax_score = initial\nc = 0\n\nfor i in data:\n    if i < min_score or i > max_score:\n        min_score = i if i < min_score else min_score\n        max_score = i if i > max_score else max_score\n        c += 1\nprint(c)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[int(i) for i in input().split()]\ns=0\namax=amin=a[0]\nfor i in a:\n    if i>amax or i<amin:\n        s+=1\n    amax=max(amax,i)\n    amin=min(amin,i)\nprint(s)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\npoints=list(map(int, input().split()))\nmax_point=points[0]\nmin_point=points[0]\ncount=0\nfor i in range(1,n):\n    if points[i]>max_point:\n        count+=1\n        max_point=points[i]\n    if points[i]<min_point:\n        count+=1\n        min_point=points[i]\nprint(count)"
        },
        {
            "language": 3,
            "solution": "#                          JAI SHREE RAM\n\nimport math; from collections import *\nimport sys; from functools import reduce\n\n# sys.setrecursionlimit(10**6)\ndef get_ints(): return map(int, input().strip().split())\ndef get_list(): return list(get_ints())\ndef get_string(): return list(input().strip().split())\ndef printxsp(*args): return print(*args, end=\"\")\ndef printsp(*args): return print(*args, end=\" \")\n\nUGLYMOD = int(1e9)+7; SEXYMOD = 998244353; MAXN = int(1e5)\n\n# sys.stdin=open(\"input.txt\",\"r\");sys.stdout=open(\"output.txt\",\"w\")\n\n# for _testcases_ in range(int(input())):\nn = int(input())\nli = get_list()\nmn = mx = li[0]\nans = 0\nfor i in range(1, n):\n    if li[i] < mn:\n        mn = li[i]\n        ans += 1\n    elif mx < li[i]:\n        mx = li[i]\n        ans += 1\nprint(ans)\n\n'''\n>>> COMMENT THE STDIN!! CHANGE ONLINE JUDGE !!\nTHE LOGIC AND APPROACH IS MINE @luctivud ( UDIT GUPTA )\nLink may be copy-pasted here if it's taken from other source.\nDO NOT PLAGIARISE.\n>>> COMMENT THE STDIN!! CHANGE ONLINE JUDGE !!\n'''"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input().strip())\nrec = map(int, raw_input().strip().split(' '))\nl = h = rec[0]\nresult = 0\n\nfor i in rec[1:]:\n    if i > h:\n        h = i\n        result += 1\n        \n    elif i < l:\n        l = i\n        result += 1\n        \nprint result\n"
        },
        {
            "language": 1,
            "solution": "n=input()\nl=[int(i) for i in raw_input().split()]\nmin=max=l[0]\nc=0\nfor i in range(1,n):\n    if l[i]>max:\n        max=l[i]\n        c+=1\n    elif l[i]<min:\n        min=l[i]\n        c+=1\nprint c"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nlis = list(map(int,input().split()))\ncount = 0\namax = lis[0]\namin = lis[0]\nif n > 1 :\n    \n    for i in range(1,n):\n        if lis[i] < amin :\n            count += 1\n            amin = lis[i]\n            \n        elif lis[i] > amax :\n            count+=1 \n            amax = lis[i]\n    print(count)   \nelse:\n    print(0)"
        },
        {
            "language": 3,
            "solution": "def main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    max = a[0]\n    min = a[0]\n    b = 0\n    \n    for i in range(n):\n        if a[i] > max:\n            max = a[i]\n            b = b + 1\n    \n        if a[i] < min:    \n            min = a[i]\n            b = b + 1\n\n    \n    print(b)\n\nif __name__ == '__main__':\n    main()"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nA = list(map(int, input().split(' ')))\ncool = 0\nfor i in range(n):\n    if i == 0:\n        large = A[i]\n        small = A[i]\n    else:\n        if A[i] > large:\n            cool += 1\n            large = A[i]\n        if A[i] < small:\n            cool += 1\n            small = A[i]\nprint(cool)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\narr = list(map(int, input().split()))\ns = 0\nfor i in range(1, n):\n    if arr[i] > max(arr[:i]) or arr[i] < min(arr[:i]):\n        s += 1\nprint(s)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\ncnt=0\nt=list(map(int,input().split()))\nmax=t[0]\nmin=t[0]\nfor i in t:\n    if i>max:\n        max=i\n        cnt+=1\n    if i<min:\n        min=i\n        cnt+=1\nprint(cnt)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nx = list(map(int, input().split()))\nmax=x[0]\nmin=x[0]\nans = 0\nfor i in x:\n    if i>max:\n        ans += 1\n        max = i\n    elif i<min:\n        ans += 1\n        min = i\nprint(ans)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[int(i) for i in input().split()]\nb=a[0]\nc=a[0]\nd=0\nfor i in range(n):\n    if a[i]>b:\n        b=a[i]\n        d=d+1\n    elif a[i]<c:\n        c=a[i]\n        d=d+1\nprint(d)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\n\npoint = list(map(int,input().split()))[:n]\n\nmax = min = point[0]\ncount = 0\n\nfor i in range(1,n):\n\tif(point[i] > max or point[i] < min):\n\t\tif(point[i]> max):\n\t\t\tmax = point[i]\n\t\telse:\n\t\t\tmin = point[i]\n\t\tcount+= 1\n\t\t\nprint(count)"
        },
        {
            "language": 3,
            "solution": "input();x,*b=map(int,input().split());y,r=x,0\nfor v in b:\n  if v<x or v>y:r+=1\n  x=min(x,v);y=max(y,v)\nprint(r)"
        },
        {
            "language": 3,
            "solution": "b=input()\na = [int(i) for i in input().split()]\nmin=a[0]\nmax=a[0]\nres=0\nfor i in a:\n    if i>max:\n        max=i\n        res+=1\n    elif i<min:\n        min=i\n        res+=1\n\nprint(res)        \n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.StringTokenizer;\npublic class LoveUsername{\n    public static void main(String[] args) throws IOException{\n        //input\n        BufferedReader input = new BufferedReader(new InputStreamReader(System.in));\n        //output\n        PrintWriter output = new PrintWriter(System.out);\n        //logic\n        int n = Integer.parseInt(input.readLine());\n        StringTokenizer s = new StringTokenizer(input.readLine());\n        int element = Integer.parseInt(s.nextToken());\n        int max = element;\n        int min = element;\n        int amazing = 0;\n        while(s.hasMoreTokens()){\n            element = Integer.parseInt(s.nextToken());\n            if(element > max){\n                amazing++;\n                max = element;\n            }\n\n            if(element < min){\n                amazing++;\n                min = element;\n            }\n        }\n\n        output.println(amazing);\n        output.close();\n    }\n}"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nm=l[0]\nc=0\nd=0\nfor i in range(1,len(l)):\n    if(l[i]>m):\n        m=l[i]\n        c=c+1\nm=l[0]        \nfor j in range(1,len(l)):\n    if(l[j]<m):\n        m=l[j]\n       \n        d=d+1        \n    \nprint(c+d)      "
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nm=l[0]\np=l[0]\nc=0\nfor i in range(1,n):\n    if l[i]>m :\n        m=l[i]\n        c+=1\n    elif l[i]<p:\n        p=l[i]\n        c+=1\n        \nprint(c)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nminimum=a[0]\nmaximum=a[0]\ncount=0\nfor i in range(1,n):\n    if(a[i]<minimum):\n        minimum=a[i]\n        count+=1\n    elif(a[i]>maximum):\n        maximum=a[i]\n        count+=1\nprint(count)\n"
        },
        {
            "language": 1,
            "solution": "# encoding: UTF-8\n\nn=int(raw_input())\nscore=[int(x) for x in raw_input().split()]\nmaxscore=score[0]\nminscore=score[0]\nans=0\nfor i in range(1,n):\n    if score[i]>maxscore:\n        maxscore=score[i]\n        ans+=1\n    elif score[i]<minscore:\n        minscore=score[i]\n        ans+=1\n\nprint ans\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class a\n{\n\tpublic static void main(String[]args)\n\t{\n\t\tint mini=0;\n\t\tint maxi=0;\n\t\t\n\t\tScanner input=new Scanner(System.in);\n\t\tint n=input.nextInt();\n\n\t\tint x,result=0;\n\t\t\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t\tx=input.nextInt();\n\t\t\tif(i != 0)\n\t\t\t{\n\t\t\t\tif(x<mini)\n\t\t\t\t{\n\t\t\t\t\tmini=x;\n\t\t\t\t\tresult++;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tif(x>maxi)\n\t\t\t\t\t{\n\t\t\t\t\t\tmaxi=x;\n\t\t\t\t\t\tresult++;\n\t\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmaxi=x;\n\t\t\t\tmini=x;\n\t\t\t}\n\t\t}\n\t\t\n\t\tSystem.out.println(result);\n\t\t\n\t}\n}"
        },
        {
            "language": 1,
            "solution": "def get_amazing_perfs(scores):\n    mn = scores[0]\n    mx = scores[0]\n    amzing = 0\n    for i in scores[1:]:\n        if i < mn:\n            mn = i\n            amzing += 1\n        elif i > mx:\n            mx = i\n            amzing += 1\n    return amzing\n\n\nif __name__ == '__main__':\n    n = int(raw_input())\n    scores = map(int, raw_input().strip().split())\n    print get_amazing_perfs(scores)"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.Arrays;\nimport java.util.StringTokenizer;\n\npublic class username {\n    public static void main (String[] args) throws IOException {\n        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\n        PrintWriter writer = new PrintWriter(new OutputStreamWriter(System.out));\n\n        int numContests = Integer.parseInt(reader.readLine());\n        StringTokenizer tokenizer = new StringTokenizer(reader.readLine());\n\n        int[] contests = new int[numContests];\n        Arrays.fill(contests, -1);\n\n        contests[0] = Integer.parseInt(tokenizer.nextToken());\n\n        int index = 1;\n        int amazing = 0;\n        while (index < numContests) {\n            int i = Integer.parseInt(tokenizer.nextToken());\n\n            boolean potentiallyMore = true;\n            boolean potentiallyLess = true;\n\n            int counter = 0;\n\n            while ((potentiallyLess || potentiallyMore) && counter < index) {\n                if (potentiallyMore && i <= contests[counter]) potentiallyMore = false;\n                if (potentiallyLess && i >= contests[counter]) potentiallyLess = false;\n                counter++;\n            }\n\n            if (potentiallyLess || potentiallyMore) amazing++;\n\n            contests[index++] = i;\n\n        }\n\n        writer.print(amazing);\n        writer.close();\n\n    }\n}\n"
        },
        {
            "language": 1,
            "solution": "def ni():\n    return int(raw_input())\n\ndef nis():\n    return map(int, raw_input().split())\\\n\nn = ni()\na = nis()\n\nmin_val = max_val = a[0]\n\namazing = 0\nfor i in range(1, n):\n    val = a[i]\n    if val < min_val:\n        amazing += 1\n        min_val = val\n    elif val > max_val:\n        amazing += 1\n        max_val = val\n\nprint amazing\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\ncount=0\nx=[]\nx.append(l[0])\nfor i in range(1,n):\n    if l[i]<min(x) or l[i]>max(x):\n        count+=1\n        x.append(l[i])\nprint(count)\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.*;\nimport java.io.*;\npublic class CodeForces{\n\tpublic static void main(String[] args) {\n\t\tInputReader in = new InputReader(System.in);\n\t\tint cnt = 0;\n\t\tint n = in.nextInt();\n\t\tint min = in.nextInt();\n\t\tint max = min ;\n\t\tfor (int i = 1 ; i < n ; i++) {\n\t\t\tint a = in.nextInt();\n\t\t\tif(a < min) {\n\t\t\t\tmin = a;\n\t\t\t\tcnt++;\n\t\t\t}\n\t\t\tif(a > max) {\n\t\t\t\tmax = a;\n\t\t\t\tcnt++;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(cnt);\n\t}\nstatic class InputReader {\n\n\tprivate final InputStream stream;\n\tprivate final byte[] buf = new byte[8192];\n\tprivate int curChar, snumChars;\n\tprivate SpaceCharFilter filter;\n\n\tpublic InputReader(InputStream stream) {\n\t\tthis.stream = stream;\n\t}\n\n\tpublic int snext() {\n\t\tif (snumChars == -1)\n\t\t\tthrow new InputMismatchException();\n\t\tif (curChar >= snumChars) {\n\t\t\tcurChar = 0;\n\t\t\ttry {\n\t\t\t\tsnumChars = stream.read(buf);\n\t\t\t} catch (IOException e) {\n\t\t\t\tthrow new InputMismatchException();\n\t\t\t}\n\t\t\tif (snumChars <= 0)\n\t\t\t\treturn -1;\n\t\t}\n\t\treturn buf[curChar++];\n\t}\n\n\tpublic int nextInt() {\n\t\tint c = snext();\n\t\twhile (isSpaceChar(c)) {\n\t\t\tc = snext();\n\t\t}\n\t\tint sgn = 1;\n\t\tif (c == '-') {\n\t\t\tsgn = -1;\n\t\t\tc = snext();\n\t\t}\n\t\tint res = 0;\n\t\tdo {\n\t\t\tif (c < '0' || c > '9')\n\t\t\t\tthrow new InputMismatchException();\n\t\t\tres *= 10;\n\t\t\tres += c - '0';\n\t\t\tc = snext();\n\t\t} while (!isSpaceChar(c));\n\t\treturn res * sgn;\n\t}\n\n\tpublic long nextLong() {\n\t\tint c = snext();\n\t\twhile (isSpaceChar(c)) {\n\t\t\tc = snext();\n\t\t}\n\t\tint sgn = 1;\n\t\tif (c == '-') {\n\t\t\tsgn = -1;\n\t\t\tc = snext();\n\t\t}\n\t\tlong res = 0;\n\t\tdo {\n\t\t\tif (c < '0' || c > '9')\n\t\t\t\tthrow new InputMismatchException();\n\t\t\tres *= 10;\n\t\t\tres += c - '0';\n\t\t\tc = snext();\n\t\t} while (!isSpaceChar(c));\n\t\treturn res * sgn;\n\t}\n\n\tpublic int[] nextIntArray(int n) {\n\t\tint a[] = new int[n];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\ta[i] = nextInt();\n\t\t}\n\t\treturn a;\n\t}\n\n\tpublic long[] nextLongArray(int n) {\n\t\tlong a[] = new long[n];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\ta[i] = nextInt();\n\t\t}\n\t\treturn a;\n\t}\n\n\tpublic String readString() {\n\t\tint c = snext();\n\t\twhile (isSpaceChar(c)) {\n\t\t\tc = snext();\n\t\t}\n\t\tStringBuilder res = new StringBuilder();\n\t\tdo {\n\t\t\tres.appendCodePoint(c);\n\t\t\tc = snext();\n\t\t} while (!isSpaceChar(c));\n\t\treturn res.toString();\n\t}\n\n\tpublic String nextLine() {\n\t\tint c = snext();\n\t\twhile (isSpaceChar(c))\n\t\t\tc = snext();\n\t\tStringBuilder res = new StringBuilder();\n\t\tdo {\n\t\t\tres.appendCodePoint(c);\n\t\t\tc = snext();\n\t\t} while (!isEndOfLine(c));\n\t\treturn res.toString();\n\t}\n\n\tpublic boolean isSpaceChar(int c) {\n\t\tif (filter != null)\n\t\t\treturn filter.isSpaceChar(c);\n\t\treturn c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n\t}\n\n\tprivate boolean isEndOfLine(int c) {\n\t\treturn c == '\\n' || c == '\\r' || c == -1;\n\t}\n\n\tpublic interface SpaceCharFilter {\n\t\tpublic boolean isSpaceChar(int ch);\n\t}\n}\n}"
        },
        {
            "language": 1,
            "solution": "n=int(raw_input())\ncontestpt=map(int,raw_input().split())\nminpt,count,maxpt=contestpt[0],0,contestpt[0]\nfor i in range(1,len(contestpt)):\n\tif minpt>contestpt[i]:\n\t\tcount+=1\n\t\tminpt=contestpt[i]\n\tif maxpt<contestpt[i]:\n\t\tcount+=1\n\t\tmaxpt=contestpt[i]\nprint count#,minpt,maxpt"
        },
        {
            "language": 3,
            "solution": "maxi, mini, current, answer = -1, 10000, 0, 0\n\nSCount = int(input())\na = list(map(int, input().split()))\n\nfor x in range(0,SCount):    \n    if x == 0:\n        maxi = a[x]\n        mini = a[x]\n    elif x != 0:\n        if maxi < a[x]:\n            maxi = a[x]\n            answer += 1\n        if mini > a[x]:\n            mini = a[x]\n            answer += 1  \n\nprint(answer)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\n\np = list(map(int, input().split()))\nc = 0\nmx_in = p[0]\nmin_in = p[0]\n\nfor i in range(1, n):\n\tif p[i] > mx_in:\n\t\tmx_in = p[i]\n\t\tc += 1\n\telif p[i] < min_in:\n\t\tmin_in = p[i]\n\t\tc += 1\n\nprint(c)"
        },
        {
            "language": 1,
            "solution": "n = input()\nm = map(int, raw_input().split())\n\nhi = lo = m[0]\ncount = 0\nfor i in range(1, n):\n    if m[i] < lo:\n        lo = m[i]\n        count += 1\n\n    if m[i] > hi:\n        hi = m[i]\n        count += 1\n\nprint count\n\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int, input().split()))\nmax=a[0]\nmin=a[0]\nk=0\nfor i in range (1,n):\n    if (a[i]>max):\n        k+=1\n        max=a[i]\n    if (a[i]<min):\n        k+=1\n        min=a[i]        \nprint(k)\n    "
        },
        {
            "language": 1,
            "solution": "def main():\n\tn=int(raw_input())\n\tp=[int(ele) for ele in raw_input().split()]\n\tminp=p[0]\n\tmaxp=p[0]\n\tacounter=0\n\tfor i in range(n-1):\n\t\tif(maxp<p[i+1]):\n\t\t\tmaxp=p[i+1]\n\t\t\tacounter=acounter+1\n\t\tif(minp>p[i+1]):\n\t\t\tminp=p[i+1]\n\t\t\tacounter=acounter+1\n\tprint acounter\n\n\n\nif __name__==\"__main__\":\n\tmain()\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nscore=[int(x) for x in input().split()]\nans=0\nfor i in range(1,n):\n    a,b=0,0\n    for j in range(i):\n        if score[i]>score[j]:\n            a+=1\n        elif score[i]<score[j]:\n            b+=1\n    if a==i or b==i:\n        ans+=1\nprint(ans)"
        },
        {
            "language": 3,
            "solution": "import sys\nimport math\nn = input()\nt = list(input().split())\nt = [int(i) for i in t ]\nmax = t[0]\nmin = t[0]\ncnt = 0\nfor i in range(1,len(t)):\n    if t[i]>max:\n        max = t[i]\n        cnt+=1\n    elif t[i]<min:\n        min = t[i]\n        cnt+=1\nprint(cnt)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nL = []\nL = input().split()\nA = int(L[0])\nB, C = A, A\nP = 0\nfor i in range(1,n):\n  v = int(L[i])\n  if v<B:\n    B = v\n    P+=1\n  elif v>C:\n    C = v\n    P+=1\nprint(P)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\ni = [int(x) for x in input().split()]\ncount,mx,mn = 0,i[0],i[0]\nfor j in range(1,len(i)):\n    if i[j] > mx:\n        mx = i[j]\n        count += 1\n    if i[j] < mn:\n        mn = i[j]\n        count += 1\n#    if i[j-1] < i[j]:\n#        count += 1\nprint(count)\n    "
        },
        {
            "language": 3,
            "solution": "n=int(input())\narr=list(map(int,input().split()[:n]))\ns=len(arr)\nm=arr[0]\nb=arr[0]\ncount=0\nfor i in range(s):\n    if arr[i]>b:\n        b=arr[i]\n        count=count+1\n    elif arr[i]<m:\n        m=arr[i]\n        count+=1\nprint(count)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nNum = list(map(int, input().split( )))\nhigh_score, low_score, amazing_n = (Num[0], Num[0], 0)\nfor i in Num:\n    if i > high_score:\n        amazing_n += 1\n        high_score = i\n    elif i < low_score:\n        amazing_n += 1\n        low_score = i\n    else:\n        pass\nprint(amazing_n)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int l, f = 0, k;\n  cin >> l >> k;\n  int m = k, n = k;\n  for (int i = 1; i < l; i++) {\n    cin >> k;\n    if (k > m) {\n      m = k;\n      f++;\n    } else if (k < n) {\n      n = k;\n      f++;\n    }\n  }\n  cout << f;\n}\n"
        },
        {
            "language": 1,
            "solution": "import sys\n\ndef main():\n    k = int(sys.stdin.readline())\n    arr = map(int, sys.stdin.readline().strip().split())\n    min_ = arr[0]\n    max_ = arr[0]\n    count = 0\n    for x in arr:\n        if x > max_:\n            count +=1\n            max_ = x\n        if x < min_:\n            count += 1\n            min_ = x\n    return count\n\nif __name__ == \"__main__\":\n    print main()\n  "
        },
        {
            "language": 3,
            "solution": "contests = int(input())\nscores = list(map(int, input().split()))\namazingScores = [scores[i] for i in range(len(scores)) if (scores[i] == max(scores[:i+1:])) or (scores[i] == min(scores[:i+1:]))]\nprint(len(set(amazingScores)) - 1)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = list(map(int, input().split()))\ns = m = l[0]\nc = 0\nfor i in range(1,len(l)):\n    k = l[i]\n    if k > s:\n        c+=1\n        s = k\n    elif k < m:\n        c += 1\n        m=k\nprint(c)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\n\na = list(map(int, input().split()))\n\nmx = mn = a[0]\n\nans = 0\nfor i in range(1, n):\n    k = a[i]\n    if k < mn:\n        mn = k\n        ans += 1\n    elif k > mx:\n        mx = k\n        ans += 1\n\nprint(ans)\n"
        },
        {
            "language": 3,
            "solution": "n= int(input())\nls = list(map(int,input().split()))\n_min = ls[0]\n_max = ls[0]\namazing = 0\nfor i in range(1,len(ls)):\n    if ls[i]>_max:\n        _max = ls[i]\n        amazing += 1\n    elif ls[i]<_min:\n        _min = ls[i]\n        amazing += 1\n\nprint(amazing)\n    \n\n\n\n"
        },
        {
            "language": 3,
            "solution": "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Tue Nov  5 17:23:26 2019\n\n@author: LV\n\"\"\"\n\ninput()\nscore = [int(x) for x in input().split()]\ntotal = 0\nfor i in range(1, len(score)):\n    if(score[i] > max(score[:i]) or score[i] < min(score[:i])):\n        total += 1\n    else:\n        continue\nprint(total)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\ns = [int(x) for x in input().split()]\ncount=0\nmini = s[0]\nmaxi = s[0]\nfor i in range (0,n-1):\n    if s[i+1]< mini:\n        count+=1\n        mini=s[i+1]\n    elif s[i+1]>maxi :\n        count+=1\n        maxi = s[i+1]\n\nprint(count)"
        },
        {
            "language": 3,
            "solution": "#I_love_%username%\nn=int(input())\na=list(map(int,input().split()))\nc=0\np=q=a[0]\nfor i in range(len(a)):\n    if(p>a[i]):\n        c+=1\n        p=a[i]\n    if(q<a[i]):\n        c+=1\n        q=a[i]\nprint(c)        \n        "
        },
        {
            "language": 3,
            "solution": "n=int(input())\narr = list(map(int, input().split()))\n\nmn=arr[0]\nmx=arr[0]\ncnt=0\n\nfor i in range(1,n):\n    if(arr[i]>mx):\n        mx=arr[i]\n        cnt+=1\n    elif(arr[i]<mn):\n        mn=arr[i]\n        cnt+=1\n\nprint(cnt)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input(\"\"))\nl = list(input().split())\nl2 = []\nfor i in l:\n l2.append(int(i, 10))\nc = 0\nfor i in range(1, n):\n l1 = l2[0 : i]\n if(l2[i] < min(l1) or l2[i] > max(l1)):\n  c = c + 1\nprint(c)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\ndata=input()\nlst=list()\nfor i in data.split():\n    lst.append(int(i))\n\nlargest=lst[0]\nsmallest=lst[0]\ncount=0\nfor j in lst:\n    if j>largest:\n        largest=j\n        count=count+1\n    elif j<smallest:\n        smallest=j\n        count=count+1\n\nprint(count)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\npoints = [int(num) for num in input().split()]\n\nmayor = points[0]\nmenor = points[0]\ni = 1\ncount = 0\nwhile (i < n):\n\tif (points[i] > mayor):\n\t\tmayor = points[i]\n\t\tcount += 1\n\telif (points[i] < menor):\n\t\tmenor = points[i]\n\t\tcount += 1\n\ti+= 1\n\t\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nx = list(map(int, input().split()))\nnum = 0\nfor i in range(1, n):\n    if x[i] > max(x[:i]) or x[i] < min(x[:i]):\n        num += 1\n\nprint(num)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\narr = list(map(int, input().split()))\ncount = 0\nmaxel = arr[0]\nminel = maxel\nfor i in range(1, len(arr)):\n    if arr[i] > maxel :\n        maxel = arr[i]\n        count += 1\n    if arr[i] < minel:\n        count += 1\n        minel = arr[i]\n\nprint(count)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[0,]*n\na=[int(i) for i in input().split()]\nma=a[0]\nmi=a[0]\ns=0\nfor i in range(1,n):\n    if a[i]>ma:\n        s+=1\n        ma=a[i]\n    elif a[i]<mi:\n        s+=1\n        mi=a[i]\nprint(s)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = [int(i) for i in input().split()]\nmaxim = a[0]\nminim = a[0]\nctr = 0\nfor i in range(1,n):\n    if a[i] > maxim:\n        maxim = a[i]\n        ctr += 1\n    elif a[i] < minim:\n        minim = a[i]\n        ctr += 1\nprint (ctr)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\npoint = list(map(int, input().split()))\nminimum = point[0]\nmaximum = point[0]\nans = 0\nfor i in range(1, n):\n    if(point[i] < minimum or point[i] > maximum):\n        ans += 1\n        minimum = min(minimum, point[i])\n        maximum = max(maximum, point[i])\nprint(ans)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nc=0\nfor i in range(1,n):\n    if a[i]<min(a[:i]) or a[i]>max(a[:i]):\n        c+=1\nprint(c)"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nl = list(map(int,input().split()))\nr = []\ns = 0\nmina = 999999\nmaxa = -999999\nfor i in range(len(l)):\n    if i == 0:\n        maxa=  l[0]\n        mina = l[0]\n        continue\n    if l[i] > maxa:\n        s+=1\n        maxa = l[i]\n    if l[i] < mina:\n        s+=1\n        mina = l[i]\n    pass\nprint(s)"
        },
        {
            "language": 1,
            "solution": "raw_input()\ncompetitions=raw_input()\ncompetitions=competitions.split(' ')\ni=0\nwhile i<len(competitions):\n    competitions[i]=int(competitions[i])\n    i+=1\ni=1\nresult=0\nwhile i<len(competitions):\n    if min(competitions[:i])>competitions[i] or \\\n    competitions[i]>max(competitions[:i]):\n        result+=1\n    i+=1\nprint result"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class Codeforces {    \n    \n    public static void main(String[] args) {           \n        TaskA Solver = new TaskA();\n        Solver.Solve();\n    }\n    \n    public static class TaskA {                \n        public void Solve() {            \n            Scanner in = new Scanner(System.in);   \n            int n = in.nextInt();\n            int cur = in.nextInt();\n            int min = cur, max = cur, ans = 0;\n            for (int i = 1; i < n; i++) {\n                cur = in.nextInt();\n                if (cur < min) {\n                    ans++;\n                    min = cur;\n                }\n                else {\n                    if (cur > max) {\n                        ans++;\n                        max = cur;\n                    }\n                }\n            }\n            System.out.println(ans);\n        }\n    }\n}"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nm=l[0]\ns=l[0]\nc=0\nfor i in l:\n    if(i>m):\n        m=i\n        c+=1\n    elif(i<s):\n        s=i\n        c+=1\nprint(c)\n"
        },
        {
            "language": 1,
            "solution": "raw_input()\narray = [int(i) for i in raw_input().split()]\nnumber = 0\nmax = min = array[0]\nfor i in array:\n    number += 1\n    if i > max: max = i\n    elif i < min: min = i\n    else: number -= 1\nprint number\n        \n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nscores=[int(x)for x in input().split()]\nans=0\na=scores[0]\nb=scores[0]\nfor score in scores:\n\tif score>a:\n\t\tans+=1\n\t\ta=score\n\telif score<b:\n\t\tans+=1\n\t\tb=score\nprint(ans)\n"
        },
        {
            "language": 4,
            "solution": "import java.lang.*;\nimport java.util.*;\nimport java.io.*;\npublic class A155 {\n    public static void main(String[] args) {\n        int n;\n        int[] a=new int[1005];\n        Scanner sc=new Scanner(System.in);\n        n=sc.nextInt();\n        int min=10005,max=0,dem=0;\n        for(int i=0;i<n;i++){\n            a[i]=sc.nextInt();\n        }\n        max=a[0];min=a[0];\n        for(int i=1;i<n;i++){\n            if(a[i]>max) {\n                dem++;\n                max=a[i];\n            }\n            else {\n                if(a[i]<min) {\n                    dem++;\n                    min=a[i];\n                }\n            }\n        }\n        System.out.print(dem);\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = [int(_) for _ in input().split()]\ncnt = 0\nmn = mx = a[0]\nfor x in a[1:]:\n  if mn != min(mn, x):\n    cnt += 1\n  if mx != max(mx, x):\n    cnt += 1\n  mn = min(mn, x); mx = max(mx, x)\nprint(cnt)\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\na = list(map(int, input().split()))\nb = [a[0]]\nb_max = a[0]\nb_min = a[0]\nc = 0\nfor i in range(1, t):\n\tif a[i] > b_max or a[i] < b_min:\n\t\tc += 1\n\tb.append(a[i])\n\tb_max = max(b)\n\tb_min = min(b)\n\t\nprint(c)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nline=[int(i) for i in input().split()]\nama=0\nMax,Min=line[0],line[0]\nfor i in range(1,n):\n\tif  line[i]>Max:\n\t\tMax=line[i]\n\t\tama+=1\n\telif line[i]<Min:\n\t\tMin=line[i]\n\t\tama+=1\nprint(ama)\n\t\n\n\n\n"
        },
        {
            "language": 1,
            "solution": "n=input()\na=map(int, raw_input().split())\nmaximum=a[0]\nminimum=a[0]\ncount=0\nfor i in a:\n    if i>maximum or i<minimum:\n        count+=1\n    maximum=max(maximum, i)\n    minimum=min(minimum, i)\nprint count  "
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\ncount=0\nmini=l[0]\nmaxi=l[0]\nfor i in range(1,len(l)):\n    if l[i]<mini:\n        count+=1\n        mini=l[i]\n    elif l[i]>maxi:\n        count+=1\n        maxi=l[i]\nprint(count)"
        },
        {
            "language": 3,
            "solution": "input()\nx = input().split()\nfor i in range(len(x)):\n x[i] = int(x[i])\n\nmaks = x[0]\nmins = x[0]\ncounter = 0\n\nfor i in range(1,len(x)):\n if not (mins<= x[i] <= maks):\n  counter +=1\n  if x[i] < mins:\n   mins = x[i]\n  else:\n   maks = x[i]\n\nprint(counter)\n\t\t\t\t \t\t \t\t  \t\t\t   \t\t      \t  \t\t"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = [int(x) for x in input().split()]\nc = 0\nfor i in range(1,n):\n    less = True\n    more = True\n    for j in range(0,i):\n        if a[i]>=a[j]:\n            more = False\n        if a[i]<=a[j]:\n            less = False\n    if more or less:\n        c+=1\nprint(c)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\narr = list(map(int, input().strip().split()))\nl = 0\nfor i in range(1, len(arr)):\n    max_i = max(arr[:i])\n    min_i = min(arr[:i])\n    if arr[i] > max_i or arr[i] < min_i:\n        l += 1\nprint(l)"
        },
        {
            "language": 3,
            "solution": "ns=int(input())\nscores = list(map(int,input().split(\" \")))\nsmallest = largest = scores[0]\namazing = 0\nfor score in scores[1:]:\n    if(score < smallest):\n        smallest = score\n        amazing+=1\n    if(score > largest):\n        largest = score\n        amazing+=1\nprint(amazing)\n"
        },
        {
            "language": 3,
            "solution": "n=input()\ns=list(map(int,input().split()))\nm1=0\nm2=100000\nr=0\nfor i in range(int(n)):\n    if i==0:\n        m1=s[i]\n        m2=s[i]\n    else:\n        if s[i]>m1:\n            r+=1\n            m1=s[i]\n        else:\n            if s[i]<m2:\n                r+=1\n                m2=s[i]\nprint(r)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int,input().split()))\nmin = a[0]\nmax = a[0]\ncount = 0\nfor i in range(n):\n\tif a[i]>max:\n\t\tmax = a[i]\n\t\tcount+=1\n\tif a[i]<min:\n\t\tmin =a[i]\n\t\tcount+=1\n\nprint(count)\t\t"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class MyClass {\n    public static void main(String args[]) {\n      Scanner sc=new Scanner(System.in);\n      int n=sc.nextInt();\n      int a[]=new int[n];\n      for(int i=0;i<n;i++)\n      {\n          a[i]=sc.nextInt();\n      }\n      int max=a[0],min=a[0],c=0,d=0;\n      for(int i=1;i<n;i++)\n      {\n          if(a[i]>max)\n            {max=a[i];\n            c++;\n            }\n          else if(a[i]<min)\n           { min=a[i];\n            d++;}\n      }\n      System.out.println(c+d);\n    }\n}"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nm=a[0]\nl=a[0]\nf=0\nfor i in range(1,n):\n    if a[i]>m :\n        f+=1\n        m=a[i]\n    if a[i]<l:\n        f+=1\n        l=a[i]\nprint(f)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\n\nl = list(map(int, input().split()))\n\ntot = 0\nmn = mx = l[0]\n\nfor i in l[1:]:\n\tif i < mn:\n\t\ttot += 1\n\t\tmn = i\n\telif i > mx:\n\t\ttot += 1\n\t\tmx = i\n\nprint(tot)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = list(map(int, input().split()))\nk = 0\nminx, maxx = l[0], l[0]\nfor i in range(2, n + 1):\n    x = l[:i]\n##    print(x)\n    if min(x) == x[-1]:\n        if x.count(min(x)) > 1:\n            continue\n        else:\n            k += 1\n    elif max(x) == x[-1]:\n        if x.count(max(x)) > 1:\n            continue\n        else:\n            k += 1\nprint(k)\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\nimport java.math.*;\nimport java.lang.*;\n \nimport static java.lang.Math.*;\n \npublic class Cf182 implements Runnable \n{\n\tstatic class InputReader \n\t{\n\t\tprivate InputStream stream;\n\t\tprivate byte[] buf = new byte[1024];\n\t\tprivate int curChar;\n\t\tprivate int numChars;\n\t\tprivate SpaceCharFilter filter;\n\t\tprivate BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tpublic InputReader(InputStream stream) \n\t\t{\n\t\t\tthis.stream = stream;\n\t\t}\n\t\t\n\t\tpublic int read()\n\t\t{\n\t\t\tif (numChars==-1) \n\t\t\t\tthrow new InputMismatchException();\n            \n\t\t\tif (curChar >= numChars) \n\t\t\t{\n\t\t\t\tcurChar = 0;\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tnumChars = stream.read(buf);\n\t\t\t\t}\n\t\t\t\tcatch (IOException e)\n\t\t\t\t{\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t}\n                \n\t\t\t\tif(numChars <= 0)               \n\t\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn buf[curChar++];\n\t\t}\n     \n\t\tpublic String nextLine()\n\t\t{\n\t\t\tString str = \"\";\n\t\t\ttry\n\t\t\t{\n\t\t\t\tstr = br.readLine();\n\t\t\t}\n\t\t\tcatch (IOException e)\n\t\t\t{\n\t\t\t\te.printStackTrace();\n\t\t\t}\t\n\t\t\treturn str;\n\t\t}\n\t\tpublic int nextInt() \n\t\t{\n\t\t\tint c = read();\n            \n\t\t\twhile(isSpaceChar(c)) \n\t\t\t\tc = read();\n\t\t\n\t\t\tint sgn = 1;\n        \n\t\t\tif (c == '-') \n\t\t\t{\n\t\t\t\tsgn = -1;\n\t\t\t\tc = read();\n\t\t\t}\n            \n\t\t\tint res = 0;\n\t\t\tdo\n\t\t\t{\n\t\t\t\tif(c<'0'||c>'9') \n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\tres *= 10;\n\t\t\t\tres += c - '0';\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\twhile (!isSpaceChar(c)); \n        \n\t\t\treturn res * sgn;\n\t\t}\n        \n\t\tpublic long nextLong() \n\t\t{\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = read();\n\t\t\tint sgn = 1;\n\t\t\tif (c == '-')\n\t\t\t{\n\t\t\t\tsgn = -1;\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tlong res = 0;\n\t\t\t\n\t\t\tdo \n\t\t\t{\n\t\t\t\tif (c < '0' || c > '9')\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\tres *= 10;\n\t\t\t\tres += c - '0';\n\t\t\t\tc = read();\n\t\t\t}\t\n\t\t\twhile (!isSpaceChar(c));\n\t\t\t\treturn res * sgn;\n\t\t}\n\t\t\n\t\tpublic double nextDouble() \n\t\t{\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = read();\n\t\t\tint sgn = 1;\n\t\t\tif (c == '-')\n\t\t\t{\n\t\t\t\tsgn = -1;\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tdouble res = 0;\n\t\t\twhile (!isSpaceChar(c) && c != '.') \n\t\t\t{\n\t\t\t\tif (c == 'e' || c == 'E')\n\t\t\t\t\treturn res * Math.pow(10, nextInt());\n\t\t\t\tif (c < '0' || c > '9')\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\tres *= 10;\n\t\t\t\tres += c - '0';\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tif (c == '.') \n\t\t\t{\n\t\t\t\tc = read();\n\t\t\t\tdouble m = 1;\n\t\t\t\twhile (!isSpaceChar(c))\n\t\t\t\t{\n\t\t\t\t\tif (c == 'e' || c == 'E')\n\t\t\t\t\t\treturn res * Math.pow(10, nextInt());\n\t\t\t\t\tif (c < '0' || c > '9')\n\t\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t\tm /= 10;\n\t\t\t\t\tres += (c - '0') * m;\n\t\t\t\t\tc = read();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn res * sgn;\n\t\t}\n    \n\t\tpublic String readString() \n\t\t{\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = read();\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tdo \n\t\t\t{\n\t\t\t\tres.appendCodePoint(c);\n\t\t\t\tc = read();\n\t\t\t} \n\t\t\twhile (!isSpaceChar(c));\n            \n\t\t\treturn res.toString();\n\t\t}\n     \n\t\tpublic boolean isSpaceChar(int c) \n\t\t{\n\t\t\tif (filter != null)\n\t\t\t\treturn filter.isSpaceChar(c);\n\t\t\treturn c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n\t\t}\n     \n\t\tpublic String next()\n\t\t{\n\t\t\treturn readString();\n\t\t}\n        \n\t\tpublic interface SpaceCharFilter\n\t\t{\n\t\t\tpublic boolean isSpaceChar(int ch);\n\t\t}\n\t}\n\tpublic static void main(String args[]) throws Exception \n\t{\n\t\tnew Thread(null, new Cf182(),\"Main\",1<<27).start();\n\t}\t\n\t\n\tpublic static long gcd(long a, long b) \n\t{ \n\t\tif (a == 0) \n\t\t\treturn b; \n\t\treturn gcd(b % a, a); \n\t} \n  \n\tpublic static long findGCD(long arr[], int n) \n\t{ \n\t\tlong result = arr[0]; \n\t\tfor (int i = 1; i < n; i++) \n\t\t\tresult = gcd(arr[i], result); \n\t\treturn result; \n\t}\t \n// \tint a[]=new int[100001];\n//     for(int i=2;i<=100000;i++)\n//     {\n//   if(a[i]!=1)\n//       {\n//           a[i]=0;\n//           li.add(i);\n//           for(int j=2*i;j<=100000;j=j+i)\n//           {\n//               a[j]=1;\n//           }\n//       }\n//     }\n\tpublic void run()\n\t{\n\t\tInputReader sc = new InputReader(System.in);\n\t\tPrintWriter w = new PrintWriter(System.out);\n\t\tint N = sc.nextInt();\n\t\tint a[] = new int[N];\n\t\tfor(int i=0;i<N;i++)\n\t\t    a[i] = sc.nextInt();\n\t\tint ans = 0;\n\t\tint min=0,max=0;\n\t\tif(N==1)\n\t\t    System.out.println(\"0\");\n\t\telse\n\t\t{\n    \t\tif(a[0]==a[1])\n    \t\t{\n    \t\t    min = a[0];\n    \t\t    max = a[1];\n    \t\t}\n    \t\telse\n    \t\t{\n    \t\t    if(a[1]>a[0])\n        \t\t{\n        \t\t    max = a[1];\n        \t\t    min = a[0];\n        \t\t    ans++;\n        \t\t}\n        \t\telse\n        \t\t{\n        \t\t    max = a[0];\n        \t\t    min = a[1];\n        \t\t    ans++;\n        \t\t}\n    \t\t}\n    \t\tfor(int i=2;i<N;i++)\n    \t\t{\n    \t\t    if(a[i]>max)\n    \t\t    {\n    \t\t        ans++;\n    \t\t        max = a[i];\n    \t\t    }\n    \t\t    else if(a[i]<min)\n    \t\t    {\n    \t\t        ans++;\n    \t\t        min = a[i];\n    \t\t    }\n    \t\t}\n    \t\tSystem.out.println(ans);\n\t\t}\n\t}\n}"
        },
        {
            "language": 1,
            "solution": "n = input()\na = map(int, raw_input().split())\nres = 0\nmx = mn = a[0]\nfor i in a:\n\tres += int(i > mx) + int(i < mn)\n\tmx = max(mx, i)\n\tmn = min(mn, i)\nprint res"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[int(x) for x in input().split()]\nm1=a[0]\nm2=a[0]\nc=0\nfor i in range(1,n):\n    if a[i]>m1:\n        m1=a[i]\n        c+=1\n    elif a[i]<m2:\n        m2=a[i]\n        c+=1\nprint(c)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nres = [int(x) for x in input().split()]\nmax = res[0]\nmin = res[0]\ncounter = 0\n\nfor i in range(1, n):\n\tif res[i] > max:\n\t\tmax = res[i]\n\t\tcounter += 1\n\telif res[i] < min:\n\t\tmin = res[i]\n\t\tcounter += 1\n\nprint(counter)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=input()\ns=[int(i) for i in a.split()]\nmin1=s[0]\nmax1=s[0]\nc=0\nfor i in range(1,n):\n    if s[i]>max1:\n        c+=1\n        max1=s[i]\n    if s[i]<min1:\n        c+=1\n        min1=s[i]\nprint(c)\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.StringTokenizer;\n\npublic class Username {\n\tpublic static void main(String[] args) throws Exception {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tint number = Integer.parseInt(br.readLine());\n\t\tint[] arr = new int[number];\n\t\tStringTokenizer st = new StringTokenizer(br.readLine());\n\t\t\n\t\tarr[0] = Integer.parseInt(st.nextToken());\n\t\tint curMax = arr[0], curMin = arr[0], bestPerf = 0;\n\t\t\n\t\tfor(int i = 1; i < number; i++) {\n\t\t\tarr[i] = Integer.parseInt(st.nextToken());\n\t\t\tif(arr[i] < curMin) {\n\t\t\t\tcurMin = arr[i];\n\t\t\t\tbestPerf++;\n\t\t\t} else if(arr[i] > curMax) {\n\t\t\t\tcurMax  =arr[i];\n\t\t\t\tbestPerf++;\n\t\t\t}\n\t\t}\n\t\t\n\t\tSystem.out.println(bestPerf);\n\t}\n\n}\n"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nl1=list(map(int, input().split()))\nmaxi=l1[0]\nmini=l1[0]\nc=0\nd=0\nfor i in range(len(l1)):\n    if(l1[i]>maxi):\n        maxi=l1[i]    \n        c+=1\n    elif(l1[i]<mini):\n        mini=l1[i]\n        d+=1\n    \nprint(c+d)\n        "
        },
        {
            "language": 3,
            "solution": "n=int(input())\nout=0\n\n\nlista=list(map(int,input().split()))\nmaxv=lista[0]\nminv=lista[0]\nfor j in range(0,n-1):\n    if(lista[j+1]>lista[j]):\n        if(lista[j+1]>maxv):\n            maxv=lista[j+1]\n            out+=1\n    elif(lista[j+1]<lista[j]):\n        if(lista[j+1]<minv):\n            minv=lista[j+1]\n            out+=1\n\nprint(out)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nlst=input().split()\nfor i in range(n):\n    lst[i]=int(lst[i])\ncount=0\nfor j in range(1,n):\n    if (lst[j]>max(lst[0:j]))or (lst[j]<min(lst[0:j])):\n        count+=1\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int,input().split()))\ncur_max = a[0]\ncur_min = a[0]\ns = 0\nfor j in range(1,n):\n    if a[j] > cur_max:\n        s += 1\n        cur_max = a[j]\n    if a[j] < cur_min:\n        s += 1\n        cur_min = a[j]\nprint(s)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nj=0\nfor i in range(1,n):\n    x=max(a[0:i])\n    y=min(a[0:i])\n    if a[i]>x or a[i]<y:\n        j+=1\nprint(j)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\ninp=input().split()\nmx=int(inp[0])\nmn=int(inp[0])\naz=0\nfor i in range(n):\n    if int(inp[i])>mx:\n        mx=int(inp[i])\n        az+=1\n    if int(inp[i])<mn:\n        mn=int(inp[i])\n        az+=1\nprint (az)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\ns=list(map(int,input().split()))\nch=0\ns1=[]\nfor i in range(n-1):\n    s1.append(int(s[i]))\n    if int(s[i+1])>max(s1) or int(s[i+1])<min(s1):\n        ch+=1\n\nprint(ch)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = [int(i) for i in input().split()]\nlar = a[0]\nsma = a[0]\nc = 0\nfor i in range(len(a)-1):\n    if( lar > a[i+1]):\n        lar = a[i+1]\n        c += 1\n    if(sma < a[i+1]):\n        sma = a[i+1]\n        c += 1\nprint(c)\n"
        },
        {
            "language": 4,
            "solution": "import java.io.PrintWriter;\nimport java.util.Scanner;\nimport java.util.stream.IntStream;\nimport java.util.stream.Stream;\n\npublic class T\n{\n    public static void main(String[] args)\n    {\n        new T().run();\n    }\n\n    final Scanner sc = new Scanner(System.in);\n    final PrintWriter pw = new PrintWriter(System.out, true);\n\n\n    String yesno(boolean b)\n    {\n        return b ? \"YES\" : \"NO\";\n    }\n\n    class Q\n    {\n        int a, b, c;\n\n        Q(int a, int b, int c)\n        {\n            this.a = a;\n            this.b = b;\n            this.c = c;\n        }\n\n        @Override\n        public boolean equals(Object o)\n        {\n            if (this == o)\n            {\n                return true;\n            }\n            if (!(o instanceof Q))\n            {\n                return false;\n            }\n\n            Q q = (Q) o;\n\n            if (a != q.a)\n            {\n                return false;\n            }\n            if (b != q.b)\n            {\n                return false;\n            }\n            if (c != q.c)\n            {\n                return false;\n            }\n\n            return true;\n        }\n\n        @Override\n        public int hashCode()\n        {\n            int result = a;\n            result = 31 * result + b;\n            result = 31 * result + c;\n            return result;\n        }\n    }\n\n    Q newQ()\n    {\n        return new Q(sc.nextInt(), sc.nextInt(), sc.nextInt());\n    }\n\n    Q sum(Q a, Q b)\n    {\n        return new Q(a.a + b.a, a.b + b.b, a.c + b.c);\n    }\n\n    public void run()\n    {\n        int n = sc.nextInt();\n\n        int[] data = IntStream.generate(sc::nextInt).limit(n).toArray();\n\n        int max = data[0];\n        int min = data[0];\n\n        int result = 0;\n\n        for (int i = 1; i < n; i++)\n        {\n            if (data[i] > max)\n            {\n                result++;\n                max = data[i];\n            }\n            if (data[i] < min)\n            {\n                result++;\n                min = data[i];\n            }\n        }\n\n        System.out.println(result);\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\ns=list(map(int,input().split()))\n\nworst=s[0]\nbest=s[0]\nw=0\nb=0\nfor i in range(1,len(s)):\n        if s[i]>best:\n                best=s[i]\n                b+=1\n        if s[i]<worst:\n                worst=s[i]\n                w+=1\n\nprint (w+b)\n"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\nimport string\nimport math\nimport sys\ndef array_int():\n    return [int(i) for i in sys.stdin.readline().split()]\ndef vary(number_of_variables):\n    if number_of_variables==1:\n        return int(sys.stdin.readline())\n    if number_of_variables>=2:\n        return map(int,sys.stdin.readline().split()) \ndef makedict(var):\n    return dict(Counter(var))\nmod=100000007\nn=vary(1)\nnum=array_int()\ncount=0\nfor i in range(1,n):\n    k=0\n    for j in range(i):\n        if num[j]<num[i] and (k==0 or k==1):\n            k=1\n            continue\n        if num[j]>num[i] and (k==0 or k==2):\n            k=2\n            continue\n        else:\n            break\n    else:\n        count+=1\nprint(count)\n\n                \n\n                 \n\n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        \n\n\n\n\n\n\n        \n\n\n        \n\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint compartments;\nint main(void) {\n  int n;\n  cin >> n;\n  int arr[n];\n  for (int i = 0; i < n; i++) {\n    cin >> arr[i];\n  }\n  int counter = 0;\n  for (int i = 1; i < n; i++) {\n    int MIN = 10001, MAX = 0;\n    for (int j = 0; j < i; j++) {\n      MIN = min(MIN, arr[j]);\n      MAX = max(MAX, arr[j]);\n    }\n    if (MAX < arr[i] || MIN > arr[i]) {\n      counter++;\n    }\n  }\n  cout << endl;\n  cout << counter;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nscores = list(map(int, input().split()))\nmx = scores[0]\nmn = scores[0]\nc = 0\nfor i in range(1, n):\n    if scores[i] > mx:\n        mx = scores[i]\n        c += 1\n    elif scores[i] < mn:\n        mn = scores[i]\n        c += 1\nprint(c)"
        },
        {
            "language": 3,
            "solution": "#155A I Love UserName\na=input()\nb=list(map(int,input().split()))\n\n\ncounter=1\n\nif len(b)==1:\n    print(0)\nelif len(b)==2:\n    if b[0]==b[1]:\n        print(0)\n    else:\n        print(1)\n\nelse:\n    if b[0]==b[1]:\n        counter=0\n    minimum=min(b[0],b[1])\n    maximum=max(b[0],b[1])\n    for i in range(2,len(b)):\n        if b[i]<minimum:\n            minimum=b[i]\n            counter+=1\n        if b[i]>maximum:\n            maximum=b[i]\n            counter+=1\n\n    print(counter)\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nar = list(map(int,input().split()))\nma = ar[0]\nmi = ar[0]\nans = 0\nfor i in ar:\n    if ma < i:\n        ans += 1\n        ma = i\n    if mi > i:\n        ans += 1\n        mi = i\nprint(ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint main(void) {\n  int n, max, min, i, amazing, score;\n  scanf(\"%d\", &n);\n  scanf(\"%d\", &max);\n  min = max;\n  for (amazing = 0, i = 1; i < n; i++) {\n    scanf(\"%d\", &score);\n    if (max < score) {\n      amazing++;\n      max = score;\n    } else if (min > score) {\n      amazing++;\n      min = score;\n    }\n  }\n  printf(\"%d\", amazing);\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "import sys\ninput = sys.stdin.readline\n\n############ ---- Input Functions ---- ############\ndef inp():\n    return(int(input()))\ndef inlt():\n    return(list(map(int,input().split())))\ndef insr():\n    s = input()\n    return(list(s[:len(s) - 1]))\ndef invr():\n    return(map(int,input().split()))\ndef insr2():\n    s = input()\n    return(s.split(\" \"))\n\nn = inp()\ns = invr()\n\nminn, maxx = s[0], s[0]\nans = 0\n\nfor a in s[1:]:\n    if a > maxx:\n        maxx = a\n        ans += 1\n    if a < minn:\n        minn = a\n        ans += 1\n\n    \nprint(ans)\n\n"
        },
        {
            "language": 1,
            "solution": "import sys\ndef start():\n\n    num1 = map(int,sys.stdin.readline().split())\n    num2 = map(int,sys.stdin.readline().split())\n    max = num2[0]\n    min = num2[0]\n    count = 0\n\n    for v in range(0,num1[0]):\n\n        if num2[v] > max:\n            max = num2[v]\n            count +=1\n        elif num2[v] < min:\n            min = num2[v]\n            count +=1\n    return count\n\nprint start()"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = list(map(int,input().split()))\n\nmax = l[0]\nmin = l[0]\n\nc = 0\n\nfor i in l:\n    if(i < min):\n        min = i\n        c+=1\n    if(i>max):\n        max = i\n        c+=1\n        \nprint(c)\n    "
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = [int(x) for x in input().split()]\nl = [a[0]]\nc = 0\nfor i in range(1,n):\n    s = min(l)\n    v =max(l)\n    l.append(a[i])\n    if s > min(l):\n        c += 1\n    if v < max(l):\n        c += 1\nprint(c)"
        },
        {
            "language": 3,
            "solution": "input()\nnums = list(map(int, input().split()))\n\nmin_val, max_val = nums[0], nums[0]\nans = 0\nfor n in nums:\n\tans += (n < min_val) + (n > max_val)\n\tmin_val, max_val = min(n, min_val), max(n, max_val)\n\nprint(ans)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\narr = [int(i) for i in input().split()]\nmx = arr[0]\nmn = arr[0]\nc = 0\nfor i in range(1, n):\n    if mx<arr[i] or arr[i]<mn:\n        mx = max(mx, arr[i])\n        mn = min(mn, arr[i])\n        c += 1\nprint(c)"
        },
        {
            "language": 3,
            "solution": "s=input()\nm=input().split()\nk=list(map(int, m))\nmin=k[0]\nmax=k[0]\nkol=0\nfor i in k:\n    if i < min:\n        min=i\n        kol+=1\n    elif i > max:\n        max=i\n        kol+=1\n    else:\n        pass\nprint(kol)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nLine = input().split()\nfor i in range(n):\n    Line[i] = int(Line[i])\nk = 0\nfor i in range(1,n):\n    a = 0\n    b = 0\n    for j in range(0,i):\n        if Line[i] > Line[j]:\n            a = a+1\n        elif Line[i] < Line[j]:\n            b = b+1\n    if a == i or b == i:\n        k = k +1\nprint(k)\n"
        },
        {
            "language": 1,
            "solution": "contests = int(raw_input())\n\nscores = raw_input().split()\nscores = [int(x) for x in scores]\n\namazing = 0\nbest = 0\nworst = 0\n\nfor i in xrange(0, contests):\n    if i == 0:\n        best = scores[i]\n        worst = scores[i]\n        \n    else:\n        if scores[i] > best:\n            best = scores[i]\n            amazing += 1\n            \n        elif scores[i] < worst:\n            worst = scores[i]\n            amazing += 1\n\nprint amazing"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nx = [int(i) for i in input().split()]\ncount = 0\nfor i in range(1, n):\n    if x[i] < min(x[:i]):\n        count += 1\n    elif x[i] > max(x[:i]):\n        count += 1\n\nprint(count)\n"
        },
        {
            "language": 1,
            "solution": "n = input()\nscore = [int(i) for i in raw_input().split()]\nMAX = score[0]\nMIN = score[0]\ncnt =0\ne = 1\nwhile e in range(n):\n    if score[e]>MAX:\n        MAX=score[e]\n        cnt +=1\n    elif score[e]<MIN:\n        MIN=score[e]\n        cnt+=1\n    e = e+1\nprint cnt"
        },
        {
            "language": 3,
            "solution": "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Mon Nov  2 14:13:56 2020\n\n@author: jion\n\"\"\"\n\nn = int(input())\nL = [int(x) for x in input().split()]\nnum = 0\nfor i in range(1,len(L)):\n    if L[i] > max(L[:i]) or L[i] < min(L[:i]):\n        num += 1\nprint(num)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=[int(i) for i in input().split()]\nc=0\nfor i in range(1,n):\n    if l[i]>max(l[:i]) or l[i]<min(l[:i]):\n        c+=1\nprint(c)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nscore = [int(n) for n in input().split()]\ncount = 0\nfor i in range(1,len(score)):\n\tif (score[i] > max(score[:i])) or (score[i] < min(score[:i])):\n\t\tcount = count + 1\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\n*l,=map(int,input().split())\nn,m,res=0,10001,0\nfor i in l:\n    if i>n or i<m:\n        res+=1\n    n=max(n,i)\n    m=min(m,i)\nprint(res-1)"
        },
        {
            "language": 3,
            "solution": "import itertools as it\n\ndef pairwise(iterable):\n    a, b = it.tee(iterable)\n    next(b, None)\n    return zip(a, b)\n\ninput()\nn = [int(x) for x in input().split()]\nnew_best  = sum(a > b for a, b in pairwise(it.accumulate(n, min)))\nnew_worst = sum(a < b for a, b in pairwise(it.accumulate(n, max)))\nprint(new_best + new_worst)"
        },
        {
            "language": 3,
            "solution": "# Accept how many integers there are\nx = int(input())\n# Accept a list of numbers\na = [int(b) for b in input().split()]\n# Make the Max and Min equal to the first number in the list\nMax = Min = a[0]\n# Declare variable that will hold the total number of awesome games\ncount = 0\n# Iterate through the list starting at the second number\nfor numb in range(1, x):\n    # If the current number is greater than the current Max, reassign Max and add one to count\n    if a[numb] > Max:\n        count += 1\n        Max = a[numb]\n    # If the current number is less than the current Min, reassign Min and add one to count\n    elif a[numb] < Min:\n        Min = a[numb]\n        count += 1\nprint(count)"
        },
        {
            "language": 3,
            "solution": "a=int(input())\nb=input().split()\np=0\nfor i in range(a):\n    b[i]=int(b[i])\nsummin=max(b)+1\nsummax=-1\nfor i in range(a):\n    if b[i]>summax:\n        summax=b[i]\n        p=p+1\n    if b[i]<summin:\n        summin=b[i]\n        p=p+1\nprint(p-2)"
        },
        {
            "language": 1,
            "solution": "n = input()\nar = map(int, raw_input().split())\nmx, mn = ar[0], ar[0]\ncount = 0 \nfor i in ar[1:]:\n\tif i in [mx, mn]:\n\t\tcontinue\n\tmx = max(mx, i)\n\tmn = min(mn, i)\n\tcount += [0, 1][i in [mx, mn]]\n\nprint count"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nlist1 = input().split(\" \")\nlist2 = [int(i) for i in list1]\nlist_max = [list2[0]]\nlist_min = [list2[0]]\ncount = 0\nfor i in range(0,n):\n    if list2[i] > list_max[0]:\n        list_max.clear()\n        list_max.append(list2[i])\n        count += 1\n    elif list2[i] < list_min[0]:\n        list_min.clear()\n        list_min.append(list2[i])\n        count += 1\nprint(count)"
        },
        {
            "language": 3,
            "solution": "from math import *\n\ndef main():\n\n    n = int(input())\n    x = list(map(int, input().split()))\n    ans = 0\n    for i in range(1, n):\n        if x[i] > max(x[:i]):\n            ans += 1\n        elif x[i] < min(x[:i]):\n            ans+= 1\n    print(ans)\nmain()"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\ncount=0\nb=[]\nfor i in range(len(a)):\n    if b!=[] and (a[i]<min(b) or a[i]>max(b)):\n        count+=1\n    b.append(a[i])\nprint(count)"
        },
        {
            "language": 3,
            "solution": "def array(arr, struc):\n    return (list(map(struc, arr.split())))\n\n\nn = int(input())\narr = array(input(), int)\nmx = mn = arr[0]\nfinal = 0\n\nfor i in range(1, n):\n    if arr[i] > mx:\n        mx = arr[i]\n        final += 1\n    elif arr[i] < mn:\n        mn = arr[i]\n        final += 1\n\nprint(final)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\ninp = list(map(int,input().split()))\nb = 0\nfor i in range(1,n):\n    l = inp[:i]\n    k = 0\n    c = 0\n    for j in range(len(l)):\n        if inp[i] > l[j]:\n            k = k + 1\n    for j in range(len(l)):\n        if inp[i] < l[j]:\n            c = c + 1\n    if k == len(l):\n        b = b + 1\n    if c == len(l):\n        b = b + 1\nprint(b)\n        \n        "
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = [int(i) for i in input().split()]\nres = 0\nmx = a[0]\nmn = a[0]\nfor i in a:\n    if i > mx:\n        mx = i\n        res += 1\n    if i < mn:\n        mn = i\n        res += 1\nprint(res)\n"
        },
        {
            "language": 1,
            "solution": "def solve ():\n\tinput = int(raw_input())\n\tmax = 0\n\tmin = 0\n\tarray = raw_input().split()\n\tcount = 0\n\tfor i in range(input):\n\t\tif i == 0:\n\t\t\tmax = int(array[0])\n\t\t\tmin = int(array[0])\n\t\telse:\n\t\t\ttemp = int(array[i])\n\t\t\tif max < temp:\n\t\t\t\tmax = temp\n\t\t\t\tcount +=1\n\t\t\tif min > temp:\n\t\t\t\tmin = temp\n\t\t\t\tcount +=1\n\tprint count\n\nsolve()\n\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\npoints = 0\n\narray = list(map(int, input().split()))\n\nmaximum = array[0]\nminimum = array[0]\n\nif n == 1:\n    print(0)\n    exit(0)\n\nfor i in range(1, len(array)):\n    if array[i] > maximum:\n        points += 1\n        maximum = array[i]\n    elif array[i] < minimum:\n        points += 1\n        minimum = array[i]\n\nprint(points)"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\nimport java.math.*;\n\npublic class Main\n{\n\tBufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n\tStringTokenizer tokenizer=null;\n\t\n\tpublic static void main(String[] args) throws IOException\n\t{\n\t\tnew Main().execute();\n\t}\n\t\n\tvoid debug(Object...os)\n\t{\n\t\tSystem.out.println(Arrays.deepToString(os));\n\t}\n\t\n\tint ni() throws IOException\n\t{\n\t\treturn Integer.parseInt(ns());\n\t}\n\t\n\tlong nl() throws IOException \n\t{\n\t\treturn Long.parseLong(ns());\n\t}\n\t\n\tdouble nd() throws IOException \n\t{\n\t\treturn Double.parseDouble(ns());\n\t}\n\t\t\n\tString ns() throws IOException \n\t{\n\t\twhile (tokenizer == null || !tokenizer.hasMoreTokens()) \n\t\t\ttokenizer = new StringTokenizer(br.readLine());\n\t\treturn tokenizer.nextToken();\n\t}\n\t\n\tString nline() throws IOException\n\t{\n\t\ttokenizer=null;\n\t\treturn br.readLine();\n\t}\n\t\t\n\t\n\t//Main Code starts Here\n\tint totalCases, testNum;\t\n\tint m,n;\n\tint[] score;\n\tvoid execute() throws IOException\n\t{\n\t\ttotalCases = 1;\n\t\tfor(testNum = 1; testNum <= totalCases; testNum++)\n\t\t{\n\t\t\tinput();\n\t\t\tsolve();\n\t\t}\n\t}\n\n\tvoid solve()\n\t{\n\t\tint best = score[0];\n\t\tint worst = score[0];\n\t\tint amaz=0;\n\t\tfor(int i =1;i<n;i++)\n\t\t{\n\t\t\tif(score[i]>best)\n\t\t\t{\n\t\t\t\tamaz++;\n\t\t\t\tbest = score[i];\n\t\t\t}\n\t\t\tif(score[i]<worst)\n\t\t\t{\n\t\t\t\tworst = score[i];\n\t\t\t\tamaz++;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(amaz);\n\t\t\t\n\t}\n\t\n\tvoid printarr(int [] a,int b)\n\t{\n\t\tfor(int i = 0;i<=b;i++)\n\t\t{\n\t\t\tif(i==0)\n\t\t\t\tSystem.out.print(a[i]);\n\t\t\telse\n\t\t\t\tSystem.out.print(\" \"+a[i]);\n\t\t}\n\t\tSystem.out.println();\n\t}\n\t\n\tboolean input() throws IOException\n\t{\n\t\tn = ni();\n\t\tscore= new int[n];\n\t\tfor(int i = 0 ;i<n;i++)\n\t\t\tscore[i]=ni();\n\n\t\t//debug(score);\n\t\treturn true;\n\t}\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  int arr[n];\n  int max, min;\n  for (int i = 0; i < n; i++) {\n    cin >> arr[i];\n  }\n  max = arr[0];\n  min = arr[0];\n  int cnt = 0;\n  for (int i = 1; i < n; i++) {\n    if (arr[i] > max) {\n      max = arr[i];\n      cnt++;\n    }\n    if (arr[i] < min) {\n      min = arr[i];\n      cnt++;\n    }\n  }\n  cout << cnt;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\n\nl = list(map(int, input().strip().split()))\n\n\nleast, greatest = l[0],l[0]\nres = 0\n\nfor i in range(1, n):\n\tif l[i] > greatest   : \n\t\tres +=1 \n\t\tgreatest = l[i]\n\telif l[i] < least:\n\t\tres += 1\n\t\tleast = l[  i ]       \n\nprint(res)"
        },
        {
            "language": 3,
            "solution": "def main():\n    n = int(input())\n    l = [int(a) for a in input().split(' ')]\n\n    amazing = 0\n    best = worst = l[0]\n    for i in range(1, n):\n        if l[i] > best:\n            best = l[i]\n            amazing += 1\n        elif l[i] < worst:\n            worst = l[i]\n            amazing += 1\n    print(amazing)\n\n\nmain()"
        },
        {
            "language": 3,
            "solution": "num = int(input())\nentries = list(map(int, input().split()))\ns = entries[0]\nl = entries[0]\ncs = 0\ncl = 0\nif len(entries) > 1:\n    for i in range(1, len(entries)):\n        if entries[i] < s:\n            s = entries[i]\n            cs += 1\n        elif entries[i] > l:\n            l = entries[i]\n            cl += 1\n\n    print(cs+cl)\nelse:\n    print(0)\n\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nw = input().split(\" \")\ncounter = 0\nminValue = int(w[0])\nmaxValue = int(w[0])\nfor i in range(1,n):\n  value = int(w[i])\n  if(value > maxValue):\n    maxValue = value\n    counter += 1\n  elif(value < minValue):\n    minValue = value\n    counter += 1\n\nprint(counter)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\ns=list(map(int,input().split()))\n\nmn,mx=s[0],s[0]\nmx_counter,mn_counter=0,0\n\nfor i in range(1,len(s)):\n    if s[i]>mx:\n        mx_counter +=1\n        mx,s[i]=s[i],mx\n    elif s[i]<mn:\n        mn_counter +=1\n        mn,s[i]=s[i],mn\n        \n\nprint(mx_counter+mn_counter)"
        },
        {
            "language": 3,
            "solution": "import math\nfrom collections import defaultdict, Counter, deque\n\nINF = float('inf')\n\ndef gcd(a, b):\n\twhile b:\n\t\ta, b = b, a%b\n\treturn a\n\n\ndef primeFactor(n):\n\tif n % 2 == 0:\n\t\treturn 2\n\ti = 3\n\twhile (i ** 2) <= n:\n\t\tif n % i == 0:\n\t\t\treturn i \n\t\ti += 1\n\treturn n\n\ndef main():\n\tn = int(input())\n\tarr = list(map(int, input().split()))\n\n\tans = 0\n\tcurr_min = arr[0]\n\tcurr_max = arr[0]\n\tfor i in range(1, n):\n\t\tif arr[i] > curr_max:\n\t\t\tcurr_max = arr[i]\n\t\t\tans += 1\n\t\tif arr[i] < curr_min:\n\t\t\tcurr_min = arr[i]\n\t\t\tans += 1\n\tprint(ans)\n\t\n\n\n\n\n\n\t\n\nif __name__ == \"__main__\":\n\t# t = int(input())\n\tt = 1\n\tfor _ in range(t):\n\t\tmain()\n\n\n\n\n\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid solve() {\n  long long n, x;\n  cin >> n;\n  cin >> x;\n  int maxx = x, min = x;\n  n = n - 1;\n  int c = 0;\n  while (n--) {\n    int y;\n    cin >> y;\n    if (y > maxx) {\n      maxx = y;\n      c++;\n    }\n    if (y < min) {\n      min = y;\n      c++;\n    }\n  }\n  cout << c;\n}\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  int t = 1;\n  while (t--) {\n    solve();\n    cout << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\nmax_num, min_num = a[0], a[0]\nans = 0\nfor i in range(1, n):\n  if a[i] > max_num or a[i] < min_num:\n    ans += 1\n  max_num = max(max_num, a[i])\n  min_num = min(min_num, a[i])\n  \nprint(ans)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\nm, M = a[0], a[0]\ni = 0\nfor num in a:\n    if num < m:\n        m = num\n        i += 1\n    if num > M:\n        M = num\n        i += 1\nprint(i)\n\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = list(map(int, input().split()))\ncount = 0\nmax = l[0]\nmin = l[0]\nfor i in range(n):\n    if l[i]>max:\n        max = l[i]\n        count += 1\n    elif l[i]<min:\n        min = l[i]\n        count += 1\n\n\nprint(count)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nscores = list(map(int, input().split()))\ncount = 0\nfor i, s in enumerate(scores):\n    if i == 0:\n        continue\n    if s < min(scores[:i]):\n        count += 1\n    elif s > max(scores[:i]):\n        count += 1\nprint(count)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint mn, mx, n, a, ans;\nint main() {\n  cin >> n >> a;\n  mn = a;\n  mx = a;\n  for (int i = 1; i < n; i++) {\n    cin >> a;\n    if (a > mx) ans++;\n    if (a < mn) ans++;\n    mx = max(mx, a);\n    mn = min(mn, a);\n  }\n  cout << ans;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\nn=int(input())\na=[int(i) for i in input().split()]\nc=0\ni=1\nma=a[0]\nmi=a[0]\nwhile i<n:\n    if a[i]>ma:\n        ma=a[i]\n        c+=1\n    if a[i]<mi:\n        mi=a[i]\n        c+=1\n    i+=1\nprint(c)"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.OutputStreamWriter;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\n\n\npublic class Amazibng {\n\npublic static int t = 0;\npublic static BufferedReader in;\npublic static StringTokenizer st;\n\npublic static String nextToken() throws IOException {\n\twhile (st == null || !st.hasMoreTokens())\n\t\tst = new StringTokenizer(in.readLine());\n\treturn st.nextToken();\n}\n\npublic static int nextInt() throws IOException {\n\treturn Integer.parseInt(nextToken());\n}\n\npublic static void main(String[] args) throws Exception {\n\tin = new BufferedReader(new InputStreamReader(System.in));\n\tPrintWriter out =  new PrintWriter(new OutputStreamWriter(System.out));\n\tint n = nextInt();\n\tint maxSoFar = nextInt();\n\tint minSoFar = maxSoFar;\n\tint res = 0;\n\tfor(int i = 1; i< n; i++)\n\t{\n\t\tint score = nextInt();\n\t\tif(score  > maxSoFar )\n\t\t\t{\n\t\t\tres++;\n\t\t\tmaxSoFar=score;\n\t\t\t}\n\t\telse if(score < minSoFar)\n\t\t{\n\t\t\tres++;\n\t\t\tminSoFar =score;\n\t\t}\n\t}\n\tout.println(res);\n\tout.flush();\n}\n\n}\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.Scanner;\n\npublic class A {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        int n = in.nextInt();\n        int min, max;\n        min = max = in.nextInt();\n        int cnt = 0;\n        for (int i = 1; i < n; i++) {\n            int x = in.nextInt();\n            if (x < min)\n                cnt++;\n            if (x > max)\n                cnt++;\n            min = Math.min(min, x);\n            max = Math.max(max, x);\n        }\n        System.out.println(cnt);\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = [int(i) for i in input().split()]\nb = a[0]\ns = a[0]\nam = 0\nfor i in range(n):\n    if a[i] > b:\n        b = a[i]\n        am += 1\n    elif a[i] < s:\n        s = a[i]\n        am += 1\nprint(am)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\ns=list(map(int,input().split()))\nc=0\nfor i in range(1,n):\n        a=min(s[:i])\n        b=max(s[:i])\n        if s[i]<a or s[i]>b:\n            c+=1\nprint(c)\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class ILoveUsername {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int codePerfomance = 0;\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = sc.nextInt();\n        }\n        int min = a[0];\n        for (int i = 1; i < a.length; i++) {\n            if (a[i] < min) {\n                min = a[i];\n                codePerfomance++;\n            }\n        }\n        int max = a[0];\n        for (int i = 1; i < a.length; i++) {\n            if (a[i] > max) {\n                max = a[i];\n                codePerfomance++;\n            }\n        }\n        System.out.println(codePerfomance);\n    }\n}\n"
        },
        {
            "language": 1,
            "solution": "n = input()\nnum_in = raw_input()\nnum = []\nnum = [int(i) for i in num_in.split()]\n\nmin = num[0]\nmax = num[0]\ncount = 0\n\nfor i in num:\n    if min > i:\n        count = count + 1\n        min = i\n    elif max < i:\n        count = count + 1\n        max = i\nprint count"
        },
        {
            "language": 1,
            "solution": "from sys import stdin as I\n\nn = int(I.readline())\nv = map(int, I.readline().split())\n\nmn = v[0]\nmx = v[0]\nrv = 0\nfor i in xrange(1, n):\n    if v[i] > mx:\n        rv += 1\n        mx = v[i]\n    elif v[i] < mn:\n        rv += 1\n        mn = v[i]\n        \nprint rv"
        },
        {
            "language": 3,
            "solution": "_ = int(input())\n\np_list = list(map(int, input().split()))\n\n_max = p_list[0]\n_min = _max\np_list = p_list[1:]\namaz = 0\nfor _ in p_list:\n    if _ > _max:\n        _max = _\n        amaz += 1\n    elif _ < _min:\n        _min = _\n        amaz += 1\nprint(amaz)"
        },
        {
            "language": 3,
            "solution": "def amazingContestCount(arr):\n    count = 0\n    currentMax = arr[0]\n    currentMin = arr[0]\n    for i in range(1, len(arr)):\n        if arr[i] > currentMax:\n            currentMax = arr[i]\n            count += 1\n        elif arr[i] < currentMin:\n            currentMin = arr[i]\n            count += 1\n    return count\n    \nn = int(input())\nnums = list(map(int, input().split()))\nprint(amazingContestCount(nums))\n"
        },
        {
            "language": 1,
            "solution": "n=int(raw_input())\na=map(int,raw_input().split())\nmi=a[0]\nma=a[0]\nc=0\nfor i in range(1,len(a)):\n    if(a[i]>max(a[:i])):\n        ma=a[i]\n        c+=1\n    elif(a[i]<min(a[:i])):\n        mi=a[i]\n        c+=1\nprint c\n"
        },
        {
            "language": 3,
            "solution": "input()\nm = float(\"inf\")\nM = -m\n\nres = 0\nfor points in input().split():\n    p = int(points)\n    if p > M:\n        res += 1\n        M = p\n    if p < m:\n        res += 1\n        m = p\n\nprint(max(res - 2, 0))"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nA=input().split()\na=int(A[0])\nb=int(A[0])\nk=0\nfor i in range(n):\n\tif int(A[i])>a:\n\t\ta=int(A[i])\n\t\tk=k+1\n\telif int(A[i])<b:\n\t\tb=int(A[i])\n\t\tk=k+1\nprint(k)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\ns=[int(i) for i in input().split()]\nMIN=s[0]\nMAX=s[0]\ncnt=0\nfor i in range(1,n):\n    if s[i]>MAX:\n        MAX=s[i]\n        cnt+=1\n    elif s[i]<MIN:\n        MIN=s[i]\n        cnt+=1\n\nprint(cnt)\n        \n        \n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nif(n == 0):\n    print(\"0\")\nelse:\n    counter = 0\n    low = 0\n    high = 0\n    line = [int(i) for i in input().split()]\n    for j in range(0,n):\n        if(j == 0):\n            low = line[j]\n            high = line[j]\n        else:\n            if(line[j] > high):\n                high = line[j]\n                counter += 1\n            elif(line[j] < low):\n                low = line[j]\n                counter += 1\n    print(str(counter))\n"
        },
        {
            "language": 3,
            "solution": "ans=-1\nma=-1\nmi=10001\nN=int(input())\nl=input().split()\nfor i in l:\n    i=int(i)\n    if i>ma and i<mi:\n        ma=i\n        mi=i\n        ans+=1\n    elif i>ma:\n        ma=i\n        ans+=1\n    elif i<mi:\n        mi=i\n        ans+=1\nprint(ans)\n"
        },
        {
            "language": 1,
            "solution": "n=raw_input()\n#n=5\ncount=0\narr=map(int,raw_input().split())\n# arr=[100,50,200,150,200]\n\nfor i in range(1,len(arr)):\n\tif arr[i]<min(arr[:i]) or arr[i]>max(arr[:i]): \n\t\tcount+=1\nprint count"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.Scanner;\n\n\n/**\n * Created by JUSTIN on 11/23/17.\n */\npublic class BeautifulNumber { //155A\n    public static void main (String args[]){\n        Scanner s = new Scanner(System.in);\n        int minimumNumber, maximumnumber, participants;\n        int love = 0;\n        participants = s.nextInt();\n        int[] scorelist = new int[participants];\n        for (int i = 0; i < participants; i++) {\n            scorelist[i] = s.nextInt();\n            //System.out.println(scorelist[i]);\n        }\n        minimumNumber = scorelist[0];\n        maximumnumber = scorelist[0];\n        for (int q = 0; q < participants; q++) {\n            if (q > 0 && scorelist[q] > maximumnumber) {\n                love++;\n                maximumnumber = scorelist[q];\n                //System.out.println(maximumnumber + \"max\");\n                //System.out.println(scorelist[q]);\n                //System.out.println(q);\n\n\n            }\n            else if (q > 0 && scorelist[q] < minimumNumber) {\n                love++;\n               minimumNumber = scorelist[q];\n                //System.out.println(minimumNumber + \"min\");\n                //System.out.println(scorelist[q]);\n\n            }\n        }\n        System.out.println(love);\n    }\n}\n\n\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "l=[];cnt=0\ns=int(input())\nl=list(map(int,input().split()))\nmx=mn=l[0]\nfor i in l:\n    if mx>i:\n        mx=i\n        cnt+=1\n    elif mn < i:\n        mn = i\n        cnt += 1\nprint(cnt)\n\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = list(map(int,input().split()))\nif n == 1:\n    print(int(0))\nelse:\n    if l[0] != l[1]:\n        k = 1\n    else:\n        k = 0\n    for i in range(2,n):\n        if l[i] > max(l[0:i]) or l[i] < min(l[0:i]):\n            k += 1\n    print(int(k))\n"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nlist1=[]\nc=0\na = [int(j) for j in input().split(\" \")]\nfor i in a:\n    list1.append(i)\nmin=list1[0]\nmax=list1[0]\nfor i in list1[1:]:\n    if i<min:\n        min=i\n        c+=1\n    if i>max:\n        max=i\n        c+=1\nprint(c)\n"
        },
        {
            "language": 3,
            "solution": "Tcases = int(input())\nmx = 0\nmn = 0\namaze = 0\nlst = list(map(int,input().split()))\nfor i in range(Tcases):\n    if i == 0:\n        mx = lst[i]\n        mn = lst[i]\n    else:\n        if lst[i] > mx:\n            amaze += 1\n            mx = lst[i]\n        if lst[i]<mn:\n            amaze += 1\n            mn = lst[i]\nprint(amaze)\n"
        },
        {
            "language": 3,
            "solution": "a=int(input())\nb=list(map(int,input().split()))\nmax=b[0]\nmin=b[0]\ncount=0\nfor i in range(1,a): \n    if b[i]>max: \n        count=count+1\n        max=b[i]\n    elif b[i]<min: \n        count=count+1\n        min=b[i]\n\nprint(count)\n\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nL = map(int,input().split())\nL = list(L)\ni = 1\ncount = 0\nwhile i < n:\n    if L[i] > max(L[0:i]):\n#         print(L[i],i)\n        count += 1\n    if L[i] < min(L[0:i]):\n#         print(L[i],i)\n        count += 1\n    i += 1\nprint(count)"
        },
        {
            "language": 3,
            "solution": "number=int(input())\nperformance=[int(i) for i in input().split()]\nminimum=performance[0]\nmaximum=performance[0]\namazing=0\nfor i in range(1,number):\n    if performance[i]>maximum:\n        maximum=performance[i]\n        amazing +=1\n    if performance[i]<minimum:\n        minimum=performance[i]\n        amazing +=1\nprint(amazing)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[int(j) for j in input().split()]\nzuida=a[0]\nzuixiao=a[0]\njieguo=0\nfor i in range(1,n):\n\n\n    if a[i]>zuida:\n        zuida=a[i]\n\n        jieguo=jieguo+1\n    elif a[i]<zuixiao:\n        zuixiao=a[i]\n        jieguo=jieguo+1\n\n\nprint(jieguo)\n"
        },
        {
            "language": 3,
            "solution": "input()\na = list(map(int, input().split()))\nmn = mx = a[0]\nam = 0\nfor v in a[1:]:\n    if v < mn:\n        mn = v\n        am += 1\n    elif v > mx:\n        mx = v\n        am += 1\nprint(am)"
        },
        {
            "language": 3,
            "solution": "# Vasya considers a coder's performance in a contest \n# amazing in two situations: he can break either his \n# best or his worst performance record. First, it is \n# amazing if during the contest the coder earns strictly\n#  more points that he earned on each past contest. \n# Second, it is amazing if during the contest the \n# coder earns strictly less points that he earned on \n# each past contest. A coder's first contest isn't \n# considered amazing. Now he wants to count the number \n# of amazing performances the coder had throughout his \n# whole history of participating in contests. But the \n# list of earned points turned out long and Vasya can't\n#  code... That's why he asks you to help him.\n\n# Input\n# The first line contains the single integer n (1\u2009\u2264\u2009n\u2009\u2264\u20091000)\n#  \u2014 the number of contests where the coder participated.\n\n# The next line contains n space-separated non-negative \n# integer numbers \u2014 they are the points which the coder \n# has earned. The points are given in the chronological \n# order. All points do not exceed 10000.\n\n# Output\n# Print the single number \u2014 the number of amazing performances \n# the coder has had during his whole history of participating \n# in the contests.\n\nn = int(input())\nrecords = list(map(int, input().split()))\n\ndef amazing(n, records):\n    highest, lowest = records[0], records[0]\n    counter = 0\n    for i in range(1, len(records)):\n        if records[i] > highest:\n            highest = records[i]\n            counter += 1\n#             print('New highest: ', highest)\n        if records[i] < lowest:\n            lowest = records[i]\n            counter += 1\n#             print('New lowest: ', lowest)\n    print(counter)\n\namazing(n, records)"
        },
        {
            "language": 4,
            "solution": "/*package whatever //do not write package name here */\n\nimport java.io.*;\nimport java.lang.*;\nimport java.util.*;\npublic class GFG {\n\tpublic static void main (String[] args) {\n\t    \n\t    Scanner sc=new Scanner(System.in);\n\t\tint n=sc.nextInt();\n\t\tint a[]=new int[n];\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t    a[i]=sc.nextInt();\n\t\t    \n\t\t}\n\t\t\n\t\tint cnt=0;\n\t\tint max=a[0];\n\t\tint min=a[0];\n\t\t\n\t\tfor(int i=1;i<n;i++)\n\t\t{\n\t\t    if(a[i]>max)\n\t\t    {\n\t\t        max=a[i];\n\t\t        cnt++;\n\t\t    }\n\t\t    else if(a[i]<min)\n\t\t    {\n\t\t        min=a[i];\n\t\t        cnt++;\n\t\t    }\n\t\t}\n\t\t\n\t\tSystem.out.println(cnt);\n\t}\n}"
        },
        {
            "language": 3,
            "solution": "a = int(input())\nl = [int(x) for x in (input().split())]\nc=0\nfor i in range(1,len(l)):\n\n    if l[i] > max(l[:i]) or l[i] < min(l[:i]):\n        c+=1\n    else:\n        c+=0\nprint(c)"
        },
        {
            "language": 3,
            "solution": "import math\n\nn = int(input())\nscores = list(map(int, input().split(\" \")))\n\nakbar = scores[0]\nas8ar = akbar\namazing = 0\n\nfor i in range(1, len(scores)):\n    if scores[i]>akbar:\n        akbar = scores[i]\n        amazing+=1\n    if scores[i]<as8ar:\n        as8ar = scores[i]\n        amazing+=1\n\nprint(amazing)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = [int(x) for x in input().split()]\nl = a[0]\nh = a[0]\nans = 0\nfor i in range(1, n):\n  if l > a[i] or h < a[i]:\n    ans += 1\n  l, h = min(l, a[i]), max(h, a[i])\nprint(ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int i, k = -1, kk = 0, m, ara[1003], minn = 0, maxx = -1;\n  int a = 0;\n  cin >> m;\n  for (i = 0; i < m; i++) {\n    cin >> ara[i];\n    if (maxx < ara[i]) {\n      maxx = ara[i];\n      k++;\n    }\n    if (a == 0) minn = ara[0];\n    if (ara[i] < minn) {\n      minn = ara[i];\n      kk++;\n      a++;\n    }\n  }\n  if (k < 0)\n    cout << kk << endl;\n  else if (k >= 0) {\n    cout << k + kk << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\namaz = 0\narr = [int(x) for x in raw_input().split()]\nmaxM =arr[0]\nminM = arr[0]\nfor i in arr:\n    if i < minM:\n        minM = i\n        amaz+=1\n    elif i > maxM:\n        maxM =i\n        amaz+=1\nprint amaz\n"
        },
        {
            "language": 3,
            "solution": "# # \u21161.1 \u0411\u0443\u043a\u0432\u0430 \u0432 \u0441\u043b\u043e\u0432\u0435\n# a = input()\n# s = list(input().split())\n# l = len(s)\n# for i in range(l):\n#     if a in s[i]:\n#         print(s[i])\n\n# # \u21161.2 \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b-\u0432\u043e \u0431\u0443\u043a\u0432 \u0432 \u0441\u043b\u043e\u0432\u0435\n# a = input().lower()\n# max_c = 0\n# for i in a:\n#     if a.count(i) >= max_c:\n#         max_c = a.count(i)\n# print(max_c)\n\n# # \u21161.3  \u0423\u0434\u0430\u043b\u0438\u0442\u044c \u043a\u0430\u0436\u0434\u044b\u0439 \u0442\u0440\u0435\u0442\u0438\u0439 \u0441\u0438\u043c\u0432\u043e\u043b\n# a = input()\n# l = len(a)\n# b = ''\n# for i in range(l):\n#     if i != 0 and i % 3 != 0:\n#         b = b + a[i]\n# print(b)\n\n# # \u21161.4 \u041f\u043e\u043b\u0438\u0446\u0435\u0439\u0441\u043a\u0438\u0435-\u0440\u0435\u043a\u0440\u0443\u0442\u044b\n# c = int(input())\n# h = list(map(int, input().split()))\n# p_count = 0\n# out = 0\n# for i in h:\n#     if i == -1:\n#         if p_count == 0:\n#             out += 1\n#         else:\n#             p_count -= 1\n#     if 1 <= i <= 10:\n#         p_count += i\n# print(out)\n# https://codeforces.com/problemset/problem/427/A\n\n# # \u21161.5 A. I_love_%username%\nc = int(input())\nh = list(map(int, input().split()))\ncount = 0\nmin = h[0]\nmax = h[0]\nfor i in range(c):\n    if h[i] > max:\n        max = h[i]\n        count += 1\n    elif h[i] < min:\n        min = h[i]\n        count += 1\nprint(count)\n# https://codeforces.com/problemset/problem/155/A\n\n\n"
        },
        {
            "language": 3,
            "solution": "input()\nl = list(map(int,input().split()))\nma=l[0]\nmi=l[0]\nans = 0\nfor i in l:\n    if i > ma:\n        ans += 1\n        ma = i\n    elif i < mi:\n        ans += 1\n        mi = i\nprint(ans)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nm=[int(i) for i in input().split()]\n\namazing=0\nmx=m[0]\nmn=m[0]\nfor i in range(1,n):\n    if m[i]>mx:\n        mx=m[i]\n        amazing+=1\n    if m[i]<mn:\n        mn=m[i]\n        amazing+=1\n\nprint(amazing)\n    \n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[int(i) for i in input().strip().split()]\nmax=a[0];min=a[0];count=0\nfor i in range(n):\n    if a[i]>max:\n        max=a[i]\n        count+=1\n    elif a[i]<min:\n        min=a[i]\n        count+=1\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = [int(i) for i in input().split()]\nmax1,min1 = a[0],a[0]\nq = 0\nfor i in a:\n    if i > max1:\n        max1 = i\n        q += 1\n    if i < min1:\n        min1 = i\n        q += 1\nprint(q)"
        },
        {
            "language": 3,
            "solution": "def fun(lst):\n\ts=l=lst[0]\n\ta=0\n\tfor i in lst[1:]:\n\t\tif i<s:\n\t\t\ts=i\n\t\t\ta+=1\n\t\tif i>l:\n\t\t\tl=i\n\t\t\ta+=1\n\treturn a\nn=int(input())\nlst=list(map(int,input().split()))\nprint(fun(lst))"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class A_I_love_username {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();   \n        int min = -1, max = -1;\n        int num;\n        int cn = 0;\n        num = sc.nextInt();\n        min = num;\n        max = num;\n        for(int i = 1 ; i < n ; i++){\n            num = sc.nextInt();\n            if(num > max){\n                max = num;\n                cn++;\n            }\n            else if(num < min){\n                min = num;\n                cn++;\n            }\n        }\n        System.out.println(cn);\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=[int(i) for i in input().split()]\nmi=l[0]\nma=l[0]\nz=0\nfor i in range(1,n):\n    if l[i]>ma:\n        z=z+1\n        ma=l[i]\n    if l[i]<mi:\n        z=z+1\n        mi=l[i]\nprint(z)\n        \n\n"
        },
        {
            "language": 3,
            "solution": "value = int(input())\nvalues = input()\nvalues = values.split()\nvalues = [int(i) for i in values]\na = values[0]\nb = values[0]\ncount = 0\nfor i in values:\n    if i>a:\n        count += 1\n        a = i\n    if i<b:\n        count += 1\n        b = i\nprint(count)\n"
        },
        {
            "language": 3,
            "solution": "fu=input()\nnumbers=list(map(int,input().split()))\nnmax=numbers[0]\nnmin=numbers[0]\nnumbers.pop(0)\nk = 0\nfor i in numbers:\n    if i > nmax:\n        nmax = i\n        k+=1\n    elif i < nmin:\n        nmin = i\n        k+=1\nprint(k)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint N;\nint main() {\n  cin >> N;\n  int i, num, minn, maxn, ans = 0;\n  cin >> minn;\n  maxn = minn;\n  for (i = 1; i < N; ++i) {\n    cin >> num;\n    if (num > maxn) {\n      ++ans;\n      maxn = num;\n    }\n    if (num < minn) {\n      ++ans;\n      minn = num;\n    }\n  }\n  cout << ans;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "class Code:\n    def __init__(self):\n        self.n = int(input())\n        self.arr = list(map(int, input().split()))\n\n    def process(self):\n        mn_mx, cnt = [self.arr[0], self.arr[0]], 0\n        for i in range(1, self.n):\n            if self.arr[i] > mn_mx[0]:\n                cnt += 1\n                mn_mx[0] = self.arr[i]\n            elif self.arr[i] < mn_mx[1]:\n                cnt += 1\n                mn_mx[1] = self.arr[i]\n        print(cnt)\n\n\nif __name__ == '__main__':\n    code = Code()\n    code.process()\n"
        },
        {
            "language": 1,
            "solution": "list_total = raw_input().split()\ntotal_problems = int(list_total[0])\nline = raw_input().split()\n\nam = 0\n\nmin_value = 10001\nmax_value = -10001\nfor i in range(total_problems):\n\tvalue = int(line[i])\n\tif(i==0):\n\t\tmin_value = value\n\t\tmax_value = value\n\telse:\n\t\tif(value>max_value):\n\t\t\tmax_value = value\n\t\t\tam+=1\n\t\telif(value<min_value):\n\t\t\tmin_value = value\n\t\t\tam+=1\n\nprint am"
        },
        {
            "language": 3,
            "solution": "x = int(input())\nscore = [int(x) for x in input().split()]\nmax = 0\nmin = 0\nans = 0\ncount = 0\nfor i in score:\n\tif count ==0:\n\t\tmax = i \n\t\tmin = i\n\t\tcount+=1\n\telif i > max:\n\t\tmax = i\n\t\tans+=1\n\telif i < min:\n\t\tmin = i\n\t\tans+=1\nprint (ans)"
        },
        {
            "language": 3,
            "solution": "# https://codeforces.com/problemset/problem/155/A\n\nn = int(input())\n\ncontests = [int(i) for i in input().split(\" \")]\n\nhighestScore = 0\nlowestScore = 0\namazingPerformance = 0\n\nfor i, score in enumerate(contests):\n    if i == 0:\n        highestScore = score\n        lowestScore = score\n    else:\n        if score > highestScore:\n            highestScore = score\n            amazingPerformance = amazingPerformance + 1\n        elif score < lowestScore:\n            lowestScore = score\n            amazingPerformance = amazingPerformance + 1\n\nprint(amazingPerformance)\n"
        },
        {
            "language": 3,
            "solution": "import sys\n\na = sys.stdin.readline()\ncad = sys.stdin.readline().split()\nmin = int(cad[0])\nmax = int(cad[0])\ncont = 0\nfor i in range(len(cad)):\n    aux = int(cad[i])\n    if(aux>max):\n        max = aux\n        cont += 1\n    if(aux<min):\n        min = aux\n        cont += 1\nprint(cont)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nlst=list(int(num) for num in input().split())[:n]\nlst1=[]\nlst1.append(lst[0])\ncount=0\nfor i in range(1,len(lst)):\n    if max(lst1) < lst[i]:\n        count+=1\n    if min(lst1) > lst[i]:\n        count+=1\n\n\n    lst1.append(lst[i])\nprint(count)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\n\ns = [None] * n\n\ns[:] = map(int, input().split())\n\nminx = 10001\nmx = 0\nans = 0\nfor i in s:\n    if i > mx or i < minx:\n        ans += 1\n    mx = max(mx, i)\n    minx = min(minx, i)\n\nprint(ans - 1)            \n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[int(i) for i in input().split()]\nx,y,k=0,0,0\nif(n>1):\n    if(a[0]>a[1]):\n        y=1\n        k+=1\n    elif(a[0]<a[1]):\n        x=1\n        k+=1\n    for i in range(2,len(a)):\n        if(a[i]>a[x]):\n            k+=1\n            x=i\n        elif(a[i]<a[y]):\n            k+=1\n            y=i\nprint(k)"
        },
        {
            "language": 3,
            "solution": "a = int(input())\nb = [int(x) for x in input().split()]\npoints = [b[0]]\nmin_ = b[0]\nmax_ = b[0]\nresult = 0\nfor i in b[1:]:\n    points.append(i)\n    if max(points) != max_:\n        max_ = max(points)\n        result += 1\n    if min(points) != min_:\n        min_ = min(points)\n        result += 1\nprint(result)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\naList=[int(x) for x in input().split()]\na=aList[0]\namin=a\namax=a\nk=0\nfor i in aList[1:]:\n    if i>amax:\n        k+=1\n        amax=i\n    if i<amin:\n        k+=1\n        amin=i\nprint(k)"
        },
        {
            "language": 1,
            "solution": "n=input()\nc=map(int,raw_input().split())\ntot=0\nfor i in range(1,n):\n    more=True\n    less=True\n    for j in range(i):\n        if c[i]>=c[j]:\n            less=False\n        if c[i]<=c[j]:\n            more=False\n    if more or less:\n        tot=tot+1\nprint tot\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nresults = input().split(\" \")\n\nmaxr = int(results[0])\nminr = int(results[0])\n\nscore = 0\n\nfor r in range(0, n):\n    if int(results[r]) > int(maxr):\n        score += 1\n        maxr = results[r]\n    if int(results[r]) < int(minr):\n        score += 1\n        minr = results[r]\n\nprint(score)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nscores = [int(x) for x in input().split()]\n\namazing = 0\nlowest = highest = scores[0]\n\nfor score in scores[1:]:\n\tif score> highest:\n\t\tamazing+=1\n\t\thighest = score\n\telif score < lowest:\n\t\tamazing+=1\n\t\tlowest = score\n\nprint(amazing)\n"
        },
        {
            "language": 3,
            "solution": "input()\na=list(map(int,input().split()))\nhigh=low=a[0]\ncoolness_meter = 0\nfor score in a[1:]:\n    if score > high:\n        high = score\n        coolness_meter += 1\n    if score < low:\n        low = score\n        coolness_meter += 1\nprint(coolness_meter)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = list(map(int,input().split()))\nmn = l[0]\nmx = l[0]\nans = 0\nfor i in range(1,n):\n    if(l[i]<mn or l[i]>mx):\n        ans+=1\n    mn = min(mn,l[i])\n    mx = max(mx,l[i])\nprint(ans)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\ntab = list(map(int, input().split()))\nminimum = 1e10\nmaksimum = 0\nile = 0\nfor i in range(1, len(tab)):\n    minimum = min(tab[i-1], minimum)\n    maksimum = max(tab[i-1], maksimum)\n    if tab[i] < minimum:\n        ile += 1\n    if tab[i] > maksimum:\n        ile += 1\nprint(ile)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\narr = list(map(int, input().split()))\nans = 0\nmx = arr[0]\nmn = arr[0]\n\nfor i in range(1,n):\n    if arr[i]>mx or arr[i]<mn:\n        ans += 1\n    if arr[i]>mx:\n        mx= arr[i]\n    elif arr[i]<mn:\n        mn = arr[i]\nprint(ans)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[int(i) for i in input().split()]\nmax_score=a[0]\nmin_score=a[0]\nnumber=0\nfor i in range(1,n):\n    if a[i]>max_score:\n        number+=1\n        max_score=a[i]\n    if a[i]<min_score:\n        number+=1\n        min_score=a[i]\nprint(number)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\na=[]\ncount=0\na.append(l[0])\nfor i in range (1,n):\n          if(l[i]>max(a)):\n                    count=count+1\n          elif(l[i]<min(a)):\n                    count=count+1\n          a.append(l[i])\nprint(count)"
        },
        {
            "language": 3,
            "solution": "# import sys\n# sys.stdin = open(\"test.in\",\"r\")\n# sys.stdout = open(\"test.out\",\"w\")\nn=int(input())\na=list(map(int,input().split()))\nb=0\nfor i in range(1,n):\n\tif a[i]>max(a[0:i]) or a[i]<min(a[0:i]):\n\t\tb+=1\nprint(b)\t\t"
        },
        {
            "language": 1,
            "solution": "n=input()\nk=raw_input()\ndelimiter=' '\nk=k.split(delimiter)\nl=[]\nfor h in k:\n    l.append(int(h))\n#print l\n    \nc1=0\n#c2=0\ns=l[0]\nll=l[0]\nfor i in range(1,n):\n    if l[i]>ll:\n        c1+=1\n        ll=l[i]\n    elif s>l[i]:\n        c1+=1\n        s=l[i]\n    \n    \nprint c1\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nscore = [int(k) for k in input().split()]\nhighest = score[0]\nlowest = score[0]\namazing = 0\nfor i in range(1,n):\n    if score[i] > highest:\n        amazing += 1\n        highest = score[i]\n    elif score[i] < lowest:\n        amazing += 1\n        lowest = score[i]\nprint(amazing)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, k, sum = 0, i = 0, maxi, mini;\n  long long x[10000];\n  cin >> n;\n  k = n;\n  while (k--) cin >> x[i++];\n  maxi = x[0];\n  mini = x[0];\n  i = 1;\n  while (i < n) {\n    if (x[i] > maxi) {\n      maxi = x[i];\n      sum++;\n    } else if (x[i] < mini) {\n      mini = x[i];\n      sum++;\n    }\n    i++;\n  }\n  cout << sum << endl;\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\narr = list(map(int, input().split()))\namazing = 0\nmaxscore = arr[0]\nminscore = arr[0]\nfor i in range(1, n):\n    if arr[i] > maxscore:\n        maxscore = arr[i]\n        amazing += 1\n    elif arr[i] < minscore:\n        minscore = arr[i]\n        amazing += 1\nprint(amazing)\n"
        },
        {
            "language": 3,
            "solution": "input()\na = list(map(int,input().split()))\n\nc = 0\nh = a[0]\nl = a[0]\nfor i in a:\n    if i > h:\n        h = i\n        c += 1\n    if i < l:\n        l = i\n        c += 1\nprint(c)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\n\nf_line = input()\nf_arr = [int(y) for y in f_line.split()]\n\nworst = f_arr[0]\nbest = f_arr[0]\ncount = 0\n\nfor i in range(1, n):\n    if f_arr[i] < worst:\n        count += 1\n        worst = f_arr[i]\n    elif f_arr[i] > best:\n        count += 1\n        best = f_arr[i]\n    else:\n        pass\nprint(count)\n"
        },
        {
            "language": 3,
            "solution": "def main():\n    x = input()\n    y = input().split()\n    maxi = int(y[0])\n    mini = int(y[0])\n    amazing = 0\n    for i in y:\n        score = int(i)\n        if score > maxi:\n            maxi = score\n            amazing += 1\n        elif score < mini:\n            mini = score\n            amazing += 1\n        else:\n            pass\n    print(amazing)\n\n\nif __name__ == '__main__':main()"
        },
        {
            "language": 3,
            "solution": "n = int ( input ( ))\na=list(map(int,input().split()))\nq=0\nfor i in range(1,n):\n    if ((a[i]>max(a[:i])) or (a[i]<min(a[:i]))):\n        q+=1\nprint(q)\n"
        },
        {
            "language": 3,
            "solution": "import math\nn=int(input())\nc=0;\nl=list(map(int,input().strip().split(\" \")))\nmx=l[0]\nmn=l[0]\nfor i in range(1,n,1):\n    if l[i]>mx:\n        mx=l[i]\n        c+=1\n    elif l[i]<mn:\n        mn=l[i]\n        c+=1\nprint(c)    \n"
        },
        {
            "language": 1,
            "solution": "n = input()\na = map(int, raw_input().split())\nresult = 0\nfor i in xrange(1, n):\n    if a[i] > max(a[:i]) or a[i] < min(a[:i]):\n        result += 1\nprint result"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = [int(x) for x in input().split()]\nma = a[0]\nmi = a[0]\nc = 0\nfor i in range(1,len(a)):\n    if a[i] < mi:\n        mi = a[i]\n        c = c + 1\n    elif a[i] > ma:\n        ma = a[i]\n        c = c + 1\n    else:\n        c = c\nprint(c)\n"
        },
        {
            "language": 3,
            "solution": "# https://codeforces.com/problemset/problem/155/A\n\n\nn = int(input())\n\nscores = tuple(map(int, input().split()))\n\nans = 0\n\nmin_value, max_value = scores[0], scores[0]\nif n == 1:\n    print(0)\nelse:\n    for i in range(1, n):\n        if scores[i] > max_value:\n            max_value = scores[i]\n            ans += 1\n        elif scores[i] < min_value:\n            min_value = scores[i]\n            ans += 1\n    print(ans)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nnumbers = list(map(int, input().split()))\nmin_v = numbers[0]\nmax_v = numbers[0]\ncount = 0\n\nfor i in range(1, n):\n    if numbers[i] < min_v:\n        min_v = numbers[i]\n        count += 1\n    if numbers[i] > max_v:\n        max_v = numbers[i]\n        count += 1\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nt = [int(x) for x in input().split()]\nk = 0\nl = t[0]\nm = t[0]\nfor i in range(1,n):\n    if t[i] > l:\n        k += 1\n        l = t[i]\n    elif t[i] < m:\n        k += 1\n        m = t[i]\n\nprint(k)"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\na = map(int, raw_input().split())\n\nmx = a[0]\nmi = a[0]\n\nn = 0\n\nfor i in a[1:]:\n    if i < mi:\n        n += 1\n        mi = i\n    if i > mx:\n        n += 1\n        mx = i\n\nprint n\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = input().split()\nm = 0\nfor i in range(n):\n    a[i] = int(a[i])\nb = [a[0],a[0]]\nfor i in range(1,n):\n    if a[i] < b[0]:\n        b[0] = a[i]\n        m += 1\n    if a[i] > b[1]:\n        b[1] = a[i]\n        m += 1\nprint(m)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\ncontests = list(map(int,input().split()))\nmaxx = contests[0]\nminn = contests[0]\namazing = 0\nfor i in range(n):\n\tif contests[i] > maxx:\n\t\tamazing += 1\n\t\tmaxx = contests[i]\n\telif contests[i] < minn:\n\t\tamazing += 1\n\t\tminn = contests[i]\n\nprint(amazing)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().split()))\nc=0\nfor i in range(1,n):\n    if a[i]> max(a[0:i]) or a[i]< min(a[0:i]):\n        c=c+1\nprint(c)\n    "
        },
        {
            "language": 3,
            "solution": "input()\n\nmax_s = -1\nmin_s = 10001\ncounter = -2\nfor n in map(int, input().split()):\n    if n > max_s:\n        max_s = n\n        counter += 1\n    if n < min_s:\n        min_s = n\n        counter += 1\n\nprint(counter)\n"
        },
        {
            "language": 3,
            "solution": "x=int(input())\na=list(map(int,input().split()))\nmaxi=a[0]\nmini=a[0]\nc=0\nfor i in a:\n    if i > maxi:\n        maxi=i\n        c+=1\n    elif i<mini:\n        mini=i\n        c+=1\nprint(c)"
        },
        {
            "language": 3,
            "solution": "# Sourav Basak Shuvo  //  KUET BME'18\n\nn = int(input())\nx = [int(i) for i in input().split()]\nmin_n = max_n = x[0]\nk = 0\nfor i in range(1, len(x)):\n    if x[i] > max_n:\n        k += 1\n        max_n = x[i]\n    if x[i] < min_n:\n        k += 1\n        min_n = x[i]\nprint(k)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nx = [int(i) for i in input().split()]\nmini = x[0]\nmaxi = x[0]\nc = 0\nfor i in range(1, len(x)):\n    if(mini>x[i]):\n        c+=1\n        mini = x[i]\n    if(maxi<x[i]):\n        c+=1\n        maxi = x[i]\nprint(c)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nx=[int(x) for x in input().split()]\ncount=0\nm=x[0]\nl=x[0]\nfor i in range(1,n):\n    if x[i]>m:\n        count+=1\n        m=x[i]\n    elif x[i]<l:\n        count+=1 \n        l=x[i]\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nscores = [int(x) for x in input().split()]\ncount = 0\n\nfor x in range(len(scores)):\n    if (all(y > scores[x] for y in scores[0:x]) or all(y < scores[x] for y in scores[0:x])) and len(scores[0:x]) != 0:\n        count += 1\n        \nprint(count)"
        },
        {
            "language": 1,
            "solution": "import sys\n\nn = int(sys.stdin.readline())\nmark = [int(x) for x in sys.stdin.readline().split()]\nmaxmark = mark[0]\nminmark = mark[0]\ni = 1\ncount = 0\n\nfor i in range(n):\n    if mark[i]>maxmark:\n        maxmark = mark[i]\n        count +=1\n    elif mark[i]<minmark:\n        minmark = mark[i]\n        count +=1\n\nprint count\n"
        },
        {
            "language": 1,
            "solution": "def retrieve_data():\n    n = int(raw_input())\n    data = [int(x) for x in raw_input().split()]\n    return (n,data)\n\ndef ilu(data):\n    n = data[0]\n    ilu = data[1]\n    min,max = data[1][0],data[1][0]\n    amazing = 0\n    for index in xrange(1,len(ilu)):\n        if ilu[index] < min:\n            amazing += 1\n            min = ilu[index]\n        elif ilu[index] > max:\n            amazing += 1\n            max = ilu[index]\n    return amazing\n\ndef main():\n    data = retrieve_data()\n    print ilu(data)\n\nif __name__ == '__main__':\n    main()"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class C_155A {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tint [] mas = new int[n+1];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tmas[i] = sc.nextInt();\n\t\t}\n\t\tint max = mas[0], min = mas[0], soni = 0;\n\t\tfor (int i = 1; i < n; i++) {\n\t\t\tif (max < mas[i]) {\n\t\t\t\tsoni++; max = mas[i]; \n\t\t\t}\n\t\t\tif (min > mas[i]) {\n\t\t\t\tsoni++; min = mas[i]; \n\t\t\t}\n\t\t}\n\t\tSystem.out.println(soni);\n\t}\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\ns = list(map(int, input().split()))\ncount_of_points = 0\nbig_amazing_competition = s[0]\nsmall_amazing_competition = s[0]\n\nfor i in s:\n    if i > big_amazing_competition:\n        big_amazing_competition = i\n        count_of_points += 1\n    if i < small_amazing_competition:\n        small_amazing_competition = i\n        count_of_points += 1\nprint(count_of_points)\n\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class I_love_username {\n\n\tpublic static void main(String[] args) {\n\t\tScanner sk = new Scanner(System.in);\n\t\tint n = sk.nextInt();\n\t\tint counter = 0;\n\t\tint[] arr = new int[n];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tarr[i] = sk.nextInt();\n\t\t}\n\t\tsk.close();\n\t\tfor (int i = 1; i < n; i++) {\n\t\t\tboolean t = true;\n\t\t\tboolean increasing = arr[i]>arr[0];\n\t\t\tfor (int j = 0; j < i; j++) {\n\t\t\t\tif (increasing && arr[i] <= arr[j]) t = false;\n\t\t\t\telse if (!increasing && arr[i] >= arr[j]) t= false;\n\t\t\t}\n\t\t\tif (t) counter++;\n\t\t}\n\t\tSystem.out.println(counter);\n\t}\n\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\ncontest = input().split()\ncontest = [int(i) for i in contest]\n\nj = 1\ncount = 0\n\nwhile j < len(contest):\n    if contest[j] > max(contest[0:j]) or contest[j] < min(contest[0:j]):\n        count +=1\n        j += 1\n    else:\n        j += 1\n        \nprint(count)"
        },
        {
            "language": 3,
            "solution": "import sys\n\nit = iter(sys.stdin.read().splitlines())\n\nn = int(next(it))\n\nresults = [int(x) for x in next(it).split(\" \")]\n\nbest = results.pop(0)\nworst = best\ncounter = 0\nfor result in results:\n    if result > best:\n        best = result\n        counter += 1\n    if result < worst:\n        worst = result\n        counter += 1\n\nprint(counter)\n"
        },
        {
            "language": 3,
            "solution": "def main():\n    n_contests = int(input())\n    scores = [int(_) for _ in input().split()]\n    min_score = max_score = scores[0]\n    amazing_count = 0\n\n    for i in range(1, n_contests):\n        if scores[i] < min_score:\n            min_score = scores[i]\n            amazing_count += 1\n        elif scores[i] > max_score:\n            max_score = scores[i]\n            amazing_count += 1\n\n    print(amazing_count)\n\n\nif __name__ == '__main__':\n    main()\n"
        },
        {
            "language": 3,
            "solution": "n = input()\na = [int(x) for x in input().split()]\nmin = a[0]\nmax = a[0]\nc = 0\nfor i in a :\n    if i > max:\n        max = i\n        c = c +1\n    if i < min:\n        min = i\n        c = c +1\nprint(c)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nline =[int(x) for x in input().split()]\nbig = line[0]\nsmall = line[0]\ncount=0\nfor i in range(1,n):\n    if line[i] > big:\n        count+=1\n        big = line[i]\n    if line[i] < small:\n        count+=1\n        small = line[i]\nprint(count)"
        },
        {
            "language": 3,
            "solution": "a=int(input())\nb=input()\nc=b.split()\ni=1\nmin=int(c[0])\nmax=int(c[0])\namazing=0\nwhile i<a:\n    if int(c[i])>max:\n        amazing+=1\n        max=int(c[i])\n    elif int(c[i])<min:\n        amazing+=1\n        min=int(c[i])\n    i+=1\nprint(amazing)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[int(i) for i in input().split()]\nmaxm=a[0]\nminm=a[0]\nans=0\nfor i in a:\n    if(i>maxm):\n        ans+=1\n        maxm=i\n    elif(i<minm):\n        ans+=1\n        minm=i\nprint(ans)\n\n\n\n\n\n\n\n\n\n    \n\n\n        \n\n"
        },
        {
            "language": 1,
            "solution": "#!/usr/bin/python2.7\nn = input()\na = map(int, raw_input().split())\nx, y, z = a[0], a[0], 0\nfor i in range(1, n):\n\tif a[i] < x:\n\t\tz += 1\n\t\tx = a[i]\n\telif a[i] > y:\n\t\tz += 1\n\t\ty = a[i]\nprint z\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int,input().strip().split()))\nmini=a[0]\nmaxi=a[0]\nc=0\nfor i in range(1,n):\n    if a[i]>maxi:\n        maxi=a[i]\n        c+=1\n    elif a[i]<mini:\n        mini=a[i]\n        c+=1\nprint(c)\n        \n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nscores = list(map(int, input().split()))\n\nbest = scores[0]\nworst = scores[0]\n\namazing = 0\nfor i in range(1, n):\n    if(scores[i] > best):\n        amazing += 1\n        best = scores[i]\n    elif(scores[i] < worst):\n        amazing += 1\n        worst = scores[i]\n\nprint(amazing)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nmax=l[0]\nmin=l[0]\nm=0\nfor i in range(1,n):\n    if l[i]>max:\n        m=m+1\n        max=l[i]\n    elif l[i]<min:\n        m=m+1\n        min=l[i]\nprint(m)\n    "
        },
        {
            "language": 3,
            "solution": "n = int(input())\n#n, m = map(int, input().split())\n#s = input()\nl = 0\nc = list(map(int, input().split()))\nm = c[0]\nk = c[0]\nfor i in range(1, n):\n    if c[i] > m:\n        l += 1\n        m = c[i]\n    elif c[i] < k:\n        l += 1\n        k = c[i]\nprint(l)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nx = [int(i) for i in input().split()]\nmax = x[0]\nmin = x[0]\nz = 0\nfor i in x:\n    if i > max:\n        max = i\n        z += 1\n    elif i < min:\n        min = i\n        z += 1\nprint(z)"
        },
        {
            "language": 1,
            "solution": "n = input()\na = map(int,raw_input().split())\nworst = best = a[0]\nres = 0\nfor i in range(1,n):\n\tif a[i] < worst:\n\t\tres += 1\n\t\tworst = a[i]\n\telif a[i] > best:\n\t\tres += 1\n\t\tbest = a[i]\nprint res"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nperformance = list(map(int, input().split()))\nmin_res = performance[0]\nmax_res = performance[0]\nwonders = 0\nfor i in range(1, n):\n    if performance[i] > max_res:\n        max_res = performance[i]\n        wonders += 1\n    elif performance[i] < min_res:\n        min_res = performance[i]\n        wonders += 1\nprint(wonders)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\narr = list(map(int,input().split()[:n]))\nmin = 0\nmax = 0\nc = 0\nfor i in range(1,n):\n    if arr[min] < arr[i]:\n        min = i\n        c += 1\n    if arr[max] > arr[i]:\n        max = i\n        c += 1\nprint(c)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  int arr[n];\n  for (int i = 0; i < n; i++) cin >> arr[i];\n  int ans = 0, maxm = arr[0], minm = arr[0];\n  for (int i = 1; i < n; i++) {\n    if (arr[i] > maxm) {\n      maxm = arr[i];\n      ans++;\n    }\n    if (arr[i] < minm) {\n      minm = arr[i];\n      ans++;\n    }\n  }\n  cout << ans << endl;\n}\n"
        },
        {
            "language": 3,
            "solution": "def main(n, scores):\n    min_score = scores[0]\n    max_score = scores[0]\n    amaz_perf = 0\n\n    for i in range(1, n):\n        if scores[i] < min_score:\n            min_score = scores[i]\n            amaz_perf += 1\n\n        if scores[i] > max_score:\n            max_score = scores[i]\n            amaz_perf += 1\n\n    return amaz_perf\n\n\nif __name__ == \"__main__\":\n    n = int(input().strip())\n    scores = list(map(int, input().strip().split()))\n    print(main(n, scores))\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\npoints=list(map(int,input().split()))\na,b,c=points[0],points[0],0\nfor i in range(1,n):\n    if points[i]>a or points[i]<b:\n        c+=1\n        if points[i]>a:\n            a=points[i]\n        else:\n            b=points[i]\n    else:\n        continue\nprint(c)\n    \n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=input().split()\nmaxx=int(a[0])\nminn=int(a[0])\ncount=0\nfor i in range(1,n):\n    if int(a[i])<minn:\n        count=count+1\n        minn=int(a[i])\n    elif int(a[i])>maxx:\n        count=count+1\n        maxx=int(a[i])      \nprint(count)\n\n        \n"
        },
        {
            "language": 3,
            "solution": "n=input()\nl=input().split()\nans=0\nbest=int(l[0])\nworst=int(l[0])\nfor i in range(1,len(l)):\n\tif(int(l[i])>best):\n\t\tans+=1\n\t\tbest=int(l[i])\n\tif(int(l[i])<worst):\n\t\tans+=1\n\t\tworst=int(l[i])\nprint(ans)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\ncount=0\nmin=l[0]\nmax=l[0]\nfor i in range(n):\n    if l[i]>max:\n        max=l[i]\n        count+=1\n    if l[i]<min:\n        min=l[i]\n        count+=1\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\narr = [int(x) for x in input().split()]\ncount = 0\nmax = arr[0]\nmin = arr[0]\n\nfor i in range(1, n):\n    if arr[i] > max:\n        max = arr[i]\n        count += 1\n    if arr[i] < min:\n        min = arr[i]\n        count += 1\n\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\n\nres=0\n\nfor i in range (1,n,1):\n    k=m=0\n    for j in range(0,i,1):\n        if l[i]>l[j]:\n            k=k+1\n        if l[i]<l[j]:\n            m=m+1\n    if k==i or m==i:\n        res=res+1\n    \nif res==0:\n    print(0)\nelse:\n    print(res)\n"
        },
        {
            "language": 1,
            "solution": "#Codeforces Problem 155A\n#http://codeforces.com/problemset/problem/155/A\n\nraw_input()\ngames=raw_input().split()\ngames=[int(x) for x in games]\n\namaze=0\n\nfor a in range(1,len(games)):\n    if games[a]>max(games[:a]) or games[a]<min(games[:a]):\n        amaze+=1\n\nprint(amaze)\n"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\nscores = map(int, raw_input().split())\n\ncurr_min = scores[0]\ncurr_max = scores[0]\n\nresult = 0\nfor i in range(1, n):\n    if scores[i] < curr_min:\n        result += 1\n        curr_min = scores[i]\n\n    if scores[i] > curr_max:\n        result += 1\n        curr_max = scores[i]\n\nprint result\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split(' ')))\ncount = 0\nmn = mx = a[0]\nfor i in range(1, n):\n    if a[i] > mx:\n        count += 1\n        mx = a[i]\n    elif a[i] < mn:\n        count += 1\n        mn = a[i]\n    else:\n        pass\nprint(count)    "
        },
        {
            "language": 3,
            "solution": "n=int(input())\narr=[int(x) for x in input().split()] \n\n\nmx,mn,c=0,0,0\n\nmx=arr[0]\nmn=arr[0]\n\nfor i in range(n):\n\tif arr[i]>mx:\n\t\tmx=arr[i]\n\t\tc+=1\n\telif arr[i]<mn:\n\t\tc+=1\n\t\tmn=arr[i]\n\nprint(c)\n\n#MADAF SUM IS POORELY WORDED "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  vector<int> ratings(n);\n  for (int i = 0; i < n; i++) cin >> ratings[i];\n  int w = ratings[0], b = ratings[0], count = 0;\n  for (int i = 1; i < n; i++) {\n    if (ratings[i] > b) {\n      b = ratings[i];\n      count++;\n    } else if (ratings[i] < w) {\n      w = ratings[i];\n      count++;\n    }\n  }\n  cout << count;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\ns=input().split(\" \")\na=[0]*n\nfor i in range(n):\n    a[i]=int(s[i])\nmx=a[0]\nmn=a[0]\namazing=0\nfor i in range(1,n):\n    if a[i]>mx:\n        mx=a[i]\n        amazing+=1\n    elif a[i]<mn:\n        mn=a[i]\n        amazing+=1\nprint(amazing)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\namazing=0\nlist=list(map(int,input().strip().split()))[0:n]\na=list[0]\nb=list[0]\nfor i in range (1,n):\n    if list[i]<b:\n        b=list[i]\n        amazing=amazing+1\n    if list[i]>a:\n        a=list[i]\n        amazing=amazing+1\n\nprint(amazing)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\n\nmas = [int(s) for s in input().split()]\n\ncounter = 0\n\nmaxim = minim = mas[0]\nfor i in range(1, len(mas)):\n    if mas[i] > maxim:\n        counter += 1\n        maxim = mas[i]\n    if mas[i] < minim:\n        counter += 1\n        minim = mas[i]\n\nprint(counter)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nnums = list(map(int, input().split()))\ncount = 0\n\nfor i in range(1, n):\n    j = 0\n    greater = False\n    smaller = False\n    fail = False\n    while j < i:\n        if nums[j] >= nums[i]:\n            if smaller:\n                fail = True\n                break\n            else:\n                greater = True\n        if nums[j] <= nums[i]:\n            if greater:\n                fail = True\n                break\n            else: \n                smaller = True\n        j += 1\n    if not fail:\n        count += 1\nprint(count)\n"
        },
        {
            "language": 3,
            "solution": "input();x=0\nl=list(map(int,input().split()))\n\na=max(l[0:2])\nb=min(l[0:2])\nif a!=b:\n    x+=1\nfor i in range(2,len(l)):\n    if l[i]>a :\n            x+=1\n            a=l[i]\n    if l[i]<b:\n            x+=1\n            b=l[i]\nprint(x)\n"
        },
        {
            "language": 3,
            "solution": "n,arr = int(input()),list(map(int,input().split(' ')))\nprint(sum(not min(arr[:i])<=arr[i]<=max(arr[:i]) for i in range(1,n)))"
        },
        {
            "language": 3,
            "solution": "n = int(input())\ns = input().split()\ns = [int(x) for x in s]\nif n==2 and s[0]==s[1]:\n    print(0)\nelif n<=2:\n    print(n-1)\nelse:\n    M = max(s[0],s[1])\n    N = min(s[0],s[1])\n    if M == N:\n        total = 0\n    else:\n        total = 1\n    for i in range(2,n):\n        if s[i] > M:\n            M = s[i]\n            total +=1\n        elif s[i] < N:\n            N = s[i]\n            total +=1\n    print(total)\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=[int(x) for x in input().split()]\nda=a[0]\nxiao=a[0]\nnum=0\nfor i in range(1,n):\n    if a[i]>da:\n        num+=1\n        da=a[i]\n    elif a[i]<xiao:\n        num+=1\n        xiao=a[i]\nprint(num)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na, counter = [int(i) for i in input().split()], 0\nfor i in range(1, n):\n    counter += a[i] < min(a[:i]) or a[i] > max(a[:i])\nprint(counter)\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class Main {\n    public static void main (String[] args) {\n        Scanner s = new Scanner(System.in);\n\n        int n = s.nextInt();\n        int[] c = new int[n];\n        c[0] = s.nextInt();\n        int low = c[0], high = c[0], count = 0;\n\n        for (int i = 1; i < n; i++) {\n            c[i] = s.nextInt();\n\n            if (c[i] < low) {\n                count++;\n                low = c[i];\n            } else if (c[i] > high) {\n                count++;\n                high = c[i];\n            }\n        }\n\n        System.out.println(count);\n\n\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvector<int> x;\nint main() {\n  int m, l;\n  cin >> m;\n  for (int i = 0; i < m; i++) {\n    cin >> l;\n    x.push_back(l);\n  }\n  int big = x[0], small = x[0], c = 0;\n  for (int i = 0; i < m; i++) {\n    if (x[i] > big) {\n      c++;\n      big = x[i];\n    } else if (x[i] < small) {\n      c++;\n      small = x[i];\n    }\n  }\n  cout << c;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint main(void) {\n  int n, best, worst, current, answ = 0;\n  scanf(\"%d\", &n);\n  scanf(\"%d\", &current);\n  best = worst = current;\n  for (n--; n--;) {\n    scanf(\"%d\", &current);\n    if (current < worst) {\n      worst = current;\n      answ++;\n    }\n    if (current > best) {\n      best = current;\n      answ++;\n    }\n  }\n  printf(\"%d\\n\", answ);\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.Scanner;\n\npublic class c {\n\n\t/**\n\t * @param args\n\t */\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tint maxx=sc.nextInt();\n\t\tint minn = maxx;\n\t\tint ans=0;\n\t\tfor (int i=1;i<n;i++)\n\t\t{\n\t\t\tint x = sc.nextInt();\n\t\t\tif (x>maxx){ans++;maxx=x;}\n\t\t\telse if (x<minn){ans++;minn=x;}\n\t\t\t\n\t\t}\n\t\tSystem.out.println(ans);\n\t\t\t\n\t}\n\n}\n\n\t\t   \t\t\t \t\t\t     \t\t\t  \t \t"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nmax = l[0]\nmin = l[0]\nc=0\nfor i in l:\n    if(i>max):\n        c+=1\n        max=i\n    elif(i<min):\n        c+=1\n        min=i\nprint(c)"
        },
        {
            "language": 3,
            "solution": "n=int(input())\ncount=0\na=[int(i) for i in input().split()]\nfor i in range(1,n):\n    m=max(a[0:i])\n    m_=min(a[0:i])\n    if (a[i]>m) or (a[i]<m_):\n        count+=1\nprint(count)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\npoints = input().split()\nlist1 = [int(points[0])]\nans = 0\nfor i in range(1,n):\n    x = points[i]\n    y = max(list1)\n    z = min(list1)\n    if int(points[i]) > int(max(list1)) or int(points[i]) < int(min(list1)):\n        ans += 1\n    list1.append(int(points[i]))\nprint(ans)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int,input().strip().split()))[:n]\nmaxNum = a[0]\nminNum = a[0]\ncount = 0\nfor i in range(n):\n    if a[i] > maxNum or a[i] < minNum:\n        count += 1\n        if a[i] > maxNum:\n            maxNum = a[i]\n        elif a[i] < minNum:\n            minNum = a[i]\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\narr = input().split()\nminimal, maximum = int(arr[0]), int(arr[0])\ncnt = 0\nfor i in range(1, n):\n\tif int(arr[i]) > maximum:\n\t\tcnt += 1\n\t\tmaximum = int(arr[i])\n\telif int(arr[i]) < minimal:\n\t\tcnt += 1\n\t\tminimal = int(arr[i])\nprint(cnt)"
        },
        {
            "language": 3,
            "solution": "import sys\nimport os\nfrom io import IOBase, BytesIO\n# import heapq\nimport math\n# import collections\n# import itertools\n# import bisect\nmod = 10 ** 9 + 7\npie = 3.1415926536\n# import resource\n# resource.setrlimit(resource.RLIMIT_STACK, [0x100000000, resource.RLIM_INFINITY])\n# import threading\n# threading.stack_size(2**27)\n# import sys\n# sys.setrecursionlimit(10**6)\n# fact=[1]\n# for i in range(1,1000001):\n#    fact.append((fact[-1]*i)%mod)\n# ifact=[0]*1000001\n# ifact[1000000]=pow(fact[1000000],mod-2,mod)\n# for i in range(1000000,0,-1):\n#    ifact[i-1]=(i*ifact[i])%mod\n# from random import randint as rn\n# from Queue import Queue as Q\n\n\ndef modinv(n, p):\n    return pow(n, p-2, p)\n\n\ndef ncr(n, r, p):  # for using this uncomment the lines calculating fact and ifact\n    t = ((fact[n])*((ifact[r]*ifact[n-r]) % p)) % p\n    return t\n\n\ndef ain():  # takes array as input\n    return list(map(int, sin().split()))\n\n\ndef sin():\n    return input().strip()\n\n\ndef GCD(x, y):\n    while(y):\n        x, y = y, x % y\n    return x\n\n\ndef read2DIntArray(row, col):\n    arr = []\n    for i in range(0, row):\n        temp = list(map(int, sin().split()))\n        arr.append(temp)\n\n    return arr\n\n\ndef read2DCharArray(row, col):\n    arr = []\n    for i in range(0, row):\n        temp = str(sin())\n        arr.append(temp)\n\n    return arr\n\n\n\"\"\"****************** SMALLEST NO. BY REARRANGING DIGITS OF n (WITHOUT TRAILING ZEROS) *********************\"\"\"\n\n\ndef smallestNumber(n):\n    lst = list(str(n))\n    lst.sort()\n\n    tmp = \"\"\n    for i, n in enumerate(lst):\n        if (n != '0'):\n            tmp = lst.pop(i)\n            break\n\n    return str(tmp) + ''.join(lst)\n\n\n\"\"\"*********************** GENERATE ALL PRIME NUMBERS SMALLER THAN OR EQUAL TO n ***************************\"\"\"\n\n\ndef SieveOfEratosthenes(n):\n\n    prime = [True for i in range(n + 1)]\n    p = 2\n    while (p * p <= n):\n\n        if (prime[p] == True):\n            for i in range(p * 2, n + 1, p):\n                prime[i] = False\n\n        p += 1\n    prime[0] = False\n    prime[1] = False\n\n    lst = []\n    for p in range(n + 1):\n        if prime[p]:\n            lst.append(p)\n\n    return lst\n\n\n\"\"\"*************************************** FIND nCr ********************************************************\"\"\"\n\n\ndef nCr(n, r):\n    a = 1\n    b = 1\n    c = 1\n    for i in range(1, n + 1):\n        c *= i\n    for i in range(1, r + 1):\n        b *= i\n    for i in range(1, n - r + 1):\n        a *= i\n\n    return (c // (a * b))\n\n\n\"\"\"************************* GET PRIME FACTORS AND THEIR POWERS FOR AN INTEGER *****************************\"\"\"\n\n\ndef sieveOfEratosthenes1(N, s):\n\n    prime = [False] * (N+1)\n\n    for i in range(2, N+1, 2):\n        s[i] = 2\n\n    for i in range(3, N+1, 2):\n        if (prime[i] == False):\n\n            s[i] = i\n\n            for j in range(i, int(N / i) + 1, 2):\n                if (prime[i*j] == False):\n                    prime[i*j] = True\n\n                    s[i * j] = i\n\n\ndef generatePrimeFactors(N):\n\n    s = [0] * (N+1)\n\n    sieveOfEratosthenes1(N, s)\n\n    # print(\"Factor Power\")\n\n    curr = s[N]\n\n    cnt = 1\n\n    factors = []\n    power = []\n    while (N > 1):\n        N //= s[N]\n\n        if (curr == s[N]):\n            cnt += 1\n            continue\n\n        # curr is factor and cnt in the power of this factor\n        factors.append(curr)\n        power.append(cnt)\n\n        curr = s[N]\n        cnt = 1\n\n    return factors, power\n\n\n\"\"\"----------------------------------------------MAIN------------------------------------------------------\"\"\"\n\n\ndef main():\n    maxnum = -1\n    minnum = 10001\n    ans = 0\n    n = int(sin())\n    arr = ain()\n\n    for i in range(n):\n        num = arr[i]\n\n        if i > 0:\n            if num > maxnum or num < minnum:\n                ans += 1\n\n        maxnum = max(num, maxnum)\n        minnum = min(num, minnum)\n\n    print(ans)\n\n\n\"\"\"--------------------------------------------------------------------------------------------------------\"\"\"\n\n# Python 2 and 3 footer by Pajenegod and c1729\npy2 = round(0.5)\nif py2:\n    from future_builtins import ascii, filter, hex, map, oct, zip\n    range = xrange\n\n\nBUFSIZE = 8192\n\n\nclass FastIO(BytesIO):\n    newlines = 0\n\n    def __init__(self, file):\n        self._file = file\n        self._fd = file.fileno()\n        self.writable = \"x\" in file.mode or \"w\" in file.mode\n        self.write = super(FastIO, self).write if self.writable else None\n\n    def _fill(self):\n        s = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n        self.seek((self.tell(), self.seek(0, 2),\n                   super(FastIO, self).write(s))[0])\n        return s\n\n    def read(self):\n        while self._fill():\n            pass\n        return super(FastIO, self).read()\n\n    def readline(self):\n        while self.newlines == 0:\n            s = self._fill()\n            self.newlines = s.count(b\"\\n\") + (not s)\n        self.newlines -= 1\n        return super(FastIO, self).readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.getvalue())\n            self.truncate(0), self.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        if py2:\n            self.write = self.buffer.write\n            self.read = self.buffer.read\n            self.readline = self.buffer.readline\n        else:\n            self.write = lambda s: self.buffer.write(s.encode('ascii'))\n            self.read = lambda: self.buffer.read().decode('ascii')\n            self.readline = lambda: self.buffer.readline().decode('ascii')\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\n\n\ndef input(): return sys.stdin.readline().rstrip('\\r\\n')\n\n\nif __name__ == '__main__':\n    main()\n# threading.Thread(target=main).start()\n"
        },
        {
            "language": 3,
            "solution": "hm = int(input())\nnumbers = input().split(\" \")\nlis = []\namazing = 0\nflag = 0\nfor i in range(hm):\n    if(hm == 1):\n        flag = 1\n        print(0)\n        break\n    if (i == 0):\n        numbers[i] = int(numbers[i])\n        lis.append(numbers[i])\n        continue\n    numbers[i] = int(numbers[i])\n    if numbers[i] > max(lis):\n        amazing += 1\n    if numbers[i] < min(lis):\n        amazing += 1\n    lis.append(numbers[i])\n\nif flag == 0:\n    print(amazing)\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\npoints = list(map(int, input().split(' ')))\n\nmaxi = points[0]\nless = points[0]\n\ncount = 0\n\nfor p in points:\n\tif p > maxi:\n\t\tmaxi = p \n\t\tcount += 1\n\telif p < less:\n\t\tless = p\n\t\tcount += 1\n\nprint(count)"
        },
        {
            "language": 3,
            "solution": "#!/usr/bin/env python\n# coding: utf-8\n\n# In[204]:\n\n\n# # n = int(input())\n# # line = list(map(int, input().split()))\n\n\n# In[480]:\n\n\nn = int(input())\nnum_list = list(map(int, input().split()))\n\n\n# In[483]:\n\n\nrecords = [num_list[0], num_list[0]]\ncount = 0\n\nfor i in num_list[1:]:\n    if i < records[0]:\n        count += 1\n        records[0] = i\n    elif i > records[1]:\n        count += 1\n        records[1] = i\n\n\n# In[484]:\n\n\nprint(count)\n\n\n# In[ ]:\n\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\na=list(map(int, input().strip().split(' ')))\nans=0\nmin=a[0]\nmax=a[0]\nfor i in a[1:]:\n    if(i<min):\n        min=i\n        ans+=1\n    elif(i>max):\n        max=i\n        ans+=1\n\nprint (ans)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, point, count = 0;\n  cin >> n;\n  cin >> point;\n  int min = point, max = point;\n  for (int i = 1; i < n; i++) {\n    cin >> point;\n    if (point > max) {\n      max = point;\n      count++;\n    } else if (point < min) {\n      min = point;\n      count++;\n    }\n  }\n  cout << count;\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "__author__ = 'hareesh'\na,b = int(raw_input()),map(int, raw_input().split())\nmin = maxi = b[0];count = 0\nfor i in range(1,a):\n    if min > b[i]:\n        min = b[i]\n        count += 1\n    elif maxi < b[i]:\n        maxi = b[i]\n        count +=1\nprint count"
        },
        {
            "language": 1,
            "solution": "import itertools\nfrom fractions import gcd\nfrom math import sqrt\nfrom bisect import bisect_left\nimport heapq\nfrom collections import deque , defaultdict,Counter\nfrom itertools import combinations as C\ndef Ls():\n\treturn list(raw_input())\ndef get(a):\n\treturn map(a , raw_input().split())\ndef Int():\n\treturn int(raw_input())\ndef Str():\n\treturn raw_input()\nn = input()\nh = get(int)\nans = 0\nmx_ = h[0]\nmn_ = h[0]\n\nfor i in xrange(n):\n\tif h[i] > mx_:\n\t\tans += 1\n\t\tmx_ = h[i]\n\tif h[i] < mn_:\n\t\tans += 1\n\t\tmn_ = h[i]\nprint ans\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\narr = [int(x) for x in input().split()]\ni = 1\nmx = arr[0]\nmn = arr[0]\ncount = 0\nwhile i < n:\n    if arr[i] < mn:\n        mn = arr[i]\n        count += 1\n    if arr[i] > mx:\n        mx = arr[i]\n        count += 1\n    i += 1\nprint(count)"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nmini = 10**6\nmaxi = -1\ntt = 0\nfor indice, i in enumerate(map(int, input().split())):\n    if indice:\n        if i < mini or i > maxi:\n            tt += 1\n    \n    mini = min(mini, i)\n    maxi = max(maxi, i)\n\n\nprint(tt)"
        }
    ]
}