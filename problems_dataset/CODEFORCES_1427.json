{
    "name": "1427_B. Chess Cheater",
    "source": "CODEFORCES",
    "description": "You like playing chess tournaments online.\n\nIn your last tournament you played n games. For the sake of this problem, each chess game is either won or lost (no draws). When you lose a game you get 0 points. When you win you get 1 or 2 points: if you have won also the previous game you get 2 points, otherwise you get 1 point. If you win the very first game of the tournament you get 1 point (since there is not a \"previous game\").\n\nThe outcomes of the n games are represented by a string s of length n: the i-th character of s is W if you have won the i-th game, while it is L if you have lost the i-th game.\n\nAfter the tournament, you notice a bug on the website that allows you to change the outcome of at most k of your games (meaning that at most k times you can change some symbol L to W, or W to L). Since your only goal is to improve your chess rating, you decide to cheat and use the bug.\n\nCompute the maximum score you can get by cheating in the optimal way.\n\nInput\n\nEach test contains multiple test cases. The first line contains an integer t (1\u2264 t \u2264 20,000) \u2014 the number of test cases. The description of the test cases follows.\n\nThe first line of each testcase contains two integers n, k (1\u2264 n\u2264 100,000, 0\u2264 k\u2264 n) \u2013 the number of games played and the number of outcomes that you can change.\n\nThe second line contains a string s of length n containing only the characters W and L. If you have won the i-th game then s_i= W, if you have lost the i-th game then s_i= L.\n\nIt is guaranteed that the sum of n over all testcases does not exceed 200,000.\n\nOutput\n\nFor each testcase, print a single integer \u2013 the maximum score you can get by cheating in the optimal way.\n\nExample\n\nInput\n\n\n8\n5 2\nWLWLL\n6 5\nLLLWWL\n7 1\nLWLWLWL\n15 5\nWWWLLLWWWLLLWWW\n40 7\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLLWLLWWWLWWL\n1 0\nL\n1 1\nL\n6 1\nWLLWLW\n\n\nOutput\n\n\n7\n11\n6\n26\n46\n0\n1\n6\n\nNote\n\nExplanation of the first testcase. Before changing any outcome, the score is 2. Indeed, you won the first game, so you got 1 point, and you won also the third, so you got another 1 point (and not 2 because you lost the second game).\n\nAn optimal way to cheat is to change the outcomes of the second and fourth game. Doing so, you end up winning the first four games (the string of the outcomes becomes WWWWL). Hence, the new score is 7=1+2+2+2: 1 point for the first game and 2 points for the second, third and fourth game.\n\nExplanation of the second testcase. Before changing any outcome, the score is 3. Indeed, you won the fourth game, so you got 1 point, and you won also the fifth game, so you got 2 more points (since you won also the previous game).\n\nAn optimal way to cheat is to change the outcomes of the first, second, third and sixth game. Doing so, you end up winning all games (the string of the outcomes becomes WWWWWW). Hence, the new score is 11 = 1+2+2+2+2+2: 1 point for the first game and 2 points for all the other games.",
    "difficulty": "B",
    "tags": [
        "greedy",
        "implementation",
        "sortings"
    ],
    "rating": 1400,
    "public_test": [
        {
            "input": "8\n5 2\nWLWLL\n6 5\nLLLWWL\n7 1\nLWLWLWL\n15 5\nWWWLLLWWWLLLWWW\n40 7\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLLWLLWWWLWWL\n1 0\nL\n1 1\nL\n6 1\nWLLWLW\n",
            "output": "7\n11\n6\n26\n46\n0\n1\n6\n"
        }
    ],
    "generated_test": [
        {
            "input": "8\n5 2\nWLWLL\n6 5\nLLLWWL\n7 2\nLWLWLWL\n15 5\nWWWLLLWWWLLLWWW\n40 7\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLLWLLWWWLWWL\n1 0\nL\n1 1\nL\n6 1\nWLLWLW\n",
            "output": "7\n11\n9\n26\n46\n0\n1\n6\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 5\nLLLWWL\n7 2\nLWLWLWL\n15 5\nWWWLLLWWWLLLWWW\n40 11\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLLWLLWWWLWWL\n1 0\nL\n1 1\nL\n6 1\nWLLWLW\n",
            "output": "7\n11\n9\n26\n56\n0\n1\n6\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 5\nLLLWWL\n7 2\nLWLWLWL\n15 5\nWWWLLLWWWLLLWWW\n40 7\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLLWLLWWWLWWL\n1 0\nL\n1 1\nL\n6 0\nWLLWLW\n",
            "output": "7\n11\n9\n26\n46\n0\n1\n3\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 5\nLLLWWL\n7 2\nLWLWLWL\n15 8\nWWWLLLWWWLLLWWW\n40 11\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLLWLLWWWLWWL\n1 0\nL\n1 1\nL\n6 1\nWLLWLW\n",
            "output": "7\n11\n9\n29\n56\n0\n1\n6\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 5\nLLLWWL\n7 2\nLWLWLWL\n15 5\nWWWLLLWWWLLLWWW\n40 11\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLLWLLWWWLWWL\n1 0\nL\n1 0\nL\n6 1\nWLLWLW\n",
            "output": "7\n11\n9\n26\n56\n0\n0\n6\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 5\nLLLWWL\n7 1\nLWLWLWL\n15 5\nWWWLLLWWWLLLWWW\n40 7\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLWWLLWWWLWLL\n1 0\nL\n1 1\nL\n6 1\nWLLWLW\n",
            "output": "7\n11\n6\n26\n46\n0\n1\n6\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 5\nLLLWWL\n7 2\nLWLWLWL\n15 8\nWWWLLLWWWLLLWWW\n40 15\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLLWLLWWWLWWL\n1 0\nL\n1 1\nL\n6 1\nWLLWLW\n",
            "output": "7\n11\n9\n29\n66\n0\n1\n6\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 5\nLLLWWL\n7 2\nLWLWLWL\n15 5\nWWWLLLWWWLLLWWW\n40 11\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLLWLLWWWLWWL\n1 0\nL\n1 0\nL\n6 0\nWLLWLW\n",
            "output": "7\n11\n9\n26\n56\n0\n0\n3\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 5\nLLLWWL\n7 0\nLWLWLWL\n15 5\nWWWLLLWWWLLLWWW\n40 11\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLLWLLWWWLWWL\n1 0\nL\n1 0\nL\n6 0\nWLLWLW\n",
            "output": "7\n11\n3\n26\n56\n0\n0\n3\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 5\nLLLWWL\n7 1\nLWLWLWL\n15 5\nWWWLLLWWWLLLWWW\n40 3\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLLWLLWWWLWWL\n1 0\nL\n1 1\nL\n6 1\nWLLWLW\n",
            "output": "7\n11\n6\n26\n35\n0\n1\n6\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 5\nLLLWWL\n7 1\nLWLWLWL\n15 5\nWWWLLLWWWLLLWWW\n40 1\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLWWLLWWWLWLL\n1 0\nL\n1 1\nL\n6 1\nWLLWLW\n",
            "output": "7\n11\n6\n26\n29\n0\n1\n6\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 5\nLLLWWL\n7 2\nLWLWLWL\n15 5\nWWWLLLWWWLLLWWW\n40 21\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLLWLLWWWLWWL\n1 0\nL\n1 0\nL\n6 0\nWLLWLW\n",
            "output": "7\n11\n9\n26\n79\n0\n0\n3\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 5\nLLLWWL\n7 0\nLWLWLWL\n15 5\nWWWLLLWWWLLLWWW\n40 11\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLLWLLWWWLWWL\n1 0\nL\n1 0\nL\n6 1\nWLLWLW\n",
            "output": "7\n11\n3\n26\n56\n0\n0\n6\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 5\nLLLWWL\n7 2\nLWLWLWL\n15 2\nWWWLLLWWLWLLWWW\n40 7\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLLWLLWWWLWWL\n1 0\nL\n1 1\nL\n6 1\nWWLLLW\n",
            "output": "7\n11\n9\n19\n46\n0\n1\n6\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 5\nLLLWWL\n7 2\nLWLWLWL\n15 5\nWWWLLLWWWLLLWWW\n40 7\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLLWLLWWWLWWL\n1 1\nL\n1 1\nL\n6 0\nWLLWLW\n",
            "output": "7\n11\n9\n26\n46\n1\n1\n3\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 0\nLLLWWL\n7 2\nLWLWLWL\n15 5\nWWWLLLWWWLLLWWW\n40 11\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLLWLLWWWLWWL\n1 0\nL\n1 0\nL\n6 1\nWLLWLW\n",
            "output": "7\n3\n9\n26\n56\n0\n0\n6\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 3\nLLLWWL\n7 1\nLWLWLWL\n15 5\nWWWLLLWWWLLLWWW\n40 7\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLWWLLWWWLWLL\n1 0\nL\n1 1\nL\n6 1\nWLLWLW\n",
            "output": "7\n9\n6\n26\n46\n0\n1\n6\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 5\nLLLWWL\n7 1\nLWLWLWL\n15 5\nWWWLLLWWWLLLWWW\n40 3\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLLWLLWWWLWWL\n1 1\nL\n1 1\nL\n6 1\nWLLWLW\n",
            "output": "7\n11\n6\n26\n35\n1\n1\n6\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 5\nLWWLLL\n7 0\nLWLWLWL\n15 5\nWWWLLLWWWLLLWWW\n40 5\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLLWLLWWWLWWL\n1 0\nL\n1 0\nL\n6 0\nWLLWLW\n",
            "output": "7\n11\n3\n26\n41\n0\n0\n3\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 9\nLLLWWL\n7 0\nLWLWLWL\n15 5\nWWWLLLWWWLLLWWW\n40 11\nLLWLWLWWWLWLLWLWWWLWLLLLLWLLLLWLWWWWLWWL\n1 0\nL\n1 0\nL\n6 0\nWLWLLW\n",
            "output": "7\n11\n3\n26\n57\n0\n0\n3\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 5\nLLLWWL\n7 0\nLWLWLWL\n15 6\nWWWLLLWWWLLLWWW\n40 11\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLLWLLWWWLWWL\n1 0\nL\n1 0\nL\n6 0\nWLLWLW\n",
            "output": "7\n11\n3\n29\n56\n0\n0\n3\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 3\nLLLWWL\n7 1\nLWLWLWL\n15 5\nWWWLLLWWWLLLWWW\n40 3\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLLWLLWWWLWWL\n1 0\nL\n1 1\nL\n6 1\nWLLWLW\n",
            "output": "7\n9\n6\n26\n35\n0\n1\n6\n"
        },
        {
            "input": "8\n5 2\nLLWLW\n6 5\nLLLWWL\n7 2\nLWLLLWW\n15 5\nWWWLLLWWWLLLWWW\n40 11\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLLWLLWWWLWWL\n1 0\nL\n1 1\nL\n6 1\nWLLWLW\n",
            "output": "7\n11\n8\n26\n56\n0\n1\n6\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 3\nLLLWWL\n7 1\nLWLWLWL\n15 5\nWWWLLLWWWLLLWWW\n40 7\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLWWLLWWWLWLL\n1 0\nL\n1 1\nL\n6 2\nWLLWLW\n",
            "output": "7\n9\n6\n26\n46\n0\n1\n8\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 3\nLLLWWL\n7 1\nWWLLLWL\n15 5\nWWWLLLWWWLLLWWW\n40 7\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLWWLLWWWLWLL\n1 0\nL\n1 0\nL\n6 1\nWLLWLW\n",
            "output": "7\n9\n6\n26\n46\n0\n0\n6\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 5\nLLLWWL\n7 1\nLWLWLWL\n15 6\nWWWLLLWWWLLLWWW\n40 11\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLLWLLWWWLWWL\n1 0\nL\n1 0\nL\n6 0\nWLLWLW\n",
            "output": "7\n11\n6\n29\n56\n0\n0\n3\n"
        },
        {
            "input": "8\n5 0\nWLWLL\n6 3\nLWWLLL\n7 1\nLWLWLWL\n15 5\nWWWLLLWWWLLLWWW\n40 3\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLLWLLWWWLWWL\n1 0\nL\n1 1\nL\n6 1\nWLLWLW\n",
            "output": "2\n9\n6\n26\n35\n0\n1\n6\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 5\nLLLWWL\n7 2\nLWLWLWL\n15 8\nWWWLLLWWWLLLWWW\n40 10\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLLWLLWWWLWWL\n1 0\nL\n1 1\nL\n6 1\nWLLWLW\n",
            "output": "7\n11\n9\n29\n54\n0\n1\n6\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 5\nLLLWWL\n7 0\nLWLWLWL\n15 8\nWWWLLLWWWLLLWWW\n40 11\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLLWLLWWWLWWL\n1 0\nL\n1 0\nL\n6 1\nWLLWLW\n",
            "output": "7\n11\n3\n29\n56\n0\n0\n6\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 5\nLLLWWL\n7 4\nLWLWLWL\n15 5\nWWWLLLWWWLLLWWW\n40 38\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLLWLLWWWLWWL\n1 0\nL\n1 0\nL\n6 0\nWLLWLW\n",
            "output": "7\n11\n13\n26\n79\n0\n0\n3\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 5\nLWWLLL\n7 0\nLWLWLWL\n15 5\nWWWLLLWWWLLLWWW\n40 11\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLLWLLWWWLWWL\n1 0\nL\n1 1\nL\n6 0\nWLLWLW\n",
            "output": "7\n11\n3\n26\n56\n0\n1\n3\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 5\nLLLWWL\n7 2\nLWLWLWL\n15 5\nWWWLLLWWWLLLWWW\n40 7\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLLWLLWWWLWWL\n1 1\nL\n1 1\nL\n6 1\nWLLWLW\n",
            "output": "7\n11\n9\n26\n46\n1\n1\n6\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 0\nLLLWWL\n7 2\nLWLWLWL\n15 2\nWWWLLLWWWLLLWWW\n40 11\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLLWLLWWWLWWL\n1 0\nL\n1 0\nL\n6 1\nWLLWLW\n",
            "output": "7\n3\n9\n19\n56\n0\n0\n6\n"
        },
        {
            "input": "8\n5 1\nWLWLL\n6 3\nLLLWWL\n7 1\nLWLWLWL\n15 5\nWWWLLLWWWLLLWWW\n40 7\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLWWLLWWWLWLL\n1 0\nL\n1 1\nL\n6 1\nWLLWLW\n",
            "output": "5\n9\n6\n26\n46\n0\n1\n6\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 9\nLLLWWL\n7 0\nLWLWLWL\n15 5\nWWWLLLWWWLLWWWL\n40 11\nLLWLWLWWWLWLLWLWWWLWLLLLLWLLLLWLWWWWLWWL\n1 0\nL\n1 0\nL\n6 0\nWLWLLW\n",
            "output": "7\n11\n3\n27\n57\n0\n0\n3\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 3\nLLLWWL\n7 2\nLWLWLWL\n15 5\nWWWLLLWWWLLLWWW\n40 3\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLLWLLWWWLWWL\n1 0\nL\n1 1\nL\n6 1\nWLLWLW\n",
            "output": "7\n9\n9\n26\n35\n0\n1\n6\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 9\nLLLWWL\n7 0\nLWLWLWL\n15 5\nWWWLLLWWWLLLWWW\n40 20\nLLWLWLWWWLWLLWLWWWLWLLLLLWLLLLWLWWWWLWWL\n1 0\nL\n1 0\nL\n6 0\nWLLWLW\n",
            "output": "7\n11\n3\n26\n77\n0\n0\n3\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 5\nLLLWWL\n7 4\nLWLWLWL\n15 2\nWWWLLLWWWLLLWWW\n40 38\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLLWLLWWWLWWL\n1 0\nL\n1 0\nL\n6 0\nWLLWLW\n",
            "output": "7\n11\n13\n19\n79\n0\n0\n3\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 3\nLLLWWL\n7 2\nLWLWLWL\n15 9\nWWWLLLWWWLLLWWW\n40 3\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLLWLLWWWLWWL\n1 0\nL\n1 1\nL\n6 1\nWLLWLW\n",
            "output": "7\n9\n9\n29\n35\n0\n1\n6\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 10\nLLLWWL\n7 1\nLWLWLWL\n15 5\nWWWLLLWWWLLLWWW\n40 7\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLLWLLWWWLWWL\n1 1\nL\n1 1\nL\n6 1\nWLLWLW\n",
            "output": "7\n11\n6\n26\n46\n1\n1\n6\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 3\nLLLWWL\n7 2\nWWLLLWL\n15 5\nWWWLLLWWWLLLWWW\n40 7\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLWWLLWWWLWLL\n1 0\nL\n1 0\nL\n6 1\nWLWLLW\n",
            "output": "7\n9\n8\n26\n46\n0\n0\n6\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 10\nLLLWWL\n7 1\nLWLWLWL\n15 5\nWWWLLLWWWLLLWWW\n40 7\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLLWLLWWWLWWL\n1 1\nL\n1 0\nL\n6 1\nWLLWLW\n",
            "output": "7\n11\n6\n26\n46\n1\n0\n6\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 0\nLLLWWL\n7 2\nLWLWLWL\n15 5\nWWWLLLWWWLLLWWW\n40 7\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLLWLLWWWLWWL\n1 0\nL\n1 1\nL\n6 0\nWLLWLW\n",
            "output": "7\n3\n9\n26\n46\n0\n1\n3\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 8\nLLLWWL\n7 2\nLWLWLWL\n15 5\nWWWLLLWWWLLLWWW\n40 15\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLLWLLWWWLWWL\n1 0\nL\n1 1\nL\n6 1\nWLLWLW\n",
            "output": "7\n11\n9\n26\n66\n0\n1\n6\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 5\nLLLWWL\n7 0\nLWLWLWL\n15 5\nWWWLLLWWWLLLWWW\n40 22\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLLWLLWWWLWWL\n1 0\nL\n1 0\nL\n6 1\nWLLWLW\n",
            "output": "7\n11\n3\n26\n79\n0\n0\n6\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 5\nLLLWWL\n7 2\nLWLWLWL\n15 5\nWWWLLLWWLWLLWWW\n40 1\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLLWLLWWWLWWL\n1 0\nL\n1 1\nL\n6 1\nWWLLLW\n",
            "output": "7\n11\n9\n26\n29\n0\n1\n6\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 5\nLLLWWL\n7 2\nLWLWLWL\n15 6\nWWWLLLWWWLLLWWW\n40 7\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLLWLLWWWLWWL\n1 1\nL\n1 1\nL\n6 0\nWLLWLW\n",
            "output": "7\n11\n9\n29\n46\n1\n1\n3\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 15\nLLLWWL\n7 2\nLWLWLWL\n15 6\nWWWLLLWWLWLLWWW\n40 7\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLLWLLWWWLWWL\n1 0\nL\n1 1\nL\n6 1\nWWLLLW\n",
            "output": "7\n11\n9\n29\n46\n0\n1\n6\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 1\nLLLWWL\n7 1\nWWLLLWL\n15 5\nWWWLLLWWWLLLWWW\n40 7\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLWWLLWWWLWLL\n1 0\nL\n1 0\nL\n6 1\nWLLWLW\n",
            "output": "7\n5\n6\n26\n46\n0\n0\n6\n"
        },
        {
            "input": "8\n5 2\nLLWLW\n6 5\nLLLWWL\n7 1\nLWLWLWL\n15 6\nWWWLLLWWWLLLWWW\n40 1\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLWWLLWWWLWLL\n1 0\nL\n1 1\nL\n6 1\nWLLWLW\n",
            "output": "7\n11\n6\n29\n29\n0\n1\n6\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 8\nLLLWWL\n7 2\nLWLWLWL\n15 8\nWWWLLLWWWLLLWWW\n40 15\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLLWLLWWWLWWL\n1 0\nL\n1 1\nL\n6 1\nWLLWLW\n",
            "output": "7\n11\n9\n29\n66\n0\n1\n6\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 5\nLLLWWL\n7 2\nLWLWLWL\n15 5\nWWWLLLWWWLLLWWW\n40 7\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLLWLLWWWLWWL\n1 0\nL\n1 1\nL\n6 1\nWWLLLW\n",
            "output": "7\n11\n9\n26\n46\n0\n1\n6\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 5\nLLLWWL\n7 2\nLWLWLWL\n15 5\nWWWLLLWWLWLLWWW\n40 7\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLLWLLWWWLWWL\n1 0\nL\n1 1\nL\n6 1\nWWLLLW\n",
            "output": "7\n11\n9\n26\n46\n0\n1\n6\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 5\nLLLWWL\n7 2\nLWLWLWL\n15 5\nWWWLLLWWWLLLWWW\n40 38\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLLWLLWWWLWWL\n1 0\nL\n1 0\nL\n6 0\nWLLWLW\n",
            "output": "7\n11\n9\n26\n79\n0\n0\n3\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 5\nLWWLLL\n7 0\nLWLWLWL\n15 5\nWWWLLLWWWLLLWWW\n40 11\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLLWLLWWWLWWL\n1 0\nL\n1 0\nL\n6 0\nWLLWLW\n",
            "output": "7\n11\n3\n26\n56\n0\n0\n3\n"
        },
        {
            "input": "8\n5 2\nLLWLW\n6 5\nLLLWWL\n7 2\nLWLWLWL\n15 5\nWWWLLLWWWLLLWWW\n40 11\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLLWLLWWWLWWL\n1 0\nL\n1 1\nL\n6 1\nWLLWLW\n",
            "output": "7\n11\n9\n26\n56\n0\n1\n6\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 5\nLLLWWL\n7 0\nLWLWLWL\n15 5\nWWWLLLWWWLLLWWW\n40 11\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLLWLLWWWLWWL\n1 0\nL\n1 0\nL\n6 0\nWLWLLW\n",
            "output": "7\n11\n3\n26\n56\n0\n0\n3\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 8\nLLLWWL\n7 2\nLWLWLWL\n15 5\nWWWLLLWWLWLLWWW\n40 7\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLLWLLWWWLWWL\n1 0\nL\n1 1\nL\n6 1\nWWLLLW\n",
            "output": "7\n11\n9\n26\n46\n0\n1\n6\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 3\nLLLWWL\n7 1\nWWLLLWL\n15 5\nWWWLLLWWWLLLWWW\n40 7\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLWWLLWWWLWLL\n1 0\nL\n1 1\nL\n6 1\nWLLWLW\n",
            "output": "7\n9\n6\n26\n46\n0\n1\n6\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 9\nLLLWWL\n7 0\nLWLWLWL\n15 5\nWWWLLLWWWLLLWWW\n40 11\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLLWLLWWWLWWL\n1 0\nL\n1 0\nL\n6 0\nWLWLLW\n",
            "output": "7\n11\n3\n26\n56\n0\n0\n3\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 15\nLLLWWL\n7 2\nLWLWLWL\n15 5\nWWWLLLWWLWLLWWW\n40 7\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLLWLLWWWLWWL\n1 0\nL\n1 1\nL\n6 1\nWWLLLW\n",
            "output": "7\n11\n9\n26\n46\n0\n1\n6\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 3\nLLLWWL\n7 1\nWWLLLWL\n15 5\nWWWLLLWWWLLLWWW\n40 7\nLLWLWWWLLWWLLLWLLWLLWLWWWLWLLWLWWWLWLWLL\n1 0\nL\n1 1\nL\n6 1\nWLLWLW\n",
            "output": "7\n9\n6\n26\n46\n0\n1\n6\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 5\nLLLWWL\n7 2\nLWLWLWL\n15 9\nWWWLLLWWWLLLWWW\n40 11\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLLWLLWWWLWWL\n1 0\nL\n1 1\nL\n6 1\nWLLWLW\n",
            "output": "7\n11\n9\n29\n56\n0\n1\n6\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 7\nLLLWWL\n7 1\nLWLWLWL\n15 5\nWWWLLLWWWLLLWWW\n40 3\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLLWLLWWWLWWL\n1 1\nL\n1 1\nL\n6 1\nWLLWLW\n",
            "output": "7\n11\n6\n26\n35\n1\n1\n6\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 3\nLWWLLL\n7 1\nWWLLLWL\n15 5\nWWWLLLWWWLLLWWW\n40 7\nLLWLWWWLLWWLLLWLLWLLWLWWWLWLLWLWWWLWLWLL\n1 0\nL\n1 1\nL\n6 1\nWLLWLW\n",
            "output": "7\n9\n6\n26\n46\n0\n1\n6\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 9\nLLLWWL\n7 0\nLWLWLWL\n15 5\nWWWLLLWWWLLLWWW\n40 11\nLLWLWLWWWLWLLWLWWWLWLLLLLWLLLLWLWWWWLWWL\n1 0\nL\n1 0\nL\n6 0\nWLLWLW\n",
            "output": "7\n11\n3\n26\n57\n0\n0\n3\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 3\nLWWLLL\n7 1\nLWLWLWL\n15 5\nWWWLLLWWWLLLWWW\n40 3\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLLWLLWWWLWWL\n1 0\nL\n1 1\nL\n6 1\nWLLWLW\n",
            "output": "7\n9\n6\n26\n35\n0\n1\n6\n"
        },
        {
            "input": "8\n5 2\nWWLLL\n6 5\nLLLWWL\n7 2\nLWLWLWL\n15 5\nWWWLLLWWWLLLWWW\n40 11\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLLWLLWWWLWWL\n1 0\nL\n1 0\nL\n6 0\nWLLWLW\n",
            "output": "7\n11\n9\n26\n56\n0\n0\n3\n"
        },
        {
            "input": "8\n5 2\nLLWLW\n6 5\nLLLWWL\n7 1\nLWLWLWL\n15 5\nWWWLLLWWWLLLWWW\n40 1\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLWWLLWWWLWLL\n1 0\nL\n1 1\nL\n6 1\nWLLWLW\n",
            "output": "7\n11\n6\n26\n29\n0\n1\n6\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 5\nLLLWWL\n7 0\nLWLWLWL\n15 5\nWWWLLLWWWLLLWWW\n40 5\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLLWLLWWWLWWL\n1 0\nL\n1 0\nL\n6 0\nWLWLLW\n",
            "output": "7\n11\n3\n26\n41\n0\n0\n3\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 3\nLLLWWL\n7 1\nWWLLLWL\n15 5\nWWWLLLWWWLLLWWW\n40 7\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLWWLLWWWLWLL\n1 0\nL\n1 1\nL\n6 1\nWLWLLW\n",
            "output": "7\n9\n6\n26\n46\n0\n1\n6\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 10\nLLLWWL\n7 2\nLWLWLWL\n15 5\nWWWLLLWWWLLLWWW\n40 7\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLLWLLWWWLWWL\n1 1\nL\n1 1\nL\n6 1\nWLLWLW\n",
            "output": "7\n11\n9\n26\n46\n1\n1\n6\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 3\nLLLWWL\n7 1\nWWLLLWL\n15 5\nWWWLLLWWWLLLWWW\n40 7\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLWWLLWWWLWLL\n1 0\nL\n1 0\nL\n6 1\nWLWLLW\n",
            "output": "7\n9\n6\n26\n46\n0\n0\n6\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 10\nLLLWWL\n7 1\nWWLLLWL\n15 5\nWWWLLLWWWLLLWWW\n40 7\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLLWLLWWWLWWL\n1 1\nL\n1 0\nL\n6 1\nWLLWLW\n",
            "output": "7\n11\n6\n26\n46\n1\n0\n6\n"
        },
        {
            "input": "8\n5 2\nLLWWL\n6 5\nLLLWWL\n7 1\nLWLWLWL\n15 5\nWWWLLLWWWLLLWWW\n40 3\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLLWLLWWWLWWL\n1 0\nL\n1 1\nL\n6 1\nWLLWLW\n",
            "output": "7\n11\n6\n26\n35\n0\n1\n6\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 10\nLLLWWL\n7 1\nLWLWLWL\n15 5\nWWWLLLWWWLLLWWW\n40 1\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLWWLLWWWLWLL\n1 0\nL\n1 1\nL\n6 1\nWLLWLW\n",
            "output": "7\n11\n6\n26\n29\n0\n1\n6\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 8\nLLLWWL\n7 2\nLWLWLWL\n15 5\nWWWLLLLWWWLLWWW\n40 7\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLLWLLWWWLWWL\n1 0\nL\n1 1\nL\n6 1\nWWLLLW\n",
            "output": "7\n11\n9\n26\n46\n0\n1\n6\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 15\nLLLWWL\n7 0\nLWLWLWL\n15 5\nWWWLLLWWWLLLWWW\n40 11\nLLWLWLWWWLWLLWLWWWLWLLLLLWLLLLWLWWWWLWWL\n1 0\nL\n1 0\nL\n6 0\nWLWLLW\n",
            "output": "7\n11\n3\n26\n57\n0\n0\n3\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 5\nLLLWWL\n7 2\nLWLWLWL\n15 7\nWWWLLLWWWLLLWWW\n40 11\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLLWLLWWWLWWL\n1 0\nL\n1 1\nL\n6 1\nWLLWLW\n",
            "output": "7\n11\n9\n29\n56\n0\n1\n6\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 5\nLLLWWL\n7 0\nLWLWLWL\n15 6\nWWWLLLWWWLLLWWW\n40 11\nLWWLWWWLLWLLLLWLLWLLWLWWWLWLLWLWWWLWLWLL\n1 0\nL\n1 0\nL\n6 0\nWLLWLW\n",
            "output": "7\n11\n3\n29\n56\n0\n0\n3\n"
        },
        {
            "input": "8\n5 2\nWLWLL\n6 6\nLLLWWL\n7 0\nLWLWLWL\n15 8\nWWWLLLWWWLLLWWW\n40 11\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLLWLLWWWLWWL\n1 0\nL\n1 0\nL\n6 1\nWLLWLW\n",
            "output": "7\n11\n3\n29\n56\n0\n0\n6\n"
        }
    ],
    "solution": [
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long md = 1e9 + 7;\nint an[310000];\nchar sn[310000];\nint main() {\n  int z;\n  int n, m;\n  int i, j, k;\n  cin >> z;\n  while (z--) {\n    scanf(\"%d%d\", &n, &k);\n    scanf(\"%s\", sn);\n    bool flag = 1;\n    int first, last;\n    for (i = 0; i < n; i++) {\n      if (sn[i] == 'W' && flag) {\n        flag = 0;\n        first = i;\n      }\n      if (sn[i] == 'W') last = i;\n    }\n    int ans;\n    if (flag) {\n      ans = max(k * 2 - 1, 0);\n    } else {\n      int l;\n      bool bl = 0;\n      int num = 0;\n      ans = 1;\n      for (i = first + 1; i <= last; i++) {\n        if (bl == 0 && sn[i] == 'L') {\n          l = 1;\n          bl = 1;\n        } else if (bl == 0 && sn[i] == 'W') {\n          ans += 2;\n        } else if (bl == 1 && sn[i] == 'L') {\n          l++;\n        } else {\n          bl = 0;\n          an[num++] = l;\n          ans += 1;\n        }\n      }\n      sort(an, an + num);\n      for (i = 0; i < num; i++) {\n        if (k >= an[i]) {\n          ans += an[i] * 2 + 1;\n          k -= an[i];\n        } else {\n          ans += k * 2;\n          k = 0;\n          break;\n        }\n      }\n      if (k > 0) {\n        ans += min(k, n - (last - first + 1)) * 2;\n      }\n    }\n    printf(\"%d\\n\", ans);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "from functools import reduce\nimport os\nimport sys\nfrom collections import *\n#from fractions import *\nfrom math import *\nfrom bisect import *\nfrom heapq import *\nfrom io import BytesIO, IOBase\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\ndef value(): return tuple(map(int, input().split())) # multiple values\ndef arr(): return [int(i) for i in input().split()] # array input\ndef sarr(): return [int(i) for i in input()] #array from string\ndef starr(): return [str(x) for x in input().split()] #string array\ndef inn(): return int(input()) # integer input\ndef svalue(): return tuple(map(str, input().split())) #multiple string values\ndef parr(): return [(value()) for i in range(n)] # array of pairs\nmo = 1000000007\ninf=1e18\ndiv=998244353\n#print(\"Case #{}:\".format(_+1),end=\" \")\n# ----------------------------CODE------------------------------#\nfor _ in range(inn()):\n    n,k=value()\n    a=[str(x) for x in input()]\n    ans=0\n    c=0\n    if(len(set(a))==1 and a[0]=='L'):\n        print(max(0,k*2-1))\n        continue\n    for i in range(n):\n        if(a[i]=='W'):\n            if(i>0 and a[i-1]=='W'):\n                ans+=2\n            else:\n                ans+=1\n        else:\n            c+=1\n    i=0\n    while(i<n and a[i]=='L'):\n        i+=1\n    j=n-1\n    while(j>=0 and a[j]=='L'):\n        j-=1\n    res=[]\n    while(i<j):\n        val=i\n        while(i<j and a[i]=='L'):\n            i+=1\n        if(i-val>0):\n            res+=[i-val]\n        else:\n            i+=1\n    res.sort()\n    #print(res,c)\n    for i in res:\n        if(i>k):\n            break\n        ans+=(i*2+1)\n        k-=i\n        c-=i\n    ans+=min(c,k)*2\n    #print(c,k)\n    print(min((n-1)*2+1,ans))\n\n\n\n\n\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.*;\nimport java.io.IOException;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.InputStream;\n\npublic class First {\n\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskA solver = new TaskA();\n        int t;\n        t = in.nextInt();\n        //t = 1;\n        while (t > 0) {\n            solver.call(in,out);\n            t--;\n        }\n        out.close();\n    }\n\n    static class TaskA {\n        public void call(InputReader in, PrintWriter out) {\n            int n, k, a=0, b=0 ,c=0 , d=0 , e =0 , f=0 ,  g= 0;\n            n = in.nextInt();\n            k = in.nextInt();\n            \n            int[] arr = new int[n];\n            answer[] array = new answer[n];\n\n            String s;\n            s = in.next();\n\n            for (int i = 0; i < n; i++) {\n                if(s.charAt(i)=='W') {\n                    arr[i] = 1;\n                    e++;\n                }\n            }\n\n            for (int i = 0; i < n; i++) {\n                if(i==0){\n                    if(arr[i]==1)\n                        d++;\n                }\n                else {\n                    if (arr[i]==1 && arr[i-1]==0)\n                        d++;\n                }\n\n                if(arr[i]==0)\n                {\n                    if(a==0){\n                        b = i;\n                    }\n                    a++;\n                }\n\n                else {\n                    if(a!=0) {\n                        array[b] = new answer(b, a);\n                    }\n                    a=0;\n                }\n            }\n\n            if(a!=0){\n                array[b] = new answer(b,a);\n\n            }\n            for (int i = 0; i < n; i++) {\n                if(array[i]==null)\n                {\n                    array[i] = new answer(0, 0);\n                    c++;\n                }\n            }\n\n\n            Arrays.sort(array);\n\n\n            if(e==0){\n                if(k>0)\n                    out.println(1+2*(k-1));\n                else\n                    out.println(0);\n\n            }\n            else {\n                e -= d;\n\n\n                for (int i = c; i < n; i++) {\n                    if (k == 0)\n                        break;\n\n                    if (array[i].index != 0 && array[i].index+array[i].value!=n) {\n                        if (array[i].value <= k) {\n                            k -= array[i].value;\n\n                            e += array[i].value + 1;\n                            d--;\n\n\n                        } else {\n                            e += k;\n                            k = 0;\n                        }\n                    } else {\n\n                        if(array[i].index==0)\n                            f = i;\n                        else\n                            g = i;\n                    }\n                }\n\n\n                if (k != 0) {\n\n                    if(array[g].value<k){\n                        e+=array[g].value;\n                        k-=array[g].value;\n                    }\n                    else {\n                        e+=k;\n                        k=0;\n                    }\n\n\n                    if (array[f].value < k) {\n                        e += array[f].value;\n                    } else {\n                        e += k;\n                    }\n                }\n\n                out.println(2 * e + d);\n\n\n            }\n\n\n        }\n\n        static class answer implements Comparable<answer>{\n            int index, value;\n\n            public answer(int a, int b) {\n                this.index = a;\n                this.value = b;\n            }\n\n\n            @Override\n            public int compareTo(answer o) {\n                return this.value-o.value;\n            }\n        }\n\n\n    }\n\n    static int gcd(int a, int b)\n    {\n        if (b == 0)\n            return a;\n        return gcd(b, a % b);\n    }\n\n    static void sort(int[] a) {\n        ArrayList<Integer> l=new ArrayList<>();\n        for (int i:a) l.add(i);\n        Collections.sort(l);\n        for (int i=0; i<a.length; i++) a[i]=l.get(i);\n    }\n\n    static final Random random=new Random();\n\n    static void shuffleSort(int[] arr) {\n        int n=arr.length;\n        for (int i=0; i<n; i++) {\n            int a=random.nextInt(n), temp=arr[a];\n            arr[a]=arr[i];\n            arr[i]=temp;\n        }\n        Arrays.sort(arr);\n    }\n\n    static class InputReader {\n        public BufferedReader reader;\n        public StringTokenizer tokenizer;\n\n        public InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\n            tokenizer = null;\n        }\n\n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n        public long nextLong(){\n            return Long.parseLong(next());\n        }\n        public double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n    }\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.ByteArrayInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.InputMismatchException;\n \npublic class B {\n\tInputStream is;\n\tPrintWriter out;\n\tString INPUT = \"\";\n\t\n\tvoid solve()\n\t{\n\t\tfor(int T = ni();T > 0;T--)go();\n\t}\n \n\tvoid go()\n\t{\n\t\tint n = ni(), K = ni();\n\t\tchar[] s = ns(n);\n\t\tint[][] uc = uniqcount(s);\n\t\tif(uc.length == 1 && uc[0][0] == 'L'){\n\t\t\tout.println(K == 0 ? 0 : (K-1)*2 + 1);\n\t\t\treturn;\n\t\t}\n \n\t\tint l = 0;\n\t\tfor(char c : s){\n\t\t\tif(c == 'L')l++;\n\t\t}\n\t\tK = Math.min(K, l);\n \n\t\tint[] three = new int[n];\n\t\tint p = 0;\n\t\tfor(int i = 1;i < uc.length-1;i++){\n\t\t\tif(uc[i][0] == 'L'){\n\t\t\t\tthree[p++] = uc[i][1];\n\t\t\t}\n\t\t}\n\t\tArrays.sort(three, 0, p);\n\t\tint ans = 0;\n\t\tfor(int[] u : uc){\n\t\t\tif(u[0] == 'W'){\n\t\t\t\tans += (u[1]-1)*2 + 1;\n\t\t\t}\n\t\t}\n \n\t\tans += 2*K;\n\t\tfor(int i = 0;i < p;i++){\n\t\t\tint use = three[i];\n\t\t\tif(K >= use){\n\t\t\t\tK -= use;\n\t\t\t\tans++;\n\t\t\t}\n\t\t}\n\t\tout.println(ans);\n\t}\n \n\tpublic static int[][] uniqcount(char[] a)\n\t{\n\t\tint n = a.length;\n\t\tint p = 0;\n\t\tint[][] b = new int[n][];\n\t\tfor(int i = 0;i < n;i++){\n\t\t\tif(i == 0 || a[i] != a[i-1])b[p++] = new int[]{a[i], 0};\n\t\t\tb[p-1][1]++;\n\t\t}\n\t\treturn Arrays.copyOf(b, p);\n\t}\n \n \n\tvoid run() throws Exception\n\t{\n\t\tis = oj ? System.in : new ByteArrayInputStream(INPUT.getBytes());\n\t\tout = new PrintWriter(System.out);\n\t\t\n\t\tlong s = System.currentTimeMillis();\n\t\tsolve();\n\t\tout.flush();\n\t\ttr(System.currentTimeMillis()-s+\"ms\");\n\t}\n\t\n\tpublic static void main(String[] args) throws Exception { new B().run(); }\n\t\n\tprivate byte[] inbuf = new byte[1024];\n\tpublic int lenbuf = 0, ptrbuf = 0;\n\t\n\tprivate int readByte()\n\t{\n\t\tif(lenbuf == -1)throw new InputMismatchException();\n\t\tif(ptrbuf >= lenbuf){\n\t\t\tptrbuf = 0;\n\t\t\ttry { lenbuf = is.read(inbuf); } catch (IOException e) { throw new InputMismatchException(); }\n\t\t\tif(lenbuf <= 0)return -1;\n\t\t}\n\t\treturn inbuf[ptrbuf++];\n\t}\n\t\n\tprivate boolean isSpaceChar(int c) { return !(c >= 33 && c <= 126); }\n\tprivate int skip() { int b; while((b = readByte()) != -1 && isSpaceChar(b)); return b; }\n\t\n\tprivate double nd() { return Double.parseDouble(ns()); }\n\tprivate char nc() { return (char)skip(); }\n\t\n\tprivate String ns()\n\t{\n\t\tint b = skip();\n\t\tStringBuilder sb = new StringBuilder();\n\t\twhile(!(isSpaceChar(b))){ // when nextLine, (isSpaceChar(b) && b != ' ')\n\t\t\tsb.appendCodePoint(b);\n\t\t\tb = readByte();\n\t\t}\n\t\treturn sb.toString();\n\t}\n\t\n\tprivate char[] ns(int n)\n\t{\n\t\tchar[] buf = new char[n];\n\t\tint b = skip(), p = 0;\n\t\twhile(p < n && !(isSpaceChar(b))){\n\t\t\tbuf[p++] = (char)b;\n\t\t\tb = readByte();\n\t\t}\n\t\treturn n == p ? buf : Arrays.copyOf(buf, p);\n\t}\n\t\n\tprivate char[][] nm(int n, int m)\n\t{\n\t\tchar[][] map = new char[n][];\n\t\tfor(int i = 0;i < n;i++)map[i] = ns(m);\n\t\treturn map;\n\t}\n\t\n\tprivate int[] na(int n)\n\t{\n\t\tint[] a = new int[n];\n\t\tfor(int i = 0;i < n;i++)a[i] = ni();\n\t\treturn a;\n\t}\n\t\n\tprivate int ni()\n\t{\n\t\tint num = 0, b;\n\t\tboolean minus = false;\n\t\twhile((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));\n\t\tif(b == '-'){\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\t\t\n\t\twhile(true){\n\t\t\tif(b >= '0' && b <= '9'){\n\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t}else{\n\t\t\t\treturn minus ? -num : num;\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\t\n\tprivate long nl()\n\t{\n\t\tlong num = 0;\n\t\tint b;\n\t\tboolean minus = false;\n\t\twhile((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));\n\t\tif(b == '-'){\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\t\t\n\t\twhile(true){\n\t\t\tif(b >= '0' && b <= '9'){\n\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t}else{\n\t\t\t\treturn minus ? -num : num;\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\t\n\tprivate boolean oj = System.getProperty(\"ONLINE_JUDGE\") != null;\n\tprivate void tr(Object... o) { if(!oj)System.out.println(Arrays.deepToString(o)); }\n}"
        },
        {
            "language": 3,
            "solution": "def examA():\n    T = I()\n    ans = []\n    for _ in range(T):\n        N = I()\n        B = LI()\n        if sum(B)==0:\n            print(\"NO\")\n            continue\n        print(\"YES\")\n        B.sort()\n        for i in range(N):\n            cur = []\n            now = 0\n            for j in range(N):\n                now += B[i-j]\n                if now==0:\n                    break\n                cur.append(B[i-j])\n            if len(cur)==N:\n                print(\" \".join(map(str,cur)))\n                break\n    return\n\ndef examB():\n    T = I()\n    ans = []\n    for _ in range(T):\n        N, K = LI()\n        S = SI()\n        L = []\n        W = 0\n        WW = 0\n        cur = 0\n        l = -inf\n        flag_W = False\n        for s in S:\n            if s==\"W\":\n                WW += 1\n                if flag_W:\n                    cur += 2\n                    continue\n                if l>0:\n                    L.append(l)\n                l = 0\n                flag_W = True\n                W += 1\n                cur += 1\n            else:\n                flag_W = False\n                l += 1\n        #print(\"\u9014\u4e2d\")\n        #print(cur,l)\n\n\n        #print(L)\n        if WW==0:\n            cur = max(0,2*K-1)\n        elif K==0:\n            pass\n        elif N-WW<=K:\n            cur = 2*N-1\n        else:\n            L.sort()\n            for i in range(len(L)):\n                a = L[i]\n                if a<=K:\n                    cur += 1 + 2*a\n                    K -= a\n                else:\n                    cur += 2*K\n                    K = 0\n                    break\n            if K>0:\n                cur += 2*K\n\n        ans.append(min(2*N-1,cur))\n    for v in ans:\n        print(v)\n    return\n\ndef examC():\n    T = I()\n    ans = []\n    for _ in range(T):\n        cur = 0\n        ans.append(cur)\n    for v in ans:\n        print(v)\n    return\n\ndef examD():\n    ans = 0\n    print(ans)\n    return\n\ndef examE():\n    ans = 0\n    print(ans)\n    return\n\ndef examF():\n    ans = 0\n    print(ans)\n    return\n\nfrom decimal import getcontext,Decimal as dec\nimport sys,bisect,heapq\nfrom copy import deepcopy\nfrom heapq import heappop,heappush,heapify\nfrom collections import Counter,defaultdict,deque\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\ndef I(): return int(input())\ndef LI(): return list(map(int,sys.stdin.readline().split()))\ndef DI(): return dec(input())\ndef LDI(): return list(map(dec,sys.stdin.readline().split()))\ndef LSI(): return list(map(str,sys.stdin.readline().split()))\ndef LS(): return sys.stdin.readline().split()\ndef SI(): return sys.stdin.readline().strip()\nglobal mod,mod2,inf,alphabet,_ep\nmod = 10**9 + 7\nmod2 = 998244353\ninf = 10**18\n_ep = dec(\"0.000000000001\")\nalphabet = [chr(ord('a') + i) for i in range(26)]\nalphabet_convert = {chr(ord('a') + i): i for i in range(26)}\n\ngetcontext().prec = 28\n\nsys.setrecursionlimit(2*10**5)\n\nif __name__ == '__main__':\n    examB()\n\n\"\"\"\n1\n6 1\nLLLWWL\n\n\"\"\""
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n,k=map(int,input().split())\n    s=list(input())\n    st,ed=0,0\n    for i in range(n):\n        if s[i]=='W':\n            stw=i\n            break\n        st+=1\n    if st!=n:\n        for j in range(n-1,-1,-1):\n            if s[j]=='W':\n                edw=j\n                break\n            ed+=1\n    else:\n        print(max(0,k*2-1))\n        continue\n    l=[]\n    i=s.index('W')\n    while i<n:\n        if s[i]=='W':\n            i+=1\n        else:\n            j=i\n            c=0\n            while j<n and s[j]=='L':\n                c+=1\n                j+=1\n            if j==n:\n                break\n            l.append([c,i])\n            i=j\n    l.sort()\n    for e in l:\n        if e[0]<=k:\n            k-=e[0]\n            idx=e[1]\n            for p in range(idx,idx+e[0]):\n                s[p]='W'\n        else:\n            idx=e[1]\n            for p in range(idx,idx+k):\n                s[p]='W'\n                k=0\n    if k!=0:\n        if st!=0:\n            for i in range(stw-1,-1,-1):\n                s[i]='W'\n                k-=1\n                if k==0:\n                    break\n    if k!=0:\n        if ed!=0:\n            for i in range(edw+1,n):\n                s[i]='W'\n                k-=1\n                if k==0:\n                    break\n    ans=0\n    pre=0\n    for i in range(n):\n        if s[i]=='L':\n            pre=0\n            continue\n        elif pre==0:\n            ans+=1\n            pre=1\n        else:\n            ans+=2\n            \n    print(ans)        \n    \n        \n        \n        \n        \n        \n    \n    \n        \n            \n            \n                \n        \n    "
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\npublic class Main\n{\n    static class Reader \n    { \n        final private int BUFFER_SIZE = 1 << 16; \n        private DataInputStream din; \n        private byte[] buffer; \n        private int bufferPointer, bytesRead; \n  \n        public Reader() \n        { \n            din = new DataInputStream(System.in); \n            buffer = new byte[BUFFER_SIZE]; \n            bufferPointer = bytesRead = 0; \n        } \n  \n        public Reader(String file_name) throws IOException \n        { \n            din = new DataInputStream(new FileInputStream(file_name)); \n            buffer = new byte[BUFFER_SIZE]; \n            bufferPointer = bytesRead = 0; \n        } \n  \n        public String readLine() throws IOException \n        { \n            byte[] buf = new byte[64]; // line length \n            int cnt = 0, c; \n            while ((c = read()) != -1) \n            { \n                if (c == '\\n') \n                    break; \n                buf[cnt++] = (byte) c; \n            } \n            return new String(buf, 0, cnt); \n        } \n  \n        public int nextInt() throws IOException \n        { \n            int ret = 0; \n            byte c = read(); \n            while (c <= ' ') \n                c = read(); \n            boolean neg = (c == '-'); \n            if (neg) \n                c = read(); \n            do\n            { \n                ret = ret * 10 + c - '0'; \n            }  while ((c = read()) >= '0' && c <= '9'); \n  \n            if (neg) \n                return -ret; \n            return ret; \n        } \n  \n        public long nextLong() throws IOException \n        { \n            long ret = 0; \n            byte c = read(); \n            while (c <= ' ') \n                c = read(); \n            boolean neg = (c == '-'); \n            if (neg) \n                c = read(); \n            do { \n                ret = ret * 10 + c - '0'; \n            } \n            while ((c = read()) >= '0' && c <= '9'); \n            if (neg) \n                return -ret; \n            return ret; \n        } \n  \n        public double nextDouble() throws IOException \n        { \n            double ret = 0, div = 1; \n            byte c = read(); \n            while (c <= ' ') \n                c = read(); \n            boolean neg = (c == '-'); \n            if (neg) \n                c = read(); \n  \n            do { \n                ret = ret * 10 + c - '0'; \n            } \n            while ((c = read()) >= '0' && c <= '9'); \n  \n            if (c == '.') \n            { \n                while ((c = read()) >= '0' && c <= '9') \n                { \n                    ret += (c - '0') / (div *= 10); \n                } \n            } \n  \n            if (neg) \n                return -ret; \n            return ret; \n        } \n  \n        private void fillBuffer() throws IOException \n        { \n            bytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE); \n            if (bytesRead == -1) \n                buffer[0] = -1; \n        } \n  \n        private byte read() throws IOException \n        { \n            if (bufferPointer == bytesRead) \n                fillBuffer(); \n            return buffer[bufferPointer++]; \n        } \n  \n        public void close() throws IOException \n        { \n            if (din == null) \n                return; \n            din.close(); \n        } \n    }\n    public static void main(String args[])throws Exception\n    {\n        Reader sc=new Reader();\n        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n        PrintWriter pw=new PrintWriter(System.out);\n        //int t=sc.nextInt();\n        int t=Integer.parseInt(br.readLine());\n        while(t-->0)\n        {\n            String str[]=br.readLine().split(\" \");\n            int n=Integer.parseInt(str[0]);\n            int k=Integer.parseInt(str[1]);\n            char carr[]=br.readLine().toCharArray();\n            int l=0,w=0,ws=0;\n            ArrayList<Integer> list=new ArrayList<>();\n            for(int i=0;i<n;i++)\n            {\n                if(carr[i]=='W')\n                {\n                    w++;\n                    if(i==0||carr[i-1]=='L')ws++;\n                }\n                else\n                {\n                    int cnt=0,j;\n                    for(j=i;j<n;j++)\n                    {\n                        if(carr[j]=='W')break;\n                        cnt++;\n                        l++;\n                    }\n                    list.add(cnt);\n                    i=j-1;\n                }\n            }\n            if(l==n)\n            {\n                pw.println(Math.max(2*k-1,0));\n                continue;\n            }\n            if(l==0||l<=k)\n            {\n                pw.println(2*n-1);\n                continue;\n            }\n            if(carr[0]=='L')\n            list.set(0,(int)1e8);\n            if(carr[n-1]=='L')\n            list.set(list.size()-1,(int)1e8);\n            Collections.sort(list);\n            w+=k;\n            for(int i=0;i<list.size();i++)\n            {\n                if(list.get(i)>k)break;\n                k-=list.get(i);\n                ws--;\n            }\n            pw.println(2*w-ws);\n        }\n        \n        pw.flush();\n        pw.close();\n    }\n}"
        },
        {
            "language": 3,
            "solution": "z,zz=input,lambda:list(map(int,z().split()))\nfast=lambda:stdin.readline().strip()\nzzz=lambda:[int(i) for i in stdin.readline().split()]\nszz,graph,mod,szzz=lambda:sorted(zz()),{},10**9+7,lambda:sorted(zzz())\n\nfrom string import *\nfrom re import *\nfrom collections import *\nfrom queue import *\nfrom sys import *\nfrom collections import *\nfrom math import *\nfrom heapq import *\nfrom itertools import *\nfrom bisect import *\nfrom collections import Counter as cc\nfrom math import factorial as f\nfrom bisect import bisect as bs\nfrom bisect import bisect_left as bsl\nfrom itertools import accumulate as ac\ndef lcd(xnum1,xnum2):return (xnum1*xnum2//gcd(xnum1,xnum2))\ndef prime(x):\n    p=ceil(x**.5)+1\n    for i in range(2,p):\n        if (x%i==0 and x!=2) or x==0:return 0\n    return 1\ndef dfs(u,visit,graph):\n    visit[u]=True\n    for i in graph[u]:\n        if not visit[i]:\n            dfs(i,visit,graph)\n\n###########################---Test-Case---#################################\n\"\"\"\n\n\n\n\"\"\"\n###########################---START-CODING---##############################\n\n\ndef solve(n,k,s):\n    arr=[]\n    sm=s.count(\"W\")\n    if sm==0:\n        return max(min(n,k)*2 -1,0)\n   \n    arr=s.split(\"W\")[1:-1]\n\n    arr=list(filter(None,arr))\n\n    arr=[len(i) for i in arr]\n    arr.sort()\n    t=len(arr)\n    ncut=t+1\n    for i in range(t):\n        if k>=arr[i]:\n            sm+=arr[i]\n            k-=arr[i]\n            ncut-=1\n    return max(0,min(2*n-1,(sm+k)*2-ncut))\n        \n        \n        \nann=[]            \nt = int(input())\nfor x in range(t):\n\tn,k=zz()\n\ts = fast()\n\th = solve(n,k,s)\n\tann.append(h)            \n            \n                \nfor i in ann:print(i)          \n        \n        \n        \n\n    \n        \n        \n        \n            \n            \n            \n                \n\n    \n    \n        \n            \n        \n        \n        \n    \n    \n        \n    \n        \n    \n    \n    \n        \n        \n    \n    \n        \n        \n        \n        \n        \n        \n        \n\n    \n    \n\n    \n\n    \n        \n        \n        \n    \n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long Min(long long a, long long b) { return (a < b) ? a : b; }\nlong long Max(long long a, long long b) { return (a < b) ? b : a; }\nlong long gcd(long long m, long long n) {\n  if (n == 0) return m;\n  return gcd(n, m % n);\n}\nlong long lcm(long long m, long long n) { return m * n / gcd(m, n); }\nlong long dx[6] = {-1, 0, 1, 0, 0, 0}, dy[6] = {0, 1, 0, -1, 0, 0},\n          dz[6] = {0, 0, 0, 0, 1, -1};\nvoid solve() {\n  long long n, k;\n  string s;\n  cin >> n >> k >> s;\n  long long cnt = 0, ccnt = 0, ans = 0;\n  deque<long long> v;\n  for (int i = 0; i < n; i++) {\n    if (s[i] == 'L')\n      cnt++, ccnt++;\n    else {\n      if (ccnt > 0) v.push_back(ccnt);\n      ccnt = 0;\n    }\n    if (s[i] == 'W') {\n      if (i > 0 && s[i - 1] == 'W')\n        ans += 2;\n      else\n        ans++;\n    }\n  }\n  if (ccnt > 0) v.push_back(ccnt);\n  if (!v.empty() && s[0] == 'L') v.pop_front();\n  if (!v.empty() && s[n - 1] == 'L') v.pop_back();\n  if (cnt <= k) {\n    cout << 2 * n - 1 << \"\\n\";\n    return;\n  }\n  if (cnt == n) {\n    if (k == 0)\n      cout << \"0\\n\";\n    else\n      cout << 2 * k - 1 << '\\n';\n    return;\n  }\n  sort((v).begin(), (v).end());\n  ans += 2 * k;\n  long long idx = 0;\n  while (k > 0) {\n    if (idx < v.size() && k >= v[idx]) {\n      k -= v[idx];\n      ans++;\n    } else {\n      break;\n    }\n    idx++;\n  }\n  cout << ans << \"\\n\";\n}\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  ;\n  long long tc = 1;\n  cin >> tc;\n  while (tc--) solve();\n  exit(0);\n}\n"
        },
        {
            "language": 3,
            "solution": "\n# Author : raj1307 - Raj Singh\n# Date   : 10.10.2020\n\nfrom __future__ import division, print_function\n\nimport os,sys\nfrom io import BytesIO, IOBase\n\nif sys.version_info[0] < 3:\n    from __builtin__ import xrange as range\n    from future_builtins import ascii, filter, hex, map, oct, zip\n\n\ndef ii():  return int(input())\ndef si():  return input()\ndef mi():  return map(int,input().strip().split(\" \"))\ndef msi(): return map(str,input().strip().split(\" \"))\ndef li():  return list(mi())\n\ndef dmain():\n    sys.setrecursionlimit(1000000)\n    threading.stack_size(1024000)\n    thread = threading.Thread(target=main)\n    thread.start()\n    \n#from collections import deque, Counter, OrderedDict,defaultdict\n#from heapq import nsmallest, nlargest, heapify,heappop ,heappush, heapreplace\n#from math import log,sqrt,factorial,cos,tan,sin,radians\n#from bisect import bisect,bisect_left,bisect_right,insort,insort_left,insort_right\n#from decimal import *\n#import threading\n#from itertools import permutations\n#Copy 2D list  m = [x[:] for x in mark] .. Avoid Using Deepcopy\n\nabc='abcdefghijklmnopqrstuvwxyz'\nabd={'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': 7, 'i': 8, 'j': 9, 'k': 10, 'l': 11, 'm': 12, 'n': 13, 'o': 14, 'p': 15, 'q': 16, 'r': 17, 's': 18, 't': 19, 'u': 20, 'v': 21, 'w': 22, 'x': 23, 'y': 24, 'z': 25}\nmod=1000000007\n#mod=998244353\ninf = float(\"inf\")\nvow=['a','e','i','o','u']\ndx,dy=[-1,1,0,0],[0,0,1,-1]\ndef getKey(item): return item[1] \ndef sort2(l):return sorted(l, key=getKey,reverse=True)\ndef d2(n,m,num):return [[num for x in range(m)] for y in range(n)]\ndef isPowerOfTwo (x): return (x and (not(x & (x - 1))) )\ndef decimalToBinary(n): return bin(n).replace(\"0b\",\"\")\ndef ntl(n):return [int(i) for i in str(n)]\ndef ncr(n,r): return factorial(n)//(factorial(r)*factorial(max(n-r,1)))\n\ndef ceil(x,y):\n    if x%y==0:\n        return x//y\n    else:\n        return x//y+1\n\ndef powerMod(x,y,p):\n    res = 1\n    x %= p\n    while y > 0:\n        if y&1:\n            res = (res*x)%p\n        y = y>>1\n        x = (x*x)%p\n    return res\n\ndef gcd(x, y):\n    while y:\n        x, y = y, x % y\n    return x\n    \ndef isPrime(n) : # Check Prime Number or not \n    if (n <= 1) : return False\n    if (n <= 3) : return True\n    if (n % 2 == 0 or n % 3 == 0) : return False\n    i = 5\n    while(i * i <= n) : \n        if (n % i == 0 or n % (i + 2) == 0) : \n            return False\n        i = i + 6\n    return True\n\n\n\ndef read():\n    sys.stdin  = open('input.txt', 'r')  \n    sys.stdout = open('output.txt', 'w') \n\n\n\n\n\n\ndef main():\n    \n    \n    for _ in range(ii()):\n        \n        \n\n        n,k=mi()\n        s=si()\n\n\n        ans=0\n\n        p=0\n\n\n        l=[]\n\n\n\n        for i in range(n):\n\n            if s[i]=='W':\n\n                if p==0:\n                    ans+=1\n                else:\n                    ans+=2\n\n                p=1\n\n            else:\n\n                p=0\n\n\n        cnt=0\n\n\n        first=-1\n        last=-1\n\n\n        for i in range(n):\n\n            if s[i]=='L':\n\n                cnt+=1\n\n            else:\n\n                if(cnt!=0):\n                    if s[0]=='L' and first==-1:\n                        first=cnt\n                    else:\n                        l.append(cnt)\n                cnt=0\n\n        if cnt!=0:\n            last=cnt\n\n\n        l.sort()\n\n\n        if last==n:\n\n            print(max(2*k-1,0))\n\n            continue\n\n\n        for i in range(len(l)):\n\n            if l[i]<=k:\n\n                ans+=l[i]*2 + 1\n                k-=l[i]\n\n            else:\n\n                ans+=(k*2)\n                k=0\n                break\n\n\n\n\n\n        if k!=0:\n\n            if last!=-1:\n\n                p=min(last,k)\n\n                ans+=p*2\n\n                k-=p\n\n        if k!=0:\n\n            if first!=-1:\n\n                p=min(first,k)\n\n\n                if p>=first:\n                    ans+=p*2\n                else:\n                    ans+=p*2\n\n\n        print(ans)\n\n\n\n\n\n\n\n\n\n        \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# region fastio\n# template taken from https://github.com/cheran-senthil/PyRival/blob/master/templates/template.py\n\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\ndef print(*args, **kwargs):\n    \"\"\"Prints the values to a stream, or to sys.stdout by default.\"\"\"\n    sep, file = kwargs.pop(\"sep\", \" \"), kwargs.pop(\"file\", sys.stdout)\n    at_start = True\n    for x in args:\n        if not at_start:\n            file.write(sep)\n        file.write(str(x))\n        at_start = False\n    file.write(kwargs.pop(\"end\", \"\\n\"))\n    if kwargs.pop(\"flush\", False):\n        file.flush()\n\n\nif sys.version_info[0] < 3:\n    sys.stdin, sys.stdout = FastIO(sys.stdin), FastIO(sys.stdout)\nelse:\n    sys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\n\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\n# endregion\n\n\nif __name__ == \"__main__\":\n    #read()\n    main()\n    #dmain()\n\n# Comment Read()\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\ndef print(val):\n    sys.stdout.write(str(val) + '\\n')\ndef prog():\n    for _ in range(int(input())):\n        n,k = map(int,input().split())\n        s = list(input().strip() + 'W')\n        \n        bounds = []\n        if s[0] == 'L':\n            bounds.append([1,1,0])\n        for i in range(len(s)-1):\n            if s[i] == 'L':\n                if s[i+1] == 'L':\n                    bounds[-1][1] += 1\n            if s[i] == 'W':\n                if s[i+1] == 'L':\n                    bounds.append([0,1,i+1])\n        if s[-2] == 'L':\n            bounds[-1][0] = 2\n        bounds.sort()\n\n        for i in range(len(bounds)):\n            if k >= bounds[i][1]:\n                k -= bounds[i][1]\n                for j in range(bounds[i][2],bounds[i][2]+bounds[i][1]):\n                    s[j] = 'W'\n            else:\n                if bounds[i][0] == 1:\n                    for j in range(bounds[i][2] + bounds[i][1]-1,bounds[i][2] + bounds[i][1]-1-k,-1):\n                        s[j] = 'W'\n                else:\n                    for j in range(bounds[i][2],bounds[i][2]+k):\n                        s[j] = 'W'\n                break\n\n        tot = 0\n        for i in range(len(s)-1):\n            tot += (s[i] == 'W') + (s[i] == 'W' and i > 0 and s[i-1] == 'W')\n\n        print(tot)\nprog()\n                \n"
        },
        {
            "language": 3,
            "solution": "I=input\nfor _ in[0]*int(I()):\n n,k=map(int,I().split());s=I();c=s.count('W');n=min(n,c+k);a=sorted(map(len,filter(None,s.strip('L').split('W'))))[::-1]\n while a and c+a[-1]<=n:c+=a.pop()\n print((2*n-len(a)or 1)-1)"
        },
        {
            "language": 4,
            "solution": "import java.io.PrintWriter;\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.*;\npublic class a{ \n    public static void main(String args[]) throws java.lang.Exception{ \n    \tFastScanner s=new FastScanner();\n\t\tPrintWriter out=new PrintWriter(System.out);\n\t\tint t=s.nextInt();\n\t\tfor(int tt=0;tt<t;tt++) {\n\t\t\tint n=s.nextInt(),k=s.nextInt();\n\t\t\tString a=s.next();\n\t\t\tArrayList<Integer> c=new ArrayList<Integer>();\n\t\t\tint count=0,wins=0,winst=0;\n\t\t\tif(a.charAt(0)=='W'){\n\t\t\t\twinst=1;\n\t\t\t}\n\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\tif(a.charAt(i)=='W'){\n\t\t\t\t\twins++;\n\t\t\t\t\tif(count!=0 ){\n\t\t\t\t\t\twinst++;\n\t\t\t\t\t}\n\t\t\t\t\tif(count!=0 && wins!=1){\n\t\t\t\t\t\tc.add(count);\n\t\t\t\t\t}\n\t\t\t\t\tcount=0;\n\t\t\t\t}else{\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlong ans=0;\n\t\t\tif((k+wins)>=n){\n\t\t\t\tans=2*n-1;\n\t\t\t}else{\n\t\t\t\tif(wins==0 && k!=0){\n\t\t\t\t\tans=2*Math.min(k,n)-1;\n\t\t\t\t}else if(winst==1){\n\t\t\t\t\tans=2*Math.min(k+wins,n)-1;\n\t\t\t\t}else{\n\t\t\t\tCollections.sort(c);\n\t\t\t\tint i=0;\n\t\t\t\tans=2*(wins+k)-winst;\n\t\t\t\twhile(i<c.size() && k>=c.get(i)){\n\t\t\t\t\tk-=c.get(i);\n\t\t\t\t\tans++;\n\t\t\t\t\ti++;\n\t\t\t\t}}\n\t\t\t}\n\t\t\tout.println(ans);\n\t\t}\n\t\tout.close();\n    }\n\tstatic boolean isPrime(int n){\n        if (n <= 1)\n            return false;\n        else if (n == 2)\n            return true;\n        else if (n % 2 == 0)\n            return false;\n        for (int i = 3; i <= Math.sqrt(n); i += 2){\n            if (n % i == 0)\n                return false;\n        }\n        return true;\n    }\n    static void sort(long [] a) {\n\t\tArrayList<Long> l=new ArrayList<>();\n\t\tfor (long i:a) l.add(i);\n\t\tCollections.sort(l);\n\t\tfor (int i=0; i<a.length; i++) a[i]=l.get(i);\n\t}\n    static void sort(int [] a) {\n\t\tArrayList<Integer> l=new ArrayList<>();\n\t\tfor (int i:a) l.add(i);\n\t\tCollections.sort(l);\n\t\tfor (int i=0; i<a.length; i++) a[i]=l.get(i);\n\t}\n    static int gcd(int a, int b){\n      if (b == 0)\n        return a;\n      return gcd(b, a % b);\n    }\n    static void sortcol(int a[][],int c) {\n\t\tArrays.sort(a, (x, y) -> {\n\t\t\tif(x[c]>y[c]) {\n\t\t\t\treturn 1;\n\t\t\t}else {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t});\n\t}\n    public static void printb(boolean ans) {\n    \tif(ans) {\n    \t\tSystem.out.println(\"Yes\");\n    \t}else {\n    \t\tSystem.out.println(\"No\");\n    \t}\n    }\n    static class FastScanner {\n\t\tBufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n\t\tStringTokenizer st=new StringTokenizer(\"\");\n\t\tString next() {\n\t\t\twhile (!st.hasMoreTokens())\n\t\t\t\ttry {\n\t\t\t\t\tst=new StringTokenizer(br.readLine());\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\t\tdouble nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\t\tint[] readArray(int n) {\n\t\t\tint[] a=new int[n];\n\t\t\tfor (int i=0; i<n; i++) a[i]=nextInt();\n\t\t\treturn a;\n\t\t}\n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\t}\n    static class Pair implements Comparable<Pair>{\n    \tint a , b; \n    \tPair(int x , int y){\n    \t\ta=x;\n    \t\tb=y;\n    \t}\n    \tpublic int compareTo(Pair o) {\n    \t\treturn a != o.a ? a - o.a : b - o.b;\n    \t}\n    }\n}"
        },
        {
            "language": 3,
            "solution": "for t in range(int(input())):\n    n, k = [int(i ) for  i in input().split()]\n    wd = input()\n    sc = 0\n    if wd[0] == 'W':\n        sc += 1\n\n    ls = []\n    l_cnt = 0\n    for i in range(1, n):\n        if wd[i] == 'W':\n            if wd[i-1] == 'W':\n                sc += 2\n            else:\n                sc += 1\n    for i in range(n):\n        if wd[i] == 'W':\n            if len(ls) == 0 or ls[-1] != 0:\n                ls.append(0)\n        else:\n            l_cnt += 1\n            if ls:\n                ls[-1] += 1\n    \n        \n    \n\n    if l_cnt <= k:\n        print(2*n-1)\n        continue\n    \n    if ls:\n        ls.pop()\n    else:\n        print(max(0,2*k-1))\n        continue\n    \n    sm = 0\n    ls.sort()\n    ext = 0\n    for ll in ls:\n        if sm + ll <= k:\n            sm += ll\n            ext += 1\n        else:\n            break\n    assert sc + 2*k + ext <= 2*n-1\n    # print('sc, ext', sc, ext, ls)\n    print(sc + 2*k + ext)\n    \n\n    \n\n\n        \n\n"
        },
        {
            "language": 3,
            "solution": "#######################################################################################################################\n#   Author:     BlackFyre\n#   Language:   PyPy 3.7\n#######################################################################################################################\n \nfrom sys import stdin, stdout, setrecursionlimit\nfrom math import floor, gcd, fabs, factorial, fmod, sqrt, inf, log, log2\nfrom random import seed, randint\nfrom datetime import datetime\nfrom collections import defaultdict as dd, deque\nfrom heapq import merge, heapify, heappop, heappush, nsmallest\nfrom bisect import bisect_left as bl, bisect_right as br, bisect\nfrom collections import defaultdict as dd\nmod = pow(10, 9) + 7\nmod2 = 998244353\n# setrecursionlimit(3000)\n\ndef inp(): return stdin.readline().strip()\ndef iinp(): return int(inp())\ndef out(var, end=\"\\n\"): stdout.write(str(var) + \"\\n\")\ndef outa(*var, end=\"\\n\"): stdout.write(' '.join(map(str, var)) + end)\ndef lmp(): return list(mp())\ndef mp(): return map(int, inp().split())\ndef smp(): return map(str, inp().split())\ndef l1d(n, val=0): return [val for i in range(n)]\ndef l2d(n, m, val=0): return [l1d(m, val) for j in range(n)]\ndef remadd(x, y): return 1 if x % y else 0\ndef ceil(a, b): return (a + b - 1) // b\ndef def_value(): return 0\ndef def_inf(): return inf\ndef atoi(s): return ord(s)-ord('a')\ndef inc(s, n=1): return chr((ord(s)-ord('a')+n)%26+ord('a'))\n\n    \nfor _ in range(iinp()):\n    n,k = mp()\n    s = inp()\n    win = s.count('W')\n    if win==0:\n        print(max(2*min(n,k)-1,0))\n    else:\n        dis = int(s[0]=='W')\n        for i in range(n-1):\n            if s[i]=='L' and s[i+1]=='W': dis+=1\n        gp = []\n        i = 0 \n        while i<n:\n            if s[i]=='L': i+=1\n            else: break\n        while i<n:\n            cnt = 0\n            while i<n:\n                if s[i]=='L': cnt+=1\n                else: break\n                i+=1\n            if cnt>0: gp.append(cnt)\n            i+=1\n        if s[n-1]=='L' and len(gp)>0: gp.pop()\n        #print(gp, dis, win)\n        gp.sort()\n        \n        inc = 0\n        ans = 0\n        for i in gp:\n            if inc+i<=k: \n                inc+=i\n                ans+=1\n            else: break\n        if k+win>=n: print(2*n-1)\n        else: print(2*(win+k)-dis+ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <class c>\nstruct rge {\n  c b, e;\n};\ntemplate <class c>\nrge<c> range(c i, c j) {\n  return rge<c>{i, j};\n}\ntemplate <class c>\nauto dud(c* x) -> decltype(cerr << *x, 0);\ntemplate <class c>\nchar dud(...);\nstruct debug {\n  template <class c>\n  debug& operator<<(const c&) {\n    return *this;\n  }\n};\nint32_t main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  long long t;\n  cin >> t;\n  while (t--) {\n    long long n, k;\n    cin >> n >> k;\n    string s;\n    cin >> s;\n    vector<pair<pair<long long, long long>, long long>> a;\n    long long i = 0;\n    while (i < n) {\n      if (s[i] == 'L') {\n        i++;\n        continue;\n      }\n      long long cnt = 0;\n      long long j = i;\n      while (j < n and s[j] == 'W') {\n        j++;\n        cnt++;\n      }\n      a.push_back({{i, j - 1}, cnt});\n      i = j;\n    }\n    sort(a.begin(), a.end());\n    long long mx = 0;\n    set<pair<long long, pair<long long, long long>>> p;\n    for (long long i = 0; i + 1 < a.size(); i++) {\n      p.insert({a[i + 1].first.first - a[i].first.second - 1, {i + 1, i}});\n    }\n    while (1) {\n      if (p.empty()) break;\n      long long tp = p.begin()->first;\n      if (tp <= k) {\n        for (long long i = a[p.begin()->second.second].first.second;\n             i <= a[p.begin()->second.first].first.first; i++) {\n          s[i] = 'W';\n        }\n        k -= tp;\n      } else {\n        for (long long i = a[p.begin()->second.first].first.first - 1;\n             i > a[p.begin()->second.second].first.second; i--) {\n          if (k == 0) break;\n          s[i] = 'W';\n          k--;\n        }\n      }\n      p.erase(p.begin());\n    }\n    if (k and a.size() > 0) {\n      for (long long i = a[0].first.first - 1; i >= 0; i--) {\n        if (k == 0) break;\n        s[i] = 'W';\n        k--;\n      }\n      for (long long i = a[a.size() - 1].first.second + 1; i < n; i++) {\n        if (k == 0) break;\n        s[i] = 'W';\n        k--;\n      }\n    } else {\n      for (long long i = 0; i < n; i++) {\n        if (k == 0) break;\n        s[i] = 'W';\n        k--;\n      }\n    }\n    i = 0;\n    while (i < n) {\n      if (s[i] == 'L') {\n        i++;\n        continue;\n      }\n      long long cnt = 0;\n      long long j = i;\n      while (j < n and s[j] == 'W') {\n        cnt++;\n        j++;\n      }\n      mx += (cnt * 2) - 1;\n      i = j;\n    }\n    cout << mx << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <typename Arg1>\nvoid __f(const char* name, Arg1&& arg1) {\n  cout << name << \" : \" << arg1 << endl;\n}\ntemplate <typename Arg1, typename... Args>\nvoid __f(const char* names, Arg1&& arg1, Args&&... args) {\n  const char* comma = strchr(names + 1, ',');\n  cout.write(names, comma - names) << \" : \" << arg1 << \" | \";\n  __f(comma + 1, args...);\n}\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  int TC, i, j;\n  cin >> TC;\n  while (TC--) {\n    long long int n, k, m, q, r;\n    cin >> n >> k;\n    string s;\n    cin >> s;\n    long long int cW = count(s.begin(), s.end(), 'W');\n    int ans = 0, fst = 0, lst = 0;\n    if (cW == 0) {\n      cout << max(0LL, 2 * k - 1) << '\\n';\n    } else {\n      vector<pair<int, int> > v;\n      for (i = 0; i < n; i++) {\n        bool fl = 0;\n        if (s[i] == 'L') {\n          if (i == 0) fl = 1;\n          int cnt = 1;\n          while (i < n && s[i + 1] == 'L') {\n            i++;\n            cnt++;\n          }\n          if (i == n - 1) fl = 1;\n          if (fl && i != n - 1) {\n            fst = cnt;\n          }\n          if (fl && i == n - 1) {\n            lst = cnt;\n          }\n          if (fl == 0) v.push_back({cnt, fl});\n        } else if (s[i] == 'W') {\n          int cnt = 1;\n          while (i < n && s[i + 1] == 'W') {\n            i++;\n            cnt++;\n          }\n          ans += 2 * cnt - 1;\n        }\n      }\n      sort(v.begin(), v.end());\n      int mn = min(fst, lst);\n      int mx = max(fst, lst);\n      v.push_back({mn, 1});\n      v.push_back({mx, 1});\n      int sum = 0;\n      for (i = 0; i < (long long int)v.size(); i++) {\n        if (sum >= k) break;\n        if (sum + v[i].first <= k) {\n          ans += 2 * v[i].first + (v[i].second != 1);\n          sum += v[i].first;\n        } else {\n          ans += 2 * (k - sum);\n          sum += (k - sum);\n        }\n      }\n      cout << ans << '\\n';\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\nimport math\nimport bisect\nfrom sys import stdin, stdout\nfrom math import gcd, floor, sqrt, log2, ceil\nfrom collections import defaultdict as dd\nfrom bisect import bisect_left as bl, bisect_right as br\nfrom bisect import insort\nfrom collections import Counter\nfrom collections import deque\nfrom heapq import heappush,heappop,heapify\nfrom itertools import permutations,combinations\nmod = int(1e9)+7\n \n \nip = lambda : int(stdin.readline())\ninp = lambda: map(int,stdin.readline().split())\nips = lambda: stdin.readline().rstrip()\nout = lambda x : stdout.write(str(x)+\"\\n\")\n \n \nt = ip()\nfor _ in range(t):\n    n,k = inp()\n    s = ips()\n    if s.count(\"L\") == n:\n        ans = 0\n        for i in range(k):\n            if i == 0:\n                ans += 1\n            else:\n                ans += 2\n        k = 0\n    else:\n        ans = 0\n        win = 0\n        for i in range(n):\n            if s[i] == \"W\":\n                if win == 0:\n                    ans += 1\n                else:\n                    ans += 2\n                win += 1\n            else:\n                win = 0\n        ct = 0\n        gap = []\n        for i in range(n):\n            if s[i] == \"L\":\n                ct += 1\n            else:\n                if ct != 0:\n                    gap.append(ct)\n                    ct = 0\n        if ct != 0:\n            gap.append(ct)\n        if s[0] == \"L\":\n            gap.pop(0)\n        if s[-1] == \"L\":\n            gap.pop()\n        gap.sort()\n        for i in gap:\n            if k>=i:\n                ans += 2*i\n                k -= i\n                ans += 1\n            else:\n                ans += 2*k\n                k = 0\n        if k>0:\n            flag = True\n            if s[-1] == \"L\":\n                for i in range(n-1,-1,-1):\n                    if k == 0:\n                        break\n                    else:\n                        if s[i] == \"W\":\n                            flag = False\n                            break\n                        else:\n                            ans += 2\n                            k -= 1\n            if s[0] == \"L\":\n                flag = False\n                for i in range(n):\n                    if k == 0:\n                        break\n                    else:\n                        if s[i] == \"W\":\n                            flag = True\n                            break\n                        else:\n                            ans += 2\n                            k -= 1\n    lose = s.count(\"L\")\n    if lose <= k:\n        ans = 0\n        for i in range(n):\n            if i == 0:\n                ans += 1\n            else:\n                ans += 2\n    out(ans)\n            \n            \n                        \n\n\n            \n            \n        \n        \n        \n            \n\n\n\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.UncheckedIOException;\nimport java.io.Closeable;\nimport java.io.Writer;\nimport java.io.OutputStreamWriter;\nimport java.io.InputStream;\n\n/**\n * @author rozerhacks\n */\npublic class Main {\n    public static void main(String[] args) throws Exception {\n        Thread thread = new Thread(null, new TaskAdapter(), \"rozerhacks\", 1 << 29);\n        thread.start();\n        thread.join();\n    }\n\n    static class TaskAdapter implements Runnable {\n        @Override\n        public void run() {\n            InputStream inputStream = System.in;\n            OutputStream outputStream = System.out;\n            FastInput in = new FastInput(inputStream);\n            FastOutput out = new FastOutput(outputStream);\n            BChessCheater solver = new BChessCheater();\n            int testCount = Integer.parseInt(in.next());\n            for (int i = 1; i <= testCount; i++)\n                solver.solve(i, in, out);\n            out.close();\n        }\n    }\n\n    static class BChessCheater {\n        public void solve(int testNumber, FastInput in, FastOutput out) {\n            int n = in.readInt();\n            int k = in.readInt();\n            char[] ar = in.readString().toCharArray();\n            long ans = 0;\n            boolean flag = false;\n            for (int i = 0; i < n; i++) {\n                if (ar[i] == 'W') {\n                    flag = true;\n                }\n            }\n            if (!flag) {\n                if (k > 0)\n                    out.println((2 * Math.min(n - 1, (k - 1)) + 1));\n                else out.println(0);\n                return;\n            }\n            BSTIntegerMulti[] bstIntegerMulti = new BSTIntegerMulti[3];\n            for (int i = 0; i < 3; i++) bstIntegerMulti[i] = new BSTIntegerMulti();\n\n            int lenAhead = 0;\n            int lenLast = 0;\n            int ct = 0;\n            for (int i = 0; i < ar.length; ) {\n                if (ar[i] == 'W') {\n                    ans++;\n                    if (i > 0 && ar[i - 1] == 'W') ans++;\n                    i++;\n                } else {\n                    int j = i;\n                    while (j < n && ar[j] == 'L') j++;\n                    int how = 0;\n                    if (i > 0 && ar[i - 1] == 'W') how++;\n                    if (j < n && ar[j] == 'W') how++;\n                    if (how == 1) {\n                        ct++;\n                        if (i == 0) lenAhead = j - i;\n                        else lenLast = j - i;\n                    }\n                    bstIntegerMulti[how].insert(j - i, 1);\n                    i = j;\n                }\n            }\n            assert (ct == 2);\n            while (k > 0 && bstIntegerMulti[2].getSize() > 0) {\n                int len = bstIntegerMulti[2].get(0);\n                bstIntegerMulti[2].remove(len, 1);\n                if (k >= len) {\n                    k -= len;\n                    ans += (2 * len + 1);\n                } else {\n                    ans += 2 * k;\n                    k = 0;\n                }\n            }\n            if (lenLast > 0) {\n                if (k >= lenLast) {\n                    k -= lenLast;\n                    ans += (2 * lenLast);\n                } else {\n                    ans += (2 * k);\n                    k = 0;\n                }\n            }\n\n            if (lenAhead > 0) {\n                if (k >= lenAhead) {\n                    k -= lenAhead;\n                    ans += (1 + (2 * (lenAhead - 1))) + 1;\n                } else if (k > 0) {\n                    ans += 2 * k;\n                    k = 0;\n                }\n            }\n\n            out.println(ans);\n\n        }\n\n    }\n\n    static class BSTIntegerMulti {\n        final int DEFAULT_CAPACITY = 15;\n        int[] value;\n        int[] leftNode;\n        int[] rightNode;\n        int[] leftCount;\n        int[] rightCount;\n        int[] nodeCount;\n        int[] height;\n        int[] stack = new int[64];\n        int cap;\n        int nextFree;\n        int root;\n        int size;\n        int stackPointer;\n\n        public BSTIntegerMulti(int cap) {\n            this.cap = 0;\n            nextFree = 1;\n            size = 0;\n            resize(cap + 1);\n        }\n\n        public BSTIntegerMulti() {\n            this.cap = 0;\n            nextFree = 1;\n            size = 0;\n            resize(DEFAULT_CAPACITY);\n        }\n\n        private void resize(int newCap) {\n            int[] newValue = new int[newCap];\n            int[] newLeftNode = new int[newCap];\n            int[] newRightNode = new int[newCap];\n            int[] newNodeCount = new int[newCap];\n            int[] newLeftCount = new int[newCap];\n            int[] newRightCount = new int[newCap];\n            int[] newHeight = new int[newCap];\n\n            if (cap != 0) {\n                System.arraycopy(value, 0, newValue, 0, cap);\n                System.arraycopy(leftNode, 0, newLeftNode, 0, cap);\n                System.arraycopy(rightNode, 0, newRightNode, 0, cap);\n                System.arraycopy(nodeCount, 0, newNodeCount, 0, cap);\n                System.arraycopy(leftCount, 0, newLeftCount, 0, cap);\n                System.arraycopy(rightCount, 0, newRightCount, 0, cap);\n                System.arraycopy(height, 0, newHeight, 0, cap);\n            }\n            value = newValue;\n            leftNode = newLeftNode;\n            rightNode = newRightNode;\n            nodeCount = newNodeCount;\n            leftCount = newLeftCount;\n            rightCount = newRightCount;\n            height = newHeight;\n            cap = newCap;\n        }\n\n        private int newNode(int val, int count) {\n            if (nextFree == cap) resize(cap << 1);\n            value[nextFree] = val;\n            leftNode[nextFree] = 0;\n            rightNode[nextFree] = 0;\n            leftCount[nextFree] = 0;\n            rightCount[nextFree] = 0;\n            nodeCount[nextFree] = count;\n            height[nextFree] = 1;\n            return nextFree++;\n        }\n\n        public void insert(int data, int count) {\n            size += count;\n            if (root == 0) {\n                root = newNode(data, count);\n                return;\n            }\n            int root = this.root;\n            int stackPointer = 0;\n            int recentChildren = -1;\n            while (true) {\n                if (value[root] == data) {\n                    nodeCount[root] += count;\n                    return;\n                } else if (value[root] > data) {\n                    stack[stackPointer++] = root;\n                    leftCount[root] += count;\n                    if (leftNode[root] == 0) {\n                        recentChildren = leftNode[root] = newNode(data, count);\n                        break;\n                    }\n                    root = leftNode[root];\n                } else {\n                    stack[stackPointer++] = root;\n                    rightCount[root] += count;\n                    if (rightNode[root] == 0) {\n                        recentChildren = rightNode[root] = newNode(data, count);\n                        break;\n                    }\n                    root = rightNode[root];\n                }\n            }\n\n            while (stackPointer > 0) {\n                int node = stack[--stackPointer];\n                if (value[node] > data) leftNode[node] = recentChildren;\n                else rightNode[node] = recentChildren;\n                updateHeight(node);\n                int diff = getDiff(node);\n                if (diff > 1) {\n                    if (data < value[leftNode[node]]) {\n                        recentChildren = rightRotate(node);\n                    } else {\n                        leftNode[node] = leftRotate(leftNode[node]);\n                        recentChildren = rightRotate(node);\n                    }\n                } else if (diff < -1) {\n                    if (data > value[rightNode[node]]) {\n                        recentChildren = leftRotate(node);\n                    } else {\n                        rightNode[node] = rightRotate(rightNode[node]);\n                        recentChildren = leftRotate(node);\n                    }\n                } else {\n                    recentChildren = node;\n                }\n            }\n            this.root = recentChildren;\n        }\n\n        public void remove(int data, int count) {\n            stackPointer = 0;\n            root = remove(root, data, count);\n        }\n\n        private int remove(int curRoot, int data, int count) {\n            if (curRoot == 0) return curRoot;\n            int st = stackPointer;\n            int recentChildren = -1;\n            int root = curRoot;\n            int pivot = -1;\n            while (true) {\n                if (value[root] == data) {\n                    if (nodeCount[root] > count) {\n                        size -= count;\n                        nodeCount[root] -= count;\n                        return curRoot;\n                    } else if (nodeCount[root] == count) {\n                        size -= count;\n                        nodeCount[root] -= count;\n                        if (leftNode[root] == 0 && rightNode[root] == 0) recentChildren = 0;\n                        else if (leftNode[root] == 0) recentChildren = rightNode[root];\n                        else if (rightNode[root] == 0) recentChildren = leftNode[root];\n                        else {\n                            pivot = root;\n                            stack[stackPointer++] = root;\n                            int min = minValue(rightNode[root]);\n                            value[root] = value[min];\n                            nodeCount[root] = nodeCount[min];\n                            rightCount[root] -= nodeCount[min];\n                            recentChildren = rightNode[root] = remove(rightNode[root], value[min], nodeCount[min]);\n                            size += nodeCount[root];\n                        }\n                        break;\n                    } else throw new RuntimeException(\"Removing more than present\");\n                } else if (value[root] > data) {\n                    stack[stackPointer++] = root;\n                    leftCount[root] -= count;\n                    if (leftNode[root] == 0) break;\n                    root = leftNode[root];\n                } else {\n                    stack[stackPointer++] = root;\n                    rightCount[root] -= count;\n                    if (rightNode[root] == 0) break;\n                    root = rightNode[root];\n                }\n            }\n            if (recentChildren == -1) {\n                while (stackPointer > 0) {\n                    int node = stack[--stackPointer];\n                    if (value[node] > data) leftCount[node] += count;\n                    else rightCount[node] -= count;\n                }\n                return curRoot;\n            }\n            while (stackPointer - st > 0) {\n                int node = stack[--stackPointer];\n                if (node != pivot)\n                    if (value[node] > data) leftNode[node] = recentChildren;\n                    else rightNode[node] = recentChildren;\n                updateHeight(node);\n                int diff = getDiff(node);\n                if (diff > 1) {\n                    if (getDiff(leftNode[node]) >= 0) {\n                        recentChildren = rightRotate(node);\n                    } else {\n                        leftNode[node] = leftRotate(leftNode[node]);\n                        recentChildren = rightRotate(node);\n                    }\n                } else if (diff < -1) {\n                    if (getDiff(rightNode[node]) <= 0) {\n                        recentChildren = leftRotate(node);\n                    } else {\n                        rightNode[node] = rightRotate(rightNode[node]);\n                        recentChildren = leftRotate(node);\n                    }\n                } else {\n                    recentChildren = node;\n                }\n            }\n            return recentChildren;\n        }\n\n        private int minValue(int id) {\n            while (leftNode[id] != 0) id = leftNode[id];\n            return id;\n        }\n\n        private void updateHeight(int id) {\n            height[id] = Math.max(height[leftNode[id]], height[rightNode[id]]) + 1;\n        }\n\n        private void updateCount(int id) {\n            leftCount[id] = leftCount[leftNode[id]] + rightCount[leftNode[id]] + nodeCount[leftNode[id]];\n            rightCount[id] = leftCount[rightNode[id]] + rightCount[rightNode[id]] + nodeCount[rightNode[id]];\n        }\n\n        private int rightRotate(int id) {\n            int left = leftNode[id];\n            int leftRight = rightNode[left];\n            rightNode[left] = id;\n            leftNode[id] = leftRight;\n            updateHeight(id);\n            updateCount(id);\n            updateHeight(left);\n            updateCount(left);\n            return left;\n        }\n\n        private int leftRotate(int id) {\n            int right = rightNode[id];\n            int rightLeft = leftNode[right];\n            leftNode[right] = id;\n            rightNode[id] = rightLeft;\n            updateHeight(id);\n            updateCount(id);\n            updateHeight(right);\n            updateCount(right);\n            return right;\n        }\n\n        private int getDiff(int id) {\n            return height[leftNode[id]] - height[rightNode[id]];\n        }\n\n        public int get(int index) {\n            int root = this.root;\n            assert (root < size);\n            while (root != 0) {\n                if (leftNode[root] == 0) {\n                    if (index - nodeCount[root] < 0)\n                        return value[root];\n                    else {\n                        index -= nodeCount[root];\n                        root = rightNode[root];\n                    }\n                } else {\n                    if (index - leftCount[root] < 0) root = leftNode[root];\n                    else if (index - leftCount[root] - nodeCount[root] < 0) return value[root];\n                    else {\n                        index -= (leftCount[root] + nodeCount[root]);\n                        root = rightNode[root];\n                    }\n                }\n            }\n            throw new RuntimeException(\"BST out of index\");\n        }\n\n        public int getSize() {\n            return size;\n        }\n\n    }\n\n    static class FastInput {\n        private final InputStream is;\n        private final StringBuilder defaultStringBuf = new StringBuilder(1 << 13);\n        private final byte[] buf = new byte[1 << 13];\n        private int bufLen;\n        private int bufOffset;\n        private int next;\n\n        public FastInput(InputStream is) {\n            this.is = is;\n        }\n\n        private int read() {\n            while (bufLen == bufOffset) {\n                bufOffset = 0;\n                try {\n                    bufLen = is.read(buf);\n                } catch (IOException e) {\n                    bufLen = -1;\n                }\n                if (bufLen == -1) {\n                    return -1;\n                }\n            }\n            return buf[bufOffset++];\n        }\n\n        public void skipBlank() {\n            while (next >= 0 && next <= 32) {\n                next = read();\n            }\n        }\n\n        public String next() {\n            return readString();\n        }\n\n        public int readInt() {\n            int sign = 1;\n\n            skipBlank();\n            if (next == '+' || next == '-') {\n                sign = next == '+' ? 1 : -1;\n                next = read();\n            }\n\n            int val = 0;\n            if (sign == 1) {\n                while (next >= '0' && next <= '9') {\n                    val = val * 10 + next - '0';\n                    next = read();\n                }\n            } else {\n                while (next >= '0' && next <= '9') {\n                    val = val * 10 - next + '0';\n                    next = read();\n                }\n            }\n\n            return val;\n        }\n\n        public String readString(StringBuilder builder) {\n            skipBlank();\n\n            while (next > 32) {\n                builder.append((char) next);\n                next = read();\n            }\n\n            return builder.toString();\n        }\n\n        public String readString() {\n            defaultStringBuf.setLength(0);\n            return readString(defaultStringBuf);\n        }\n\n    }\n\n    static class FastOutput implements AutoCloseable, Closeable, Appendable {\n        private final Writer os;\n        private final StringBuilder cache = new StringBuilder(5 << 20);\n\n        public FastOutput(Writer os) {\n            this.os = os;\n        }\n\n        public FastOutput(OutputStream os) {\n            this(new OutputStreamWriter(os));\n        }\n\n        public FastOutput append(CharSequence csq) {\n            cache.append(csq);\n            return this;\n        }\n\n        public FastOutput append(CharSequence csq, int start, int end) {\n            cache.append(csq, start, end);\n            return this;\n        }\n\n        public FastOutput append(char c) {\n            cache.append(c);\n            return this;\n        }\n\n        public FastOutput append(int c) {\n            cache.append(c);\n            return this;\n        }\n\n        public FastOutput append(long c) {\n            cache.append(c);\n            return this;\n        }\n\n        public FastOutput println(int c) {\n            return append(c).println();\n        }\n\n        public FastOutput println(long c) {\n            return append(c).println();\n        }\n\n        public FastOutput println() {\n            cache.append(System.lineSeparator());\n            return this;\n        }\n\n        public FastOutput flush() {\n            try {\n                os.append(cache);\n                os.flush();\n                cache.setLength(0);\n            } catch (IOException e) {\n                throw new UncheckedIOException(e);\n            }\n            return this;\n        }\n\n        public void close() {\n            flush();\n            try {\n                os.close();\n            } catch (IOException e) {\n                throw new UncheckedIOException(e);\n            }\n        }\n\n        public String toString() {\n            return cache.toString();\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\n\nfor i in range(t):\n    n, k = map(int, input().split())\n    binstr = list(input())\n   \n    losearr = []\n    current = 0\n    active = 0\n    wincntr = 0\n    for result in binstr:\n        if result  == 'L':\n            if active:\n                wincntr += active\n                active = 0\n            current += 1\n        else:\n            if current:\n                losearr.append(current)\n                current = 0\n                active += 1\n            else:\n                if active:\n                    active += 2\n                else:\n                    active += 1\n    wincntr += active\n    start= 0\n    if current:\n        start += current\n    if binstr[0] == 'L' and losearr:\n        start += losearr[0]\n        del losearr[0]\n    #if binstr[-1] == 'L' and losearr:\n    #    start += losearr[-1]\n    #    del losearr[-1]\n    #print(losearr)\n    #print(start)\n    #print(wincntr)\n    losearr.sort()\n\n    for rest in losearr:\n        if k >= rest:\n            wincntr += rest * 2 + 1\n            k -= rest\n        else:\n            wincntr += k * 2\n            k = 0\n            break\n        \n    if k:\n        if k >= start:\n            if wincntr:\n                wincntr += 2 * start\n            else:\n                wincntr += 2 * start - 1\n        else:\n            if wincntr:\n                wincntr += k * 2\n            else:\n                wincntr += k * 2 - 1\n\n    print(wincntr)\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int inf = (int)1e9;\nconst int mod = (int)1e9 + 7;\nvector<int> g[200200];\nvoid solve() {\n  int n, k;\n  scanf(\"%d%d\\n\", &n, &k);\n  vector<char> A(n);\n  for (int i = 0; i < n; i++) {\n    scanf(\"%c\", &A[i]);\n  }\n  scanf(\"\\n\");\n  for (int i = 0; i <= n; i++) g[i].clear();\n  int last1 = -1;\n  for (int i = 0; i < n; i++) {\n    if (A[i] == 'W') {\n      if (last1 != -1) {\n        int len = i - last1;\n        if (len > 0) {\n          g[len].push_back(i);\n        }\n      }\n      last1 = i;\n    }\n  }\n  vector<int> order;\n  for (int i = 1; i <= n; i++) {\n    for (int j = 0; j < g[i].size(); j++) {\n      order.push_back(g[i][j]);\n    }\n  }\n  for (int i = 0; i < n; i++) {\n    if (A[i] == 'W') {\n      order.push_back(i);\n      break;\n    }\n  }\n  for (int i = 0; i < order.size(); i++) {\n    int pos = order[i];\n    int q = pos - 1;\n    while (k > 0 && q >= 0 && A[q] != 'W') {\n      A[q] = 'W';\n      k--;\n      q--;\n    }\n  }\n  bool hasSeen1 = false;\n  for (int i = 0; i < n; i++) {\n    if (A[i] == 'W') {\n      hasSeen1 = true;\n    }\n    if (A[i] == 'L' && hasSeen1 && k > 0) {\n      A[i] = 'W';\n      k--;\n    }\n  }\n  for (int i = 0; i < n; i++) {\n    if (A[i] == 'L' && k > 0) {\n      A[i] = 'W';\n      k--;\n    }\n  }\n  int ans = 0;\n  for (int i = 0; i < n; i++) {\n    if (A[i] == 'W') {\n      if (i >= 1 && A[i - 1] == 'W')\n        ans += 2;\n      else\n        ans += 1;\n    }\n  }\n  cout << ans << endl;\n}\nint main() {\n  int t;\n  scanf(\"%d\", &t);\n  for (int i = 0; i < t; i++) {\n    solve();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "from collections import deque\nfrom collections import OrderedDict\nimport math\n \nimport sys\nimport os\nimport threading\nimport bisect\n \nimport operator\n \nimport heapq\n \n \nfrom atexit import register\nfrom io import BytesIO\n \n#sys.stdin = BytesIO(os.read(0, os.fstat(0).st_size))\n#sys.stdout = BytesIO()\n#register(lambda: os.write(1, sys.stdout.getvalue()))\n \n \nimport io\n#input = io.BytesIO(os.read(0, os.fstat(0).st_size)).readline\n\n\nfrom sys import stdin, stdout\n#input = sys.stdin.readline\n#input = stdin.buffer.readline\n#print = stdout.write\n#a = [int(x) for x in input().split()]\n\n\n#import os,io\n#input=io.BytesIO(os.read(0,os.fstat(0).st_size)).readline\n\nimport os\nimport sys\nfrom io import BytesIO, IOBase\n\nBUFSIZE = 8192\nclass FastIO(IOBase):\n\tnewlines = 0\n \n\tdef __init__(self, file):\n\t\tself._fd = file.fileno()\n\t\tself.buffer = BytesIO()\n\t\tself.writable = \"x\" in file.mode or \"r\" not in file.mode\n\t\tself.write = self.buffer.write if self.writable else None\n \n\tdef read(self):\n\t\twhile True:\n\t\t\tb = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n\t\t\tif not b:\n\t\t\t\tbreak\n\t\t\tptr = self.buffer.tell()\n\t\t\tself.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n\t\tself.newlines = 0\n\t\treturn self.buffer.read()\n \n\tdef readline(self):\n\t\twhile self.newlines == 0:\n\t\t\tb = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n\t\t\tself.newlines = b.count(b\"\\n\") + (not b)\n\t\t\tptr = self.buffer.tell()\n\t\t\tself.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n\t\tself.newlines -= 1\n\t\treturn self.buffer.readline()\n \n\tdef flush(self):\n\t\tif self.writable:\n\t\t\tos.write(self._fd, self.buffer.getvalue())\n\t\t\tself.buffer.truncate(0), self.buffer.seek(0)\n \n \nclass IOWrapper(IOBase):\n\tdef __init__(self, file):\n\t\tself.buffer = FastIO(file)\n\t\tself.flush = self.buffer.flush\n\t\tself.writable = self.buffer.writable\n\t\tself.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n\t\tself.read = lambda: self.buffer.read().decode(\"ascii\")\n\t\tself.readline = lambda: self.buffer.readline().decode(\"ascii\")\n \n \n#sys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\n\n\n#sys.stdin = open(\"F:\\PY\\\\test.txt\", \"r\")\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\n\ndef printEr(ar1):\n    for i in range(len(ar1)):\n        print(ar1[i], end=\" \")\n\n\n    \nfor _ in range(int(input())):\n    n, k = map(int, input().split())  \n    tK = k\n    s = input()\n    if n==1:\n        if s[0]=='L' and k==0:\n            print(0)\n        else:\n            print(1)\n        continue\n    if k==1 and s.count('L')==n:\n        print(1)\n        continue\n    \n    if s.count('L')<=k:\n        print(2*n-1)\n        continue\n    if s.count('W')==0 and k!=0:\n        print(k*2-1)\n        continue\n    \n    dp = [0]*(n+1)\n    dp[0]=(1 if s[0]=='L' else 0)\n    \n    \n    \n    #need to improve\n    conLost = []\n    afWin = False\n    if s[0]=='W':\n        afWin = True\n    for i in range(1, len(s)):\n        if s[i]=='L':\n            dp[i]=dp[i-1]+1\n        else:\n            if dp[i-1]!=0:\n                if afWin==True:\n                    conLost.append(dp[i-1])\n                else:\n                    afWin=True\n    conLost.sort()\n    #print(conLost) \n    \n    s = s+'L'\n    conWin =0\n    for i in range(1, n+1):\n        if s[i]=='L' and s[i-1]=='W':\n            conWin+=1\n            \n            \n            \n            \n   # print(conWin) \n    for i in range(len(conLost)):\n        if conLost[i]<=k:\n            conWin-=1\n            k-=conLost[i]\n        else:\n            break\n    \n   # print(conWin)\n    answer = 2*(tK+s.count('W'))-conWin\n    print(answer)\n    \n    \n\n    \n    \n    \n    \n'''\n     \n    \n            \n            \n\n\nsys.exit(0)\nn  = int(input())\nlis = list(map(int, input().split()))\nanswer = 0\nfor i in range(n):\n    answer+=lis[i]-1\nif n==1:\n    print(n-1)\nelif n>32:\n    print(answer)\n    sys.exit(0)\nlis.sort()\nfor i in range(2, 50000):\n    localMin = 0\n    for j in range(n):\n        needVal = i**j\n        localMin+=abs(lis[j]-needVal)\n        if localMin>answer:\n            break\n    else:\n        answer = min(localMin, answer)\nprint(answer)\n     \n                \n    \n        \n    \n\n\nn = int(input())\nlis = list(map(int, input().split()))\nsumAr = 0\nfor i in range(n):\n    sumAr+=lis[i]\nk = (sumAr-(n*(n-1)//2))//n\ndif = sumAr - (k*n+(n*(n-1)//2))\n\nanswer=[]\nfor i in range(n):\n    if i<dif:\n        print(k+i+1)\n        #print(k+i+1, end=\" \")\n    else:\n        print(k+i)\n        #print(k+i, end=\" \")\n\n#print(*answer, sep=\" \")\n        \n\n\n\n\n\n\nsys.exit(0)\n\nclass Person:\n    def __init__(self, name, age):\n        self.name = name\n        self.age = age\n\np1 = Person(\"heelo\", 27)\n\nprint(help(Person))\n\n\nage = 26\nname = 'Swaroop'\nprint('\u0412\u043e\u0437\u0440\u0430\u0441 {} -- {} \u043b\u0435\u0442'.format(name, age))\nprint(help(object))\n\n\n\nfor _ in range(int(input())):\n    \n    n = int(input())\n    ar = list(map(int, input().split()))\n    dp = [0]*100005\n    for i in range(n):\n        dp[ar[i]]+=1\n    ar.clear()\n    for i in range(len(dp)):\n        if dp[i]!=0:\n            ar.append(dp[i])       \n    ar.sort()\n    maxC = ar[len(ar)-1]\n    sumA = sum(ar)\n    answer=0\n    for i in range(len(ar)):\n        if ar[i]==maxC:\n            answer+=1\n            sumA-=maxC\n    answer-=1\n    answer+= min(sumA//(maxC-1), len(ar)-1)\n    print(answer)\n    #sys.exit(0)   \n         \n    \n\n\n\n\ndef maxDisjointIntervals(list_):\n    list_.sort(key=lambda x: x[1])\n    print(list_[0][0], list_[0][1])\n    r1 = list_[0][1]\n    for i in range(1, len(list_)):\n        l1 = list_[i][0]\n        r2 = list_[i][1]\n        if l1>r1:\n            print(l1, r2)\n            r1 = r2\n\nif __name__ ==\"__main__1\":\n    N=4\n    intervals = [[1, 4], [2, 3], [4,6], [8,9]]\n    maxDisjointIntervals(intervals)\n    \n    '''\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    "
        },
        {
            "language": 3,
            "solution": "import sys\nrd = sys.stdin.readline\n\nt = int(rd())\n\nfor _ in range(t):\n    n,k = map(int,rd().split())\n    s = rd()\n\n    if n == 1:\n        if s[0] == \"L\" and k == 0:\n            print(0)\n        else:\n            print(1)\n        continue\n\n    gap = [0]*(n-1)\n    renpai = 0\n    score = 0\n    startrenpai,lastrenpai = 0,0\n    for i in range(n):\n        if s[i] == \"L\":\n            renpai += 1\n            if i == n-1:\n                lastrenpai = renpai\n        else:\n            if i >= 1 and s[i-1] == \"W\":\n                score += 2\n            else:\n                score += 1\n            if renpai == i:\n                startrenpai = renpai\n            else:\n                gap[renpai] += 1\n            renpai = 0\n\n    if n == lastrenpai:\n        print(max(0,2*min(k,n)-1))\n        continue\n\n    now = 1\n    while True:\n        if now == n-1:\n            score += 2*min(k,startrenpai + lastrenpai)\n            break\n        if gap[now] > 0:\n            if k >= now:\n                score += 2*now + 1\n                k -= now\n            else:\n                score += 2*k\n                break\n            gap[now] -= 1\n        else:\n            now += 1\n\n    print(score)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 2e5 + 7, inf = 0x3f3f3f3f, mod = 1e9 + 7;\nint a[maxn];\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  int kase;\n  cin >> kase;\n  while (kase--) {\n    int n, k;\n    cin >> n >> k;\n    int ans = 0;\n    string s;\n    cin >> s;\n    int last = -1;\n    vector<int> v;\n    int sz = 0;\n    for (int i = 0; i < s.size(); ++i) {\n      if (s[i] == 'W') {\n        if (i && s[i - 1] == 'W')\n          ans += 2;\n        else {\n          if (last != -1) v.push_back(i - last - 1);\n          ans++;\n        }\n        last = i;\n        sz++;\n      }\n    }\n    if (sz == 0) {\n      cout << max(0, 2 * (k - 1) + 1) << '\\n';\n      continue;\n    }\n    sort(v.begin(), v.end());\n    for (auto &it : v) {\n      if (k >= it) {\n        ans += 2 * it + 1, k -= it;\n      } else {\n        ans += 2 * k;\n        k = 0;\n        break;\n      }\n    }\n    int p1 = 0;\n    while (s[p1] == 'L') p1++;\n    ans += min(k, p1) * 2;\n    k = max(0, k - p1);\n    int p2 = n - 1, len = 0;\n    ;\n    while (s[p2] == 'L') p2--, len++;\n    ans += min(k, len) * 2;\n    cout << min(ans, 2 * (n - 1) + 1) << '\\n';\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import math\nfrom sys import stdin\nfrom sys import setrecursionlimit\nsetrecursionlimit(100000)\ndef put():  return  map(int, stdin.readline().split())\nfor _ in range(int(input())):\n\tn,k=put()\n\ts=input()\n\tmx=2*n-1\n\tl=[]\n\tind=-1\n\tans=0\n\t# if(s==\"L\" and k>)\n\tif(s.count(\"W\")==0 and k>0):\n\t\tprint(2*k-1)\n\telse:\n\t\tif(s[0]==\"W\"):\n\t\t\tans+=1\n\t\tfor i in range(1,len(s)):\n\t\t\tif(s[i]==\"W\" and s[i-1]==\"W\"):\n\t\t\t\tans+=2\n\t\t\telif(s[i]==\"W\"):\n\t\t\t\tans+=1\n\t\t\n\t\tfor i in range(len(s)):\n\t\t\tif(ind==-1 and s[i]==\"W\"):\n\t\t\t\tind=i\n\t\t\telif(s[i]==\"W\" and (i-ind)>1):\n\t\t\t\t# print(i,i-ind-1)\n\t\t\t\tl.append(i-ind-1)\n\t\t\t\tind=i\n\t\t\telif(s[i]==\"W\"):\n\t\t\t\tind=i\n\t\tl.sort()\n\t\tind=0\n\t\twhile(ind<len(l) and k>=0):\n\t\t\tif(l[ind]<=k):\n\t\t\t\tans+=2*l[ind]+1\n\t\t\t\tk-=l[ind]\n\t\t\telse:\n\t\t\t\tans+=2*k\n\t\t\t\tk=0\n\t\t\tind+=1\n\t\tif(k>0):\n\t\t\tans+=2*k\n\t\tprint(min(mx,ans))"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class codeforces {\n//   static int gcd(int a,int b) {\n//\t   if(b==0)return a;\n//\t   return gcd(b,a%b);\n//   }\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint t = sc.nextInt();\n\t\twhile (t-- > 0) {\n\t\t\tint n = sc.nextInt();\n\t\t\tint k = sc.nextInt();\n\t\t\tsc.nextLine();\n\t\t\tchar c[] = sc.nextLine().toCharArray();\n\t\t\tint l = 0;\n\t\t\tint w = 0;\n\t\t\tArrayList<Integer> ll = new ArrayList<>();\n\t\t\t// ll.add(-1);\n\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tif (c[i] == 'W')\n\t\t\t\t\tll.add(i);\n\t\t\t}\n\t\t\t// ll.add(n);\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tchar ch = c[i];\n\t\t\t\tif (ch == 'L')\n\t\t\t\t\tl++;\n\t\t\t\telse\n\t\t\t\t\tw++;\n\t\t\t}\n\t\t\tif (l <= k) {\n\t\t\t\tSystem.out.println(2 * n - 1);\n\t\t\t} else {\n\t\t\t\tTreeMap<Integer, Integer> tm = new TreeMap<>();\n\t\t\t\tfor (int i = 1; i < ll.size(); i++) {\n\t\t\t\t\tint d = ll.get(i) - ll.get(i - 1) - 1;\n\t\t\t\t\tint cnt = tm.getOrDefault(d, 0);\n\t\t\t\t\ttm.put(d, cnt + 1);\n\t\t\t\t}\n\n\t\t\t\tint ans = 0;\n\t\t\t\tif (c[0] == 'W')\n\t\t\t\t\tans++;\n\t\t\t\tfor (int i = 1; i < n; i++) {\n\t\t\t\t\tchar ch = c[i];\n\t\t\t\t\tif (ch == 'W') {\n\t\t\t\t\t\tif (c[i - 1] == 'W')\n\t\t\t\t\t\t\tans = ans + 2;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tans = ans + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (Map.Entry<Integer, Integer> e : tm.entrySet()) {\n\t\t\t\t\tint dif = e.getKey();\n\t\t\t\t\tif (dif == 0)\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tint cnt = e.getValue();\n\t\t\t\t\tif (k >= dif * cnt) {\n\t\t\t\t\t\tans = ans + cnt * (2 * dif + 1);\n\t\t\t\t\t\tk = k - cnt * dif;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (k >= dif) {\n\t\t\t\t\t\t\twhile (k >= dif && cnt > 0) {\n\t\t\t\t\t\t\t\tans = ans + 2 * dif + 1;\n\t\t\t\t\t\t\t\tk = k - dif;\n\t\t\t\t\t\t\t\tcnt--;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (cnt > 0 && k > 0) {\n\t\t\t\t\t\t\tans = ans + 2*k;\n\t\t\t\t\t\t\tk = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\t//System.out.println(\"k=\" + k);\n\t\t\t\tif (k > 0)\n\t\t\t\t\tans += k * 2;\n\t\t\t\tif (w == 0)\n\t\t\t\t\tans = Math.min(l * 2 - 1, k * 2 - 1);\n\t\t\t\tif (ans < 0)\n\t\t\t\t\tans = 0;\n\t\t\t\tSystem.out.println(ans);\n\t\t\t}\n\n\t\t}\n\t}\n}"
        },
        {
            "language": 1,
            "solution": "def score(s):\n    ans=0\n    for i in range(len(s)):\n        if i==0:\n            if s[i]=='W':\n                ans+=1\n        else:\n            if s[i]=='W':\n                if s[i-1]=='W':\n                    ans+=2\n                else:\n                    ans+=1\n    return ans\n\nfor _ in range(int(input())):\n    n,k=map(int,raw_input().split())\n    s=raw_input()\n\n    def solve(s,n,k):\n        if k==0:\n            return score(s)\n        l=s.count('L')\n        if l <= k:\n            return (n * 2) - 1\n\n        if n==1:\n            if s=='L' and k==0:\n                return 0\n            else:\n                return 1\n\n        start=[]\n        end=[]\n        flag=False\n        ans=0\n        if s[0]=='W':\n            ans+=1\n            flag=True\n            start.append(0)\n\n        for i in range(1,n):\n            if s[i]=='W':\n                if flag:\n                    ans+=2\n                else:\n                    start.append(i)\n                    flag=True\n                    ans+=1\n            else:\n                if flag:\n                    end.append(i-1)\n                    flag=False\n\n        dist=[]\n        for i in range(len(end)):\n            if i+1<len(start):\n                dist.append(start[i+1]-end[i]-1)\n            else:\n                break\n\n        dist.sort()\n\n        for i in range(len(dist)):\n            if k>=dist[i]:\n                k-=dist[i]\n                l-=dist[i]\n                ans+=2*dist[i]+1\n            else:\n                break\n\n        if k>0:\n            if ans>0:\n                ans+=2*min(k,l)\n            else:\n                ans+=2*min(k,l)-1\n\n        return ans\n\n    print(solve(s,n,k))\n\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\n\nfor _ in range(t):\n    n, k = map(int, input().split())\n    s = str(input())\n    cw = 0\n    cnt = 0\n    lcount = -1\n    llen = dict()\n    for i in range(n):\n        if i == 0 and s[i] == 'W':\n            cnt += 1\n            lcount = 0\n            cw += 1\n        else:\n            if s[i] == 'W':\n                if s[i - 1] == 'W':\n                    cnt += 2\n                else:\n                    cnt += 1\n                cw += 1\n\n                if lcount > 0:\n                    if lcount not in llen.keys():\n                        llen[lcount] = 0\n\n                    llen[lcount] += 1\n                    lcount = 0\n                elif lcount < 0:\n                    lcount = 0\n            else:\n                if lcount >= 0:\n                    lcount += 1\n    cl = n - cw\n\n    if k == 0:\n        print(cnt)\n    else:\n        lens = []\n        for e in llen.keys():\n            lens.append(e)\n        lens.sort()\n\n        delta = 0\n        for l in lens:\n            if k < l:\n                break\n\n            count = min(k//l, llen[l])\n            delta += count * (l * 2 + 1)\n            k -= count * l\n            cl -= count * l\n\n        if k > 0:\n            if k <= cl:\n                if cnt == 0:\n                    delta += (k - 1) * 2 + 1\n                else:\n                    delta += k * 2\n            else:\n                delta += cl * 2\n\n        print(cnt + delta)\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor tests in range(t):\n    n,k=map(int,input().split())\n    S=input().strip()\n\n    if not (\"W\" in S):\n        if k==0:\n            print(0)\n        else:\n            print(min(n,k)*2-1)\n        continue\n\n    LIST=[[S[0],0]]\n\n    for s in S:\n        if s==LIST[-1][0]:\n            LIST[-1][1]+=1\n        else:\n            LIST.append([s,1])\n\n    #print(LIST)\n\n    if LIST[0][0]==\"L\":\n        F=LIST.pop(0)\n        F=F[1]\n    else:\n        F=-1\n    if LIST and LIST[-1][0]==\"L\":\n        L=LIST.pop()\n        L=L[1]\n        \n    else:\n        L=-1\n\n    #print(LIST,F,L)\n\n    # LIST: +2 ,full bonus: +1\n    # L:+2\n    # F:+2\n\n    ANS=0\n    LS=[]\n    for x,y in LIST:\n        if x==\"W\":\n            ANS+=y*2-1\n        else:\n            LS.append(y)\n\n    LS.sort()\n\n    #print(ANS,LS,L,F)\n    \n    for ls in LS:\n        if k>=ls:\n            k-=ls\n            ANS+=ls*2+1\n        else:\n            ANS+=k*2\n            k=0\n\n    if L!=-1:\n        if k>=L:\n            ANS+=2*L\n            k-=L\n        else:\n            ANS+=k*2\n            k=0\n\n    #print(ANS)\n\n    if F!=-1:\n        if k>=F:\n            ANS+=2*F\n        else:\n            ANS+=2*k\n\n    print(ANS)\n        \n\n    \n"
        },
        {
            "language": 1,
            "solution": "\nfor oo in range(input()): \n    n,k=map(int,raw_input().split())\n    a=raw_input()\n    cs=0 \n    ok=0\n    for j in a: \n        if j==\"W\":\n            if ok:\n                cs+=2\n            else:\n                ok=1\n                cs+=1\n        else: \n            ok=0 \n    \n    p=[] \n    il=-1\n    for j in range(n): \n        if a[j]==\"W\": \n            break\n        else: \n            il=j \n    v=[] \n    \n    \n    while j<n:\n        if a[j]==\"W\": \n            v.append([a[j],0])\n            for kv in range(j,n): \n                if a[kv]!=a[j]:\n                    break \n                else: \n                    pc=v.pop() \n                    v.append([pc[0],pc[1]+1]) \n                \n            \n                    if kv==n-1:\n                        kv=n\n                        break\n            j=kv\n            \n            \n        elif a[j]==\"L\": \n            v.append([a[j],0])\n            for kv in range(j,n): \n                if a[kv]!=a[j]:\n                    break \n                else: \n                    pc=v.pop() \n                    v.append([pc[0],pc[1]+1]) \n                    if kv==n-1:\n                        kv=n\n                        break\n            \n            j=kv\n    \n        \n    p=[] \n    \n    for i in range(len(v)): \n        if v[i][0]==\"W\": \n            if (i+2)<len(v):\n                p.append(v[i+1][1]) \n    \n    p=sorted(p)\n    j=0 \n \n    for kp in range(len(p)): \n        if k==0: \n            break\n        if p[kp]<=k: \n            cs+=1 \n            cs+=2*p[kp] \n            k-=p[kp] \n        else: \n            \n            cs+=2*(k) \n            k=0 \n    \n    if k: \n        if il==n-1: \n            cs=2*k-1 \n        else: \n            if v[-1][0]==\"L\" and len(v)>1:\n                p=v[-1][1] \n            else:\n                p=0\n            cs+=2*min(1+il+p,k) \n    print cs"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n,k=map(int,input().split())\n    s=list(input())\n    l=[]\n    prev=0\n    c=0\n    f=0\n    for i in range(n):\n        if s[i]=='L':\n            if f==0:\n                ind=i\n                f=1\n            prev=i\n            c+=1\n        else:\n            if c!=0:\n               l.append([c,ind,prev])\n            c=0\n            f=0\n    if c!=0:\n               l.append([c,ind,prev])\n    if s.count('L')<=k:\n        print(2*n-1)\n    elif s.count('L')==n:\n        print(max(2*k-1,0))\n    else:\n     l.sort(key=lambda x:x[0])\n     for i in range(len(l)):\n        if l[i][1]==0 or l[i][-1]==n-1:\n            continue\n        for j in range(l[i][1],l[i][-1]+1):\n            if k==0:\n                break\n            s[j]='W'\n            k=k-1\n        if k==0:\n            break\n     ans=0\n     f=0\n     for i in range(n):\n            if s[i]=='L':\n                f=0\n            else:\n                if f==0:\n                    ans+=1\n                    f=1\n                else:\n                    ans+=2\n     if k==0:\n        print(ans)\n     else:\n        print(ans+k*2)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nchar a[100000 + 200];\nint lose[100000 + 100];\nint main() {\n  int T;\n  cin >> T;\n  while (T--) {\n    int len, k;\n    memset(lose, 0, sizeof(lose));\n    cin >> len >> k;\n    scanf(\"%s\", a);\n    int ans = 0, L = 0, c = 0, Lnum = 0;\n    bool flag = false;\n    for (int i = 0; i < len; i++) {\n      if (a[i] == 'W') {\n        flag = true;\n        if (L != 0) {\n          lose[++c] = L;\n          L = 0;\n        }\n        if (a[i - 1] != 'W')\n          ans += 1;\n        else\n          ans += 2;\n      } else if (a[i] == 'L') {\n        Lnum++;\n        if (flag) L++;\n      }\n    }\n    if (L) {\n      lose[++c] = L;\n      L = 0;\n    }\n    if (Lnum == len) {\n      printf(\"%d\\n\", max(0, min(k, len) * 2 - 1));\n      continue;\n    }\n    if (a[len - 1] == 'L') {\n      c--;\n    }\n    sort(lose + 1, lose + c + 1);\n    int ori = 1;\n    while (k && lose[ori] != 0) {\n      if (k >= lose[ori] && ori <= c) {\n        k -= lose[ori];\n        ans += lose[ori] * 2 + 1;\n        Lnum -= lose[ori];\n        ori++;\n      } else {\n        break;\n      }\n    }\n    if (k > 0 && Lnum > 0) {\n      int temp = min(k, Lnum);\n      ans += temp * 2;\n    }\n    printf(\"%d\\n\", ans);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin\ninput = stdin.readline\nq = int(input())\nfor _ in range(q):\n    n, k = map(int,input().split())\n    s = input()\n    if n == 1:\n        if s.count('W') + k >= 1:\n            print(1)\n        else:\n            print(0)\n    else:\n        s = s[:n]\n        if s.count('L') == n:\n            du = 2*k-1\n            du = min(du, 2*n-1)\n            if k == 0:\n                du = 0\n            print(du)\n        else:\n            k = min(k, s.count('L'))\n            los = []\n            count = 0\n            for i in range(n):\n                if s[i] == 'L':\n                    count += 1\n                else:\n                    if count > 0:\n                        los.append(count)\n                        count = 0\n            if count > 0:\n                los.append(count)\n            if s[0] == 'L':\n                los.pop(0)\n            if s[-1] == 'L' and len(los)>0:\n                los.pop(-1)\n            los.sort()\n            win = []\n            count = 0\n            for i in range(n):\n                if s[i] == 'W':\n                    count += 1\n                else:\n                    if count > 0:\n                        win.append(count)\n                        count = 0\n            if count > 0:\n                win.append(count)\n            wyn = 0\n            for x in win:\n                wyn += (2*x-1)\n            wyk = 0\n            i = 0\n            while i < len(los) and wyk + los[i] <= k:\n                wyn += (2*(los[i]+1)-1)\n                wyk += los[i]\n                i += 1\n            dup = k-wyk\n            wyn += dup*2\n            wyn = min(wyn, 2*n-1)\n            print(wyn)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\n#pragma GCC optimize(2)\nusing namespace std;\nconst int N = 100010;\nchar s[N];\nint n, k;\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie();\n  cout.tie(0);\n  int T = 1;\n  cin >> T;\n  while (T--) {\n    cin >> n >> k;\n    cin >> s + 1;\n    priority_queue<int, vector<int>, greater<int>> q1, q2, q3;\n    priority_queue<int> p1, p2;\n    int cnt = 0;\n    for (int i = 1; i <= n; i++) {\n      if (s[i] == 'L')\n        cnt++;\n      else {\n        if (!cnt) continue;\n        if (i > cnt + 1 && s[i - cnt - 1] == 'W' && i <= n && s[i] == 'W')\n          q1.push(cnt);\n        else if (i > cnt + 1 && s[i - cnt - 1] == 'W' || i <= n && s[i] == 'W')\n          q2.push(cnt);\n        else\n          q3.push(cnt);\n        cnt = 0;\n      }\n    }\n    if (cnt) {\n      if (n > cnt && s[n - cnt] == 'W')\n        q2.push(cnt);\n      else\n        q3.push(cnt);\n    }\n    int res = 0;\n    while (k && q1.size()) {\n      auto v = q1.top();\n      q1.pop();\n      if (k >= v)\n        res += 2 * v + 1, k -= v;\n      else\n        p1.push(v);\n    }\n    while (k && q2.size()) {\n      auto v = q2.top();\n      q2.pop();\n      if (k >= v)\n        res += 2 * v, k -= v;\n      else\n        p2.push(v);\n    }\n    while (k && (p1.size() || p2.size())) {\n      res += 2 * k;\n      k = 0;\n    }\n    if (k && q3.size()) {\n      auto v = q3.top();\n      res = 2 * min(k, v) - 1;\n    }\n    for (int i = 1; i <= n; i++) {\n      if (s[i] == 'W') {\n        if (i > 1 && s[i - 1] == 'W')\n          res += 2;\n        else\n          res++;\n      }\n    }\n    cout << res << '\\n';\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "// No sorcery shall prevail. //           \nimport java.util.*;\nimport java.io.*;\npublic class InVoker {\n\t//Variables\n\tstatic long mod = 1000000007;\n\tstatic long mod2 = 998244353;\n\tstatic FastReader inp= new FastReader();\n\tstatic PrintWriter out= new PrintWriter(System.out);\n\tpublic static void main(String args[]) {\t\t    \t\n\t   \tInVoker g=new InVoker();\n\t   \tg.main();\n\t   \tout.close();\n\t}\n\t\n\t\n\t\n\t//Main\n\tvoid main() {\n\t\t\n\t\tint t=inp.nextInt();\n\t\twhile(t-->0) {\n\t\t\tint n=inp.nextInt();\n\t\t\tint k=inp.nextInt();\n\t\t\tchar s[]=inp.next().toCharArray();\n\t\t\tArrayList<Integer> starts=new ArrayList<>();\n\t\t\tfor(int i=1;i<n;i++) {\n\t\t\t\tif(s[i]=='L' && s[i-1]=='W') starts.add(i);\n\t\t\t}\n\t\t\tArrayList<Segment> segs=new ArrayList<>();\n\t\t\tfor(int leftIdx: starts) {\n\t\t\t\tint c=0,j=leftIdx;\n\t\t\t\twhile(j<n && s[j++]=='L') {\n\t\t\t\t\tc++;\n\t\t\t\t}\n\t\t\t\tif(leftIdx+c!=n) segs.add(new Segment(leftIdx,leftIdx+c-1,c));\n\t\t\t}\n\t\t\tCollections.sort(segs);\n\t\t\t//for(Segment x: segs) out.println(x.l+\" \"+x.r+\" \"+x.len);\n\t\t\tfor(Segment x: segs) {\n\t\t\t\tint r=x.r;\n\t\t\t\twhile(k>0 && r>=x.l) {\n\t\t\t\t\ts[r--]='W';\n\t\t\t\t\tk--;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(k>0) {\n\t\t\t\tint i=0;\n\t\t\t\tfor(;i<n;i++) {\n\t\t\t\t\tif(s[i]=='W') break;\n\t\t\t\t}\n\t\t\t\tfor(i--;i>=0;i--) {\n\t\t\t\t\tif(k-->0) s[i]='W';\n\t\t\t\t\telse break;\n\t\t\t\t}\n\t\t\t\ti=n-1;\n\t\t\t\tfor(;i>=0;i--) {\n\t\t\t\t\tif(s[i]=='W') break;\n\t\t\t\t}\n\t\t\t\tfor(i++;i<n;i++) {\n\t\t\t\t\tif(k-->0) s[i]='W';\n\t\t\t\t\telse break;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tout.println(ans(s));\n\t\t}\n\t\t\n\t\n\t\t\n\t}\n\t\n\tint ans(char s[]) {\n\t\tint n=s.length;\n\t\tint cur=0,gg=0;\n\t\tint start=-1;\n\t\tfor(int i=0;i<n;i++) {\n\t\t\tif(s[i]=='W') {\n\t\t\t\tif(cur==0) {\n\t\t\t\t\tcur=1;\n\t\t\t\t\tgg+=cur;\n\t\t\t\t}else {\n\t\t\t\t\tgg+=cur+1;\n\t\t\t\t}\n\t\t\t}else {\n\t\t\t\tcur=0;\n\t\t\t}\n\t\t}\n\t\treturn gg;\n\t}\n\t\n\tclass Segment implements Comparable<Segment> {\n\t\tint l, r, len;\n\t\tSegment () {}\n\t\tSegment (int l_, int r_, int d_) {\n\t\t    this.l = l_;\n\t\t    this.r = r_;\n\t\t    this.len = d_;\n\t\t}\n\t\t@Override\n\t\tpublic int compareTo(Segment o) {\n\t\t    return (int)((len - o.len) !=0 ? len-o.len : o.r - r);\n\t\t}\n    }\n\t\n\t\n\t\n\t\n\t/*********************************************************************************************************************************************************************************************************\n\t * ti;.                               .:,:i:         :,;;itt;.        fDDEDDEEEEEEKEEEEEKEEEEEEEEEEEEEEEEE###WKKKKKKKKKKKKKKKKKKKKWWWWWWWWWWWWWWWWWWW#WWWWWKKKKKEE      :,:.    f::::. .,ijLGDDDDDDDEEEEEEE*\n\t *ti;.                               .:,:i:          .:,;itt;:      GLDEEGEEEEEEEEEEEEEEEEEEDEEEEEEEEEEE#W#WEKKKKKKKKKKKKKKKKKKKKKKKWWWWWWWWWWWWWWWWWWWWWWKKKKKKG.     .::.      f:,...,ijLGDDDDDDDDEEEEEE *\n\t *ti;.                               .:,:i:            :,;;iti,    :fDDEEEEEEEEEEEEEEEKEEEEDEEEEEEEEEEEW##WEEEKKKKKKKKKKKKKKKKKKKKKWWWWWWWWWWWWWWWWWWWWWWWKKKKKKEG     .::.       .f,::,ijLGDDDDDDDDEEEEEE *\n\t *ti;.                               .:,:i:             .,,;iti;.  LDDEEEEEEEEEEKEEEEWEEEDDEEEEEEEEEEE#WWWEEEEEKKKKKKKKKKKKKKKKKKKKKKKKKWWWWWWWWWWWWWWWWWWWKKKKKEDj    .::.        .:L;;ijfGDDDDDDDDDEEEEE *\n\t *ti;.                               .:,:i:              .:,;;iii:LLDEEEEEEEEEEEKEEEEEEEEDEEEEEEEEEEEW#WWEEEEEEEKKKKKKKKKKKKKKKKKKKKKKKKKWWKWWWWWWWWWWWWWWKKKKKKKEL    .::.         .:;LijLGGDDDDDDDDEEEEE *\n\t *ti;.                               .:,:;:                :,;;ittfDEEEEEEEEEEEEEEEEKEEEGEEEEEEEEEEEKWWWEEEEEEEEEKKKKKKKKKKKKKKKKKKKKKKKKKKWWWWWWWWWWWWWWWKKKKKKKELj   .::.          :,;jffGGDDDDDDDDDEEEE *\n\t *ti;.                               .:,:i:                 .,;;tGGDEEEEEEEEEEEKEEEKEEEDEEEEEEEEEEEEWWWEEEEEEEEEEEEKKKKKKKKKKKKKKKKKKKKKKKKKKWWWWWWKWWWWWWKKKKKKKEEL   .::.          .:;itDGGDDDDDDDDDEEEE *\n\t *ti;.                               .:::;:                   :;ifDEEEEEEEEEEEEKEEEKEEEEEEEEEEEEEEEWWWEEEEEEEEEEEEEEKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKW#WWWKKKKKKKKEEf   .::.           :,itfGEDDDDDDDDDDDEE *\n\t *ti;.                               .:::;:                    :GGEEEEEEEEEEEKEKEEKEEEEEEEEEEEEEEEEWWEEEEEEEEEEEEEEEEEKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKW#WKKKKKKKKKEEDG  .::.           .,;jfLGKDLDDDDDDEEDD *\n\t *ti;.                               .:::;:                     fDEEEEEEKKKKKKKKKEKEEEEEEEEEEEEEEE#WEEEEEEEEEEEEEEEEEEKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKW#KKKKKKKKKKEEf .:::.           .,;tfLGDEDDDDDDDDEEE *\n\t *ti;.                                :::;:                    fDEEEEEEKKKKKKKKKKWKEEEEEEEEEEEEEEEWKEEEEEEEEEEEEEEEEEEEEKEKKKKKKKKKKKKKKKKKKKKKKKKKKKKW##KKKKKKKKKEEft :::.           .,;tfLGDDDKDDDDDDDDD *\n\t *ti;.                                .::;:                    fDEEEEEEKKKKKKKWKKKKKEEEEEEEEEEEEE#WEEWEEEEEDEEDEEEEEEEEEEEEKKKKKKKKKKKKKKKKKKKKKKKKKKKKW#WKKKKKKKKEEGG :,:.           .,;tfLGGDDDKDDDDDDDD *\n\t *ti;.                                .:.;:                   tGDEEEEKKKKKKKKKKKKKKKKKEEEEEEEEEEEWEEKWEEEEEEEDEEEEEEEEEEEEEEKEKKKKKKKKKKKKKKKKKKKKKKKKKKWWWKKKKKKKEEDf :::.           .,;tfLGGDDDDEDDDDDDD *\n\t *ti;.                                .::;:                   fDEEEEEKKKKKKKKKKKWKKKKKKKKEEEEEEEWWEEWEEEEEEEEEEEEEEEEEEEEEEEEEEKKKKKKKKKKKKKKKKKKKKKKKKKW##KKKKKKKEEEft.::.           .,;tfLGGDDDDDDEDDDDD *\n\t *ti;.                                .:.;:                  tGDEEEKKKKKKKKKKKKKKKKKKKKKKEKEEEEE#EEWWEEEEEEEEEEEEEEEEEEEEEEEEEEEEKKKKKKKKKKKKKKKKKKKKKKKKW#WKKKKKKEEEGD:::.           .,;tfLGGDDDDDDDEDDDD *\n\t *ti;.                                .:.,.                  LDEEEEKKKKKKKKKKWKWKKKKKKKKKKKKEEEKWEKW#EEEEEEEEEEEEEEEEKEEEEEEEEEEEEEEEKKKKKKKKKKKKKKKKKKKKW##KKKKKKEEEEf,,:.           .,;tfLGGDDDDDDDDEDDD *\n\t *ti;.                               ..:.,.                 LGDEEEEKKKKKKKKKKWKKKKKKKKKKKKKKKKKWEEW#WEEEEEEEEEEEEEEEKEEEEEEEEEEEEEEEEEEEKEKKKKKKKKKKKKKKKK##KKKKKEEEEEfi;,.           .,;tfLGGDDDDDDDDDKDD *\n\t *tt;.                                .:.,:                 jDEEEEKKKKKKKKKKWWKKKKKKKKKKKKKKKKKWKE#WWEEEEEEEEEEEEEEWEEEEEEEEEEEEEEEEEEEEEEEKKKKKKKKKKKKKKKKWWKKKKEEEEDfG;,:           .,;tfLGGDDDDDDDDDDKD *\n\t *tii,.                               .:.,.                tGDEEEEKKKKKKKKKKWWWKKKKKKKKKKKKKKKWKKWWWKEEEEEEEEEEEEEKEEEEEEEEEEEEEEEEEEEEEEEEEEEEEKKKKKKKKKKKW#KKKKEEEEDGGi;,.          .,;tfLGGDDDDDDDDDDDE *\n\t *ti;;,:.                             .:.,:                fDEEEEKKKKKKKKKKKWKKKKKKKKKKKKKKKKKWEK#WWKEEEEEEEEEEEEDEEEEEEEEEEEEEEGEEEEEEEEEEEEEEEEEEEKKKKKKKWWKKEEEEEEDDf;;;,.         .,;tfLGGDDDDDDDDDDDD *\n\t *tii;,,:..                           ...,.               ;LEEEEEKKKKKKWKKKKWKKKKKKKKKKKKKKKKKEKKW#WEEEEEEEEEEEEEjEEEEEEEEEKEEEEGEEEEEEEEEKEEEEEEEEEEEEEEEEE#WKEEEEEEDDf;;;;,:        .,itfLGGDDDDDDDDDDDD *\n\t *ti;,,,,,:.                          ...,.               LDEEEEKKKKKKKKKKKWWWKKKKKKKKKKKKKKKWKK#W#WEEEEEEEEEEEDDLEEEEEEEEEWEEEEDEEEEEEEEEKEEEEEEEEEEEEEEEEEWWEEEEEEEDDfj,,,,,:.      .,itfGGGDDDDDDDDDDDD *\n\t *tii,,,,::::.                        ...,:              .fDEEEEKKKKKKWKKKKWWWKKKKKKKKKKKKKKKEKKW#WWEEEEEEEEEEEKiKEEKEEEEEEWEEEEDEEEEEEEEEEEEEEEEEEEEEEEEEEEWWEEEEEEEDDLD:::,,,:.     .,ijfGGGDDDDDDDDDDDD *\n\t *ti;:::::::::..                      .:.,:              LDEEEEKKKKKKKWKKKKWWKKKKKKKKKKKKKKKKtKKWWWWKEEEEEEEEEDiiDEEEEEEEEWWEEEEEEDEEEEEEEEEEEEEEEEEEEEEEEEEEWKEEEEEDDDGL:. .:,,,:    .,ijLGGGDDDDDDDDDDDD *\n\t *tt;. .::::::::..                    ...,:             :fDEEEKKKKKKKKKKKKWW#KKKKKKKKKKKKKKKKfKKWWWWKEEEEEEEEDti,DEKEEEEEEWWEEEDEEEEEEEEEKEEEEEEEEEEEEEDEEEEE#WEEEEEGGDGf:.  .:,;,:.  .,ijLGGDDDDDDDDDDDDD *\n\t *tt;.   .:::::::..                   ...,:             GDEEEKKKKKKKKWKKKKWWWKKKWKKKKKKKWWWKDEKLWWWWKKEEEEEEDEi,LDEEEEEEEEWWEEEEEEEEEEEEEEEEEEEEEEEEEDEDEEEEEW#EEEEDDDDGf,.    :,,,:...,ijLGGGDDDDDDDDDDDD *\n\t *tt;.    .....::::..                 ...,:             fDEEEKKKKKKKKWKKKKWWWWKKKWKKKKKKKKKKfWKiWWW#KKEEEEEEEi;.EDfEEEDEEiWWEEEEEEEEEEEEDGKEEEEEEEEEEDEEEEEEEWWEEEEDDDGGLi.     .,;,:::,ijLGGGDDDDDDDDDDDD *\n\t *tt;.      ....:::::.                ...,.            iDEEEEKKKKKKKKWKKWKWWWWWKKWWWKKKKKKKKtWKt#WWWKKEEEEEDji..DDKDDEDEGiWKEEEEEEEEEEDDEjEEEEEEEEEEEDEEEEEEEKWKEEDDDDGGff.      .:,;,,;ijLGGGDDDDDDDDDDDD *\n\t *tt;.        ....::::..              .:.,:           .LDEEEKKKKKKKKKKKKWWWWKWWWWWWWWWWKKKKWtKKiDWWWKKKEEEEKi:..DEDDDDDDiiWKEEEEEEEEEEDDEijDEEEEEKEEEEEEEEEEEEWWEEGDDDGGLG.       .:,;;iijLGGGDDDDDDDDDDDD *\n\t *tt;.          .....:::..            ...,.           .fEEEEKKKKKKKKWKKKKWWWWWWWWWWWWWWKWKKKiKDiLWWWWKEEEEEi,..fD:DDDDDti;WEEEEEEEEEEKDDi:iDDEEEEWEEEEEEEEEEEE#WEEGDDDDGGG.         :,iitjLGGGDDDDDDDDDDDD *\n\t *tti.            .....:::..          ...,.           GDEEEKKKKKKKKKWKKKWWW#WWWWWWWWWWWKWKKjiEjitWWWKKWEEEDi...DDLDDDDji;;WEEEEEEEEEEEDEj.iDDEEEEWEEEEEEEEEEEEWWEEDDDDDDGf.          .,;tjfLGGDDDDDDDDDDDD *\n\t *tti.              ....::::..        ...,.           fEEEKKKKKKKKKKKKKKKW#WWWWWWWWWWWWWWWWtiEiiiWWWKKEWKEi....D.EDDDEi;.fWEEEEEEEEEEDDfL.;EDDEEEWEEEEEEEEEEEEWWEEEDDDDDGf.           :;ijfLGGDDDDDDDDDDDD *\n\t *tti.                ....::::..      ...,.          LDEEEKKKKKKKKKKKKKKWWWWWWWWWWWWWWWW####WKiiiWWWKKKEEK,...:E:DDDEii..GWEEEEEEEEDWDDiL.,KDDEEEWEEEEEEEEEEEEWWKEEDDDDDGf:           .,itfLGGDDDDDDDDDDDD *\n\t *tti.                 .....:::..     ...,.          fDEEEKKKKKKKKKWKKKKWWWWWWWWWWWWW########WLiiWWWKKKEEjD...G,DDDDi;...EWEEEEEEEEDKDEii..LDDEEEWEEEEEEEEEEEEWWWEEDDDDDGfi           .,;tfLGGGDDDDDDDDDDD *\n\t *tti.                   .....:::..   ...,.         iGEEEKKKKKKKKKKWKKKKWWWWWWWWWWWW###########KiWWWKKEEE,.D..D.DDDii:...KKEEEEEEEEEDDj:...tEDEEEWEEEEEEEEEEEEWWWEEEDDDDDLL           .,;tjLLGGDDDDDDDDDDD *\n\t *tti.                     ....::::......:.         LEEEKKKKKKKKKKWWKKKWWW#KWWWWWWWW#####W####W##KWWKKEEL..:D.jjDDi;,....KKEEEEEEEDfDDi...:iKDEEEWKEEEEEEEEEEEWWWEEEEDDDDLG           .,;tjLLGGDDDDDDDDDDD *\n\t *tti.                        ...::::::..,.        :GEEEKKKKKKKKKKKKWWWWW##WWWWWWWWW##WKWK#W#W####WWKEEK.....G.DDti,.....KKEEEEEEDWGDf.,...iKDEEEWWEEEEEEEEEEEW#WEEEEEDDDGL           .,;tjLLGGDDDDDDDDDDD *\n\t *tti.                         ....::::::,.        GDEEKKKKKKKKKKKKKWWWW###WWWWWWWWWW#WWWK###W#####WKEKK.....jDDL;;......KKEEEEEEEEEDi.f...;KDEEEWWEEEEEEEEEEEWWWWEEEEEDDGf           .,;tjLLGGDDDDDDDDDDD *\n\t *tti.                           ....:::,,.       .LEEEKKKKKWKKKKKWWWWWW###WWWWWWWWWW#WWKW#WW##W#WWWKEKD:....:DD:;......;KEEEEEEEKiDD..f...,KKEEEWWEEEEEEEEEEEWWWWEEEEEDDDf           .:;tjLLGGGDDDDDDDDDD *\n\t *tti.                             ...::,,,:.     GDEEKKKKKKKKKKKKWWWWWWW#WWWWWWWWWWW#KjKWWWWWWWWWWWWEK.j,..;fD.;.......fKEEEEEDKG:Di..,....DKEEEWWEEEEEEKEKKKWWWWEEEEEEDDf           .:;tjLLGGDDDDDDDDDDD *\n\t *jti.                              ...::,,,,:.  .fEEEKKKKKWKKKKKKWWWWWWW#WWWWWWWWWWK#KKKWWWWWWWWWWWWWK..f:.:G.,:.......EKEEEEEKK;:E:.......fKEEEWWKEKEKKKKKKKW#WWEEEEEEDDf:          .,;tfLLGGDDDDDDDDDDD *\n\t *tti.                               ...:,,,;;,: iDEEKKKKKWKKKKKKKWWWWWWW#WWWWWWWWWWK#WDKWWKKWWWWWWWWWE..;G:G..,........KKEEEEEKi.Gi..:.....tKEEKWWWKKKKKKKKKKW##WKEEEEEEDfi          .,;tfLLGGGDDDDDDDDDD *\n\t *tti.                               ....::,,;;;,LEEKKKKKKWKKKKKWWWWWWW###WWWWWWWWWWKWWDKWEEEWKKWWWWWKKj.:LG..;.........EKEEEEKG;.G...;.....;KKEKWWWKKKKKKKKKKW##WWKEEEEEDfL          .,;tfLGGGDDDDDDDDDDD *\n\t *jti.                                ...::::,;ijDEEKKKKKWKKKKKKWKWWWWW##WWWWWWWWWWWKK#KKGDGDWEEWKKWKKGE,.i;.:.........:EKEEEKE;.:L...j.....,KWEKWWWKKKKKKKKKK####WKKEEEEDLG          .,;tfLGGGGDDDDDDDDDD *\n\t *jti.                                ...:...,,;GEEKKKKKWWKKKKKWWWWWWWW###WWWWWWWWWKKKWWKiLGGEDEDEKGKKiEG..;...........jKEEEKK;:.G....,.....:KKEWWWWKKKKKKKWKK####WKKKKEEEGL          .,;tfLGGGGDDDDDDDDDD *\n\t *jti.                                ...:.  .:,GEEKKKKKWKKKKKWWWWWWWW####WWWWWWWWWKKKWWKii;fDLGDK: EEi:E:.............EKEEKK;;..L...........KKKWWWWKKKKKKKWKK####WKKKWKEEDf          .,;tfGGGGDDDDDDDDDDD *\n\t *jti.                                ...:.    ,EEKKKKKWWKKKKKWWWWWWWWW###WWWWWWWWKKKKfWWLt;i,. fi  EG..D:.............EKEKK;;..t....:.......KWKWWWWKKKKKKKWKK####WKKKWEEEDf:.        .,;tfGGGGDDDDDDDDDDD *\n\t *jti.                                ...:.    GEEKKKKKWKKKKKWWWWWWWWW####WWWWWWWKKKKKt;KKEfff     .;t.................KKKKi;:..GtGGfG.......KWWWWWWKKKKKKKWKK###WWWKKKKEEEf,,:       .,;tfGGGGDDDDDDDDDDD *\n\t *jti.                                ...:.    GEKKKKKWWKKKKKWWWWWWWWWW##WWWWWWWKKKKKKt;EiKKKK,   ...t................jEKKG;;..,.....,LGi....KWWWWWWKKKKKKWKKKW####WKKKKKEEL,,,:.     .,;tfGGGDDDDDDDDDDDD *\n\t *jti.                                ...:.  .GEEKKKKKWKKKKKWWWWWWWWWW###WWWWWWWKKKKKKtiE::tGG........................EEEj;;...,.........:D..DKWWWWWWKKKKK#KKW###W#WKKKKKEEfj:,,,:.   .,;tfGGGDDDDDDDDDDDD *\n\t *jti.                                ...:.   DEKKKKKWWKKKKKWWWWWWWWW####WWWWWWWKKKKKKiiE:::.::.......................EEi;;...j.....f......:iDKWWWWWWKKKKK#WW######WKKKKKEELG :,,,,:. .,;tfGGGDDDDDDDDDDDD *\n\t *jti.                                ...:.  fEEKKKKWWKKKKWWWWWWWWWWW###WWWWWWWWKKKKKK;tE::..........................DD;.;,.::......;........EWWWWWWWKKKKW#WW#####WWKKKWKKELG  .:,,,:::,;tfGGGDDDDDDDDDDDD *\n\t *jti.                                ...:. .DEKEKKKWWKKKKWWWWWWWWWWW###WWWWWWWWKKKKKE,iD::..........................D..,;.,;tLffi...........DWDWWWW#KKKWWWWW#####W#KKKWKEEGL    .:,;,,,;tfGGGDDDDDDDDDDDD *\n\t *jti.                                ...:. ;EEKKKKWWKKKKKWWWWWW#WWWW####WWWWWWKKKKKEL:iD:..........................j ..;..;;:.....i,........DKtWWWWWKKWWWWWW#####WWWKKKEKEDf     .:,;;;itfGGGDDDDDDDDDDDD *\n\t *jti.                                ...:. DEKKKKKWWKKKKWWWWWWW#WWWW####WWWWWWKKKKKEj:iG...............................:....................GKiWWWWWKKWW#WWW######WWKKKKKEEf       .,;iitfGGGDDDDDDDDDDDD *\n\t *jti.                                ...:.:EKKKKKWWKKKKKWWWWWWW#WWW#####WWWWWKWKKKKEi:if:.................................iEKEKKKKKKDj......DKiWWWWWKWK##WW#######WWKKK:KEEL        .:;itfGGGDDDDDDDDDDDD *\n\t *jji.                                ...:,DEEKKKWWWKWKKWWWWWWWWWWWW#####WWWWWWWKKKKEi:it..................................j.  KKKKKKKKKKKf..DKiWWWWWKWW##WW#######WWKKK,KEEf         .,;tfGGGDDDDDDDDDDDD *\n\t *jji.                                ..L:iDEEKKKWWKKKKKWWWWWWWWWWWW#####WWWWWKWKKKKKi.i;..................................  . KKKWWWWWWWWK..DGiWWWWWKK##WWW#####W#WWKKKjEKEL,        .:;tfGGGDDDDDDDDDDDD *\n\t *jji.                               .f:::EEEKKKWWWKKKKKWWWWWWWWWWWW#####WWWWWKWKKKKK;.i,.................................::  KKEKWWWWWWfWK..EiiWWWWWKWW#WW##########KKKD,KELj        .:;tfGGDDDDDDDDDDDDD *\n\t *jji.                             .t::::,DEEKKKWWKKKKWWWWWWWWW#WWWW#####WWWWKKWKKKEK;.i:.................................GDDEEEKKKWWWWWtWWD.E;iWWWWWW###WW#########WWKKK.EEDG        .:;tfGGGDDDDDDDDDDDD *\n\t *jji.                          . j..::::EKEKKKWWWKKKKWWWWWWWWW#WWW######WWWWKKWKKKEK;.t:.................................ELLEDDEEEWWWWEtWK,.KiiWWWWWW###W##########WWKKK:EEEG     .;tjfLLGDDDDDDDDDDDDDDD *\n\t *jji.                          i.::::::,EEEKKWWWKKKKKWWWWWWWWW#WWW#####WWWWWKWKKKKEE,.t..................................DfiEGDDDEEKKKttKWG.KiiWWWWW##WWW##########WWKKK:fEEL  ,fGGGDDDDDDDDEEEDDDDDDDDDD *\n\t *jji.                        .;:..:::::DEEEKKWWWKKKKKWWWWWWWWW#WWWW####WWWWWWWKKKKED,.t..................................ifjDDGGEGDKK.ttKKE.DiWWWWW###WW##########WWWKKK:.KELiLGGGGDDDDDDDDDDDDEEEDDDDDDD *\n\t *jji.                       i.:.::::::,KEEKKWWWKKKKKKWWWWWWWWW#WWWW####WWWWWWWKKKKEL:.j..................................GGf,;ifLLED .iiKKi:fWWWWWW##W#W##########WWWKKK:.KKLGGDDDDDDDDDDDDDDDDEDDEEDDDDD *\n\t *jji.                     .j:.::::::::EEEKKKWWWKKKKKKWWWWWWWW##WWW#####WWWWWWWKKKKKf:.f..................................:EEfftf .,. ;iE,..jWWWWWWW###W############WWKKK,:KKGDDDDDDDDDDDDDDDDDDDDDDDEDDDD *\n\t *jji.                    .:.::::::::,,EEEKKWWWKKKKKKKWWWWWWWW##WWW#####WWWWWWWKKKKKt..G....................................EEELL;   .j....tKWWWWWWW################WWWKKtfGKGEDDDDDDDDDDDDDDDDDDDDDDDEEDD *\n\t *jji.                   :...:::::::,,jEEKKWWWWKKKKKKWWWWWWWWW##KWW#####KWWWWWWKKKKEi..D....................................:jEEE.........;KKWWWWWWWW#WW##W##########WWKKDLGKEKDDDDDDDDDDDDDDDDDDDDDDDDDED *\n\t *jji.                  i:.::::::::,,,EEEKKWWWWKKKKKWWWWWWWWWW##WWW#####WWWWWWWKKKKKi..D......................................:::::......,KKKWWWWWWWWW#####W########WWWKKKGGKKEGGGGGGGGDDDDDDDDDDDDDDDDDDE *\n\t *jji.                 i..:::::::::,,tEEKKWWWWKKKKKWWWWWWWWWWW##WW######WWWWWWWKKKKKi..D......................................::::......:EKKKWWWWWWWWWWW##WW########W#WKKWGGKKGGGGGGGGGGGGGGGDDDDDDDDDDDDD *\n\t *jji.                .:::::::::::,,,EEEKKWWWWKKKKKWWWWWWWWWWW##WW#####WWWWWWWWKKKKKi..D....................................:::::::::..tELii;KWWWWWWWWWW##WW######WWWWWWKWGGGKGGGGGGGGGGGGGGGGGGGGGGGGGGDG *\n\t *jjt.                :.::::::::,,,,fEEKKWWWWKKKKKKWWWWWWWWWW###WW####WWWWWWW#WKKKKKi..D....................................:::::::.:.,;;;;;;,KKWWWWWWWWW#WW########WWWKKWGGGKGGGGGGGGGGGGGGGGGGGGGGGGGGGG *\n\t *jji.               ;.::::::::,,,,;EEEKWWWWWKKKKKWWWWWWWWWWWW##WW###WKWWWWWK#WKKKKKi..G......................................:::::::,;;;;:...KKKWWWWWWWWWKWW#######WWWWKKGLGKDGGGGGGLLGGGGGGGGGGGGGGGGGGG *\n\t *jjt.              f.:::::::::,,,,fEEKKWWWWWKKKKKWWWWWWWWWWW###WW##WKKWWWWWW#WKKKKK;.jt........i.............................:::::::;j;;....:E.KKKWWWWWWWKWW#####W#WWWWKKLLGWEEGGGGGLGGGGGGGGGGGGGGGGGGGG *\n\t *jjt.             ...:::::::,,,,,;DEEKWWWWWKKKKKWWWWWWWWWWWW####WWWKKKWWWWWWWWKKKKK;.E;.........t.............................:::::ii;;.....D...KKWWWWWWWKWW#####WWEWWWKKGGGEKKGGGGGLGGGGGGGGGGGGGLGGGGGG *\n\t *fji.             ;.:::::::,,,,,;LEEKKWWWWWKKKKKWWWWWWWWWWWW####KWKKKKWWWWWWWWKKKKKi.D;..........j.............................:::tt;,.....:.....KKWWWWWWKWWWW##WWWGWWWKKGGGGKEGGGGGGGGGGGGGGGGGGGLLGGGGL *\n\t *fji.            t::::::::,,,,,,;EEEKWWWWWKKKKKKKWWWWWWWWWWW##WKWKKKKKWWWWWWWWKKKKKi:D;............j...........................::LL;,.............KKWWWWWKWWWWWWWWWGWWWKKGGGGKGGGGGGGGGGGGGGGGGGGGLLGGGGL *\n\t *fjt:            .:::::::,,,,,,,DEEKWWWWWWKKKKKKKWWWWWWWWWWWWKKWKKKKKKWWWWK#WWKKKKWitE;........... ............................:G;;:...............KKKWWKKWWWWWWWWWGWWWKKGGGGWGGGGGGGGGGGGGGGGGGGGGGGGGGL *\n\t *fjji;:.       .f:::::::,,,,,,,;EEEKWWWWWWKKKKKKWWWWWWWWWWWKKKKKKKKKKKWWKWWWWWKKKKWGKD;........................................L;;..................DKKWKKWWWWWWWWWGWWWKKDGGGKDGGGGGGGGGGGGGGGGGGGGGGGGGG *\n\t *fjjtii;,:.     :::::::,,,,,,,;EEEKWWWWWWKKKKKKWWWWWWWWWWKKKKKKKKKKKKWWWWWW#WWKKKKWiEj;......................................:i,;....,...............;KKEKWWWWWWWWWGKWWKKDDGGDEGGGDGGGGGDGGGGGGGGGGGGGGGG *\n\t *fjtiiiii;;:.  j::::::,,,,,,,;;EEEKWWWWW#KKKKKWWWWWWWWWKKKKKKWKKKKKKKWWWWWWWWWKKKKWtEL;:....................................;;;:...,;j................:KEEWWWWWWWWWDDWWKKDDDDDKDDDDDDDDDDDDDDDGGGGGGGGGGG *\n\t *fjti;;iiii;;,:::::::,,,,,,,,;EEEKWWWWWWWKKKKWWWWWWWWKKKKKKKWKKKKKKKWWWWWWW#W#KKKKWEEii;...................................f;:....,;L...................EEKWWWWWWWWDDWWKKDDDDDKEDDDDDDDDDDDDDDDDDDDDDGGGG *\n\t *fjt,,,;;;;ii;f::::::,,,,,,,;;EEKWWWWWWWKKKKKWWWKWWKKKKKKKKKKKKKKKKKWWWWWWW#W#KKKKWKEij;:...............................:G;,.....,;f....................:tKKWWWWWWWDDWWKKDDDDDKKDDDDDDDDDDDDDDDDDDDDDDDDD *\n\t *jjt. ..:,;;;;,::::,,,,,,,,;;GEEWWWWWWWWKKKKWKKWKKKKKKKKKKKKKKKKKKKKWWWWWWW#W#KKKKWEDi;j;............................,Li;L;;;..,;;f........................KKKKWWWKDDWWKKDDDGDKKGGGGGGGGDGDDDDDDDDDDDDDDD *\n\t *fjt.    .:,,,:::::,,,,,,,;;;EEKWWWWWWWKKKKKKWKKKKKKKKKKKKKKKKKKKKKWKKKWKW##W#KKKKWEti;;G;........................tEEEL;;;;;;;;;;L..........................DKKKKKEDDWWKEDGftiLE;;;;itjLGGGGGGDDDDDDDDDDD *\n\t *fjt.       .j::::,,,,,,,;;;DEEWWWWWWWWKKKKWKKKKKKKKKKKKKKKKKKKKKKKWKKWWWK##W#KKKKKEii;;;L;...................iDEEEEEEKKi;j;;;;jD.....:......................,KKKKDGGEKKE:::::;E::::::::::,tLGGDDDDDDDDDD *\n\t *fjt.       .;:::,,,,,,,;;;;EEKWWWWWWWWKWKKKKKKKKKKKKKKKWKKKKKKKKKKWKKWWWW#WW#KKKKKKii;;;;f;.............:tDEEEEEKKKKKKKKEti;;;L...............................EEKf;:iKKE::::::E::::::::::::::ifDDDDDDDDD *\n\t *fjt:        :::,,,,,,,,;;;DEEWWWWWWWWWEKKKKKKKKKKKKKKKKKKKKKKKKKKWWKKWWWW####KKKKKEiii;;;;f,.........iDEEEEKKKKKKKKKKKKKKKf;iG......i..........................fK::::KKE::::::E::::::::::::::::,tGGDDDDD *\n\t *fjt:       t:::,,,,,,;;;;iDEKWWWWWWKEKKKKKKKKKKKKKKKKKKKKKKKKKKKKWWKKWWWW####WKKKKLiii;;;;;L,....,Li;EDEEEEKKKKKKKKKKKKKKKKiG......;:...........................:i:::KKE:::::,E,::::::::::::::::::iGDDDD *\n\t *jjt.       f::,,,,,,,;;;;GEEWWWWKEEKEKKKKKKKKKKKKKKKKWKKKKKKKKKKKWWKWWWWW###WWKKKKiii;;;;;;;G,;L;;iiEEEEEEEKKKKKKKKKKKKKWWKE......;t.........:....................j::KEE:,::,,D,,::::,,,,,,:::::::::tDDD *\n\t *fjt:.      ,::,,,,,,,;;;;EEWWKEEEEEEKKKKKKKKKKKKKKKKWKKKKKKKKKKKWWKKWWWWW#W#KKKKKKiiiiii;;;;;i;;iiiEEKEEKKWKKKKKKKWKKKKKWWWGi;...;t......,;;;;,....................:,EEE,,,,,,D,,,,,,,,,,,,,,,,::,::::tG *\n\t *fjt:.     ,::,,,,,,,;;;;DEKEEEEEEEEKKKKKKKKKKKKKKKKKKKKKKKKKKKKKWWWWWWWWW#W#KKKKKKiiiii;;i;;;;;iiiKKKEKKKKWWKWWWWWWKKKKWWWWW;;;:;L.....;;;;;;;;;....................,KEE,,,,,,E,,,,,,,,,,,,,,,,,,,,,,,,; *\n\t *fjt:.     f:,,,,,,,;;;;jEDEEEEEEEEEKKKKKKKKKKKKKKKKKKKKKKKKKKKKKWWWWWWWW#W##KKKKKKiiiiiiii;i;;iiiEKKKKKKKKWKWWWWWWWWKKKWWWWWKi;;i.....,jEEfGi;;;;;...................EED,,,,,,E,,,,,,,,,,,,,,,,,,,,,,,,, *\n\t *fjt:.    .f::,,,,,,;;jEEDEEEEEEEEEEKKKKKKKKKKKKKKKWKKKKKKKKKKKKKWWWKWWWWW###KKKKKLiiiiiiiiiiiiiiEEKKKKKKKKWWWWWWWWWWWWKWWWWWWGi;i;,..;jDDDKEGi;;;;;;:................EED,,,,,,D,,,,,,,,,,,,,,,,,,,,,,,,, *\n\t *fjt:.  .. ;::,,,,,;;EDDEEEEEEEEEEKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKWWKKW#WW####KWKKKiiiiiiiiiiiiijKKKKKKKKKKWWWWWWWWWWWWWWWWWWWWWt;i;;;;i;DDDDDDGi;;;;;;;;:.............EDf;,,,;,G;;;;;;;;;;;;;;;,,,,,,,,,, *\n\t *fjt:......:,,,,,,;LDDDEEEEEEEEEEEKKKKKKKKKKKKKKKKWKKKKKKKKKKKKKWWWWKWWWW####KKKKKiiiiiiiiiiijKEKKWKKKKKKKWWWWWWWWWWWWWWWWWWWWWWiLiii;i;DEEEEDDE;i;;;;;;;;;:..........EDi,;;;;;L;;;;;;;;;;;;;;;;;;,,,,,,, *\n\t *fjt:......:,,,,,;EDDDEEKEEEEEEEEEKKKKKKKKKKKKKKKWKKKKKKKKKKKKKKWWWWKKWWW##W#KWKKWEiiiiiijGKKKKKWWKKKKKKKKWWWWWWWWWWWWWWWWWWWWWWKi;iiiiDDEEEEEEDEi;;;;;;;;;;;;;,:.....ED;;;;;;;j;;;;;;;;;;;;;;;;;;;;;;;,, *\n\t *fjt:.....t,,,,,;DDDDEEEKEEEEEEEEKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKWWWKKKWWWW##WKWKKWKiiiKKKKKKKKKWWKKKKKKKKWWWWWWWWWWWWWWW#WWWWWWWWWiiiiifLEEEEEEEEDi;i;;;;;;;;;;;;.....DD;;;;;;;i;;;;;;;;;;;;;;;;;;;;;;;;; *\n\t *fjt:.....G,,,,,GDDDEEEEEEEEEEEEKKKKKKKKKKKKKKKKWKKKKKKKKKKKKKKKWWWKKKWWW###WKWKKWKitKKKKKKKKKWKKKKKKKKKKWWWWWWWWWWWWWW###WWWWWWWWEiiiiiiiEEEEEEEEDGiiii;;;;;;;;;.....GD;;;;;;;i;;;;;;;;;;;;;;;;;;;;;;;;; *\n\t *fjt:.....L,,,,;GDDDEEEEEEEEEEKEKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKWWWWWDGWWW###KKWWKWKKKKKKKKKKKKKKKKKKKKKKKWWWWWWWWWWWWW####WWWWWWWWWiiiiiiiiEEEEEEEEEEDi;i;;;;;;;;.....Lj;;;;;;i;iiiiii;;;;;;ii;;;;;;;;;;; *\n\t ***********************************************************************************************************************************************************************************************************/\n\t\n\t\n\t//PriorityQueue<Integer> pq = new PriorityQueue<>(n, Collections.reverseOrder());\n\t//PriorityQueue<Integer> dpq =new PriorityQueue<>((x, y) -> Integer.compare(y, x));\n\t\n\t// Classes\n\t\n\tstatic class Pair implements Comparable<Pair> {\n\t\tint f, s;\n\t\tPair () {}\n\t\tPair (int l_, int r_) {\n\t\t    this.f = l_;\n\t\t    this.s = r_;\n\t\t}\n\t\t@Override\n        public int compareTo(Pair other) {\n        \tif(this.f==other.f) {\n        \t\treturn Long.compare(this.s,other.s);\n        \t}\n\t\t\treturn Long.compare(this.f, other.f);\n\t\t}\n    }\n\t\n\tclass Event implements Comparable<Event>{\n\t\tlong x;\n\t\tboolean start;\n\t\tEvent(long x, boolean boo){\n\t\t\tthis.x=x;\n\t\t\tstart=boo;\n\t\t}\n\t\t@Override\n\t\tpublic int compareTo(Event other) {\n\t\t\tif(this.x==other.x) {\n\t\t\t\tif(this.start==other.start) return 0;\n\t\t\t\telse if(this.start==false) return -1;\n\t\t\t\telse return -1;\n\t\t\t}\n\t\t\treturn Long.compare(this.x,other.x);\n\t\t}\n\t}\n\t\n\t\n\tstatic class Str implements Comparable<Str> {\n\t\tString s;\n\t\tStr(String s){\n\t\t\tthis.s=s;\n\t\t}\n\t\t@Override\n\t\tpublic int compareTo(Str other) {\n\t\t\treturn (s+other.s).compareTo(other.s+s);\n\t\t}\n\t}\n\t\n\tclass TNode {\n\t\tTNode c0,c1;\n\t\tint n1,n0,val,level;\n\t\tTNode(int level){\n\t\t\tthis.level=level;\n\t\t\tval=n0=n1=0;\n\t\t}\n\t\t\n\t\tvoid add(int x) {\n\t\t\tif(level>=0) {\n\t\t\t\tif((x& 1<<level)==0) {\n\t\t\t\t\tif(n0==0) c0=new TNode(level-1);\n\t\t\t\t\tc0.add(x);\n\t\t\t\t\tn0++;\n\t\t\t\t}else {\n\t\t\t\t\tif(n1==0) c1=new TNode(level-1);\n\t\t\t\t\tc1.add(x);\n\t\t\t\t\tn1++;\n\t\t\t\t}\n\t\t\t}else \n\t\t\t\tval=x;\n\t\t}\n\t\t\n\t\tvoid remove(int x) {\n\t\t\tif(level>=0) {\n\t\t\t\tif((x&1<<level)==0) {\n\t\t\t\t\tc0.remove(x);\n\t\t\t\t\tif(--n0==0) c0=null;\n\t\t\t\t}else {\n\t\t\t\t\tc1.remove(x);\n\t\t\t\t\tif(--n1==0) c1=null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tint find(int x) {\n\t\t\tif(level>=0) {\n\t\t\t\tif((x&1<<level)==0 && c1!=null){\n\t\t\t\t\treturn c1.find(x);\n\t\t\t\t}else if((x&1<<level)!=0 && c0!=null) {\n\t\t\t\t\treturn c0.find(x);\n\t\t\t\t}\n\t\t\t\treturn c0!=null?c0.find(x):c1.find(x);\n\t\t\t}else \n\t\t\t\treturn val;\n\t\t}\n\t}\n\t\n    static class FastReader { \n        BufferedReader br; \n        StringTokenizer st;\n        public FastReader() { \n            br = new BufferedReader(new InputStreamReader(System.in)); \n        } \n        String next() { \n            while (st==null || !st.hasMoreElements()) { \n                try { \n                    st = new StringTokenizer(br.readLine()); \n                } \n                catch (IOException  e) { \n                    e.printStackTrace(); \n                } \n            } \n            return st.nextToken(); \n        } \n        int nextInt() { \n            return Integer.parseInt(next()); \n        } \n        long nextLong() { \n            return Long.parseLong(next()); \n        } \n        double nextDouble() { \n            return Double.parseDouble(next()); \n        } \n        String nextLine() { \n            String s=\"\"; \n            try { \n                s=br.readLine(); \n            } \n            catch (IOException e) { \n                e.printStackTrace(); \n            } \n            return s; \n        } \n    } \n    \n\tlong fact[];\n\tlong invFact[];\n\tvoid init(int n) {\n\t\tfact=new long[n+1];\n\t\tinvFact=new long[n+1];\n\t\tfact[0]=1;\n\t\tfor(int i=1;i<=n;i++) {\n\t\t\tfact[i]=mul(i,fact[i-1]);\n\t\t}\n\t\tinvFact[n]=power(fact[n],mod-2);\n\t\tfor(int i=n-1;i>=0;i--) {\n\t\t\tinvFact[i]=mul(invFact[i+1],i+1);\n\t\t}\n\t}\n\t\n\tlong nCr(int n, int r) {\n\t\tif(n<r || r<0) return 0;\n\t\treturn mul(fact[n],mul(invFact[r],invFact[n-r]));\n\t}\n\t\n\tlong mul(long a, long b) {\n\t\treturn a*b%mod;\n\t}\n\tlong add(long a, long b) {\n\t\treturn (a+b)%mod;\n\t}\n\t\n\tlong power(long x, long y) {\n\t\tlong gg=1;\n\t\twhile(y>0) {\n\t\t\tif(y%2==1) gg=mul(gg,x);\n\t\t\tx=mul(x,x);\n\t\t\ty/=2;\n\t\t}\n\t\treturn gg;\n\t}\n    \n    // Functions\n\tstatic long gcd(long a, long b) { \n\t\treturn b==0?a:gcd(b,a%b);\n\t}\n\tstatic int gcd(int a, int b) { \n\t\treturn b==0?a:gcd(b,a%b);\n\t}\n\t\n\tvoid ruffleSort(int a[]) {\n\t\tRandom rand=new Random();\n\t\tint n=a.length;\n\t\tfor(int i=0;i<n;i++) {\n\t\t\tint j=rand.nextInt(n);\n\t\t\tint temp=a[i];\n\t\t\ta[i]=a[j];\n\t\t\ta[j]=temp;\n\t\t}\n\t\tArrays.sort(a);\n\t}\n\t\n\tvoid print(int a[]) {\n\t\tint n=a.length;\n\t\tfor(int i=0;i<n;i++) out.print(a[i]+\" \");\n\t}\n    \n    //Input Arrays\n    static void input(long a[], int n) {\n\t\tfor(int i=0;i<n;i++) {\n\t\t\ta[i]=inp.nextLong();\n\t\t}\n\t}\n\tstatic void input(int a[], int n) {\n\t\tfor(int i=0;i<n;i++) {\n\t\t\ta[i]=inp.nextInt();\n\t\t}\n\t}\t\n\tstatic void input(String s[],int n) {\n\t\tfor(int i=0;i<n;i++) {\n\t\t\ts[i]=inp.next();\n\t\t}\n\t}\n\tstatic void input(int a[][], int n, int m) {\n\t\tfor(int i=0;i<n;i++) {\n\t\t\tfor(int j=0;j<m;j++) {\n\t\t\t\ta[i][j]=inp.nextInt();\n\t\t\t}\n\t\t}\n\t}\n\tstatic void input(long a[][], int n, int m) {\n\t\tfor(int i=0;i<n;i++) {\n\t\t\tfor(int j=0;j<m;j++) {\n\t\t\t\ta[i][j]=inp.nextLong();\n\t\t\t}\n\t\t}\n\t}\n\t\t\n}\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n\tn, k = [int(i) for i in input().split()]\n\ts = input()\n\ts2 = s.strip(\"L\")\n\tLs = len(s)-len(s2)\n\tchains = []\n\tchain = 0\n\tscore = 0\n\tstreak = False\n\tfor char in s2:\n\t\tif char == \"W\":\n\t\t\tif streak:\n\t\t\t\tscore += 2\n\t\t\telse:\n\t\t\t\tscore += 1\n\t\t\t\tstreak = True\n\t\telse:\n\t\t\tstreak = False\n\tfor char in s2.strip(\"W\"):\n\t\tif char == \"W\" and chain != 0:\n\t\t\tchains.append(chain)\n\t\t\tchain = 0\n\t\telif char == \"L\":\n\t\t\tchain += 1\n\tif chain != 0:\n\t\tchains.append(chain)\n\tchains.sort()\n\ti = 0\n\twhile chains and k >= chains[i]:\n\t\tk -= chains[i]\n\t\tscore += 2*chains[i]+1\n\t\ti += 1\n\t\tif i >= len(chains):\n\t\t\tbreak\n\tLs += sum(chains[i:])\n\tif k:\n\t\tif k > Ls:\n\t\t\tscore += 2*Ls\n\t\telse:\n\t\t\tif \"W\" in s:\n\t\t\t\tscore += 2*k\n\t\t\telse:\n\t\t\t\tscore += 2*k-1\n\tprint(score)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAX = 200000;\nconst int MOD = 1000000007;\nconst int OO = 0x3f3f3f3f;\nconst double EPS = 1e-9;\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\nint32_t main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    int n, k;\n    string s;\n    cin >> n >> k >> s;\n    int l = 0, r = n - 1;\n    while (l < n and s[l] == 'L') l++;\n    while (r >= 0 and s[r] == 'L') r--;\n    vector<pair<int, int> > arr;\n    while (l <= r) {\n      while (l <= r and s[l] != 'L') l++;\n      int L = l;\n      while (l <= r and s[l] == 'L') l++;\n      int R = l - 1;\n      if (L <= R) arr.push_back({L, R});\n    }\n    sort(arr.begin(), arr.end(), [](pair<int, int> a, pair<int, int> b) {\n      return a.second - a.first < b.second - b.first;\n    });\n    for (int i = 0; i < arr.size(); i++) {\n      int a = arr[i].first;\n      int b = arr[i].second;\n      if (b - a + 1 > k) continue;\n      for (int j = a; j <= b; j++) s[j] = 'W';\n      k -= (b - a + 1);\n    }\n    int w = 0;\n    for (int i = 0; i < n; i++)\n      if (s[i] == 'W') w = i, i = n;\n    for (int j = w; j < n and k > 0; j++)\n      if (s[j] == 'L') s[j] = 'W', k--;\n    for (int j = w; j >= 0 and k > 0; j--)\n      if (s[j] == 'L') s[j] = 'W', k--;\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n      if (s[i] != 'W') continue;\n      if (!i)\n        ans++;\n      else if (s[i - 1] == 'W')\n        ans += 2;\n      else\n        ans++;\n    }\n    cout << ans << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n, k = map(int, input().split())\n    s = input()\n    k = min(k, s.count(\"L\"))\n    arr = []\n    cur = 0\n    sc = 0\n    se = False\n    if s[0] == \"W\":\n        sc += 1\n    for e in s:\n        if e == \"L\":\n            cur += 1\n        else:\n            if cur > 0 and se:\n                arr.append(cur)\n            se = True\n            cur = 0\n    for i in range(1, n):\n        if s[i] == \"W\":\n            if s[i-1] == \"W\":\n                sc += 2\n            else:\n                sc += 1 \n    arr.sort() \n    arr.reverse()\n    #print(arr, sc)\n    while len(arr) > 0 and arr[-1] <= k:\n        k -= arr[-1]\n        sc += arr[-1]*2+1\n        arr.pop()\n    #print(k)\n    sc += k*2\n    if k > 0 and s.count(\"W\") == 0:\n        sc -= 1\n    print(sc)\n"
        },
        {
            "language": 3,
            "solution": "import random\n\n\ndef gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\n\ndef lcm(a, b):\n    return (a * b) / gcd(a, b)\n\n\nfor _ in range(int(input())):\n    n, k = map(int, input().split())\n    s = input()\n    a = []\n    for i in s:\n        if i == 'L':\n            a.append(0)\n        else:\n            a.append(1)\n    for i in range(n):\n        if i != 0 and i != n - 1:\n            if a[i - 1] == 1 and a[i + 1] == 1 and a[i] == 0 and k>0:\n                k -= 1\n                a[i] = 1\n    c = 0\n    l = -1\n    f = []\n    edge=[]\n    for i in range(n):\n        if a[i] == 0 and l == -1:\n            l = i\n        elif a[i] == 1 and l != -1:\n            if l==0:\n                edge.append([i - l, [l, i - 1]])\n            else:\n                f.append([i-l, [l, i - 1]])\n            l=-1\n    if l != -1:\n        edge.append([n - l, [l, n - 1]])\n    f.sort()\n    edge.sort()\n    i = 0\n    while (k > 0 and i<len(f)):\n        for j in range(f[i][1][0], f[i][1][1] + 1):\n            a[j] = 1\n            k -= 1\n            if k == 0:\n                break\n        i += 1\n    i=0\n    while(k>0 and i<len(edge)):\n        if edge[i][1][0]==0:\n            for j in range(edge[i][1][1], edge[i][1][0]-1,-1):\n                a[j] = 1\n                k -= 1\n                if k == 0:\n                    break\n        else:\n            for j in range(edge[i][1][0], edge[i][1][1] + 1):\n                a[j] = 1\n                k -= 1\n                if k == 0:\n                    break\n        i += 1\n    ans=0\n    for i in range(n):\n        if a[i]==1:\n            if i==0:\n                ans+=1\n            else:\n                if a[i-1]==1:\n                    ans+=2\n                else:\n                    ans+=1\n    print(ans)\n    # print(a)\n    # print('------------')\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n,k =  map(int,input().split())\n    s = input()\n    L = s.count(\"L\")\n    W = s.count(\"W\")\n    score = 0\n    if(s[0] == \"W\"):\n        score+=1\n    for i in range(1,n):\n        if(s[i] == \"W\"):\n            if(s[i-1] == \"W\"):\n                score += 2\n            else:\n                score += 1\n    start = False\n    count = 0\n    List = []\n    for i in range(n):\n        if(start):\n            if(s[i] == \"W\"):\n                if(count):\n                    List.append(count)\n                    count = 0\n            else:\n                count+=1\n        else:\n            if(s[i] == \"W\"):\n                start = True\n    List.sort()\n    if(W):\n        for i in List:\n            if(k):\n                if(k>=i):\n                    score += (i-1) * 2 + 3\n                    k-=i\n                    L-=i\n                else:\n                    score += k * 2\n                    k = 0\n                    L-=k\n        if(k):\n            score += min(k,L) * 2\n        print(score)\n\n    else:\n        if(k):\n            print(min(k,L)*2 -1)\n        else:\n            print(0)\n\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = lambda:sys.stdin.readline()\n\nint_arr = lambda: list(map(int,input().split()))\nstr_arr = lambda: list(map(str,input().split()))\nget_str = lambda: map(str,input().split())\nget_int = lambda: map(int,input().split())\nget_flo = lambda: map(float,input().split())\n\nmod = 1000000007\n\ndef solve(n,k,s):\n\tc = 0\n\tif s[0] == \"W\":\n\t\tc = 1\n\tfor i in range(1,n):\n\t\tif s[i] == \"W\" and s[i-1] == \"W\":\n\t\t\tc += 2\n\t\telif s[i] == \"W\":\n\t\t\tc += 1\n\n\tif k == 0:\n\t\tprint(c)\n\t\treturn\n\n\tl,r = 0,0\n\tfor i in range(n):\n\t\tif s[i] == \"W\":\n\t\t\tl = i\n\t\t\tbreak\n\n\tfor i in range(n-1,-1,-1):\n\t\tif s[i] == \"W\":\n\t\t\tr = i\n\t\t\tbreak\n\n\tans = []\n\ttmp = 0\n\tfor i in range(l,r+1):\n\t\tif s[i] == \"L\":\n\t\t\ttmp += 1\n\t\telse:\n\t\t\tif tmp != 0:\n\t\t\t\tans.append(tmp)\n\t\t\ttmp = 0\n\n\tans.sort()\n\tfor i in ans:\n\t\tif i <= k:\n\t\t\tc += (2*i)+1\n\t\t\tk -= i\n\t\telse:\n\t\t\tc += (2*k)\n\t\t\tk = 0\n\t\t\tbreak\n\n\tif k > 0 and c > 0:\n\t\tc += min(n-(r+1),k)*(2)\n\t\tk -= (n-(r+1))\n\t\tif k > 0:\n\t\t\tc += min(k,l)*(2)\n\n\tprint(c if c != 0 else max(k,1)*2-1)\n\n\nfor _ in range(int(input())):\n\tn,k = get_int()\n\ts = str(input())[:-1]\n\tsolve(n,k,s)"
        },
        {
            "language": 1,
            "solution": "def solve():\n    n, k = map(int, raw_input().split())\n    s = raw_input().strip()\n    if s == 'L' * n:\n        if k == 0:\n            print 0\n        else:\n            print 2 * k - 1\n        return\n    l = s.find('W')\n    r = s.rfind('W')\n    t = s[l:r+1]\n    p = ''\n    a = []\n    ans = x = 0\n    for i, c in enumerate(t):\n        if c == 'L':\n            x += 1\n        if c == 'W':\n            if p == 'W':\n                ans += 1\n            elif p == 'L':\n                a.append(x)\n            ans += 1\n            x = 0\n        p = c\n    a.sort()\n    for x in a:\n        y = min(x, k)\n        if y == x:\n            ans += 2 * y + 1\n        else:\n            ans += 2 * y\n        k -= y\n    x = l + n - 1 - r\n    ans += 2 * min(x, k)\n    print ans\n\nT = int(raw_input())\nfor t in xrange(T):\n    solve()\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid solve() {\n  long long int n, k;\n  cin >> n >> k;\n  ;\n  string s;\n  cin >> s;\n  long long int nl = 0, nw = 0;\n  vector<long long int> g;\n  long long int gl = 0;\n  bool ok = false;\n  for (long long int i = 0; i < n; i++) {\n    if (s[i] == 'W')\n      nw++;\n    else {\n      nl++;\n    }\n    if (s[i] == 'W') {\n      if (gl != 0) g.push_back(gl);\n      gl = 0;\n      ok = true;\n    } else {\n      if (ok) gl++;\n    }\n  }\n  if (nl <= k) {\n    cout << 1 + ((n - 1) * 2) << \"\\n\";\n    return;\n  }\n  if (nw == 0) {\n    if (k == 0)\n      cout << 0 << \"\\n\";\n    else\n      cout << 1 + ((k - 1) * 2) << \"\\n\";\n    return;\n  }\n  sort((g).begin(), (g).end());\n  long long int ans = 0;\n  for (long long int i = 0; i < n; i++) {\n    if (i == 0) {\n      if (s[i] == 'W') ans++;\n      continue;\n    }\n    if (s[i] == 'W') {\n      ans++;\n      if (s[i - 1] == 'W') ans++;\n    }\n  }\n  for (auto e : g) {\n    if (e <= k) {\n      ans += 1 + (e * 2);\n      k -= e;\n    } else {\n      break;\n    }\n  }\n  ans += k * 2;\n  cout << ans;\n  cout << \"\\n\";\n}\nint32_t main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  long long int t;\n  cin >> t;\n  while (t-- > 0) {\n    solve();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import static java.lang.Integer.parseInt;\nimport static java.lang.Long.parseLong;\nimport static java.lang.System.exit;\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\n\npublic class B {\n\n\tstatic void sort(int a[], int n) {\n\t\tif (n == 0) {\n\t\t\treturn;\n\t\t}\n\t\tfor (int i = 1; i < n; i++) {\n\t\t\tint j = i;\n\t\t\tint ca = a[i];\n\t\t\tdo {\n\t\t\t\tint nj = (j - 1) >> 1;\n\t\t\t\tint na = a[nj];\n\t\t\t\tif (ca <= na) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ta[j] = na;\n\t\t\t\tj = nj;\n\t\t\t} while (j != 0);\n\t\t\ta[j] = ca;\n\t\t}\n\t\tint ca = a[0];\n\t\tfor (int i = n - 1; i > 0; i--) {\n\t\t\tint j = 0;\n\t\t\twhile ((j << 1) + 2 + Integer.MIN_VALUE < i + Integer.MIN_VALUE) {\n\t\t\t\tj <<= 1;\n\t\t\t\tj += (a[j + 2] > a[j + 1]) ? 2 : 1;\n\t\t\t}\n\t\t\tif ((j << 1) + 2 == i) {\n\t\t\t\tj = (j << 1) + 1;\n\t\t\t}\n\t\t\tint na = a[i];\n\t\t\ta[i] = ca;\n\t\t\tca = na;\n\t\t\twhile (j != 0 && a[j] < ca) {\n\t\t\t\tj = (j - 1) >> 1;\n\t\t\t}\n\t\t\twhile (j != 0) {\n\t\t\t\tna = a[j];\n\t\t\t\ta[j] = ca;\n\t\t\t\tca = na;\n\t\t\t\tj = (j - 1) >> 1;\n\t\t\t}\n\t\t}\n\t\ta[0] = ca;\n\t}\n\n\tstatic void solve() throws Exception {\n\t\tint tests = scanInt();\n\t\tfor (int test = 0; test < tests; test++) {\n\t\t\tint n = scanInt(), k = scanInt(), gaps[] = new int[n], nGaps = 0;\n\t\t\tString s = scanString();\n\t\t\tint haveWins = 0, curGap = 0;\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tif (s.charAt(i) == 'W') {\n\t\t\t\t\t++haveWins;\n\t\t\t\t\tif (curGap != 0 && curGap != i) {\n\t\t\t\t\t\tgaps[nGaps++] = curGap;\n\t\t\t\t\t}\n\t\t\t\t\tcurGap = 0;\n\t\t\t\t} else {\n\t\t\t\t\t++curGap;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (haveWins + k == 0) {\n\t\t\t\tout.println(0);\n\t\t\t} else if (haveWins + k >= n) {\n\t\t\t\tout.println(2 * n - 1);\n\t\t\t} else {\n\t\t\t\tsort(gaps, nGaps);\n\t\t\t\tint closedGaps = 0;\n\t\t\t\twhile (closedGaps < nGaps && k >= gaps[closedGaps]) {\n\t\t\t\t\tk -= gaps[closedGaps];\n\t\t\t\t\thaveWins += gaps[closedGaps];\n\t\t\t\t\t++closedGaps;\n\t\t\t\t}\n\t\t\t\tout.println(2 * (haveWins + k) - 1 - (nGaps - closedGaps));\n\t\t\t}\n\t\t}\n\t}\n\n\tstatic int scanInt() throws IOException {\n\t\treturn parseInt(scanString());\n\t}\n\n\tstatic long scanLong() throws IOException {\n\t\treturn parseLong(scanString());\n\t}\n\n\tstatic String scanString() throws IOException {\n\t\twhile (tok == null || !tok.hasMoreTokens()) {\n\t\t\ttok = new StringTokenizer(in.readLine());\n\t\t}\n\t\treturn tok.nextToken();\n\t}\n\n\tstatic BufferedReader in;\n\tstatic PrintWriter out;\n\tstatic StringTokenizer tok;\n\n\tpublic static void main(String[] args) {\n\t\ttry {\n\t\t\tin = new BufferedReader(new InputStreamReader(System.in));\n\t\t\tout = new PrintWriter(System.out);\n\t\t\tsolve();\n\t\t\tin.close();\n\t\t\tout.close();\n\t\t} catch (Throwable e) {\n\t\t\te.printStackTrace();\n\t\t\texit(1);\n\t\t}\n\t}\n}"
        },
        {
            "language": 3,
            "solution": "from sys import stdin\n\"\"\"\nn=int(stdin.readline().strip())\nn,m=map(int,stdin.readline().strip().split())\ns=list(map(int,stdin.readline().strip().split()))\ns=stdin.readline().strip()\n\"\"\"\nT=int(stdin.readline().strip())\nfor caso in range(T):\n    n,k=map(int,stdin.readline().strip().split())\n    s=list(stdin.readline().strip())\n    aux=[]\n    last=-1\n    for i in range(n):\n        if i>0 and s[i]=='L' and s[i-1]=='W':\n            last=i\n        if i<n-1 and s[i]=='L' and s[i+1]=='W' and last!=-1:\n            aux.append([i-last,last,i])\n    aux.sort()\n    for i in aux:\n        for j in range(i[1],i[2]+1):\n            if k>0:\n                s[j]='W'\n                k-=1\n    ini=-1\n    fin=n\n    for i in range(n):\n        if s[i]=='W':\n            ini=i-1\n            break\n    for i in range(n-1,-1,-1):\n        if s[i]=='W':\n            fin=i+1\n            break\n    for i in range(ini,-1,-1):\n        if k>0:\n            s[i]='W'\n            k-=1\n    for i in range(fin,n):\n        if k>0:\n            s[i]='W'\n            k-=1\n    ans=0\n    if ini==-1 and fin==n:\n        for i in range(n):\n            if k>0:\n                s[i]='W'\n                k-=1\n    for i in range(n):\n        if s[i]=='W':\n            if i>0 and s[i-1]=='W':\n                ans+=2\n            else:\n                ans+=1\n    print(ans)\n            \n        \n        \n\n"
        },
        {
            "language": 3,
            "solution": "import sys\n\nT = int(sys.stdin.readline())\nfor t in range(0, T):\n    n, k = list(map(int, sys.stdin.readline().strip().split()))\n    s = sys.stdin.readline().strip()\n    ans = 0\n    v = False\n    k2 = k\n    x = 0\n    y = 0\n    if s[0] == \"W\":\n        y = 1\n        ans = 1\n        v = True\n    else:\n        x = 1\n    L = []\n    for i in range (1, n):\n        if s[i] == \"W\":\n            if x > 0:\n                L.append(x)\n            if v == True:\n                ans = ans + 2\n            else:\n                ans = ans + 1\n                v = True\n            x = 0\n            y = y + 1\n        else:\n            v = False\n            x = x + 1\n    L2 = []\n    if x > 0:\n        L2.append(x)\n    if s[0] == \"L\" and len(L) > 0:\n        L2.append(L[0])\n        L = L[1:]\n    L.sort()\n    L.reverse()\n    while k > 0 and len(L) > 0:\n        l = L.pop()\n        if l <= k:\n            k = k - l\n            ans = ans + 2 * l + 1\n        else:\n            ans = ans + 2 * k\n            k = 0\n    if k > 0:\n        ans = ans + min(sum(L2), k) * 2\n    if y > 0:\n        print(ans)\n    else:\n        print(max(0, 2 * k2 - 1))"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nbool customSort(pair<int, int> a, pair<int, int> b) {\n  if (a.first == b.first) {\n    return a.second > b.second;\n  }\n  return a.first < b.first;\n}\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  ;\n  int t;\n  cin >> t;\n  while (t--) {\n    int n, k;\n    cin >> n >> k;\n    string str;\n    cin >> str;\n    str = \"L\" + str + \"L\";\n    vector<int> p1, p2, p3;\n    int totw = 0;\n    vector<int> wind;\n    int score = 0;\n    for (int i = 1; i <= n; i++) {\n      if (str[i] == 'W') {\n        totw++;\n        score++;\n        if (str[i - 1] == 'W') {\n          score++;\n        }\n        wind.push_back(i);\n      }\n    }\n    if (totw == 0) {\n      for (int i = 1; i <= k; i++) {\n        str[i] = 'W';\n        score++;\n        if (str[i - 1] == 'W') {\n          score++;\n        }\n      }\n    } else if (totw + k >= n) {\n      for (int i = 1; i <= n; i++) {\n        str[i] = 'W';\n      }\n      score = (n - 1) * 2 + 1;\n    } else {\n      vector<pair<int, int>> gaps;\n      for (int i = 1; i < wind.size(); i++) {\n        if (wind[i] - wind[i - 1] - 1 > 0) {\n          gaps.push_back(\n              {wind[i] - wind[i - 1] - 1, 2 * (wind[i] - wind[i - 1] - 1) + 1});\n        }\n      }\n      sort(gaps.begin(), gaps.end(), customSort);\n      int ind = 0;\n      while (k > 0) {\n        if (ind >= gaps.size()) {\n          break;\n        }\n        int replace = gaps[ind].first;\n        if (k >= replace) {\n          k -= replace;\n          score += gaps[ind].second;\n        } else {\n          score += k * 2;\n          k = 0;\n        }\n        ind++;\n      }\n      if (k > 0) {\n        score += 2 * k;\n      }\n    }\n    cout << score << endl;\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.lang.*;\nimport java.io.*;\nimport java.math.*;\n\npublic class Codeforces {\n    static FastReader sc=new FastReader();\n\tstatic PrintWriter out=new PrintWriter(System.out);\n\tstatic long mod=1000000007;\n\tstatic long mod1=998244353;\n\tpublic static void main (String[] args) throws java.lang.Exception\n\t{\n\t\t// your code goes here\n\t\tint t=I();\n\t\twhile(t-->0)\n\t\t{\n\t\t\tint n=I();\n\t\t\tint k=I();\n\t\t\tString s=S();\n\t\t\tlong ans=0;\n\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\tif(i==0 && s.charAt(i)=='W')ans++;\n\t\t\t\telse{\n\t\t\t\t\tif(s.charAt(i)=='W' && s.charAt(i-1)=='W')ans+=2;\n\t\t\t\t\telse if(s.charAt(i)=='W' && s.charAt(i-1)=='L')ans++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// out.println(ans);\n\t\t\tif(k==0){out.println(ans);continue;}\n\t\t\tArrayList<Integer> arr=new ArrayList<>();\n\t\t\tint p=0,q=n-1;\n\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\tif(s.charAt(i)=='L')p++;\n\t\t\t\telse break;\n\t\t\t}\n\t\t\tfor(int i=n-1;i>=0;i--){\n\t\t\t\tif(s.charAt(i)=='L')q--;\n\t\t\t\telse break;\n\t\t\t}\n\t\t\tif(p>q){\n\t\t\t\tans+=(k-1)*2+1;\n\t\t\t\tout.println(ans);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tint count=0;\n\t\t\tfor(int i=p;i<=q;i++){\n\t\t\t\tif(s.charAt(i)=='L')count++;\n\t\t\t\telse{\n\t\t\t\t\tif(count!=0)arr.add(count);\n\t\t\t\t\tcount=0;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// printArray(arr);\n\t\t\tCollections.sort(arr);\n\t\t\tfor(int i=0;i<arr.size();i++){\n\t\t\t\tif(k==0)break;\n\t\t\t\telse if(arr.get(i)<=k){\n\t\t\t\t\tans++;ans+=arr.get(i)*2;\n\t\t\t\t\tk-=arr.get(i);\n\t\t\t\t}else{\n\t\t\t\t\tans+=k*2;\n\t\t\t\t\tk=0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(k>=p){\n\t\t\t\tans+=(p)*2;\n\t\t\t\tk-=p;\n\t\t\t}else{\n\t\t\t\tans+=k*2;\n\t\t\t\tk=0;\n\t\t\t}\n\t\t\tif(k>=n-q-1){\n\t\t\t\tans+=(n-q-1)*2;\n\t\t\t\tk-=(n-q-1);\n\t\t\t}else{\n\t\t\t\tans+=k*2;\n\t\t\t\tk=0;\n\t\t\t}\n\t\t\tout.println(ans);\n\t\t}\n\t\tout.close();\n\t}\n\tpublic static class pair\n    {\n    \tlong a;\n    \tlong b;\n    \tpublic pair(long val,long index)\n    \t{\n    \t    a=val;\n    \t    b=index;\n    \t}\n    }\n\tpublic static class myComp implements Comparator<pair>\n\t{\n\t\t//sort in ascending order.\n\t\t// public int compare(pair p1,pair p2)\n\t\t// {\n\t\t// \tif(p1.a==p2.a)\n    \t//     return 0;\n    \t//     else if(p1.a<p2.a)\n    \t//     return 1;\n    \t//     else\n    \t//     return -1;\n\t\t// }\n\t\t//sort in descending order.\n\t\tpublic int compare(pair p1,pair p2)\n    \t{\n    \t    if(p1.a==p2.a)\n    \t    return 0;\n    \t    else if(p1.a<p2.a)\n    \t    return 1;\n    \t    else\n    \t    return -1;\n    \t}\n\t}\n\tpublic static long fact(long n)\n\t{\n\t\tlong fact=1;\n\t\tfor(long i=2;i<=n;i++){\n\t\t\tfact=((fact%mod)*(i%mod))%mod;\n\t\t}\n\t\treturn fact;\n\t}\n\tpublic static long fact(int n)\n\t{\n\t\tlong fact=1;\n\t\tfor(int i=2;i<=n;i++){\n\t\t\tfact=((fact%mod)*(i%mod))%mod;\n\t\t}\n\t\treturn fact;\n\t} \n\tpublic static long kadane(long a[],int n)\n\t{\n\t\tlong max_sum=Long.MIN_VALUE,max_end=0;\n\t\tfor(int i=0;i<n;i++){\n\t\t\tmax_end+=a[i];\n\t\t\tif(max_sum<max_end){max_sum=max_end;}\n\t\t\tif(max_end<0){max_end=0;}\n\t\t}\n\t\treturn max_sum;\n\t}\n\tpublic static void DFS(ArrayList<Integer> arr[],int s,boolean visited[])\n\t{\n\t\tvisited[s]=true;\n\t\tfor(int i:arr[s]){\n\t\t\tif(!visited[i]){\n\t\t\t\tDFS(arr,i,visited);\n\t\t\t}\n\t\t}\n\t}\n\tpublic static int BS(long a[],long x,int ii,int jj)\n\t{\n\t\t// int n=a.length;\n\t\tint mid=0;\n\t\tint i=ii,j=jj;\n\t\twhile(i<j)\n\t\t{\n\t\t\tmid=(i+j)/2;\n\t\t\tif(a[mid]>x)\n\t\t\tj=mid-1;\n\t\t\telse if(a[mid]<x)\n\t\t\ti=mid+1;\n\t\t\telse return mid;\n\t\t}\n\t\tif(a[i]>x)\n\t\treturn i-1;\n\t\treturn i;\n\t}\n\tpublic static ArrayList<Integer> prime(int n)\n\t{\n\t    ArrayList<Integer> arr=new ArrayList<>();\n\t    boolean prime[] = new boolean[n + 1];\n        for (int i = 0; i <= n; i++)\n        prime[i] = true;\n        for (int p = 2; p * p <= n; p++)\n        {\n            if (prime[p] == true)\n            {\n                for (int i = p * p; i <= n; i += p)\n                prime[i] = false;\n            }\n        }\n        for (int i = 2; i <= n; i++)\n        {\n            if (prime[i] == true)\n            arr.add(i);\n        }\n        return arr;\n\t}\n\tpublic static HashSet<Integer> primeSet(int n)\n\t{\n\t    HashSet<Integer> arr=new HashSet<>();\n\t    boolean prime[] = new boolean[n + 1];\n        for (int i = 0; i <= n; i++)\n        prime[i] = true;\n        for (int p = 2; p * p <= n; p++)\n        {\n            if (prime[p] == true)\n            {\n                for (int i = p * p; i <= n; i += p)\n                prime[i] = false;\n            }\n        }\n        for (int i = 2; i <= n; i++)\n        {\n            if (prime[i] == true)\n            arr.add(i);\n        }\n        return arr;\n\t}\n\n\t// Fenwick / BinaryIndexed  Tree  USE IT - FenwickTree ft1=new FenwickTree(n);\n\tpublic static class FenwickTree\n\t{\n\t\tlong farr[];\n\t\tint n;\n\t\tpublic FenwickTree(int c)\n\t\t{\n\t\t\tn=c+1;\n\t\t\tfarr=new long[n];\n\t\t}\n\t\tpublic void update_range(int l,int r,long p)\n\t\t{\n\t\t\tupdate(l,p);\n\t\t\tupdate(r+1,(-1)*p);\n\t\t}\n\t\tpublic void update(int x,long p)\n\t\t{\n\t\t\tfor(;x<n;x+=x&(-x))\n\t\t\t{\n\t\t\t\tfarr[x]+=p;\n\t\t\t}\n\t\t}\n\t\tpublic long get(int x)\n\t\t{\n\t\t\tlong ans=0;\n\t\t\tfor(;x>0;x-=x&(-x))\n\t\t\t{\n\t\t\t\tans=ans+farr[x];\n\t\t\t}\n\t\t\treturn ans;\n\t\t}\n\t}\n\n\t//Disjoint Set Union\n\tpublic static class DSU\n\t{\n\t    static int par[],rank[];\n\t    public DSU(int c)\n\t    {\n\t        par=new int[c+1];\n\t        rank=new int[c+1];\n\t        for(int i=0;i<=c;i++)\n\t        {\n\t            par[i]=i;\n\t            rank[i]=0;\n\t        }\n\t    }\n\t    public static int find(int a)\n\t    {\n\t        if(a==par[a])\n\t        return a;\n\t        return par[a]=find(par[a]);\n\t    }\n\t    public static void union(int a,int b)\n\t    {\n\t        int a_rep=find(a),b_rep=find(b);\n\t        if(a_rep==b_rep)\n\t        return;\n\t        if(rank[a_rep]<rank[b_rep])\n\t        par[a_rep]=b_rep;\n\t        else if(rank[a_rep]>rank[b_rep])\n\t        par[b_rep]=a_rep;\n\t        else\n\t        {\n\t            par[b_rep]=a_rep;\n\t            rank[a_rep]++;\n\t        }\n\t    }\n\t}\n\n\t//SEGMENT TREE CODE\n\n\t// public static void segmentUpdate(int si,int ss,int se,int qs,int qe,long x)\n\t// {\n\t// \tif(ss>qe || se<qs)return;\n\t// \tif(qs<=ss && qe>=se)\n\t// \t{\n\t// \t\tseg[si][0]+=1L;\n\t// \t\tseg[si][1]+=x*x;\n\t// \t\tseg[si][2]+=2*x;\n\t// \t\treturn;\n\t// \t}\n\t// \tint mid=(ss+se)/2;\n\t// \tsegmentUpdate(2*si+1,ss,mid,qs,qe,x);\n\t// \tsegmentUpdate(2*si+2,mid+1,se,qs,qe,x);\n\t// }\n\t// public static long segmentGet(int si,int ss,int se,int x,long f,long s,long t,long a[])\n\t// {\n\t// \tif(ss==se && ss==x)\n\t// \t{\n\t// \t\tf+=seg[si][0];\n\t// \t\ts+=seg[si][1];\n\t// \t\tt+=seg[si][2];\n\t// \t\tlong ans=a[x]+(f*((long)x+1L)*((long)x+1L))+s+(t*((long)x+1L));\n\t// \t\treturn ans;\n\t// \t}\n\t// \tint mid=(ss+se)/2;\n\t// \tif(x>mid){\n\t// \t\treturn segmentGet(2*si+2,mid+1,se,x,f+seg[si][0],s+seg[si][1],t+seg[si][2],a);\n\t// \t}else{\n\t// \t\treturn segmentGet(2*si+1,ss,mid,x,f+seg[si][0],s+seg[si][1],t+seg[si][2],a);\n\t// \t}\n\t// }\n\n\t\n    public static class myComp1 implements Comparator<pair1>\n    {\n\t\t//sort in ascending order.\n    \tpublic int compare(pair1 p1,pair1 p2)\n    \t{\n    \t    if(p1.a==p2.a)\n    \t    return 0;\n    \t    else if(p1.a<p2.a)\n    \t    return -1;\n    \t    else\n    \t    return 1;\n    \t}\n\t\t//sort in descending order.\n\t\t// public int compare(pair p1,pair p2)\n    \t// {\n    \t//     if(p1.a==p2.a)\n    \t//     return 0;\n    \t//     else if(p1.a<p2.a)\n    \t//     return 1;\n    \t//     else\n    \t//     return -1;\n    \t// }\n    }\n\tpublic static class pair1\n    {\n    \tlong a;\n    \tlong b;\n    \tpublic pair1(long val,long index)\n    \t{\n    \t    a=val;\n    \t    b=index;\n    \t}\n    }\n    public static ArrayList<pair1> mergeIntervals(ArrayList<pair1> arr)\n\t{\n\t    //****************use this in main function-Collections.sort(arr,new myComp1());\n\t    ArrayList<pair1> a1=new ArrayList<>();\n\t    if(arr.size()<=1)\n\t    return arr;\n\t    a1.add(arr.get(0));\n\t    int i=1,j=0;\n\t    while(i<arr.size())\n\t    {\n\t        if(a1.get(j).b<arr.get(i).a)\n\t        {\n\t           a1.add(arr.get(i));\n\t           i++;\n\t           j++;\n\t        }\n\t        else if(a1.get(j).b>arr.get(i).a && a1.get(j).b>=arr.get(i).b)\n\t        {\n\t            i++;\n\t        }\n\t        else if(a1.get(j).b>=arr.get(i).a)\n\t        {\n\t            long a=a1.get(j).a;\n\t            long b=arr.get(i).b;\n\t            a1.remove(j);\n\t            a1.add(new pair1(a,b));\n\t            i++;\n\t        }\n\t    }\n\t    return a1;\n\t}\n\tpublic static boolean palindrome(String s,int n)\n\t{\n\t\tfor(int i=0;i<=n/2;i++){\n\t\t\tif(s.charAt(i)!=s.charAt(n-i-1)){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\tpublic static long countDigit(long n)\n\t{\n\t    long sum=0;\n\t    while(n!=0)\n\t    {\n\t        sum++;\n\t        n=n/10;\n\t    }\n\t    return sum;\n\t}\n\tpublic static long digitSum(long n)\n\t{\n\t    long sum=0;\n\t    while(n!=0)\n\t    {\n\t        sum=sum+n%10;\n\t        n=n/10;\n\t    }\n\t    return sum;\n\t}\n\tpublic static long gcd(long a,long b)\n\t{\n\t    if(b==0)\n\t    return a;\n\t    else\n\t    return gcd(b,a%b);\n\t}\n\tpublic static int gcd(int a,int b)\n\t{\n\t    if(b==0)\n\t    return a;\n\t    else\n\t    return gcd(b,a%b);\n\t}\n\tpublic static void printArray(long a[])\n\t{\n\t\tfor(int i=0;i<a.length;i++){\n\t\t\tout.print(a[i]+\" \");\n\t\t}\n\t\tout.println();\n\t}\n\tpublic static void printArray(ArrayList<Integer> arr)\n\t{\n\t\tfor(int i=0;i<arr.size();i++){\n\t\t\tout.print(arr.get(i)+\" \");\n\t\t}\n\t\tout.println();\n\t}\n\tpublic static long pwr(long m,long n)\n\t{\n\t\tlong res=1;\n\t\tm=m%mod;\n\t\tif(m==0)\n\t\treturn 0;\n\t\twhile(n>0)\n\t\t{\n\t\t\tif((n&1)!=0)\n\t\t\t{\n\t\t\t\tres=(res*m)%mod;\n\t\t\t}\n\t\t\tn=n>>1;\n\t\t\tm=(m*m)%mod;\n\t\t}\n\t\treturn res;\n\t}\n\tpublic static void sort(int[] A)\n\t{\n        int n = A.length;\n        Random rnd = new Random();\n        for(int i=0; i<n; ++i)\n\t\t{\n            int tmp = A[i];\n            int randomPos = i + rnd.nextInt(n-i);\n            A[i] = A[randomPos];\n            A[randomPos] = tmp;\n        }\n        Arrays.sort(A);\n    }\n    public static void sort(long[] A)\n\t{\n\t    int n = A.length;\n        Random rnd = new Random();\n        for(int i=0; i<n; ++i)\n\t\t{\n            long tmp = A[i];\n            int randomPos = i + rnd.nextInt(n-i);\n            A[i] = A[randomPos];\n            A[randomPos] = tmp;\n        }\n\t    Arrays.sort(A);\n\t}\n\tpublic static int I(){return sc.I();}\n    public static long L(){return sc.L();}\n    public static String S(){return sc.S();}\n    public static double D(){return sc.D();}\n}\nclass FastReader {  \n    BufferedReader br;\n    StringTokenizer st;\n    public FastReader(){\n        br = new BufferedReader(new InputStreamReader(System.in));\n    }\n    String next(){\n        while (st == null || !st.hasMoreElements()){\n            try {\n                st = new StringTokenizer(br.readLine());\n            }\n            catch (IOException e){\n                e.printStackTrace();\n            }\n        }\n        return st.nextToken();\n    }\n    int I(){ \n        return Integer.parseInt(next());\n    }\n    long L(){ \n        return Long.parseLong(next());\n    }\n    double D(){\n         return Double.parseDouble(next());\n    }\n    String S(){\n        String str = \"\";\n        try \n        {\n            str = br.readLine();\n        }\n        catch (IOException e)\n        {\n            e.printStackTrace();\n        }\n        return str;\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    #n = int(input())\n    n, k = map(int, input().split())\n    a = list(input())\n    f = False\n    d = 0\n    cntt = 0\n    temp = []\n    \n    for i, c in enumerate(a):\n        if c=='W':\n            if f and cntt != 0:\n                temp.append((cntt, d))\n                cntt = 0\n            elif f==False:f = True\n        else:\n            if cntt == 0 and f:\n                d = i\n            if f:cntt += 1\n                \n    temp.sort()\n    #print(temp)\n    for x, y in temp:\n        if k>x:\n            a[y:y+x] = ['W']*x\n            k -= x \n        else:\n            a[y:y+k] = ['W']*k \n            k = 0\n            break\n    #print(a)\n    f = False\n    for i, c in enumerate(a):\n        if k==0:break\n        if f:\n            if c=='L':\n                a[i]='W'\n                k -= 1\n                if k==0:break\n        elif c=='W':\n            dist = i\n            f = True\n    #print(a)\n    if k>0 and f:\n        if dist>=k:\n            a[dist-k:dist] = ['W']*k\n        else:\n            a[0:dist] = ['W']*dist\n    elif k>0:\n        for i, c in enumerate(a):\n            if c=='L':\n                a[i] = 'W'\n                k -= 1 \n                if k==0:break\n    #print(a)\n    ans = 0\n    p=False\n    for c in a:\n        if p==False and c=='W':\n            ans += 1 \n            p = True\n        elif p and c=='W':\n            ans += 2\n        else:\n            p = False\n    print(ans)"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n, k = map(int, input().split())\n    inp = input().lower()\n    k = min(k, inp.count('l'))\n    ans = inp.count('w') + tuple(zip(inp, 'l' + inp)).count('ww') + k * 2\n    if 'w' in inp:\n        inp2 = []\n        cur = -1\n        for c in inp:\n            if cur != -1:\n                if c == 'l':\n                    cur += 1\n                else:\n                    inp2.append(cur)\n            if c == 'w':\n                cur = 0\n        inp2.sort()\n        for inp2i in inp2:\n            if inp2i > k:\n                break\n            k -= inp2i\n            ans += 1\n    else:\n        ans = max(ans - 1, 0)\n    print(ans)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  ;\n  long long int t;\n  cin >> t;\n  while (t--) {\n    int n, k;\n    cin >> n >> k;\n    string s;\n    cin >> s;\n    int w = 0;\n    for (auto i : s) {\n      if (i == 'W') {\n        w++;\n      }\n    }\n    if (w == 0) {\n      cout << max(2 * k - 1, 0) << \"\\n\";\n      continue;\n    }\n    w += k;\n    if (w >= n) {\n      cout << n * 2 - 1 << \"\\n\";\n      continue;\n    }\n    vector<long long int> v;\n    long long int val = 0;\n    for (long long int i = 0; i < n; i++) {\n      if (s[i] == 'L') {\n        val++;\n      } else {\n        v.push_back(val);\n        val = 0;\n      }\n    }\n    if (val > 0) {\n      v.push_back(val);\n    }\n    if (s[0] == 'L') {\n      v.erase(v.begin());\n    }\n    if (s[n - 1] == 'L') {\n      v.erase(v.begin() + v.size() - 1);\n    }\n    long long int p = 0, i;\n    sort(v.begin(), v.end());\n    for (i = 0; i < v.size(); i++) {\n      if (p + v[i] > k) {\n        break;\n      }\n      p += v[i];\n    }\n    long long int wl = v.size() - i;\n    cout << 2 * w - wl - 1 << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvector<long long> gap;\nlong long n, k, cnt, ccnt;\nchar seq[100005];\nvoid solve() {\n  gap.clear();\n  long long lent = 0;\n  long long i = 0;\n  while (seq[i] == 'L') {\n    ++i;\n  }\n  for (; i < n; ++i) {\n    if (seq[i] == 'L') {\n      lent++;\n    } else {\n      if (lent) {\n        gap.push_back(lent);\n        lent = 0;\n      }\n    }\n  }\n  sort(gap.begin(), gap.end());\n  long long gaps = gap.size() + 1;\n  for (int i = 0; i < (int)gap.size(); ++i) {\n    if (k >= gap[i]) {\n      k -= gap[i];\n      gaps--;\n    }\n  }\n  printf(\"%lld\\n\", cnt * 2 - gaps > 0 ? cnt * 2 - gaps : 0);\n}\nint main() {\n  int Case;\n  scanf(\"%d\", &Case);\n  while (Case--) {\n    scanf(\"%lld %lld\", &n, &k);\n    getchar();\n    ccnt = cnt = 0;\n    for (int i = 0; i < n; ++i) {\n      scanf(\"%c\", &seq[i]);\n      if (seq[i] == 'W') {\n        ccnt++;\n      }\n    }\n    cnt = ccnt + k;\n    cnt = cnt > n ? n : cnt;\n    solve();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.BufferedInputStream;\nimport java.io.BufferedOutputStream;\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.List;\nimport java.util.Random;\nimport java.util.StringTokenizer;\n\npublic class Main {\n\n    public static void main(String[] args) throws IOException {\n        FastScanner in = new FastScanner();\n        MyWriter out = new MyWriter(System.out);\n\n\n        int tries = in.nextInt();\n\n        boolean[] win_lose = new boolean[100_000];\n\n        for (int i = 0; i < tries; i++) {\n            int n = in.nextInt();\n            int k = in.nextInt();\n            String results = in.next();\n\n            int all_losses = 0;\n            int current_win = 0;\n\n            boolean prev = false;\n            for (int j = 0; j < n; j++) {\n\n                if (results.charAt(j) == 'W') {\n                    if (prev) {\n                        current_win += 2;\n                    } else {\n                        current_win += 1;\n                    }\n                    win_lose[j] = true;\n                    prev = true;\n                } else {\n                    all_losses++;\n                    win_lose[j] = false;\n                    prev = false;\n                }\n            }\n            int gain = doWork(n, k, win_lose, all_losses, current_win);\n\n            out.print(gain + current_win);\n            out.println();\n        }\n\n        out.close();\n    }\n\n    public static int doWork(int n, int k, boolean[] win_lose, int all_losses, int all_wins) {\n        int additional_win = 0;\n\n        List<Segment> segments = new ArrayList<>();\n        int last_win = -1;\n        for (int i = 0; i < n; i++) {\n            if (win_lose[i]) {\n                if (last_win != -1 && i - last_win > 1) {\n                    segments.add(new Segment(last_win, i));\n                }\n                last_win = i;\n            }\n        }\n        Collections.sort(segments);\n\n        int changes_left = k;\n        for (Segment segment : segments) {\n            int span = segment.end - segment.start - 1;\n            if (changes_left - span >= 0) {\n                additional_win += (span * 2 + 1);\n                all_losses -= span;\n                changes_left -= span;\n            } else {\n                additional_win += (changes_left * 2);\n                return additional_win;\n            }\n        }\n        if (changes_left == 0) {\n            return additional_win;\n        }\n\n        boolean is_there_any_W = (additional_win + all_wins != 0);\n        if (is_there_any_W) {\n            if (all_losses > changes_left) {\n                additional_win += (changes_left * 2);\n            } else {\n                additional_win += (all_losses * 2);\n            }\n        } else {\n            if (all_losses > changes_left) {\n                additional_win += (changes_left * 2) - 1;\n            } else {\n                additional_win += (all_losses * 2) - 1;\n            }\n        }\n\n\n        return additional_win;\n    }\n\n    public static class Segment implements Comparable<Segment> {\n        public int start;\n        public int end;\n\n        public Segment(int start, int end) {\n            this.start = start;\n            this.end = end;\n        }\n\n\n        @Override\n        public int compareTo(Segment o) {\n            return (this.end - this.start) - (o.end - o.start);\n        }\n    }\n\n\n    static class MyWriter {\n        BufferedOutputStream out;\n\n        final int bufSize = 1 << 16;\n        int n;\n        byte b[] = new byte[bufSize];\n\n        MyWriter(OutputStream out) {\n            this.out = new BufferedOutputStream(out, bufSize);\n            this.n = 0;\n        }\n\n        byte c[] = new byte[20];\n\n        void print(int x) throws IOException {\n            int cn = 0;\n            if (n + 20 >= bufSize)\n                flush();\n            if (x < 0) {\n                b[n++] = (byte) ('-');\n                x = -x;\n            }\n            while (cn == 0 || x != 0) {\n                c[cn++] = (byte) (x % 10 + '0');\n                x /= 10;\n            }\n            while (cn-- > 0)\n                b[n++] = c[cn];\n        }\n\n        void print(char x) throws IOException {\n            if (n == bufSize)\n                flush();\n            b[n++] = (byte) x;\n        }\n\n        void print(String s) throws IOException {\n            for (int i = 0; i < s.length(); i++)\n                print(s.charAt(i));\n        }\n\n        void println(String s) throws IOException {\n            print(s);\n            println();\n        }\n\n        static final String newLine = System.getProperty(\"line.separator\");\n\n        void println() throws IOException {\n            print(newLine);\n        }\n\n        void flush() throws IOException {\n            out.write(b, 0, n);\n            n = 0;\n        }\n\n        void close() throws IOException {\n            flush();\n            out.close();\n        }\n    }\n\n    static class MyReader {\n        BufferedInputStream in;\n\n        final int bufSize = 1 << 16;\n        final byte b[] = new byte[bufSize];\n\n        MyReader(InputStream in) {\n            this.in = new BufferedInputStream(in, bufSize);\n        }\n\n        int nextInt() throws IOException {\n            int c;\n            while ((c = nextChar()) <= 32)\n                ;\n            int x = 0, sign = 1;\n            if (c == '-') {\n                sign = -1;\n                c = nextChar();\n            }\n            while (c >= '0') {\n                x = x * 10 + (c - '0');\n                c = nextChar();\n            }\n            return x * sign;\n        }\n\n        StringBuilder _buf = new StringBuilder();\n\n        String nextWord() throws IOException {\n            int c;\n            _buf.setLength(0);\n            while ((c = nextChar()) <= 32 && c != -1)\n                ;\n            if (c == -1)\n                return null;\n            while (c > 32) {\n                _buf.append((char) c);\n                c = nextChar();\n            }\n            return _buf.toString();\n        }\n\n        int bn = bufSize, k = bufSize;\n\n        int nextChar() throws IOException {\n            if (bn == k) {\n                k = in.read(b, 0, bufSize);\n                bn = 0;\n            }\n            return bn >= k ? -1 : b[bn++];\n        }\n\n        int nextNotSpace() throws IOException {\n            int ch;\n            while ((ch = nextChar()) <= 32 && ch != -1)\n                ;\n            return ch;\n        }\n    }\n\n    static final Random random = new Random();\n\n//    static void ruffleSort(int[] a) {\n//        int n = a.length;//shuffle, then sort\n//        for (int i = 0; i < n; i++) {\n//            int oi = random.nextInt(n), temp = a[oi];\n//            a[oi] = a[i];\n//            a[i] = temp;\n//        }\n//        Arrays.sort(a);\n//    }\n\n    static class FastScanner {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        StringTokenizer st = new StringTokenizer(\"\");\n\n        String next() {\n            while (!st.hasMoreTokens())\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        int[] readArray(int n) {\n            int[] a = new int[n];\n            for (int i = 0; i < n; i++) a[i] = nextInt();\n            return a;\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n    }\n\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Arrays;\nimport java.util.Collections;\nimport java.util.LinkedList;\nimport java.util.Scanner;\n\npublic class Main\n{\n\n\tpublic static void main(String[] args)\n\t{\n\t\tScanner sc = new Scanner(System.in);\n\t\twhile (sc.hasNext())\n\t\t{\n\t\t\tint dd = sc.nextInt();\n\t\t\twhile (dd-- > 0)\n\t\t\t{\n\t\t\t\tint a = sc.nextInt(), b = sc.nextInt();\n\t\t\t\tchar str[] = sc.next().toCharArray();\n\t\t\t\tint ok = 0;\n\t\t\t\tfor (char i : str)\n\t\t\t\t\tif (i == 'W')\n\t\t\t\t\t\tok++;\n\t\t\t\t;\n\t\t\t\tif (b >= a - ok)\n\t\t\t\t{\n\t\t\t\t\tSystem.out.println(2 * (a - 1) + 1);\n\t\t\t\t} else\n\t\t\t\t{\n\t\t\t\t\tLinkedList<Integer> list = new LinkedList<Integer>();\n\n\t\t\t\t\tint len = 0;\n\t\t\t\t\tfor (int i = 0; i < str.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (str[i] == 'W')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlen++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tint k = str.length - 1;\n\t\t\t\t\tint l = 0;\n\t\t\t\t\tfor (k = str.length - 1; k >= 0; k--)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (str[k] == 'L')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t} else\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfor (int i = 0; i < str.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (str[i] == 'L')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tl++;\n\t\t\t\t\t\t} else\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tint jk = 0;\n\t\t\t\t\n\t\t\t\t\tfor (int i = l; i <= k; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (str[i] == 'L')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tjk++;\n\t\t\t\t\t\t} else\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (jk != 0)\n\t\t\t\t\t\t\t{\n\n\t\t\t\t\t\t\t\tlist.add(jk);\n\t\t\t\t\t\t\t\tjk = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (i == k && jk != 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlist.add(jk);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tint oo =b;\n\t\t\tCollections.sort(list);\n\t\t\t\t\twhile (!list.isEmpty())\n\t\t\t\t\t{\n\t\t\t\t\t\tif (oo<list.get(0))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\too-=list.get(0);\n\t\t\t\t\t\tlist.remove(0);\n\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\tint dp=b+len;\n\n\t\t\t\tif (dp==0)\n\t\t\t\t{\n\t\t\t\t\tSystem.out.println(0);\n\t\t\t\t}else {\n\t\t\t\t\t\n\t\t\t\t\tSystem.out.println((dp-list.size()-1)*2+list.size()+1);\n\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t}\n}\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.*;\nimport java.io.*;\n\npublic class CFB {\n  BufferedReader br;\n  PrintWriter out;\n  StringTokenizer st;\n  boolean eof;\n  private static final long MOD = 1000L * 1000L * 1000L + 7;\n  private static final int[] dx = {0, -1, 0, 1};\n  private static final int[] dy = {1, 0, -1, 0};\n  private static final String yes = \"Yes\";\n  private static final String no = \"No\";\n  private static final char WIN = 'W';\n  private static final char LOSE = 'L';\n\n  void solve() {\n    int T = nextInt();\n    for (int i = 0; i < T; i++) {\n      helper();\n    }\n  }\n\n  void helper() {\n    int n = nextInt();\n    int k = nextInt();\n    char[] arr = nextString().toCharArray();\n\n    List<Pair<Integer, Integer>> pairs = new ArrayList<>();\n    int start = 0;\n    while (start < n) {\n      if (arr[start] == 'W') {\n        start++;\n        continue;\n      }\n\n      int end = start;\n      while (end < n && arr[end] == 'L') {\n        end++;\n      }\n\n      pairs.add(new Pair<>(start, end - 1));\n      start = end;\n    }\n\n    List<Pair<Integer, Integer>> first = new ArrayList<>();\n    List<Pair<Integer, Integer>> second = new ArrayList<>();\n    for (Pair<Integer, Integer> p : pairs) {\n      if (p.first == 0 || p.second == n - 1) {\n        second.add(p);\n      } else {\n        first.add(p);\n      }\n    }\n\n    Collections.sort(first, new Comparator<Pair<Integer, Integer>>() {\n      @Override\n      public int compare(Pair<Integer, Integer> o1, Pair<Integer, Integer> o2) {\n        return Integer.compare(o1.second - o1.first, o2.second - o2.first);\n      }\n    });\n    for (Pair<Integer, Integer> p : first) {\n      if (k == 0) {\n        break;\n      }\n\n      int len = p.second - p.first + 1;\n      int min = Math.min(k, len);\n      for (int i = 0; i < min; i++) {\n        arr[p.first + i] = WIN;\n      }\n\n      k -= min;\n    }\n\n    for (Pair<Integer, Integer> p : second) {\n      if (k == 0) {\n        break;\n      }\n\n      int len = p.second - p.first + 1;\n      int min = Math.min(k, len);\n\n      if (p.first == 0) {\n        for (int i = 0; i < min; i++) {\n          arr[p.second - i] = WIN;\n        }\n      } else {\n        for (int i = 0; i < min; i++) {\n          arr[p.first + i] = WIN;\n        }\n      }\n\n      k -= min;\n    }\n\n    int res = 0;\n    for (int i = 0; i < n; i++) {\n      if (arr[i] == LOSE) {\n        continue;\n      }\n      res++;\n      if (i > 0 && arr[i - 1] == WIN) {\n        res++;\n      }\n    }\n    outln(res);\n  }\n\n  class Pair<A, B> {\n    A first;\n    B second;\n\n    public Pair(A first, B second) {\n      this.first = first;\n      this.second = second;\n    }\n\n    public int hashCode() {\n      int hashFirst = first != null ? first.hashCode() : 0;\n      int hashSecond = second != null ? second.hashCode() : 0;\n\n      return (hashFirst + hashSecond) * hashSecond + hashFirst;\n    }\n\n    public boolean equals(Object other) {\n      if (other instanceof Pair) {\n        Pair otherPair = (Pair) other;\n        return\n            ((  this.first == otherPair.first ||\n                ( this.first != null && otherPair.first != null &&\n                    this.first.equals(otherPair.first))) &&\n                (  this.second == otherPair.second ||\n                    ( this.second != null && otherPair.second != null &&\n                        this.second.equals(otherPair.second))) );\n      }\n\n      return false;\n    }\n\n    public String toString() {\n      return \"(\" + first + \", \" + second + \")\";\n    }\n  }\n\n  void shuffle(long[] a) {\n    int n = a.length;\n    for(int i = 0; i < n; i++) {\n        int r = i + (int) (Math.random() * (n - i));\n        long tmp = a[i];\n        a[i] = a[r];\n        a[r] = tmp;\n    }\n  }\n  long gcd(long a, long b) {\n    while(a != 0 && b != 0) {\n        long c = b;\n        b = a % b;\n        a = c;\n    }\n    return a + b;\n  }\n  private void outln(Object o) {\n      out.println(o);\n  }\n  private void out(Object o) {\n      out.print(o);\n  }\n  private void formatPrint(double val) {\n      outln(String.format(\"%.9f%n\", val));\n  }\n  public CFB() {\n    br = new BufferedReader(new InputStreamReader(System.in));\n    out = new PrintWriter(System.out);\n    solve();\n    out.close();\n  }\n  public static void main(String[] args) {\n      new CFB();\n  }\n\n  public long[] nextLongArr(int n) {\n    long[] res = new long[n];\n    for(int i = 0; i < n; i++)\n        res[i] = nextLong();\n    return res;\n  }\n  public int[] nextIntArr(int n) {\n    int[] res = new int[n];\n    for(int i = 0; i < n; i++)\n        res[i] = nextInt();\n    return res;\n  }\n  public String nextToken() {\n    while (st == null || !st.hasMoreTokens()) {\n        try {\n            st = new StringTokenizer(br.readLine());\n        } catch (Exception e) {\n            eof = true;\n            return null;\n        }\n    }\n    return st.nextToken();\n  }\n  public String nextString() {\n    try {\n        return br.readLine();\n    } catch (IOException e) {\n        eof = true;\n        return null;\n    }\n  }\n  public int nextInt() {\n      return Integer.parseInt(nextToken());\n  }\n  public long nextLong() {\n      return Long.parseLong(nextToken());\n  }\n  public double nextDouble() {\n        return Double.parseDouble(nextToken());\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor it in range(0, t):\n    n, k = tuple(list(map(int, input().split(' '))))\n    results = [char for char in input()]\n\n    initial_score = 0\n    loss_amount = 0\n\n    for i in range(0, len(results)):\n        if i > 0 and results[i] == 'W' and results[i - 1] == 'W':\n            initial_score += 1\n        if results[i] == 'L':\n            loss_amount += 1\n\n    k = min(k, loss_amount)\n    initial_score += (n - loss_amount)\n    \n    streak_increase_added_score = 2 * k\n    \n    if loss_amount == n and streak_increase_added_score > 0:\n        streak_increase_added_score -= 1\n\n    streak_diffs = []\n    current_streak_diff = 0\n    streak_found = 0\n    for i in range(0, n):\n        if results[i] == 'W':\n            streak_found = True\n            if current_streak_diff != 0:\n                streak_diffs.append(current_streak_diff)\n                current_streak_diff = 0\n        if results[i] == 'L' and streak_found:\n            current_streak_diff += 1\n\n\n    sorted_streak_diffs = sorted(streak_diffs)\n\n    disjoint_streak_decrease_added_score = 0\n    for i in range(0, len(sorted_streak_diffs)):\n        if k >= sorted_streak_diffs[i]:\n            disjoint_streak_decrease_added_score += 1\n            k -= sorted_streak_diffs[i]\n        else:\n            break\n\n    final_score = (initial_score + streak_increase_added_score + disjoint_streak_decrease_added_score)\n\n    print(final_score)\n\n"
        },
        {
            "language": 3,
            "solution": "# ---------------------------iye ha aam zindegi---------------------------------------------\nimport math\nimport random\nimport heapq, bisect\nimport sys\nfrom collections import deque, defaultdict\nfrom fractions import Fraction\nimport sys\nimport threading\nfrom collections import defaultdict\n#threading.stack_size(10**8)\nmod = 10 ** 9 + 7\nmod1 = 998244353\n\n# ------------------------------warmup----------------------------\nimport os\nimport sys\nfrom io import BytesIO, IOBase\n#sys.setrecursionlimit(300000)\n\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\n\n# -------------------game starts now----------------------------------------------------import math\nclass TreeNode:\n    def __init__(self, k, v):\n        self.key = k\n        self.value = v\n        self.left = None\n        self.right = None\n        self.parent = None\n        self.height = 1\n        self.num_left = 1\n        self.num_total = 1\n\n\nclass AvlTree:\n\n    def __init__(self):\n        self._tree = None\n\n    def add(self, k, v):\n        if not self._tree:\n            self._tree = TreeNode(k, v)\n            return\n        node = self._add(k, v)\n        if node:\n            self._rebalance(node)\n\n    def _add(self, k, v):\n        node = self._tree\n        while node:\n            if k < node.key:\n                if node.left:\n                    node = node.left\n                else:\n                    node.left = TreeNode(k, v)\n                    node.left.parent = node\n                    return node.left\n            elif node.key < k:\n                if node.right:\n                    node = node.right\n                else:\n                    node.right = TreeNode(k, v)\n                    node.right.parent = node\n                    return node.right\n            else:\n                node.value = v\n                return\n\n    @staticmethod\n    def get_height(x):\n        return x.height if x else 0\n\n    @staticmethod\n    def get_num_total(x):\n        return x.num_total if x else 0\n\n    def _rebalance(self, node):\n\n        n = node\n        while n:\n            lh = self.get_height(n.left)\n            rh = self.get_height(n.right)\n            n.height = max(lh, rh) + 1\n            balance_factor = lh - rh\n            n.num_total = 1 + self.get_num_total(n.left) + self.get_num_total(n.right)\n            n.num_left = 1 + self.get_num_total(n.left)\n\n            if balance_factor > 1:\n                if self.get_height(n.left.left) < self.get_height(n.left.right):\n                    self._rotate_left(n.left)\n                self._rotate_right(n)\n            elif balance_factor < -1:\n                if self.get_height(n.right.right) < self.get_height(n.right.left):\n                    self._rotate_right(n.right)\n                self._rotate_left(n)\n            else:\n                n = n.parent\n\n    def _remove_one(self, node):\n        \"\"\"\n        Side effect!!! Changes node. Node should have exactly one child\n        \"\"\"\n        replacement = node.left or node.right\n        if node.parent:\n            if AvlTree._is_left(node):\n                node.parent.left = replacement\n            else:\n                node.parent.right = replacement\n            replacement.parent = node.parent\n            node.parent = None\n        else:\n            self._tree = replacement\n            replacement.parent = None\n        node.left = None\n        node.right = None\n        node.parent = None\n        self._rebalance(replacement)\n\n    def _remove_leaf(self, node):\n        if node.parent:\n            if AvlTree._is_left(node):\n                node.parent.left = None\n            else:\n                node.parent.right = None\n            self._rebalance(node.parent)\n        else:\n            self._tree = None\n        node.parent = None\n        node.left = None\n        node.right = None\n\n    def remove(self, k):\n        node = self._get_node(k)\n        if not node:\n            return\n        if AvlTree._is_leaf(node):\n            self._remove_leaf(node)\n            return\n        if node.left and node.right:\n            nxt = AvlTree._get_next(node)\n            node.key = nxt.key\n            node.value = nxt.value\n            if self._is_leaf(nxt):\n                self._remove_leaf(nxt)\n            else:\n                self._remove_one(nxt)\n            self._rebalance(node)\n        else:\n            self._remove_one(node)\n\n    def get(self, k):\n        node = self._get_node(k)\n        return node.value if node else -1\n\n    def _get_node(self, k):\n        if not self._tree:\n            return None\n        node = self._tree\n        while node:\n            if k < node.key:\n                node = node.left\n            elif node.key < k:\n                node = node.right\n            else:\n                return node\n        return None\n\n    def get_at(self, pos):\n        x = pos + 1\n        node = self._tree\n        while node:\n            if x < node.num_left:\n                node = node.left\n            elif node.num_left < x:\n                x -= node.num_left\n                node = node.right\n            else:\n                return (node.key, node.value)\n        raise IndexError(\"Out of ranges\")\n\n    @staticmethod\n    def _is_left(node):\n        return node.parent.left and node.parent.left == node\n\n    @staticmethod\n    def _is_leaf(node):\n        return node.left is None and node.right is None\n\n    def _rotate_right(self, node):\n        if not node.parent:\n            self._tree = node.left\n            node.left.parent = None\n        elif AvlTree._is_left(node):\n            node.parent.left = node.left\n            node.left.parent = node.parent\n        else:\n            node.parent.right = node.left\n            node.left.parent = node.parent\n        bk = node.left.right\n        node.left.right = node\n        node.parent = node.left\n        node.left = bk\n        if bk:\n            bk.parent = node\n        node.height = max(self.get_height(node.left), self.get_height(node.right)) + 1\n        node.num_total = 1 + self.get_num_total(node.left) + self.get_num_total(node.right)\n        node.num_left = 1 + self.get_num_total(node.left)\n\n    def _rotate_left(self, node):\n        if not node.parent:\n            self._tree = node.right\n            node.right.parent = None\n        elif AvlTree._is_left(node):\n            node.parent.left = node.right\n            node.right.parent = node.parent\n        else:\n            node.parent.right = node.right\n            node.right.parent = node.parent\n        bk = node.right.left\n        node.right.left = node\n        node.parent = node.right\n        node.right = bk\n        if bk:\n            bk.parent = node\n        node.height = max(self.get_height(node.left), self.get_height(node.right)) + 1\n        node.num_total = 1 + self.get_num_total(node.left) + self.get_num_total(node.right)\n        node.num_left = 1 + self.get_num_total(node.left)\n\n    @staticmethod\n    def _get_next(node):\n        if not node.right:\n            return node.parent\n        n = node.right\n        while n.left:\n            n = n.left\n        return n\n\n\n# -----------------------------------------------binary seacrh tree---------------------------------------\nclass SegmentTree1:\n    def __init__(self, data, default=2**30, func=lambda a, b: min(a , b)):\n        \"\"\"initialize the segment tree with data\"\"\"\n        self._default = default\n        self._func = func\n        self._len = len(data)\n        self._size = _size = 1 << (self._len - 1).bit_length()\n\n        self.data = [default] * (2 * _size)\n        self.data[_size:_size + self._len] = data\n        for i in reversed(range(_size)):\n            self.data[i] = func(self.data[i + i], self.data[i + i + 1])\n\n    def __delitem__(self, idx):\n        self[idx] = self._default\n\n    def __getitem__(self, idx):\n        return self.data[idx + self._size]\n\n    def __setitem__(self, idx, value):\n        idx += self._size\n        self.data[idx] = value\n        idx >>= 1\n        while idx:\n            self.data[idx] = self._func(self.data[2 * idx], self.data[2 * idx + 1])\n            idx >>= 1\n\n    def __len__(self):\n        return self._len\n\n    def query(self, start, stop):\n        if start == stop:\n            return self.__getitem__(start)\n        stop += 1\n        start += self._size\n        stop += self._size\n\n        res = self._default\n        while start < stop:\n            if start & 1:\n                res = self._func(res, self.data[start])\n                start += 1\n            if stop & 1:\n                stop -= 1\n                res = self._func(res, self.data[stop])\n            start >>= 1\n            stop >>= 1\n        return res\n\n    def __repr__(self):\n        return \"SegmentTree({0})\".format(self.data)\n\n\n# -------------------game starts now----------------------------------------------------import math\nclass SegmentTree:\n    def __init__(self, data, default=0, func=lambda a, b:max(a , b)):\n        \"\"\"initialize the segment tree with data\"\"\"\n        self._default = default\n        self._func = func\n        self._len = len(data)\n        self._size = _size = 1 << (self._len - 1).bit_length()\n\n        self.data = [default] * (2 * _size)\n        self.data[_size:_size + self._len] = data\n        for i in reversed(range(_size)):\n            self.data[i] = func(self.data[i + i], self.data[i + i + 1])\n\n    def __delitem__(self, idx):\n        self[idx] = self._default\n\n    def __getitem__(self, idx):\n        return self.data[idx + self._size]\n\n    def __setitem__(self, idx, value):\n        idx += self._size\n        self.data[idx] = value\n        idx >>= 1\n        while idx:\n            self.data[idx] = self._func(self.data[2 * idx], self.data[2 * idx + 1])\n            idx >>= 1\n\n    def __len__(self):\n        return self._len\n\n    def query(self, start, stop):\n        if start == stop:\n            return self.__getitem__(start)\n        stop += 1\n        start += self._size\n        stop += self._size\n\n        res = self._default\n        while start < stop:\n            if start & 1:\n                res = self._func(res, self.data[start])\n                start += 1\n            if stop & 1:\n                stop -= 1\n                res = self._func(res, self.data[stop])\n            start >>= 1\n            stop >>= 1\n        return res\n\n    def __repr__(self):\n        return \"SegmentTree({0})\".format(self.data)\n\n\n# -------------------------------iye ha chutiya zindegi-------------------------------------\nclass Factorial:\n    def __init__(self, MOD):\n        self.MOD = MOD\n        self.factorials = [1, 1]\n        self.invModulos = [0, 1]\n        self.invFactorial_ = [1, 1]\n\n    def calc(self, n):\n        if n <= -1:\n            print(\"Invalid argument to calculate n!\")\n            print(\"n must be non-negative value. But the argument was \" + str(n))\n            exit()\n        if n < len(self.factorials):\n            return self.factorials[n]\n        nextArr = [0] * (n + 1 - len(self.factorials))\n        initialI = len(self.factorials)\n        prev = self.factorials[-1]\n        m = self.MOD\n        for i in range(initialI, n + 1):\n            prev = nextArr[i - initialI] = prev * i % m\n        self.factorials += nextArr\n        return self.factorials[n]\n\n    def inv(self, n):\n        if n <= -1:\n            print(\"Invalid argument to calculate n^(-1)\")\n            print(\"n must be non-negative value. But the argument was \" + str(n))\n            exit()\n        p = self.MOD\n        pi = n % p\n        if pi < len(self.invModulos):\n            return self.invModulos[pi]\n        nextArr = [0] * (n + 1 - len(self.invModulos))\n        initialI = len(self.invModulos)\n        for i in range(initialI, min(p, n + 1)):\n            next = -self.invModulos[p % i] * (p // i) % p\n            self.invModulos.append(next)\n        return self.invModulos[pi]\n\n    def invFactorial(self, n):\n        if n <= -1:\n            print(\"Invalid argument to calculate (n^(-1))!\")\n            print(\"n must be non-negative value. But the argument was \" + str(n))\n            exit()\n        if n < len(self.invFactorial_):\n            return self.invFactorial_[n]\n        self.inv(n)  # To make sure already calculated n^-1\n        nextArr = [0] * (n + 1 - len(self.invFactorial_))\n        initialI = len(self.invFactorial_)\n        prev = self.invFactorial_[-1]\n        p = self.MOD\n        for i in range(initialI, n + 1):\n            prev = nextArr[i - initialI] = (prev * self.invModulos[i % p]) % p\n        self.invFactorial_ += nextArr\n        return self.invFactorial_[n]\n\n\nclass Combination:\n    def __init__(self, MOD):\n        self.MOD = MOD\n        self.factorial = Factorial(MOD)\n\n    def ncr(self, n, k):\n        if k < 0 or n < k:\n            return 0\n        k = min(k, n - k)\n        f = self.factorial\n        return f.calc(n) * f.invFactorial(max(n - k, k)) * f.invFactorial(min(k, n - k)) % self.MOD\n\n\n# --------------------------------------iye ha combinations ka zindegi---------------------------------\ndef powm(a, n, m):\n    if a == 1 or n == 0:\n        return 1\n    if n % 2 == 0:\n        s = powm(a, n // 2, m)\n        return s * s % m\n    else:\n        return a * powm(a, n - 1, m) % m\n\n\n# --------------------------------------iye ha power ka zindegi---------------------------------\ndef sort_list(list1, list2):\n    zipped_pairs = zip(list2, list1)\n\n    z = [x for _, x in sorted(zipped_pairs)]\n\n    return z\n\n\n# --------------------------------------------------product----------------------------------------\ndef product(l):\n    por = 1\n    for i in range(len(l)):\n        por *= l[i]\n    return por\n\n\n# --------------------------------------------------binary----------------------------------------\ndef binarySearchCount(arr, n, key):\n    left = 0\n    right = n - 1\n\n    count = 0\n\n    while (left <= right):\n        mid = int((right + left) / 2)\n\n        # Check if middle element is\n        # less than or equal to key\n        if (arr[mid] < key):\n            count = mid + 1\n            left = mid + 1\n\n        # If key is smaller, ignore right half\n        else:\n            right = mid - 1\n\n    return count\n\n\n# --------------------------------------------------binary----------------------------------------\ndef countdig(n):\n    c = 0\n    while (n > 0):\n        n //= 10\n        c += 1\n    return c\ndef binary(x, length):\n    y = bin(x)[2:]\n    return y if len(y) >= length else \"0\" * (length - len(y)) + y\n\ndef countGreater(arr, n, k):\n    l = 0\n    r = n - 1\n\n    # Stores the index of the left most element\n    # from the array which is greater than k\n    leftGreater = n\n\n    # Finds number of elements greater than k\n    while (l <= r):\n        m = int(l + (r - l) / 2)\n        if (arr[m] > k):\n            leftGreater = m\n            r = m - 1\n\n        # If mid element is less than\n        # or equal to k update l\n        else:\n            l = m + 1\n\n    # Return the count of elements\n    # greater than k\n    return (n - leftGreater)\n\n\n# --------------------------------------------------binary------------------------------------\nclass TrieNode:\n    def __init__(self):\n        self.children = [None] * 26\n        self.isEndOfWord = False\nclass Trie:\n    def __init__(self):\n        self.root = self.getNode()\n    def getNode(self):\n        return TrieNode()\n    def _charToIndex(self, ch):\n        return ord(ch) - ord('a')\n    def insert(self, key):\n        pCrawl = self.root\n        length = len(key)\n        for level in range(length):\n            index = self._charToIndex(key[level])\n            if not pCrawl.children[index]:\n                pCrawl.children[index] = self.getNode()\n            pCrawl = pCrawl.children[index]\n        pCrawl.isEndOfWord = True\n    def search(self, key):\n        pCrawl = self.root\n        length = len(key)\n        for level in range(length):\n            index = self._charToIndex(key[level])\n            if not pCrawl.children[index]:\n                return False\n            pCrawl = pCrawl.children[index]\n        return pCrawl != None and pCrawl.isEndOfWord\n#-----------------------------------------trie---------------------------------\nclass Node:\n    def __init__(self, data):\n        self.data = data\n        self.count=0\n        self.left = None  # left node for 0\n        self.right = None  # right node for 1\nclass BinaryTrie:\n    def __init__(self):\n        self.root = Node(0)\n    def insert(self, pre_xor):\n        self.temp = self.root\n        for i in range(31, -1, -1):\n            val = pre_xor & (1 << i)\n            if val:\n                if not self.temp.right:\n                    self.temp.right = Node(0)\n                self.temp = self.temp.right\n                self.temp.count+=1\n            if not val:\n                if not self.temp.left:\n                    self.temp.left = Node(0)\n                self.temp = self.temp.left\n                self.temp.count += 1\n        self.temp.data = pre_xor\n    def query(self, xor):\n        self.temp = self.root\n        for i in range(31, -1, -1):\n            val = xor & (1 << i)\n            if not val:\n                if self.temp.left and self.temp.left.count>0:\n                    self.temp = self.temp.left\n                elif self.temp.right:\n                    self.temp = self.temp.right\n            else:\n                if self.temp.right and self.temp.right.count>0:\n                    self.temp = self.temp.right\n                elif self.temp.left:\n                    self.temp = self.temp.left\n            self.temp.count-=1\n        return xor ^ self.temp.data\n#-------------------------bin trie-------------------------------------------\nfor ik in range(int(input())):\n    n,k=map(int,input().split())\n    s=list(input())\n    last=-1\n    diff=[]\n    cou=0\n    cur=0\n    ans=0\n    for i in range(n):\n        if s[i]=='W':\n           ans+=1\n           if i>0 and s[i-1]=='W':\n               ans+=1\n           if last!=-1:\n              if cur!=0:\n                  diff.append(cur)\n           cur=0\n           last=i\n        else:\n            cou+=1\n            cur+=1\n    k=min(cou,k)\n    diff.sort()\n    for i in range(len(diff)):\n        if k>=diff[i]:\n            ans+=diff[i]*2+1\n            k-=diff[i]\n        else:\n            break\n    ans+=k*2\n    if cou==n and k>0:\n        ans-=1\n    print(ans)\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n\tn,x=map(int,input().split())\n\tl=list(input())\n\tt=[]\n\ttemp=x\n\tc=0\n\tm=0\n\ts=0\n\tf=0\n\tm2=0\n\te=0\n\tfor i in range(1,n):\n\t\tif l[i]=='W':\n\t\t\tif l[i-1]=='W':\n\t\t\t\ts+=2\n\t\t\telse:\n\t\t\t\ts+=1\n\tif l[0]=='W':\n\t\ts+=1\n\tfor i in range(n):\n\t\tif l[i]=='L':\n\t\t\tif i==0:\n\t\t\t\tf=1\n\t\t\tc+=1\n\t\telse:\n\t\t\tif c!=0 and f==0:\n\t\t\t\tt.append(c)\n\t\t\tif f==1:\n\t\t\t\tm2=c\n\t\t\tc=0\n\t\t\tf=0\n\tif c!=0:\n\t\tif f==1:\n\t\t\te=1\n\t\t\tm2=c\n\t\telse:\n\t\t\tm=c\n\t\t\tc=0\n\tt.sort()\n\tfor i in t:\n\t\tif x>=i:\n\t\t\ts+=2*i\n\t\t\ts+=1\n\t\t\tx-=i\n\t\telse:\n\t\t\ts+=2*x\n\t\t\tx-=x\n\tif x!=0 and m!=0:\n\t\tif x>=m:\n\t\t\ts+=2*m\n\t\t\tx-=m\n\t\telse:\n\t\t\ts+=2*x\n\t\t\tx-=x\n\tif x!=0 and m2!=0:\n\t\tif x>=m2:\n\t\t\ts+=2*m2\n\t\t\tx-=m2\n\t\telse:\n\t\t\ts+=2*x\n\t\t\tx-=x\n\tif e==1:\n\t\tif temp!=0:\n\t\t\tprint(2*(temp-1)+1)\n\t\telse:\n\t\t\tprint(0)\n\telse:\n\t\tprint(s)\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor q in range(t):\n\tn, k = map(int, input().split())\n\ts = input()\n\tkol = []\n\tmas = []\n\tl = -1\n\tkz = 0\n\tfor i in range(n):\n\t\tif s[i] == 'W':\n\t\t\tif l == -1:\n\t\t\t\tl = i\n\t\t\t\tr = i\n\t\t\telse:\n\t\t\t\tr = i\n\t\t\tmas.append(1)\n\t\telse:\n\t\t\tif l != -1:\n\t\t\t\tkol.append([l, r])\n\t\t\t\tl = -1\n\t\t\tmas.append(0)\n\tif l != -1:\n\t\tkol.append([l, r])\n\tans = []\n\tfor i in range(len(kol) - 1):\n\t\tans.append(kol[i + 1][0] - kol[i][1] - 1)\n\tans.sort()\n\t#print(mas)\n\t#print(kol)\n\t#print(ans)\n\tif kol == []:\n\t\tgh = 0\n\t\tif k > 0:\n\t\t\tgh += 1\n\t\t\tk -= 1\n\t\tgh += k * 2\n\t\tprint(gh)\n\telse:\n\t\tgh = 0\n\t\tfor i in kol:\n\t\t\tif i[0] == i[1]:\n\t\t\t\tgh += 1\n\t\t\telse:\n\t\t\t\tgh += 1 + (i[1] - i[0]) * 2\n\t\t#print(\"A\", gh)\n\t\tfor i in ans:\n\t\t\tz = i\n\t\t\t#print(k, z)\n\t\t\tif k < z:\n\t\t\t\tbreak\n\t\t\tif z == 1:\n\t\t\t\tif k > 0:\n\t\t\t\t\tgh += 3\n\t\t\t\t\tk -= 1\n\t\t\t\t\tkz += 1\n\t\t\telse:\n\t\t\t\tgh += 3 + (z - 1) * 2\n\t\t\t\tk -= z\n\t\t\t\tkz += z\n\t\t#print(\"B\", gh)\n\t\tdz = sum(mas) + kz\n\t\tdz = n - dz\n\t\tgh += min(k, dz) * 2\n\t\tprint(gh)\n\n\n\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nclass cmp {\n  int n;\n\n public:\n  cmp(int p) : n(p) {}\n  bool operator()(pair<int, int> &a, pair<int, int> &b) {\n    int x = a.second - a.first + 1;\n    int y = b.second - b.first + 1;\n    if (a.first == 0) return false;\n    if (b.first == 0) return true;\n    if (a.second == n) return false;\n    if (b.second == n) return true;\n    return x <= y;\n  }\n};\nbool comp(pair<int, int> &a, pair<int, int> &b) {\n  return a.second - a.first < b.second - b.first;\n}\nint get(string &w) {\n  int cnt = 0;\n  for (int i = 0; i < (int)w.size(); i++) {\n    if (w[i] == 'W') {\n      if (i != 0 && w[i - 1] != 'L')\n        cnt += 2;\n      else\n        cnt++;\n    }\n  }\n  return cnt;\n}\nint solve(string &s, int k) {\n  int n = s.size();\n  int cnt = 0;\n  for (int i = 0; i < n; i++) {\n    if (s[i] == 'L') cnt++;\n  }\n  if (k >= cnt) {\n    return 2 * (n - 1) + 1;\n  }\n  vector<pair<int, int>> v;\n  int ind = 0;\n  while (ind < n && s[ind] == 'L') ind++;\n  int l = ind - 1;\n  int m = n - 1;\n  while (m >= 0 && s[m] == 'L') {\n    m--;\n  }\n  while (ind <= m) {\n    if (s[ind] == 'W')\n      ind++;\n    else {\n      int a = ind;\n      int b = ind;\n      while (b < n && s[b] == 'L') b++;\n      v.push_back({a, b - 1});\n      ind = b;\n    }\n  }\n  sort(v.begin(), v.end(), comp);\n  for (int i = 0; i < (int)v.size() && k > 0; i++) {\n    int p = v[i].first;\n    int q = v[i].second;\n    if (p == 0) {\n      for (; q >= p && k > 0; q--) {\n        s[q] = 'W';\n        k--;\n      }\n    } else {\n      for (; p <= v[i].second && k > 0; p++) {\n        s[p] = 'W';\n        k--;\n      }\n    }\n  }\n  m++;\n  while (m < n && k > 0) {\n    s[m] = 'W';\n    m++;\n    k--;\n  }\n  while (l >= 0 && k > 0) {\n    s[l] = 'W';\n    l--;\n    k--;\n  }\n  return get(s);\n}\nint main() {\n  int tc;\n  cin >> tc;\n  while (tc--) {\n    int n, k;\n    cin >> n >> k;\n    string s;\n    cin >> s;\n    cout << solve(s, k) << endl;\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconstexpr long long mod = 1000000007;\nconst long long INF = mod * mod;\nconst long double eps = 1e-12;\nconst long double pi = acosl(-1.0);\nlong long mod_pow(long long x, long long n, long long m = mod) {\n  long long res = 1;\n  while (n) {\n    if (n & 1) res = res * x % m;\n    x = x * x % m;\n    n >>= 1;\n  }\n  return res;\n}\nstruct modint {\n  long long n;\n  modint() : n(0) { ; }\n  modint(long long m) : n(m) {\n    if (n >= mod)\n      n %= mod;\n    else if (n < 0)\n      n = (n % mod + mod) % mod;\n  }\n  operator int() { return n; }\n};\nbool operator==(modint a, modint b) { return a.n == b.n; }\nmodint operator+=(modint& a, modint b) {\n  a.n += b.n;\n  if (a.n >= mod) a.n -= mod;\n  return a;\n}\nmodint operator-=(modint& a, modint b) {\n  a.n -= b.n;\n  if (a.n < 0) a.n += mod;\n  return a;\n}\nmodint operator*=(modint& a, modint b) {\n  a.n = ((long long)a.n * b.n) % mod;\n  return a;\n}\nmodint operator+(modint a, modint b) { return a += b; }\nmodint operator-(modint a, modint b) { return a -= b; }\nmodint operator*(modint a, modint b) { return a *= b; }\nmodint operator^(modint a, long long n) {\n  if (n == 0) return modint(1);\n  modint res = (a * a) ^ (n / 2);\n  if (n % 2) res = res * a;\n  return res;\n}\nlong long inv(long long a, long long p) {\n  return (a == 1 ? 1 : (1 - p * inv(p % a, a)) / a + p);\n}\nmodint operator/(modint a, modint b) { return a * modint(inv(b, mod)); }\nconst int max_n = 1 << 17;\nmodint fact[max_n], factinv[max_n];\nvoid init_f() {\n  fact[0] = modint(1);\n  for (int i = 0; i < max_n - 1; i++) {\n    fact[i + 1] = fact[i] * modint(i + 1);\n  }\n  factinv[max_n - 1] = modint(1) / fact[max_n - 1];\n  for (int i = max_n - 2; i >= 0; i--) {\n    factinv[i] = factinv[i + 1] * modint(i + 1);\n  }\n}\nmodint comb(int a, int b) {\n  if (a < 0 || b < 0 || a < b) return 0;\n  return fact[a] * factinv[b] * factinv[a - b];\n}\nvoid solve() {\n  int n;\n  cin >> n;\n  int k;\n  cin >> k;\n  string s;\n  cin >> s;\n  bool exi = false;\n  for (int i = 0; i < s.size(); i++)\n    if (s[i] == 'W') exi = true;\n  if (!exi) {\n    cout << max(0, 2 * k - 1) << \"\\n\";\n    return;\n  }\n  int rs = 0;\n  vector<int> vs;\n  for (int i = 0; i < s.size(); i++) {\n    if (s[i] == 'W') continue;\n    int le = i;\n    while (i + 1 < s.size() && s[i + 1] == 'L') i++;\n    if (le == 0 || i == n - 1) {\n      rs += i - le + 1;\n    } else {\n      vs.push_back(i - le + 1);\n    }\n  }\n  int ans = 0;\n  for (int i = 0; i < n; i++) {\n    if (s[i] == 'W') {\n      ans++;\n      if (i > 0 && s[i - 1] == 'W') ans++;\n    }\n  }\n  sort((vs).begin(), (vs).end());\n  for (int i = 0; i < vs.size(); i++) {\n    if (k >= vs[i]) {\n      ans += 2 * vs[i] + 1;\n      k -= vs[i];\n    } else {\n      ans += 2 * k;\n      k = 0;\n    }\n  }\n  int mi = min(k, rs);\n  ans += 2 * mi;\n  cout << ans << \"\\n\";\n}\nsigned main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  int t;\n  cin >> t;\n  for (int i = 0; i < t; i++) solve();\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n, k = [int(i) for i in input().split()]\n    lst = sorted(map(len,input().strip('L').split('W')))\n    m = len(lst) -1 + k\n    while lst and lst[0] <= k:\n        k -= lst.pop(0)\n    print((2 * min(n, m) - len(lst) or 1) - 1)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false), cin.tie(NULL);\n  int t;\n  cin >> t;\n  while (t--) {\n    int n, k;\n    cin >> n >> k;\n    string s;\n    cin >> s;\n    vector<int> v;\n    int w = 0;\n    for (int i = 0; i < s.size(); i++) {\n      if (s[i] == 'W') {\n        w++;\n      }\n    }\n    if (w == 0) {\n      if (k == 0) {\n        cout << \"0\" << endl;\n      } else {\n        cout << 2 * k - 1 << endl;\n      }\n      continue;\n    }\n    w += k;\n    if (w >= n) {\n      cout << 2 * n - 1 << endl;\n      continue;\n    } else {\n      int l = 0;\n      for (int i = 0; i < s.size(); i++) {\n        if (s[i] == 'L') {\n          l++;\n        } else {\n          v.push_back(l);\n          l = 0;\n        }\n      }\n      if (l != 0) {\n        v.push_back(l);\n      }\n      if (s[0] == 'L') {\n        v.erase(v.begin());\n      }\n      if (s[n - 1] == 'L') {\n        v.erase(v.begin() + v.size() - 1);\n      }\n      sort(v.begin(), v.end());\n      int i;\n      int sp = 0;\n      for (i = 0; i < v.size(); i++) {\n        if (sp + v[i] > k) break;\n        sp += v[i];\n      }\n      int w1 = v.size() - i;\n      cout << 2 * w - w1 - 1 << endl;\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nbool cmp(const pair<long long, long long> &a,\n         const pair<long long, long long> &b) {\n  if (a.second == b.second) {\n    return a.first < b.first;\n  }\n  return a.second < b.second;\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  ;\n  long long t;\n  cin >> t;\n  while (t-- > 0) {\n    long long n, k;\n    cin >> n >> k;\n    string s;\n    cin >> s;\n    long long i = 0, p = n - 1;\n    while (i < n && s[i] == 'L') {\n      i++;\n    }\n    while (p >= 0 && s[p] == 'L') {\n      p--;\n    }\n    long long r = i - 1;\n    vector<pair<long long, long long>> v;\n    while (i <= p) {\n      if (s[i] == 'W') {\n        while (s[i] == 'W' && i <= p) {\n          i++;\n        }\n      }\n      if (s[i] == 'L') {\n        long long pos = i;\n        while (s[i] == 'L' && i <= p) {\n          i++;\n        }\n        v.push_back({pos, i - pos});\n      }\n    }\n    sort(v.begin(), v.end(), cmp);\n    for (long long i = 0; i < v.size(); i++) {\n      long long idx = v[i].first;\n      long long len = v[i].second;\n      for (long long j = idx; j < (idx + len); j++) {\n        if (k > 0) {\n          s[j] = 'W';\n          k--;\n        }\n      }\n    }\n    if (k > 0) {\n      p++;\n      while (p < n && k > 0) {\n        s[p] = 'W';\n        p++;\n        k--;\n      }\n    }\n    if (k > 0) {\n      while (r >= 0 && k > 0) {\n        s[r] = 'W';\n        r--;\n        k--;\n      }\n    }\n    long long ans = 0;\n    for (long long i = 0; i < n; i++) {\n      if ((i - 1) >= 0 && s[i] == 'W' && s[i - 1] == 'W') {\n        ans += 2;\n      } else if (s[i] == 'W') {\n        ans++;\n      }\n    }\n    cout << ans << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\nt= int(input())\n\nfor _  in range(t):\n    [n, k]=list(map(int,input().split()))\n\n    temp=0\n    for line in sys.stdin:\n        s=line\n        break\n\n    prev='L'\n    current='L'\n    lsum=0\n    tempsum=0\n    losses=[]\n\n    startind=0\n    endind=n-1\n\n    while startind!=n and s[startind]=='L':\n        startind+=1\n\n    while endind!=-1 and s[endind]=='L':\n        endind-=1\n\n    for i in range(startind, endind+1):\n        current=s[i]\n        if current=='L' and prev=='L':\n            lsum+=1\n            tempsum+=1\n        elif current=='L' and prev=='W':\n            tempsum=1\n            lsum+=1\n        elif current=='W' and prev=='L':\n            if i!=startind:\n                losses.append(tempsum)\n        prev=current\n    losses.sort()\n\n    startloss=startind\n    endloss= n-1-endind\n    lsum+=(startloss+endloss)\n    starts=len(losses)+1\n    losses.append(startloss)\n    losses.append(endloss)\n\n    if startind==n:\n        print(max(2*k-1,k))\n    else:\n        ind = 0\n        remk=k\n        while ind < len(losses) and remk>0:\n            if remk>= losses[ind]:\n                remk -= losses[ind]\n                lsum-=losses[ind]\n                if ind< len(losses)-2:\n                    starts-=1\n            else:\n                lsum-=remk\n                break\n            ind+=1\n        # print(lsum)\n        # print(n)\n        # print(endloss)\n        # print(startloss)\n        # print(starts)\n        print((n-lsum)*2-starts)"
        },
        {
            "language": 3,
            "solution": "import sys\nimport math as m\ndef fi():\n\treturn sys.stdin.readline()\nif __name__ == '__main__':\n\tfor _ in range (int(fi())):\n\t\tn,k = map(int, fi().split())\n\t\ts = list(fi())\n\t\ts.pop()\n\t\tp = 0\n\t\tq = 0\n\t\tflag = 0\n\t\tans = 0\n\t\tprev = 'L'\n\t\tl = []\n\t\tc = 0\n\t\tfor i in range (n):\n\t\t\tif s[i] == 'W' and prev == 'L' :\n\t\t\t\tans +=1\n\t\t\t\tl.append(c)\n\t\t\t\tc = 0\n\t\t\telif s[i] == 'W' and prev == 'W':\n\t\t\t\tans+=2\n\t\t\tif s[i]=='L':\n\t\t\t\tc+=1\n\t\t\tprev = s[i]\n\t\tif s[n-1] != 'W':\n\t\t\tl.append(c)\n\t\tp = l.pop(0)\n\t\tif len(l)>0 and s[n-1]!='W':\n\t\t\tq = l.pop()\n\t\tl.sort()\n\t\tfor i in range (len(l)):\n\t\t\tif l[i]<=k:\n\t\t\t\tans+=(l[i]*2)+1\n\t\t\t\tk-=l[i]\n\t\t\telse:\n\t\t\t\tans+=k*2\n\t\t\t\tk = 0\n\t\t\t\tbreak\n\t\tif p == n and k >=n:\n\t\t\tans = 2*p-1\n\t\telif p == n and k<n:\n\t\t\tans = max(k*2-1,0)\n\t\telse:\n\t\t\tans+=min(k,p+q)*2 \n\t\tprint(ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint T, n, k, x, ans;\nint cnt, p[110000];\nchar s[110000];\nint main() {\n  scanf(\"%d\", &T);\n  while (T--) {\n    scanf(\"%d%d\", &n, &k);\n    scanf(\"%s\", s + 1);\n    cnt = 0;\n    ans = 0;\n    x = 0;\n    for (int i = 1; i <= n; i++)\n      if (s[i] == 'W') {\n        if (x) p[++cnt] = i - x - 1;\n        ans++;\n        x = i;\n      }\n    if (!ans) {\n      if (!k)\n        puts(\"0\");\n      else\n        printf(\"%d\\n\", 2 * k - 1);\n      continue;\n    }\n    k = min(k, n - ans);\n    sort(p + 1, p + cnt + 1);\n    ans += 2 * k;\n    for (int i = 1; i <= cnt; i++)\n      if (p[i] <= k) {\n        k -= p[i];\n        ans++;\n      }\n    printf(\"%d\\n\", ans);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "//package codeforces.globalround11;\n\nimport java.io.*;\nimport java.util.*;\n\npublic class B {\n    static InputReader in;\n    static PrintWriter out;\n\n    public static void main(String[] args) {\n        //initReaderPrinter(true);\n        initReaderPrinter(false);\n        solve(in.nextInt());\n        //solve(1);        \n    }\n\n    static void solve(int testCnt) {\n        for (int testNumber = 0; testNumber < testCnt; testNumber++) {\n            int n = in.nextInt(), k = in.nextInt();\n            String s = in.next();\n\n            int sum = 0;\n            int l = -1, r = -1, l1 = -1, r1 = -1, l2 = -1, r2 = -1;\n            List<int[]> intervals = new ArrayList<>();\n            for(int i = 0; i < n; i++) {\n                if(s.charAt(i) == 'W') {\n                    sum += (i > 0 && s.charAt(i - 1) == 'W' ? 2 : 1);\n                }\n                else {\n                    if(l < 0) {\n                        l = i;\n                        r = i;\n                    }\n                    else if(i - 1 == r){\n                        r = i;\n                    }\n                    else {\n                        if(l == 0) {\n                            l1 = l;\n                            r1 = r;\n                            l = i;\n                            r = i;\n                        }\n                        else {\n                            intervals.add(new int[]{l, r});\n                            l = i;\n                            r = i;\n                        }\n                    }\n                }\n            }\n            if(l == 0) {\n                l1 = l;\n                r1 = r;\n            }\n            else if(l > 0) {\n                if(r == n - 1) {\n                    l2 = l;\n                    r2 = r;\n                }\n                else {\n                    intervals.add(new int[]{l, r});\n                }\n            }\n            Collections.sort(intervals, (e1, e2) -> {\n                return (e1[1] - e1[0]) - (e2[1] - e2[0]);\n            });\n            for(int i = 0; i < intervals.size() && k > 0; i++) {\n                int[] curr = intervals.get(i);\n                if(k >= curr[1] - curr[0] + 1) {\n                    sum += (2 * (curr[1] - curr[0] + 1) + (curr[1] == n - 1 ? 0 : 1));\n                }\n                else {\n                    sum += 2 * k;\n                }\n                k -= Math.min(k, curr[1] - curr[0] + 1);\n            }\n            if(k > 0) {\n                int cnt1 = l1 >= 0 ? (r1 - l1 + 1) : 0;\n                int cnt2 = l2 >= 0 ? (r2 - l2 + 1) : 0;\n                if(cnt1 + cnt2 == n) {\n                    sum += k * 2 - 1;\n                }\n                else {\n                    sum += Math.min(k, cnt1 + cnt2) * 2;\n                }\n            }\n//            if(k > 0 && l1 == 0) {\n//                if(k >= r1 - l1 + 1) {\n//                    sum += ((r1 - l1 + 1) * 2 - (r1 + 1 < n ? 0 : 1));\n//                }\n//                else {\n//                    sum += (k * 2 - 1);\n//                }\n//            }\n            out.println(sum);\n        }\n        out.close();\n    }\n\n    static void initReaderPrinter(boolean test) {\n        if (test) {\n            try {\n                in = new InputReader(new FileInputStream(\"src/input.in\"));\n                out = new PrintWriter(new FileOutputStream(\"src/output.out\"));\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        } else {\n            in = new InputReader(System.in);\n            out = new PrintWriter(System.out);\n        }\n    }\n\n    static class InputReader {\n        BufferedReader br;\n        StringTokenizer st;\n\n        InputReader(InputStream stream) {\n            try {\n                br = new BufferedReader(new InputStreamReader(stream), 32768);\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreTokens()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine() {\n            String str = \"\";\n            try {\n                str = br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n\n        Integer[] nextIntArray(int n) {\n            Integer[] a = new Integer[n];\n            for (int i = 0; i < n; i++) {\n                a[i] = nextInt();\n            }\n            return a;\n        }\n\n        Long[] nextLongArray(int n) {\n            Long[] a = new Long[n];\n            for (int i = 0; i < n; i++) {\n                a[i] = nextLong();\n            }\n            return a;\n        }\n    }\n}\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\nconstexpr int INF = 0x3f3f3f3f;\nconstexpr ll LINF = 0x3f3f3f3f3f3f3f3fLL;\nconstexpr double EPS = 1e-8;\nconstexpr int MOD = 1000000007;\nconstexpr int dy[] = {1, 0, -1, 0}, dx[] = {0, -1, 0, 1};\nconstexpr int dy8[] = {1, 1, 0, -1, -1, -1, 0, 1},\n              dx8[] = {0, -1, -1, -1, 0, 1, 1, 1};\ntemplate <typename T, typename U>\ninline bool chmax(T &a, U b) {\n  return a < b ? (a = b, true) : false;\n}\ntemplate <typename T, typename U>\ninline bool chmin(T &a, U b) {\n  return a > b ? (a = b, true) : false;\n}\nstruct IOSetup {\n  IOSetup() {\n    cin.tie(nullptr);\n    ios_base::sync_with_stdio(false);\n    cout << fixed << setprecision(20);\n  }\n} iosetup;\ntemplate <typename T = char, typename U = std::string>\nstd::vector<std::pair<T, int>> rle(const U &s) {\n  int n = s.size();\n  std::vector<std::pair<T, int>> res;\n  T now = s[0];\n  int cnt = 1;\n  for (int i = 1; i < n; ++i) {\n    if (s[i] != now) {\n      res.emplace_back(now, cnt);\n      cnt = 0;\n    }\n    now = s[i];\n    ++cnt;\n  }\n  res.emplace_back(now, cnt);\n  return res;\n}\nvoid solve() {\n  int n, k;\n  string s;\n  cin >> n >> k >> s;\n  if (count((s).begin(), (s).end(), 'W') == 0) {\n    cout << (k == 0 ? 0 : 1 + (k - 1) * 2) << '\\n';\n    return;\n  }\n  vector<pair<int, int>> len;\n  {\n    int idx = 0;\n    while (s[idx] == 'L') ++idx;\n    while (idx < n) {\n      while (idx < n && s[idx] == 'W') ++idx;\n      if (idx < n) {\n        int j = idx + 1;\n        while (j < n && s[j] == 'L') ++j;\n        if (j < n) len.emplace_back(j - idx, idx);\n        idx = j;\n      }\n    }\n  }\n  sort((len).begin(), (len).end(), greater<pair<int, int>>());\n  while (!len.empty() && k > 0) {\n    auto [l, st] = len.back();\n    len.pop_back();\n    for (int i = (st); i < (st + l); ++i) {\n      if (k > 0) {\n        s[i] = 'W';\n        --k;\n      }\n    }\n  }\n  if (k > 0) {\n    int r = n;\n    while (s[r - 1] == 'L') --r;\n    for (; r < n; ++r) {\n      if (k > 0) {\n        s[r] = 'W';\n        --k;\n      }\n    }\n    int l = -1;\n    while (s[l + 1] == 'L') ++l;\n    for (; l >= 0; --l) {\n      if (k > 0) {\n        s[l] = 'W';\n        --k;\n      }\n    }\n  }\n  int ans = 0;\n  for (int i = (0); i < (n); ++i) {\n    if (s[i] == 'W') ans += i > 0 && s[i - 1] == 'W' ? 2 : 1;\n  }\n  cout << ans << '\\n';\n}\nint main() {\n  int t;\n  cin >> t;\n  while (t--) solve();\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\nimport random\nimport math\nimport copy\nfrom heapq import heappush, heappop, heapify\nfrom functools import cmp_to_key\nfrom bisect import bisect_left, bisect_right\nfrom collections import defaultdict, deque, Counter\n# sys.setrecursionlimit(1000000)\n# input aliases\ninput = sys.stdin.readline\ngetS = lambda: input().strip()\ngetN = lambda: int(input())\ngetList = lambda: list(map(int, input().split()))\ngetZList = lambda: [int(x) - 1 for x in input().split()]\n\nINF = float(\"inf\")\n\nMOD = 10 ** 9 + 7\ndivide = lambda x: pow(x, MOD-2, MOD)\n\n\ndef solve():\n    n, m = getList()\n    wl = getS()\n    if \"W\" not in wl:\n        num = min(n, m)\n        if num == 0:\n            print(0)\n        else:\n            print(num * 2 - 1)\n        return\n    ans = 0\n    prev = \"\"\n    hashil = 0\n    ishashi = True\n    ct = 0\n    cl = []\n    for c in wl:\n        if c == \"W\":\n            if prev == \"W\":\n                ans += 2\n            else:\n                if prev == \"L\":\n                    if ishashi:\n                        hashil = ct\n                    else:\n                        cl.append(ct)\n                    ct = 0\n                ans += 1\n            ishashi = False\n        else:\n            ct += 1\n        prev = c\n    # print(ans, \": \")\n    hashil +=  ct\n    # print(cl)\n    cl.sort()\n    for cc in cl:\n        if m >= cc:\n            ans += cc * 2 + 1\n            m -= cc\n\n        else:\n            ans += m * 2\n            print(ans)\n            return\n\n    ans += min(hashil, m) * 2\n    print(ans)\n    return\n\ndef main():\n    n = getN()\n    for _ in range(n):\n        solve()\n\n    return\nif __name__ == \"__main__\":\n    main()\n    # solve()"
        },
        {
            "language": 3,
            "solution": "z,zz=input,lambda:list(map(int,z().split()))\nfast=lambda:stdin.readline().strip()\nzzz=lambda:[int(i) for i in stdin.readline().split()]\nszz,graph,mod,szzz=lambda:sorted(zz()),{},10**9+7,lambda:sorted(zzz())\n\nfrom string import *\nfrom re import *\nfrom collections import *\nfrom queue import *\nfrom sys import *\nfrom collections import *\nfrom math import *\nfrom heapq import *\nfrom itertools import *\nfrom bisect import *\nfrom collections import Counter as cc\nfrom math import factorial as f\nfrom bisect import bisect as bs\nfrom bisect import bisect_left as bsl\nfrom itertools import accumulate as ac\ndef lcd(xnum1,xnum2):return (xnum1*xnum2//gcd(xnum1,xnum2))\ndef prime(x):\n    p=ceil(x**.5)+1\n    for i in range(2,p):\n        if (x%i==0 and x!=2) or x==0:return 0\n    return 1\ndef dfs(u,visit,graph):\n    visit[u]=True\n    for i in graph[u]:\n        if not visit[i]:\n            dfs(i,visit,graph)\n\n###########################---Test-Case---#################################\n\"\"\"\n\n\n\n\"\"\"\n###########################---START-CODING---##############################\n\n\ndef solve(n,k,s):\n    arr=[]\n    sm=s.count(\"W\")\n    if sm==0:\n        return max(min(n,k)*2 -1,0)\n   \n    arr=s.split(\"W\")[1:-1]\n\n    arr=list(filter(None,arr))\n\n    arr=[len(i) for i in arr]\n    arr.sort()\n    t=len(arr)\n    ncut=t+1\n    for i in range(t):\n        if k>=arr[i]:\n            sm+=arr[i]\n            k-=arr[i]\n            ncut-=1\n    return max(0,min(2*n-1,(sm+k)*2-ncut))\n        \n        \n        \n            \nt = int(input())\nfor x in range(t):\n\tn,k=zz()\n\ts = fast()\n\th = solve(n,k,s)\n\tprint(h)            \n            \n                \n            \n        \n        \n        \n\n    \n        \n        \n        \n            \n            \n            \n                \n\n    \n    \n        \n            \n        \n        \n        \n    \n    \n        \n    \n        \n    \n    \n    \n        \n        \n    \n    \n        \n        \n        \n        \n        \n        \n        \n\n    \n    \n\n    \n\n    \n        \n        \n        \n    \n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n"
        },
        {
            "language": 3,
            "solution": "z,zz=input,lambda:list(map(int,z().split()))\nfast=lambda:stdin.readline().strip()\nzzz=lambda:[int(i) for i in stdin.readline().split()]\nszz,graph,mod,szzz=lambda:sorted(zz()),{},10**9+7,lambda:sorted(zzz())\nimport sys,io,os\nfrom string import *\nfrom re import *\nfrom collections import *\nfrom queue import *\nfrom sys import *\nfrom collections import *\nfrom math import *\nfrom heapq import *\nfrom itertools import *\nfrom bisect import *\nfrom collections import Counter as cc\nfrom math import factorial as f\nfrom bisect import bisect as bs\nfrom bisect import bisect_left as bsl\nfrom itertools import accumulate as ac\ndef lcd(xnum1,xnum2):return (xnum1*xnum2//gcd(xnum1,xnum2))\ndef prime(x):\n    p=ceil(x**.5)+1\n    for i in range(2,p):\n        if (x%i==0 and x!=2) or x==0:return 0\n    return 1\ndef dfs(u,visit,graph):\n    visit[u]=True\n    for i in graph[u]:\n        if not visit[i]:\n            dfs(i,visit,graph)\n\n###########################---Test-Case---#################################\n\"\"\"\n\n\n\n\"\"\"\n###########################---START-CODING---##############################\n\n\ndef solve(n,k,s):\n    arr=[]\n    sm=0\n    if \"W\" not in s:\n        return max(min(n,k)*2 -1,0)\n    \n    arr=s.split(\"W\")[1:-1]\n    arr=list(filter(None,arr))\n    arr=[len(i) for i in arr]\n    arr.sort()\n    sm=s.count(\"W\")\n    ncut=len(arr)+1\n    for i in range(len(arr)):\n        if k>=arr[i]:\n            sm+=arr[i]\n            k-=arr[i]\n            ncut-=1\n    return max(0,min(2*n-1,(sm+k)*2-ncut))\n        \n        \n        \n            \nt = int(input())\nfor x in range(t):\n\tn,k=zz()\n\ts = fast()\n\th = solve(n,k,s)\n\tprint(h)            \n            \n                \n            \n        \n        \n        \n\n    \n        \n        \n        \n            \n            \n            \n                \n\n    \n    \n        \n            \n        \n        \n        \n    \n    \n        \n    \n        \n    \n    \n    \n        \n        \n    \n    \n        \n        \n        \n        \n        \n        \n        \n\n    \n    \n\n    \n\n    \n        \n        \n        \n    \n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor i in range(t):\n    n,k = map(int,input().strip(' ').split(' '))\n    s = input().strip(' ')\n    ind = s.find('W')\n    if ind == -1:\n        if k == 0:\n            print(0)\n        else:\n            print((2*k)-1)\n        continue\n    \n    pre = 1\n    c = 0\n    lcount = []\n    wins = 1\n    winningstreak = 0\n    for i in range(ind+1,n):\n        if s[i] == 'W':\n            if pre == 0:\n                lcount.append(c)\n                c = 0\n            wins += 1\n            pre = 1\n        else:\n            if pre == 1:\n                winningstreak += 1\n            c += 1\n            pre = 0\n\n    if pre:\n        winningstreak += 1\n            \n    wins += k\n    if wins >= n:\n        print(2*n - 1)\n        continue\n\n    lcount.sort()\n    x = 0\n    \n    for i in lcount:\n        if k >= i:\n            x += 1\n            k -= i\n        else:\n            break\n    ans = 2*(wins) - winningstreak + x\n    #print('wins= '+str(wins)+'k= '+str(k)+'ws= '+str(winningstreak),x)\n    print(ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst double PI = 3.141592653589793238;\nint main() {\n  long long int t;\n  cin >> t;\n  while (t--) {\n    long long int n, k;\n    cin >> n >> k;\n    string s;\n    cin >> s;\n    long long int i;\n    vector<long long int> losing;\n    long long int winning = 0, wins = 0, loss = 0;\n    for (i = 0; i < n; i++) {\n      if (s[i] == 'W') {\n        wins++;\n        if (i == 0 || s[i - 1] == 'L') winning++;\n      } else {\n        loss++;\n        if (i == 0 || s[i - 1] == 'W') losing.push_back(0);\n        losing.back()++;\n      }\n    }\n    if (k >= loss) {\n      cout << 2 * n - 1 << \" \";\n      cout << \"\\n\";\n      continue;\n    }\n    if (wins == 0) {\n      if (k == 0)\n        cout << 0 << \" \";\n      else\n        cout << 2 * k - 1 << \" \";\n      cout << \"\\n\";\n      continue;\n    }\n    if (s[0] == 'L') losing[0] = 1e8;\n    if (s[n - 1] == 'L') losing.back() = 1e8;\n    sort(losing.begin(), losing.end());\n    wins += k;\n    for (auto it : losing) {\n      if (it > k) break;\n      k -= it;\n      winning--;\n    }\n    cout << (2 * wins) - winning << \" \";\n    cout << \"\\n\";\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int t;\n  cin >> t;\n  for (int i = 0; i < t; i++) {\n    int n, k;\n    cin >> n >> k;\n    string str;\n    cin >> str;\n    int wins = 0;\n    for (int j = 0; j < n; j++) {\n      char ch = str[j];\n      if (ch == 'W') {\n        wins++;\n      }\n    }\n    if (k >= n - wins) {\n      cout << 2 * n - 1 << endl;\n      continue;\n    }\n    int streaks = 0;\n    bool lastWin = false;\n    bool lastLost = false;\n    vector<int> streak_gaps;\n    for (int j = 0; j < n; j++) {\n      char ch = str[j];\n      if (ch == 'W') {\n        if (!lastWin) {\n          streak_gaps.push_back(1);\n        } else\n          streak_gaps[streak_gaps.size() - 1]++;\n        lastWin = true;\n        lastLost = false;\n      } else {\n        if (!lastLost) {\n          streak_gaps.push_back(-1);\n        } else\n          streak_gaps[streak_gaps.size() - 1]--;\n        lastLost = true;\n        lastWin = false;\n      }\n    }\n    if (streak_gaps.size() > 0 && streak_gaps[streak_gaps.size() - 1] < 0)\n      streak_gaps.pop_back();\n    if (streak_gaps.size() > 0 && streak_gaps[0] < 0)\n      streak_gaps.erase(streak_gaps.begin());\n    for (auto it = streak_gaps.begin(); it != streak_gaps.end(); it++) {\n      if (*it > 0) {\n        it = streak_gaps.erase(it);\n        it--;\n        streaks++;\n      } else\n        *it = -*it;\n    }\n    sort(streak_gaps.begin(), streak_gaps.end());\n    int fills = 0;\n    int filled_gaps = 0;\n    for (auto it = streak_gaps.begin(); it != streak_gaps.end(); it++) {\n      int gap = *it;\n      if (fills + gap > k) {\n        break;\n      }\n      fills += gap;\n      filled_gaps++;\n    }\n    int ans = 2 * (k + wins) - streaks + filled_gaps;\n    if (wins == 0)\n      cout << max(0, ans - 1) << \"\\n\";\n    else\n      cout << ans << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst double EPS = 1e-9;\nnamespace number_theory {\nlong long gcd(long long x, long long y) {\n  if (x == 0) return y;\n  if (y == 0) return x;\n  return gcd(y, x % y);\n}\nbool isprime(long long n) {\n  if (n <= 1) return false;\n  if (n <= 3) return true;\n  if (n % 2 == 0 || n % 3 == 0) return false;\n  for (long long i = 5; i * i <= n; i += 6)\n    if (n % i == 0 || n % (i + 2) == 0) return false;\n  return true;\n}\nbool prime[15000105];\nvoid sieve(long long n) {\n  for (long long i = 0; i <= n; i++) prime[i] = 1;\n  for (long long p = 2; p * p <= n; p++) {\n    if (prime[p] == true) {\n      for (long long i = p * p; i <= n; i += p) prime[i] = false;\n    }\n  }\n  prime[1] = prime[0] = 0;\n}\nvector<long long> primelist;\nbool __primes_generated__ = 0;\nvoid genprimes(long long n) {\n  __primes_generated__ = 1;\n  sieve(n + 1);\n  for (long long i = 2; i <= n; i++)\n    if (prime[i]) primelist.push_back(i);\n}\nvector<long long> factors(long long n) {\n  if (!__primes_generated__) {\n    cerr << \"Caint genprimes you dope\" << endl;\n    exit(1);\n  }\n  vector<long long> facs;\n  for (long long i = 0;\n       primelist[i] * primelist[i] <= n && i < primelist.size(); i++) {\n    if (n % primelist[i] == 0) {\n      while (n % primelist[i] == 0) {\n        n /= primelist[i];\n        facs.push_back(primelist[i]);\n      }\n    }\n  }\n  if (n > 1) {\n    facs.push_back(n);\n  }\n  sort(facs.begin(), facs.end());\n  return facs;\n}\nvector<long long> getdivs(long long n) {\n  vector<long long> divs;\n  for (long long i = 1; i * i <= n; i++) {\n    if (n % i == 0) {\n      divs.push_back(i);\n      divs.push_back(n / i);\n    }\n  }\n  {\n    sort(divs.begin(), divs.end());\n    divs.erase(unique(divs.begin(), divs.end()), divs.end());\n  };\n  return divs;\n}\n}  // namespace number_theory\nvoid solve() {\n  long long n, k;\n  cin >> n >> k;\n  string s;\n  cin >> s;\n  long long win = 0, loss = 0, winning_streak_cnt = 0;\n  vector<long long> lossing_streak;\n  for (long long i = 0; i < n; i++) {\n    if (s[i] == 'W') {\n      win++;\n      if (i == 0 or s[i - 1] == 'L') winning_streak_cnt++;\n    } else {\n      loss++;\n      if (i == 0 or s[i - 1] == 'W') lossing_streak.push_back(0);\n      lossing_streak.back()++;\n    }\n  }\n  if (k >= loss) {\n    cout << 2 * n - 1 << \"\\n\";\n    return;\n  }\n  if (win == 0) {\n    if (k == 0)\n      cout << 0;\n    else\n      cout << 2 * k - 1;\n    cout << \"\\n\";\n    return;\n  }\n  win += k;\n  if (s[0] == 'L') lossing_streak[0] = 1e8;\n  if (s[n - 1] == 'L') lossing_streak.back() = 1e8;\n  sort(lossing_streak.begin(), lossing_streak.end());\n  for (long long ls : lossing_streak) {\n    if (ls > k) break;\n    k -= ls;\n    winning_streak_cnt--;\n  }\n  cout << 2 * win - winning_streak_cnt << \"\\n\";\n}\nint32_t main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  long long t;\n  cin >> t;\n  while (t--) {\n    solve();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int T, N, K;\n  string s;\n  for (cin >> T; T; T--) {\n    cin >> N >> K;\n    cin >> s;\n    int start = 0, end = N;\n    int ans = -1;\n    vector<int> runLens(1, 0);\n    while (start < N && s[start] == 'L') start++;\n    while (end > 0 && s[end - 1] == 'L') end--;\n    if (end == 0) {\n      cout << max(K * 2 - 1, 0) << endl;\n      continue;\n    }\n    for (int i = start; i < end; i++)\n      if (s[i] == 'L')\n        runLens[runLens.size() - 1]++;\n      else if (runLens.back()) {\n        runLens.push_back(0);\n        ans++;\n      } else\n        ans += 2;\n    runLens.pop_back();\n    sort(runLens.begin(), runLens.end());\n    for (int i = 0; i < runLens.size(); i++)\n      if (K >= runLens[i]) {\n        K -= runLens[i];\n        ans += 2 * runLens[i] + 1;\n      } else {\n        ans += K * 2;\n        K = 0;\n      }\n    ans += min(K, start + (N - end)) * 2;\n    cout << ans << endl;\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class Solver {\n\n    public static void main(String[] args) {\n        FastReader in = new FastReader();\n\n        int t = in.nextInt();\n        while (t-- > 0) {\n            solve2(in);\n        }\n    }\n\n\n\n    public static void solve2(FastReader in) {\n        int n = in.nextInt(), k = in.nextInt();\n        String s = in.next();\n        int index = -1;\n        int fst = -1;\n        ArrayList<Integer> a = new ArrayList<>();\n        int ws = 0;\n        for (int i = 0; i < n; i++) {\n            if (s.charAt(i) == 'W') {\n                ws++;\n                if (index != -1) {\n                    a.add(i - index - 1);\n                    index = i;\n                } else {\n                    fst = i;\n                    index = i;\n                }\n            }\n        }\n\n        int res = ws;\n        Collections.sort(a);\n        for (int x : a) {\n            if (x == 0) {\n                res++;\n            } else {\n                if (k >= x) {\n                    res += (x + 1) * 2 - 1;\n                    k -= x;\n                } else {\n                    res += k * 2;\n                    k = 0;\n                    break;\n                }\n\n            }\n        }\n\n        if (index == -1 && k > 0) {\n            k = Math.min(n, k);\n            res += k * 2 - 1;\n            System.out.println(res);\n            return;\n        }\n\n        if (k > 0) {\n            if (fst >= k) {\n                res += k * 2;\n                k = 0;\n            } else {\n                res += fst * 2;\n                k -= fst;\n            }\n        }\n\n        if (k > 0) {\n            if (n - index - 1 >= k) {\n                res += k * 2;\n            } else {\n                res += (n - index - 1) * 2;\n            }\n        }\n        System.out.println(res);\n\n    }\n\n    public static int gcd(int a, int b) {\n        if (b == 0)\n            return a;\n        return gcd(b, a % b);\n    }\n\n    public static void printArray(Object[] a) {\n        for (int i = 0; i < a.length; i++) {\n            System.out.print(a[i] + \" \");\n        }\n        System.out.println();\n    }\n\n    static class Pair {\n        public int a, b;\n\n        Pair(Integer a, Integer b) {\n            this.a = a;\n            this.b = b;\n        }\n    }\n\n    static class FastReader {\n        BufferedReader br;\n        StringTokenizer st;\n\n        private FastReader() {\n            br = new BufferedReader(new InputStreamReader(System.in));\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine() {\n            String str = \"\";\n            try {\n                str = br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n    }\n\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native\")\n#pragma GCC optimize(\"unroll-loops\")\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"O3\")\n#pragma GCC target(\"avx\")\nconst long long INF = numeric_limits<long long>::max();\nconst long double PI = 3.1415926535898;\nconst long long MOD = 1000000007;\nconst long long LIM = 100005;\nlong long fpow(long long x, long long y) {\n  long long temp;\n  if (y == 0) return 1;\n  temp = fpow(x, y / 2);\n  if (y % 2 == 0)\n    return temp * temp;\n  else\n    return x * temp * temp;\n}\nlong long gcd(long long a, long long b) {\n  if (b == 0) return a;\n  return gcd(b, a % b);\n}\nvoid sieve(long long n) {\n  bool prime[5 * LIM];\n  memset(prime, true, sizeof(prime));\n  for (long long p = 2; p * p <= n; p++)\n    if (prime[p] == true)\n      for (long long i = p * p; i <= n; i += p) prime[i] = false;\n  prime[1] = 0;\n}\nbool isPrime(long long n) {\n  if (n <= 1) return false;\n  if (n <= 3) return true;\n  if (n % 2 == 0 || n % 3 == 0) return false;\n  for (long long i = 5; i * i <= n; i = i + 6)\n    if (n % i == 0 || n % (i + 2) == 0) return false;\n  return true;\n}\nmap<long long, long long> primeFactors(long long n) {\n  map<long long, long long> mp;\n  while (n % 2 == 0) {\n    if (mp.count(2) == 1)\n      mp[2]++;\n    else\n      mp.insert({2, 1});\n    n = n / 2;\n  }\n  for (long long i = 3; i <= sqrt(n); i = i + 2) {\n    while (n % i == 0) {\n      if (mp.count(i) == 1)\n        mp[i]++;\n      else\n        mp.insert({i, 1});\n      n = n / i;\n    }\n  }\n  if (n > 2) {\n    if (mp.count(n) == 1)\n      mp[n]++;\n    else\n      mp.insert({n, 1});\n  }\n  return mp;\n}\nvoid solve() {\n  long long n, k, ans = 0, st = -1;\n  cin >> n >> k;\n  string s;\n  cin >> s;\n  vector<vector<long long>> v;\n  v.clear();\n  bool f1 = false, f2 = false;\n  for (long long i = 0; i + 1 < n; i++) {\n    if (s[i] == 'W' && s[i + 1] == 'L') st = i + 1;\n    if (s[i] == 'L' && s[i + 1] == 'W') {\n      if (st != -1) v.push_back({i - st + 1, st, i});\n      st = 0;\n    }\n  }\n  sort(v.begin(), v.end());\n  ;\n  for (auto x : v) {\n    for (long long j = x[1]; j <= x[2]; j++) {\n      if (k <= 0) {\n        f1 = true;\n        break;\n      }\n      s[j] = 'W';\n      k--;\n    }\n    if (f1) break;\n  }\n  if (k > 0) {\n    st = n;\n    for (long long i = 0; i < n; i++) {\n      if (s[i] == 'W') st = i;\n    }\n    for (long long i = st + 1; i < n; i++) {\n      if (k <= 0) {\n        break;\n      }\n      k--;\n      s[i] = 'W';\n    }\n    st = n;\n    for (long long i = 0; i < n; i++) {\n      if (s[i] == 'W') {\n        st = i;\n        break;\n      }\n    }\n    for (long long i = st - 1; i >= 0; i--) {\n      if (k <= 0) break;\n      k--;\n      s[i] = 'W';\n    }\n    for (long long i = 0; i < n; i++) {\n      if (k <= 0) break;\n      if (s[i] == 'W') continue;\n      k--;\n      s[i] = 'W';\n    }\n  }\n  if (s[0] == 'W') ans++;\n  for (long long i = 1; i < n; i++) {\n    if (s[i] == 'W' && s[i - 1] == 'W')\n      ans += 2;\n    else if (s[i] == 'W')\n      ans++;\n  }\n  cout << ans << \"\\n\";\n}\nint32_t main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  long long t;\n  cin >> t;\n  for (long long tt = 1; tt <= t; ++tt) {\n    solve();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\n\nlines = sys.stdin.readlines()\ncur_line = -1\n\ndef input():\n    global lines, cur_line\n    cur_line += 1\n    return lines[cur_line][:-1]\n\n\nfor _ in range(int(input())):\n    n,k = map(int,input().split())\n    s = input()\n\n    base = 0\n    gaps = []\n    for i in range(n):\n        if s[i] == 'W':\n            base += 1 if i == 0 or s[i-1] == 'L' else 2\n        elif s[i] == 'L':\n            if i == 0 or s[i-1] == 'W':\n                gaps.append(1)\n            else:\n                gaps[-1] += 1\n    #print(gaps, base)\n    if len(gaps) > 0:\n        if s[0] == 'L':\n            gaps[0] = 9999999\n        if s[-1] == 'L':\n            gaps[-1] = 9999999\n    #print(gaps, base)\n    gaps.sort()\n\n    c = 0\n    su = 0\n    for i in gaps:\n        su += i\n        if su <= k:\n            base += 1\n\n    t = sum(1 for c in s if c == 'L')\n    off = 1 if t == n else 0\n    print(max(0, base + min(k,t) * 2 - off))\n    \n\n\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.BufferedOutputStream;\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.math.BigInteger;\n\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.LinkedList;\nimport java.util.List;\nimport java.util.PriorityQueue;\nimport java.util.Queue;\nimport java.util.Set;\nimport java.util.SortedSet;\nimport java.util.StringTokenizer;\nimport java.util.TreeMap;\nimport java.util.TreeSet;\n\n\n\npublic class Main {\n\n  public static PrintWriter out = new PrintWriter(new BufferedOutputStream(System.out));\n\n  static class FastReader {\n\n    BufferedReader br;\n    StringTokenizer st;\n\n    public FastReader() {\n      br = new BufferedReader(new\n          InputStreamReader(System.in));\n    }\n\n    String next() {\n      while (st == null || !st.hasMoreElements()) {\n        try {\n          st = new StringTokenizer(br.readLine());\n        } catch (IOException e) {\n          e.printStackTrace();\n        }\n      }\n      return st.nextToken();\n    }\n\n    int nextInt() {\n      return Integer.parseInt(next());\n    }\n\n    long nextLong() {\n      return Long.parseLong(next());\n    }\n\n    double nextDouble() {\n      return Double.parseDouble(next());\n    }\n\n    String[] nextSArray() {\n      String sr[] = null;\n      try {\n        sr = br.readLine().trim().split(\" \");\n      } catch (IOException e) {\n        e.printStackTrace();\n      }\n      return sr;\n    }\n\n    String nextLine() {\n      String str = \"\";\n      try {\n        str = br.readLine();\n      } catch (IOException e) {\n        e.printStackTrace();\n      }\n\n      return str;\n    }\n  }\n\n\n  static long powmodulo(long a, long p) {\n    if (p == 0)\n      return 1 % mod;\n    if (p == 1)\n      return a % mod;\n    long ans = 1;\n    while (p > 0) {\n      if ((p & 1) > 0) {\n        ans = (ans * a) % mod;\n      }\n      a = (a * a) % mod;\n      p = p >> 1;\n    }\n    return ans % mod;\n  }\n\n\n\n\n  static long mod = 1000000007;\n\n  static long gcd(long a,long b)\n  {\n    if(a==0)\n      return b;\n    return  gcd(b%a,a);\n  }\n\n  static long fast_powerNumbers(long a,long n)\n  {\n    if(n==1)\n      return a;\n    long ans=fast_powerNumbers(a,n/2);\n    if(n%2==0)\n      return (ans*ans);\n    else\n      return ((ans*ans)*(a));\n  }\n\n  static HashMap<Integer,Boolean>visited;\n\n  static int arr[];\n\n\n\n\n\n  public static void main(String[] args) throws Exception {\n    FastReader sc = new FastReader();\n\n    int t1=sc.nextInt();\n    for (int t = 0; t < t1; t++) {\n      int n=sc.nextInt();\n      int k=sc.nextInt();\n      String s=sc.nextLine();\n      int a = s.indexOf('W');\n      int b=s.lastIndexOf('W');\n      int isum=0;\n      if(s.charAt(0)=='W')\n        ++isum;\n      for (int i = 1; i < n ; i++) {\n        if(s.charAt(i)=='W'  )\n        {\n          if(s.charAt(i-1)=='W')\n            isum+=2;\n          else\n            isum+=1;\n        }\n\n      }\n      if(k==0)\n      {\n        out.println(isum);\n        continue;\n      }\n\n      if(a==-1)\n      {\n        out.println(isum+2*Math.min(k,n)-1);\n        continue;\n      }\n      int aa = a;\n      int bb=n-1-b;\n      ArrayList<Integer>al=new ArrayList<>();\n\n      for (int i = a; i <=b; i++) {\n       if(s.charAt(i)=='W' && (i+1>b||s.charAt(i+1)!='W'))\n       {\n         int j;\n         for(j=i+1;j<b;++j)\n         {\n           if(s.charAt(j)=='W')\n             break;\n         }\n         if(j-i-1>0)\n         {al.add(j-i-1);\n         //out.println(i+\" \"+j);\n         }\n         i=j-1;\n       }\n      }\n      Collections.sort(al);\n      int ans=0;\n      for(Integer i:al)\n      {\n        if(k>=i)\n        {ans+=2*i+1;k-=i;}\n        else if(k>0)\n        {\n          ans+=2*Math.min(k,i);\n          k=0;break;\n        }\n      }\n      if(k>0)\n      {ans+=2*Math.min(aa+bb,k);\n\n      }\n      out.println(isum+ans);\n     // out.println(al);\n\n\n}out.close();\n  }}\n\n\nclass Pair\n{\n  int a; int b;\n  Pair(int a,int b)\n  {\n    this.a=a;\n    this.b=b;\n  }\n}\n\n\nclass Graph\n{\n  HashMap<Integer,ArrayList<Integer>>hm;\n  Graph()\n  {\n    hm=new HashMap<>();\n  }\n  // function for adding an edge.................................................\n  public void addEdge(int a,int b,boolean isDir)\n  {\n    if(isDir)\n    {\n      if(hm.containsKey(a))\n      {\n        hm.get(a).add(b);\n      }\n      else\n      {\n        hm.put(a,new ArrayList<>(Arrays.asList(b)));\n      }\n    }\n    else\n    {\n      if(hm.containsKey(a))\n      {\n        hm.get(a).add(b);\n      }\n      else if(!hm.containsKey(a))\n      {\n        hm.put(a,new ArrayList<>(Arrays.asList(b)));\n      }\n\n      if(hm.containsKey(b))\n      {\n        hm.get(b).add(a);\n      }\n      else if(!hm.containsKey(b))\n      {\n        hm.put(b,new ArrayList<>(Arrays.asList(a)));\n      }\n    }\n  }\n\n\n\n}\n\n// out.println(al.toString().replaceAll(\"[\\\\[|\\\\]|,]\",\"\"));"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  ;\n  long long t;\n  cin >> t;\n  while (t--) {\n    long long n, i, j, x, y, sum = 0, k;\n    cin >> n >> k;\n    string s;\n    cin >> s;\n    vector<long long> v;\n    for (i = 0; i < n; ++i)\n      if (s[i] == 'W') v.push_back(i);\n    x = v.size();\n    priority_queue<vector<long long>> pq;\n    for (i = 1; i < x; ++i) {\n      vector<long long> a;\n      a.push_back(v[i - 1] - v[i]);\n      a.push_back(v[i - 1]);\n      a.push_back(v[i]);\n      pq.push(a);\n    }\n    while (k && !pq.empty()) {\n      vector<long long> a = pq.top();\n      pq.pop();\n      for (i = a[1] + 1; i < a[2] && k; ++i)\n        if (s[i] == 'L') s[i] = 'W', --k;\n    }\n    if (k && x) {\n      for (i = v[0] - 1; i >= 0 && k; --i) s[i] = 'W', --k;\n      for (i = v[x - 1] + 1; i < n && k; ++i) s[i] = 'W', --k;\n    } else if (k) {\n      for (i = 0; i < n && k; ++i) s[i] = 'W', --k;\n    }\n    if (s[0] == 'W') sum = 1;\n    for (i = 1; i < n; ++i)\n      if (s[i] == 'W' && s[i - 1] == 'W')\n        sum += 2;\n      else if (s[i] == 'W')\n        sum += 1;\n    cout << sum << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nfor _ in range(t):\n    n,K=map(int,input().split())\n    s=input()\n    diff=[0]*(n+1)\n    prev=0\n    I=0\n    J=n-1\n    flag1,flag2=True,True\n    for k in range(n):\n        if s[k]=='W':\n            I=k\n            flag1=False\n            break\n    for k in range(n-1,-1,-1):\n        if s[k]=='W':\n            J=k \n            flag2=False\n            break\n    if flag1 and flag2:\n        if K>0:\n            print(2*K-1) \n        else:\n            print(0)\n        continue\n    prev=I\n    for k in range(I,J+1):\n        if s[k]=='W':\n            if(k>prev+1):\n                diff[k-prev-1]+=1 \n            prev=k\n    j=n \n    ans=0\n    # print(diff)\n    for i in range(1,n+1):\n        if K<i:\n            j=i \n            break \n        ans+=(2*i+1)*(min(K//i,diff[i]))\n        temp=diff[i]\n        diff[i]=diff[i]-(min(K//i,diff[i]))\n        K=K-i*(min(K//i,temp))\n        # print(diff[i])\n    ans+=2*(min(K,I))\n    K=K-min(K,I)\n    ans+=2*(min(K,n-1-J))\n    K=K-(min(K,n-1-J))\n    \n    for k in range(1,n+1):\n        if K<=0:\n            break\n        if diff[k]!=0:\n            ans+=2*K\n            K=0\n    prev=False\n    # print('ans',str(ans))\n    for i in range(n):\n        if s[i]=='W':\n            if prev:\n                ans+=2 \n            else:\n                ans+=1 \n            prev=True \n            continue\n        prev=False\n    print(ans)\n        \n        \n        \n        \n        \n        \n    "
        },
        {
            "language": 3,
            "solution": "from collections import deque\n\nfor _ in range(int(input())):\n    n, k = map(int, input().split())\n    st = input()\n    side = []\n    mid = []\n    tmp = 0\n    ans = 0\n    for a in range(n):\n        if st[a] == \"W\":\n            if tmp != 0:\n                mid.append(tmp)\n                tmp = 0\n                ans += 1\n            elif a == 0:\n                ans += 1\n            else:\n                ans += 2\n        else:\n            tmp += 1\n    if tmp != 0:\n        side.append(tmp)\n    if st[0] == \"L\" and len(mid) > 0:\n        side.append(mid[0])\n        mid = mid[1:]\n    if ans == 0 and k >= 1:\n        print(2 * min(k, len(st)) - 1)\n        continue\n    mid.sort()\n    side.sort()\n    midq = deque(mid)\n    sideq = deque(side)\n    while k > 0:\n        if len(midq) > 0 and midq[0] <= k:\n            tmp = midq.popleft()\n            ans += (2 * tmp) + 1\n        else:\n            if len(midq) == 0 and len(sideq) == 0:\n                break\n            elif len(midq) == 0:\n                tmp = sideq.popleft()\n            elif len(sideq) == 0:\n                tmp = midq.popleft()\n            else:\n                tmp = sideq.popleft()\n            ans += 2 * min(tmp, k)\n        k -= tmp\n    print(ans)\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\nimport java.math.*;\n\npublic class CP{\n\n\n\n\n\n  public static OutputStream out=new BufferedOutputStream(System.out);\n  static Scanner sc=new Scanner(System.in);\n  static long MOD=998244353l;\n  static int INF=10000000;\n  static long[] fact;\n  static long[] inv_fact;\n  static int[] rr=new int[]{1, 0, -1, 0};                                 //rook row move\n  static int[] rc=new int[]{0, 1, 0, -1};                                 //rook col move\n\n  //nl-->neew line; //l-->line;  //arp-->array print;  //arpnl-->array print new line\n  public static void nl(Object o) throws IOException{out.write((o+\"\\n\").getBytes()); }\n  public static void l(Object o) throws IOException{out.write((o+\"\").getBytes());}\n  public static void arp(int[] o) throws IOException{for(int i=0;i<o.length;i++) out.write((o[i]+\" \").getBytes()); out.write((\"\\n\").getBytes());}\n  public static void arpnl(int[] o) throws IOException{for(int i=0;i<o.length;i++) out.write((o[i]+\"\\n\").getBytes());}\n  public static void scanl(long[] a,int n) {for(int i=0;i<n;i++) a[i]=sc.nextLong();}\n  public static void scani(int[] a,int n) {for(int i=0;i<n;i++) a[i]=sc.nextInt();}\n  public static void scan2D(int[][] a,int n,int m) {for(int i=0;i<n;i++) for(int j=0;j<m;j++) a[i][j]=sc.nextInt();}\n  //static variables\n\n  //\n\n\n  public static void main(String[] args) throws IOException{\n    long sttm=System.currentTimeMillis();\n\n    int t=sc.nextInt();\n    // int t=1;\n    while(t-->0) solve();\n\n    out.flush();\n  }\n\n  public static void solve() throws IOException{\n      int n=sc.nextInt(), k=sc.nextInt();\n      char[] a=sc.next().toCharArray();\n      ArrayList<Integer> arrl=new ArrayList<Integer>();\n      int score=0;\n      int cnt=0;\n      int i=0;\n      while(i<n && a[i]=='L'){\n          i++;\n      }\n      for(i=i;i<n;i++){\n          if(a[i]=='L'){\n              cnt++;\n          }\n          else if(cnt>0){\n              arrl.add(cnt);\n              cnt=0;\n          }\n      }\n      cnt=0;\n      for(i=0;i<n;i++){\n          if(a[i]=='W'){ if(i>0 && a[i-1]=='W'){\n              score+=2;\n          }\n          else score+=1; cnt++;}\n      }\n      Collections.sort(arrl);\n      for(int arr:arrl){\n          if(arr<=k){\n              score+=2*arr+1;\n              k-=arr;\n              cnt+=arr;\n          }\n          else{\n              score+=2*k;\n              cnt+=k;\n              k=0;\n              break;\n          }\n      }\n      k=Math.min(k, n-cnt);\n      if(k>0){\n          if(ckwin(a, n)) score+=2*k;\n          else score+=2*k-1;\n      }\n      nl(score);\n  }\n\n  public static boolean ckwin(char[] a, int n){\n      for(int i=0;i<n;i++) if(a[i]=='W') return true;\n      return false;\n  }\n\n\n  static long gcd(long a, long b)\n\t{\n\tif (b == 0)\n\t\treturn a;\n\treturn gcd(b, a % b);\n  }\n\n}\n\nclass Pair{\n  int x; int y;\n  Pair(int x,int y){\n    this.x=x;\n    this.y=y;\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class B11 {\n    public static void main(String[] args) {\n        MyScanner sc = new MyScanner();\n        PrintWriter out = new PrintWriter(new BufferedOutputStream(System.out));\n        int t = sc.nextInt();\n        while (t-- > 0) {\n            int n = sc.nextInt();\n            int k = sc.nextInt();\n            String s = sc.next();\n            int [] a = new int[n]; boolean won = false; int ct = 0;\n            int score = 0;\n            for (int i = 0; i < n; i++) {\n                a[i] = (s.charAt(i) == 'W' ? 1 : 0);\n                if (a[i] == 0) ct++;\n                if (won && a[i] == 1) score += 2;\n                else if (a[i] == 1) score += 1;\n                won = a[i] == 1;\n            }\n            int run = 0;\n            ArrayList<Integer> r = new ArrayList<>();\n            for (int i = 0; i < n; i++) {\n                if (a[i] == 0) {\n                    run++;\n                } else {\n                    if (run != 0) r.add(run);\n                    run = 0;\n                }\n            }\n            if (run != 0) r.add(run);\n            ArrayList<Integer> l = new ArrayList<>(); int sides = 0;\n            for (int i = 0; i < r.size(); i++) {\n                if (i == 0 && a[0] == 0){\n                    sides += r.get(i);\n                    continue;\n                }\n                if (i == r.size() - 1 && a[n - 1] == 0) {\n                    sides += r.get(i);\n                    continue;\n                }\n                l.add(r.get(i));\n            }\n            Collections.sort(l); int cur = 0;\n            int delta = 0;\n            while (k > 0 && cur < l.size()) {\n                int here = l.get(cur);\n                if (k < here) {\n                    delta += 2 * k;\n                } else {\n                    delta += 2 * (here - 1);\n                    delta += 3;\n                }\n                k -= Math.min(k, here);\n                ++cur;\n            }\n            if (k > 0) {\n                delta += Math.min(k * 2, sides * 2);\n            }\n            if (ct == n) {\n                delta = 0;\n                if (k == 0) out.println(score);\n                else out.println(score + (k - 1) * 2 + 1);\n            } else out.println(score + delta);\n        }\n        out.close();\n    }\n\n\n\n\n    //-----------MyScanner class for faster input----------\n    public static class MyScanner {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public MyScanner() {\n            br = new BufferedReader(new InputStreamReader(System.in));\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine() {\n            String str = \"\";\n            try {\n                str = br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n\n\n    }\n\n}"
        },
        {
            "language": 3,
            "solution": "# cook your dish here\n#hi\nimport math\nimport os\nimport random\nimport re\nimport sys\ndef maxpts(str1,k):\n    w=0\n    losses=[]\n    ans=0\n    W=False\n    cur=0\n    for c in str1:\n        if c=='W':\n            if cur:\n                losses.append(cur)\n                cur=0\n            w+=1\n            ans+=1\n            if W:\n                ans+=1\n            W=True\n        else:\n            W=False\n            if w:\n                cur+=1\n                \n    if w==0:\n        print(max(2*k-1,0))\n        return\n\n    \n    \n    n=len(str1)\n    if k>=n-w:\n        print(n*2-1)\n        return\n    ans+=2*k\n    losses.sort()\n   \n    for l1 in losses:\n        if k>=l1:\n            ans+=1\n            k=k-l1\n        else:\n            break\n    print(ans)\n            \n            \n            \n        \n    \n\nif __name__=='__main__':\n    n=int(input())\n    for i in range(n):\n        n1,k=map(int,input().rstrip().split())\n        str1=input()\n        maxpts(str1,k)"
        },
        {
            "language": 3,
            "solution": "import sys,math\ninput=sys.stdin.readline\nt=int(input())\nfor r in range(t):\n    n, k = map(int,input().split())\n    s = input().strip(\"\\n\")\n    ans = 0\n    l = []\n    for i in s:\n        l.append(i)\n    intervals = []\n    i = 0\n    left = []\n    right = []\n    while i < n:\n        if l[i] == \"W\":\n            i += 1\n            continue\n        else:\n            current = [i,i]\n            while i <n and l[i] == \"L\":\n                i += 1\n            current[1] = i\n            if current[0] == 0:\n                left.append(current)\n            elif current[1] == n:\n                right.append(current)\n            else:\n                intervals.append(current)\n    intervals.sort(key = lambda x:abs(x[0]-x[1]))\n    # for j in left:\n    #     intervals.append(j)\n    # print(intervals)\n    # print(left)\n    # print(intervals)\n    for interval in intervals:\n        for i in range(interval[0],interval[1]):\n            if k > 0:\n                l[i] = \"W\"\n                k -= 1\n    try:\n\n        int1 = left[0]\n        for i in range(int1[1]-1, int1[0] -1 , -1):\n            if k > 0:\n                l[i] = \"W\"\n                k -= 1\n    except:\n        pass\n    try:\n        int2 = right[0]\n        # print(\"entered\")\n        for i in range(int2[0],int2[1]):\n            if k > 0:\n                l[i] = \"W\"\n                k -= 1\n    except:\n        pass\n    # print(l)\n    for i in range(n):\n        if l[i] == \"W\":\n            if i == 0 or l[i-1]==\"L\":\n                ans += 1\n            else:\n                ans += 2\n    # print(\"ans\",ans)\n    print(ans)\n            \n\n\n\n"
        },
        {
            "language": 4,
            "solution": "import java.util.ArrayList;\nimport java.util.List;\nimport java.util.Scanner;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n\n        // System.out.println(solve(5, \"LLLWWL\"));\n\n        //  System.exit(0);\n        int t = sc.nextInt();\n        for (int tc = 0; tc < t; tc++) {\n            int n = sc.nextInt();\n            int k = sc.nextInt();\n\n            String s = sc.next();\n\n            System.out.println(solve(k, s));\n        }\n    }\n\n    private static int solve(int k, String s) {\n        /*\n        cnt(W) * 2 - 1 - gaps\n         */\n\n        /*\n        LLWLLWLLL k = 2\n         */\n        int cntW = 0;\n        List<Integer> gapLen = new ArrayList<>();\n        int gapPos = -1;\n        for (int i = 0; i < s.length(); i++) {\n            if (s.charAt(i) == 'L' && i > 0 && s.charAt(i - 1) == 'W') {\n                gapPos = i;\n            }\n\n            if (s.charAt(i) == 'W') {\n                cntW++;\n\n                if (gapPos != -1) {\n                    gapLen.add(i - gapPos);\n                    gapPos = -1;\n                }\n            }\n        }\n\n        if (cntW + k > s.length()) {\n            return s.length() * 2 - 1;\n        }\n\n        gapLen.sort(Integer::compare);\n\n        int solvedGaps = 0;\n        for (int i = 0; i < gapLen.size(); i++) {\n            if (gapLen.get(i) <= k) {\n                solvedGaps++;\n                k -= gapLen.get(i);\n                cntW += gapLen.get(i);\n            } else {\n                break;\n            }\n        }\n\n        int res = (cntW + k) * 2 - 1 - gapLen.size() + solvedGaps;\n        return res < 0 ? 0 : res;\n    }\n\n}"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = lambda: sys.stdin.readline().rstrip('\\r\\n')\nfor _ in range(int(input())):\n\tn, k = map(int, input().split())\n\tS = input()\n\n\twins = S.count('W')\n\tif k >= n - wins:\n\t\tprint(2 * n - 1)\n\t\tcontinue\n\telif wins == 0 and k:\n\t\tprint(2 * k - 1)\n\t\tcontinue\n\n\tscore = 0\n\n\tgood = []\n\ti = S.find('W')\n\textra = i\n\tcnt = 0\n\twhile i < n:\n\t\tif S[i] == 'L':\n\t\t\tcnt += 1\n\t\telse:\n\t\t\tscore += 1\n\t\t\tif i > 0 and S[i-1] == 'W': score += 1\n\n\t\t\tif cnt: good.append(cnt)\n\t\t\tcnt = 0\n\n\t\ti += 1\n\n\textra += cnt\n\n\tgood.sort()\n\n\tfor j in good:\n\t\tif k >= j:\n\t\t\tscore += 1 + 2 * j\n\t\t\tk -= j\n\t\telse:\n\t\t\tscore += 2 * k\n\t\t\tk = 0\n\n\tif k:\n\t\tscore += 2 * min(k, extra)\n\n\tprint(score)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nnamespace IO {\ninline long long read() {\n  long long o = 0, f = 1;\n  char c = getchar();\n  while (c < '0' || c > '9') {\n    if (c == '-') f = -1;\n    c = getchar();\n  }\n  while (c >= '0' && c <= '9') {\n    o = o * 10 + c - '0';\n    c = getchar();\n  }\n  return o * f;\n}\n}  // namespace IO\nusing namespace IO;\nconst int N = 1e5 + 7, M = 1e6 + 7, INF = 0x3f3f3f3f, Mod = 1e9 + 7;\nchar a[N];\nint b[N], tot;\nint t, n, k;\nvector<int> pos;\nint main() {\n  cin >> t;\n  while (t--) {\n    tot = 0;\n    cin >> n >> k;\n    cin >> a;\n    int cnt = 0;\n    bool f = 0;\n    for (int i = 0, s = 0; i < n; i++) {\n      if (a[i] == 'W') {\n        f = 1;\n        cnt++;\n      }\n      if (a[i] == 'L' && f) {\n        s++;\n      } else {\n        if (s > 0) {\n          b[++tot] = s;\n          s = 0;\n        }\n      }\n    }\n    if (cnt + k >= n) {\n      cout << (2 * n) - 1 << endl;\n      continue;\n    }\n    sort(b + 1, b + 1 + tot);\n    int t = 0, first = 0;\n    for (int i = 1; i <= tot; i++) {\n      t += b[i];\n      if (t > k) {\n        first = tot - i + 2;\n        break;\n      }\n    }\n    if (t <= k && (cnt || k)) {\n      first = 1;\n    }\n    cout << (cnt + k) * 2 - first << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\npublic class Main {\n    static class Scan {\n        private byte[] buf=new byte[1024];\n        private int index;\n        private InputStream in;\n        private int total;\n        public Scan()\n        {\n            in=System.in;\n        }\n        public int scan()throws IOException\n        {\n            if(total<0)\n            throw new InputMismatchException();\n            if(index>=total)\n            {\n                index=0;\n                total=in.read(buf);\n                if(total<=0)\n                return -1;\n            }\n            return buf[index++];\n        }\n        public int scanInt()throws IOException\n        {\n            int integer=0;\n            int n=scan();\n            while(isWhiteSpace(n))\n            n=scan();\n            int neg=1;\n            if(n=='-')\n            {\n                neg=-1;\n                n=scan();\n            }\n            while(!isWhiteSpace(n))\n            {\n                if(n>='0'&&n<='9')\n                {\n                    integer*=10;\n                    integer+=n-'0';\n                    n=scan();\n                }\n                else throw new InputMismatchException();\n            }\n            return neg*integer;\n        }\n        public double scanDouble()throws IOException\n        {\n            double doub=0;\n            int n=scan();\n            while(isWhiteSpace(n))\n            n=scan();\n            int neg=1;\n            if(n=='-')\n            {\n                neg=-1;\n                n=scan();\n            }\n            while(!isWhiteSpace(n)&&n!='.')\n            {\n                if(n>='0'&&n<='9')\n                {\n                    doub*=10;\n                    doub+=n-'0';\n                    n=scan();\n                }\n                else throw new InputMismatchException();\n            }\n            if(n=='.')\n            {\n                n=scan();\n                double temp=1;\n                while(!isWhiteSpace(n))\n                {\n                    if(n>='0'&&n<='9')\n                    {\n                        temp/=10;\n                        doub+=(n-'0')*temp;\n                        n=scan();\n                    }\n                    else throw new InputMismatchException();\n                }\n            }\n            return doub*neg;\n        }\n        public String scanString()throws IOException\n        {\n            StringBuilder sb=new StringBuilder();\n            int n=scan();\n            while(isWhiteSpace(n))\n            n=scan();\n            while(!isWhiteSpace(n))\n            {\n                sb.append((char)n);\n                n=scan();\n            }\n            return sb.toString();\n        }\n        private boolean isWhiteSpace(int n)\n        {\n            if(n==' '||n=='\\n'||n=='\\r'||n=='\\t'||n==-1)\n            return true;\n            return false;\n        }\n    }\n    \n    public static void sort(int arr[],int l,int r) {    //sort(arr,0,n-1);\n        if(l==r) {\n            return;\n        }\n        int mid=(l+r)/2;\n        sort(arr,l,mid);\n        sort(arr,mid+1,r);\n        merge(arr,l,mid,mid+1,r);\n    }\n    public static void merge(int arr[],int l1,int r1,int l2,int r2) {\n        int tmp[]=new int[r2-l1+1];\n        int indx1=l1,indx2=l2;\n        //sorting the two halves using a tmp array\n        for(int i=0;i<tmp.length;i++) {\n            if(indx1>r1) {\n                tmp[i]=arr[indx2];\n                indx2++;\n                continue;\n            }\n            if(indx2>r2) {\n                tmp[i]=arr[indx1];\n                indx1++;\n                continue;\n            }\n            if(arr[indx1]<arr[indx2]) {\n                tmp[i]=arr[indx1];\n                indx1++;\n                continue;\n            }\n            tmp[i]=arr[indx2];\n            indx2++;\n        }\n        //Copying the elements of tmp into the main array\n        for(int i=0,j=l1;i<tmp.length;i++,j++) {\n            arr[j]=tmp[i];\n        }\n    }\n    \n    public static void sort(long arr[],int l,int r) {    //sort(arr,0,n-1);\n        if(l==r) {\n            return;\n        }\n        int mid=(l+r)/2;\n        sort(arr,l,mid);\n        sort(arr,mid+1,r);\n        merge(arr,l,mid,mid+1,r);\n    }\n    public static void merge(long arr[],int l1,int r1,int l2,int r2) {\n        long tmp[]=new long[r2-l1+1];\n        int indx1=l1,indx2=l2;\n        //sorting the two halves using a tmp array\n        for(int i=0;i<tmp.length;i++) {\n            if(indx1>r1) {\n                tmp[i]=arr[indx2];\n                indx2++;\n                continue;\n            }\n            if(indx2>r2) {\n                tmp[i]=arr[indx1];\n                indx1++;\n                continue;\n            }\n            if(arr[indx1]<arr[indx2]) {\n                tmp[i]=arr[indx1];\n                indx1++;\n                continue;\n            }\n            tmp[i]=arr[indx2];\n            indx2++;\n        }\n        //Copying the elements of tmp into the main array\n        for(int i=0,j=l1;i<tmp.length;i++,j++) {\n            arr[j]=tmp[i];\n        }\n    }\n    \n    public static void main(String args[]) throws IOException {\n        Scan input=new Scan();\n        StringBuilder ans=new StringBuilder(\"\");\n        int test=input.scanInt();\n        for(int tt=1;tt<=test;tt++) {\n            int n=input.scanInt();\n            int k=input.scanInt();\n            StringBuilder str=new StringBuilder(input.scanString());\n            int cnt=0;\n            for(int i=1;i<n;i++) {\n                if(str.charAt(i)=='W') {\n                    continue;\n                }\n                if(str.charAt(i-1)!='W') {\n                    continue;\n                }\n                while(i<n && str.charAt(i)=='L') {\n                    i++;\n                }\n                if(i==n) {\n                    break;\n                }\n                i--;\n                cnt++;\n            }\n            int arr[]=new int[cnt];\n            int indx[]=new int[cnt];\n            cnt=0;\n            for(int i=1;i<n;i++) {\n                if(str.charAt(i)=='W') {\n                    continue;\n                }\n                if(str.charAt(i-1)!='W') {\n                    continue;\n                }\n                int tmp_cnt=0;\n                int j=i;\n                while(j<n && str.charAt(j)=='L') {\n                    j++;\n                    tmp_cnt++;\n                }\n                if(j==n) {\n                    break;\n                }\n                arr[cnt]=tmp_cnt;\n                indx[cnt]=i;\n                i=j-1;\n                cnt++;\n            }\n//            for(int i=0;i<cnt;i++) {\n//                System.out.println(arr[i]+\" \"+indx[i]);\n//            }\n            sort(arr,indx,arr.length);\n            for(int i=0;i<indx.length;i++) {\n                for(int j=indx[i];j<n;j++) {\n                    if(str.charAt(j)=='W') {\n                        break;\n                    }\n                    if(k==0) {\n                        break;\n                    }\n                    str.setCharAt(j, 'W');\n                    k--;\n                }\n            }\n            int first_w=-1;\n            for(int i=0;i<n;i++) {\n                if(str.charAt(i)=='W') {\n                    first_w=i;\n                    break;\n                }\n            }\n            if(first_w==-1) {\n                first_w=n-1;\n            }\n            for(int i=first_w;i>=0;i--) {\n                if(k==0) {\n                    break;\n                }\n                if(str.charAt(i)=='W') {\n                    continue;\n                }\n                str.setCharAt(i, 'W');\n                k--;\n            }\n            \n            \n            int last_w=-1;\n            for(int i=n-1;i>=0;i--) {\n                if(str.charAt(i)=='W') {\n                    last_w=i;\n                    break;\n                }\n            }\n            if(last_w==-1) {\n                last_w=0;\n            }\n            for(int i=last_w;i<n;i++) {\n                if(k==0) {\n                    break;\n                }\n                if(str.charAt(i)=='W') {\n                    continue;\n                }\n                str.setCharAt(i, 'W');\n                k--;\n            }\n            \n            int total=0;\n            for(int i=0;i<n;i++) {\n                if(str.charAt(i)=='L') {\n                    continue;\n                }\n                if(i!=0 && str.charAt(i-1)=='W') {\n                    total+=2;\n                }\n                else {\n                    total++;\n                }\n            }\n//            System.out.println(str);\n            ans.append(total+\"\\n\");\n        }\n        System.out.println(ans);\n    }\n    \n    static void buildMaxHeap(int arr[],int brr[], int n) \n  { \n    for (int i = 1; i < n; i++) \n    { \n      // if child is bigger than parent \n      if (arr[i] > arr[(i - 1) / 2]) \n      { \n        int j = i; \n  \n        // swap child and parent until \n        // parent is smaller \n        while (arr[j] > arr[(j - 1) / 2]) \n        { \n          swap(arr, j, (j - 1) / 2); \n          swap(brr, j, (j - 1) / 2); \n          j = (j - 1) / 2; \n        } \n      } \n    } \n  } \n  \n  static void sort(int arr[],int brr[], int n) \n  { \n    buildMaxHeap(arr,brr, n); \n  \n    for (int i = n - 1; i > 0; i--) \n    { \n      // swap value of first indexed \n      // with last indexed \n      swap(arr, 0, i); \n      swap(brr, 0, i); \n  \n      // maintaining heap property \n      // after each swapping \n      int j = 0, index; \n  \n      do\n      { \n        index = (2 * j + 1); \n  \n        // if left child is smaller than \n        // right child point index variable \n        // to right child \n        if (index < (i - 1) && arr[index] < arr[index + 1]) \n          index++; \n  \n        // if parent is smaller than child \n        // then swapping parent with child \n        // having higher value \n        if (index < i && arr[j] < arr[index]) {\n          swap(arr, j, index); \n          swap(brr, j, index); \n        }\n  \n        j = index; \n  \n      } while (index < i); \n    } \n  } \n  \n  public static void swap(int[] a, int i, int j) { \n    int temp = a[i]; \n    a[i]=a[j]; \n    a[j] = temp; \n  } \n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class B {\n\n\tpublic static void main(String[] args) {\n        FastScanner in = new FastScanner();\n        PrintWriter out = new PrintWriter(System.out);\n        int t = in.nextInt();\n        while(t-->0) { \n            int n = in.nextInt();\n            int k = in.nextInt();\n            char ch[] = in.next().toCharArray();\n            long ans = 0;\n            int start = -1,end = 0;\n            for(int i=0;i<n;i++){\n                if(ch[i]=='W'){\n                    if(start==-1) start = i;\n                    end = i;\n                }\n            }\n            SortedMap<Integer,ArrayList<Integer>> map = new TreeMap<>();\n            if(end!=0&&start!=-1){\n                for(int i=start;i<=end;i++){\n                    if(ch[i]=='L'){\n                        int ind = i;\n                        int cnt = 0;\n                        while(ch[i]=='L'){\n                            cnt++;i++;\n                        }\n                        if(map.containsKey(cnt)) map.get(cnt).add(ind);\n                        else{\n                            ArrayList<Integer> arr = new ArrayList<>();\n                            arr.add(ind);\n                            map.put(cnt, arr);\n                        }\n                    }\n                }\n            }\n            //for(int p : map.keySet()) out.println(p);\n            for(int p : map.keySet()){\n                //out.println(p);\n                for(int i : map.get(p)){\n                    for(int j=i;j<n;j++){\n                        if(k<=0||ch[j]=='W') break;\n                        ch[j] = 'W';\n                        k--;\n                    }\n                    if(k<=0) break;\n                }\n                if(k<=0) break;\n            }\n            if(k>0){\n                for(int i=end;i<n;i++){\n                    if(k<=0) break;\n                    if(ch[i]=='L'){\n                        ch[i] = 'W';\n                        k--;\n                    }\n                }\n            }\n            if(k>0&&start!=0){\n                for(int i=start;i>=0;i--){\n                    if(k<=0) break;\n                    if(ch[i]=='L'){\n                        ch[i] = 'W';\n                        k--;\n                    }\n                }\n            }\n            if(ch[0]=='W') ans++;\n            for(int i=1;i<n;i++){\n                if(ch[i]=='W'){\n                    ans++;\n                    if(ch[i-1]=='W') ans++;\n                }\n            }\n            out.println(ans);\n        }\n        out.flush();\n\t}\n\t\n\tstatic class FastScanner {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tStringTokenizer st = new StringTokenizer(\"\");\n\t\t\n\t\tString next() {\n\t\t\twhile(!st.hasMoreTokens())\n\t\t\t\ttry {\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\t}catch(IOException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\t\t\n\t\tString nextLine(){\n\t\t\ttry{\n\t\t\t\treturn br.readLine();\n\t\t\t} catch(IOException e) { } return \"\";\n\t\t}\n\t\t\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\t\t\n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\t\t\n\t\tint[] readArray(int n) {\n\t\t\tint a[] = new int[n];\n\t\t\tfor(int i=0;i<n;i++) a[i] = nextInt();\n\t\t\treturn a;\n\t\t}\n\t\t\n\t\tInteger[] readArray(long n) {\n\t\t    Integer a[] = new Integer[(int)n];\n\t\t\tfor(int i=0;i<n;i++) a[i] = nextInt();\n\t\t\treturn a;\n\t\t}\n\t\t\n\t\tlong[] readArray(int n,long x) {\n\t\t\tlong a[] = new long[n];\n\t\t\tfor(int i=0;i<n;i++) a[i] = nextLong();\n\t\t\treturn a;\n\t\t}\n\t\t\n\t}\n\t\n\tstatic class Pair implements Comparable<Pair> {\n\t\tint x, y;\n\t\tPair(int a, int b){ x = a; y = b; }\n\t\tint getKey() { return x; }\n\t\tint getVal() { return y; }\n\t\t@Override\n\t\tpublic int compareTo(Pair o) {\n\t\t\tif(o.getVal() - this.getVal()>0)\n\t\t\t\treturn -1;\n\t\t\telse if(o.getVal() - this.getVal()<0)\n\t\t\t\treturn 1;\n\t\t\telse \n\t\t\t\treturn 0;\n\t\t}\n\t\t\n\t}\n\t\n\tstatic long lcm(long a, long b) {\n\t\treturn (a*b)/gcd(a,b);\n\t}\n\t\n\tstatic long gcd(long a, long b) {\n\t\tif(b==0) return a;\n\t\telse return gcd(b,a%b);\n\t}\n\t\n\tstatic long hashInt(int x,int y) {\n\t\treturn x*(1_000_000_000L)+y;\n\t}\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid solve(int test_case) {\n  int n, k;\n  string S;\n  cin >> n >> k >> S;\n  int wins = 0;\n  for (int i = 0; i < n; ++i) {\n    wins += (S[i] == 'W');\n  }\n  if (n - wins <= k) {\n    cout << max(0, 2 * n - 1) << \"\\n\";\n    return;\n  }\n  if (wins == 0) {\n    cout << max(0, min(n, k) * 2 - 1) << \"\\n\";\n    return;\n  }\n  vector<int> gaps;\n  int trip = 0, st = 0, back = 0;\n  for (int i = 0; i < n; ++i) {\n    if (S[i] == 'W') {\n      trip = 1;\n      continue;\n    }\n    if (trip) {\n      int j = i;\n      while (i < n && S[i] == 'L') {\n        ++i;\n      }\n      if (i == n)\n        back = i - j;\n      else\n        gaps.push_back(i - j);\n    } else {\n      while (i < n && S[i] == 'L') {\n        ++i;\n        ++st;\n      }\n      trip = 1;\n    }\n  }\n  sort(gaps.begin(), gaps.end());\n  int swi = 0, ans = 0;\n  for (int i = 0; i < n; ++i) {\n    if (S[i] == 'L') {\n      swi = 0;\n      continue;\n    }\n    if (swi) {\n      ans += 2;\n      swi = 1;\n    } else {\n      ++ans;\n      swi = 1;\n    }\n  }\n  for (int i = 0; i < ((int)gaps.size()) && k; ++i) {\n    if (k >= gaps[i]) {\n      k -= gaps[i];\n      ans += gaps[i] * 2 + 1;\n    } else {\n      ans += 2 * k;\n      k = 0;\n      break;\n    }\n  }\n  if (k && st) {\n    ans += 2 * min(k, st);\n    k -= min(k, st);\n  }\n  if (k && back) {\n    ans += 2 * min(k, back);\n    k -= min(k, back);\n  }\n  cout << ans << \"\\n\";\n}\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(nullptr);\n  int t, test_case = 0;\n  cin >> t;\n  for (; test_case < t; ++test_case) {\n    solve(test_case);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "from functools import lru_cache\n\n############ ---- Input Functions ---- ############\ndef inp():\n    return(int(input()))\ndef inlt():\n    return(list(map(int,input().split())))\ndef insr():\n    s = input()\n    return(list(s[:len(s)]))\ndef invr():\n    return(map(int,input().split()))\n    \n\nt = inp()\nfor _ in range(t):\n    n, k = inlt()\n    s = insr()\n\n    # score = 0\n    # for i, ch in enumerate(s):\n        # if ch == \"W\":\n            # score += 1\n            # if i > 0 and s[i-1] == \"W\":\n                # score += 1\n\n\n    # @lru_cache(None)\n    # def dp(i, rem):\n        # if rem == 0 or i == n:\n            # return 0\n\n        # res = 0\n        # for j in range(i, n):\n            # if s[j] == \"L\":\n                # s[j] = \"W\"\n                # ad = 1\n                # if j > 0 and s[j-1] == \"W\":\n                    # ad += 1\n                # if j < n - 1 and s[j+1] == \"W\":\n                    # ad += 1\n                # res = max(res, ad + dp(j+1, rem-1))\n                # s[j] = \"L\"\n\n        # return res\n\n    # max_add = dp(0, k)\n    # print(score+max_add)\n    if k > 0:\n        l_groups = []\n        i = 0\n        while i < n:\n            group = []\n            while i < n and s[i] == \"L\":\n                group.append(i)\n                i+=1\n            if group:\n                l_groups.append(group)\n            i += 1\n\n        start, end = [], []\n        if l_groups and l_groups[0][0] == 0:\n            start = l_groups.pop(0)\n        if l_groups and l_groups[-1][-1] == n-1:\n            end = l_groups.pop()\n\n        l_groups.sort(key = lambda a : (len(a)))\n        for group in l_groups:\n            for i in group:\n                s[i] = \"W\"\n                k -= 1\n                if k == 0:\n                    break\n            if k == 0:\n                break\n\n        rem = start[::-1] + end\n        for i in range(min(k, len(rem))):\n            s[rem[i]] = \"W\"\n\n\n    score = 0\n    for i, ch in enumerate(s):\n        if ch == \"W\":\n            score += 1\n            if i > 0 and s[i-1] == \"W\":\n                score += 1\n    print(score)\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid err(istream_iterator<string> it) {}\ntemplate <typename T, typename... Args>\nvoid err(istream_iterator<string> it, T a, Args... args) {\n  cerr << *it << \" = \" << a << endl;\n  err(++it, args...);\n}\ntemplate <typename T>\nvoid cins(T &first) {\n  cin >> first;\n}\ntemplate <typename T, typename... Ts>\nvoid cins(T &first, T &second, Ts &...rest) {\n  cin >> first;\n  cins(second, rest...);\n}\nconst long long mod = pow(10, 9) + 7;\nconst long long N = 3e5, M = N;\nconst long long inf = LLONG_MAX;\nconst long long infn = LLONG_MIN;\nvoid iluzn() {\n  long long n, k;\n  cins(n, k);\n  string s;\n  cins(s);\n  long long res = 0;\n  long long w = 0, l = 0, ws = 0;\n  vector<long long> ls;\n  for (long long i = 0; i < (long long)n; i += 1) {\n    if (s[i] == 'W') {\n      w++;\n      if (i == 0 || s[i - 1] == 'L') ws++;\n    } else {\n      l++;\n      if (i == 0 || s[i - 1] == 'W') ls.push_back(0);\n      ls.back()++;\n    }\n  }\n  if (k >= l) {\n    cout << 2 * n - 1 << \"\\n\";\n    return;\n  }\n  if (w == 0) {\n    if (k)\n      cout << 2 * k - 1 << \"\\n\";\n    else\n      cout << 0 << \"\\n\";\n    return;\n  }\n  if (s[0] == 'L') ls[0] = inf;\n  if (s[n - 1] == 'L') ls.back() = inf;\n  sort(ls.begin(), ls.end());\n  w += k;\n  for (long long i = 0; i < (long long)ls.size(); i += 1) {\n    if (ls[i] <= k) {\n      k -= ls[i];\n      ws--;\n    } else\n      break;\n  }\n  cout << 2 * w - ws << \"\\n\";\n}\nsigned main() {\n  ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);\n  long long t = 1;\n  cin >> t;\n  while (t--) iluzn();\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys, os, io\ndef rs(): return sys.stdin.readline().rstrip()\ndef ri(): return int(sys.stdin.readline())\ndef ria(): return list(map(int, sys.stdin.readline().split()))\ndef ws(s): sys.stdout.write(s + '\\n')\ndef wi(n): sys.stdout.write(str(n) + '\\n')\ndef wia(a): sys.stdout.write(' '.join([str(x) for x in a]) + '\\n')\nimport math,datetime,functools,itertools,operator,bisect,fractions,statistics\nfrom collections import deque,defaultdict,OrderedDict,Counter\nfrom fractions import Fraction\nfrom decimal import Decimal\nfrom sys import stdout\n\ndef main():\n    starttime=datetime.datetime.now()\n    if(os.path.exists('input.txt')):\n        sys.stdin = open(\"input.txt\",\"r\")\n        sys.stdout = open(\"output.txt\",\"w\")\n    \n    for _ in range(ri()):\n        n,k=ria()\n        s=rs()\n        consgaps=[]\n        currconsgaps=0\n        prevscore=0\n        for i in range(n):\n            if s[i]=='W':\n                if i-1>=0 and s[i-1]=='W':\n                    prevscore+=2\n                else:\n                    prevscore+=1\n        L,R=0,n-1\n        for i in range(n):\n            if s[i]=='W':\n                L=i\n                break\n        for i in range(n-1,-1,-1):\n            if s[i]=='W':\n                R=i\n                break\n        s=s[L:R+1]\n        # print(s)\n        if k==0:\n            print(prevscore)\n        elif prevscore==0:\n            print(2*(min(n,k))-1)\n        else:\n            ngapsleftovers=(L+n-1-R)\n            for i in range(len(s)):\n                if s[i]=='W':\n                    if currconsgaps>0:\n                        consgaps.append(currconsgaps)\n                    currconsgaps=0\n                else:\n                    currconsgaps+=1\n            if currconsgaps>0:\n                consgaps.append(currconsgaps)\n            \n            # print(consgaps)\n            z=sorted(consgaps)\n            # print(z)\n            newscore=prevscore\n            for i in z:\n                if k-i<0:\n                    newscore+=2*k\n                    k=0\n                    break\n                else:\n                    newscore+=2*i+1\n                    k-=i\n                    \n            if k>0:\n                newscore+=2*min(ngapsleftovers,k)        \n            \n            print(newscore)\n                \n        \n            \n        \n        \n            \n     \n        \n        \n            \n        \n        \n                \n            \n        \n        \n        \n                \n            \n        \n\n            \n             \n        \n            \n        \n        \n        \n                \n        \n            \n        \n        \n        \n        \n                \n        \n        \n            \n        \n        \n        \n        \n                \n        \n    #<--Solving Area Ends\n    endtime=datetime.datetime.now()\n    time=(endtime-starttime).total_seconds()*1000\n    if(os.path.exists('input.txt')):\n        print(\"Time:\",time,\"ms\")  \n    \n                \nclass FastReader(io.IOBase):\n    newlines = 0\n\n    def __init__(self, fd, chunk_size=1024 * 8):\n        self._fd = fd\n        self._chunk_size = chunk_size\n        self.buffer = io.BytesIO()\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, self._chunk_size))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self, size=-1):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, self._chunk_size if size == -1 else size))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n\nclass FastWriter(io.IOBase):\n\n    def __init__(self, fd):\n        self._fd = fd\n        self.buffer = io.BytesIO()\n        self.write = self.buffer.write\n\n    def flush(self):\n        os.write(self._fd, self.buffer.getvalue())\n        self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass FastStdin(io.IOBase):\n    def __init__(self, fd=0):\n        self.buffer = FastReader(fd)\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\nclass FastStdout(io.IOBase):\n    def __init__(self, fd=1):\n        self.buffer = FastWriter(fd)\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.flush = self.buffer.flush\n\n\nif __name__ == '__main__':\n    sys.stdin = FastStdin()\n    sys.stdout = FastStdout()\n    main()\n    "
        },
        {
            "language": 1,
            "solution": "from collections import defaultdict\n\nimport sys\ndef input() : return sys.stdin.readline()\n\nfor _ in range(int(input())):\n    n,k = map(int,input().split())\n    \n    ik = k\n    sg = input().strip()\n    gaps = []\n    l = len(sg)\n    wins = 0\n    win_streaks = 0\n    i = 0\n    lcnt = 0\n    temp = 0\n    while i < l:\n        if sg[i] == 'W':\n            break\n        i += 1\n        temp += 1\n    filled_gaps = 0\n    while i < l:\n        if sg[i] == 'W':\n            win_streaks += 1\n            while i < l and sg[i] == 'W':\n                wins += 1\n                i += 1\n        if i < l and sg[i] == 'L':\n            lcnt = 0\n            while i < l and sg[i] == 'L':\n                lcnt += 1\n                i += 1\n            else:\n                if i < l and sg[i] == 'W':\n                    gaps.append(lcnt)\n                else:\n                    temp += lcnt\n    \n    gaps.sort()\n    gap_l = len(gaps)\n    j = 0\n    while  k > 0 and j < gap_l:\n        if gaps[j]  <= k:\n            k -= gaps[j]\n            filled_gaps += 1\n        j += 1\n    if k > 0 and temp > 0 and wins == 0:\n        win_streaks += 1\n    \n    score = 2*(min(wins + ik , l)) - win_streaks + filled_gaps\n    print(score)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long mod = 1000000007;\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\nvoid solve() {\n  int n, k;\n  cin >> n >> k;\n  string s;\n  cin >> s;\n  priority_queue<pair<int, int>, vector<pair<int, int>>,\n                 greater<pair<int, int>>>\n      pq;\n  for (int i = 0; i < n; i++) {\n    if (s[i] == 'L') {\n      int l = 1;\n      int index = i;\n      while (i + 1 < n && s[i + 1] == 'L') {\n        i++;\n        l++;\n      }\n      if (index == 0 || i == n - 1) {\n      } else\n        pq.push(make_pair(l, index));\n    }\n  }\n  while (!pq.empty() && k > 0) {\n    pair<int, int> p = pq.top();\n    pq.pop();\n    int index = p.second;\n    for (int i = index; i < n && k > 0; i++) {\n      if (s[i] == 'W') break;\n      s[i] = 'W';\n      k--;\n    }\n  }\n  if (k > 0) {\n    int index = n - 1;\n    for (; index >= 0 && k > 0; index--) {\n      if (s[index] == 'W') break;\n    }\n    index++;\n    for (int i = index; i < n && k > 0; i++) {\n      if (s[i] == 'L') {\n        s[i] = 'W';\n        k--;\n      }\n    }\n    index = 0;\n    for (; index < n && k > 0; index++) {\n      if (s[index] == 'W') break;\n    }\n    for (int i = index; i >= 0 && k > 0; i--) {\n      if (s[i] == 'L') {\n        k--;\n        s[i] = 'W';\n      }\n    }\n  }\n  int score = s[0] == 'W';\n  for (int i = 1; i < n; i++) {\n    if (s[i] == 'W' && s[i - 1] == 'W')\n      score += 2;\n    else if (s[i] == 'W')\n      score++;\n  }\n  cout << score << '\\n';\n}\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  int t;\n  cin >> t;\n  while (t--) {\n    solve();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.math.BigInteger;\nimport java.util.*;\n\n/**\n * @author Mubtasim Shahriar\n */\n\npublic class ChessCheaterr {\n\n    public static void main(String[] args) {\n\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader sc = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        Solver solver = new Solver();\n\t\tint t = sc.nextInt();\n//        int t = 1;\n        while (t-- != 0) {\n            solver.solve(sc, out);\n        }\n        out.close();\n\n    }\n\n    static class Solver {\n        public void solve(InputReader sc, PrintWriter out) {\n            int n = sc.nextInt();\n            int k = sc.nextInt();\n            char[] arr = sc.next().toCharArray();\n            int fidx = n;\n            int lidx = -1;\n            int total = 0;\n            for(int i = 0; i < n; i++) {\n                if(arr[i]=='W') {\n                    total++;\n                    if (i > 0 && arr[i - 1] == 'W') total++;\n                    if (fidx == n) fidx = i;\n                    lidx = i;\n//                    out.println(\" HI \" + i);\n                }\n            }\n            if(fidx==n) {\n                if(k==0) {\n                    out.println(0);\n                    return;\n                }\n                long ans = 1;\n                k--;\n                ans += (long)k*2;\n                out.println(ans);\n                return;\n            }\n            ArrayList<Integer> llengts = new ArrayList<>();\n            int cnt = 0;\n//            out.println(total);\n            for(int i = fidx+1; i <= lidx; i++) {\n                char now = arr[i];\n                if(now=='L') {\n                    cnt++;\n                } else {\n                    if(cnt>0) llengts.add(cnt);\n                    cnt = 0;\n                }\n            }\n            Collections.sort(llengts);\n//            out.println(llengts + \" \" + fidx + \" \" + lidx + \" \" + total);\n            for(int i = 0; i < llengts.size();i++) {\n                if(k<1) break;\n                long now = llengts.get(i);\n                if(now<=k) {\n                    total+=now*2+1;\n                    k-=now;\n                } else {\n                    total += k*2;\n                    k = 0;\n                }\n            }\n            if(k>0) {\n                if(fidx>=1) {\n                    total+=Math.min(fidx,k)*2;\n                    k-= Math.min(fidx,k);\n                }\n                if(k>0) {\n                    long right = n-lidx-1;\n                    total+=Math.min(k,right)*2;\n                }\n            }\n            out.println(total);\n        }\n    }\n\n    static void sort(int[] arr) {\n        Random rand = new Random();\n        int n = arr.length;\n        for (int i = 0; i < n; i++) {\n            int idx = rand.nextInt(n);\n            if (idx == i) continue;\n            arr[i] ^= arr[idx];\n            arr[idx] ^= arr[i];\n            arr[i] ^= arr[idx];\n        }\n        Arrays.sort(arr);\n    }\n\n    static void sort(long[] arr) {\n        Random rand = new Random();\n        int n = arr.length;\n        for (int i = 0; i < n; i++) {\n            int idx = rand.nextInt(n);\n            if (idx == i) continue;\n            arr[i] ^= arr[idx];\n            arr[idx] ^= arr[i];\n            arr[i] ^= arr[idx];\n        }\n        Arrays.sort(arr);\n    }\n\n    static void sortDec(int[] arr) {\n        Random rand = new Random();\n        int n = arr.length;\n        for (int i = 0; i < n; i++) {\n            int idx = rand.nextInt(n);\n            if (idx == i) continue;\n            arr[i] ^= arr[idx];\n            arr[idx] ^= arr[i];\n            arr[i] ^= arr[idx];\n        }\n        Arrays.sort(arr);\n        int l = 0;\n        int r = n - 1;\n        while (l < r) {\n            arr[l] ^= arr[r];\n            arr[r] ^= arr[l];\n            arr[l] ^= arr[r];\n            l++;\n            r--;\n        }\n    }\n\n    static void sortDec(long[] arr) {\n        Random rand = new Random();\n        int n = arr.length;\n        for (int i = 0; i < n; i++) {\n            int idx = rand.nextInt(n);\n            if (idx == i) continue;\n            arr[i] ^= arr[idx];\n            arr[idx] ^= arr[i];\n            arr[i] ^= arr[idx];\n        }\n        Arrays.sort(arr);\n        int l = 0;\n        int r = n - 1;\n        while (l < r) {\n            arr[l] ^= arr[r];\n            arr[r] ^= arr[l];\n            arr[l] ^= arr[r];\n            l++;\n            r--;\n        }\n    }\n\n    static class InputReader {\n        private boolean finished = false;\n\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private SpaceCharFilter filter;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int read() {\n            if (numChars == -1) {\n                throw new InputMismatchException();\n            }\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (numChars <= 0) {\n                    return -1;\n                }\n            }\n            return buf[curChar++];\n        }\n\n        public int peek() {\n            if (numChars == -1) {\n                return -1;\n            }\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    return -1;\n                }\n                if (numChars <= 0) {\n                    return -1;\n                }\n            }\n            return buf[curChar];\n        }\n\n        public int nextInt() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do {\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public long nextLong() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            long res = 0;\n            do {\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public String nextString() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            StringBuilder res = new StringBuilder();\n            do {\n                if (Character.isValidCodePoint(c)) {\n                    res.appendCodePoint(c);\n                }\n                c = read();\n            } while (!isSpaceChar(c));\n            return res.toString();\n        }\n\n        public boolean isSpaceChar(int c) {\n            if (filter != null) {\n                return filter.isSpaceChar(c);\n            }\n            return isWhitespace(c);\n        }\n\n        public static boolean isWhitespace(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        private String readLine0() {\n            StringBuilder buf = new StringBuilder();\n            int c = read();\n            while (c != '\\n' && c != -1) {\n                if (c != '\\r') {\n                    buf.appendCodePoint(c);\n                }\n                c = read();\n            }\n            return buf.toString();\n        }\n\n        public String readLine() {\n            String s = readLine0();\n            while (s.trim().length() == 0) {\n                s = readLine0();\n            }\n            return s;\n        }\n\n        public String readLine(boolean ignoreEmptyLines) {\n            if (ignoreEmptyLines) {\n                return readLine();\n            } else {\n                return readLine0();\n            }\n        }\n\n        public BigInteger readBigInteger() {\n            try {\n                return new BigInteger(nextString());\n            } catch (NumberFormatException e) {\n                throw new InputMismatchException();\n            }\n        }\n\n        public char nextCharacter() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            return (char) c;\n        }\n\n        public double nextDouble() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            double res = 0;\n            while (!isSpaceChar(c) && c != '.') {\n                if (c == 'e' || c == 'E') {\n                    return res * Math.pow(10, nextInt());\n                }\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            if (c == '.') {\n                c = read();\n                double m = 1;\n                while (!isSpaceChar(c)) {\n                    if (c == 'e' || c == 'E') {\n                        return res * Math.pow(10, nextInt());\n                    }\n                    if (c < '0' || c > '9') {\n                        throw new InputMismatchException();\n                    }\n                    m /= 10;\n                    res += (c - '0') * m;\n                    c = read();\n                }\n            }\n            return res * sgn;\n        }\n\n        public boolean isExhausted() {\n            int value;\n            while (isSpaceChar(value = peek()) && value != -1) {\n                read();\n            }\n            return value == -1;\n        }\n\n        public String next() {\n            return nextString();\n        }\n\n        public SpaceCharFilter getFilter() {\n            return filter;\n        }\n\n        public void setFilter(SpaceCharFilter filter) {\n            this.filter = filter;\n        }\n\n        public interface SpaceCharFilter {\n            public boolean isSpaceChar(int ch);\n        }\n\n        public int[] nextIntArray(int n) {\n            int[] array = new int[n];\n            for (int i = 0; i < n; ++i) array[i] = nextInt();\n            return array;\n        }\n\n        public int[] nextSortedIntArray(int n) {\n            int array[] = nextIntArray(n);\n            Arrays.sort(array);\n            return array;\n        }\n\n        public int[] nextSumIntArray(int n) {\n            int[] array = new int[n];\n            array[0] = nextInt();\n            for (int i = 1; i < n; ++i) array[i] = array[i - 1] + nextInt();\n            return array;\n        }\n\n        public long[] nextLongArray(int n) {\n            long[] array = new long[n];\n            for (int i = 0; i < n; ++i) array[i] = nextLong();\n            return array;\n        }\n\n        public long[] nextSumLongArray(int n) {\n            long[] array = new long[n];\n            array[0] = nextInt();\n            for (int i = 1; i < n; ++i) array[i] = array[i - 1] + nextInt();\n            return array;\n        }\n\n        public long[] nextSortedLongArray(int n) {\n            long array[] = nextLongArray(n);\n            Arrays.sort(array);\n            return array;\n        }\n    }\n\n\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  cin.tie(0);\n  ios_base::sync_with_stdio(0);\n  int T;\n  cin >> T;\n  while (T--) {\n    int n, k;\n    string s;\n    cin >> n >> k;\n    cin >> s;\n    vector<int> id;\n    for (int i = 0; i < s.size(); i++) {\n      if (s[i] == 'W') {\n        id.push_back(i);\n      }\n    }\n    vector<tuple<int, int, int>> diffs;\n    for (int i = 1; i < id.size(); i++) {\n      if (id[i] - id[i - 1] - 1 >= 1) {\n        diffs.emplace_back(id[i] - id[i - 1] - 1, id[i - 1], id[i]);\n      }\n    }\n    sort(diffs.begin(), diffs.end());\n    for (int i = 0; i < diffs.size(); i++) {\n      int a, b, c;\n      tie(a, b, c) = diffs[i];\n      if (a <= k) {\n        for (int i = b; i <= c; i++) {\n          s[i] = 'W';\n        }\n        k -= a;\n      }\n    }\n    int sol = 0;\n    int los = 0;\n    for (int i = 0; i < s.size(); i++) {\n      if (i == 0) {\n        sol += (s[i] == 'W');\n      } else {\n        if (s[i] == 'W') {\n          sol++;\n          sol += (s[i - 1] == 'W');\n        }\n      }\n      if (s[i] == 'L') {\n        los++;\n      }\n    }\n    cout << (sol + min(los, k) * 2 - (k && los == n)) << \"\\n\";\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nfor _ in range(t):\n    n,k=map(int,input().split())\n    s=input()\n    Wstreak=wins=loss=0\n    Lstreak=[]\n    for i in range(n):\n        if(s[i]==\"W\"):\n            wins+=1\n            if(i==0 or s[i-1]==\"L\"):\n                Wstreak+=1\n        elif(s[i]==\"L\"):\n            loss+=1\n            if(i==0 or s[i-1]==\"W\"):\n                Lstreak.append(0)\n            Lstreak[-1]+=1\n    if(k>=loss):\n        print(2*n-1)\n        \n    elif(wins==0):\n        if(k==0):\n            print(0)\n        else:\n            print(2*k-1)\n    else:  \n        if(s[0]==\"L\"):\n            Lstreak[0]=1e8\n        if(s[-1]==\"L\"):\n            Lstreak[-1]=1e8\n        Lstreak.sort()\n        wins+=k\n        for i in Lstreak:\n            if(i>k):\n                break\n            k-=i\n            Wstreak-=1\n        print(2*wins-Wstreak)\n            \n            "
        },
        {
            "language": 3,
            "solution": "I=input\nfor _ in[0]*int(I()):\n n,k=map(int,I().split());s=I();c=s.count('W');n=min(n,c+k);a=sorted(map(len,filter(None,s.strip('L').split('W'))))\n while a and c+a[0]<=n:c+=a.pop(0)\n print((2*n-len(a)or 1)-1)"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.math.*;\nimport java.security.*;\nimport java.text.*;\nimport java.time.LocalTime;\nimport java.util.*;\nimport java.util.concurrent.*;\nimport java.util.regex.*;\n\n\n\npublic class B {\n\n\n    public static void main(String[] args) {\n    \n    \tFastScanner scan = new FastScanner();\n    \tint t = scan.nextInt();\n scan:   \tfor(int tt=0; tt<t; tt++) {\n    \t\tint n = scan.nextInt(), k = scan.nextInt();\n    \t\tchar [] ch = scan.next().toCharArray();\n    \t\tint start = 0, end = 0, ans = 0, temp = 0;\n    \t\tArrayList<Integer> arr = new ArrayList<>();\n    \t\tif(ch[0] == 'L') {\n    \t\t\tfor(int i=0; i<n; i++) {\n    \t\t\t\tif(ch[i] == 'L') start++;\n    \t\t\t\telse break;;\n    \t\t\t}\n    \t\t} \n    \t\tif(ch[n-1] == 'L') {\n    \t\t\tfor(int i=n-1; i>=0; i--) {\n    \t\t\t\tif(ch[i] == 'L') end++;\n    \t\t\t\telse break;\n    \t\t\t}\n    \t\t}\n    \t\tif(start == n) {\n    \t\t\tif(k == 0) System.out.println(\"0\");\n    \t\t\telse System.out.println((k*2)-1);\n    \t\t\tcontinue scan;\n    \t\t}\n    \t\t\n    \t\t\tfor(int i=start; i<n-end; i++) {\n    \t\t\t\tif(ch[i] == 'W') {\n    \t\t\t\t\t\n    \t\t\t\t\tif(temp > 0) {\n    \t\t\t\t\t\tarr.add(temp);\n    \t\t\t\t\t\ttemp = 0;\n    \t\t\t\t\t}\n    \t\t\t\t\tif(i != 0) {\n    \t\t\t\t\t\tif(ch[i-1] == 'W') ans+=2;\n    \t\t\t\t\t\telse ans++;\n    \t\t\t\t\t} else ans++;\n    \t\t\t\t\n    \t\t\t\t} else {\n    \t\t\t\t\ttemp++;\n    \t\t\t\t}\n    \t\t\t}\n    \t\t\tif(temp != 0) arr.add(temp);\n    \t//\t\tSystem.out.println(\"before steps \" + ans);\n    \t\t\t\n    \t\t\tCollections.sort(arr);\n    \t\t\tfor(int i=0; i<arr.size() && k >0; i++) {\n    \t\t\t\tif(k >= arr.get(i)) {\n    \t\t\t\t\tk -= arr.get(i);\n    \t\t\t\t\tans += (arr.get(i)*2)+1;\n    \t\t\t\t} else {\n    \t\t\t\t\tif(k >= start && start != 0) {\n    \t\t\t\t\t\tans += start * 2;\n    \t\t\t\t\t\tk -= start;\n    \t\t\t\t\t\tstart = 0;\n    \t\t\t\t\t}\t\n    \t\t\t\t\t if(k >= end && end != 0) { \n    \t\t\t\t\t\tans += end * 2;\n    \t\t\t\t\t\tk -= end;\n    \t\t\t\t\t\tend = 0;\n    \t\t\t\t\t}\t\n    \t\t\t\t\t\tans += k*2;\n    \t\t\t\t\t\tk = 0;\n    \t\t\t\t\t\n    \t\t\t\t}\n    \t\t\t}\n    \t\t\t\n    \t\t\tif(k > 0) {\n    \t\t\t\tint min = Math.min(start, end), max = Math.max(start, end);\n    \t\t\t\tif(k >= min) {\n    \t\t\t\t\tans += (min*2);\n    \t\t\t\t\tk -= min;\n    \t\t\t\t\tans += (Math.min(max,k) * 2);\n    \t\t\t\t} else {\n    \t\t\t\t\tans += (k*2);\n    \t\t\t\t}\n    \t\t\t}\n    \t\t\t\n    \t\t\tSystem.out.println(ans);\n    \t\n    \t}\t\n    }\t\n    \n    \n\n    public static void sort(int [] a) {\n    \tArrayList<Integer> b = new ArrayList<>();\n    \tfor(int i: a) b.add(i);\n    \tCollections.sort(b);\n    \tfor(int i=0; i<a.length; i++) a[i]= b.get(i);\n    }\n     \n    static class FastScanner{\n    \t\n    \tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n    \tStringTokenizer st = new StringTokenizer(\"\");\n    \tString next() {\n    \t\twhile(!st.hasMoreTokens())\n    \t\t\ttry {\n    \t\t\t\tst = new StringTokenizer(br.readLine());\n    \t\t\t} catch (IOException e){\n    \t\t\t\te.printStackTrace();\n    \t\t\t}\n    \t\treturn st.nextToken();\n    \t}\n    \t\n    \tint nextInt() {\n    \t\treturn Integer.parseInt(next());\n    \t}\n    \t\n    \tint [] readArray(int n) {\n    \t\tint [] a = new int[n];\n    \t\tfor(int i=0; i<n ; i++) a[i] = nextInt();\n    \t\treturn a;\n    \t}\n    \t\n    \tlong nextLong() {\n    \t\treturn Long.parseLong(next());\n    \t}\n    \t\n    \t\n    }\n    \n   \n}\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long int ll_max(long long int a, long long int b, long long int c) {\n  return max(a, max(b, c));\n}\nint int_max(int a, int b, int c) { return max(a, max(b, c)); }\nlong long int ll_min(long long int a, long long int b, long long int c) {\n  return min(a, min(b, c));\n}\nint int_min(int a, int b, int c) { return min(a, min(b, c)); }\nlong long int max(int a, long long int b) { return max((long long int)a, b); }\nlong long int min(int a, long long int b) { return min((long long int)a, b); }\nlong long int min(long long int a, int b) { return min(a, (long long int)b); }\nlong long int max(long long int a, int b) { return max(a, (long long int)b); }\nlong long int maximum(long long int a[], long long int n) {\n  long long int max1 = LLONG_MIN;\n  for (long long int i = 0; i < n; i++) {\n    max1 = max(max1, a[i]);\n  }\n  return max1;\n}\nlong long int minimum(long long int a[], long long int n) {\n  long long int min1 = LLONG_MAX;\n  for (long long int i = 0; i < n; i++) {\n    min1 = min(min1, a[i]);\n  }\n  return min1;\n}\nlong long int power(long long int x, long long int y, long long int m) {\n  if (y == 0) return 1;\n  long long int a = power(x, y / 2, m);\n  if (y % 2) {\n    return (a * ((a * x) % m)) % m;\n  } else {\n    return (a * a) % m;\n  }\n}\nlong long int mod_inverse(long long int x, long long int m) {\n  return power(x, m - 2, m);\n}\nlong long int fact(long long int n, long long int m) {\n  if (n <= 1) return 1;\n  return (fact(n - 1, m) * n) % m;\n}\nlong long int ncr(long long int n, long long int r, long long int m) {\n  if (r > n) return 0;\n  long long int n1 = 1, d1 = 1, d2 = 1;\n  n1 = fact(n, m);\n  d1 = fact(r, m);\n  d2 = fact(n - r, m);\n  long long int ans = mod_inverse((d1 * d2) % m, m);\n  ans = (ans * n1) % m;\n  return ans;\n}\nlong long int gcd(long long int a, long long int b) {\n  if (a == 0 || b == 0) return max(a, b);\n  if (a < b) return gcd(b, a);\n  if (a % b == 0) return b;\n  return gcd(b, a % b);\n}\nlong long int ispal(string s) {\n  long long int len = s.size();\n  long long int flag = 1;\n  for (long long int i = 0; i < len; ++i) {\n    if (s[i] != s[len - i - 1]) {\n      flag = 0;\n      break;\n    }\n  }\n  return flag;\n}\nlong long int sroot(long long int n, long long int low = 1,\n                    long long int high = 1e9 + 1) {\n  if (low == high) return low;\n  if (low == high - 1) {\n    if (high * high <= n)\n      return high;\n    else\n      return low;\n  }\n  long long int mid = (low + high) / 2;\n  long long int a = mid * mid;\n  if (a > n)\n    return sroot(n, low, mid - 1);\n  else\n    return sroot(n, mid, high);\n}\nlong long int croot(long long int n, long long int low = 1,\n                    long long int high = 1e6 + 1) {\n  if (low == high) return low;\n  if (low == high - 1) {\n    if (high * high * high <= n)\n      return high;\n    else\n      return low;\n  }\n  long long int mid = (low + high) / 2;\n  long long int a = mid * mid * mid;\n  if (a > n)\n    return croot(n, low, mid - 1);\n  else\n    return croot(n, mid, high);\n}\nunsigned long long int catalan(unsigned long long int n) {\n  if (n <= 1) return 1;\n  unsigned long long int ans = 0;\n  for (int i = 0; i < n; i++) {\n    ans += catalan(i) * catalan(n - i - 1);\n  }\n  return ans;\n}\nbool sortbysec(const pair<long long int, long long int> &a,\n               const pair<long long int, long long int> &b) {\n  return (a.second < b.second);\n}\nclass solver {\n public:\n  void solve() {\n    long long int n, k;\n    cin >> n >> k;\n    string str;\n    cin >> str;\n    long long int ans = 0, ind = -1;\n    vector<pair<int, int>> v;\n    long long int f = -1, l = -1;\n    for (long long int i = 0; i < n; i++) {\n      if (str[i] == 'W') {\n        if (f == -1) f = i;\n        ind = i;\n        long long int p = 0;\n        l = i;\n        while (i + 1 < n && str[i + 1] != 'W') i++, p++;\n        if (p > 0 && i + 1 < n && str[i + 1] == 'W') v.push_back({p, ind});\n      }\n    }\n    sort(v.begin(), v.end());\n    if (ind == -1) {\n      for (long long int i = 0; i < k; i++) str[i] = 'W';\n    } else {\n      for (long long int i = 0; i < v.size(); i++) {\n        if (k >= v[i].first) {\n          k -= v[i].first;\n          for (long long int j = v[i].second + 1; j <= v[i].second + v[i].first;\n               j++)\n            str[j] = 'W';\n        } else {\n          for (long long int j = v[i].second + 1; j <= v[i].second + v[i].first;\n               j++) {\n            if (k == 0) break;\n            if (str[j] == 'L') {\n              str[j] = 'W';\n              k--;\n            }\n          }\n          k = 0;\n          break;\n        }\n      }\n      for (long long int i = l + 1; i < n; i++) {\n        if (k == 0) break;\n        if (str[i] == 'L') str[i] = 'W', k--;\n      }\n      for (long long int i = f - 1; i >= 0; i--) {\n        if (k == 0) break;\n        if (str[i] == 'L') str[i] = 'W', k--;\n      }\n    }\n    for (long long int i = 0; i < n; i++) {\n      long long int c = 0;\n      if (str[i] == 'W') {\n        c = 1;\n        if (i - 1 >= 0 && str[i - 1] == 'W') c++;\n        ans += c;\n      }\n    }\n    cout << ans << \"\\n\";\n  }\n};\nint main() {\n  std::ios::sync_with_stdio(false);\n  std::cin.tie(NULL);\n  std::cout.tie(NULL);\n  int test = 1, c = 1;\n  cin >> test;\n  while (test--) {\n    solver o;\n    o.solve();\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "# your code goes here\ntest = int(input())\nfor _ in range(test):\n    n,k = map(int, input().split())\n    arr = list(input())\n    less = []\n    over = []\n    wins = 0\n    last = False\n    pre = 0\n    found = False\n    for i in range(n):\n        if arr[i]=='W':\n            if last:\n                # print(i)\n                wins+=2\n            else:\n                wins+=1\n\n            if pre<=k and found:\n                if pre>0:\n                    less.append(pre)\n            else:\n                over.append(pre)\n            found = True\n            last = True\n            pre = 0\n        else:\n            pre+=1\n            last = False\n    if pre:\n        over.append(pre)\n        pre = 0\n\n    less.sort()\n    ans = 0\n    for i in range(len(less)):\n        if less[i]<=k:\n            ans += less[i]*2+1\n            k -= less[i]\n        else:\n            over.append(less[i])\n\n    v = min(k, sum(over))\n    if wins==0:\n        ans += max((v*2)-1, 0)\n    else:\n        ans += (2*v)\n\n    print(ans+wins)"
        },
        {
            "language": 3,
            "solution": "# Author : -pratyay-\nimport sys\ninp=sys.stdin.buffer.readline\ninar=lambda: list(map(int,inp().split()))\ninin=lambda: int(inp())\ninst=lambda: inp().decode().strip()\nwrt=sys.stdout.write\npr=lambda *args,end='\\n': wrt(' '.join([str(x) for x in args])+end)\nenum=enumerate\ninf=float('inf')\ncdiv=lambda x,y: (-(-x//y))\n# Am I debugging ? Check if I'm using same variable name in two places\n# fun() returning empty list ? check new=temp[:] or new=temp\n\n_T_=int(input())\nfor _t_ in range(_T_):\n    n,k=list(map(int,input().split()))\n    s=list(input())\n    if k>=s.count('L'):\n        print(2*n-1)\n        continue\n    w=0\n    l=0\n    prev=' '\n    val=[]\n    ans=0\n    for i in s:\n        #print(i,w,l)\n        if i=='W' and prev=='W':\n            ans+=2\n        if i=='W' and prev!='W':\n            ans+=1\n        if i!=prev:\n            if prev==' ':\n                val.append(0)\n            elif prev=='W':\n                val.append(2*w)\n                w=0\n            else:\n                val.append(2*l+1)\n                l=0\n        if i=='W':\n            w+=1\n        else:\n            l+=1\n        prev=i\n    if w==0:\n        val.append(2*l+1)\n        val.append(0)\n    elif l==0:\n        val.append(2*w)\n    ar=[]\n    for i in range(len(val)-2):\n        w1,l,w2=val[i],val[i+1],val[i+2]\n        if w1%2==0 and l%2==1 and w2%2==0:\n\n            ar.append((w1,l,w2))\n    #print(ar)\n    tmp=[]\n    for i in ar:\n        if i[0]==0 or i[2]==0:\n            tmp.append(i)\n            ar.remove(i)\n    ar.sort(key=lambda x: x[1])\n    tmp.sort(key=lambda x: x[0]+x[2])\n    ar.extend(tmp)\n    ar.reverse()\n    while(k>0 and ar):\n        w1,l,w2=ar.pop()\n        w1//=2;l//=2;w2//=2\n        if l<=k:\n            if w1>0 and w2>0:\n                ans+=2*l + 1\n            elif w1==0 and w2==0:\n                ans+=2*l-1\n            else:\n                ans+=2*l \n            k-=l\n        else:\n            if w1==w2==0:\n                ans+=2*k-1\n                k=0\n            else:\n                ans+=2*k\n                k=0 \n    print(ans)"
        },
        {
            "language": 3,
            "solution": "import sys, os, io\nI = io.BytesIO(os.read(0,os.fstat(0).st_size)).readline\n\nfor tc in range(1, 1 + int(I())):\n    n, k = map(int, I().split())\n    s = I().rstrip().decode(\"utf-8\")\n    if s.find('W') == -1:\n        ans = max(0,2 * k - 1)\n        print(ans)\n        continue\n    b = 0 # Ls at beginning\n    l = []\n    i = 0\n    while i < n:\n        if s[i] == 'W':\n            break\n        else:\n            b += 1\n        i += 1\n    a = 0\n    while i < n:\n        if s[i] == 'W':\n            if a > 0:\n                l.append(a)\n            a = 0\n        else:\n            a += 1\n        i += 1\n    e = a\n    l.sort()\n    ans = 0\n    for i in range(n):\n        if s[i] == 'W':\n            ans += 1\n            if i > 0:\n                if s[i-1] == 'W':\n                    ans += 1\n    for c in l:\n        if c <= k:\n            k -= c\n            ans += 2 * c + 1\n        else:\n            if k > 0:\n                ans += 2 * k\n                k = 0\n    ans += 2 * min(k, b+e)\n    print(ans)\n\n\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n,k = map(int,input().split(' '))\n    s = input()\n    if s[0]=='W':\n        score = 1 \n    else:\n        score = 0\n    for i in range(1,n):\n        if s[i]=='W':\n            if s[i-1]=='W':\n                score = score + 2 \n            else:\n                score = score + 1 \n    start = []\n    i = 0\n    while i<n:\n        if s[i]=='L':\n            j = i + 1 \n            a = [i]\n            while j<n and s[j]=='L':\n                j = j + 1 \n            i = j \n            a.append(i)\n            start.append(a)\n        else:\n            i = i + 1 \n    add_score = 0\n    f = 0\n    p = 0\n    if len(start)>0:\n        if start[0][0]==0:\n            p = start[0][1] - start[0][0] \n            s1 = start[1:len(start)]\n            f = 1 \n        else:\n            s1 = start\n            \n        g = 0\n        p1 = 0\n        if len(s1)!=0:\n            if s1[-1][1]==n:\n                p1 = s1[-1][1] - s1[-1][0]\n                s1 = s1[0:len(s1)-1]\n                g = 1\n            \n        for item in s1:\n            item.append(item[1]-item[0])\n        s1.sort(key=lambda x:x[2])\n        t = len(s1)\n        for item in s1[0:t]:\n            if k>=item[2]:\n                k = k - item[2]\n                add_score = add_score + 2*item[2] + 1\n            else:\n                add_score = add_score + 2*k\n                k = 0\n            if k==0:\n                break\n    \n            \n        \n        if f==1 or g==1 and k!=0:\n            add_score = add_score  + 2*min(p+p1,k)\n           \n        \n        \n        if n==1:\n            if k>=n:\n                print(1)\n            else:\n                if s=='W':\n                    print(1)\n                else:\n                    print(0)\n        else:\n            if len(set(s))==1 and s[0]=='L':\n                print(max(0,score+add_score-1))\n            else: \n                print(score+add_score)\n    else:\n        print(score)"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.ArrayList;\nimport java.util.Comparator;\nimport java.util.List;\nimport java.util.StringTokenizer;\n\npublic class B {\n    private FastScanner in;\n    private PrintWriter out;\n\n    public B(FastScanner in, PrintWriter out) {\n        this.in = in;\n        this.out = out;\n    }\n\n    public static void main(String[] args) {\n        try (\n                FastScanner in = new FastScanner(System.in);\n                PrintWriter out = new PrintWriter(System.out);\n        ) {\n            B solution = new B(in, out);\n            solution.solve();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n\n    public void solve() throws IOException {\n        int t = in.nextInt();\n        while (t-- > 0) {\n            int n = in.nextInt();\n            int k = in.nextInt();\n            String gameHistory = in.next();\n            List<Integer> loseSegments = new ArrayList<>();\n            int start = -1;\n            int res = 0;\n            int reserve = 0;\n            for (int i = 0; i < gameHistory.length(); i++) {\n                char c = gameHistory.charAt(i);\n                if (c == 'L') {\n                    if (start < 0) {\n                        start = i;\n                    }\n                    reserve++;\n                } else {\n                    if (start >= 0) {\n                        loseSegments.add(i - start);\n                        start = -1;\n                        res++;\n                    } else {\n                        res += 2;\n                    }\n                }\n            }\n            if (start > -1) {\n                loseSegments.add(gameHistory.length() - start);\n            }\n            start = 0;\n            int end = loseSegments.size();\n            if (gameHistory.charAt(0) == 'L') {\n                start++;\n            } else {\n                res--;\n            }\n            if (gameHistory.charAt(gameHistory.length() - 1) == 'L') {\n                end--;\n            }\n            if (start < end) {\n                List<Integer> toKill = loseSegments.subList(start, end);\n                toKill.sort(Comparator.naturalOrder());\n                for (int segment : toKill) {\n                    if (segment > k) {\n                        break;\n                    }\n                    k -= segment;\n                    res++;\n                    res += segment * 2;\n                    reserve -= segment;\n                }\n            }\n            if (reserve == n && k > 0) {\n                res--;\n            }\n            res += Math.min(k, reserve) * 2;\n            out.println(res);\n        }\n    }\n\n\n    public static class FastScanner implements Closeable {\n        BufferedReader bufferedReader;\n        StringTokenizer stringTokenizer;\n\n        public FastScanner(InputStream inputStream) {\n            this.bufferedReader = new BufferedReader(new InputStreamReader(inputStream));\n        }\n\n        public FastScanner(File file) throws FileNotFoundException {\n            this(new FileInputStream(file));\n        }\n\n        public String next() throws IOException {\n            while (stringTokenizer == null || !stringTokenizer.hasMoreTokens()) {\n                String line = bufferedReader.readLine();\n                if (line == null) {\n                    throw new EOFException(\"End of input stream is reached.\");\n                }\n                stringTokenizer = new StringTokenizer(line);\n            }\n            return stringTokenizer.nextToken();\n        }\n\n        public String nextLine() throws IOException {\n            stringTokenizer = null;\n            return bufferedReader.readLine();\n        }\n\n        public int nextInt() throws IOException {\n            return Integer.parseInt(next());\n        }\n\n        public long nextLong() throws IOException {\n            return Long.parseLong(next());\n        }\n\n        public double nextDouble() throws IOException {\n            return Double.parseDouble(next());\n        }\n\n        public int[] nextIntArray(int n) throws IOException {\n            int[] res = new int[n];\n            for (int i = 0; i < n; i++) {\n                res[i] = nextInt();\n            }\n            return res;\n        }\n\n        public List<Integer> nextIntList(int n) throws IOException {\n            List<Integer> res = new ArrayList<>(n);\n            for (int i = 0; i < n; i++) {\n                res.add(nextInt());\n            }\n            return res;\n        }\n\n        @Override\n        public void close() throws IOException {\n            bufferedReader.close();\n        }\n    }\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class B {\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        StringTokenizer st = new StringTokenizer(br.readLine());\n        int T = Integer.parseInt(st.nextToken());\n        \n        for(int t = 0; t < T; t++){\n            st = new StringTokenizer(br.readLine());\n            int N = Integer.parseInt(st.nextToken());\n            int K = Integer.parseInt(st.nextToken());\n            String S = br.readLine();\n            \n            int score = 0;\n            for(int i = 0; i < N; i++){\n                if(S.charAt(i) == 'W'){\n                    if(i == 0 || S.charAt(i-1) == 'L')\n                        score++;\n                    else\n                        score += 2;\n                }\n            }\n            \n            int pre = 0;\n            while(pre < N && S.charAt(pre) == 'L')\n                pre++;\n            \n            int suf = 0;\n            while(suf < N && S.charAt(N-suf-1) == 'L')\n                suf++;\n            \n            if(pre == N && suf == N){\n                System.out.println(Math.max(0, 2*K-1)); continue;\n            }\n            \n            ArrayList<Integer> lengths = new ArrayList<>();\n            int len = 0;\n            for(int i = pre; i < N-suf; i++){\n                if(S.charAt(i) == 'W'){\n                    if(len != 0)\n                        lengths.add(len);\n                    len = 0;\n                } else len++;\n            }\n            \n            Collections.sort(lengths);\n            \n            for(int x : lengths){\n                if(K >= x){\n                    score += 2*x+1;\n                    K -= x;\n                } else {\n                    score += 2*K;\n                    K = 0;\n                }\n            }\n            \n            if(K > 0 && pre > 0){\n                int temp = Math.min(K, pre);\n                score += 2 * temp;\n                K -= temp;\n            }\n            \n            if(K > 0 && suf > 0){\n                int temp = Math.min(K, suf);\n                score += 2 * temp;\n                K -= temp;\n            }\n            \n            System.out.println(score);\n        }\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  int t;\n  cin >> t;\n  while (t--) {\n    int n, k;\n    string s;\n    cin >> n >> k >> s;\n    int loss = 0, prev = -1, score = 0;\n    vector<int> gaps;\n    int gap = 0;\n    for (int i = 0; i < n; i++) {\n      if (s[i] == 'L') {\n        gap++;\n        loss++;\n      } else if (s[i] == 'W') {\n        score++;\n        if (i && s[i - 1] == 'W') {\n          score++;\n        }\n        if (gap && prev >= 0) {\n          gaps.push_back(gap);\n        }\n        gap = 0;\n        prev = i;\n      }\n    }\n    sort(gaps.begin(), gaps.end());\n    k = min(k, loss);\n    for (int i = 0; i < gaps.size() && k - gaps[i] >= 0; i++) {\n      k -= gaps[i];\n      score += 2 * gaps[i] + 1;\n    }\n    score += 2 * k;\n    if (loss == n && k > 0) {\n      score--;\n    }\n    cout << score << '\\n';\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "def calc(p,n):\n    score = p[0]\n    for i in range(1, n):\n        if (p[i] and p[i - 1]):\n            score += 2\n        elif (p[i]):\n            score += 1\n    return score\nfor _ in range(int(input())):\n    n,k = map(int,input().split())\n    p = [1  if i==\"W\" else 0 for i in input()]\n    if(all(i==0 for i in p)):\n        if(k>=n):\n            print(max(2*n-1,0))\n        else:\n            print(max(0,2*k-1))\n        continue\n    if(k==0):\n        print(calc(p,n))\n        continue\n    ord,cs = [],[]\n    ans = 0\n    i = 0\n    while(i<n):\n        l, r = i, i\n        if(p[i]):\n            while(r+1<n and p[r+1]):\n                r+=1\n            ans += (r-l)*2+1\n            i = r+1\n            continue\n        while (r + 1 < n and p[r + 1]==0):\n            r += 1\n        if(l!=0 and r!=n-1):\n            ord.append(r-l+1)\n        else:\n            cs.append(r-l+1)\n        i=r+1\n    ord.sort()\n    cs.sort()\n    ok = True\n    for i in ord:\n        if(k==0):\n            print(ans)\n            ok = False\n            break\n        if(k>=i):\n            ans += 2*i+1\n            k-=i\n        else:\n            ans+=2*k\n            print(ans)\n            ok = False\n            break\n    if(not ok):\n        continue\n    for i in cs:\n        if (k == 0):\n            print(ans)\n            ok = False\n            break\n        if (k >= i):\n            ans += 2 * i\n            k -= i\n        else:\n            ans += 2 * k\n            print(ans)\n            ok = False\n            break\n    if (not ok):\n        continue\n    print(ans)\n\n\n\n\n\n\n\n"
        },
        {
            "language": 4,
            "solution": "\n\nimport java.util.*;\nimport java.util.stream.Collectors;\n\npublic class B1427 {\n    private final static Scanner scanner = new Scanner(System.in);\n\n    private static int size;\n    private static int times;\n\n    public static void main(String[] args) {\n        int groups = scanner.nextInt();\n        for (int i = 0; i < groups; i++) {\n            inner();\n        }\n    }\n\n    private static void inner(){\n        size = scanner.nextInt();\n        times = scanner.nextInt();\n        String result = scanner.next();\n        char[] game = new char[size];\n        for (int i = 0; i < size; i++) {\n            game[i] = result.charAt(i);\n        }\n        math(game);\n    }\n\n    private static void math(char[] game){\n        if (times > 0){\n            work_WLW(game);     //\u7ed9\u5f62\u5982WLL..n..LLW\u7684\u6539\u503c\n        }\n        if (times > 0){\n            work_WLL(game);     //\u7ed9\u5f62\u5982WWWWLLLL\u7684\u6539\u503c\n        }\n        if (times > 0){\n            work_LLW(game);     //\u7ed9\u5f62\u5982LLLLWWWW\u7684\u6539\u503c\n        }\n        if (times > 0){\n            work_LLL(game);     //\u7ed9\u5f62\u5982LLLLLLLL\u7684\u6539\u503c\n        }\n        //\u8f93\u51fa\n        int count = 0;\n        for (int i = size-1; i > 0; i--) {\n            if (game[i] == 'W' && game[i-1] == 'W'){\n                count += 2;\n            }else if (game[i] == 'W' && game[i-1] == 'L'){\n                count += 1;\n            }\n        }\n        if (game[0] == 'W'){\n            count += 1;\n        }\n        System.out.println(count);\n    }\n\n    private static void work_WLW(char[] game){\n        int distence;\n        List<Flag>  flags = new ArrayList<>();\n        for (int  a = 0; a < size-1; a++) {\n            if (game[a] == 'W' && game[a+1]== 'L'){\n                distence = 0;\n                for (int i = a+1; i < size-1; i++) {\n                    if (game[i] == 'L' && game[i+1] == 'L'){\n                        distence += 1;\n                    }else if (game[i] == 'L' && game[i+1] == 'W'){\n                        distence += 1;\n                        flags.add(new Flag(a+1, distence));\n                        //\u4ece\u6570\u7ec4\u5f53\u524d\u4f4d\u7f6e\u7ee7\u7eed\u904d\u5386,\u964d\u4f4e\u590d\u6742\u5ea6\n                        a = i;\n                        break;\n                    }\n                }\n            }\n        }\n        flags = flags.stream().sorted(Comparator.comparing(Flag::getDistence)).collect(Collectors.toList());\n        if (!flags.isEmpty()){\n            for (Flag flag:flags){\n                for (int i = flag.getPoint(); i < flag.getPoint()+flag.getDistence(); i++) {\n                    if (game[i] == 'L') {\n                        game[i] = 'W';\n                        if (--times == 0) return;\n                    }\n                }\n            }\n        }\n    }\n    private static void work_WLL(char[] game){\n        int fountPoint = -1;\n        for (int i = 0; i < size-1; i++) {\n            if (game[i] == 'L' && game[i+1] == 'W'){\n                fountPoint = i;\n                break;\n            }\n        }\n        if (fountPoint != -1){\n            for (int i = fountPoint; i >=0 ; i--) {\n                if (game[i] == 'L'){\n                    game[i] = 'W';\n                    if (--times == 0) return;\n                }\n            }\n        }\n    }\n    private static void work_LLW(char[] game){\n        int backPoint = -1;\n        for (int i = 1; i < size; i++) {\n            if (game[i] == 'L' && game[i-1] == 'W'){\n                backPoint = i;\n                break;\n            }\n        }\n        if (backPoint != -1){\n            for (int i = backPoint; i <size ; i++) {\n                if (game[i] == 'L'){\n                    game[i] = 'W';\n                    if (--times == 0) return;\n                }\n            }\n        }\n    }\n    private static void work_LLL(char[] game){\n        for (int i = 0; i < size; i++) {\n            if (game[i] == 'L'){\n                game[i] = 'W';\n                if (--times == 0) return;\n            }\n        }\n    }\n}\n\nclass Flag {\n    private int point;\n    private int distence;\n\n    public Flag(int point , int distence) {\n        this.point = point;\n        this.distence = distence;\n    }\n\n    public int getPoint() {\n        return point;\n    }\n    public int getDistence() {\n        return distence;\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "for i in range(int(input())):\n    n,k = map(int, input().split())\n    lst = input()\n    count = 0; last = -1\n    ans = []\n    for i in range(len(lst)):\n        if lst[i] == 'L':\n            continue\n        count += 1\n        if (last != -1 and last != i-1):\n            ans += [i - last - 1]\n        last = i\n    ans.sort()\n    mx = len(ans) + 1\n    for i in range(len(ans)):\n        if k >= ans[i]:\n            count += ans[i]\n            k -= ans[i]\n            mx -= 1\n    print(max(0,min(2*n-1,(count+k)*2 -mx)))\n"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nfor _ in range(t):\n    n,k=map(int,input().split())\n    s=input()\n    if 'W' not in s:\n        ans = min(n,k)*2-1\n        print(max(ans,0))\n    else:\n        extra=0\n        i=0\n        while i<n and s[i]=='L':\n            i+=1\n        extra=i\n        j=n-1\n        while j>=0 and s[j]=='L':\n            j-=1\n            extra+=1\n        c=[]\n        while i<=j:\n            if s[i]=='W':\n                i+=1\n            else:\n                m=0\n                while i<=j and s[i]=='L':\n                    m+=1\n                    i+=1\n                c.append(m)\n        c.sort()\n        ans=0\n        i=0\n        while i<n:\n            if s[i]=='W':\n                ans+=1\n                i+=1\n                while i<n and s[i]=='W':\n                    i+=1\n                    ans+=2\n            else:\n                i+=1\n        for j in c:\n            if k>=j:\n                ans+=j*2+1\n                k-=j\n            else:\n                ans+=k*2\n                k=0\n                break\n        ans+=min(k,extra)*2\n        print(ans)\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor _ in range(t):\n    n, k = map(int, input().split())\n    s = input()\n    s = s.replace('WL', 'W L').replace('LW', 'L W')\n    s = s.split()\n\n    ls = [len(li) for li in s if li[0] == 'L']\n    wstr = 0\n    for si in s:\n        wstr+=(si[0]=='W')\n\n    wins = n-sum(ls)\n    if wins+k >= n:\n        print(n*2-1)\n        continue\n    if not wins:###\n        if k==0:print(k)\n        else:print(2*k-1)\n        continue\n    wins += k\n    if s[0][0] == 'L':\n        ls[0] = 1e10\n    if s[-1][0] == 'L':\n        ls[-1] = 1e10\n    ls.sort()\n\n    for li in ls:\n        if li > k:\n            break\n        wstr -= 1\n        k -= li\n    print(wins*2-wstr)\n"
        },
        {
            "language": 3,
            "solution": "# by the authority of GOD     author: manhar singh sachdev #\n\nimport os,sys\nfrom io import BytesIO, IOBase\n\ndef main():\n    for _ in range(int(input())):\n        n,k = map(int,input().split())\n        s = input().strip()\n        if n == 1:\n            if s[0] == \"W\" or k:\n                print(1)\n            else:\n                print(0)\n            continue\n        curr = int(s[0]=='W')\n        for i in range(1,n):\n            if s[i]=='W':\n                curr += 1+int(s[i-1]=='W')\n        fl,cou = 0,0\n        loss = []\n        le = 0\n        for i in range(n):\n            if s[i]=='W':\n                fl = 1\n                if cou:\n                    loss.append(cou)\n                    cou = 0\n            elif fl:\n                cou += 1\n            else:\n                le += 1\n        if le == n:\n            print(max(0,2*min(n,k)-1))\n            continue\n        re = cou\n        loss.sort()\n        i = 0\n        while i != len(loss):\n            if k >= loss[i]:\n                k -= loss[i]\n                curr += 2*loss[i]+1\n            elif k < loss[i]:\n                curr += 2*k\n                k = 0\n                break\n            i += 1\n        curr += min(re+le,k)*2\n        print(curr)\n\n#Fast IO Region\nBUFSIZE = 8192\nclass FastIO(IOBase):\n    newlines = 0\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\nif __name__ == '__main__':\n    main()"
        },
        {
            "language": 3,
            "solution": "for _ in range (int(input())):\n    n,k=map(int,input().split())\n    a=input()\n    lc=a.count('L')\n    z=[]\n    curr=0\n    for i in range (n):\n        if a[i]=='L':\n            curr+=1\n        else:\n            if curr>0:\n                z.append(curr)\n            curr=0\n    ini=[]\n    if a[0]=='L' and len(z)>0:\n        ini.append(z[0])\n        z=z[1:]\n    if curr>0:\n        ini.append(curr)\n    z.sort()\n    ini.sort()\n    res=0\n    s=0\n    i=0\n    while i<len(z):\n        if s+z[i]<=k:\n            res+=2*z[i]+1\n            s+=z[i]\n        else:\n            break\n        i+=1\n    if s<k and i!=len(z):\n        res+=(k-s)*2\n        s=k\n    if s<k and len(ini)>0:\n        if s+ini[0]<=k:\n            s+=ini[0]\n            res+=2*ini[0]\n            if lc==n:\n                res-=1\n        else:\n            res+=(k-s)*2\n            if lc==n:\n                res-=1\n            s=k\n        if len(ini)>1:\n            if s+ini[1]<=k:\n                s+=ini[1]\n                res+=2*ini[1]\n            else:\n                res+=(k-s)*2\n                s=k\n    if a[0]=='W':\n        res+=1\n    for i in range (1,n):\n        if a[i]=='W':\n            res+=1\n            if a[i-1]=='W':\n                res+=1\n    print(res)"
        },
        {
            "language": 3,
            "solution": "#!/usr/bin/python3.6\n# -*- coding: utf-8 -*-\n# @Time    : 2020/10/21 11:54 AM\n# @Author  : Songtao Li\nimport re\n\n\ndef cal_base_score(input_string):\n    W_list = re.findall(\"W+\", input_string)\n    score = sum([2 * (len(w) - 1) + 1 for w in W_list])\n\n    return score\n\n\nif __name__ == \"__main__\":\n    total_samples = int(input())\n\n    for i in range(total_samples):\n\n        length, modify = map(int, input().split())\n        string = input()\n        w_count = string.count(\"W\")\n        l_count = length - w_count\n        base_score = cal_base_score(string)\n\n        if \"W\" not in string:\n            print(max(0, 2 * modify - 1))\n\n        else:\n            start = string.find(\"W\")\n            end = string.rfind(\"W\")\n            if start == end:\n                s = \"W\"\n            else:\n                s = string[start:end]\n            stack = sorted(re.findall(\"L+\", s), reverse=True)\n            while modify > 0 and len(stack) > 0:\n                seg = stack.pop()\n                modify -= 1\n                if seg == \"L\":\n                    base_score += 3\n                else:\n                    base_score += 2\n                    stack.append(seg.replace(\"L\", \"\", 1))\n            first_l_seg = string[:start]\n            last_l_seg = string[end:]\n\n            if modify > 0:\n                for _ in range(len(first_l_seg) + len(last_l_seg)):\n                    base_score += 2\n                    modify -= 1\n                    if modify <= 0:\n                        break\n            base_score = min(base_score, 2*length-1)\n            print(base_score)\n\n\t\t \t  \t\t\t\t   \t\t\t\t\t \t\t  \t\t"
        },
        {
            "language": 3,
            "solution": "from collections import deque\nt=int(input())\nwhile(t):\n  n,k=map(int,input().split())\n  s=input()\n  for x in range(n):\n    if s[x]=='W':\n      break\n  m=x\n  u=0\n  d=deque()\n  for y in range(x,n):\n    if(s[y]=='L'):\n      u+=1\n    if s[y]=='W' and u>0:\n      d.append(u)\n      u=0\n  b=u\n  l=len(d)\n  d=sorted(d)\n  score=0\n  wins=0\n  for x in range(n):\n    if s[x]=='W':\n      wins+=1\n      if(x>0 and s[x-1]=='W'):\n        score+=2\n      else:\n        score+=1\n#  print(d)\n  for x in range(l):\n    if(k>=d[x]):\n      score=score+d[x]*2+1\n      k-=d[x]\n    elif k>0 and k<d[x]:\n      score=score+k*2\n      k=0\n#  print(score)\n # print(b,m)\n  if k>0:\n    if wins==0:\n      score=score+(k-1)*2+1\n    elif m+b<=k:\n      score=score+(m+b)*2\n    elif m+b>k :\n      score=score+k*2\n  print(score)\n  t-=1"
        },
        {
            "language": 3,
            "solution": "class Streak:\n    def __init__(self, start_ind, end_ind):\n        self.start_ind = start_ind\n        self.end_ind = end_ind\n\nclass StreakNbors:\n    def __init__(self, streak_a, streak_b):\n        self.streak_a = streak_a\n        self.streak_b = streak_b\n\n    def get_gap(self):\n        return (self.streak_b.start_ind - self.streak_a.end_ind) - 1\n\n    def close_gap(self):\n        self.streak_a.end_ind += 1\n\nt = int(input())\nfor it in range(0, t):\n    n, k = tuple(list(map(int, input().split(' '))))\n    results = [char for char in input()]\n\n    if n == 1:\n        if k >= 1:\n            results[0] = 'W'\n    else:\n        streak_list = []\n        current_streak = None\n        for i in range(0, len(results)):\n            if results[i] == 'W':\n                if i == 0 or results[i - 1] == 'L':\n                    current_streak = Streak(i, i)\n                    streak_list.append(current_streak)\n                else:\n                    current_streak.end_ind = i\n\n        if streak_list:\n            streak_nbors_list = []\n            for i in range(0, len(streak_list) - 1):\n                streak_nbors_list.append(StreakNbors(streak_list[i], streak_list[i + 1]))\n\n            streak_nbors_list = sorted(streak_nbors_list, key=lambda streak_nbors: streak_nbors.get_gap())\n\n            streak_nbors_ind = 0\n            changes = 0\n            while changes < k and streak_nbors_ind < len(streak_nbors_list):\n                current_streak_nbors = streak_nbors_list[streak_nbors_ind]\n                if current_streak_nbors.get_gap() > 0:\n                    current_streak_nbors.close_gap()\n                    changes += 1\n                else:\n                    streak_nbors_ind += 1\n\n            for i in range(0, len(streak_nbors_list)):\n                current_streak_nbors = streak_nbors_list[i]\n                streak_a_start_ind = current_streak_nbors.streak_a.start_ind\n                streak_a_end_ind = current_streak_nbors.streak_a.end_ind\n                for j in range(streak_a_start_ind, streak_a_end_ind + 1):\n                    results[j] = 'W'\n            \n                streak_b_start_ind = current_streak_nbors.streak_b.start_ind\n                streak_b_end_ind = current_streak_nbors.streak_b.end_ind\n                for j in range(streak_b_start_ind, streak_b_end_ind + 1):\n                    results[j] = 'W'\n        \n            min_streak_ind = 200001\n            max_streak_ind = -1\n\n            for i in range(0, len(results)):\n                if results[i] == 'W':\n                    min_streak_ind = min(i, min_streak_ind)\n                    max_streak_ind = max(i, min_streak_ind)\n\n            while changes < k:\n                if min_streak_ind > 0:\n                    min_streak_ind -= 1\n                    results[min_streak_ind] = 'W'\n                    changes +=1\n                elif max_streak_ind < len(results) - 1:\n                    max_streak_ind += 1\n                    results[max_streak_ind] = 'W'\n                    changes += 1\n                else:\n                    break\n        else:\n            for i in range(0, k):\n                results[i] = 'W'\n\n    score = 0\n    for i in range(0, n):\n        if results[i] == 'W':\n            score += 1\n            if i > 0 and results[i - 1] == 'W':\n                score += 1\n    \n    print(score)\n\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\nimport java.math.*;\n \npublic class Main {\n    static PrintWriter out;\n    static Reader in;\n    public static void main(String[] args) throws IOException {\n        //out = new PrintWriter(new File(\"out.txt\"));\n        //PrintWriter out = new PrintWriter(System.out);\n        //in = new Reader(new FileInputStream(\"in.txt\"));\n        //Reader in = new Reader();\n        input_output();\n        Main solver = new Main();\n        solver.solve();\n        out.flush();\n        out.close();\n \n    }\n \n    static long INF = (long)1e16;\n    static int maxn = (int)1e6+5;\n    static int mod= 998_244_353;\n    static int n, m, q, k, t;\n\n    void solve() throws IOException{\n        t = in.nextInt();\n\n        while (t --> 0) {\n            n = in.nextInt();\n            k = in.nextInt();\n\n            String s = in.next();\n            int score = 0, cnt = 0;\n            if (s.charAt(0) == 'W') {score++;cnt++;}\n            for (int i = 1; i < n; i++) if (s.charAt(i) == 'W') {\n                if (s.charAt(i-1) == 'W') score+=2; \n                else score+=1;\n                cnt++;\n            }\n\n            if (cnt == 0) {\n                while (k --> 0) {\n                    if (cnt == 0) {\n                        score++;\n                    } else {\n                        score+=2;\n                    }\n                    cnt++;\n                    if (cnt == n) break;\n                }\n            } else {\n                int max = Math.min(n-cnt, k);\n                ArrayList<Integer> space = new ArrayList<>();\n\n                int last = -1;\n                for (int i = 0; i < n; i++) {\n                    if (s.charAt(i) == 'W') {\n                        if (last != -1 && last < i-1) space.add(i-last-1);\n                        last = i;\n                    }\n                }\n                Collections.sort(space);\n                for (int i = 0; i < space.size(); i++) {\n                    if (space.get(i) <= max) {\n                        score += space.get(i)*2+1;\n                        max -= space.get(i);\n                    } else break;\n                }\n\n                score += 2*max;\n            }\n            out.println(score);\n        }\n    }\n\n    //<>\n\n    static class Reader {\n \n        private InputStream mIs;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n    \n        public Reader() {\n            this(System.in);\n        }\n    \n        public Reader(InputStream is) {\n            mIs = is;\n        }\n    \n        public int read() {\n            if (numChars == -1) {\n                throw new InputMismatchException();\n    \n        }\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = mIs.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (numChars <= 0) {\n                    return -1;\n                }\n            }\n            return buf[curChar++];\n        }\n    \n        public String nextLine() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            StringBuilder res = new StringBuilder();\n            do {\n                res.appendCodePoint(c);\n                c = read();\n            } while (!isEndOfLine(c));\n            return res.toString();\n        }\n    \n        public String next() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            StringBuilder res = new StringBuilder();\n            do {\n                res.appendCodePoint(c);\n                c = read();\n            } while (!isSpaceChar(c));\n            return res.toString();\n        }\n    \n        double nextDouble()\n        {\n            return Double.parseDouble(next());\n        }\n    \n        public long nextLong() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            long res = 0;\n            do {\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n    \n        public int nextInt() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do {\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n    \n        public boolean isSpaceChar(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n    \n        public boolean isEndOfLine(int c) {\n            return c == '\\n' || c == '\\r' || c == -1;\n        }\n \n    }\n    static void input_output() throws IOException {\n        File f = new File(\"in.txt\");\n        if(f.exists() && !f.isDirectory()) { \n            in = new Reader(new FileInputStream(\"in.txt\"));\n        } else in = new Reader();\n        f = new File(\"out.txt\");\n        if(f.exists() && !f.isDirectory()) {\n            out = new PrintWriter(new File(\"out.txt\"));\n        } else out = new PrintWriter(System.out);\n    }\n}"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor _ in range(t):\n    n, k = map(int, input().split())\n    s = str(input())\n    a = 0\n    b = 0\n    kek = []\n    fl = 0\n    su = 0\n    rs = 0\n    buf = 1e10\n    buf1 = 1e10\n    for i in range(len(s)):\n        if s[i] == 'W':\n            if a > 0:\n                su += a\n                if fl == 0:\n                    buf1 = a\n                else:\n                    kek.append(a)\n                a = 0\n            fl = 1\n            b += 1\n        else:\n            if b > 0:\n                rs += 2*(b-1) + 1\n                b = 0\n            a += 1\n    if a > 0:\n        su += a\n        if fl == 0:\n            buf1 = a\n        else:\n            buf = a\n        a = 0\n    if b > 0:\n        rs += 2 * (b - 1) + 1\n        b = 0\n    if su <= k or rs == n*2 - 1:\n        print(n*2 - 1)\n    else:\n        kek.sort()\n        #print(kek, cnt)\n        k1 = k\n        for el in kek:\n            if k1 >= el:\n                rs += el*2 + 1\n                k1 -= el\n            else:\n                rs += k1*2\n                k1 = 0\n        if k1 > 0 and buf < 1e10:\n            if k1 >= buf:\n                k1 -= buf\n                rs += buf * 2\n            else:\n                rs += k1 * 2\n                k1 = 0\n        if k1 > 0:\n            if k1 >= buf1:\n                k1 -= buf1\n                rs += buf1*2 - (not fl)\n            else:\n                rs += k1 * 2 - (not fl)\n                k1 = 0\n        print(rs)\n\n\n#1\n#5 4\n#LLLLL\n\n#1\n#5 2\n#LLWLL"
        },
        {
            "language": 3,
            "solution": "\nfor _ in range(int(input())):\n    n,k = map(int,input().split())\n    ik = k\n    sg = input().strip()\n    gaps = []\n    l = len(sg)\n    wins = 0\n    win_streaks = 0\n    i = 0\n    lcnt = 0\n    temp = 0\n    while i < l:\n        if sg[i] == 'W':\n            break\n        i += 1\n        temp += 1\n    filled_gaps = 0\n    while i < l:\n        if sg[i] == 'W':\n            win_streaks += 1\n            while i < l and sg[i] == 'W':\n                wins += 1\n                i += 1\n        if i < l and sg[i] == 'L':\n            lcnt = 0\n            while i < l and sg[i] == 'L':\n                lcnt += 1\n                i += 1\n            else:\n                if i < l and sg[i] == 'W':\n                    gaps.append(lcnt)\n                else:\n                    temp += lcnt\n    \n    gaps.sort()\n    gap_l = len(gaps)\n    j = 0\n    while  k > 0 and j < gap_l:\n        if gaps[j]  <= k:\n            k -= gaps[j]\n            filled_gaps += 1\n        j += 1\n    if k > 0 and temp > 0 and wins == 0:\n        win_streaks += 1\n    \n    score = 2*(min(wins + ik , l)) - win_streaks + filled_gaps\n    print(score)"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n\tn, k = [int(i) for i in input().split()]\n\ts = input()\n\tws = s.count(\"W\")\n\tif k + ws >= n:\n\t\tprint(2*n-1)\n\t\n\telif k == 0 and ws==0:\n\t\tprint(0)\n\telse:\n\t\tchains = []\n\t\tchain = 0\n\t\tstreak = False\n\t\tfor char in s.strip(\"L\"):\n\t\t\tif char == \"W\" and chain != 0:\n\t\t\t\tchains.append(chain)\n\t\t\t\tchain = 0\n\t\t\telif char == \"L\":\n\t\t\t\tchain += 1\n\t\tchains.sort()\n\t\ti = 0\n\t\ttotal = 0\n\t\twhile chains and total+chains[i] <= k:\n\t\t\ttotal += chains[i]\n\t\t\ti += 1\n\t\t\tif i >= len(chains):\n\t\t\t\tbreak\n\t\n\t\tprint(2*(k+ws)-len(chains)-1+i)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\ntemplate <class T>\ninline void rd(T &x) {\n  char c = getchar(), f = 0;\n  x = 0;\n  while (!isdigit(c)) f = (c == '-'), c = getchar();\n  while (isdigit(c)) x = x * 10 + c - '0', c = getchar();\n  x = f ? -x : x;\n}\nconst int MAXN = 2e5 + 7;\nint n, k;\nchar s[MAXN];\nvoid solve() {\n  rd(n);\n  rd(k);\n  scanf(\"%s\", s + 1);\n  int ans = 0, c = 0;\n  for (int i = (1); i <= (n); ++i) ans += 2 * (s[i] == 'W'), c += s[i] == 'L';\n  int cc = 0;\n  std::vector<int> a;\n  k = std::min(k, c);\n  ans += k * 2;\n  for (int i = 1; i <= n;) {\n    int j = i;\n    while (s[i] == s[j] && j <= n) j++;\n    if (s[i] == 'L' && i != 1 && j != n + 1) a.push_back(j - i);\n    if (s[i] == 'W') cc++;\n    i = j;\n  }\n  if (!cc && k) cc++;\n  std::sort((a).begin(), (a).end());\n  for (auto v : a) {\n    if (k < v)\n      break;\n    else\n      k -= v, cc--;\n  }\n  printf(\"%d\\n\", ans - cc);\n}\nint main() {\n  int T;\n  rd(T);\n  while (T--) solve();\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\n\n'''\n\n'''\n\ndef get_close(n, i, res):\n    while i < n and res[i] == \"L\":\n        i += 1\n    return i - 1\n\ndef calc(n, res):\n    count = 0\n    for i in range(n):\n        if i > 0 and res[i-1] == res[i] == \"W\":\n            count += 2\n        elif res[i] == \"W\":\n            count += 1\n    return count\n\ndef solve(n, k, res):\n    gaps = []\n    rem = []\n\n    i = 0\n    while i < n:\n        if res[i] == \"L\":\n            op, cl = i,  get_close(n, i+1, res)\n            gaps.append((cl-op+1, op, cl))\n            i = cl + 1\n            \n            if op == 0 or cl == n-1:\n                rem.append(gaps.pop())\n        else:\n            i += 1\n    \n    gaps.sort()\n    for gap, start, stop in gaps:\n        if not k:\n            break\n        for i in range(start, stop+1):\n            if k:\n                res[i] = \"W\"\n                k -= 1\n            else:\n                break\n    \n    for _, start, stop in rem:\n        if start == 0:\n            g = reversed(range(start, stop+1))\n        else:\n            g = range(start, stop+1)\n        \n        for i in g:\n            if k:\n                res[i] = \"W\"\n                k -= 1\n            else:\n                break\n            \n    return calc(n, res)\n\n\nt = int(input())\nfor _ in range(t):\n    n, k = map(int, input().split())\n    res = list(input().rstrip())\n    print(solve(n, k, res))\n    #print(res)"
        },
        {
            "language": 3,
            "solution": "from collections import deque\nfor _ in range(int(input())):\n    n,k=map(int,input().split())\n    initialK=k\n    s=input()\n    gaps=[]\n    gapLen=0\n    if s[0]=='L':\n        w=0\n    else:\n        w=1\n    for i in range(1,len(s)):\n        if s[i]=='W':\n            w+=1\n            if gapLen!=0:\n                gaps.append(gapLen)\n                gapLen=0\n        else:\n            if s[i-1]=='W':\n                gapLen=1\n            else:\n                if gapLen!=0:\n                    gapLen+=1\n    if w+k>=n:\n        print(2*n-1)\n        continue\n    #print(gaps)\n    gaps=deque(sorted(gaps))\n    #print(gaps)\n    while len(gaps)>0 and k>=gaps[0]:\n        k-=gaps.popleft()\n    #print(k,w)\n    ans=2*(initialK+w)-1-len(gaps)\n    #print(ans,gaps)\n    print(max(0,ans))\n"
        },
        {
            "language": 3,
            "solution": "from itertools import groupby\nfor _ in range(int(input())):\n    n, k = map(int, input().split())\n    s = input()\n    if k >= s.count('L'):\n        print(n * 2 - 1)\n    else:\n        s = s.strip(\"L\")\n        group = []\n        for i, g in groupby(s):\n            if i == 'L':\n                group.append(len(list(g)))\n        group.sort()\n        i, m = 0, len(group)\n        r = k\n        while i < m and r >= group[i]:\n            r -= group[i]\n            i += 1\n        ans = (s.count('W') + k) * 2 - (m + 1 - i)\n        print(max(0, ans))\n            "
        },
        {
            "language": 3,
            "solution": "T = int(input())\nfor _ in range(T):\n    n, k = map(int, input().split())\n    s = input()\n    res = 0\n    gaps=[]\n    gap0=0\n    gap = 0\n    prev = False\n    f = True\n    for x in s:\n        if f:\n            if x == 'L':\n                gap0 += 1\n            else:\n                f = False\n                res = 1\n                prev = True\n        else:\n            if x == 'L':\n                gap += 1\n                prev = False\n            else:\n                res += 1\n                if prev:\n                    res += 1\n                else:\n                    gaps.append(gap)\n                    gap = 0\n                prev = True\n    if prev:\n        gapN = 0\n    else:\n        gapN = gap\n    gaps.sort()\n    nn = len(gaps)\n    i = 0\n    while i < nn and k >= gaps[i]:\n        res += 2*gaps[i] + 1\n        k -= gaps[i]\n        i += 1\n    if i < nn or k <= gap0 + gap:\n        res += 2*k\n    else:\n        res += (gap0+gap)*2\n    if gap0 == n and k>0:\n        res -= 1\n    print(res)\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor i in range(t):\n    n,k = list(map(int,input().split()))\n    s = input()\n    suml = 0\n    score = 0\n    lstl = []\n    count = 0\n    for j in range(n):\n        if(j == 0 and s[0] == \"W\"):\n            score += 1\n            continue\n        elif(s[j] == \"L\"):\n            score += 0\n        elif(s[j] == \"W\" and s[j-1] == \"W\"):\n            score += 2\n        elif(s[j] == \"W\" and s[j-1] == \"L\"):\n            score += 1\n    ##print(\"original\" , score)       \n    if( k == 0):\n        print(score)\n        continue\n    for j in range(n):\n        \n            \n        if(s[j] == \"W\" and count != 0):\n            lstl.append(count)\n            count = 0\n        elif(s[j]==\"L\"):\n            count += 1\n    if(count!=0):\n        lstl.append(count)\n    ##print(lstl)\n    laststreak = 0\n    firststreak = 0\n    if(s[n-1] == \"L\"):\n        laststreak = lstl[-1]\n    if(s[0] == \"L\"):\n        firststreak = lstl[0]\n                \n    for j in s:\n        if(j == \"L\"):\n            suml += 1\n    if(k >= suml):\n        print(1 + 2*(n-1))\n        continue\n    elif( suml == n):\n        print( 1 + (k-1)*2)\n    elif(k < suml):\n        if(s[0] == \"W\" and s[n-1] == \"W\"):\n            lstl.sort()\n            for q in range(len(lstl)):\n                if(k == 0):\n                    break\n                if(k >=lstl[q]):\n                    score += (2*(lstl[q]) + 1)\n                    k = k - lstl[q]\n                else:\n                    score += 2*(k)\n                    k = 0\n                    break\n        else:\n            if(s[0] == \"W\" and s[-1] == \"L\"):\n                lstl = lstl[0:len(lstl)-1]\n                lstl.sort()\n            elif(s[0] == \"L\" and s[-1] == \"W\"):\n                lstl = lstl[1:len(lstl)]\n                lstl.sort()\n            else:\n                    \n                lstl = lstl[1:len(lstl)-1]\n                lstl.sort()\n            \n            for q in range(len(lstl)):\n                if(k == 0):\n                    break\n                if(k >=lstl[q]):\n                    score += (2*(lstl[q]) + 1)\n                    k = k - lstl[q]\n                else:\n                    score += 2*(k)\n                    k = 0\n                    break\n            h = laststreak + firststreak\n            if(k!=0 and k <= h):\n                score += k*2\n        \n        print(score)\n        \n                    \n        \n            "
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\nimport static java.lang.Math.*;\nimport static java.util.Arrays.*;\n\npublic class cf1427b {\n\n    public static void main(String[] args) throws IOException {\n        int t = ri();\n        while (t --> 0) {\n            int n = rni(), k = ni();\n            char[] s = rcha();\n            Map<Integer, Integer> cnt = new TreeMap<>();\n            int twoper = 0, cur = 0, score = 0;\n            boolean nfirst = false;\n            for (int i = 0; i < n; ++i) {\n                if (s[i] == 'W') {\n                    if (nfirst) {\n                        cnt.put(cur, cnt.getOrDefault(cur, 0) + 1);\n                        twoper -= cur;\n                    }\n                    nfirst = true;\n                    cur = 0;\n                    ++score;\n                    if (i > 0 && s[i - 1] == 'W') {\n                        ++score;\n                    }\n                } else {\n                    ++twoper;\n                    ++cur;\n                }\n            }\n            if (!nfirst) {\n                prln(max(0, 2 * k - 1));\n                continue;\n            }\n            // prln(score);\n            // prln(cnt);\n            for (int key : cnt.keySet()) {\n                if (key == 0) {\n                    continue;\n                }\n                int m = min(k / key, cnt.get(key));\n                score += m * (key * 2 + 1);\n                k -= m * key;\n                if (m < cnt.get(key)) {\n                    score += k * 2;\n                    k = 0;\n                    break;\n                }\n                if (k == 0) {\n                    break;\n                }\n            }\n            if (k > 0) {\n                score += min(k, twoper) * 2;\n            }\n            prln(score);\n        }\n        close();\n    }\n\n    static BufferedReader __in = new BufferedReader(new InputStreamReader(System.in));\n    static PrintWriter __out = new PrintWriter(new OutputStreamWriter(System.out));\n    static StringTokenizer input;\n    static Random __rand = new Random();\n\n    // references\n    // IBIG = 1e9 + 7\n    // IMAX ~= 2e9\n    // LMAX ~= 9e18\n\n    // constants\n    static final int IBIG = 1000000007;\n    static final int IMAX = 2147483647;\n    static final int IMIN = -2147483648;\n    static final long LMAX = 9223372036854775807L;\n    static final long LMIN = -9223372036854775808L;\n    // math util\n    static int minof(int a, int b, int c) {return min(a, min(b, c));}\n    static int minof(int... x) {if (x.length == 1) return x[0]; if (x.length == 2) return min(x[0], x[1]); if (x.length == 3) return min(x[0], min(x[1], x[2])); int min = x[0]; for (int i = 1; i < x.length; ++i) if (x[i] < min) min = x[i]; return min;}\n    static long minof(long a, long b, long c) {return min(a, min(b, c));}\n    static long minof(long... x) {if (x.length == 1) return x[0]; if (x.length == 2) return min(x[0], x[1]); if (x.length == 3) return min(x[0], min(x[1], x[2])); long min = x[0]; for (int i = 1; i < x.length; ++i) if (x[i] < min) min = x[i]; return min;}\n    static int maxof(int a, int b, int c) {return max(a, max(b, c));}\n    static int maxof(int... x) {if (x.length == 1) return x[0]; if (x.length == 2) return max(x[0], x[1]); if (x.length == 3) return max(x[0], max(x[1], x[2])); int max = x[0]; for (int i = 1; i < x.length; ++i) if (x[i] > max) max = x[i]; return max;}\n    static long maxof(long a, long b, long c) {return max(a, max(b, c));}\n    static long maxof(long... x) {if (x.length == 1) return x[0]; if (x.length == 2) return max(x[0], x[1]); if (x.length == 3) return max(x[0], max(x[1], x[2])); long max = x[0]; for (int i = 1; i < x.length; ++i) if (x[i] > max) max = x[i]; return max;}\n    static int powi(int a, int b) {if (a == 0) return 0; int ans = 1; while (b > 0) {if ((b & 1) > 0) ans *= a; a *= a; b >>= 1;} return ans;}\n    static long powl(long a, int b) {if (a == 0) return 0; long ans = 1; while (b > 0) {if ((b & 1) > 0) ans *= a; a *= a; b >>= 1;} return ans;}\n    static int fli(double d) {return (int) d;}\n    static int cei(double d) {return (int) ceil(d);}\n    static long fll(double d) {return (long) d;}\n    static long cel(double d) {return (long) ceil(d);}\n    static int gcf(int a, int b) {return b == 0 ? a : gcf(b, a % b);}\n    static long gcf(long a, long b) {return b == 0 ? a : gcf(b, a % b);}\n    static int lcm(int a, int b) {return a * b / gcf(a, b);}\n    static long lcm(long a, long b) {return a * b / gcf(a, b);}\n    static int randInt(int min, int max) {return __rand.nextInt(max - min + 1) + min;}\n    static long mix(long x) {x += 0x9e3779b97f4a7c15L; x = (x ^ (x >> 30)) * 0xbf58476d1ce4e5b9L; x = (x ^ (x >> 27)) * 0x94d049bb133111ebL; return x ^ (x >> 31);}\n    // array util\n    static void reverse(int[] a) {for (int i = 0, n = a.length, half = n / 2; i < half; ++i) {int swap = a[i]; a[i] = a[n - i - 1]; a[n - i - 1] = swap;}}\n    static void reverse(long[] a) {for (int i = 0, n = a.length, half = n / 2; i < half; ++i) {long swap = a[i]; a[i] = a[n - i - 1]; a[n - i - 1] = swap;}}\n    static void reverse(double[] a) {for (int i = 0, n = a.length, half = n / 2; i < half; ++i) {double swap = a[i]; a[i] = a[n - i - 1]; a[n - i - 1] = swap;}}\n    static void reverse(char[] a) {for (int i = 0, n = a.length, half = n / 2; i < half; ++i) {char swap = a[i]; a[i] = a[n - i - 1]; a[n - i - 1] = swap;}}\n    static void shuffle(int[] a) {int n = a.length - 1; for (int i = 0; i < n; ++i) {int ind = randInt(i, n); int swap = a[i]; a[i] = a[ind]; a[ind] = swap;}}\n    static void shuffle(long[] a) {int n = a.length - 1; for (int i = 0; i < n; ++i) {int ind = randInt(i, n); long swap = a[i]; a[i] = a[ind]; a[ind] = swap;}}\n    static void shuffle(double[] a) {int n = a.length - 1; for (int i = 0; i < n; ++i) {int ind = randInt(i, n); double swap = a[i]; a[i] = a[ind]; a[ind] = swap;}}\n    static void rsort(int[] a) {shuffle(a); sort(a);}\n    static void rsort(long[] a) {shuffle(a); sort(a);}\n    static void rsort(double[] a) {shuffle(a); sort(a);}\n    static int[] copy(int[] a) {int[] ans = new int[a.length]; for (int i = 0; i < a.length; ++i) ans[i] = a[i]; return ans;}\n    static long[] copy(long[] a) {long[] ans = new long[a.length]; for (int i = 0; i < a.length; ++i) ans[i] = a[i]; return ans;}\n    static double[] copy(double[] a) {double[] ans = new double[a.length]; for (int i = 0; i < a.length; ++i) ans[i] = a[i]; return ans;}\n    static char[] copy(char[] a) {char[] ans = new char[a.length]; for (int i = 0; i < a.length; ++i) ans[i] = a[i]; return ans;}\n    // input\n    static void r() throws IOException {input = new StringTokenizer(rline());}\n    static int ri() throws IOException {return Integer.parseInt(rline());}\n    static long rl() throws IOException {return Long.parseLong(rline());}\n    static double rd() throws IOException {return Double.parseDouble(rline());}\n    static int[] ria(int n) throws IOException {int[] a = new int[n]; r(); for (int i = 0; i < n; ++i) a[i] = ni(); return a;}\n    static int[] riam1(int n) throws IOException {int[] a = new int[n]; r(); for (int i = 0; i < n; ++i) a[i] = ni() - 1; return a;}\n    static long[] rla(int n) throws IOException {long[] a = new long[n]; r(); for (int i = 0; i < n; ++i) a[i] = nl(); return a;}\n    static double[] rda(int n) throws IOException {double[] a = new double[n]; r(); for (int i = 0; i < n; ++i) a[i] = nd(); return a;}\n    static char[] rcha() throws IOException {return rline().toCharArray();}\n    static String rline() throws IOException {return __in.readLine();}\n    static String n() {return input.nextToken();}\n    static int rni() throws IOException {r(); return ni();}\n    static int ni() {return Integer.parseInt(n());}\n    static long rnl() throws IOException {r(); return nl();}\n    static long nl() {return Long.parseLong(n());}\n    static double rnd() throws IOException {r(); return nd();}\n    static double nd() {return Double.parseDouble(n());}\n    // output\n    static void pr(int i) {__out.print(i);}\n    static void prln(int i) {__out.println(i);}\n    static void pr(long l) {__out.print(l);}\n    static void prln(long l) {__out.println(l);}\n    static void pr(double d) {__out.print(d);}\n    static void prln(double d) {__out.println(d);}\n    static void pr(char c) {__out.print(c);}\n    static void prln(char c) {__out.println(c);}\n    static void pr(char[] s) {__out.print(new String(s));}\n    static void prln(char[] s) {__out.println(new String(s));}\n    static void pr(String s) {__out.print(s);}\n    static void prln(String s) {__out.println(s);}\n    static void pr(Object o) {__out.print(o);}\n    static void prln(Object o) {__out.println(o);}\n    static void prln() {__out.println();}\n    static void pryes() {prln(\"yes\");}\n    static void pry() {prln(\"Yes\");}\n    static void prY() {prln(\"YES\");}\n    static void prno() {prln(\"no\");}\n    static void prn() {prln(\"No\");}\n    static void prN() {prln(\"NO\");}\n    static boolean pryesno(boolean b) {prln(b ? \"yes\" : \"no\"); return b;};\n    static boolean pryn(boolean b) {prln(b ? \"Yes\" : \"No\"); return b;}\n    static boolean prYN(boolean b) {prln(b ? \"YES\" : \"NO\"); return b;}\n    static void prln(int... a) {for (int i = 0, len = a.length - 1; i < len; pr(a[i]), pr(' '), ++i); if (a.length > 0) prln(a[a.length - 1]); else prln();}\n    static void prln(long... a) {for (int i = 0, len = a.length - 1; i < len; pr(a[i]), pr(' '), ++i); if (a.length > 0) prln(a[a.length - 1]); else prln();}\n    static void prln(double... a) {for (int i = 0, len = a.length - 1; i < len; pr(a[i]), pr(' '), ++i); if (a.length > 0) prln(a[a.length - 1]); else prln();}\n    static <T> void prln(Collection<T> c) {int n = c.size() - 1; Iterator<T> iter = c.iterator(); for (int i = 0; i < n; pr(iter.next()), pr(' '), ++i); if (n >= 0) prln(iter.next()); else prln();}\n    static void h() {prln(\"hlfd\"); flush();}\n    static void flush() {__out.flush();}\n    static void close() {__out.close();}\n}"
        },
        {
            "language": 3,
            "solution": "import sys\n# from math import ceil\n # For getting input f  rom input.txt file \n# sys.stdin = open('input.txt', 'r')  \n  \n# Printing the Output to output.txt file \n# sys.stdout = open('output.txt', 'w') \nt=int(input())\nfor _ in range(t):\n    n,k=map(int,input().split())\n    s=input()\n    i=0\n    l=[]\n    el=0\n    while(i<n and s[i]==\"L\"):\n        i+=1\n        el+=1\n    j=n-1\n    \n    while(j>i and s[j]==\"L\"):\n        j-=1\n        el+=1\n    # print(i,j)\n    if i>j:\n        print(max(0,2*k-1))\n        continue\n    ans=0\n    while(i<=j):\n        c=0\n        while(i<=j and s[i]==\"W\"):\n            i+=1\n            c+=1\n        ans+=2*c-1\n        c=0\n        while(i<=j and s[i]==\"L\"):\n            i+=1\n            c+=1\n        if c!=0:\n            l.append(c)\n    l.sort()\n    i,le=0,len(l)\n    while(i<le and k>0):\n        if k>=l[i]:\n            ans+=(2*l[i]+1)\n        else:\n            ans+=(2*k)\n        k-=l[i]\n        i+=1\n    print(ans+2*max(0,min(k,el)))\n            \n    \n    "
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor _ in range(t):\n  n, k = [int(i) for i in input().split(\" \")]\n  s = input()\n  a = []\n  cur = 0\n  flag = False\n  b = []\n  w = 0\n  for i in range(n):\n    if s[i] == \"L\":\n      cur += 1\n    else:\n      w += 1\n      if cur > 0:\n        a.append(cur)\n        cur = 0\n  if cur > 0:\n    a.append(cur)\n  k = min(k, n-w)\n  # print(\"k\", k)\n  if s[0] == \"W\":\n    if s[-1] == \"W\":\n      b = a[:]\n    else:\n      b = a[:-1]\n  else:\n    if s[-1] == \"W\":\n      b = a[1:]\n    else:\n      b = a[1:-1]\n  # print(b)\n  b.sort()\n  score = 2*w - 1 - len(b)\n  if score < 0:\n    score = max(0,2*k-1)\n    print(score)\n    continue\n\n  # if s[-1] == \"W\":\n  #   score -= 1\n  # print(k, b, score)\n  for i in b:\n    if k >= i:\n      k -= i\n      score += 2*i + 1\n    else:\n      break\n  score += 2*k\n  print(score)"
        },
        {
            "language": 3,
            "solution": "ins=input\nfor _ in [0]*int(ins()):\n      n, k = map(int, ins().split())\n      s = ins()\n      c = s.count('W')\n      n = min(n, c+k)\n      a = sorted(map(len, filter(None, s.strip('L').split('W'))))\n      while a and c+a[0] <= n:\n             c += a.pop(0)\n      print((2 * n - len(a) or 1) - 1)\n\t  \t \t \t\t\t \t   \t  \t\t\t  \t\t \t\t \t"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class B1427 {\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tScanner sc = new Scanner(System.in);\n\t\tPrintWriter pw = new PrintWriter(System.out);\n\t\tint t = sc.nextInt();\n\t\twhile (t-- > 0) {\n\t\t\tint n = sc.nextInt();\n\t\t\tint k = sc.nextInt();\n\t\t\tchar[] arr = sc.next().toCharArray();\n\t\t\tint prevW = -1;\n\t\t\tArrayList<Integer> al = new ArrayList<Integer>();\n\t\t\tint cntW = 0;\n\t\t\tfor (int i = 0; i < arr.length; i++) {\n\t\t\t\tif (arr[i] == 'W') {\n\t\t\t\t\tcntW++;\n\t\t\t\t\tif (prevW != i - 1 && prevW != -1) {\n\t\t\t\t\t\tal.add(i - prevW - 1);\n\t\t\t\t\t}\n\t\t\t\t\tprevW = i;\n\t\t\t\t}\n\t\t\t}\n\t\t\tint ogk = k;\n\t\t\tint comps = al.size() + 1;\n\t\t\tCollections.sort(al);\n\t\t\tfor (int x : al) {\n\t\t\t\tif (k >= x) {\n\t\t\t\t\tk -= x;\n\t\t\t\t\tcomps--;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n//\t\t\tSystem.out.println(al);\n\t\t\tcntW = Math.min(cntW + ogk, arr.length);\n\t\t\tpw.println(Math.max(2 * cntW - comps, 0));\n\t\t}\n\t\tpw.close();\n\n\t}\n\n\tstatic class Scanner {\n\t\tBufferedReader br;\n\t\tStringTokenizer st;\n\n\t\tpublic Scanner(InputStream s) {\n\t\t\tbr = new BufferedReader(new InputStreamReader(s));\n\t\t}\n\n\t\tpublic Scanner(FileReader f) {\n\t\t\tbr = new BufferedReader(f);\n\t\t}\n\n\t\tpublic String next() throws IOException {\n\t\t\twhile (st == null || !st.hasMoreTokens())\n\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tpublic int nextInt() throws IOException {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tpublic long nextLong() throws IOException {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tpublic double nextDouble() throws IOException {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tpublic int[] nextIntArr(int n) throws IOException {\n\t\t\tint[] arr = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tarr[i] = Integer.parseInt(next());\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\n\t}\n\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\nimport java.util.PriorityQueue;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n\n        int t = sc.nextInt();\n        for (int tc = 0; tc < t; tc++) {\n            int n = sc.nextInt();\n            int k = sc.nextInt();\n\n            String s = sc.next();\n\n            System.out.println(solve(k, s));\n        }\n    }\n\n    private static int solve(int k, String s) {\n        /*\n        cnt(W) * 2 - 1 - gaps\n         */\n\n        /*\n        LLWLLWLLL k = 2\n         */\n        int cntW = 0;\n        PriorityQueue<Integer> gapLen = new PriorityQueue<>();\n        int gapPos = -1;\n        for (int i = 0; i < s.length(); i++) {\n            if (s.charAt(i) == 'L' && i > 0 && s.charAt(i - 1) == 'W') {\n                gapPos = i;\n            }\n\n            if (s.charAt(i) == 'W') {\n                cntW++;\n\n                if (gapPos != -1) {\n                    gapLen.add(i - gapPos);\n                    gapPos = -1;\n                }\n            }\n        }\n\n        if (cntW + k > s.length()) {\n            return s.length() * 2 - 1;\n        }\n\n        while (gapLen.size() > 0 && gapLen.peek() <= k) {\n            Integer gap = gapLen.remove();\n            k -= gap;\n            cntW += gap;\n        }\n\n        int res = (cntW + k) * 2 - 1 - gapLen.size();\n        return res < 0 ? 0 : res;\n    }\n\n}"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n,k=map(int,input().split())\n    s=list(input())\n    if \"W\" not in s:\n        print(max((min(n,k)*2)-1,0))\n    elif k>=s.count(\"L\"):\n        print((2*n)-1)\n    else:\n        cnt,sm,ind=list(),s.count(\"W\"),s.index(\"W\")\n        for i in range(ind+1,n):\n            if s[i] == \"W\":\n                cnt.append(i-ind-1)\n                ind=i\n        cnt.sort()\n        for i in cnt:\n            if k >= i:\n                sm+=(2*i)+1\n                k-=i\n        if k>0:\n            sm+=(2*k)\n        print(sm)\n"
        },
        {
            "language": 3,
            "solution": "import heapq\n\ndef solve(st, n, k):\n    prev = 'L'\n    c, bug = 0, k\n    li = []\n    score = 0\n    count_l = st.count('L')\n    if count_l == n:\n        return max(2*min(k, n) - 1, 0)\n    \n    for it in st:\n        if it == prev:\n            if it=='W':\n                score+=2\n            c+=1\n        else:\n            if it=='W':\n                score+=1\n            li.append(c)\n            c = 1\n        prev = it\n\n    if c:\n        li.append(c)\n\n    hl = []\n    heapq.heapify(hl)\n    ln = len(li)\n    i = 2\n    while i+1<ln:\n        it = li[i]\n        heapq.heappush(hl, it)\n        i+=2\n\n    while hl:\n        tp = heapq.heappop(hl)\n        if tp <= bug:\n            bug -= tp\n            count_l -= tp\n            score += 2*tp + 1\n\n    cngo = min(bug, count_l)\n\n    score += 2*cngo\n    return score\n    \nfor case in range(int(input())):\n    n, k = map(int, input().split())\n    st = input()\n\n    ans = solve(st, n, k)\n    print(ans)\n"
        },
        {
            "language": 3,
            "solution": "##############--->>>>> Deepcoder Amit Kumar Bhuyan <<<<<---##############\n\n\"\"\"\n Perfection is achieved not when there is nothing more to add, but rather when there is nothing more to take away.\n\"\"\"\nfrom __future__ import division, print_function\n \nimport os,sys\nfrom io import BytesIO, IOBase\n \nif sys.version_info[0] < 3:\n    from __builtin__ import xrange as range\n    from future_builtins import ascii, filter, hex, map, oct, zip\n \n \ndef ii():  return int(input())\ndef si():  return input()\ndef mi():  return map(int,input().strip().split(\" \"))\ndef msi(): return map(str,input().strip().split(\" \"))\ndef li():  return list(mi())\n \ndef dmain():\n    sys.setrecursionlimit(1000000)\n    threading.stack_size(1024000)\n    thread = threading.Thread(target=main)\n    thread.start()\n    \n#from collections import deque, Counter, OrderedDict,defaultdict\n#from heapq import nsmallest, nlargest, heapify,heappop ,heappush, heapreplace\n#from math import log,sqrt,factorial,cos,tan,sin,radians\n#from bisect import bisect,bisect_left,bisect_right,insort,insort_left,insort_right\n#from decimal import *\n#import threading\n#from itertools import permutations\n#Copy 2D list  m = [x[:] for x in mark] .. Avoid Using Deepcopy\nimport sys\ninput = sys.stdin.readline\nscanner = lambda: int(input())\nstring = lambda: input().rstrip()\nget_list = lambda: list(read())\nread = lambda: map(int, input().split())\nget_float = lambda: map(float, input().split())\n# from bisect import bisect_left as lower_bound;\n# from bisect import bisect_right as upper_bound;\n# from math import ceil, factorial;\n\n \ndef ceil(x):\n    if x != int(x):\n        x = int(x) + 1\n    return x\n \ndef factorial(x, m):\n\tval = 1\n\twhile x>0:\n\t\tval = (val * x) % m\n\t\tx -= 1\n\treturn val\n\ndef fact(x):\n\tval = 1\n\twhile x > 0:\n\t\tval *= x\n\t\tx -= 1\n\treturn val\n    \n# swap_array function\ndef swaparr(arr, a,b):\n    temp = arr[a];\n    arr[a] = arr[b];\n    arr[b] = temp;\n \n## gcd function\ndef gcd(a,b):\n    if b == 0:\n        return a;\n    return gcd(b, a % b);\n\n## lcm function\ndef lcm(a, b):\n\treturn (a * b) // math.gcd(a, b)\n\ndef is_integer(n):\n\treturn math.ceil(n) == math.floor(n)\n \n## nCr function efficient using Binomial Cofficient\ndef nCr(n, k): \n\tif k > n:\n\t\treturn 0\n\tif(k > n - k):\n\t\tk = n - k\n\tres = 1\n\tfor i in range(k):\n\t\tres = res * (n - i)\n\t\tres = res / (i + 1)\n\treturn int(res)\n \n## upper bound function code -- such that e in a[:i] e < x;\n\n \n## prime factorization\ndef primefs(n):\n    ## if n == 1    ## calculating primes\n    primes = {}\n    while(n%2 == 0 and n > 0):\n        primes[2] = primes.get(2, 0) + 1\n        n = n//2\n    for i in range(3, int(n**0.5)+2, 2):\n        while(n%i == 0 and n > 0):\n            primes[i] = primes.get(i, 0) + 1\n            n = n//i\n    if n > 2:\n        primes[n] = primes.get(n, 0) + 1\n    ## prime factoriazation of n is stored in dictionary\n    ## primes and can be accesed. O(sqrt n)\n    return primes\n \n## MODULAR EXPONENTIATION FUNCTION\ndef power(x, y, p):\n    if y == 0:\n        return 1\n    res = 1\n    x = x % p  \n    if (x == 0) : \n        return 0\n    while (y > 0) : \n        if ((y & 1) == 1) : \n            res = (res * x) % p \n        y = y >> 1      \n        x = (x * x) % p \n    return res \n \n## DISJOINT SET UNINON FUNCTIONS\ndef swap(a,b):\n    temp = a\n    a = b\n    b = temp\n    return a,b;\n \n# find function with path compression included (recursive)\n# def find(x, link):\n#     if link[x] == x:\n#         return x\n#     link[x] = find(link[x], link);\n#     return link[x];\n \n# find function with path compression (ITERATIVE)\ndef find(x, link):\n    p = x;\n    while( p != link[p]):\n        p = link[p];\n    \n    while( x != p):\n        nex = link[x];\n        link[x] = p;\n        x = nex;\n    return p;\n \n \n# the union function which makes union(x,y)\n# of two nodes x and y\ndef union(x, y, link, size):\n    x = find(x, link)\n    y = find(y, link)\n    if size[x] < size[y]:\n        x,y = swap(x,y)\n    if x != y:\n        size[x] += size[y]\n        link[y] = x\n \n## returns an array of boolean if primes or not USING SIEVE OF ERATOSTHANES\ndef sieve(n): \n    prime = [True for i in range(n+1)] \n    prime[0], prime[1] = False, False\n    p = 2\n    while (p * p <= n): \n        if (prime[p] == True): \n            for i in range(p * p, n+1, p):\n                prime[i] = False\n        p += 1\n    return prime\n\n# Euler's Toitent Function phi\ndef phi(n) : \n  \n    result = n \n    p = 2\n    while(p * p<= n) : \n        if (n % p == 0) : \n            while (n % p == 0) : \n                n = n // p \n            result = result * (1.0 - (1.0 / (float) (p))) \n        p = p + 1\n    if (n > 1) : \n        result = result * (1.0 - (1.0 / (float)(n))) \n   \n    return (int)(result) \n\ndef is_prime(n):\n\tif n == 0:\n\t\treturn False\n\tif n == 1:\n\t\treturn True\n\tfor i in range(2, int(n ** (1 / 2)) + 1):\n\t\tif not n % i:\n\t\t\treturn False\n \n\treturn True\n\ndef next_prime(n, primes):\n\twhile primes[n] != True:\n\t\tn += 1\n\treturn n\n\n \n#### PRIME FACTORIZATION IN O(log n) using Sieve ####\nMAXN = int(1e5 + 5)\ndef spf_sieve():\n    spf[1] = 1;\n    for i in range(2, MAXN):\n        spf[i] = i;\n    for i in range(4, MAXN, 2):\n        spf[i] = 2;\n    for i in range(3, ceil(MAXN ** 0.5), 2):\n        if spf[i] == i:\n            for j in range(i*i, MAXN, i):\n                if spf[j] == j:\n                    spf[j] = i;\n    ## function for storing smallest prime factors (spf) in the array\n \n################## un-comment below 2 lines when using factorization #################\nspf = [0 for i in range(MAXN)]\n# spf_sieve();\ndef factoriazation(x):\n    res = []\n    for i in range(2, int(x ** 0.5) + 1):\n    \twhile x % i == 0:\n    \t\tres.append(i)\n    \t\tx //= i\n    if x != 1:\n   \t\tres.append(x)\n    return res\n    ## this function is useful for multiple queries only, o/w use\n    ## primefs function above. complexity O(log n)\n\ndef factors(n):\n\tres = []\n\tfor i in range(1, int(n ** 0.5) + 1):\n\t\tif n % i == 0:\n\t\t\tres.append(i)\n\t\t\tres.append(n // i)\n\treturn list(set(res))\n \n## taking integer array input\ndef int_array():\n    return list(map(int, input().strip().split()));\n \ndef float_array():\n    return list(map(float, input().strip().split()));\n \n## taking string array input\ndef str_array():\n    return input().strip().split();\n\ndef binary_search(low, high, w, h, n):\n\twhile low < high:\n\t\tmid = low + (high - low) // 2\n\t\t# print(low, mid, high)\n\t\tif check(mid, w, h, n):\n\t\t\tlow = mid + 1\n\t\telse:\n\t\t\thigh = mid\n\treturn low\n\n## for checking any conditions\ndef check(moves, n):\n\tval = (moves + 1) // 2\n\trem = moves - val\n\tsol = (val + 1) * (rem + 1)\n\treturn sol < n\n\t\n\n## for sorting according to second position\ndef sortSecond(val):\n\treturn val[1]\n\t\n\n \n#defining a couple constants\nMOD = int(1e9)+7;\nCMOD = 998244353;\nINF = float('inf'); NINF = -float('inf');\nalphs = \"abcdefghijklmnopqrstuvwxyz\"\n \n################### ---------------- TEMPLATE ENDS HERE ---------------- ###################\n \nfrom itertools import permutations\nimport math\nimport bisect as bis\nimport random\nimport sys\nimport collections as collect\nimport functools as fnt\nfrom decimal import Decimal\n# from sys import stdout\n# import numpy as np\n\"\"\"\n_______________\nrough work here\n_______________\n\n001110001\n\n\"\"\"\n\n\n\ndef solve():\n    n, k = read()\n    tournaments = list(string())\n    start = 0\n    end = n - 1\n    z = k\n    while start < n and tournaments[start] != \"W\":\n        start += 1\n    while end >= 0 and tournaments[end] != \"W\":\n        end -= 1\n    lstart = INF\n    lend = 0\n    c = 0\n    lengths = []\n    countw = tournaments.count(\"W\")\n    countl = 0\n    # print(start, end)\n    winning_streak = 0\n    for i in range(start, end + 1):\n        if tournaments[i] == \"L\":\n            lstart = min(lstart, i)\n            c += 1\n            countl += 1\n        else:\n            lend = i\n            if c > 0:\n                winning_streak += 1\n                lengths.append(c)\n                c = 0\n                lstart = INF\n    lengths.sort()\n    winning_streak += 1\n    # print(lengths, countl, winning_streak)\n    gaps = 0\n    c = 0\n    for x in lengths:\n        if c > k:\n            break\n        gaps += 1\n        c += x\n    if c > k:\n        gaps -= 1\n    # print(countw, winning_streak, gaps)\n    print(max(0, 2 * min(countw + k, n) - winning_streak + gaps))\n\n\n\n\n\n# region fastio\n# template taken from https://github.com/cheran-senthil/PyRival/blob/master/templates/template.py\n \nBUFSIZE = 8192\n \n \nclass FastIO(IOBase):\n    newlines = 0\n \n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n \n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n \n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n \n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n \n \nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n \n \ndef print(*args, **kwargs):\n    \"\"\"Prints the values to a stream, or to sys.stdout by default.\"\"\"\n    sep, file = kwargs.pop(\"sep\", \" \"), kwargs.pop(\"file\", sys.stdout)\n    at_start = True\n    for x in args:\n        if not at_start:\n            file.write(sep)\n        file.write(str(x))\n        at_start = False\n    file.write(kwargs.pop(\"end\", \"\\n\"))\n    if kwargs.pop(\"flush\", False):\n        file.flush()\n \n \nif sys.version_info[0] < 3:\n    sys.stdin, sys.stdout = FastIO(sys.stdin), FastIO(sys.stdout)\nelse:\n    sys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\n \ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n \n# endregion\n \n \nif __name__ == \"__main__\":\n    #read()\n    # sys.stdin = open(\"input.txt\", \"r\")\n    # sys.stdout = open(\"output.txt\", \"w\")\n    t = scanner()\n    for i in range(t):\n    \tsolve()\n    #dmain()\n \n# Comment Read()\n\t# fin_time = datetime.now()\n# \tprint(\"Execution time (for loop): \", (fin_time-init_time))\n"
        },
        {
            "language": 3,
            "solution": "t=int(input())\ndef func(arr,n):\n    start=None;end=None\n    for i in range(n):\n        if arr[i]==\"W\":\n            start=i\n            break\n    for i in reversed(range(n)):\n        if arr[i]==\"W\":\n            end=i \n            break\n    return start,end\n\nwhile t>0:\n    t-=1 \n    n,k=list(map(int,input().split()))\n    arr=input()\n    start,end=func(arr,n)\n    dict={}\n    streak=0;point=0\n    if start!=None and end!=None:\n        for i in range(start,end+1):\n            if arr[i]==\"L\":\n                streak+=1 \n                if arr[i+1]!=\"L\":\n                    if streak in dict:\n                        dict[streak]+=1 \n                    else:dict[streak]=1 \n                    streak=0\n            else:\n                if i!=start:\n                    if arr[i-1]==\"W\":point+=2 \n                    else:point+=1 \n                else:point+=1 \n    \n   \n    for score in sorted(dict):\n        if k>0:\n            if k>=score*dict[score]:\n                k-=score*dict[score]\n                \n                point+=score*dict[score]*2+dict[score]\n                \n            else:\n               \n                point+=k*2 \n                point+=k//score \n                k=0\n        else:\n            break\n\n    if start==None: left=n \n    else: left=start+(n-end-1)\n    if k>0:\n        \n        if start!=None:\n            if k>=left:point+=left*2 ;k-=left\n            else:point+=k*2 ;k-=k\n        else:\n            if k>=left:point+=left*2-1 ;k-=left\n            else:point+=k*2-1 ;k-=k\n     \n    print(point)  \n            \n        \n        "
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.OutputStreamWriter;\nimport java.lang.reflect.Array;\nimport java.util.ArrayDeque;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collection;\nimport java.util.Collections;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Objects;\nimport java.util.Queue;\nimport java.util.StringTokenizer;\nimport java.util.stream.Collectors;\n\npublic class CodeforceTemplate {\n\n\n  private static FastScanner scanner = new FastScanner();\n  private static BufferedWriter out = new BufferedWriter(new OutputStreamWriter(System.out));\n\n  public static void main(String[] args) {\n    int tests = scanner.nextInt();\n    for (int i = 0; i < tests; i++) {\n      solve();\n    }\n  }\n\n  private static void solve() {\n    int n = rInt(), k = rInt();\n    char[] s = rStr().toCharArray();\n    long w = 0;\n    for (char c : s) {\n      w += (c == 'W' ? 1 : 0);\n    }\n    if (k > 0 && w == 0) {\n      k--;\n      s[0] = 'W';\n    }\n    Map<Integer, Integer> loseStk = new HashMap<>();\n    int lastW = -1;\n    for (int i = 0; i < n; i++) {\n      if (s[i] == 'W') {\n        if (lastW < i - 1) {\n          loseStk.put(lastW + 1, i - lastW - 1);\n        }\n        lastW = i;\n      }\n    }\n    //remove streaks next to the walls\n    loseStk.remove(0);\n    ArrayList<Integer> streaks = new ArrayList<>(loseStk.values());\n    Collections.sort(streaks);\n    Queue<Integer> queue = new ArrayDeque<>(streaks);\n    int cheated = 0;\n    while (k > 0 && !queue.isEmpty()) {\n      int streak = queue.remove();\n      if (streak <= k) {\n        cheated += 2 * streak + 1;\n      } else {\n        cheated += 2 * k;\n      }\n      w += Math.min(k, streak);\n      k -= Math.min(k, streak);\n    }\n    cheated += (2 * Math.min(k, n - w));\n    int score = cheated;\n    int streak = 0;\n    for (int i = 0; i < n; i++) {\n      if (s[i] == 'W') {\n        score += (streak > 0) ? 2 : 1;\n        streak++;\n      } else {\n        streak = 0;\n      }\n    }\n    wl(score);\n  }\n\n  private static final int[][] DIRS_2D = {{0, 1}, {0, -1}, {-1, 0}, {1, 0}};\n\n  private final static class FastScanner {\n\n    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n    StringTokenizer st = new StringTokenizer(\"\");\n\n    String next() {\n      while (!st.hasMoreTokens()) {\n        try {\n          st = new StringTokenizer(br.readLine());\n        } catch (IOException e) {\n        }\n      }\n      return st.nextToken();\n    }\n\n    int nextInt() {\n      return Integer.parseInt(next());\n    }\n\n    long nextLong() {\n      return Long.parseLong(next());\n    }\n\n    int[] readIntArray(int size) {\n      int[] arr = new int[size];\n      for (int i = 0; i < size; i++) {\n        arr[i] = scanner.nextInt();\n      }\n      return arr;\n    }\n\n    long[] readLongArray(int size) {\n      long[] arr = new long[size];\n      for (int i = 0; i < size; i++) {\n        arr[i] = scanner.nextLong();\n      }\n      return arr;\n    }\n  }\n\n  private static void wl(String ans) {\n    try {\n      out.write(ans);\n      out.newLine();\n      out.flush();\n    } catch (IOException e) {\n      e.printStackTrace();\n    }\n  }\n\n  private static void wl(long ans) {\n    wl(String.valueOf(ans));\n  }\n\n\n  private static void wl(int ans) {\n    wl(String.valueOf(ans));\n  }\n\n  private static int rInt() {\n    return scanner.nextInt();\n  }\n\n  private static long rLong() {\n    return scanner.nextLong();\n  }\n\n  private static String rStr() {\n    return scanner.next();\n  }\n\n  private static int[] rIntArr(int size) {\n    return scanner.readIntArray(size);\n  }\n\n  private static long[] rLongArr(int size) {\n    return scanner.readLongArray(size);\n  }\n\n  private static class Pair<U, V> implements Comparable<Pair<U, V>> {\n\n    final U first;\n    final V second;\n\n    static <U, V> Pair<U, V> makePair(U first, V second) {\n      return new Pair<U, V>(first, second);\n    }\n\n    private Pair(U first, V second) {\n      this.first = first;\n      this.second = second;\n    }\n\n    @Override\n    public boolean equals(Object o) {\n      if (this == o) {\n        return true;\n      }\n      if (o == null || getClass() != o.getClass()) {\n        return false;\n      }\n\n      Pair pair = (Pair) o;\n\n      return Objects.equals(first, pair.first) &&\n          Objects.equals(second, pair.second);\n    }\n\n    @Override\n    public int hashCode() {\n      int result = first != null ? first.hashCode() : 0;\n      result = 31 * result + (second != null ? second.hashCode() : 0);\n      return result;\n    }\n\n    public Pair<V, U> swap() {\n      return makePair(second, first);\n    }\n\n    @Override\n    public String toString() {\n      return \"(\" + first + \",\" + second + \")\";\n    }\n\n    @SuppressWarnings({\"unchecked\"})\n    public int compareTo(Pair<U, V> o) {\n      int value = ((Comparable<U>) first).compareTo(o.first);\n      if (value != 0) {\n        return value;\n      }\n      return ((Comparable<V>) second).compareTo(o.second);\n    }\n  }\n}\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <typename T>\nT min(T a, T b, T c) {\n  return min(a, min(b, c));\n}\ntemplate <typename T>\nT max(T a, T b, T c) {\n  return max(a, max(b, c));\n}\ntemplate <typename T>\nvoid read(vector<T>& arr, long long N) {\n  arr.clear();\n  arr.resize(N);\n  for (long long i = 0; i < N; i++) cin >> arr[i];\n}\ntemplate <typename T>\nvoid read(vector<pair<T, T>>& arr, long long N) {\n  arr.clear();\n  arr.resize(N);\n  for (long long i = 0; i < (long long)arr.size(); i++)\n    cin >> arr[i].first >> arr[i].second;\n}\ntemplate <typename T>\nvoid read(vector<vector<T>>& arr, long long N, long long M) {\n  arr.clear();\n  arr.resize(N, vector<T>(M));\n  for (long long i = 0; i < N; i++) {\n    for (long long j = 0; j < M; j++) cin >> arr[i][j];\n  }\n}\ntemplate <typename T>\nvoid print(vector<T>& arr) {\n  for (auto it : arr) cout << it << ' ';\n  cout << '\\n';\n}\ntemplate <typename T>\nvoid print(vector<pair<T, T>>& arr) {\n  for (auto it : arr) cout << \" { \" << it.first << ',' << it.second << \" } \";\n  cout << '\\n';\n}\ntemplate <typename T>\nvoid print(vector<vector<T>>& arr) {\n  for (auto it : arr) {\n    for (auto ut : it) cout << ut << ' ';\n    cout << '\\n';\n  }\n  cout << '\\n';\n}\ntemplate <typename T>\nvoid print(list<T>& arr) {\n  for (auto it = (arr).begin(); it != (arr).end(); it++) cout << *it << ' ';\n  cout << '\\n';\n}\ntemplate <typename T>\nvoid print(unordered_set<T>& ss) {\n  for (auto it = (ss).begin(); it != (ss).end(); it++) cout << *it << ' ';\n  cout << '\\n';\n}\ntemplate <typename T>\nvoid print(set<T>& ss) {\n  for (auto it = (ss).begin(); it != (ss).end(); it++) cout << *it << ' ';\n  cout << '\\n';\n}\nbool lexi(string& s1, string& s2) {\n  long long I = s1.size(), J = s2.size(), i = 0, j = 0;\n  while (i < I and j < J) {\n    if (s1[i] > s2[j]) return true;\n    if (s1[i] < s2[j]) return false;\n    i++;\n    j++;\n  }\n  if (I >= J) return true;\n  return false;\n}\nstruct uf {\n  vector<long long> par, size;\n  void init(long long N) {\n    par.resize(N, -1);\n    size.resize(N, 1);\n  }\n  long long root(long long a) {\n    if (par[a] == -1) return a;\n    return par[a] = root(par[a]);\n  }\n  void unite(long long a, long long b) {\n    a = root(a);\n    b = root(b);\n    if (a == b) return;\n    if (size[a] < size[b]) {\n      par[a] = b;\n      size[b] += size[a];\n    } else {\n      par[b] = a;\n      size[a] += size[b];\n    }\n  }\n  bool same(long long a, long long b) {\n    if (root(a) == root(b)) return true;\n    return false;\n  }\n};\nstruct seg_tree {\n  vector<long long> make;\n  long long siz;\n  vector<long long> arr;\n  void init(vector<long long>& a, bool max, bool range) {\n    arr.clear();\n    make.clear();\n    arr = a;\n    siz = arr.size();\n    make.resize(4 * siz);\n    if (max)\n      build_max(0, 0, siz - 1);\n    else if (range)\n      build_range(0, 0, siz - 1);\n  }\n  long long get_max(long long L, long long R) {\n    return Get_max(0, 0, siz - 1, L, R);\n  }\n  void update_max(long long index, long long val) {\n    Update_max(0, 0, siz - 1, index, val);\n    return;\n  }\n  long long get_sum(long long L, long long R) {\n    return Get_sum(0, 0, siz - 1, L, R);\n  }\n  void update_range(long long index, long long add) {\n    Update_range(0, 0, siz - 1, index, add);\n    return;\n  }\n  long long build_range(long long ind, long long L, long long R) {\n    if (L == R) {\n      make[ind] = arr[L];\n      return make[ind];\n    } else {\n      long long mid = (L + R) / 2;\n      long long a = build_range(2 * ind + 1, L, mid);\n      long long b = build_range(2 * ind + 2, mid + 1, R);\n      make[ind] = a + b;\n      return make[ind];\n    }\n  }\n  long long Get_sum(long long ind, long long L, long long R, long long Left,\n                    long long Right) {\n    if (L > Right or R < Left) return 0;\n    if (Left <= L and R <= Right) return make[ind];\n    long long mid = (L + R) / 2;\n    long long a = Get_sum(2 * ind + 1, L, mid, Left, Right);\n    long long b = Get_sum(2 * ind + 2, mid + 1, R, Left, Right);\n    return a + b;\n  }\n  void Update_range(long long ind, long long L, long long R, long long index,\n                    long long add) {\n    if (L == R) {\n      make[ind] += add;\n      arr[index] += add;\n    } else {\n      long long mid = (L + R) / 2;\n      if (L <= index and index <= R) {\n        Update_range(2 * ind + 1, L, mid, index, add);\n      } else {\n        Update_range(2 * ind + 2, mid + 1, R, index, add);\n      }\n      make[ind] = make[2 * ind + 1] + make[2 * ind + 2];\n    }\n  }\n  long long build_max(long long ind, long long L, long long R) {\n    if (L == R) {\n      make[ind] = arr[L];\n      return make[ind];\n    } else {\n      long long mid = (L + R) / 2;\n      return make[ind] = max(build_max(2 * ind + 1, L, mid),\n                             build_max(2 * ind + 2, mid + 1, R));\n    }\n  }\n  long long Get_max(long long ind, long long L, long long R, long long Left,\n                    long long Right) {\n    if (R < Left or L > Right) return -1e15;\n    if (Left <= L and R <= Right) return make[ind];\n    long long mid = (L + R) / 2;\n    return max(Get_max(2 * ind + 1, L, mid, Left, Right),\n               Get_max(2 * ind + 2, mid + 1, R, Left, Right));\n  }\n  long long Update_max(long long ind, long long L, long long R, long long index,\n                       long long val) {\n    if (L == R) {\n      arr[index] = val;\n      make[ind] = val;\n      return val;\n    } else {\n      long long mid = (L + R) / 2;\n      if (L <= index and index <= mid) {\n        make[ind] = Update_max(2 * ind + 1, L, mid, index, val);\n      } else {\n        make[ind] = Update_max(2 * ind + 2, mid + 1, R, index, val);\n      }\n      make[ind] = max(make[2 * ind + 1], make[2 * ind + 2]);\n      return make[ind];\n    }\n  }\n};\nstatic bool comp(pair<long long, long long>& a, pair<long long, long long>& b) {\n  if (a.first < b.first) return true;\n  if (a.first == b.first) {\n    if (a.second < b.second) return true;\n  }\n  return false;\n}\nlong long Max = 1e17, Min = -1e16;\nlong long N, M, K, D;\nlong long mod = 1e9 + 7;\nstring st;\nstatic bool comp1(pair<long long, long long>& a,\n                  pair<long long, long long>& b) {\n  if (a.second - a.first < b.second - b.first) return true;\n  return false;\n}\nvoid solve() {\n  cin >> N >> K;\n  cin >> st;\n  vector<long long> win;\n  for (long long i = 0; i < N; i++) {\n    if (st[i] == 'W') win.push_back(i);\n  }\n  vector<pair<long long, long long>> arr;\n  for (long long i = 0; i < (long long)win.size() - 1; i++) {\n    arr.emplace_back(win[i], win[i + 1]);\n  }\n  sort(arr.begin(), arr.end(), comp1);\n  for (long long i = 0; i < (long long)arr.size(); i++) {\n    for (long long j = arr[i].first + 1; j < arr[i].second and K > 0; j++) {\n      st[j] = 'W';\n      K--;\n    }\n  }\n  if (win.empty() == false) {\n    for (long long i = win[0] - 1; i >= 0 and K > 0; i--) {\n      st[i] = 'W';\n      K--;\n    }\n  }\n  if (win.size() >= 2) {\n    for (long long i = win.back() + 1; i < N and K > 0; i++) {\n      st[i] = 'W';\n      K--;\n    }\n  }\n  for (long long i = 0; i < N and K > 0; i++) {\n    if (st[i] != 'W') {\n      st[i] = 'W';\n      K--;\n    }\n  }\n  long long cnt = 0;\n  for (long long i = 0; i < N; i++) {\n    if (st[i] == 'W') {\n      if (i - 1 >= 0 and st[i - 1] == 'W')\n        cnt += 2;\n      else\n        cnt += 1;\n    }\n  }\n  cout << cnt << '\\n';\n}\nsigned main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  auto start_time = chrono::high_resolution_clock::now();\n  bool test = 1;\n  if (!test)\n    solve();\n  else {\n    long long tt;\n    cin >> tt;\n    while (tt--) solve();\n  }\n  auto end_time = chrono::high_resolution_clock::now();\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n,k = list(map(int,input().split()))\n    s = input()\n    if \"W\" not in s: # pure losses case discarded\n        print(max(min(n,k)*2-1,0))\n        continue\n \n    l = s.split(\"W\")[1:-1] # Lengths of blocks of L's except first and last block\n    l = list(filter(None,l)) \n    l = [len(block) for block in l]\n    l.sort()\n\t\n    ncut = len(l)+1\n    x = s.count(\"W\")\n    for i in range(len(l)):\n\t    if k >= l[i]:\n\t\t    x += l[i]\n\t\t    k -= l[i]\n\t\t    ncut-=1\n \n    print(max(0,min(2*n-1,(x+k)*2-ncut)))"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class Codeforces{\n\tpublic static void main(String[] args) {\n\t\tScanner sc=new Scanner(System.in);\n\t\tint t=sc.nextInt();\n\t\tfor(int i=0;i<t;i++) {\n\t\t\tint n=sc.nextInt();\n\t\t\tint k=sc.nextInt();\n\t\t\tsc.nextLine();\n\t\t\tString s=sc.nextLine();\n\t\t\tint p=0;\n\t\t\tint q=n-1;\n\t\t\tList<Integer> l=new LinkedList<>();\n\t\t\twhile((!String.valueOf(s.charAt(p)).equals(\"W\") || !String.valueOf(s.charAt(q)).equals(\"W\")) && (p<q)) {\n\t\t\t\tif(!String.valueOf(s.charAt(p)).equals(\"W\")) p++;\n\t\t\t\tif(!String.valueOf(s.charAt(q)).equals(\"W\")) q--;\n\t\t\t}\n\t\t\tif(p>=q) {\n\t\t\t\tif(p==q && String.valueOf(s.charAt(p)).equals(\"W\")) {\n\t\t\t\t\tSystem.out.println(2*Math.min(k,p+n-q-1)+1);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif(k==0) {\n\t\t\t\t\t\tSystem.out.println(\"0\");\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tSystem.out.println(2*(Math.min(k,n)-1)+1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tint size=0;\n\t\t\t\tint sum=0;\n\t\t\t\tfor(int j=p;j<=q;j++) {\n\t\t\t\t\tif(String.valueOf(s.charAt(j)).equals(\"W\")) {\n\t\t\t\t\t\tif(j!=0 && String.valueOf(s.charAt(j-1)).equals(\"W\")) sum+=2;\n\t\t\t\t\t\telse sum+=1;\n\t\t\t\t\t\tif(size==0) continue;\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tl.add(size);\n\t\t\t\t\t\t\tsize=0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tsize+=1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tCollections.sort(l);\n\t\t\t\tint extra=0;\n\t\t\t\twhile(k!=0 && l.size()!=0) {\n\t\t\t\t\tif(k<l.get(0)) {\n\t\t\t\t\t\textra+=(2*k);\n\t\t\t\t\t\tk-=k;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\textra+=((2*l.get(0))+1);\n\t\t\t\t\t\tk-=l.remove(0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(k!=0) {\n\t\t\t\t\tif(p+n-q-1>k) extra+=(2*k);\n\t\t\t\t\telse extra+=((2*(p+n-q-1)));\n\t\t\t\t\tSystem.out.println(extra+sum);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tSystem.out.println(sum+extra);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstruct P {\n  int x, y;\n  bool operator<(const P &a) const { return y > a.y; };\n};\nint a, b, c, d, i, n, m, e, k, dx[10] = {1, 0, -1, 0, 1, 1, -1, -1},\n                               dy[10] = {0, 1, 0, -1, 1, -1, 1, -1};\nint o[111];\nint l[1];\nint ss[1];\nlong long x, y, z, mod = 1000000007, hf = (mod + 1) / 2;\nchar r[101111];\nvector<int> v[1];\nP u[1];\npriority_queue<int, vector<int>, greater<int> > q;\nset<int> s[1];\nmap<int, int> p;\nbool as(P a, P b) { return a.y < b.y; }\nint main() {\n  int ttt;\n  scanf(\"%d\", &ttt);\n  for (int tt = 1; tt <= ttt; tt++) {\n    scanf(\"%d %d\", &a, &b);\n    scanf(\"%s\", r + 1);\n    k = 0;\n    priority_queue<int, vector<int>, greater<int> > q;\n    e = 0;\n    m = 0;\n    for (int t = 1; t <= a; t++) {\n      if (r[t] == 'W') {\n        k += 2;\n        if (e) {\n          k--;\n          if (e + 1 != t) q.push(e);\n        } else if (t == 1)\n          k--;\n        e = 0;\n      } else\n        e++;\n    }\n    n = 0;\n    m = a + 1;\n    for (int t = 1; t <= a; t++)\n      if (r[t] == 'L')\n        n = t;\n      else\n        break;\n    for (int t = a; t; t--)\n      if (r[t] == 'L')\n        m = t;\n      else\n        break;\n    if (1 == m && n == a)\n      m = 0;\n    else\n      m = a - m + 1;\n    if (n + m == a) {\n      printf(\"%d\\n\", max(min(a, b) * 2 - 1, 0));\n      continue;\n    }\n    for (; b && q.size(); q.pop()) {\n      if (b >= q.top()) {\n        k++;\n        k += q.top() * 2;\n        b -= q.top();\n      } else {\n        k += b * 2;\n        b = 0;\n      }\n    }\n    k += min(b, n + m) * 2;\n    printf(\"%d\\n\", k);\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n \npublic class Main{\n\tstatic class Point{\n\t\tint x,y;\n\t\tPoint(int nx, int ny){x = nx; y = ny;}\n\t}\n\tpublic static void main(String[] args) throws IOException{\n\t\tBufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n\t\tint q = pint(in);\n\t\tStringBuilder sb = new StringBuilder();\n\t\tfor(; q > 0; q--) {\n\t\t\tStringTokenizer st = new StringTokenizer(in.readLine());\n\t\t\tint n = pint(st), k = pint(st);\n\t\t\tString str = in.readLine();\n\t\t\tboolean last = false;\n\t\t\tint p = 0;\n\t\t\tint s = 0;\n\t\t\tPriorityQueue<Integer> pq = new PriorityQueue<Integer>();\n\t\t\tfor(int i = 0 ; i < n; i++) {\n\t\t\t\tif(str.charAt(i) == 'W') {\n\t\t\t\t\tif(s != 0) {\n\t\t\t\t\t\tpq.add(s); s = 0;\n\t\t\t\t\t}\n\t\t\t\t\tif(last) {p += 2;}\n\t\t\t\t\telse {p++;}\n\t\t\t\t\tlast = true;\n\t\t\t\t}else {\n\t\t\t\t\tlast = false;\n\t\t\t\t\ts++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(s == n) {\n\t\t\t\tsb.append(Math.max(2 * k - 1,0));\n\t\t\t\tsb.append('\\n');\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tint t = 0;\n\t\t\tfor(int i = 0; i < n; i++) {\n\t\t\t\tif(str.charAt(i) == 'W') {break;}\n\t\t\t\tt++;\n\t\t\t}\n\t\t\twhile(!pq.isEmpty()) {\n\t\t\t\tint c = pq.poll();\n\t\t\t\tif(c <= k) {\n\t\t\t\t\tif(c == t) {\n\t\t\t\t\t\tt = -t;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}else {\n\t\t\t\t\t\tp += 2 * c + 1;\n\t\t\t\t\t\tk -= c;\n\t\t\t\t\t}\n\t\t\t\t}else {\n\t\t\t\t\tp += 2 * k;\n\t\t\t\t\tk = 0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(t < 0) {t = -t;}\n\t\t\tif(k > 0) {\n\t\t\t\tp +=  2 * Math.min(k, t);\n\t\t\t\tk -= t;\n\t\t\t\tif(k > 0) {\n\t\t\t\t\tp += 2 * Math.min(k, s);\n\t\t\t\t}\n\t\t\t}\n\t\t\tsb.append(p);\n\t\t\tsb.append('\\n');\n\t\t}\n\t\tSystem.out.print(sb);\n\t}\n\tstatic long gcd(long a, long b) {\n\t\tif(a == 0) {return b;}\n\t\treturn gcd(b % a, a);\n\t}\n    static int pint(BufferedReader in) throws IOException {return Integer.parseInt(in.readLine());}\n    static int pint(StringTokenizer st) {return Integer.parseInt(st.nextToken());}\n}"
        },
        {
            "language": 3,
            "solution": "import sys\n\ninput = sys.stdin.readline\n\nfor _ in range(int(input())):\n    n,k = map(int,input().split())\n    s = input()\n    s = [s[i] for i in range(n)]\n\n    base = s.count(\"W\")\n    if base == 0:\n        if k:\n            print(2*k-1)\n        else:\n            print(0)\n    elif base+k>=n:\n        print(2*n-1)\n    else:\n        interval = []\n        while s and s[-1]==\"L\":\n            s.pop()\n        s = s[::-1]\n        while s and s[-1]==\"L\":\n            s.pop()\n\n        while s:\n            if s[-1]==\"W\":\n                while s and s[-1]==\"W\":\n                    s.pop()\n            else:\n                tmp = 0\n                while s and s[-1]==\"L\":\n                    s.pop()\n                    tmp += 1\n                interval.append(tmp)\n        interval.sort(reverse=True)\n        K = k\n        while interval and k:\n            if k>=interval[-1]:\n                k -= interval.pop()\n            else:\n                break\n        print(2*(base+K)-1-len(interval))"
        },
        {
            "language": 3,
            "solution": "for inx in range(int(input())):\n    n,k = map(int,input().split());l = input();b=sc=0;g=[];p='L'\n    for c in l:\n        if c=='W':\n            sc = (sc + 2 if p=='W' else sc + 1);p='W'\n            if b:g.append(b)\n            b=0\n        else:p='L';b+=1\n    if b:g.append(b)\n    cbg=cen=0\n    if l[0]=='L':cbg=g.pop(0)\n    if l[-1]=='L':\n        if sc:cen=g.pop()\n    g.sort()\n    while k and g:\n        b=g.pop(0)\n        if k>=b:k-=b;sc+=2*b+1\n        else:sc+=2*k;k=0\n    if k:sc = (sc + 2*min(k,cbg+cen) if sc else sc + 2*min(k,cbg)-1)\n    print(sc)"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.BufferedOutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.*;\nimport java.util.InputMismatchException;\n\n/*\n * To change this license header, choose License Headers in Project Properties.\n * To change this template file, choose Tools | Templates\n * and open the template in the editor.\n */\n\n/**\n *\n * @author ujjwal abhishek\n */\npublic class B \n{\n    public static void solve()\n    {\n        int t=sc.nextInt();\n        while (t-->0)\n        {\n           int n=sc.nextInt(),k=sc.nextInt();\n           String s=sc.next();\n           char[] ch=s.toCharArray();\n           int wins=0,win_streaks=0,loss=0;\n           for (int i=0;i<n;i++)\n           {\n               if (ch[i]=='L') loss++;\n           }\n           ArrayList<Integer> a=new ArrayList<Integer>();\n           int beg=0;\n           int ans=0;\n           while (beg<n)\n           {\n               if (ch[beg]=='W')\n               {\n                   if (beg>0 && ch[beg-1]=='W') ans+=2;\n                   else ans++;\n                   ++beg;\n                   continue;\n               }\n               int end=beg;\n               while (end<n-1 && ch[end+1]=='L') ++end;\n               if (beg!=0 && end!=n-1) a.add(end-beg+1);\n               beg=end+1;\n           }\n           if (ans==0)\n           {\n               for (int i=0;i<k;i++)\n               {\n                   if (i==0) ans++;\n                   else ans+=2;\n               }\n           }\n           else\n           {\n               ans+=2*Math.min(loss,k);\n               Collections.sort(a);\n               int take=0;\n               for (int x:a)\n               {\n                   if (take+x<=k)\n                   {\n                       take+=x;\n                       ans++;\n                   }\n               }\n           }\n           out.println(ans);\n        }\n    }\n    public static void main(String[] args) \n    {\n        new Thread(null, null, \"Thread\", 1 << 27) \n        {\n            public void run() \n            {\n                try \n                {\n                    out = new PrintWriter(new BufferedOutputStream(System.out));\n                    sc = new FastReader(System.in);\n                    solve();\n                    out.close();\n                } \n                catch (Exception e) \n                {\n                    e.printStackTrace();\n                    System.exit(1);\n                }\n            }\n        }\n                .start();\n    }\n    public static PrintWriter out;\n    public static FastReader sc;\n    public static class FastReader \n    {\n        private InputStream stream;\n        private byte[] buf = new byte[4096];\n        private int curChar, snumChars;\n        public FastReader(InputStream stream) \n        {\n            this.stream = stream;\n        }\n        public int read() \n        {\n            if (snumChars == -1) \n            {\n                throw new InputMismatchException();\n            }\n            if (curChar >= snumChars) \n            {\n                curChar = 0;\n                try \n                {\n                    snumChars = stream.read(buf);\n                } \n                catch (IOException E) \n                {\n                    throw new InputMismatchException();\n                }\n            }\n            if (snumChars <= 0) \n            {\n                return -1;\n            }\n            return buf[curChar++];\n        }\n        public int nextInt() \n        {\n            int c = read();\n            while (isSpaceChar(c)) \n            {\n                c = read();\n            }\n            int sgn = 1;\n            if (c == '-') \n            {\n                sgn = -1;\n                c = read();\n            }\n            int number = 0;\n            do \n            {\n                number *= 10;\n                number += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return number * sgn;\n        }\n        public long nextLong() {\n            int c = read();\n            while (isSpaceChar(c)) \n            {\n                c = read();\n            }\n            long sgn = 1;\n            if (c == '-') \n            {\n                sgn = -1;\n                c = read();\n            }\n            long number = 0;\n            do \n            {\n                number *= 10L;\n                number += (long) (c - '0');\n                c = read();\n            } while (!isSpaceChar(c));\n            return number * sgn;\n        }\n        public int[] nextIntArray(int n) \n        {\n            int[] arr = new int[n];\n            for (int i = 0; i < n; i++) \n            {\n                arr[i] = this.nextInt();\n            }\n            return arr;\n        }\n        public long[] nextLongArray(int n) \n        {\n            long[] arr = new long[n];\n            for (int i = 0; i < n; i++) \n            {\n                arr[i] = this.nextLong();\n            }\n            return arr;\n        }\n        public String next()\n        {\n            int c = read();\n            while (isSpaceChar(c)) \n            {\n                c = read();\n            }\n            StringBuilder res = new StringBuilder();\n            do \n            {\n                res.appendCodePoint(c);\n                c = read();\n            } while (!isSpaceChar(c));\n            return res.toString();\n        }\n        public String nextLine() \n        {\n            int c = read();\n            while (isSpaceChar(c)) \n            {\n                c = read();\n            }\n            StringBuilder res = new StringBuilder();\n            do\n            {\n                res.appendCodePoint(c);\n                c = read();\t\n            } while (!isEndofLine(c));\n            return res.toString();\n        }\n        public boolean isSpaceChar(int c)\n        {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n        public boolean isEndofLine(int c) \n        {\n            return c == '\\n' || c == '\\r' || c == -1;\n        }\n    }\n}\n//8\n//5 2\n//WLWLL\n//6 5\n//LLLWWL\n//7 1\n//LWLWLWL\n//15 5\n//WWWLLLWWWLLLWWW\n//40 7\n//LLWLWLWWWLWLLWLWWWLWLLWLLWLLLLWLLWWWLWWL\n//1 0\n//L\n//1 1\n//L\n//6 1\n//WLLWLW\n\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\n\ndef solve(s, k):\n    gaps = []\n    last_pos = None\n\n    if s.count('L') == len(s):\n        if k:\n            return k * 2 - 1\n        else:\n            return 0\n\n    for i, x in enumerate(s):\n        if x == 'W':\n            if last_pos is not None:\n                gaps.append((i - last_pos - 1, last_pos + 1, i))\n            last_pos = i\n\n    gaps.sort(reverse=True)\n    #print(gaps)\n    score = 0\n    \n    while gaps and k:\n        width, start, end = gaps.pop()\n        if width <= k and width:\n            score += 1\n\n        k -= width\n        score += width * 2\n\n    if k:\n        #print(\"Increasing score since have some moves left over...\", score, score + 2 * k)\n        # There are no big enough gaps\n        # means that on both sides there are\n        # enough Ls to do the flop\n        score += 2 * k\n\n    return score\n            \n\nfor case in range(t):\n    n, k = map(int, input().split())\n    s = input()\n    k = min(k, s.count('L'))  # changing W to L always bad\n    \n    # Compute initial score\n    score = 0\n\n    for i, x in enumerate(s):\n        score += x == 'W'\n\n        if x == 'W' and i > 0:\n            score += s[i-1] == 'W'\n            \n    print(score + solve(s, k))\n    \n    \n    \n    \n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin, stdout\nimport math\nimport heapq\nimport collections\ninput = stdin.readline\ndef inputnum():\n    return(int(input()))\ndef inputnums():\n    return(map(int,input().split()))\ndef inputlist():\n    return(list(map(int,input().split())))\ndef inputstring():\n    return([x for x in input()])\ndef inputstrings():\n    return([x for x in input().split()])\ndef inputstringnum():\n    return([ord(x)-ord('a') for x in input()])\ndef inputmatrixchar(rows):\n    arr2d = [[j for j in input().strip()] for i in range(rows)] \n    return arr2d\ndef inputmatrixint(rows):\n    arr2d = []\n    for _ in range(rows):\n        arr2d.append([int(i) for i in input().split()])\n    return arr2d\n    \nt = int(input())\nfor q in range(t):\n    n, k = inputnums()\n    s = inputstring()\n    losingstreak = []\n    winningstreak = 0\n    wins = 0\n    losses = 0\n    curloss = 0\n    for i in range(n):\n        if s[i] == 'W':\n            wins += 1 \n            if i == 0 or s[i-1] == 'L': \n                winningstreak += 1 \n        else:\n            losses += 1\n            curloss += 1\n            if i == n-1 or s[i+1] == 'W':\n                losingstreak.append(curloss)\n                curloss = 0\n    if k >= losses:\n        print(2*n-1)\n        continue\n    if wins == 0:\n        if k == 0:\n            print(0)\n            continue\n        else:\n            print(2*k-1)\n            continue\n    if s[0] == 'L':\n        losingstreak[0] = 1e9\n    if s[n-1] == 'L':\n        losingstreak[len(losingstreak)-1] = 1e9\n    losingstreak.sort()\n    wins += k \n    for i in range(len(losingstreak)):\n        if k < losingstreak[i]:\n            break\n        else:\n            winningstreak -= 1 \n            k -= losingstreak[i]\n    print(2*wins - winningstreak)"
        },
        {
            "language": 3,
            "solution": "import collections\n\ndef readis():\n    return map(int, input().strip().split())\n\ndef printlist(xs):\n    print(\" \".join(map(str, xs)))\n\nT = int(input())\n\nwhile T:\n    T -= 1\n    n, k = readis()\n    s = input()\n    cs = list(s)\n    \n    loss_start = -1\n    loss_conts = []\n    l_beg = 0\n    l_end = 0\n\n    score = 0 \n    for i, c in enumerate(s):\n        if c == \"W\":\n            score += 1 + int(i > 0 and s[i-1] == \"W\")\n\n    if set(s) == {\"L\"}:\n        n_reverts = min(len(s), k)\n        inc = 2 * n_reverts - 1 if n_reverts else 0\n        print(score + inc)\n        continue\n    if set(s) == {\"W\"}:\n        print(score)\n        continue\n\n    for i, c in enumerate(s):\n        if loss_start > -1:\n            if c == \"W\":\n                if loss_start == 0:\n                    l_beg = i\n                else:\n                    loss_conts.append(i - loss_start)\n                loss_start = -1\n        else:\n            if c == \"L\":\n                loss_start = i\n    if loss_start > -1:\n        l_end = n - loss_start\n    \n    max_score = score\n    for cont in sorted(loss_conts):\n        if k > 0:\n            n_cheats = min(k, cont)\n            k -= n_cheats\n            max_score += 2 * n_cheats + int(n_cheats == cont)\n        else:\n            break\n\n    if k > 0 and l_end:\n        n_cheats = min(k, l_end)\n        k -= n_cheats\n        max_score += 2 * n_cheats\n\n    if k > 0 and l_beg:\n        n_cheats = min(k, l_beg)\n        k -= n_cheats\n        max_score += 2 * n_cheats\n\n    print(max_score)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long int t;\n  cin >> t;\n  while (t--) {\n    long long int n, i, ans = -23, k, res = 0;\n    vector<long long int> v;\n    cin >> n >> k;\n    string s;\n    cin >> s;\n    for (i = 0; i < n; i++) {\n      if (i == 0) {\n        if (s[i] == 'W') {\n          ans = i;\n          res++;\n        }\n      } else if (i > 0) {\n        if (s[i] == 'W' && s[i - 1] == 'W') {\n          res += 2;\n          ans = i;\n        } else if (s[i] == 'W') {\n          res++;\n          ans = i;\n        }\n      }\n    }\n    for (i = 0; i < ans; i++) {\n      if (s[i] == 'W') break;\n    }\n    long long int x = i;\n    long long int y = x;\n    x = 0;\n    for (i = y + 1; i < ans; i++) {\n      if (s[i] == 'L')\n        x++;\n      else {\n        if (x != 0) v.push_back(x);\n        x = 0;\n      }\n    }\n    if (x != 0) v.push_back(x);\n    if (v.size() != 0) {\n      sort(v.begin(), v.end());\n      for (i = 0; i < v.size(); i++) {\n        if (k <= 0) break;\n        if (v[i] <= k)\n          res += (2 * v[i]) + 1;\n        else if (v[i] > k)\n          res += (2 * k);\n        k -= v[i];\n        if (k <= 0) break;\n      }\n    }\n    if (k > 0) {\n      if (ans < 0)\n        res += min(k, n) * 2 - 1;\n      else {\n        res += min(k, n - ans - 1) * 2;\n        k -= (n - ans - 1);\n        if (k > 0) {\n          res += (min(y, k) * 2);\n        }\n      }\n    }\n    printf(\"%lld\\n\", res);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint dx[] = {0, -1, 0, 1, -1, 1, -1, 1};\nint dy[] = {-1, 0, 1, 0, 1, -1, -1, 1};\nconst int MOD = 998244353, N = 2e5 + 5, oo = 1e9;\nconst double pi = acos(-1);\nusing namespace std;\nint n, k;\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  int t;\n  cin >> t;\n  while (t--) {\n    bool other = false;\n    cin >> n >> k;\n    string s;\n    cin >> s;\n    vector<int> vec;\n    int cnt = 0;\n    for (int i = (int)(s).size() - 1; i >= 0; i--) {\n      if (s[i] == 'L')\n        cnt++;\n      else {\n        other = 1;\n        vec.push_back(cnt);\n        cnt = 0;\n      }\n    }\n    int start = 0, end = 0;\n    if (cnt) vec.push_back(cnt);\n    if (s[0] == 'L') start = vec.back(), vec.pop_back();\n    if (s[(int)(s).size() - 1] == 'L' and (int)(vec).size())\n      end = vec[0], vec[0] = 0;\n    sort(vec.begin(), vec.end());\n    long long ans = 0;\n    for (int i = 0; i < (int)(s).size(); i++)\n      if (s[i] == 'W') ans += (i and s[i - 1] == 'W') ? 2 : 1;\n    for (auto it : vec) {\n      if (!k) break;\n      if (it) {\n        if (k >= it)\n          ans += it * 2, ans++;\n        else\n          ans += k * 2;\n        k -= min(k, it);\n      }\n    }\n    if (k and end) {\n      ans += 2 * min(k, end);\n      k -= min(k, end);\n    }\n    if (k and start) {\n      if (k >= start) {\n        ans++, k--;\n        ans += 2 * min(k, start - 1);\n        if (other and k >= start - 1) ans++;\n      } else if (other)\n        ans += 2 * k;\n      else\n        ans += 2 * (k - 1), ans++;\n    }\n    cout << ans << '\\n';\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\nimport java.lang.reflect.Array;\npublic class CCC2 {\n\tstatic BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\tstatic StringTokenizer st;\n\tpublic static void main(String[] args) throws IOException {\n\t\tint t = readInt();\n\t\tfor (int a = 0; a < t; a++) {\n\t\t\tint n = readInt(), k = readInt();\n\t\t\tchar[] array = next().toCharArray();\n\t\t\tint pre = -1;\n\t\t\tArrayList<Integer> list = new ArrayList<Integer>();\n\t\t\tint w = 0;\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tif (array[i] == 'W') {\n\t\t\t\t\tw++;\n\t\t\t\t\tif (pre == -1) {\n\t\t\t\t\t\tpre = i;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlist.add(i-pre-1);\n\t\t\t\t\t\tpre = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tCollections.sort(list);\n\t\t\tint og = k;\n\t\t\tint cnt = list.size();\n\t\t\tfor (int x: list) {\n\t\t\t\tif (k >= x) {\n\t\t\t\t\tk -= x;\n\t\t\t\t\tcnt--;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (w == 0) {\n\t\t\t\tSystem.out.println(Math.max(0, 2*k-1));\n\t\t\t} else {\n\t\t\t\tSystem.out.println(2*Math.min(n, w+og) - cnt -1);\n\t\t\t}\n\t\t}\n\t}\n\tstatic int readInt () throws IOException {\n\t\treturn Integer.parseInt(next());\n\t}\n\tstatic String next () throws IOException {\n\t\twhile (st == null || !st.hasMoreTokens())\n\t\t\tst = new StringTokenizer(br.readLine().trim());\n\t\treturn st.nextToken();\n\t}\n\tstatic long readLong () throws IOException {\n\t\treturn Long.parseLong(next());\n\t}\n\tstatic double readDouble () throws IOException {\n\t\treturn Double.parseDouble(next());\n\t}\n\tstatic char readCharacter () throws IOException {\n\t\treturn next().charAt(0);\n\t}\n\tstatic String readLine () throws IOException {\n\t\treturn br.readLine().trim();\n\t}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    int n, k;\n    cin >> n >> k;\n    string s;\n    cin >> s;\n    int cnt = 0;\n    for (char c : s)\n      if (c == 'L') cnt++;\n    if (cnt == n) {\n      cout << max(0, 2 * k - 1) << \"\\n\";\n      continue;\n    }\n    k = min(k, cnt);\n    int ans = 0;\n    bool w = false;\n    vector<int> X;\n    cnt = 0;\n    for (int i = 0; i < n; i++) {\n      char c = s[i];\n      if (c == 'L') {\n        cnt++;\n        if (i + 1 == n || s[i + 1] == 'W') {\n          if (cnt == i + 1 || i == n - 1)\n            X.push_back(n + 1);\n          else\n            X.push_back(cnt);\n        }\n        w = false;\n      } else {\n        cnt = 0;\n        if (w)\n          ans += 2;\n        else\n          ans++;\n        w = true;\n      }\n    }\n    int dar = 0;\n    sort(X.begin(), X.end());\n    for (int i : X) {\n      if (k > 0) {\n        if (k >= i) {\n          ans += 2 * i + 1;\n          k -= i;\n        } else {\n          ans += 2 * k;\n          break;\n        }\n      }\n    }\n    cout << ans + dar << \"\\n\";\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.Random;\nimport java.util.StringTokenizer;\n\n\npublic class A {\n\t// author: tarun verma\n\tstatic final FastScanner sc = new FastScanner();\n\tstatic int inf = Integer.MAX_VALUE;\n\tstatic long mod = 1000000007;\n\t\n\tstatic boolean isPalindrom(char[] arr, int i, int j) {\n\t\tboolean ok = true;\n\t\twhile(i<=j) {\n\t\t\tif(arr[i] != arr[j]) {\n\t\t\t\tok = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t\treturn ok;\n\t}\n\n\tpublic static class pair{\n\t\tint fr, sc;\n\t\tpair(int fr, int sc){ \n\t\t\tthis.fr = fr;\n\t\t\tthis.sc = sc;\n\t\t}\n\t}\n\tstatic int max(int a, int b) {return Math.max(a, b);}\n\tstatic int min(int a, int b) {return Math.min(a, b);}\n\tstatic long max(long a, long b) {return Math.max(a, b);}\n\tstatic long min(long a, long b) {return Math.min(a, b);}\n\tstatic void swap(long arr[], int i, int j) {\n\t\tlong temp = arr[i];\n\t\tarr[i] = arr[j];\n\t\tarr[j] = temp;\n\t}\n\tstatic void swap(int arr[], int i, int j) {\n\t\tint temp = arr[i];\n\t\tarr[i] = arr[j];\n\t\tarr[j] = temp;\n\t}\n\tstatic int maxArr(int arr[]) { \n\t\tint maxi = Integer.MIN_VALUE;\n\t\tfor(int x: arr) maxi = max(maxi, x);\n\t\treturn maxi;\n\t}\n\tstatic int minArr(int arr[]) { \n\t\tint mini = Integer.MAX_VALUE;\n\t\tfor(int x: arr) mini = min(mini, x);\n\t\treturn mini;\n\t}\n\tstatic long maxArr(long arr[]) { \n\t\tlong maxi = Long.MIN_VALUE;\n\t\tfor(long x: arr) maxi = max(maxi, x);\n\t\treturn maxi;\n\t}\n\tstatic long minArr(long arr[]) { \n\t\tlong mini = Long.MAX_VALUE;\n\t\tfor(long x: arr) mini = min(mini, x);\n\t\treturn mini;\n\t}\n\tstatic long gcd(int a, int b) {\n\t\tif (b==0) return a;\n\t\treturn gcd(b, a%b);\n\t}\n\tstatic long gcd(long a, long b) {\n\t\tif (b==0) return a;\n\t\treturn gcd(b, a%b);\n\t}\n\tstatic void ruffleSort(int[] a) {\n\t\tint n=a.length;\n\t\tRandom r=new Random();\n\t\tfor (int i=0; i<a.length; i++) {\n\t\t\tint oi=r.nextInt(n); int temp=a[i];\n\t\t\ta[i]=a[oi];\n\t\t\ta[oi]=temp;\n\t\t}\n\t\tArrays.sort(a);\n\t}\n\tpublic static int binarySearch(int a[], int target) {\n\t\tint left = 0;\n\t\tint right = a.length - 1;\n\t\tint mid = (left+ right) / 2;\n\t\tint i = 0;\n\t\twhile(left <= right) {\n\t\t\tif(a[mid] <= target) {\n\t\t\t\ti = mid+1;\n\t\t\t\tleft = mid + 1;\n\t\t\t} else {\n\t\t\t\tright = mid - 1;\n\t\t\t}\n\t\t\tmid = (left + right) / 2;\n\t\t}\n\t\treturn i;\n\t}\n\tstatic class FastScanner {\n\t\tBufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n\t\tStringTokenizer st=new StringTokenizer(\"\");\n\t\tString next() {\n\t\t\twhile (!st.hasMoreTokens())\n\t\t\t\ttry {\n\t\t\t\t\tst=new StringTokenizer(br.readLine());\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\t\t\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\t\tint[] readArray(int n) {\n\t\t\tint[] a=new int[n];\n\t\t\tfor (int i=0; i<n; i++) a[i]=nextInt();\n\t\t\treturn a;\n\t\t}\n\t\tint[][] read2dArray(int n, int m){\n\t\t\tint arr[][] = new int[n][m];\n\t\t\tfor(int i= 0;i<n;i++) {\n\t\t\t\tfor(int j = 0;j<m;j++) {\n\t\t\t\t\tarr[i][j] = nextInt();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\t\t\n\t\tArrayList<Integer> readArrayList(int n){\n\t\t\tArrayList<Integer> arr = new ArrayList<Integer>();\n\t\t\tfor(int i = 0;i<n;i++) {\n\t\t\t\tint a = nextInt();\n\t\t\t\tarr.add(a);\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\t}\n\t\n//////////////////////////////////////////////////////////////////////////////////////\n//////////////////////DO NOT TOUCH BEFORE THIS LINE //////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////\n\n\tpublic static void main(String[] args) {\n\t\tint t;\n\t\tt = 1;\n\t\tt = sc.nextInt();\n\t\tfor(int tt = 0;tt<t;tt++) {\n\t\t\tint n = sc.nextInt();\n\t\t\tint k = sc.nextInt();\n\t\t\tString s = sc.next();\n\t\t\tArrayList<pair> arr = new ArrayList<pair>();\n//\t\t\tHashMap<Integer, Integer> mpp = new HashMap<Integer, Integer>();\n\t\t\tchar last = s.charAt(0); \n\t\t\tint temp  = 0;\n\t\t\tint i = 0;\n\t\t\tfor(i = 0;i<n;i++) {\n\t\t\t\tif(s.charAt(i) =='W') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor(;i<n;i++) {\n//\t\t\t\tSystem.out.println(\"inside\");\n\t\t\t\tif(last == 'L') {\n\t\t\t\t\tif(s.charAt(i) == 'L') {\n\t\t\t\t\t\ttemp++;\n\t\t\t\t\t} else {\n//\t\t\t\t\t\tSystem.out.println(i-1);\n\t\t\t\t\t\tarr.add(new pair(i-1, temp));\n//\t\t\t\t\t\tmpp.put(i-1, temp);\n\t\t\t\t\t\ttemp = 0;\n\t\t\t\t\t\tlast = s.charAt(i);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif(s.charAt(i) == 'L') {\n\t\t\t\t\t\ttemp++;\n\t\t\t\t\t\tlast = 'L';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n//\t\t\tif(temp != 0) {\n//\t\t\t\tarr.add(new pair(n-1, temp));\n////\t\t\t\tmpp.put(n-1, temp);\n//\t\t\t\ttemp = 0;\n//\t\t\t}\n\t\t\tCollections.sort(arr, (pair o1, pair o2) -> (o1.sc - o2.sc));\n//\t\t\tfor(pair x: arr) {\n////\t\t\t\tSystem.out.println(x.fr + \" \" + x.sc);\n//\t\t\t}\n\t\t\tchar res[] = s.toCharArray();\n//\t\t\tSystem.out.println();\n\t\t\tfor(i = 0;i<arr.size() && k > 0;i++) {\n\t\t\t\tint j = arr.get(i).fr ;\n\t\t\t\tint cnt = arr.get(i).sc;\n//\t\t\t\tSystem.out.println(\"cnt : \" + cnt);\n\t\t\t\twhile(cnt > 0 && k > 0) {\n//\t\t\t\t\tSystem.out.println(\"cnt : \" + cnt);\n//\t\t\t\t\tSystem.out.println(\"j: \" + j);\n\t\t\t\t\tres[j] = 'W';\n\t\t\t\t\tcnt--;\n\t\t\t\t\tj--;\n\t\t\t\t\tk--;\n\t\t\t\t}\n\t\t\t}\n//\t\t\tfor(char ii: res) {\n//\t\t\t\tSystem.out.print(ii);\n//\t\t\t}System.out.println();\n//\t\t\tSystem.out.println(\"k: \" + k);\n\t\t\tlong ans  = 0;\n\t\t\tif(k == 0) {\n\t\t\t\tchar l = res[0];\n\t\t\t\tint cnt = 0;\n\t\t\t\tif(l == 'W') {\n\t\t\t\t\tcnt ++;\n\t\t\t\t}\n\t\t\t\tfor(i = 1;i<n;i++) {\n\t\t\t\t\tif(l == 'W') {\n\t\t\t\t\t\tif(res[i] == 'W') {\n\t\t\t\t\t\t\tcnt++;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tans += (2 * cnt - 1);\n\t\t\t\t\t\t\tcnt = 0;\n\t\t\t\t\t\t\tl = 'L';\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif(res[i] == 'W') {\n\t\t\t\t\t\t\tcnt++;\n\t\t\t\t\t\t\tl = 'W';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(cnt != 0) {\n\t\t\t\t\tans += ( 2 * cnt -1);\n\t\t\t\t}\n//\t\t\t\tSystem.out.println(\"ans: \" + ans);\n\t\t\t\tSystem.out.println(ans);\n\t\t\t} else {\n//\t\t\t\tSystem.out.println(\"not yet\");\n\t\t\t\tfor(i = 0;i<n;i++) {\n\t\t\t\t\tif(res[i] == 'W') {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n//\t\t\t\tSystem.out.println(\"i: \" + i);\n\t\t\t\ti--;\n\t\t\t\twhile(k != 0 && i >= 0) {\n\t\t\t\t\tres[i] = 'W';\n\t\t\t\t\tk--;\n\t\t\t\t\ti--;\n\t\t\t\t}\n\t\t\t\tfor(i = n-1;i>=0;i--) {\n\t\t\t\t\tif(res[i] == 'W') {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ti++;\n\t\t\t\twhile(k > 0 && i < n) {\n\t\t\t\t\tres[i] = 'W';\n\t\t\t\t\tk--;\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t\tchar l = res[0];\n\t\t\t\tint cnt = 0;\n\t\t\t\tif(l == 'W') {\n\t\t\t\t\tcnt ++;\n\t\t\t\t}\n\t\t\t\tfor(i = 1;i<n;i++) {\n\t\t\t\t\tif(l == 'W') {\n\t\t\t\t\t\tif(res[i] == 'W') {\n\t\t\t\t\t\t\tcnt++;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tans += (2 * cnt - 1);\n\t\t\t\t\t\t\tcnt = 0;\n\t\t\t\t\t\t\tl = 'L';\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif(res[i] == 'W') {\n\t\t\t\t\t\t\tcnt++;\n\t\t\t\t\t\t\tl = 'W';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(cnt != 0) {\n\t\t\t\t\tans += ( 2 * cnt -1);\n\t\t\t\t}\n//\t\t\t\tSystem.out.println(\"ans: \" + ans);\n\t\t\t\tSystem.out.println(ans);\n\t\t\t}\n\n\t\t}\n\t}\n\n////////////////////////////////////////////////////////////////////////////////\t\n//////////////THIS IS THE LAST CHANCE!!!!!//////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////\n\n}\n\n"
        },
        {
            "language": 4,
            "solution": "import javax.lang.model.type.ArrayType;\nimport java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.StringTokenizer;\nimport java.io.IOException;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.InputStream;\n\n/*\n@author kalZor\n */\npublic class TaskB {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        FastReader in = new FastReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        Solver solver = new Solver();\n        int testCount = Integer.parseInt(in.next());\n        for (int i = 1; i <= testCount; i++)\n            solver.solve(i, in, out);\n        out.close();\n    }\n\n    static class Solver {\n        public void solve(int testNumber, FastReader in, PrintWriter out) {\n            int n = in.nextInt(),k = in.nextInt();\n            String s = in.next();\n//            if(testNumber==71){\n//                out.println(n+\" \"+k);\n//                out.println(s);\n//            }\n            int nWins = 0;\n            ArrayList<Integer> block = new ArrayList<>();\n            int nLoss = 0;\n            int continuos = 0;\n            long ans = 0;\n            for(int i=0;i<n;i++){\n                if(s.charAt(i)=='W'){\n                    nWins++;\n                    ans++;\n                    if(i==0||s.charAt(i-1)=='L')continuos++;\n                    if(nLoss>0&&nWins==1) nLoss=0;\n                    if(nLoss>0&&nWins>1){\n                        block.add(nLoss);\n                        nLoss = 0;\n                    }\n                }\n                else{\n                    nLoss++;\n                }\n            }\n            if(nWins+k>=n){\n                out.println(2*(long)(n-1)+1);\n                return;\n            }\n            else if(k==0){\n                out.println(2*(long)nWins-continuos);\n            }\n            else if(nWins==0){\n                out.println(2*(long)k-1);\n            }\n            else{\n                Collections.sort(block);\n                ans+=2*(long)k;\n                nWins+=k;\n//                out.println(continuos);\n//                out.println(block);\n                for(int i=0;i<block.size();i++){\n                    if(block.get(i)<=k){\n                        k-=block.get(i);\n                        continuos--;\n                    }\n                    else{\n                        break;\n                    }\n                }\n//                out.println(nWins+\" \"+continuos);\n                out.println(2*(long)(nWins)-continuos);\n            }\n        }\n    }\n\n    static class FastReader {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public FastReader(InputStream stream){\n            br = new BufferedReader(new\n                InputStreamReader(stream));\n        }\n\n        public String next(){\n            while (st == null || !st.hasMoreElements()){\n                try{\n                    st = new StringTokenizer(br.readLine());\n                }\n                catch (IOException e){\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        public int nextInt(){\n            return Integer.parseInt(next());\n        }\n\n        public long nextLong(){\n            return Long.parseLong(next());\n        }\n\n        public double nextDouble(){\n            return Double.parseDouble(next());\n        }\n\n        public String nextLine(){\n            String str = \"\";\n            try{\n                str = br.readLine();\n            }\n            catch (IOException e){\n                e.printStackTrace();\n            }\n            return str;\n        }\n\n        public int[] nextArray(int n) {\n            int[] a=new int[n];\n            for (int i=0; i<n; i++) a[i]=nextInt();\n                return a;\n        }\n    }\n}\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid solve() {\n  int n, k;\n  cin >> n >> k;\n  deque<int> dq;\n  string s;\n  cin >> s;\n  long long wins = 0, loses = 0;\n  int w_streak = 0;\n  for (int i = 0; i < n; i++) {\n    if (s[i] == 'L') {\n      loses++;\n    }\n    if (s[i] == 'W') {\n      wins++;\n      if (i == 0 || s[i - 1] == 'L') w_streak++;\n    }\n  }\n  if (loses <= k) {\n    cout << 2 * n - 1 << \"\\n\";\n    return;\n  }\n  int i = 0;\n  while (i < n) {\n    if (s[i] == 'L') {\n      int l = 0;\n      while (s[i] == 'L' && i < n) {\n        l++;\n        i++;\n      }\n      dq.push_back(l);\n    } else\n      i++;\n  }\n  int starting_loses = 0, ending_loses = 0;\n  if (s[0] == 'L') {\n    starting_loses = dq[0];\n    dq.pop_front();\n  }\n  if (s[n - 1] == 'L' && w_streak) {\n    ending_loses = dq[dq.size() - 1];\n    dq.pop_back();\n  }\n  vector<int> v;\n  for (auto x : dq) v.push_back(x);\n  sort(v.begin(), v.end());\n  for (auto x : v) {\n    if (x <= k) {\n      k -= x;\n      w_streak -= 1;\n      wins += x;\n    } else {\n      wins += k;\n      k = 0;\n    }\n  }\n  if (loses == n && k > 0) w_streak++;\n  if (k) wins += k;\n  cout << 2 * wins - w_streak << \"\\n\";\n}\nint main() {\n  int t;\n  cin >> t;\n  while (t--) solve();\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "for _ in \" \"*int(input()):\n  n,k=map(int,input().split())\n  s=list(input())\n  if \"W\" not in s:\n    print(max((min(k,n)*2)-1,0))\n  elif k >= s.count(\"L\"):\n    print((n*2)-1)\n  else:\n    cnt,sm,ind=list(),s.count(\"W\"),s.index(\"W\")\n    for i in range(ind+1,n):\n      if s[i] == \"W\":\n        cnt.append(i-ind-1)\n        ind=i\n    cnt.sort()\n    for i in cnt:\n      if k >= i:\n        sm+=(2*i)+1\n        k-=i\n    if k>0:\n      sm+=(2*k)\n    print(sm)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long mod = 1000000007;\nconst double PI = acos(-1.0);\nconst double epsilon = PI / 180.0;\nlong long powmod(long long a, long long b) {\n  long long res = 1;\n  a %= mod;\n  assert(b >= 0);\n  for (; b; b >>= 1) {\n    if (b & 1) res = res * a % mod;\n    a = a * a % mod;\n  }\n  return res;\n}\nlong long gcd(long long a, long long b) { return b ? gcd(b, a % b) : a; }\nconst int N = 1e5 + 10, M = 1e6 + 10;\nstruct node {\n  int l, r;\n  int len;\n} a[N];\nbool cmp(node a, node b) { return a.len < b.len; }\nint n, k;\nstring s;\nvector<int> v;\nint main() {\n  int _;\n  cin >> _;\n  while (_--) {\n    v.clear();\n    cin >> n >> k;\n    cin >> s;\n    long long ans = 0;\n    for (int i = 0; i < n; i++) {\n      if (s[i] == 'W') {\n        v.push_back(i);\n        if (i - 1 >= 0 && s[i - 1] == 'W')\n          ans += 2;\n        else\n          ans++;\n      }\n    }\n    if (v.size() == 0) {\n      if (k == 0)\n        cout << \"0\\n\";\n      else\n        cout << 1 + (k - 1) * 2 << \"\\n\";\n      continue;\n    }\n    int m = v.size() - 1;\n    for (int i = 0; i < m; i++) {\n      a[i] = {v[i], v[i + 1], v[i + 1] - v[i] - 1};\n    }\n    sort(a, a + m, cmp);\n    for (int i = 0; i < m; i++) {\n      if (k == 0) break;\n      int tmp = min(k, a[i].len);\n      if (tmp > 0 && tmp == a[i].len)\n        ans += (tmp - 1) * 2 + 3;\n      else\n        ans += tmp * 2;\n      k -= tmp;\n    }\n    if (k != 0) {\n      int tmp = min(k, v[0] + n - 1 - v[m]);\n      ans += tmp * 2;\n    }\n    cout << ans << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "from __future__ import division, print_function\nimport bisect\nimport math\nimport heapq\nimport itertools\nimport sys\nfrom collections import deque\nfrom atexit import register\nfrom collections import Counter\nfrom functools import reduce\nif sys.version_info[0] < 3:\n    from io import BytesIO as stream\nelse:\n    from io import StringIO as stream\n \n \nif sys.version_info[0] < 3:\n    class dict(dict):\n        \"\"\"dict() -> new empty dictionary\"\"\"\n        def items(self):\n            \"\"\"D.items() -> a set-like object providing a view on D's items\"\"\"\n            return dict.iteritems(self)\n \n        def keys(self):\n            \"\"\"D.keys() -> a set-like object providing a view on D's keys\"\"\"\n            return dict.iterkeys(self)\n \n        def values(self):\n            \"\"\"D.values() -> an object providing a view on D's values\"\"\"\n            return dict.itervalues(self)\n \n    input = raw_input\n    range = xrange\n \n    filter = itertools.ifilter\n    map = itertools.imap\n    zip = itertools.izip\n \n \ndef sync_with_stdio(sync=True):\n    \"\"\"Set whether the standard Python streams are allowed to buffer their I/O.\n \n    Args:\n        sync (bool, optional): The new synchronization setting.\n \n    \"\"\"\n    global input, flush\n \n    if sync:\n        flush = sys.stdout.flush\n    else:\n        sys.stdin = stream(sys.stdin.read())\n        input = lambda: sys.stdin.readline().rstrip('\\r\\n')\n \n        sys.stdout = stream()\n        register(lambda: sys.__stdout__.write(sys.stdout.getvalue()))\n\ndef main():\n    # sys.stdin  = open(\"input.txt\")\n    for _ in range(int(input())):\n        n,k=map(int,input().split())\n        s=input()\n        cnt=s.count(\"L\")\n        if k>=cnt:\n            print(2*(n-1)+1)\n        else:\n            i=0\n            while i<n and s[i]==\"L\":\n                i+=1\n            if i==n:\n                if k==0:\n                    print(\"0\")\n                    continue\n                else:\n                    print(2*(k-1)+1)\n                    continue\n            su=1\n            a=i\n            v=[]\n            for j in range(a+1,n):\n                if s[j]==\"W\":\n                    if a+1==j:\n                        su+=2\n                    else:\n                        su+=1\n                        v.append(j-a-1)\n                    a=j\n            v.sort()\n            for i in v:\n                if i>k:\n                    break\n                cnt-=i\n                k-=i\n                su+=(2*i+1)\n            if k:\n                su+=2*(min(k,cnt))\n            print(su)\n\n                \n\n\n\n\n\n\n\nif __name__ == '__main__':\n    sync_with_stdio(False)\n    main()"
        },
        {
            "language": 3,
            "solution": "for t in range(int(input())):\n    n,k=map(int,input().split())\n    s=input()\n    if k>=n:\n        print(n*2-1)\n        continue\n    l=0\n    inter=[]\n    count=0\n    out=0\n    for i in s:\n        if i=='L':\n            l+=1\n            count+=1\n        else:\n            if count!=0:\n                inter.append(count)\n                out+=1\n            else:\n                out+=2\n            count=0\n    if s[0]=='W':\n        out-=1\n    elif inter:\n        inter.pop(0)\n    if l<=k:\n        print(n*2-1)\n    elif l==n and k!=0:\n        print(k*2-1)\n    else:\n        r=n-l\n        inter.sort()\n        for i in inter:\n            if k>=i:\n                out+=i*2+1\n                k-=i\n            else:\n                out+=k*2\n                k=0\n                break\n        out+=k*2\n        print(out)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(nullptr);\n  int t;\n  cin >> t;\n  while (t--) {\n    int n, k;\n    cin >> n >> k;\n    string s;\n    cin >> s;\n    int cntL = count(s.begin(), s.end(), 'L');\n    if (cntL == n) {\n      cout << max(2 * k - 1, 0) << \"\\n\";\n      continue;\n    }\n    vector<int> posW;\n    for (int i = 0; i < n; i++)\n      if (s[i] == 'W') posW.push_back(i);\n    vector<int> seg;\n    for (int i = 1; i < int(posW.size()); i++)\n      if (posW[i] - posW[i - 1] - 1 > 0)\n        seg.push_back(posW[i] - posW[i - 1] - 1);\n    int ans = s[0] == 'W';\n    for (int i = 1; i < n; i++)\n      if (s[i] == 'W') ans += s[i - 1] == 'W' ? 2 : 1;\n    ans += 2 * min(k, cntL);\n    sort(seg.begin(), seg.end());\n    for (auto len : seg)\n      if (k >= len) k -= len, ans += 1;\n    cout << ans << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst char ln = '\\n';\nconst char sp = ' ';\nconst long long mod = 1000000007;\nlong long modpow(long long x, long long y, long long p);\nlong long modinv(long long a, long long m);\nlong long lcm(long long a, long long b);\nlong long gcd(long long a, long long b);\nbool po2(long long x);\nstruct comp;\nvoid solve() {\n  long long n, k, l, ans = 0;\n  cin >> n >> k;\n  string s;\n  cin >> s;\n  bool flag = 1;\n  for (long long i = 1; i < n; ++i) {\n    if (s[i] != s[i - 1]) flag = 0;\n  }\n  if (flag) {\n    if (s[0] == 'W') {\n      ans += (s[0] == 'W' ? 1 : 0);\n      for (long long i = 1; i < n; ++i) {\n        if (s[i - 1] == 'W' && s[i] == 'W') {\n          ans += 2;\n        } else if (s[i] == 'W') {\n          ans += 1;\n        }\n      }\n      cout << ans << ln;\n      return;\n    } else {\n      ans = min(k, n) * 2 - 1;\n      cout << (k != 0 ? ans : 0) << ln;\n      return;\n    }\n  }\n  vector<long long> full;\n  bool w = 0;\n  long long beg = 0, end = 0;\n  for (long long i = 0; i < n; ++i) {\n    if (w == 0) {\n      while (i < n && s[i] == 'L') {\n        beg++;\n        i++;\n      }\n      if (i == n) {\n        end = beg;\n        break;\n      } else {\n        w = 1;\n        i--;\n        continue;\n      }\n    }\n    l = 0;\n    if (s[i] == 'L') {\n      while (i < n && s[i] == 'L') {\n        l++;\n        i++;\n      }\n      if (i == n) {\n        end = l;\n      } else {\n        full.push_back(l);\n      }\n    }\n  }\n  sort(full.begin(), full.end());\n  long long ii = 0;\n  while (k > 0) {\n    if (ii == full.size()) {\n      ans += min(k, end + beg) * 2;\n      break;\n    }\n    if (k >= full[ii]) {\n      k -= full[ii];\n      ans += 2 * full[ii] + 1;\n      ii++;\n    } else {\n      if (ii != full.size() || end != 0 || beg != 0) {\n        long long h = 0;\n        h += end + beg;\n        for (long long i = 0; i < full.size(); ++i) {\n          h += full[i];\n        }\n        h = min(h, k);\n        ans += 2 * h;\n        break;\n      }\n    }\n  }\nks:\n  ans += (s[0] == 'W' ? 1 : 0);\n  for (long long i = 1; i < n; ++i) {\n    if (s[i - 1] == 'W' && s[i] == 'W') {\n      ans += 2;\n    } else if (s[i] == 'W') {\n      ans += 1;\n    }\n  }\n  cout << ans << ln;\n}\nint32_t main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  long long t = 1;\n  cin >> t;\n  while (t--) {\n    solve();\n  }\n  return 0;\n}\nlong long gcd(long long a, long long b) {\n  if (a == 0) return b;\n  return gcd(b % a, a);\n}\nlong long lcm(long long a, long long b) { return (a * b) / gcd(a, b); }\nbool po2(long long x) { return x && (!(x & (x - 1))); }\nlong long modpow(long long x, long long y, long long p) {\n  long long res = 1;\n  x = x % p;\n  if (x == 0) return 0;\n  while (y > 0) {\n    if (y & 1) res = (res * x) % p;\n    y = y >> 1;\n    x = (x * x) % p;\n  }\n  return res;\n}\nlong long modinv(long long a, long long m) {\n  long long g = gcd(a, m);\n  if (g != 1)\n    return -1;\n  else {\n    return modpow(a, m - 2, m);\n  }\n}\nstruct comp {\n  bool operator()(pair<long long, long long> const& p1,\n                  pair<long long, long long> const& p2) {\n    if (p1.first > p2.first)\n      return true;\n    else if (p1.first < p2.first)\n      return false;\n    else\n      return p1.second > p2.second;\n  }\n};\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nans = [0 for _ in range(t)]\n\ndef score(s):\n    ret = 0\n    n = len(s)\n    for i in range(n):\n        if s[i] == \"W\":\n            if i == 0 or s[i - 1] == \"L\":\n                ret += 1\n            else:\n                ret += 2\n    return ret\n    \n\nfor i in range(t):\n    n, k = map(int, input().split())\n    s = input()\n    if set(s) == set(\"W\"):\n        ans[i] = 2 * n - 1\n        continue\n    if set(s) == set(\"L\"):\n        ans[i] = max(2 * min(n, k) - 1, 0)\n        continue\n    left_gap = 0\n    right_gap = 0\n    gap = 0\n    gaps = []\n    for j in range(n):\n        if s[j] == \"W\":\n            if j > 0 and s[j - 1] == \"L\":\n                if j == gap:\n                    left_gap = gap\n                else:\n                    gaps.append(gap)\n                gap = 0\n            continue\n        gap += 1\n    if gap > 0:\n        right_gap = gap\n    a = score(s)\n    gaps.sort()\n    for g in gaps:\n        if k >= g:\n            a += 2 * g + 1\n            k -= g\n            continue\n        if k > 0:\n            a += 2 * k\n            k = 0\n    # if i == 1:\n    #     print(\"i = 1\", left_gap, right_gap, gaps, a)\n    cnt = 0\n    while k > 0:\n        if left_gap > 0:\n            a += 2 * min(left_gap, k)\n            k -= min(left_gap, k)\n            cnt += 1\n            # assert cnt == 1\n            # if i == 1:\n                # assert a == 9, \"error i = 1, a = {}\".format(a)\n            left_gap = 0\n            continue\n        if right_gap > 0:\n            a += 2 * min(right_gap, k)\n            k -= min(right_gap, k)\n            right_gap = 0\n            continue\n        break\n    ans[i] = a\n\nfor x in ans:\n    print(x)\n        "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst double PI = 3.141592653589793238462643383;\nconst long long INF = 1e9 + 7;\nconst long long mod = 998244353;\nint getID(char c) {\n  if (c == ' ') return 0;\n  return c - 'a' + 1;\n}\nlong long pw(long long a, long long b) {\n  long long res = 1ll;\n  while (b) {\n    if (b & 1ll) res = (res * a);\n    a = (a * a);\n    b >>= 1;\n  }\n  return res;\n}\nvoid solve() {\n  int n, k, pos = 0;\n  cin >> n >> k;\n  string s;\n  cin >> s;\n  map<int, vector<int> > mp;\n  map<int, vector<int> >::iterator it;\n  for (int i = 0; i < n; i++) {\n    if (s[i] == 'W') {\n      int j = i + 1;\n      while (j < n && s[j] == 'L') j++;\n      if (j == n) {\n        pos = i + 1;\n        break;\n      }\n      mp[j - i - 1].push_back(i + 1);\n      i = j - 1;\n    }\n  }\n  for (it = mp.begin(); it != mp.end(); it++) {\n    vector<int> a = it->second;\n    for (int i = 0; i < a.size(); i++) {\n      for (int j = 0; j < it->first; j++) {\n        if (k <= 0) break;\n        s[a[i] + j] = 'W';\n        k--;\n      }\n      if (k <= 0) break;\n    }\n    if (k <= 0) break;\n  }\n  while (pos < n && k > 0) s[pos++] = 'W', k--;\n  pos = n;\n  for (int i = 0; i < n; i++)\n    if (s[i] == 'W') {\n      pos = i;\n      break;\n    }\n  pos--;\n  while (pos >= 0 && k > 0) s[pos--] = 'W', k--;\n  int ct = 0;\n  for (int i = 0; i < n; i++) {\n    if (s[i] == 'W') {\n      int j = i + 1;\n      while (j < n && s[j] == 'W') j++;\n      ct += 1 + (j - i - 1) * 2;\n      i = j - 1;\n    }\n  }\n  cout << ct << \"\\n\";\n  mp.clear();\n  return;\n}\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  int t = 1;\n  cin >> t;\n  while (t--) {\n    solve();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "/**\n * @author vivek\n * programming is thinking, not typing\n */\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.StringTokenizer;\n\npublic class B {\n\n    private static void solveTC(int __) {\n\n        /* For Google */\n//\t\tans.append(\"Case #\").append(__).append(\": \");\n\n        //code start\n\n        int n = scn.nextInt();\n        int k = scn.nextInt();\n\n        char[] arr = scn.next().toCharArray();\n\n        if (count(arr) == 0) {\n            if (k==0){\n                print(\"0\\n\");\n                return;\n            }\n            print(2 * Math.min(n, k) - 1+\"\\n\");\n            return;\n        }\n\n        ArrayList<Integer> intervals = new ArrayList<>();\n\n        int i = 0;\n        for (; i < n; i++) {\n            if (arr[i] == 'W') {\n                break;\n            }\n        }\n\n        int start = i;\n\n        i++;\n        int count = 0;\n        for (; i < n; i++) {\n            if (arr[i] == 'W') {\n                if (count != 0) {\n                    intervals.add(count);\n                    count = 0;\n                }\n            } else {\n                count++;\n            }\n        }\n\n        int end = count;\n\n        Collections.sort(intervals);\n\n        int ans = 0;\n        for (int ele : intervals) {\n            if (k >= ele) {\n                k -= ele;\n                ans += 2 * ele + 1;\n            } else {\n                ans += 2 * k;\n                k = 0;\n                break;\n            }\n        }\n\n        if (k != 0) {\n            if (k >= start + end) {\n                ans += 2 * (start + end);\n            } else {\n                ans += 2 * k;\n            }\n        }\n\n        for (int j = 0; j < n; j++) {\n            if (j > 0 && arr[j] == 'W' && arr[j - 1] == 'W') {\n                ans += 2;\n            } else if (arr[j] == 'W') {\n                ans++;\n            }\n        }\n\n        print(ans);\n\n        //code end\n\n        print(\"\\n\");\n    }\n\n\n    private static int count(char[] arr) {\n        int c = 0;\n        for (int e : arr) {\n            if (e == 'W') {\n                c++;\n            }\n        }\n        return c;\n    }\n\n    /**\n     * Don't copy other's templates, make your own <br>\n     * It would be much more beneficial\n     */\n\n    public static void main(String[] args) {\n        scn = new Scanner();\n        ans = new StringBuilder();\n        int t = scn.nextInt();\n//\t\tint t = 1;\n\n//        int limit=               ;\n//        sieve(limit);\n\n        /*\n        try {\n            System.setOut(new PrintStream(new File(\"file_i_o\\\\output.txt\")));\n        } catch (FileNotFoundException e) {\n            e.printStackTrace();\n        }\n*/\n        for (int i = 1; i <= t; i++) {\n            solveTC(i);\n        }\n        System.out.print(ans);\n    }\n    //Stuff for prime start\n\n    /**\n     * List containing prime numbers <br>\n     * <b>i<sup>th</sup></b> position contains <b>i<sup>th</sup></b> prime number <br>\n     * 0th index is <b>null</b>\n     */\n    private static ArrayList<Integer> listOfPrimes;\n\n    /**\n     * query <b>i<sup>th</sup></b> element to get if its prime of not\n     */\n    private static boolean[] isPrime;\n\n    /**\n     * Performs Sieve of Erathosnesis and initialise isPrime array and listOfPrimes list\n     *\n     * @param limit the number till which sieve is to be performed\n     */\n    private static void sieve(int limit) {\n        listOfPrimes = new ArrayList<>();\n        listOfPrimes.add(null);\n        boolean[] array = new boolean[limit + 1];\n\n        Arrays.fill(array, true);\n        array[0] = false;\n        array[1] = false;\n\n        for (int i = 2; i <= limit; i++) {\n            if (array[i]) {\n                for (int j = i * i; j <= limit; j += i) {\n                    array[j] = false;\n                }\n            }\n        }\n        isPrime = array;\n        for (int i = 0; i <= limit; i++) {\n            if (array[i]) {\n                listOfPrimes.add(i);\n            }\n        }\n    }\n    //stuff for prime end\n\n    /**\n     * Calculates the Least Common Multiple of two numbers\n     *\n     * @param a First number\n     * @param b Second Number\n     * @return Least Common Multiple of <b>a</b> and <b>b</b>\n     */\n    private static long lcm(long a, long b) {\n        return a * b / gcd(a, b);\n    }\n\n    /**\n     * Calculates the Greatest Common Divisor of two numbers\n     *\n     * @param a First number\n     * @param b Second Number\n     * @return Greatest Common Divisor of <b>a</b> and <b>b</b>\n     */\n    private static long gcd(long a, long b) {\n        return (b == 0) ? a : gcd(b, a % b);\n    }\n\n    static void print(Object obj) {\n        ans.append(obj.toString());\n    }\n\n\n    static Scanner scn;\n    static StringBuilder ans;\n\n    //Fast Scanner\n    static class Scanner {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public Scanner() {\n            br = new BufferedReader(new\n                    InputStreamReader(System.in));\n/*\n            try {\n                br = new BufferedReader(new\n                        InputStreamReader(new FileInputStream(new File(\"file_i_o\\\\input.txt\"))));\n            } catch (FileNotFoundException e) {\n                e.printStackTrace();\n            }\n*/\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine() {\n            String str = \"\";\n            try {\n                str = br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n\n        int[] nextIntArray(int n) {\n            int[] array = new int[n];\n            for (int i = 0; i < n; i++) {\n                array[i] = nextInt();\n            }\n            return array;\n        }\n\n        Integer[] nextIntegerArray(int n) {\n            Integer[] array = new Integer[n];\n            for (int i = 0; i < n; i++) {\n                array[i] = nextInt();\n            }\n            return array;\n        }\n\n        long[] nextLongArray(int n) {\n            long[] array = new long[n];\n            for (int i = 0; i < n; i++) {\n                array[i] = nextLong();\n            }\n            return array;\n        }\n\n        String[] nextStringArray() {\n            return nextLine().split(\" \");\n        }\n\n        String[] nextStringArray(int n) {\n            String[] array = new String[n];\n            for (int i = 0; i < n; i++) {\n                array[i] = next();\n            }\n            return array;\n        }\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n,k = map(int,input().split())\n    s = list(input())\n    if \"W\" not in s:\n        print(max((min(k,n)*2)-1,0))\n    elif k>=s.count(\"L\"):\n        print((n*2)-1)\n    else:\n        cnt = []\n        sm = s.count(\"W\")\n        ind = s.index(\"W\")\n        for i in range(ind+1,n):\n            if s[i]==\"W\":\n                cnt.append(i-ind-1)\n                ind = i\n        cnt.sort()\n        for i in cnt:\n            if k>=i:\n                sm+= (2*i)+1\n                k-=i\n        if k>0:\n            sm+=(2*k)\n        print(sm)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nnamespace hash_tuple {\ntemplate <typename TT>\nstruct hash {\n  size_t operator()(TT const &tt) const { return std::hash<TT>()(tt); }\n};\ntemplate <class T>\ninline void hash_combine(std::size_t &seed, T const &v) {\n  seed ^= hash_tuple::hash<T>()(v) + 0x9e3779b9 + (seed << 6) + (seed >> 2);\n}\ntemplate <class Tuple, size_t Index = std::tuple_size<Tuple>::value - 1>\nstruct HashValueImpl {\n  void operator()(size_t &seed, Tuple const &tuple) const {\n    HashValueImpl<Tuple, Index - 1>{}(seed, tuple);\n    hash_combine(seed, std::get<Index>(tuple));\n  }\n};\ntemplate <class Tuple>\nstruct HashValueImpl<Tuple, 0> {\n  void operator()(size_t &seed, Tuple const &tuple) const {\n    hash_combine(seed, std::get<0>(tuple));\n  }\n};\ntemplate <typename... TT>\nstruct hash<std::tuple<TT...>> {\n  size_t operator()(std::tuple<TT...> const &tt) const {\n    size_t seed = 0;\n    HashValueImpl<std::tuple<TT...>>{}(seed, tt);\n    return seed;\n  }\n};\ntemplate <typename T>\ninline void hash_val(std::size_t &seed, const T &val) {\n  hash_combine(seed, val);\n}\ntemplate <typename T, typename... Types>\ninline void hash_val(std::size_t &seed, const T &val, const Types &...args) {\n  hash_combine(seed, val);\n  hash_val(seed, args...);\n}\ntemplate <typename... Types>\ninline std::size_t hash_val(const Types &...args) {\n  std::size_t seed = 0;\n  hash_val(seed, args...);\n  return seed;\n}\nstruct pair_hash {\n  template <class T1, class T2>\n  std::size_t operator()(const std::pair<T1, T2> &p) const {\n    return hash_val(p.first, p.second);\n  }\n};\n}  // namespace hash_tuple\nusing namespace std;\nint main() {\n  int T;\n  cin >> T;\n  for (int t = 1; t <= T; t++) {\n    int n, k;\n    cin >> n >> k;\n    string s;\n    cin >> s;\n    int count = 0;\n    int wins = 0;\n    int losses = 0;\n    vector<int> losing_streaks;\n    for (int i = 0; i < n; i++) {\n      if (s[i] == 'W') {\n        wins++;\n        count++;\n        if (i != 0 && s[i - 1] == 'W') count++;\n      }\n      if (s[i] == 'L') {\n        losses++;\n        if (i == 0 || s[i - 1] == 'W') losing_streaks.push_back(0);\n        losing_streaks.back()++;\n      }\n    }\n    if (k >= losses) {\n      cout << 2 * n - 1 << \"\\n\";\n      continue;\n    }\n    if (wins == 0) {\n      if (k == 0)\n        cout << 0 << \"\\n\";\n      else\n        cout << 2 * k - 1 << \"\\n\";\n      continue;\n    }\n    if (s[0] == 'L') losing_streaks[0] = 1e8;\n    if (s[n - 1] == 'L') losing_streaks.back() = 1e8;\n    sort(losing_streaks.begin(), losing_streaks.end());\n    int temp = k;\n    for (int ls : losing_streaks) {\n      if (ls > k) break;\n      k -= ls;\n      count++;\n    }\n    cout << count + (2 * temp) << \"\\n\";\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\n\n\n#def solve(a,b,c,d):\ndef solve(outcomes,k,raw):\n    #print(outcomes,k)\n    n = len(outcomes)\n    nw = sum(outcomes)\n    nl = n-nw\n\n    last = 0\n    score = 0\n    for s in outcomes:\n        score += 0 if s==0 else (1 if last==0 else 2)\n        last = s\n    #print(raw,'   base score',score,'NL=',nl,'NW=',nw)\n\n\n    if k == 0:\n        # return current score\n        return score\n    elif k >= nl:\n        return 2*n-1\n    elif nw == 0:\n        return 2*k-1\n    else:\n        #DP = [[0]*(k+1) for i in range(n)]\n        #for i in range(1,n+1):\n            #for k in range(1,k+1):\n                #pass\n\n        '''\n        leading_ls = 0\n        for s in outcomes:\n            if s == 0:\n                leading_ls += 1\n            else:\n                break\n        '''\n\n        # for every W group, there's a 1-point\n        # if change the L right before it, you get a bonus 1\n\n        # let's count the length of each L group and the max points it would increase the total by to change all of them\n\n        # all of the single L's in between W's are worth 3\n        # any L after a W is worth 2\n\n        # then pick based on the average gain per char changed\n\n        lgroups = [len(g) for g in raw.split('W') if len(g)>0]\n        #print(raw,lgroups)\n        if outcomes[0] == 0:\n            lgroups.pop(0) # those are leading L's\n        if nw > 0:\n            if outcomes[-1] == 0:\n               lgroups.pop() # those are trailing L's\n\n        # close as many as possible, if can close all do as many of\n        # leading as possible\n        lgroups.sort()\n        #print(lgroups)\n\n\n        #print(leading_ls,lgroups,k,'base score:',score)\n        for grp in lgroups:\n            if k >= grp:\n               score += 2*grp+1\n               k -= grp\n            else:\n               score += 2*k\n               k = 0\n               break\n        \n        if k > 0:\n            score += 2*k\n            k = 0\n\n        return score\n\n\n\nif __name__ == '__main__':\n    IN = [x.strip() for x in sys.stdin.readlines()]\n\n    T = int(IN[0])\n    cur = 1\n    for ti in range(T):\n        n,k = [int(x) for x in IN[cur].split(' ')]\n        outcomes = [1 if c=='W' else 0 for c in IN[cur+1]]\n        res = solve(outcomes,k,IN[cur+1])\n        print(res)\n        cur += 2\n\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput=lambda: sys.stdin.readline().rstrip(\"\\r\\n\") #FOR READING STRING/TEXT INPUTS.\n \nt=int(input())\nfor _ in range(t):\n    n,k=[int(x) for x in input().split()]\n    s=list(input())\n    \n    #score=2*(Wcnts) - n(Wstreaks)\n    #n(Wstreaks)=n(Lstreaks excluding start and end) + 1\n    \n    Wcnts=min(s.count('W')+k,n)\n    \n    lStreaks=[]\n    isStart=True\n    lStreakLen=0\n    for c in s:\n        if c=='W':\n            isStart=False\n            if lStreakLen>0:\n                lStreaks.append(lStreakLen)\n            lStreakLen=0\n        else:\n            if isStart==False:\n                lStreakLen+=1\n    #don't add the last lStreakLen to lStreaks because it's the one at the end\n    lStreaks.sort(reverse=True)\n    while lStreaks and lStreaks[-1]<=k:\n        k-=lStreaks[-1]\n        lStreaks.pop()\n    \n    if Wcnts>0:\n        ans=2*Wcnts-(len(lStreaks)+1)\n    else:\n        ans=0\n    print(ans)"
        },
        {
            "language": 3,
            "solution": "from sys import stdin, stdout\nfrom math import floor, gcd, fabs, factorial, fmod, sqrt, inf, log, trunc\nfrom collections import defaultdict as dd, deque\nfrom heapq import merge, heapify, heappop, heappush, nsmallest\nfrom bisect import bisect_left as bl, bisect_right as br, bisect\n        \nmod = pow(10, 9) + 7\nmod2 = 998244353\n        \ndef inp(): return stdin.readline().strip()\ndef iinp(): return int(inp())\ndef out(var, end=\"\\n\"): stdout.write(str(var)+\"\\n\")\ndef outa(*var, end=\"\\n\"): stdout.write(' '.join(map(str, var)) + end)\ndef lmp(): return list(mp())\ndef mp(): return map(int, inp().split())\ndef smp(): return map(str, inp().split())\ndef l1d(n, val=0): return [val for i in range(n)]\ndef l2d(n, m, val=0): return [l1d(m, val) for j in range(n)]\ndef remadd(x, y): return 1 if x%y else 0\ndef ceil(a,b): return (a+b-1)//b\n  \ndef isprime(x):\n    if x<=1: return False\n    if x in (2, 3): return True\n    if x%2 == 0: return False\n    for i in range(3, int(sqrt(x))+1, 2):\n        if x%i == 0: return False\n    return True\n \nfor _ in range(int(inp())):\n    n, kx = lmp()\n    s = inp()\n    if s.count('W')==0:\n        print(max(0, 2*kx-1))\n        continue\n    c = 0\n    l = 0 \n    t = False\n    for i in s:\n        if i=='L': \n            l += 1\n            t = False\n        else:\n            if t: c+=2\n            else:\n                t = True\n                c += 1\n    i = 0\n    x = 0\n    ml = []\n    while i<n and s[i]=='L': i+=1\n    j = n-1\n    while j>-1 and s[j]=='L': j-=1\n    for k in range(i, j+1):\n        if s[k] == 'L':\n            x += 1\n        else:\n            if x!=0:\n                ml.append(x)\n                x = 0\n    ml.sort()\n    for i in ml:\n        if kx==0:\n            break\n        if kx>=i:\n            c += 2*i+1\n            l-=i\n            kx-=i\n        else:\n            c += 2*kx\n            l-=kx\n            kx = 0\n    if kx>0 and l>0:\n        c += 2*min(kx, l)\n    print(c)\n"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nfor _ in range(t):\n    n,k=list(map(int,input().split()))\n    s=str(input())\n    ind=[]\n    arr=[]\n    p=0\n    for i in range(n):\n        arr.append(s[i])\n        if s[i]==\"W\":\n            ind.append(i+1)\n            p+=1\n    if p==0:\n        if k==0:\n            print(0)\n        else:\n            print(1+(2*(k-1)))\n    else:\n        ans=0\n        i=0\n        q=-1\n        while i<n:\n            if arr[i]==\"W\":\n                ans+=1\n                q=i\n                break\n            i+=1\n        for i in range(q+1,n):\n            if arr[i]==\"W\":\n                if arr[i-1]==\"W\":\n                    ans+=2\n                else:\n                    ans+=1\n        if k==0:\n            print(ans)\n        else:\n            diff=[]\n            f=0\n            for i in range(p-1):\n                if ind[i+1]-ind[i]-1>0:\n                    diff.append(ind[i+1]-ind[i]-1)\n                    f+=1\n            diff.sort()\n            i=0\n            while k>0 and i<f:\n                if diff[i]==1:\n                    diff[i]-=1\n                    i+=1\n                    k-=1\n                    ans+=3\n                else:\n                    diff[i]-=1\n                    k-=1\n                    ans+=2\n            if k>0:\n                c=(ind[0]-1)+(n-ind[-1])\n                ans+=(2*min(c,k))\n            print(ans)\n            \n            "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint read() {\n  char c;\n  int num, f = 1;\n  while (c = getchar(), !isdigit(c))\n    if (c == '-') f = -1;\n  num = c - '0';\n  while (c = getchar(), isdigit(c)) num = num * 10 + c - '0';\n  return num * f;\n}\nint n, k, cnt, a[100009], tot, ans;\nchar c[100009];\nvoid work() {\n  n = read();\n  k = read();\n  cnt = 0;\n  tot = 0;\n  ans = 0;\n  scanf(\"%s\", c + 1);\n  for (int i = 1; i <= n; i++) cnt += c[i] == 'L';\n  for (int i = 1; i <= n; i++) {\n    if (c[i] == 'W') {\n      if (i == 1 || c[i - 1] == 'L')\n        ans++;\n      else\n        ans += 2;\n    }\n  }\n  if (k == 0) {\n    printf(\"%d\\n\", ans);\n    return;\n  }\n  if (k > cnt) {\n    printf(\"%d\\n\", 2 * n - 1);\n    return;\n  }\n  if (cnt == n) {\n    printf(\"%d\\n\", 2 * k - 1);\n    return;\n  }\n  int now = 1;\n  cnt = 0;\n  while (c[now] != 'W') now++;\n  for (; now <= n; now++) {\n    if (c[now] == 'W') {\n      if (cnt > 0) a[++tot] = cnt;\n      cnt = 0;\n    } else {\n      cnt++;\n    }\n  }\n  sort(a + 1, a + 1 + tot);\n  for (int i = 1; i <= tot; i++) {\n    if (k < a[i]) break;\n    k -= a[i];\n    ans += a[i] * 2 + 1;\n  }\n  if (k) ans += 2 * k;\n  printf(\"%d\\n\", ans);\n}\nint main() {\n  int Case = read();\n  while (Case--) work();\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Scanner;\nimport java.util.Collections;\nimport java.util.ArrayList;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        Scanner in = new Scanner(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskB solver = new TaskB();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class TaskB {\n        public void solve(int testNumber, Scanner in, PrintWriter out) {\n            int t = in.nextInt();\n            while (t-- > 0) {\n                int ans = 0;\n                int n = in.nextInt();\n                int k = in.nextInt();\n                String str = in.next();\n                int losses = 0;\n                int opt = 0;\n                ArrayList<Integer> rest = new ArrayList<>();\n                int start = 0, end = 0;\n                int count = 0;\n                for (int i = 0; i < n; i++) {\n                    if (i == 0 && str.charAt(i) == 'W') {\n                        ans++;\n                        continue;\n                    }\n                    if (str.charAt(i) == 'W')\n                        if (str.charAt(i - 1) == 'W')\n                            ans += 2;\n                        else\n                            ans++;\n                }\n                int flag = 0;\n                for (int i = 0; i < n; i++) {\n                    if (str.charAt(i) == 'L') {\n                        losses++;\n                        end++;\n                        if (flag == 0)\n                            start++;\n                    }\n                    if (i != 0 && i != n - 1) {\n                        if (str.charAt(i - 1) == 'W' && str.charAt(i + 1) == 'W' && str.charAt(i) == 'L') {\n                            opt++;\n                            continue;\n                        }\n                    }\n                    if (flag == 1) {\n                        if (str.charAt(i) == 'W' && count != 0 && flag == 1) {\n                            rest.add(count);\n                            count = 0;\n                        } else if (str.charAt(i) == 'L')\n                            count++;\n                    }\n                    if (str.charAt(i) == 'W') {\n                        flag = 1;\n                        end = 0;\n                    }\n                }\n                Collections.sort(rest);\n                if (k >= opt) {\n                    ans += 3 * opt;\n                    k -= opt;\n                } else {\n                    ans += 3 * k;\n                    k = 0;\n                }\n                for (int i = 0; i < rest.size(); i++) {\n                    int length = rest.get(i);\n                    if (length <= k) {\n                        ans += 2 * length + 1;\n                        k -= length;\n                    } else {\n                        ans += 2 * k;\n                        k = 0;\n                    }\n                }\n                if (k == 0) {\n                    out.println(ans);\n                    continue;\n                }\n                if (flag == 0) {\n                    if (k >= n)\n                        ans += 1 + 2 * (n - 1);\n                    else\n                        ans += 1 + 2 * (k - 1);\n                } else {\n                    if (k >= end) {\n                        ans += 2 * end;\n                        k -= end;\n                    } else {\n                        ans += 2 * k;\n                        k = 0;\n                    }\n                    if (k >= start) {\n                        ans += 2 * start;\n                        k -= start;\n                    } else {\n                        ans += 2 * k;\n                        k = 0;\n                    }\n                }\n                out.println(ans);\n            }\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class A {\n\tstatic FastReader f = new FastReader();\n\tstatic PrintWriter out = new PrintWriter(System.out);\n\n\tpublic static void main(String[] args) {\n\t\tint t = f.nextInt();\n\t\twhile(t-- > 0)\n\t\t\tsolve();\n\t\tout.close();\n\t}\n\n\tstatic void solve() {\n\t\tint n = f.nextInt(), k = f.nextInt();\n\n\t\tchar[] s = f.next().toCharArray();\n\t\tPriorityQueue<Pair> pairs = new PriorityQueue<>();\n\t\tint last = -1;\n\t\tint first = -1;\n\t\tfor(int i=0;i<n;i++) {\n\t\t\tif(s[i] == 'W') {\n\t\t\t\tif(last != -1) {\n\t\t\t\t\tif(last != first - 1) {\n\t\t\t\t\t\tPair p = new Pair(last, i);\n\t\t\t\t\t\tpairs.add(p);\n\t\t\t\t\t\t//System.out.println(\"deb \"+p.start+\" \"+p.end);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfirst = i;\n\t\t\t\t}\n\t\t\t\tlast = i;\n\t\t\t}\n\t\t}\n\n\t\tif(last == -1) {\n\t\t\tout.println(k==0? 0 : Math.min(n,k) * 2 - 1);\n\t\t\treturn;\n\t\t} \n\n\t\twhile(k > 0 && !pairs.isEmpty()) {\n\t\t\tPair now = pairs.poll();\n\t\t\t//System.out.println(\"deb \"+now.start+\" \"+now.end);\n\t\t\tfor(int i = now.start + 1;k>0 && i<now.end;i++) {\n\t\t\t\ts[i] = 'W';\n\t\t\t\tk--;\n\t\t\t}\n\t\t}\n\n\t\tfirst--;\n\t\tfor(int i=first;k>0 && i>=0;i--) {\n\t\t\tk--;\n\t\t\ts[i] = 'W';\n\t\t}\n\n\t\tlast++;\n\t\tfor(int i=last;k>0&&i<n;i++) {\n\t\t\ts[i] = 'W';\n\t\t\tk--;\n\t\t}\n\n\t\tlong ans = 0;\n\t\tfor(int i=0;i<n;i++) {\n\t\t\tif(s[i] == 'W') {\n\t\t\t\tif(i > 0 && s[i-1] == 'W') {\n\t\t\t\t\tans+=2;\n\t\t\t\t} else {\n\t\t\t\t\tans++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\n\t\tout.println(ans);\n\n\t}\n\n\tstatic class Pair implements Comparable<Pair> {\n\t\tint start, end;\n\t\tPair(int start, int end) {\n\t\t\tthis.start = start;\n\t\t\tthis.end = end;\n\t\t}\n\n\t\tpublic int compareTo(Pair o) {\n\t\t\tint size = end - start;\n\t\t\tint oSize = o.end - o.start;\n\t\t\tif(size == oSize) {\n\t\t\t\treturn start - o.start;\n\t\t\t}\n\t\t\treturn size - oSize;\n\t\t}\n\t}\n\n\n\tstatic class FastReader {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tStringTokenizer st;\n\n\t\tString next() {\n\t\t\twhile(st == null || !st.hasMoreElements()) {\n\t\t\t\ttry {\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\t} catch(IOException ioe) {\n\t\t\t\t\tioe.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tString nextLine() {\n\t\t\tString s = \"\";\n\t\t\ttry {\n\t\t\t\ts = br.readLine();\n\t\t\t} catch(IOException ioe) {\n\t\t\t\tioe.printStackTrace();\n\t\t\t}\n\n\t\t\treturn s;\n\t\t}\n\n\t\tint  nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tlong  nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\t}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int Max = 1e5 + 5;\nlong long lst[Max], sum[Max];\nconst int max_n = 1e5 + 100;\nchar a[max_n];\nbool cmp(pair<int, int> p1, pair<int, int> p2) {\n  if (p1.second == p1.first * 2 && p2.second == p2.first * 2)\n    return p1.first < p2.first;\n  else if (p1.second == p1.first * 2 + 1 && p2.second == p2.first * 2 + 1)\n    return p1.first < p2.first;\n  else if (p1.second == p1.first * 2 + 1)\n    return true;\n  else\n    return false;\n}\nint main() {\n  ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);\n  for (int i = 1; i <= 2; i++) {\n    {\n      {\n        {\n          {\n            {\n              {\n                {\n                  {\n                    {\n                      {\n                        {\n                          {\n                            {\n                              {\n                                {\n                                  {\n                                    {\n                                      {\n                                        {\n                                          {\n                                            {\n                                              {\n                                                {\n                                                  {\n                                                    { break; }\n                                                  }\n                                                }\n                                              }\n                                            }\n                                          }\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  for (int i = 1; i <= 2; i++) {\n    {\n      {\n        {\n          {\n            {\n              {\n                {\n                  {\n                    {\n                      {\n                        {\n                          {\n                            {\n                              {\n                                {\n                                  {\n                                    {\n                                      {\n                                        {\n                                          {\n                                            {\n                                              {\n                                                {\n                                                  {\n                                                    { break; }\n                                                  }\n                                                }\n                                              }\n                                            }\n                                          }\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  for (int i = 1; i <= 2; i++) {\n    {\n      {\n        {\n          {\n            {\n              {\n                {\n                  {\n                    {\n                      {\n                        {\n                          {\n                            {\n                              {\n                                {\n                                  {\n                                    {\n                                      {\n                                        {\n                                          {\n                                            {\n                                              {\n                                                {\n                                                  {\n                                                    { break; }\n                                                  }\n                                                }\n                                              }\n                                            }\n                                          }\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  for (int i = 1; i <= 2; i++) {\n    {\n      {\n        {\n          {\n            {\n              {\n                {\n                  {\n                    {\n                      {\n                        {\n                          {\n                            {\n                              {\n                                {\n                                  {\n                                    {\n                                      {\n                                        {\n                                          {\n                                            {\n                                              {\n                                                {\n                                                  {\n                                                    { break; }\n                                                  }\n                                                }\n                                              }\n                                            }\n                                          }\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  for (int i = 1; i <= 2; i++) {\n    {\n      {\n        {\n          {\n            {\n              {\n                {\n                  {\n                    {\n                      {\n                        {\n                          {\n                            {\n                              {\n                                {\n                                  {\n                                    {\n                                      {\n                                        {\n                                          {\n                                            {\n                                              {\n                                                {\n                                                  {\n                                                    { break; }\n                                                  }\n                                                }\n                                              }\n                                            }\n                                          }\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  for (int i = 1; i <= 2; i++) {\n    {\n      {\n        {\n          {\n            {\n              {\n                {\n                  {\n                    {\n                      {\n                        {\n                          {\n                            {\n                              {\n                                {\n                                  {\n                                    {\n                                      {\n                                        {\n                                          {\n                                            {\n                                              {\n                                                {\n                                                  {\n                                                    { break; }\n                                                  }\n                                                }\n                                              }\n                                            }\n                                          }\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  for (int i = 1; i <= 2; i++) {\n    {\n      {\n        {\n          {\n            {\n              {\n                {\n                  {\n                    {\n                      {\n                        {\n                          {\n                            {\n                              {\n                                {\n                                  {\n                                    {\n                                      {\n                                        {\n                                          {\n                                            {\n                                              {\n                                                {\n                                                  {\n                                                    { break; }\n                                                  }\n                                                }\n                                              }\n                                            }\n                                          }\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  for (int i = 1; i <= 2; i++) {\n    {\n      {\n        {\n          {\n            {\n              {\n                {\n                  {\n                    {\n                      {\n                        {\n                          {\n                            {\n                              {\n                                {\n                                  {\n                                    {\n                                      {\n                                        {\n                                          {\n                                            {\n                                              {\n                                                {\n                                                  {\n                                                    { break; }\n                                                  }\n                                                }\n                                              }\n                                            }\n                                          }\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  for (int i = 1; i <= 2; i++) {\n    {\n      {\n        {\n          {\n            {\n              {\n                {\n                  {\n                    {\n                      {\n                        {\n                          {\n                            {\n                              {\n                                {\n                                  {\n                                    {\n                                      {\n                                        {\n                                          {\n                                            {\n                                              {\n                                                {\n                                                  {\n                                                    { break; }\n                                                  }\n                                                }\n                                              }\n                                            }\n                                          }\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  for (int i = 1; i <= 2; i++) {\n    {\n      {\n        {\n          {\n            {\n              {\n                {\n                  {\n                    {\n                      {\n                        {\n                          {\n                            {\n                              {\n                                {\n                                  {\n                                    {\n                                      {\n                                        {\n                                          {\n                                            {\n                                              {\n                                                {\n                                                  {\n                                                    { break; }\n                                                  }\n                                                }\n                                              }\n                                            }\n                                          }\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  for (int i = 1; i <= 2; i++) {\n    {\n      {\n        {\n          {\n            {\n              {\n                {\n                  {\n                    {\n                      {\n                        {\n                          {\n                            {\n                              {\n                                {\n                                  {\n                                    {\n                                      {\n                                        {\n                                          {\n                                            {\n                                              {\n                                                {\n                                                  {\n                                                    { break; }\n                                                  }\n                                                }\n                                              }\n                                            }\n                                          }\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  for (int i = 1; i <= 2; i++) {\n    {\n      {\n        {\n          {\n            {\n              {\n                {\n                  {\n                    {\n                      {\n                        {\n                          {\n                            {\n                              {\n                                {\n                                  {\n                                    {\n                                      {\n                                        {\n                                          {\n                                            {\n                                              {\n                                                {\n                                                  {\n                                                    { break; }\n                                                  }\n                                                }\n                                              }\n                                            }\n                                          }\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  for (int i = 1; i <= 2; i++) {\n    {\n      {\n        {\n          {\n            {\n              {\n                {\n                  {\n                    {\n                      {\n                        {\n                          {\n                            {\n                              {\n                                {\n                                  {\n                                    {\n                                      {\n                                        {\n                                          {\n                                            {\n                                              {\n                                                {\n                                                  {\n                                                    { break; }\n                                                  }\n                                                }\n                                              }\n                                            }\n                                          }\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  int t;\n  scanf(\"%d\", &t);\n  while (t--) {\n    for (int i = 1; i <= 2; i++) {\n      {\n        {\n          {\n            {\n              {\n                {\n                  {\n                    {\n                      {\n                        {\n                          {\n                            {\n                              {\n                                {\n                                  {\n                                    {\n                                      {\n                                        {\n                                          {\n                                            {\n                                              {\n                                                {\n                                                  {\n                                                    {\n                                                      { break; }\n                                                    }\n                                                  }\n                                                }\n                                              }\n                                            }\n                                          }\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    for (int i = 1; i <= 2; i++) {\n      {\n        {\n          {\n            {\n              {\n                {\n                  {\n                    {\n                      {\n                        {\n                          {\n                            {\n                              {\n                                {\n                                  {\n                                    {\n                                      {\n                                        {\n                                          {\n                                            {\n                                              {\n                                                {\n                                                  {\n                                                    {\n                                                      { break; }\n                                                    }\n                                                  }\n                                                }\n                                              }\n                                            }\n                                          }\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    for (int i = 1; i <= 2; i++) {\n      {\n        {\n          {\n            {\n              {\n                {\n                  {\n                    {\n                      {\n                        {\n                          {\n                            {\n                              {\n                                {\n                                  {\n                                    {\n                                      {\n                                        {\n                                          {\n                                            {\n                                              {\n                                                {\n                                                  {\n                                                    {\n                                                      { break; }\n                                                    }\n                                                  }\n                                                }\n                                              }\n                                            }\n                                          }\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    for (int i = 1; i <= 2; i++) {\n      {\n        {\n          {\n            {\n              {\n                {\n                  {\n                    {\n                      {\n                        {\n                          {\n                            {\n                              {\n                                {\n                                  {\n                                    {\n                                      {\n                                        {\n                                          {\n                                            {\n                                              {\n                                                {\n                                                  {\n                                                    {\n                                                      { break; }\n                                                    }\n                                                  }\n                                                }\n                                              }\n                                            }\n                                          }\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    for (int i = 1; i <= 2; i++) {\n      {\n        {\n          {\n            {\n              {\n                {\n                  {\n                    {\n                      {\n                        {\n                          {\n                            {\n                              {\n                                {\n                                  {\n                                    {\n                                      {\n                                        {\n                                          {\n                                            {\n                                              {\n                                                {\n                                                  {\n                                                    {\n                                                      { break; }\n                                                    }\n                                                  }\n                                                }\n                                              }\n                                            }\n                                          }\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    for (int i = 1; i <= 2; i++) {\n      {\n        {\n          {\n            {\n              {\n                {\n                  {\n                    {\n                      {\n                        {\n                          {\n                            {\n                              {\n                                {\n                                  {\n                                    {\n                                      {\n                                        {\n                                          {\n                                            {\n                                              {\n                                                {\n                                                  {\n                                                    {\n                                                      { break; }\n                                                    }\n                                                  }\n                                                }\n                                              }\n                                            }\n                                          }\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    for (int i = 1; i <= 2; i++) {\n      {\n        {\n          {\n            {\n              {\n                {\n                  {\n                    {\n                      {\n                        {\n                          {\n                            {\n                              {\n                                {\n                                  {\n                                    {\n                                      {\n                                        {\n                                          {\n                                            {\n                                              {\n                                                {\n                                                  {\n                                                    {\n                                                      { break; }\n                                                    }\n                                                  }\n                                                }\n                                              }\n                                            }\n                                          }\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    int n, k;\n    scanf(\"%d %d\", &n, &k);\n    scanf(\"%s\", &a[1]);\n    bool flag = false;\n    int kk = 0;\n    for (int i = 1; i <= n; ++i)\n      if (a[i] == 'W')\n        flag = true;\n      else\n        ++kk;\n    k = min(kk, k);\n    int ans = 0;\n    for (int i = 1; i <= n; ++i) {\n      if (a[i] == 'W') {\n        if (a[i - 1] == 'W')\n          ans += 2;\n        else\n          ans++;\n      }\n    }\n    if (!flag) {\n      printf(\"%d\\n\", max(0, k * 2 - 1));\n      continue;\n    }\n    vector<pair<int, int> > res;\n    int cnt = 0;\n    int id1, id2;\n    for (id1 = 1; id1 <= n; ++id1) {\n      if (a[id1] == 'L')\n        ++cnt;\n      else {\n        if (cnt != 0) res.push_back(make_pair(cnt, 2 * cnt));\n        break;\n      }\n    }\n    cnt = 0;\n    for (id2 = n; id2 >= 1; --id2) {\n      if (a[id2] == 'L')\n        ++cnt;\n      else {\n        if (cnt != 0) res.push_back(make_pair(cnt, 2 * cnt));\n        break;\n      }\n    }\n    cnt = 0;\n    for (int i = id1; i <= id2; ++i) {\n      if (a[i] == 'L')\n        cnt++;\n      else {\n        if (cnt != 0) res.push_back(make_pair(cnt, cnt * 2 + 1));\n        cnt = 0;\n      }\n    }\n    sort(res.begin(), res.end(), cmp);\n    for (int i = 0; i < res.size(); ++i) {\n      if (k >= res[i].first) {\n        k -= res[i].first;\n        ans += res[i].second;\n      }\n    }\n    printf(\"%d\\n\", ans + k * 2);\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor _ in range(t):\n    n, k = [int(m) for m in input().split()]\n    s = list(input())\n    firstwin = s.index('W') if 'W' in s else -1\n    if firstwin == -1:\n        print(max(min(k, len(s)) * 2 - 1, 0))\n        continue\n    left = firstwin\n    noleft = True\n    A = []\n    front, back = None, None\n    if left != 0:\n        front = (0, left)\n    for i in range(firstwin, len(s)):\n        if s[i] == 'L' and noleft:\n            left = i\n            noleft = False\n        elif s[i] == 'W' and not noleft:\n            A.append((left, i))\n            noleft = True\n    if not noleft:\n        back = (left, len(s))\n    A.sort(key=lambda a : a[1] - a[0])\n    if k > 0:\n        for a in A:\n            for i in range(*a):\n                k -=1\n                s[i] = 'W'\n                if k <= 0:\n                    break\n            if k <= 0:\n                break\n    if k > 0:\n        if back:\n            for i in range(*back):\n                s[i] = 'W'\n                k -= 1\n                if k <= 0:\n                    break\n        if front and k > 0:\n            for i in reversed(range(*front)):\n                s[i] = 'W'\n                k -= 1\n                if k <= 0:\n                    break\n    res = 0 if s[0] == 'L' else 1\n    for i in range(1, len(s)):\n        if s[i] == 'W' == s[i - 1]:\n            res += 2\n        elif s[i] == 'W':\n            res += 1\n    print(res)"
        },
        {
            "language": 4,
            "solution": "import java.util.PriorityQueue;\nimport java.util.Scanner;\n \npublic class Main {\n    public static void main(String[]args){\n        Scanner in=new Scanner(System.in);\n        while(in.hasNext()){\n            int t=in.nextInt();\n            while(t-->0){\n\n            int n=in.nextInt();\n            int k=in.nextInt();\n            int i=0,j=n-1;\n            char[]ch=(in.next()+\"*\").toCharArray();\n            int l=0;\n            int r=0;\n            while(ch[i]=='L'){\n                l++;\n                i++;\n            }\n            while(ch[j]=='L'&&i<j){\n                r++;\n                j--;\n            }\n            if(l+r==n){\n                if(k==0)System.out.println(0);\n                else System.out.println(k*2-1);\n            }\n            else{\n                PriorityQueue<Integer>que=new PriorityQueue<Integer>();\n                char pre='L';\n                int cnt=0;\n                long ans=0;\n                for(int a=i;a<=j;a++){\n                    if(pre=='L'){\n                        if(ch[a]=='L'){\n                            cnt++;\n                        }else{\n                            que.add(cnt);\n                            cnt=0;\n                            ans+=1;\n                        }\n                    }else{\n                        if(ch[a]=='L'){\n                            cnt++;\n                        }else{\n                            ans+=2;\n                        }\n                    }\n                    pre=ch[a];\n                }\n                que.poll();\n                while(!que.isEmpty()){\n                    int a=que.poll();\n                    if(a<=k){\n                        k-=a;\n                        ans+=a*2+1;\n                        if(k==0)break;\n//                      System.out.println(ans+\"!\");\n                    }else{\n                        ans+=k*2;\n                        k=0;\n//                      System.out.println(ans+\"?\");\n                        break;\n                    }\n                }\n                ans+=Math.min(k, l+r)*2;\n                System.out.println(ans);\n            }                \n            }\n        }\n    }\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\nimport java.util.Stack;\n\npublic class Chess {\n    public static void main(String[] args) throws IOException {\n        //read\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        String[] s1;\n        char[] s2;\n        int t;\n        t = Integer.parseInt(br.readLine());\n        int[] res = new int[t];\n        for (int j = 0; j < t; j++) {\n            int n,k;\n            s1 = br.readLine().split(\" \");\n            s2 = br.readLine().toCharArray();\n            n = Integer.parseInt(s1[0]);\n            k = Integer.parseInt(s1[1]);\n            res = Score(n,k,s2,res,j);\n        }\n        for (int i = 0; i < t; i++) {\n            System.out.println(res[i]);\n        }\n\n    }\n    public static int[] Score(int n,int k,char [] s2,int[] res,int j){\n        int score = 0;\n        int l = 0;\n        int[] s = new int[n];\n        int tag = 0;\n        Stack<Integer> stack = new Stack<Integer>();\n        boolean flag = true;\n        if(s2[0] == 'W'){\n            score  = 1;\n            flag = false;\n        }else {\n            l++;\n        }\n        for (int i = 1; i < n; i++) {\n            if (s2[i] == 'W'){\n                if(s2[i-1] == 'W'){\n                    score += 2;\n                }else{\n                    score += 1;\n                    stack.push(l);\n                }\n            }else{\n                l++;\n            }\n        }\n        if(stack.isEmpty()){\n            if(score>0) {\n                res[j] = score + 2 * Math.min(k,l);\n                return res;\n            }\n            else{\n                if (k == 0){\n                    res[j] = 0;\n                    return res;\n                }\n                res[j] = 2 * k - 1;\n                return res;\n            }\n        }\n\n        int[] L = new int[stack.size()];\n        if(k>=l){\n            res[j] = 2*n-1;\n            return res;\n        }else{\n            for (int i = stack.size()-1; i > 0 ; i--) {\n                L[i] = stack.pop()-stack.peek();\n            }\n            L[0] = stack.peek();\n        }\n        if(flag){\n            tag = stack.peek();\n        }\n        Arrays.sort(L);\n        for (int i : L) {\n            if(i == 0){\n                continue;\n            }\n            if(k>0){\n                if(tag == i && flag){\n                    flag = false;\n                    continue;\n                }\n                if(k >= i){\n                    score = score + 2*i+1;\n                }else{\n                    score = score + 2*k;\n                }\n                k -= i;\n            }\n            else{\n                break;\n            }\n        }\n        if(k>0){\n            score = score + 2*k;\n        }\n        res[j] = score;\n        return res;\n    }\n}\n\t  \t\t\t  \t\t    \t\t\t \t\t\t\t \t\t\t  \t\t"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\nimport java.math.*;\n\npublic class Main \n\n{ \n\t static FastReader sc=new FastReader(); \n\t \n\t\t  public static void main(String[] args) \n    {\n\t\t\t  //StringBuffer sb=new StringBuffer(\"\");\n\t\t\t    int ttt =i(); \n\t\t        outer :while (ttt-- > 0) \n\t\t\t\t{\n\t\t        \tint n=i();\n\t\t        \tint k=i();\n\t\t        \tString s=s();\n\t\t        \tint w=0;\n\t\t        \tfor(int i=0;i<n;i++) {\n\t\t        \t\tif(s.charAt(i)=='W')\n\t\t        \t\t\tw++;\n\t\t        \t}\n\t\t        \t\n\t\t        \tint sum=0;\n\t\t        \tfor(int i=0;i<n;i++) {\n\t\t        \t\tif(s.charAt(i)=='W') {\n\t\t        \t\t\tif(i-1>=0 && s.charAt(i-1)=='W')\n\t\t        \t\t\t\tsum+=2;\n\t\t        \t\t\telse\n\t\t        \t\t\t\tsum+=1;\n\t\t        \t\t}\n\t\t        \t}\n\t\t        \tif(k==0) {\n\t\t        \t\tSystem.out.println(sum);\n\t\t        \t\tcontinue;\n\t\t        \t}\n                   if(w==0) {\n\t\t        \t\tsum+=1;\n\t\t        \t\tk-=1;\n\t\t        \t\tsum+=k*2;\n\t\t        \t\tSystem.out.println(sum);\n\t\t        \t\t\n\t\t        \t\tcontinue;\n\t\t        \t}\n\t\t        \tfor(int i=1;i<n-1;i++) {\n\t\t        \t\tif(s.charAt(i)=='L') {\n\t\t        \t\t\tif(s.charAt(i-1)=='W' && s.charAt(i+1)=='W') {\n\t\t        \t\t\t\tif(k>0) {\n\t\t        \t\t\t\t\tsum+=3;\n\t\t        \t\t\t\t\tk--;\n\t\t        \t\t\t\t}\n\t\t        \t\t\t}\n\t\t        \t\t\tif(k==0)\n\t\t        \t\t\t\tbreak;\n\t\t        \t\t\t\t\n\t\t        \t\t}\n\t\t        \t}\n\t\t        \tint c=0;\n\t\t        \tint ind=n;\n\t\t        \tArrayList<Integer> l=new ArrayList<Integer>();\n\t\t        \tfor(int i=0;i<n;i++) {\n\t\t        \t\tif(s.charAt(i)=='W') {\n\t\t        \t\t\tind=i;\n\t\t        \t\t\tbreak;\n\t\t        \t\t}\n\t\t        \t}\n\t\t        \tfor(int i=ind;i<n;i++) {\n\t\t        \t\tif(s.charAt(i)=='L')\n\t\t        \t\t\tc++;\n\t\t        \t\telse {\n\t\t        \t\t\tif(c>1)\n\t\t        \t\t\tl.add(c);\n\t\t        \t\t\tc=0;\n\t\t        \t\t}\n\t\t        \t}\n//\t\t        \tif(c>0)\n//\t\t        \t\tl.add(c);\n\t\t        \tl.sort(null);\n\t\t        \tfor(int i : l) {\n\t\t        \t\tif(i<=k) {\n\t\t        \t\t\tsum+=i*2+1;\n\t\t        \t\t\tk-=i;\n\t\t        \t\t}\n\t\t        \t\telse {\n\t\t        \t\t\tsum+=k*2;\n\t\t        \t\t\tk=0;\n\t\t        \t\t\tbreak;\n\t\t        \t\t}\n\t\t        \t}\n\t\t        \tif(k==0) {\n\t\t        \t\tSystem.out.println(sum);\n\t\t        \t\tcontinue outer;\n\t\t        \t}\n\t\t        \tint si=0,ei=0;\n\t\t        \tc=0;\n\t\t        \tfor(int i=0;i<n;i++) {\n\t\t        \t\tif(s.charAt(i)=='L')\n\t\t        \t\t\tc++;\n\t\t        \t\telse\n\t\t        \t\t{\n\t\t        \t\t\tsi=c;\n\t\t        \t\t\tbreak;\n\t\t        \t\t}\n\t\t        \t}\n\t\t        \tc=0;\n\t\t        \tfor(int i=n-1;i>=0;i--) {\n\t\t        \t\tif(s.charAt(i)=='L')\n\t\t        \t\t\tc++;\n\t\t        \t\telse\n\t\t        \t\t{\n\t\t        \t\t\tei=c;\n\t\t        \t\t\tbreak;\n\t\t        \t\t}\n\t\t        \t}\n\t\t        \tif(k>=ei) {\n\t\t        \t\tsum+=ei*2;\n\t\t        \t\tk-=ei;\n\t\t        \t}\n\t\t        \telse {\n\t\t        \t\tif(k>0) {\n\t\t        \t\t\tsum+=k*2;\n\t\t        \t\t\tk=0;\n\t\t        \t\t}\n\t\t        \t}\n\t\t        \tif(k>=si) {\n\t\t        \t\tsum+=si*2;\n\t\t        \t}\n\t\t        \telse {\n\t\t        \t\tif(k>0) {\n\t\t        \t\t\tsum+=k*2;\n\t\t        \t\t}\n\t\t        \t}\n\t\t        \tSystem.out.println(sum);\n\t\t        \t\n\t\t        \t\n\t\t        \t\n\t\t        \t\n\t\t        \t\n\t\t        \t\n\t\t        \t\n\t\t        \t\n\t\t\t\t}\n\t\t       // System.out.println(sb.toString());\n    }\n//\t\t static int c(String s,int i,int k,int sum) {\n//\t\t\t if(i>=s.length()||k==0)\n//\t\t\t\t return sum;\n//\t\t\t if(s.charAt(i)=='W')\n//\t\t\t\t return c(s,i+1,k,sum);\n//\t\t\t int op1=0,op2=0;\n//\t\t\t if(i-1>=0 && s.charAt(i-1)=='W')\n//\t\t\t\t op1=c(s,i+1,k-1,sum+2);\n//\t\t\t else\n//\t\t\t\t op2=1+c(s,i+1,k-1,sum+2);\n//\t\t\t return Math.max(op1, op2);\n//\t\t\t \n//\t\t\t \n//\t\t }\n\t\t  \n\t\t  \nstatic int[] input(int n) {\n\tint A[]=new int[n];\n\t   for(int i=0;i<n;i++) {\n\t\t   A[i]=sc.nextInt();\n\t   }\n\t   return A;\n   }\nstatic long[] inputL(int n) {\n\tlong A[]=new long[n];\n\t   for(int i=0;i<n;i++) {\n\t\t   A[i]=sc.nextLong();\n\t   }\n\t   return A;\n   }\nstatic String[] inputS(int n) {\n\tString A[]=new String[n];\n\t   for(int i=0;i<n;i++) {\n\t\t   A[i]=sc.next();\n\t   }\n\t   return A;\n   }\n\n\nstatic void input(int A[],int B[]) {\n\t   for(int i=0;i<A.length;i++) {\n\t\t   A[i]=sc.nextInt();\n\t\t   B[i]=sc.nextInt();\n\t   }\n}\nstatic int max(int A[]) {\n\tint max=Integer.MIN_VALUE;\n\tfor(int i=0;i<A.length;i++) {\n\t\tmax=Math.max(max, A[i]);\n\t}\n\treturn max;\n}\nstatic int min(int A[]) {\n\tint min=Integer.MAX_VALUE;\n\tfor(int i=0;i<A.length;i++) {\n\t\tmin=Math.min(min, A[i]);\n\t}\n\treturn min;\n}\nstatic long max(long A[]) {\n\tlong max=Long.MIN_VALUE;\n\tfor(int i=0;i<A.length;i++) {\n\t\tmax=Math.max(max, A[i]);\n\t}\n\treturn max;\n}\nstatic long min(long A[]) {\n\tlong min=Long.MAX_VALUE;\n\tfor(int i=0;i<A.length;i++) {\n\t\tmin=Math.min(min, A[i]);\n\t}\n\treturn min;\n}\nstatic long mod(long x) {\n\t int mod=1000000007;\n\t  return ((x%mod + mod)%mod);\n}\n\n     static int i() {\n    \t return sc.nextInt();\n     }\n     static String s() {\n    \t return sc.next();\n     }\n     static long l() {\n    \t return sc.nextLong();\n     }  \n     static void sort(int[] A){\n        int n = A.length;\n        Random rnd = new Random();\n        for(int i=0; i<n; ++i){\n            int tmp = A[i];\n            int randomPos = i + rnd.nextInt(n-i);\n            A[i] = A[randomPos];\n            A[randomPos] = tmp;\n        }\n        Arrays.sort(A);\n     }\n     static boolean prime(int n) \n\t    { \n\t        if (n <= 1) \n\t            return false; \n\t        if (n <= 3) \n\t            return true; \n\t        if (n % 2 == 0 || n % 3 == 0) \n\t            return false; \n\t        double sq=Math.sqrt(n);\n\t  \n\t        for (int i = 5; i <= sq; i = i + 6) \n\t            if (n % i == 0 || n % (i + 2) == 0) \n\t                return false; \n\t        return true; \n\t    } \n     static int gcd(int a, int b) \n     { \n         if (a == 0) \n             return b; \n         return gcd(b % a, a); \n     } \n  \n        \n        \n    static class FastReader \n    { \n        BufferedReader br; \n        StringTokenizer st; \n  \n        public FastReader() \n        { \n            br = new BufferedReader(new\n                     InputStreamReader(System.in)); \n        } \n  \n        String next() \n        { \n            while (st == null || !st.hasMoreElements()) \n            { \n                try\n                { \n                    st = new StringTokenizer(br.readLine()); \n                } \n                catch (IOException  e) \n                { \n                    e.printStackTrace(); \n                } \n            } \n            return st.nextToken(); \n        } \n  \n        int nextInt() \n        { \n            return Integer.parseInt(next()); \n        } \n  \n        long nextLong() \n        { \n            return Long.parseLong(next()); \n        } \n  \n        double nextDouble() \n        { \n            return Double.parseDouble(next()); \n        } \n  \n        String nextLine() \n        { \n            String str = \"\"; \n            try\n            { \n                str = br.readLine(); \n            } \n            catch (IOException e) \n            { \n                e.printStackTrace(); \n            } \n            return str; \n        } \n    } \n} \n\n\n\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n\n\tstatic Scanner scn = new Scanner(System.in);\n\tstatic StringBuilder sb = new StringBuilder();\n\n\tpublic static void main(String[] HastaLaVistaLa) {\n\t\tint t = scn.nextInt();\n\t\twhile(t-- > 0) solve();\n\t\tSystem.out.println(sb);\n\t}\n\n\tstatic int[] dp;\n\tstatic boolean[] vis;\n\tpublic static void solve() {\n\t\t// MOON news everywhere damn IT\n\t\tint n = scn.nextInt(), k = scn.nextInt();\n\t\tchar[] ch = scn.next().toCharArray();\n\t\tList<Integer> list = new ArrayList<>();\n\t\tchar prev = ch[0];\n\t\tint ans = 0;\n\t\tif(prev == 'W') { ans++; list.add(0); }\n\t\tfor(int i = 1; i < n; i++) {\n\t\t\tif(ch[i] == 'W') list.add(i);\n\t\t\tif(prev == 'W' && ch[i] == 'W') ans += 2;\n\t\t\telse if(prev == 'L' && ch[i] == 'W') ans++;\n\t\t\tprev = ch[i];\n\t\t}\n\t\tint mult = Math.min(n - list.size(), k);\n\t\tif(ans == 0) ans += (mult - 1)  * 2 + 1;\n\t\telse ans += (mult) * 2;\n\t\tint size = list.size();\n\t\tList<Integer> l = new ArrayList<>();\n\t\tfor(int i = 0; i + 1 < size; i++) {\n\t\t\tint gap = list.get(i + 1) - list.get(i);\n\t\t\tif(gap == 1) continue;\n\t\t\tl.add(gap);\n\t\t}\n\t\tCollections.sort(l);\n\t\tfor(int i : l) {\n\t\t\tif(i <= k + 1){\n\t\t\t\tans++;\n\t\t\t\tk -= i;\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\tans = Math.max(0, ans);\n\t\tsb.append(ans);\n\t\tsb.append(\"\\n\");\n\t}\n}"
        },
        {
            "language": 3,
            "solution": "import io\nimport os\nimport sys\nimport math\nfrom operator import attrgetter\nfrom typing import NamedTuple\nfrom collections import deque\n\n# sys.stdin = open('input.txt', 'r')\n# sys.stdout = open('output.txt', 'w')\n\ninput = sys.stdin.readline\n# fileno = sys.stdin.fileno()\n# input = io.BytesIO(\n# \tos.read(fileno, os.fstat(fileno).st_size)\n# ).readline\n\nclass Block(NamedTuple):\n\tsize: int\n\tprofit: int\n\tratio: float\n\n\tis_begin: bool\n\tis_end: bool\n\n\ndef fill_gap(size, is_begin, is_end, k):\n\ttake = min(size, k)\n\tinc = 2 * take\n\tif is_begin and (take == size or is_end):\n\t\tinc -= 1\n\tif not is_end and take == size:\n\t\tinc += 1 \n\treturn inc\n\n\nT = int(input())\nfor t in range(T):\n\tN, K = map(int, input().split())\n\tS = input().strip()\n\tloss = win = 0\n\tL = []\n\tcurrent_len = 0\n\tans = 0\n\tfor i, s in enumerate(S):\n\t\tif s == 'W':\n\t\t\tprev = S[i-1] if i else 'L'\n\t\t\tans += 2 if prev == 'W' else 1\n\t\t\twin += 1\n\t\t\tif current_len:\n\t\t\t\tprofit = fill_gap(\n\t\t\t\t\tsize=current_len,\n\t\t\t\t\tis_begin=current_len == i,\n\t\t\t\t\tis_end=False,\n\t\t\t\t\tk=N+1,\n\t\t\t\t)\n\t\t\t\tL.append(Block(\n\t\t\t\t\tcurrent_len,\n\t\t\t\t\tprofit,\n\t\t\t\t\tprofit / current_len,\n\t\t\t\t\tcurrent_len == i,\n\t\t\t\t\tFalse,\n\t\t\t\t))\n\t\t\tcurrent_len = 0\n\t\telse:\n\t\t\tcurrent_len += 1\n\t\t\tloss += 1\n\tif current_len:\n\t\tprofit = fill_gap(\n\t\t\tsize=current_len,\n\t\t\tis_begin=current_len==N,\n\t\t\tis_end=True,\n\t\t\tk=N+1,\n\t\t)\n\t\tL.append(Block(\n\t\t\tcurrent_len,\n\t\t\tprofit,\n\t\t\tprofit / current_len,\n\t\t\tis_begin=current_len==N,\n\t\t\tis_end=True,\n\t\t))\n\tL.sort(key=lambda block: (block.ratio, -block.size), reverse=True)\n\tif K >= loss:\n\t\tprint(N*2 - 1)\n\t\tcontinue\n\n\tfor block in L:\n\t\tif K == 0:\n\t\t\tbreak\n\t\t# print(block)\n\t\tans += fill_gap(block.size, block.is_begin, block.is_end, K)\n\t\tK -= min(K, block.size)\n\tprint(ans)"
        },
        {
            "language": 3,
            "solution": "import sys\nimport math\nfrom collections import defaultdict,Counter\nimport operator\ninput=sys.stdin.readline\ndef print(x):\n    sys.stdout.write(str(x)+\"\\n\")\n\n# sys.stdout=open(\"CP3/output.txt\",'w')\n# sys.stdin=open(\"CP3/input.txt\",'r')\n\n# mod=pow(10,9)+7\nt=int(input())\nfor i in range(t):\n\tn,k=map(int,input().split())\n\ts=input()\n\tc=0\n\tl=[]\n\tans=0\n\tfor j in range(n):\n\t\tif s[j]=='W':\n\t\t\tif j==0 or s[j-1]=='L':\n\t\t\t\tans+=1\n\t\t\telse:\n\t\t\t\tans+=2\n\tstart=-1\n\tfor j in range(n):\n\t\tif s[j]=='L':\n\t\t\tc+=1\n\t\t\tif start==-1:\n\t\t\t\tstart=j\n\t\telse:\n\t\t\tif c>0:\n\t\t\t\tif start==0:\n\t\t\t\t\tl.append([c,1])\n\t\t\t\telse:\n\t\t\t\t\tl.append([c,0])\n\t\t\t\tc=0\n\t\t\t\tstart=-1\n\tif c>0:\n\t\tif start==0:\n\t\t\tl.append([c,2])\n\t\telse:\n\t\t\tl.append([c,1])\n\t# print(ans)\n\tl.sort(key=operator.itemgetter(1,0))\n\t# print(l)\n\tfor j in l:\n\t\tif j[0]<=k:\n\t\t\tif j[1]==0:\n\t\t\t\tans+=2*j[0]+1\n\t\t\telif j[1]==1:\n\t\t\t\tans+=2*j[0]\n\t\t\telse:\n\t\t\t\tans+=2*j[0]-1\n\t\t\tk-=j[0]\n\t\telse:\n\t\t\tif j[1]==2:\n\t\t\t\tans+=max(0,2*k-1)\n\t\t\telse:\n\t\t\t\tans+=2*k\n\t\t\tbreak\n\tprint(ans)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long int mod2 = 1e9 + 7;\nbool prime(long long int n) {\n  if (n <= 1) return false;\n  if (n <= 3) return true;\n  if (n % 2 == 0 || n % 3 == 0) return false;\n  for (long long int i = 5; i * i <= n; i = i + 6)\n    if (n % i == 0 || n % (i + 2) == 0) return false;\n  return true;\n}\nbool isPerfectSquare(long long int x) {\n  long double sr = sqrt(x);\n  return ((sr - floor(sr)) == 0);\n}\nbool isPowerOfTwo(long long int n) { return n > 0 && !(n & (n - 1)); }\nbool subsequence_checker(string str1, string str2, long long int m,\n                         long long int n) {\n  if (m == 0) return true;\n  if (n == 0) return false;\n  if (str1[m - 1] == str2[n - 1])\n    return subsequence_checker(str1, str2, m - 1, n - 1);\n  return subsequence_checker(str1, str2, m, n - 1);\n}\nbool cmp(const pair<long long int, long long int> &a,\n         const pair<long long int, long long int> &b) {\n  if (a.first == b.first) return a.second < b.second;\n  return (a.first > b.first);\n}\nlong long int gcd(long long int p, long long int q) {\n  if (p % q == 0) return q;\n  return gcd(q, p % q);\n}\nlong long int countDigit(long long int n) { return floor(log10(n) + 1); }\nlong long int power(long long int a, long long int n) {\n  if (n == 0) return 1;\n  if (n % 2) return (a * power((a * a) % 998244353, n / 2)) % 998244353;\n  return power((a * a) % 998244353, n / 2);\n}\nlong long int countDivisors(long long int n) {\n  long long int count = 0;\n  for (long long int i = 1; i * i < n; i++) {\n    if (n % i == 0) count++;\n  }\n  for (long long int i = sqrt(n); i >= 1; i--) {\n    if (n % i == 0) count++;\n  }\n  return count;\n}\nvoid printDivisors(int n) {\n  for (int i = 1; i * i < n; i++) {\n    if (n % i == 0) cout << i << \" \";\n  }\n  for (int i = sqrt(n); i >= 1; i--) {\n    if (n % i == 0) cout << n / i << \" \";\n  }\n}\nlong long int setBitNumber(long long int n) {\n  n |= n >> 1;\n  n |= n >> 2;\n  n |= n >> 4;\n  n |= n >> 8;\n  n |= n >> 16;\n  n = n + 1;\n  return (n >> 1);\n}\nvoid solve() {\n  long long int n, k;\n  cin >> n >> k;\n  string s;\n  cin >> s;\n  long long int l = 0, w = 0;\n  long long int cur = 0, last = 0;\n  for (long long int i = 0; i < n; i++) {\n    if (s[i] == 'W') {\n      cur++;\n      if (last) cur++;\n      w++;\n      last++;\n    } else {\n      last = 0;\n      l++;\n    }\n  }\n  if (k == 0 or l == 0) {\n    cout << cur;\n    return;\n  }\n  if (k >= l) {\n    cout << 2 * (n - 1) + 1;\n    return;\n  }\n  last = -1;\n  map<long long int, long long int> m;\n  long long int fir = -1;\n  for (long long int i = 0; i < n; i++) {\n    if (s[i] == 'W') {\n      if (last == -1) {\n        last = i;\n        fir = i;\n      } else {\n        if (i - last - 1 == 0) {\n          last = i;\n          continue;\n        }\n        m[i - last - 1]++;\n        last = i;\n      }\n    }\n  }\n  if (last != -1)\n    fir += (n - last - 1);\n  else {\n    if (k == 1) {\n      cout << 1;\n    } else {\n      cout << 2 * (k - 1) + 1;\n    }\n    return;\n  }\n  for (auto i : m) {\n    long long int d = i.second;\n    long long int gap = i.first;\n    long long int fil = gap * d;\n    long long int bhadega = 2 * gap + 1;\n    if (k >= fil) {\n      k -= fil;\n      cur += bhadega * d;\n      if (k == 0) {\n        cout << cur;\n        return;\n      }\n    } else {\n      long long int can = k / gap;\n      cur += bhadega * can;\n      k -= can * gap;\n      cur += k * 2;\n      cout << cur;\n      return;\n    }\n  }\n  if (k < fir) {\n    cur += (k * 2);\n  } else {\n    cur += (fir * 2);\n  }\n  cout << cur;\n  return;\n}\nint main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  ;\n  long long int t;\n  cin >> t;\n  while (t--) {\n    solve();\n    cout << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "for _ in \" \"*int(input()):\n  n,k=map(int,input().split())\n  s=list(input())\n  if \"W\" not in s:\n    print(max((min(k,n)*2)-1,0))\n  elif k >= s.count(\"L\"):\n    print((n*2)-1)\n  else:\n    cnt,sm,ind=list(),s.count(\"W\"),s.index(\"W\")\n    for i in range(ind+1,n):\n      if s[i] == \"W\":\n        cnt.append(i-ind-1)\n        ind=i\n    cnt.sort()\n    for i in cnt:\n      if k >= i:\n        sm+=(2*i)+1\n        k-=i\n      else:\n        break;\n    if k>0:\n      sm+=(2*k)\n    print(sm)"
        },
        {
            "language": 3,
            "solution": "#   ==========     //\\\\       //||     ||====//||\n#       ||        //  \\\\        ||     ||   // ||\n#       ||       //====\\\\       ||     ||  //  ||\n#       ||      //      \\\\      ||     || //   ||\n#   ========== //        \\\\  ========  ||//====|| \n#  code\n\ndef solve():\n    n, m = map(int, input().split())\n    s = input()\n    s = s[:n]\n\n    p = 0\n    gaps = []\n    points = 0\n    lastsect = 0\n    firstsect = 0\n    wins = len(list(filter(lambda x : x == 'W', s)))\n\n    if wins == 0:\n        m = min(m, n)\n        if m == 0:\n            print(0)\n        else:\n            print(2 * m - 1)\n        return\n        \n    if m + wins >= n:\n        print(2 * n - 1)\n        return\n\n    i = 0\n    while i < n and s[i] == 'L':\n        i += 1\n    \n    firstsect = i\n\n    for j, v in enumerate(s[i:]):\n        if v == 'L':\n            p += 1\n        else:\n            if p > 0:\n                gaps.append(p)\n                p = 0\n            points += 1 + (1 if (j + i > 0 and s[j + i - 1] == 'W') else 0)\n    \n    if p > 0:\n        lastsect = p\n\n\n    gaps.sort()\n    # print(gaps, points)\n    i = 0\n    k = m\n    while i < len(gaps) and k > 0:\n        if gaps[i] > k:\n            points += 2 * k\n            k = 0\n        else:\n            points += 2 * gaps[i] + 1\n            k -= gaps[i]\n        i += 1\n    \n    points += 2 * min(k, firstsect)\n    k -= min(k, firstsect)\n    points += 2 * min(k, lastsect)\n    \n    print(points)\n\ndef main():\n    t = 1\n    t = int(input())\n    for _ in range(t):\n        solve()\n\nif __name__ == \"__main__\":\n    main()"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedOutputStream;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.util.*;\nimport java.util.stream.Collectors;\n\npublic class Main2 {\n\n    public static final BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n    public  static final OutputStream out = new BufferedOutputStream( System.out );\n    public static void main(String[] args) throws Exception {\n        int t = readInt();\n        while(t-- > 0) {\n            int[] inp = readIntArray();\n            int n = inp[0];\n            int k = inp[1];\n            String sn = readString();\n            sn = 'L' + sn;\n            StringBuilder s = new StringBuilder(sn);\n            boolean nw = true;\n            for (int i = 0; i <= n; i++) {\n                if(s.charAt(i)=='W') {\n                    nw = false;\n                }\n            }\n            if(nw==true) {\n                int ans = Math.max(k-1,0)*2;\n                if(k>=1) {\n                    ans++;\n                }\n                out.write((ans+\"\\n\").getBytes());\n                continue;\n            }\n            int pts =0;\n            int p=-1;\n            int lw=-1;\n            List<Integer> l = new ArrayList<>();\n            int fw=-2;\n            for (int i = 1; i <= n; i++) {\n                if(s.charAt(i)=='W') {\n                    lw=i;\n                    if(p==-1) {\n                        pts+=1;\n                        p = i;\n                        fw = p;\n                        continue;\n                    }\n                    else {\n                        if(p==i-1) {\n                            p=i;\n                            pts+=2;\n                            continue;\n                        }\n                        else {\n                            l.add(i-p-1);\n                            p=i;\n                            pts+=1;\n                        }\n                    }\n                }\n            }\n            Collections.sort(l);\n            for (int i = 0; i < l.size(); i++) {\n                if(k>0) {\n                    if(k>=l.get(i)) {\n                        k-=l.get(i);\n                        pts+= (2*l.get(i)+1);\n                    }\n                    else {\n                        pts+=(2*k);\n                        k=0;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n            pts += Math.min(k, fw-1)*2;\n            k-=Math.min(k,fw-1);\n            pts += Math.min(k, n-lw)*2;\n            out.write((pts+\"\\n\").getBytes());\n        }\n        out.flush();\n    }\n\n    private static String readString() throws Exception {\n        return br.readLine();\n    }\n\n    private static int readInt() throws Exception{\n        return Integer.parseInt(readString());\n    }\n\n    private static long readLong() throws Exception{\n        return Long.parseLong(readString());\n    }\n\n    private static double readDouble() throws Exception{\n        return Double.parseDouble(readString());\n    }\n\n    private static String[] readStringArray() throws Exception {\n        return br.readLine().split(\" \");\n    }\n\n    private static List<String> readStringList() throws Exception {\n        return Arrays.asList(readStringArray());\n    }\n\n    private static List<Integer> readIntList() throws Exception {\n        return readStringList().stream().map(s -> Integer.parseInt(s)).collect(Collectors.toList());\n    }\n\n    private static int[] readIntArray() throws Exception {\n        return readIntList().stream().mapToInt(i -> i).toArray();\n    }\n\n    private static List<Long> readLongList() throws Exception {\n        return readStringList().stream().map(s -> Long.parseLong(s)).collect(Collectors.toList());\n    }\n\n    private static long[] readLongArray() throws Exception {\n        return readLongList().stream().mapToLong(i -> i).toArray();\n    }\n\n    private static List<Double> readDoubleList() throws Exception {\n        return readStringList().stream().map(s -> Double.parseDouble(s)).collect(Collectors.toList());\n    }\n\n    private static double[] readDoubleArray() throws Exception {\n        return readDoubleList().stream().mapToDouble(i -> i).toArray();\n    }\n}\n\nclass Req {\n    int r;\n    int u;\n\n    public Req(int r, int u) {\n        this.r = r;\n        this.u = u;\n    }\n}"
        },
        {
            "language": 3,
            "solution": "import io\nimport os\n\nfrom collections import Counter, defaultdict, deque\n\n\ndef makeRepeat(arr):\n    repeat = [[arr[0], 0]]\n    for x in arr:\n        if x == repeat[-1][0]:\n            repeat[-1][1] += 1\n        else:\n            repeat.append([x, 1])\n    return repeat\n\n\ndef solve(N, K, S):\n    if all(x == \"L\" for x in S):\n        if K:\n            return (min(N, K) - 1) * 2 + 1\n        else:\n            return 0\n    repeats = makeRepeat(S)\n    firstStreak = 0\n    lastStreak = 0\n    if repeats[-1][0] == \"L\":\n        lastStreak = repeats.pop()[1]\n\n    if repeats and repeats[0][0] == \"L\":\n        firstStreak = repeats[0][1]\n        repeats = repeats[1:]\n\n    base = 0\n    streaks = []\n    for ch, repeat in repeats:\n        if ch == \"L\":\n            streaks.append(repeat)\n        else:\n            base += (repeat - 1) * 2 + 1\n    streaks.sort()\n\n    # print(S, K, base)\n    # print(streaks, lastStreak)\n\n    total = 0\n    for x in streaks:\n        if x <= K:\n            total += x * 2 + 1\n            K -= x\n        else:\n            x = min(K, x)\n            total += x * 2\n            K -= x\n    # print(\"after\", total, K, firstStreak, lastStreak)\n\n    if K and lastStreak:\n        x = min(K, lastStreak)\n        total += x * 2\n        K -= x\n\n    if K and firstStreak:\n        x = min(K, firstStreak)\n        total += x * 2\n        K -= x\n\n    return base + total\n\n\nif __name__ == \"__main__\":\n    input = io.BytesIO(os.read(0, os.fstat(0).st_size)).readline\n\n    TC = int(input())\n    for tc in range(1, TC + 1):\n        N, K = [int(x) for x in input().split()]\n        S = input().decode().rstrip()\n\n        ans = solve(N, K, S)\n        print(ans)\n\n"
        },
        {
            "language": 3,
            "solution": "for w in range(int(input())):\n    n,k=tuple(map(int,input().split()))\n    s=str(input())\n    if(k==n):\n        print(1+2*(n-1))\n    elif(n==1 and k>0):\n        print(1)\n    elif(n==1 and k==0):\n        if(s[0]=='W'):\n            print(1)\n        else:\n            print(0)\n    elif(k>=s.count('L')):\n        print(1+2*(n-1))\n    else:\n    #if(True):\n        ans=0\n        t1=0\n        l=[]\n        for  i in range(n):\n            if(s[i]=='W'):\n                if(i==0 or s[i-1]!='W'):\n                    ans+=1\n                else:\n                    ans+=2\n        i=0\n        while(i<n):\n            if(s[i]=='L'):\n                if(i==0):\n                  while(i<n and s[i]=='L'):\n                    t1+=1\n                    i+=1\n                elif(i==n-1):\n                    t1+=1\n                    i+=1\n                else:\n                    x=0\n                    while(i<n and s[i]=='L'):\n                        x+=1\n                        i+=1\n                    if(i!=n):\n                      l.append(x)\n                    else:\n                        t1+=x\n            else:\n                    i+=1\n        if(k==0):\n            print(ans)\n        elif(ans==0):\n            print(1+2*max(k-1,0))\n        elif(k>=sum(l)):\n            print(ans+2*k + len(l))\n        else:\n            l=sorted(l)\n            x=0\n            for i in range(len(l)):\n                x+=l[i]\n                if(x>k):\n                    break\n            print(ans+2*k+i)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstring s;\nstruct A {\n  int num;\n  int l;\n} ar[150000];\nbool cmp(A a, A b) {\n  if (a.l == b.l) return a.num < b.num;\n  return a.l < b.l;\n}\nint t, i, j, n, k;\nint main() {\n  cin >> t;\n  while (t--) {\n    for (int i = 1; i < 1000; i++)\n      ;\n    cin >> n >> k;\n    for (int i = 1; i < 1000; i++)\n      ;\n    int ans = 0;\n    for (int i = 1; i < 1000; i++)\n      ;\n    cin >> s;\n    for (int i = 1; i < 1000; i++)\n      ;\n    int c = 1;\n    for (int i = 1; i < 1000; i++)\n      ;\n    for (i = 0; i < n; i++) {\n      if (s[i] == 'L')\n        c = 1;\n      else {\n        ans += c;\n        if (c == 1) c = 2;\n      }\n    }\n    for (int i = 1; i < 1000; i++)\n      ;\n    int poswe = n, poswf = -1, now = 0;\n    for (int i = 1; i < 1000; i++)\n      ;\n    for (i = n - 1; i >= 0; i--) {\n      if (s[i] == 'W') {\n        poswe = i;\n        break;\n      }\n    }\n    for (int i = 1; i < 1000; i++)\n      ;\n    if (poswe == n) {\n      cout << (k != 0 ? 2 * k - 1 : 0) << endl;\n      continue;\n    }\n    for (int i = 1; i < 1000; i++)\n      ;\n    for (i = 0; i < n; i++) {\n      if (s[i] == 'W') {\n        poswf = i;\n        break;\n      }\n    }\n    for (int i = 1; i < 1000; i++)\n      ;\n    int me = poswf + (n - 1 - poswe);\n    int flag = 0, num = 0;\n    for (int i = 1; i < 1000; i++)\n      ;\n    for (i = poswf + 1; i < poswe; i++) {\n      if (s[i] == 'L')\n        num++, flag = 0;\n      else {\n        if (flag == 0 && num > 0) {\n          ar[++now].num = num * 2 + 1;\n          ar[now].l = num;\n          num = 0;\n        } else {\n          continue;\n        }\n      }\n    }\n    for (int i = 1; i < 1000; i++)\n      ;\n    if (num > 0) ar[++now].num = num * 2 + 1, ar[now].l = num, num = 0;\n    for (int i = 1; i < 1000; i++)\n      ;\n    sort(ar + 1, ar + 1 + now, cmp);\n    for (i = 1; i <= now; i++) {\n      for (int i = 1; i < 1000; i++)\n        ;\n      if (ar[i].l <= k) {\n        ans += ar[i].num;\n        k -= ar[i].l;\n      } else {\n        ans += k * 2;\n        k = 0;\n        break;\n      }\n      for (int i = 1; i < 1000; i++)\n        ;\n    }\n    for (int i = 1; i < 1000; i++)\n      ;\n    if (k > 0) ans += min(2 * k, me * 2);\n    for (int i = 1; i < 1000; i++)\n      ;\n    cout << ans << endl;\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid toUpperCase(string s) {\n  for (int i = 0; i < s.size(); i++) {\n    if (s[i] >= 'a' && s[i] <= 'z') {\n      s[i] = s[i] - 32;\n    }\n  }\n  cout << s;\n}\nbool isPrime(int n) {\n  if (n <= 1) return false;\n  for (int i = 2; i <= sqrt(n); i++)\n    if (n % i == 0) return false;\n  return true;\n}\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    long long kqua = 0;\n    long long n, k, i;\n    cin >> n >> k;\n    string s;\n    cin >> s;\n    s = ' ' + s;\n    int check = 0;\n    long long a[100001];\n    long long b[100001];\n    a[0] = 0;\n    for (i = 1; i <= n; i++) {\n      if (s[i] == 'W') {\n        if (s[i - 1] == 'W') {\n          kqua += 2;\n        } else\n          kqua += 1;\n      }\n    }\n    if (k == 0) {\n      cout << kqua << endl;\n      continue;\n    }\n    if (kqua == 0) {\n      cout << k * 2 - 1 << endl;\n      continue;\n    }\n    for (i = 1 + (s[1] == 'L'); i <= n - (s[n] == 'L'); i++) {\n      if (s[i] == 'W') {\n        check = check + 1;\n        a[check] = i;\n      }\n    }\n    for (i = 2; i <= check; i++) {\n      b[i] = a[i] - a[i - 1] - 1;\n    }\n    sort(b + 1, b + check + 1);\n    for (i = 1; i <= check; i++)\n      if (b[i])\n        if (k >= b[i]) {\n          kqua = kqua + b[i] * 2 + 1;\n          k = k - b[i];\n          if (k == 0) break;\n        } else {\n          kqua += k * 2;\n          k = 0;\n          break;\n        }\n    if (k) {\n      kqua = min(kqua + k * 2, n * 2 - 1);\n    }\n    kqua = min(kqua, n * 2 - 1);\n    cout << kqua << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "\"\"\"\n    Author - Satwik Tiwari .\n    18th Feb , 2021  - Thursday\n\"\"\"\n\n#===============================================================================================\n#importing some useful libraries.\n\nfrom __future__ import division, print_function\nfrom fractions import Fraction\nimport sys\nimport os\nfrom io import BytesIO, IOBase\nfrom functools import cmp_to_key\n\n# from itertools import *\nfrom heapq import *\nfrom math import gcd, factorial,floor,ceil,sqrt,log2\n\nfrom copy import deepcopy\nfrom collections import deque\n\n\nfrom bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom bisect import bisect\n\n#==============================================================================================\n#fast I/O region\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\ndef print(*args, **kwargs):\n    \"\"\"Prints the values to a stream, or to sys.stdout by default.\"\"\"\n    sep, file = kwargs.pop(\"sep\", \" \"), kwargs.pop(\"file\", sys.stdout)\n    at_start = True\n    for x in args:\n        if not at_start:\n            file.write(sep)\n        file.write(str(x))\n        at_start = False\n    file.write(kwargs.pop(\"end\", \"\\n\"))\n    if kwargs.pop(\"flush\", False):\n        file.flush()\n\n\nif sys.version_info[0] < 3:\n    sys.stdin, sys.stdout = FastIO(sys.stdin), FastIO(sys.stdout)\nelse:\n    sys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\n\n# inp = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\n#===============================================================================================\n### START ITERATE RECURSION ###\nfrom types import GeneratorType\ndef iterative(f, stack=[]):\n  def wrapped_func(*args, **kwargs):\n    if stack: return f(*args, **kwargs)\n    to = f(*args, **kwargs)\n    while True:\n      if type(to) is GeneratorType:\n        stack.append(to)\n        to = next(to)\n        continue\n      stack.pop()\n      if not stack: break\n      to = stack[-1].send(to)\n    return to\n  return wrapped_func\n#### END ITERATE RECURSION ####\n\n#===============================================================================================\n#some shortcuts\n\ndef inp(): return sys.stdin.readline().rstrip(\"\\r\\n\") #for fast input\ndef out(var): sys.stdout.write(str(var))  #for fast output, always take string\ndef lis(): return list(map(int, inp().split()))\ndef stringlis(): return list(map(str, inp().split()))\ndef sep(): return map(int, inp().split())\ndef strsep(): return map(str, inp().split())\n# def graph(vertex): return [[] for i in range(0,vertex+1)]\ndef testcase(t):\n    for pp in range(t):\n        solve(pp)\ndef google(p):\n    print('Case #'+str(p)+': ',end='')\ndef lcm(a,b): return (a*b)//gcd(a,b)\ndef power(x, y, p) :\n    y%=(p-1)  #not so sure about this. used when y>p-1. if p is prime.\n    res = 1     # Initialize result\n    x = x % p  # Update x if it is more , than or equal to p\n    if (x == 0) :\n        return 0\n    while (y > 0) :\n        if ((y & 1) == 1) : # If y is odd, multiply, x with result\n            res = (res * x) % p\n\n        y = y >> 1      # y = y/2\n        x = (x * x) % p\n    return res\ndef ncr(n,r): return factorial(n) // (factorial(r) * factorial(max(n - r, 1)))\ndef isPrime(n) :\n    if (n <= 1) : return False\n    if (n <= 3) : return True\n    if (n % 2 == 0 or n % 3 == 0) : return False\n    i = 5\n    while(i * i <= n) :\n        if (n % i == 0 or n % (i + 2) == 0) :\n            return False\n        i = i + 6\n    return True\ninf = pow(10,20)\nmod = 10**9+7\n#===============================================================================================\n# code here ;))\n\n\ndef solve(case):\n    n,k = sep()\n    s = list(inp())\n\n    have = []\n    cnt = 0\n    i = 0\n    while(i < n):\n        if(s[i] == 'W'):\n            cnt = 0\n            j = i+1\n            while(j < n and s[j] == 'L'):\n                j += 1\n                cnt += 1\n            if(cnt > 0 and j < n): have.append(cnt)\n            i = j\n        else:\n            i += 1\n\n    tot = s.count('L')\n\n    if(k >= tot):\n        print(2*(n-1) + 1)\n        return\n\n    if(s.count('W') == 0):\n        print(max(0,2*(k-1) + 1))\n        return\n\n    ans = 0\n    for i in range(n):\n        if(s[i] == 'W'):\n            if(i-1 >= 0 and s[i-1] == 'W'): ans += 2\n            else: ans += 1\n\n    have.sort()\n    i = 0\n    while(k > 0 and i < len(have)):\n        if(have[i] > k):\n            ans += 2*k\n        else:\n            ans += 2*have[i] + 1\n        k -= have[i]\n        i += 1\n        # print(ans,k,i)\n\n    if(k > 0): ans += 2*k\n    print(ans)\n\n\n\n# testcase(1)\ntestcase(int(inp()))\n\n\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n, k = map(int, input().split())\n    a = input()\n    b = []\n    b1 = []\n    c = []\n    t = 0\n    count = 0\n    ans = 0\n    m = n - 1\n    if a[0] == 'L':\n        while t < n and a[t] == 'L':\n            count += 1\n            t += 1\n        b1.append(count)\n        count = 0\n    if a[-1] == 'L':\n        while m >= 0 and a[m] == 'L':\n            count += 1\n            m -= 1\n        b1.append(count)\n        count = 0\n    while t <= m:\n        if a[t] == 'W':\n            while t <= m and a[t] == 'W':\n                count += 1\n                t += 1\n            c.append(count)\n            count = 0\n        else:\n            while t <= m and a[t] == 'L':\n                count += 1\n                t += 1\n            b.append(count)\n            count = 0\n    for i in c:\n        ans += 2 * i - 1\n    b.sort()\n    if b1 and b1[-1] == n:\n        ans += max(min(n, k) * 2 - 1, 0)\n    else:\n        for i in b:\n            if i <= k:\n                ans += 2 * i + 1\n                k -= i\n            else:\n                ans += k * 2\n                k = 0\n            if not k:\n                break\n        if k and b1:\n            ans += min(sum(b1), k) * 2\n\n    print(ans)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nbool comp(pair<int, int> a, pair<int, int> b) {\n  return a.second - a.first + 1 < b.second - b.first + 1;\n}\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    int n, c, f = 0;\n    cin >> n >> c;\n    string s;\n    cin >> s;\n    vector<pair<int, int>> v;\n    int st = -1, ed = -1;\n    for (int i = 0; i < n - 1; i++) {\n      if (s[i] == 'W' && s[i + 1] != 'W' && st == -1) st = i + 1;\n      if (s[i] != 'W' && s[i + 1] == 'W' && st != -1) {\n        ed = i;\n        v.push_back({st, ed});\n        st = -1;\n        ed = -1;\n      }\n      if (s[i] == 'W') f = 1;\n    }\n    sort(v.begin(), v.end(), comp);\n    for (int i = 0; i < v.size(); i++) {\n      for (int k = v[i].first; k <= v[i].second && c > 0; k++) {\n        s[k] = 'W';\n        c--;\n      }\n      if (c == 0) break;\n    }\n    if (c > 0) {\n      for (int i = 1; i < n && c > 0; i++) {\n        if (s[i] != 'W' && s[i - 1] == 'W') {\n          s[i] = 'W';\n          c--;\n        }\n      }\n    }\n    for (int i = n - 1; i > 0 && c > 0; i--) {\n      if (s[i] == 'W' && s[i - 1] != 'W') {\n        s[i - 1] = 'W';\n        c--;\n      }\n    }\n    if (c > 0 && f != 0)\n      s[0] = 'W';\n    else if (f == 0) {\n      for (int i = 0; i < n && c > 0; i++) {\n        s[i] = 'W';\n        c--;\n      }\n    }\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n      if (s[i] == 'W' && i == 0)\n        ans++;\n      else if (s[i] == 'W' && s[i - 1] == 'W')\n        ans += 2;\n      else if (s[i] == 'W' && s[i - 1] != 'W')\n        ans++;\n    }\n    cout << ans << endl;\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "import math\n\nt = int(input())\n\nfor q in range(t):\n    n, k = [int(i) for i in input().split()]\n    s = input()\n    C = []\n    b = False\n    p = 0\n    rest = 0\n    for i in s:\n        if i == 'W' and not b:\n            b = True\n        elif i == 'L' and b:\n            p += 1\n        elif i == 'W' and b and p:\n            if p:\n                C.append(p)\n            p = 0\n        elif i == 'L' and not b:\n            rest += 1\n    C.sort()\n    prof = 0\n    rest += p\n    for i in C:\n        if k >= i:\n            prof += 2 * i + 1\n            k -= i\n        else:\n            prof += k * 2\n            k = 0\n            break\n    if k:\n        if k >= rest:\n            prof += rest * 2\n            k -= rest\n        else:\n            prof += k * 2\n            k = 0\n    #print(k, end = ' ')\n    if rest == len(s) and prof:\n        prof -= 1\n    res = 0\n    b = False\n    for i in s:\n        if i == 'W' and b:\n            res += 2\n        elif i == 'W' and not b:\n            res += 1\n            b = True\n        else:\n            b = False\n    print(prof + res)\n    \n    \n        \n        \n"
        },
        {
            "language": 3,
            "solution": "# only gravity will pull me down\n\nfrom collections import *\nfrom math import *\n\nM = 10**9+7\n\nfor _ in range(int(input())) :\n\tn,k = map(int, input().split())\n\ts = input()\n\ts=list(s)\n\tmp=[]\n\tcntL=0\n\tres=0\n\tfor ch in s :\n\t\tif ch=='L':\n\t\t\tcntL+=1\n\tif cntL <= k:\n\t\tres = 1+(n-1)*2\n\telse :\n\t\tcnt=0\n\t\tf=0\n\t\tfor i in range(n) :\n\t\t\tif s[i]=='L':\n\t\t\t\tcnt+=1\n\t\t\telse :\n\t\t\t\tif cnt and f:\n\t\t\t\t\tmp.append([cnt,i-cnt])\n\t\t\t\tf=1\n\t\t\t\tcnt=0\n\t\tmp.sort()\n\t\t#print(mp)\n\t\tfor p in mp:\n\t\t\tfor i in range(p[0]+p[1]-1,p[1]-1,-1) :\n\t\t\t\tif not k:\n\t\t\t\t\tbreak\n\t\t\t\ts[i]='W'\n\t\t\t\tk-=1\n\t\tif k:\n\t\t\tf=0\n\t\t\tfor i in range(n) :\n\t\t\t\tif s[i]=='L' and f:\n\t\t\t\t\ts[i]='W'\n\t\t\t\t\tk-=1\n\t\t\t\telif s[i]=='W':\n\t\t\t\t\tf=1\n\t\t\t\tif not k:\n\t\t\t\t\tbreak;\n\t\tif k:\n\t\t\tfor i in range(n-1,0,-1) :\n\t\t\t\tif s[i]=='L':\n\t\t\t\t\ts[i]='W'\n\t\t\t\t\tk-=1\n\t\t\t\tif not k:\n\t\t\t\t\tbreak\n\t\tif s[0]=='W':\n\t\t\tres+=1\n\t\tfor i in range(1,n) :\n\t\t\tif s[i]=='W':\n\t\t\t\tif s[i-1]=='W':\n\t\t\t\t\tres+=2\n\t\t\t\telse:\n\t\t\t\t\tres+=1\n\tprint(res)"
        },
        {
            "language": 3,
            "solution": "import sys\nt=int(input())\nfor i in range(t):\n    n,k=map(int,input().split())\n    s=sys.stdin.readline().strip()\n    s=list(s)\n    q=0\n    p=[]\n    for j in range(n):\n        if s[j]=='W':\n            if q>0:\n                p.append([q,j-1])\n            q=0\n        else:\n            q=q+1\n    if q>0:\n        if p==[] and s[0]!='W':\n            p.append([q,n-1])\n        else:\n            p.append([q,n-q])\n        q=0\n    if p:\n        e1=[]\n        e2=[]\n        if s[0]=='L':\n            e1.append(p[0])\n            del p[0]\n        if p:\n            if s[-1]=='L':\n                e2.append(p[-1])\n                del p[-1]\n        p.sort()\n        p=p+e1\n        j=0\n        l=len(p)\n        while k>0 and j<l:\n            v=p[j][1]\n            while v>=0 and s[v]=='L' and k>0:\n                s[v]='W'\n                v=v-1\n                k=k-1\n            j=j+1\n        if k>0 and e2:\n            j=e2[0][1]\n            while k>0 and j<n:\n                s[j]='W'\n                k=k-1\n                j=j+1\n    w=0\n    for j in range(1,n):\n        if s[j]==s[j-1] and s[j]=='W':\n            w=w+2\n        elif s[j]=='W':\n            w=w+1\n    if s[0]=='W':\n        w=w+1\n    print(w)"
        },
        {
            "language": 4,
            "solution": "//Some of the methods are copied from GeeksforGeeks Website  \nimport java.util.*;\nimport java.lang.*;\nimport java.io.*;\npublic class Main\n{ \n  //static Scanner sc=new Scanner(System.in)\n  //static  Reader sc=new Reader();\n   static FastReader sc=new FastReader(System.in);\n  \n  static long mod = (long)(1e9)+ 7;\n  static int max_num=(int)1e5+5;\n  static long solve(char a[],int n)\n   {\n      long cur=0;\n      long sum=0;\n      for(int i=0;i<n;i++)\n        {\n           if(a[i]=='W')\n            {\n               cur++;\n               cur=Math.min(cur,2);\n            }\n          else\n           cur=0;\n          sum+=cur;\n        }\n      return sum;\n   }\n static class StudentComparator implements Comparator<Pair>{\n              \n            // Overriding compare()method of Comparator \n                        // for descending order of cgpa\n            public int compare(Pair s1, Pair s2) {\n                if (s1.l > s2.l)\n                    return 1;\n                else if (s1.l==s2.l)\n                 {\n                  if(s1.y<s2.y) return -1;\n                  else return 1;\n                 }\n                 else\n                    return -1;\n                }\n        }\n public static void main (String[] args) throws java.lang.Exception\n   {\n\t//try{\n\t    /*\n\t        int n=sc.nextInt();\n\t        Collections.sort(al,Collections.reverseOrder());\n\t     \n\t        long n=sc.nextLong();\n\t        String s=sc.next();\n\t        StringBuilder sb=new StringBuilder();\n\t     */\n\t\t  int t = sc.nextInt();\n\t\t  while(t-->0)\n\t\t    { \n\t\t       int n=sc.nextInt();\n\t\t       int k=sc.nextInt();\n\t\t       String s=sc.next();\n\t\t\n\t\t       char a[]=s.toCharArray();\n\t\t       int first=n,last=-1;\n\t\t       for(int i=0;i<n;i++)\n\t\t        {\n\t\t           if(a[i]=='W')\n\t\t             {\n\t\t                first=Math.min(first,i);\n\t\t                last=Math.max(last,i);\n\t\t             }\n\t\t        }\n\t\t       ArrayList<Pair> al=new ArrayList<Pair>();\n\t\t       int st=-1,la=-1;\n\t\t       boolean trigger=false;\n\t\t       for(int i=0;i<n;i++)\n\t\t         {\n\t\t            if(a[i]=='W')\n\t\t             {\n\t\t                \n\t\t              if(trigger)\n\t\t                  {\n\t\t                     al.add(new Pair(st,i,i-st-1));\n\t\t                     trigger=false;\n\t\t                     st=i;\n\t\t                  }\n\t\t             else\n\t\t               st=i;\n\t\t             }\n\t\t           else\n\t\t             {\n\t\t                if(st!=-1)\n\t\t                  {\n\t\t                    trigger=true;\n\t\t                    \n\t\t                  }\n\t\t             }\n\t\t         }\n\t\t       Collections.sort(al,new StudentComparator());\n\t\t       //for(int i=0;i<al.size();i++)\n\t\t       // out.println(al.get(i).x+\" \"+al.get(i).y+\" \"+al.get(i).l+\" \");\n\t\t       boolean ses=false;\n\t\t       for(int i=0;i<al.size();i++)\n\t\t         {\n\t\t            int start=al.get(i).x;\n\t\t            int end=al.get(i).y;\n\t\t            \n\t\t            for(int j=start+1;j<end;j++)\n\t\t              {\n\t\t                 if(k<=0)\n\t\t                  {\n\t\t                     ses=true;\n\t\t                     break;\n\t\t                  }\n\t\t                 a[j]='W';\n\t\t                 k--;\n\t\t              }\n\t\t         }\n\t\t      if(!ses)\n\t\t       {\n\t\t          for(int i=first-1;i>=0;i--)\n\t\t             {\n\t\t                if(k<=0)\n\t\t                 {\n\t\t                     ses=true;\n\t\t                     break; \n\t\t                 }\n\t\t                a[i]='W';\n\t\t                k--;\n\t\t             }\n\t\t       }\n\t\t     if(!ses)\n\t\t       {\n\t\t          for(int i=last+1;i<n;i++)\n\t\t             {\n\t\t                if(k<=0)\n\t\t                 {\n\t\t                     ses=true;\n\t\t                     break; \n\t\t                 }\n\t\t                a[i]='W';\n\t\t                k--;\n\t\t             }\n\t\t       }\n\t\t       \n\t\t      // out.println(new String(a));\n\t\t      long ans=solve(a,n);\n\t\t      out.println(ans);\n\t\t    }\n\t     out.flush();\n\t     out.close();\n// \t   }     \n// \tcatch(Exception e)\n// \t\t {}\n\t}\n \n /*\n   ...SOLUTION ENDS HERE...........SOLUTION ENDS HERE...\n */\n \nstatic void flag(boolean flag)\n   {\n       out.println(flag ? \"YES\" : \"NO\");\n       out.flush();\n   }\n   \n /*                     \n    Map<Long,Long> map=new HashMap<>();\n             for(int i=0;i<n;i++)\n               {\n                  if(!map.containsKey(a[i]))\n                   map.put(a[i],1);\n                 else\n                   map.replace(a[i],map.get(a[i])+1);\n               }\n     \n    Set<Map.Entry<Long,Long>> hmap=map.entrySet();\n             for(Map.Entry<Long,Long> data : hmap)\n               {\n          \n               }\n       \n   */\n   \n static class Pair\n   {\n      int x,y,l;\n      Pair(int x,int y,int l)\n       {\n          this.x=x;\n          this.y=y;\n          this.l=l;\n       }\n   }\n\n//  Arrays.sort(p, new Comparator<Pair>()\n//     {\n//        @Override\n//        public int compare(Pair o1,Pair o2)\n//        {\n//           if(o1.x>o2.x) return 1;\n//           else if(o1.x==o2.x)\n//             {\n//                if(o1.y>o2.y) return 1;\n//                else return -1;\n//              }\n//           else return -1;\n//       }});\n\nstatic void print(int a[])\n  {\n     int n=a.length;\n     for(int i=0;i<n;i++)\n       {\n          out.print(a[i]+\" \");\n       }\n     out.println();\n     out.flush();\n  }\nstatic void print(long a[])\n  {\n     int n=a.length;\n     for(int i=0;i<n;i++)\n       {\n          out.print(a[i]+\" \");\n       }\n     out.println();\n     out.flush();\n  } \nstatic void print_int(ArrayList<Integer> al)\n  {\n     int si=al.size();\n     for(int i=0;i<si;i++)\n       {\n          out.print(al.get(i)+\" \");\n       }\n     out.println();\n     out.flush();\n  }\nstatic void print_long(ArrayList<Long> al)\n  {\n     int si=al.size();\n     for(int i=0;i<si;i++)\n       {\n          out.print(al.get(i)+\" \");\n       }\n     out.println();\n     out.flush();\n  }\n  \nstatic int LowerBound(int a[], int x) \n { // x is the target value or key\n  int l=-1,r=a.length;\n  while(l+1<r) {\n    int m=(l+r)>>>1;\n    if(a[m]>=x) r=m;\n    else l=m;\n  }\n  return r;\n}\n\n static int UpperBound(int a[], int x)\n  {// x is the key or target value\n    int l=-1,r=a.length;\n    while(l+1<r) {\n       int m=(l+r)>>>1;\n       if(a[m]<=x) l=m;\n       else r=m;\n    }\n    return l+1;\n }\nstatic void DFS(ArrayList<Integer> graph[],boolean[] visited, int u)\n\t{\n        visited[u]=true;\n        int v=0;\n        for(int i=0;i<graph[u].size();i++)\n        {\n            v=graph[u].get(i);\n            if(!visited[v])\n               DFS(graph,visited,v);\n        }\n  } \nstatic boolean[] prime(int num)\n {\n\t      boolean[] bool = new boolean[num];\n\t\t     \n\t\t      for (int i = 0; i< bool.length; i++) {\n\t\t         bool[i] = true;\n\t\t      }\n\t\t      for (int i = 2; i< Math.sqrt(num); i++) {\n\t\t         if(bool[i] == true) {\n\t\t            for(int j = (i*i); j<num; j = j+i) {\n\t\t               bool[j] = false;\n\t\t            }\n\t\t         }\n\t\t      }\n\t\t      if(num >= 0) {\n\t\t    \t  bool[0] = false;\n\t\t    \t  bool[1] = false;\n\t\t      }\n\t\t      \n\t\t      return bool;\n  }\nstatic long nCr(long a,long b,long mod)\n{\n return (((fact[(int)a] * modInverse(fact[(int)b],mod))%mod * modInverse(fact[(int)(a - b)],mod))%mod + mod)%mod;\n}\nstatic long fact[]=new long[max_num];\nstatic void fact_fill()\n {\n   long fact[]=new long[max_num];\n   fact[0]=1l;\n\tfor(int i=1;i<max_num;i++)\n\t  {\n\t    fact[i]=(fact[i-1]*(long)i);\n\t    if(fact[i]>=mod)\n\t      fact[i]%=mod;\n\t  } \n }\nstatic long modInverse(long a, long m)\n\t    {\n\t       return power(a, m - 2, m);\n\t    }\nstatic long power(long x, long y, long m)\n\t    {\n\t        if (y == 0)\n\t            return 1;\n\t        long p = power(x, y / 2, m) % m;\n\t        p = (long)((p * (long)p) % m);\n\t        if (y % 2 == 0)\n\t            return p;\n\t        else\n\t            return (long)((x * (long)p) % m);\n\t    }\nstatic long sum_array(int a[])\n {\n    int n=a.length;\n    long sum=0;\n    for(int i=0;i<n;i++)\n     sum+=a[i];\n    return sum;\n }\nstatic long sum_array(long a[])\n {\n    int n=a.length;\n    long sum=0;\n    for(int i=0;i<n;i++)\n     sum+=a[i];\n    return sum;\n }\n\nstatic void sort(int[] a) \n   {\n\t\tArrayList<Integer> l=new ArrayList<>();\n\t\tfor (int i:a) l.add(i);\n\t\tCollections.sort(l);\n\t\tfor (int i=0; i<a.length; i++) a[i]=l.get(i);\n\t}\nstatic void sort(long[] a) \n   {\n\t\tArrayList<Long> l=new ArrayList<>();\n\t\tfor (long i:a) l.add(i);\n\t\tCollections.sort(l);\n\t\tfor (int i=0; i<a.length; i++) a[i]=l.get(i);\n\t}\n\nstatic void reverse_array(int a[])\n {\n    int n=a.length;\n    int i,t; \n    for (i = 0; i < n / 2; i++) { \n            t = a[i]; \n            a[i] = a[n - i - 1]; \n            a[n - i - 1] = t; \n        } \n }\nstatic void reverse_array(long a[])\n {\n    int n=a.length;\n    int i; long t; \n    for (i = 0; i < n / 2; i++) { \n            t = a[i]; \n            a[i] = a[n - i - 1]; \n            a[n - i - 1] = t; \n        } \n }\n\nstatic long gcd(long a, long b) \n    { \n        if (a == 0) \n            return b; \n          \n        return gcd(b%a, a); \n    } \nstatic int gcd(int a, int b) \n    { \n        if (a == 0) \n            return b; \n          \n        return gcd(b%a, a); \n    } \n\n   static class FastReader{\n \n        byte[] buf = new byte[2048];\n        int index, total;\n        InputStream in;\n \n        FastReader(InputStream is) {\n            in = is;\n        }\n \n        int scan() throws IOException {\n            if (index >= total) {\n                index = 0;\n                total = in.read(buf);\n                if (total <= 0) {\n                    return -1;\n                }\n            }\n            return buf[index++];\n        }\n \n        String next() throws IOException {\n            int c;\n            for (c = scan(); c <= 32; c = scan());\n            StringBuilder sb = new StringBuilder();\n            for (; c > 32; c = scan()) {\n                sb.append((char) c);\n            }\n            return sb.toString();\n        }\n \n        int nextInt() throws IOException {\n            int c, val = 0;\n            for (c = scan(); c <= 32; c = scan());\n            boolean neg = c == '-';\n            if (c == '-' || c == '+') {\n                c = scan();\n            }\n            for (; c >= '0' && c <= '9'; c = scan()) {\n                val = (val << 3) + (val << 1) + (c & 15);\n            }\n            return neg ? -val : val;\n        }\n \n        long nextLong() throws IOException {\n            int c;\n            long val = 0;\n            for (c = scan(); c <= 32; c = scan());\n            boolean neg = c == '-';\n            if (c == '-' || c == '+') {\n                c = scan();\n            }\n            for (; c >= '0' && c <= '9'; c = scan()) {\n                val = (val << 3) + (val << 1) + (c & 15);\n            }\n            return neg ? -val : val;\n        }\n    }\n   \n    static class Reader \n    { \n        final private int BUFFER_SIZE = 1 << 16; \n        private DataInputStream din; \n        private byte[] buffer; \n        private int bufferPointer, bytesRead; \n  \n        public Reader() \n        { \n            din = new DataInputStream(System.in); \n            buffer = new byte[BUFFER_SIZE]; \n            bufferPointer = bytesRead = 0; \n        } \n  \n        public Reader(String file_name) throws IOException \n        { \n            din = new DataInputStream(new FileInputStream(file_name)); \n            buffer = new byte[BUFFER_SIZE]; \n            bufferPointer = bytesRead = 0; \n        } \n  \n        public String readLine() throws IOException \n        { \n            byte[] buf = new byte[64]; // line length \n            int cnt = 0, c; \n            while ((c = read()) != -1) \n            { \n                if (c == '\\n') \n                    break; \n                buf[cnt++] = (byte) c; \n            } \n            return new String(buf, 0, cnt); \n        } \n  \n        public int nextInt() throws IOException \n        { \n            int ret = 0; \n            byte c = read(); \n            while (c <= ' ') \n                c = read(); \n            boolean neg = (c == '-'); \n            if (neg) \n                c = read(); \n            do\n            { \n                ret = ret * 10 + c - '0'; \n            }  while ((c = read()) >= '0' && c <= '9'); \n  \n            if (neg) \n                return -ret; \n            return ret; \n        } \n  \n        public long nextLong() throws IOException \n        { \n            long ret = 0; \n            byte c = read(); \n            while (c <= ' ') \n                c = read(); \n            boolean neg = (c == '-'); \n            if (neg) \n                c = read(); \n            do { \n                ret = ret * 10 + c - '0'; \n            } \n            while ((c = read()) >= '0' && c <= '9'); \n            if (neg) \n                return -ret; \n            return ret; \n        } \n  \n        public double nextDouble() throws IOException \n        { \n            double ret = 0, div = 1; \n            byte c = read(); \n            while (c <= ' ') \n                c = read(); \n            boolean neg = (c == '-'); \n            if (neg) \n                c = read(); \n  \n            do { \n                ret = ret * 10 + c - '0'; \n            } \n            while ((c = read()) >= '0' && c <= '9'); \n  \n            if (c == '.') \n            { \n                while ((c = read()) >= '0' && c <= '9') \n                { \n                    ret += (c - '0') / (div *= 10); \n                } \n            } \n  \n            if (neg) \n                return -ret; \n            return ret; \n        } \n  \n        private void fillBuffer() throws IOException \n        { \n            bytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE); \n            if (bytesRead == -1) \n                buffer[0] = -1; \n        } \n  \n        private byte read() throws IOException \n        { \n            if (bufferPointer == bytesRead) \n                fillBuffer(); \n            return buffer[bufferPointer++]; \n        } \n  \n        public void close() throws IOException \n        { \n            if (din == null) \n                return; \n            din.close(); \n        } \n    }\n  static  PrintWriter out=new PrintWriter(System.out);\n  static int int_max=Integer.MAX_VALUE;\n  static int int_min=Integer.MIN_VALUE;\n  static long long_max=Long.MAX_VALUE;\n  static long long_min=Long.MIN_VALUE;\n}\n// Thank You !"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n, k = map(int, input().split())\n    data = input()\n\n    start = data.find('W')\n\n    result = 0\n    prev = False\n    for x in data:\n        if x == 'W':\n            if prev:\n                result += 2\n            else:\n                result += 1\n            prev = True\n        else:\n            prev = False\n\n    # none exist\n    if start == -1:\n        if k == 0:\n            print(0)\n        else:\n            print(k * 2 - 1)\n        continue\n\n    gap_list = []\n    end = start + 1\n\n\n    if k > n - data.count('W'): # remained\n        k = n - data.count('W')\n\n    cnt = 0\n    for i in range(start + 1, n):\n        if data[i] == 'L':\n            cnt += 1\n        if data[i - 1] == 'L' and data[i] == 'W':\n            gap_list.append(cnt)\n            cnt = 0\n\n    gap_list.sort()\n\n    for x in gap_list:\n        if k >= x:\n            result += 3 + 2 * (x - 1)\n            k -= x\n        else:\n            break\n    \n    print(result + (2 * k))"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long mod = 1e9 + 7;\nlong long expo_pow(long long x, long long y) {\n  if (y == 0) return 1;\n  y = y % (mod - 1);\n  x %= mod;\n  if (y == 0) y = mod - 1;\n  long long res = 1;\n  while (y) {\n    if (y & 1) res = (res * x) % mod;\n    x = (x * x) % mod;\n    y >>= 1;\n  }\n  return res;\n}\nlong long add() { return 0; }\ntemplate <typename T, typename... Types>\nT add(T var1, Types... var2) {\n  return (((((long long)(var1)) % mod + (long long)(add(var2...))) % mod) +\n          mod) %\n         mod;\n}\nlong long mul() { return 1; }\ntemplate <typename T, typename... Types>\nT mul(T var1, Types... var2) {\n  return (((long long)(var1)) % mod * (long long)(mul(var2...))) % mod;\n}\nvoid solve() {\n  long long n, k;\n  cin >> n >> k;\n  string second;\n  cin >> second;\n  long long cnt = 0;\n  for (auto u : second) cnt += (u == 'W');\n  if (cnt == 0) {\n    long long ans = 2 * k - 1;\n    cout << max(0LL, ans) << \"\\n\";\n    return;\n  }\n  vector<long long> idx;\n  long long i = 0;\n  while (i < n and second[i] == 'L') i++;\n  while (i < n) {\n    long long j = i;\n    while (j < n and second[j] == 'W') j++;\n    long long tmp = j;\n    while (j < n and second[j] == 'L') j++;\n    if (j < n) idx.push_back(j - tmp);\n    i = j;\n  }\n  if (cnt + k >= n) {\n    cout << 2 * n - 1 << \"\\n\";\n    return;\n  }\n  long long ans = cnt;\n  for (long long i = 1; i < n; ++i) {\n    if (second[i] == 'W' and second[i - 1] == 'W') ans++;\n  }\n  sort(idx.begin(), idx.end());\n  for (auto u : idx) {\n    if (k >= u) {\n      ans += 2 * u;\n      ans++;\n      k -= u;\n    } else if (k != 0) {\n      ans += 2 * k;\n      k = 0;\n    }\n  }\n  if (k) ans += 2 * k;\n  cout << ans << \"\\n\";\n}\nsigned main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  long long test = 1;\n  cin >> test;\n  long long i = 1;\n  while (test--) {\n    solve();\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\nI = lambda : list(map(int,input().split()))\n\nt,=I()\nfor _ in range(t):\n\tn,k=I()\n\ts=list(input().strip())\n\tif s.count('W')==0:\n\t\tprint(max(0,1+(2*(k-1))))\n\t\tcontinue\n\ti=0\n\tle=[]\n\tfor i in range(n):\n\t\tif s[i]=='W':\n\t\t\tle.append(i)\n\tne=[]\n\tfor i in range(len(le)-1):\n\t\tne.append([le[i],le[i+1],le[i+1]-le[i]-1])\n\tne.sort(key=lambda x:x[2])\n\tfor i in ne:\n\t\tnow=i[0]+1\n\t\twhile now<i[1] and k:\n\t\t\ts[now]='W'\n\t\t\tnow+=1\n\t\t\tk-=1\n\t\tif not k:\n\t\t\tbreak\n\ttemp=[]\n\tif s[0]!='W':\n\t\ttemp.append([-1,le[0],le[0]-(-1)-1])\n\tif s[-1]!='W':\n\t\ttemp.append([le[-1],n,n-le[-1]-1])\n\ttemp.sort(key=lambda x:x[2])\n\tfor i in temp:\n\t\tif i[0]==-1:\n\t\t\tnow=i[1]-1\n\t\t\twhile now>=0 and k:\n\t\t\t\tk-=1\n\t\t\t\ts[now]='W'\n\t\t\t\tnow-=1\n\t\telse:\t\n\t\t\tnow=i[0]+1\n\t\t\twhile now<i[1] and k:\n\t\t\t\ts[now]='W'\n\t\t\t\tk-=1\n\t\t\t\tnow+=1\n\t\tif not k:\n\t\t\tbreak\n\tans=1 if s[0]=='W' else 0\n\tfor i in range(1,n):\n\t\tif s[i-1]=='W' and s[i]=='W':\n\t\t\tans+=2\n\t\telif s[i]=='W':\n\t\t\tans+=1\n\tprint(ans)\n\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.InputMismatchException;\nimport java.io.IOException;\nimport java.util.Collections;\nimport java.util.ArrayList;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n *\n * @author Pranay2516\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        FastReader in = new FastReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        BChessCheater solver = new BChessCheater();\n        int testCount = Integer.parseInt(in.next());\n        for (int i = 1; i <= testCount; i++)\n            solver.solve(i, in, out);\n        out.close();\n    }\n\n    static class BChessCheater {\n        public void solve(int testNumber, FastReader in, PrintWriter out) {\n            int n = in.nextInt(), k = in.nextInt();\n            char[] c = in.next().toCharArray();\n            ArrayList<Integer> ar = new ArrayList<>();\n            int cnt = 0, w = 0, i = 0, ans = 0, f = -1, end = 0, start = 0;\n            for (i = 0; i < n; ++i) {\n                if (c[i] == 'W') {\n                    if (f == 0 || f == -1) ans++;\n                    else ans += 2;\n                    f = 2;\n                } else {\n                    if (f == -1) start++;\n                    if (f == 2) f = 0;\n                }\n            }\n            if (start == n) {\n                if (k == 0) out.println(0);\n                else out.println(2 * Math.min(n, k) - 1);\n                return;\n            }\n            i = 0;\n            while (i < n) {\n                if (c[i] == 'W') {\n                    i++;\n                    while (i < n && c[i] != 'W') {\n                        cnt++;\n                        i++;\n                    }\n                    if (cnt > 0) {\n                        if (i != n) ar.add(cnt);\n                        else if (i == n && c[i - 1] == 'W') ar.add(cnt);\n                        else end = cnt;\n                    }\n                    cnt = 0;\n                } else i++;\n            }\n            Collections.sort(ar);\n            i = 0;\n            while (k > 0 && i < ar.size()) {\n                if (k - ar.get(i) >= 0) {\n                    k -= ar.get(i);\n                    ans += 2 * ar.get(i) + 1;\n                } else {\n                    ans += 2 * k;\n                    k = 0;\n                }\n                i++;\n                if (i == ar.size()) break;\n            }\n            if (k > 0) {\n                if (start > 0) {\n                    if (start > k) ans += 2 * k;\n                    else ans += 2 * start;\n                    k -= start;\n                }\n                if (k > 0 && end > 0) {\n                    if (end > k) ans += 2 * k;\n                    else ans += 2 * end;\n                }\n            }\n            out.println(ans);\n        }\n\n    }\n\n    static class FastReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private FastReader.SpaceCharFilter filter;\n\n        public FastReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int read() {\n            if (numChars == -1) throw new InputMismatchException();\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (numChars <= 0) return -1;\n            }\n            return buf[curChar++];\n        }\n\n        public int nextInt() {\n            int c = read();\n            while (isSpaceChar(c)) c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do {\n                if (c < '0' || c > '9') throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public String next() {\n            int c = read();\n            while (isSpaceChar(c)) c = read();\n            StringBuilder res = new StringBuilder();\n            do {\n                res.appendCodePoint(c);\n                c = read();\n            }\n            while (!isSpaceChar(c));\n            return res.toString();\n        }\n\n        public boolean isSpaceChar(int c) {\n            if (filter != null) return filter.isSpaceChar(c);\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        public interface SpaceCharFilter {\n            public boolean isSpaceChar(int ch);\n\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 1,
            "solution": "#!/usr/bin/env python\nfrom __future__ import division, print_function\n\nimport os\nimport sys\nfrom bisect import bisect_left\nfrom io import BytesIO, IOBase\n\nif sys.version_info[0] < 3:\n    from __builtin__ import xrange as range\n    from future_builtins import ascii, filter, hex, map, oct, zip\n\n\ndef main():\n    t = int(input())\n\n    for _ in range(t):\n        n, k = map(int, input().split())\n        s = list(input())\n\n        loss_streaks = []\n\n        streak = 0\n        prev = \"\"\n        start = s[0] == \"L\"\n\n        for i in s:\n            if i == \"L\":\n                streak += 1\n            elif i != prev == \"L\":\n                if start:\n                    start = False\n                else:\n                    loss_streaks.append(streak)\n                streak = 0\n            prev = i\n\n        loss_streaks.sort()\n\n        m = 0\n        prev = 0\n        count = 0\n        for i in loss_streaks:\n            if m - prev + i > k:\n                break\n            if m + i > k:\n                m = m - prev\n                count -= 1\n            m += i\n            prev = i\n            count += 1\n\n        l = s.count('L')\n        w = s.count('W')\n\n\n        score = 0\n        prev = \"\"\n        for i in s:\n            if i == prev == \"W\":\n                score += 2\n            elif i == \"W\":\n                score += 1\n\n            prev = i\n\n        joining = 2 * m + count\n        extra = min(l - m, k - m) * 2 - (min(l - m, k - m) and w == 0)\n\n        print(score + joining + extra)\n\n\n\n# region fastio\n\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\ndef print(*args, **kwargs):\n    \"\"\"Prints the values to a stream, or to sys.stdout by default.\"\"\"\n    sep, file = kwargs.pop(\"sep\", \" \"), kwargs.pop(\"file\", sys.stdout)\n    at_start = True\n    for x in args:\n        if not at_start:\n            file.write(sep)\n        file.write(str(x))\n        at_start = False\n    file.write(kwargs.pop(\"end\", \"\\n\"))\n    if kwargs.pop(\"flush\", False):\n        file.flush()\n\n\nif sys.version_info[0] < 3:\n    sys.stdin, sys.stdout = FastIO(sys.stdin), FastIO(sys.stdout)\nelse:\n    sys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\n\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\n# endregion\n\nif __name__ == \"__main__\":\n    main()\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid solve() {\n  int n, k, n_w = -1, s1 = 0;\n  cin >> n >> k;\n  string s;\n  cin >> s;\n  vector<int> a;\n  for (int i = 0; i < n; i++) {\n    if (s[i] == 'W') {\n      s1++;\n      if (i > 0 && s[i - 1] == 'W') s1++;\n    }\n  }\n  if (s1 == 0) {\n    if (k == 0)\n      cout << 0 << endl;\n    else\n      cout << k * 2 - 1 << endl;\n    return;\n  }\n  for (int i = 0; i < n; i++)\n    if (s[i] == 'W') {\n      n_w = i;\n      break;\n    }\n  int l_w = n_w;\n  for (int i = n_w + 1; i < n; i++) {\n    if (s[i] == 'W') {\n      if (i - l_w - 1 > 0) a.push_back(i - l_w - 1);\n      l_w = i;\n    }\n  }\n  sort(a.begin(), a.end());\n  int ss = 0;\n  for (int i = 0; i < a.size(); i++) {\n    if (a[i] <= k) {\n      k -= a[i];\n      ss += a[i] * 2 + 1;\n    } else {\n      ss += k * 2;\n      k = 0;\n    }\n  }\n  if (k > 0) {\n    ss += min(n_w, k) * 2;\n    k -= min(n_w, k);\n  }\n  if (k > 0) {\n    ss += min(n - l_w - 1, k) * 2;\n    k -= min(n - l_w - 1, k);\n  }\n  cout << ss + s1 << endl;\n}\nint main() {\n  int t;\n  cin >> t;\n  for (int i = 0; i < t; i++) {\n    solve();\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "import io\nimport os\n\ndef solve():\n    n, k = map(int, input().split())\n    A = input()\n\n    segs = []\n    s, t = 0, 0\n\n    while s < n and A[s] == 'L':\n        s += 1\n    head = (0, s)\n\n    nn = n\n    while nn >= 1 and A[nn - 1] == 'L':\n        nn -= 1\n    tail = (nn, n)\n    \n    while s < nn:\n        if A[s] == 'W':\n            s += 1\n            continue\n        t = s\n        while t < nn and A[t] == 'L':\n            t += 1\n        segs.append((s, t))\n        s = t\n    \n    segs.sort(key=lambda x: x[1] - x[0])\n\n    B = list(A)\n    for (s, t) in segs:\n        if k <= 0:\n            break\n        w = min(t - s, k)\n        # print(s, w)\n        B[s:s+w] = 'W' * w\n        k -= w\n    \n    if k > 0 and tail[0] != n:\n        s, t = tail\n        w = min(t - s, k)\n        B[s:s+w] = 'W' * w\n        k -= w\n    if k > 0 and head[1] > 0:\n        s, t = head\n        w = min(t - s, k)\n        B[t - w: t] = 'W' * w\n        k -= w\n        \n    score = 0\n    for i in range(n):\n        if i >= 1 and B[i - 1] == 'W' and B[i] == 'W':\n            score += 2\n            continue\n        if B[i] == 'W':\n            score += 1\n            continue\n    return score\n\n\nTC = int(input())\nfor _ in range(TC):\n    print(solve())\n\n"
        },
        {
            "language": 3,
            "solution": "I=input\nfor _ in[0]*int(I()):\n n,k=map(int,I().split());a=sorted(map(len,I().strip('L').split('W')));m=len(a)+k\n while a and a[0]<=k:k-=a.pop(0)\n print((2*min(n,m-1)-len(a)or 1)-1)"
        },
        {
            "language": 3,
            "solution": "import heapq\nimport collections\nfrom math import log2\nimport itertools\nfrom functools import lru_cache\nfrom sys import setrecursionlimit as srl \nsrl(2*10**6)\nN = 200001\n\ndef amin(a,b):\n    if b < a:\n        a = b \n    return a\ndef solve(n,k,a):\n    w = 0  \n    W = 0 \n    ans = 0\n    v = []\n    cur = 0\n    for i in range(n):\n        if a[i] == 'W':\n            if cur:\n                v.append(cur)\n                cur = 0 \n            w +=1 \n            ans+=1 \n            if W:\n                ans+=1 \n            W = 1 \n        else:\n            W = 0 \n            if w:\n                cur +=1 \n    if not w:\n        return max(2*k-1 ,0) \n    if  k > n-w:\n        k = n-w\n    ans += 2*k \n    v.sort()\n    for x in v:\n        if x <= k:\n            ans +=1 \n            k-=x\n    return ans\n                \nt = int(input())\nfor i in range(1,t+1):\n    n,k = map(int,input().split())\n    a = input()\n    print(solve(n,k,a))"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class D {\n\tFastScanner in;\n\tPrintWriter out;\n\tboolean systemIO = true;\n\n\tpublic int add(int x, int y) {\n\t\tif (x + y >= mod) {\n\t\t\treturn x + y - mod;\n\t\t}\n\t\treturn x + y;\n\t}\n\n\tpublic int subtract(int x, int y) {\n\t\tif (x >= y) {\n\t\t\treturn x - y;\n\t\t}\n\t\treturn x - y + mod;\n\t}\n\n\tpublic int multiply(long x, long y) {\n\t\treturn (int) (x * 1L * y % mod);\n\t}\n\n\tpublic int divide(long x, long y) {\n\t\treturn (int) (x * 1L * modInv(y) % mod);\n\t}\n\n\tpublic class Pair implements Comparable<Pair> {\n\t\tint x;\n\t\tint y;\n\n\t\tpublic Pair(int x, int y) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t}\n\n\t\tpublic String toString() {\n\t\t\treturn x + \" \" + y;\n\t\t}\n\n\t\t@Override\n\t\tpublic int compareTo(Pair o) {\n\t\t\tif (x > o.x) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tif (x < o.x) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif (y > o.y) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tif (y < o.y) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn 0;\n\t\t}\n\n\t}\n\n\tpublic class Fenvik {\n\t\tint[] sum;\n\n\t\tpublic Fenvik(int n) {\n\t\t\tsum = new int[n];\n\t\t}\n\n\t\tpublic void add(int x, int d) {\n\t\t\tfor (int i = x; i < sum.length; i = (i | (i + 1))) {\n\t\t\t\tsum[i] += d;\n\t\t\t}\n\t\t}\n\n\t\tpublic int sum(int r) {\n\t\t\tint ans = 0;\n\t\t\tfor (int i = r; i >= 0; i = (i & (i + 1)) - 1) {\n\t\t\t\tans += sum[i];\n\t\t\t}\n\t\t\treturn ans;\n\t\t}\n\n\t\tpublic int sum(int l, int r) {\n\t\t\tif (l > r) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\treturn sum(r) - sum(l - 1);\n\t\t}\n\t}\n\n\tpublic long gcd(long x, long y) {\n\t\tif (y == 0) {\n\t\t\treturn x;\n\t\t}\n\t\tif (x == 0) {\n\t\t\treturn y;\n\t\t}\n\t\treturn gcd(y, x % y);\n\t}\n\n\tpublic long[][] pow(long[][] x, long p) {\n\t\tif (p == 0) {\n\t\t\tlong[][] ans = new long[x.length][x.length];\n\t\t\tfor (int i = 0; i < ans.length; i++) {\n\t\t\t\tans[i][i] = 1;\n\t\t\t}\n\t\t\treturn ans;\n\t\t}\n\t\tlong[][] t = pow(x, p / 2);\n\t\tt = multiply(t, t);\n\t\tif (p % 2 == 1) {\n\t\t\tt = multiply(t, x);\n\t\t}\n\t\treturn t;\n\t}\n\n\tpublic long[][] multiply(long[][] a, long[][] b) {\n\t\tlong[][] ans = new long[a.length][b[0].length];\n\t\tfor (int i = 0; i < ans.length; i++) {\n\t\t\tfor (int j = 0; j < ans[0].length; j++) {\n\t\t\t\tfor (int k = 0; k < b.length; k++) {\n\t\t\t\t\tans[i][j] += a[i][k] * b[k][j];\n\t\t\t\t\tans[i][j] %= mod;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn ans;\n\t}\n\n\tpublic long pow(long x, long p) {\n\t\tif (p == 0) {\n\t\t\treturn 1;\n\t\t}\n\t\tlong t = pow(x, p / 2);\n\t\tt *= t;\n\t\tt %= mod;\n\t\tif (p % 2 == 1) {\n\t\t\tt *= x;\n\t\t\tt %= mod;\n\t\t}\n\t\treturn t;\n\t}\n\n\tpublic long modInv(long x) {\n\t\treturn pow(x, mod - 2);\n\t}\n\n\tint mod = 1000000007;\n\n\tRandom random = new Random(566);\n\t\n\tpublic void solve() {\n\t\tfor (int qwerty = in.nextInt(); qwerty > 0; qwerty--) {\n\t\t\tint n = in.nextInt();\n\t\t\tint k = in.nextInt();\n\t\t\tboolean[] res = new boolean[n];\n\t\t\tString s = in.next();\n\t\t\tint first = n;\n\t\t\tfor (int i = 0; i < res.length; i++) {\n\t\t\t\tres[i] = s.charAt(i) == 'W';\n\t\t\t\tif (res[i]) {\n\t\t\t\t\tfirst = Math.min(first, i);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (first == n) {\n\t\t\t\tout.println(Math.max(k * 2 - 1, 0));\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tArrayList<Integer> list = new ArrayList<>();\n\t\t\tint last = first;\n\t\t\tint ans = 1;\n\t\t\tfor (int i = last + 1; i < res.length; i++) {\n\t\t\t\tif (res[i]) {\n\t\t\t\t\tans++;\n\t\t\t\t\tif (i - last > 1) {\n\t\t\t\t\t\tlist.add(i - last - 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tans++;\n\t\t\t\t\t}\n\t\t\t\t\tlast = i;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlast = n - 1 - last;\n\t\t\tCollections.sort(list);\n\t\t\tfor (int i = 0; i < list.size(); i++) {\n\t\t\t\tif (list.get(i) <= k) {\n\t\t\t\t\tk -= list.get(i);\n\t\t\t\t\tans += list.get(i) * 2 + 1;\n\t\t\t\t} else {\n\t\t\t\t\tans += 2 * k;\n\t\t\t\t\tk = 0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (k > 0 && first > 0) {\n\t\t\t\tint min = Math.min(first, k);\n\t\t\t\tk -= min;\n\t\t\t\tans += min * 2;\n\t\t\t}\n\t\t\tif (k > 0 && last > 0) {\n\t\t\t\tint min = Math.min(last, k);\n\t\t\t\tk -= min;\n\t\t\t\tans += min * 2;\n\t\t\t}\n\t\t\tout.println(ans);\n\t\t}\n\t}\n\n\tpublic void run() {\n\t\ttry {\n\t\t\tif (systemIO) {\n\t\t\t\tin = new FastScanner(System.in);\n\t\t\t\tout = new PrintWriter(System.out);\n\t\t\t} else {\n\t\t\t\tin = new FastScanner(new File(\"input.txt\"));\n\t\t\t\tout = new PrintWriter(new File(\"output.txt\"));\n\t\t\t}\n\t\t\tsolve();\n\n\t\t\tout.close();\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n\n\tclass FastScanner {\n\t\tBufferedReader br;\n\t\tStringTokenizer st;\n\n\t\tFastScanner(File f) {\n\t\t\ttry {\n\t\t\t\tbr = new BufferedReader(new FileReader(f));\n\t\t\t} catch (FileNotFoundException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\n\t\tFastScanner(InputStream f) {\n\t\t\tbr = new BufferedReader(new InputStreamReader(f));\n\t\t}\n\n\t\tString nextLine() {\n\t\t\ttry {\n\t\t\t\treturn br.readLine();\n\t\t\t} catch (IOException e) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\tString next() {\n\t\t\twhile (st == null || !st.hasMoreTokens()) {\n\t\t\t\ttry {\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tdouble nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t}\n\n\tn\tpublic static void main(String[] arg) {\n\t\tlong time = System.currentTimeMillis();\n\t\tnew D().run();\n\t\tSystem.err.println(System.currentTimeMillis() - time);\n\t}\n}"
        },
        {
            "language": 3,
            "solution": "from math import inf\ndef put(): return map(int, input().split())\nt = int(input())\nfor _ in range(t):\n    n,k = put()\n    l = [1 if i=='W' else 0 for i in list(input())]\n    s = sum(l)\n    if s+k>=n:\n        print((2*n)-1)\n        continue\n    elif s==1:\n        print((2*min(n-1, k))+1)\n        continue\n    elif s==0:\n        print(max(2*k-1,0))\n        continue\n\n    ind = []\n    prev = -inf\n    for i in range(n):\n        if l[i]==1:\n            ind.append(i-prev-1)\n            prev = i\n    if ind:\n        ind.sort()\n    #print(ind)\n    for d in ind:\n        if d<=k:\n            s+= 2*d+1\n            k-= d\n    if k>0:\n        s+= 2*k\n\n    print(s)\n\n\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class GFG {  \n\tpublic static void main(String args[])\n\t{\n\t\t Scanner take=new Scanner(System.in);\n\t\t int t=take.nextInt();\n\t\t int i,j;\n\t\t while(t--!=0)\n\t\t {\n\t\t\t int n=take.nextInt();\n\t\t\t int k=take.nextInt();\n\t\t\t char a[]=take.next().toCharArray();\n\t\t\t int ans=0;\n\t\t\t if(a[0]=='W') ans++;\n\t\t\t for(i=1;i<n;i++)\n\t\t\t {\n\t\t\t\t if(a[i]=='W')\n\t\t\t\t {\n\t\t\t\t\t if(a[i-1]=='W') ans+=2;\n\t\t\t\t\t else ans++;\n\t\t\t\t }\n\t\t\t }\n\t\t\t if(ans==0) \n\t\t\t {\t if(k!=0)\n\t\t\t\t System.out.println(Math.min(n, k)*2-1);\n\t\t\t \t else System.out.println(ans); \n\t\t\t \t continue;\n\t\t\t }\n\t\t\t //System.out.println(ans);\n\t\t\t ArrayList<Integer> al=new ArrayList<>();\n\t\t\t al.clear();\n\t\t\t int c=0;\n\t\t\t if(a[0]=='L') c++;\n\t\t\t for(i=1;i<n;i++)\n\t\t\t {\n\t\t\t\t if(a[i]=='L') c++;\n\t\t\t\t else \n\t\t\t\t {\t if(c!=0)\n\t\t\t\t \t{\n\t\t\t\t\t al.add(c);\n\t\t\t\t\t c=0;\n\t\t\t\t \t}\n\t\t\t\t }\n\t\t\t }\n\t\t\t if(c!=0)\n\t\t\t al.add(c);\n\t\t\t //System.out.println(al);\n\t\t\t int f=0,last=0;\n\t\t\t if(a[0]=='L') {\n\t\t\t\t f=al.get(0);\n\t\t\t\t al.remove(0);\n\t\t\t }\n\t\t\t if(a[n-1]=='L')\n\t\t\t {\n\t\t\t\t last=al.get(al.size()-1);\n\t\t\t\t al.remove(al.size()-1);\n\t\t\t }\n\t\t\t //System.out.println(\"ans=\"+ans);\n\t\t\t Collections.sort(al);\n\t\t\t// System.out.println(al);\n\t\t\t for(i=0;i<al.size();i++)\n\t\t\t {\n\t\t\t\t if(al.get(i)<=k)\n\t\t\t\t {\t//System.out.println(ans);\n\t\t\t\t\t ans+=((2*al.get(i))+1);\n\t\t\t\t\t k-=al.get(i);\n\t\t\t\t }\n\t\t\t\t else break;\n\t\t\t }\n\t\t\t //System.out.println(k+\" \"+ans);\n\t\t\t if(i!=al.size())\n\t\t\t { al.add(i,al.get(i)+f+last);\n\t\t\t ans+=(2*Math.min(al.get(i),k));\n\t\t\t System.out.println(ans);\n\t\t\t }\n\t\t\t else {\n\t\t\t\tSystem.out.println(ans+(2*Math.min(k,f+last)));\n\t\t\t}\n\t\t }\n\t\t \n\t}\n}\n\n\t  \n\n\t\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long int mod1 = 1000000007;\nlong long int mod2 = 67280421310721;\nlong long int mod3 = 998244353;\nlong long int INF = 1e18;\nlong long int pow1(long long int a, long long int b) {\n  long long int res = 1;\n  while (b > 0) {\n    if (b & 1) res = res * a;\n    a = a * a;\n    b >>= 1;\n  }\n  return res;\n}\nvoid sieve() {\n  long long int n;\n  bool prime[n + 1];\n  memset(prime, true, sizeof(prime));\n  for (int p = 2; p * p <= n; p++) {\n    if (prime[p] == true) {\n      for (int i = p * p; i <= n; i += p) prime[i] = false;\n    }\n  }\n}\nlong long int pow2(long long int a, long long int b, long long int m) {\n  a %= m;\n  long long int res = 1;\n  while (b > 0) {\n    if (b & 1) res = res * a % m;\n    a = a * a % m;\n    b >>= 1;\n  }\n  return res;\n}\nlong long int setbit(long long int n) { return __builtin_popcount(n); }\nvoid solve() {\n  long long int n, k;\n  cin >> n >> k;\n  string s;\n  cin >> s;\n  vector<int> v;\n  int win = 0;\n  int W = 0;\n  int loss = 0;\n  int ans = 0;\n  for (char a : s) {\n    if (a == 'W') {\n      if (loss) {\n        v.push_back(loss);\n        loss = 0;\n      }\n      ans++;\n      if (W) ans++;\n      W = 1;\n      win++;\n    } else {\n      W = 0;\n      if (win) loss++;\n    }\n  }\n  if (win == 0) {\n    cout << max(2 * k - 1, 0LL) << endl;\n  } else if (win + k >= n)\n    cout << 2 * n - 1 << endl;\n  else {\n    sort(v.begin(), v.end());\n    ans += 2 * k;\n    for (auto x : v) {\n      if (x <= k) ans++;\n      k -= x;\n    }\n    cout << ans << endl;\n  }\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  long long int t = 1;\n  cin >> t;\n  while (t--) {\n    solve();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid __print(int x) { cout << x; }\nvoid __print(long x) { cout << x; }\nvoid __print(long long x) { cout << x; }\nvoid __print(unsigned x) { cout << x; }\nvoid __print(unsigned long x) { cout << x; }\nvoid __print(unsigned long long x) { cout << x; }\nvoid __print(float x) { cout << x; }\nvoid __print(double x) { cout << x; }\nvoid __print(long double x) { cout << x; }\nvoid __print(char x) { cout << '\\'' << x << '\\''; }\nvoid __print(const char *x) { cout << '\\\"' << x << '\\\"'; }\nvoid __print(const string &x) { cout << '\\\"' << x << '\\\"'; }\nvoid __print(bool x) { cout << (x ? \"true\" : \"false\"); }\ntemplate <typename T, typename V>\nvoid __print(const pair<T, V> &x) {\n  cout << '{';\n  __print(x.first);\n  cout << ',';\n  __print(x.second);\n  cout << '}';\n}\ntemplate <typename T>\nvoid __print(const T &x) {\n  int f = 0;\n  cout << '{';\n  for (auto &i : x) cout << (f++ ? \",\" : \"\"), __print(i);\n  cout << \"}\";\n}\nvoid _print() { cout << \"]\" << endl; }\ntemplate <typename T, typename... V>\nvoid _print(T t, V... v) {\n  __print(t);\n  if (sizeof...(v)) cout << \", \";\n  _print(v...);\n}\ntemplate <typename T, typename T1>\nT amax(T &a, T1 b) {\n  if (b > a) a = b;\n  return a;\n}\ntemplate <typename T, typename T1>\nT amin(T &a, T1 b) {\n  if (b < a) a = b;\n  return a;\n}\nconst int mod = 1e9 + 7;\nconst int N = 3e5 + 1;\nvoid solve() {\n  int n, k;\n  string s;\n  cin >> n >> k >> s;\n  int x = 1;\n  bool found = 0;\n  vector<string> L;\n  string lose = \"\";\n  int cnt = 0, numL = 0;\n  for (int i = 0; i < n; i++) {\n    cnt += s[i] == 'W';\n    numL += s[i] == 'L';\n    if (s[i] == 'W' && found && s[i - 1] == 'L') {\n      L.push_back(lose);\n      lose = \"\";\n    } else if (s[i] == 'W') {\n      found = 1;\n    } else if (found) {\n      lose += 'L';\n    }\n  }\n  int cmp = (L.size() + 1) * found + (!found) * (k > 0);\n  sort(L.begin(), L.end());\n  for (int i = 0; i < L.size(); i++) {\n    string curr = L[i];\n    if (curr.size() <= k)\n      cnt += curr.size(), cmp--, k -= curr.size(), numL -= curr.size();\n    else\n      cnt += k, numL -= k, k = 0;\n    if (!k) break;\n  }\n  cnt += min(k, numL);\n  cout << cnt * 2 - cmp << \"\\n\";\n}\nsigned main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  int t = 1;\n  cin >> t;\n  while (t--) solve();\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\n\nt = int(sys.stdin.readline().strip())\nfor _ in range(t):\n\tarr = []\n\tn, k = map(int, sys.stdin.readline().strip().split())\n\ts = input()\n\tind = 0\n\twhile ind != n and s[ind] == 'L':\n\t\tind += 1\n\n\tif ind == n:\n\t\tif k >= n:\n\t\t\tprint(2*n - 1)\n\t\telse:\n\t\t\tprint(max(2*k - 1, 0))\n\t\tcontinue\n\n\tcount = -1\n\tcurrent = 0\n\tfor i in range(ind, n):\n\t\tif s[i] == 'W':\n\t\t\tif count > 0:\n\t\t\t\tcurrent += 1\n\t\t\t\tarr += [count]\n\t\t\telif count < 0:\n\t\t\t\tcurrent += 1\n\t\t\telse:\n\t\t\t\tcurrent += 2\n\t\t\tcount = 0\n\t\telse:\n\t\t\tcount += 1\n\n\tchange = 0\n\tarr.sort()\n\t# print(arr)\n\n\tdelta = 0\n\tfor i in range(len(arr)):\n\t\tif change + arr[i] <= k:\n\t\t\tchange += arr[i]\n\t\t\tdelta += arr[i]*2 + 1\n\t\t\t# print(delta, change, k)\n\n\t# print(current, delta)\n\n\tprint(min(current + delta + 2*(k-change), 2*n - 1))\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "def solve(n, k, s):\n    gaps = []\n    first_w_index = -1\n    last_w_index = -1\n    score = 0\n    win_streak = 0\n\n    for i in range(n):\n        if s[i] == 'W':\n            win_streak += 1\n            if first_w_index == -1:\n                first_w_index = i\n            elif i - last_w_index - 1 > 0:\n                gaps.append(i-last_w_index-1)\n            last_w_index = i\n        else:\n            if win_streak > 0:\n                score += 2 * win_streak - 1\n                win_streak = 0\n\n    if win_streak > 0:\n        score += 2*win_streak-1\n\n    gaps.sort()\n    rem = []\n    for g in gaps:\n        if g <= k:\n            score += 2*g+1\n            k -= g\n        else:\n            rem.append(g)\n\n    if k > 0:\n        if len(rem) > 0:\n            score += 2*k\n        else:  # all in-between gaps are filled\n            # last_w_index >= first_w_index\n            if first_w_index == -1:  # no win\n                score += 2*k-1\n            else:\n                score += 2 * min(k, first_w_index + n-last_w_index-1)\n\n    return score\n\n\nT = int(input())\nfor _ in range(T):\n    n, k = map(int, input().split())\n    s = input()\n    print(solve(n, k, s))\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\npublic class noob {\n    InputReader in;\n    final long mod=1000000007;\n    StringBuilder sb;\n    public static void main(String[] args) throws java.lang.Exception {\n        new noob().run();\n    }\n    void run() throws Exception {\n        in=new InputReader(System.in);\n        sb = new  StringBuilder();\n        int t=i();\n        for(int i=1;i<=t;i++)\n            solve();\n        System.out.print(sb);\n    }\n    void solve() {\n        int i,j;\n        int n=i(), k=i();\n        char c[]=s().toCharArray();\n        int cnt=0,x=0,z=0;\n        for(i=0;i<n;i++) {\n            if(c[i]=='W')\n                x=1;\n            else\n                z++;\n        }\n        if(x==0) {\n            sb.append(Math.max((2*k - 1),0)+\"\\n\");\n            return;\n        }\n        for(i=0;i<n;i++) {\n            if(c[i]=='W') {\n                if(i>0 && c[i-1]=='W')\n                    cnt+=2;\n                else\n                    cnt++;\n            }\n        }\n        x=-1;\n        ArrayList<Integer> list=new ArrayList<>();\n        for(i=0;i<n;i++) {\n            if(c[i]=='L' && x!=-1)\n                x++;\n            else if(c[i]=='W') {\n                if(x>0)\n                    list.add(x);\n                x=0;\n            }\n        }\n        Collections.sort(list);\n        //System.out.println(list);\n        i=0;\n        //System.out.print(cnt+\" \");\n        while(i<list.size() && k>=list.get(i)) {\n            k-=list.get(i);\n            cnt+=2*(list.get(i)) + 1;\n            z-=list.get(i);\n            i++;\n        }\n        cnt+=Math.min(2*z,2*k);\n        sb.append(cnt+\"\\n\");\n        //System.out.print(cnt+\"   \"+k+\"\\n\");\n    }\n    String s(){return in.next();}\n    int i(){return in.nextInt();}\n    long l(){return in.nextLong();}\n    double d(){return in.nextDouble();}\n    class InputReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n        public int read() {\n            if (numChars == -1)\n                throw new UnknownError();\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new UnknownError();\n                }\n                if (numChars <= 0)\n                    return -1;\n            }\n            return buf[curChar++];\n        }\n        public int peek() {\n            if (numChars == -1)\n                return -1;\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    return -1;\n                }\n                if (numChars <= 0)\n                    return -1;\n            }\n            return buf[curChar];\n        }\n        public void skip(int x) {\n            while (x-->0)\n                read();\n        }\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n        public String nextString() {\n            return next();\n        }\n        public String next() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            StringBuffer res = new StringBuffer();\n            do {\n                res.appendCodePoint(c);\n                c = read();\n            } while (!isSpaceChar(c));\n \n            return res.toString();\n        }\n        public String nextLine() {\n            StringBuffer buf = new StringBuffer();\n            int c = read();\n            while (c != '\\n' && c != -1) {\n                if (c != '\\r')\n                    buf.appendCodePoint(c);\n                c = read();\n            }\n            return buf.toString();\n        }\n        public double nextDouble() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            double res = 0;\n            while (!isSpaceChar(c) && c != '.') {\n                if (c == 'e' || c == 'E')\n                    return res * Math.pow(10, nextInt());\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            if (c == '.') {\n                c = read();\n                double m = 1;\n                while (!isSpaceChar(c)) {\n                    if (c == 'e' || c == 'E')\n                        return res * Math.pow(10, nextInt());\n                    if (c < '0' || c > '9')\n                        throw new InputMismatchException();\n                    m /= 10;\n                    res += (c - '0') * m;\n                    c = read();\n                }\n            }\n            return res * sgn;\n        }\n        public boolean hasNext() {\n            int value;\n            while (isSpaceChar(value = peek()) && value != -1)\n                read();\n            return value != -1;\n        }\n        private boolean isSpaceChar(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n    }\n}"
        },
        {
            "language": 3,
            "solution": "from sys import stdin, stdout\ninput = stdin.readline\nprint = lambda x:stdout.write(str(x)+'\\n')\n\nfor _ in range(int(input())):\n    n, k = map(int, input().split())\n    s = input().strip()\n    Ws = 0\n    prev = 0\n    for i in s:\n        if i=='W':\n            if prev:\n                Ws += 2\n            else:\n                Ws += 1\n                prev = 1\n        elif prev:\n            prev = 0\n    if not Ws:\n        if not k:\n            print(0)\n            continue\n        ans = min(k, n)*2-1\n        print(ans)\n        continue\n    \n    start = 0\n    mid = []\n    end = 0\n    w = 0\n    curr = 0\n    for g in s:\n        if g=='L':\n            curr += 1\n        else:\n            if w:\n                if curr:\n                    mid.append(curr)\n            else:\n                start += curr\n                w = 1\n            curr = 0\n    end = curr\n    #print(start, mid, end, Ws)\n    mid.sort()\n    i = 0\n    c = 0\n    score = 0\n    while c < k and i < len(mid):\n        if c + mid[i] <= k:\n            score += mid[i]*2 + 1\n        else:\n            score += (k - c) * 2\n        c += mid[i]\n        i += 1\n    if k-c>0:\n        if c + start <= k:\n            score += start * 2\n        else:\n            score += (k - c) * 2\n        c += start\n        if k-c>0:\n            if c + end <= k:\n                score += end * 2\n            else:\n                score += (k - c) * 2\n            c += end\n    print(score + Ws)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nmultimap<int, string> MM;\nconst int M = 1e9 + 7;\nlong long mod(long long x) { return ((x % M + M) % M); }\nlong long add(long long a, long long b) { return mod(mod(a) + mod(b)); }\nlong long mul(long long a, long long b) { return mod(mod(a) * mod(b)); }\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  int t;\n  cin >> t;\n  while (t--) {\n    int n, k, i;\n    cin >> n >> k;\n    string s;\n    cin >> s;\n    int w = 0;\n    for (i = 0; i < s.length(); i++)\n      if (s[i] == 'W') w++;\n    if (w == 0) {\n      cout << max((2 * k) - 1, 0) << \"\\n\";\n      continue;\n    }\n    w = w + k;\n    if (w >= n) {\n      cout << (2 * n) - 1 << \"\\n\";\n      continue;\n    }\n    int l = 0;\n    vector<int> v;\n    for (i = 0; i < n; i++) {\n      if (s[i] == 'L')\n        l++;\n      else {\n        v.push_back(l);\n        l = 0;\n      }\n    }\n    if (l != 0) v.push_back(l);\n    if (s[0] == 'L') v.erase(v.begin());\n    if (s[n - 1] == 'L') v.erase(v.begin() + v.size() - 1);\n    sort(v.begin(), v.end());\n    l = 0;\n    for (i = 0; i < v.size(); i++) {\n      if (l + v[i] > k) break;\n      l = l + v[i];\n    }\n    l = v.size() - i;\n    cout << (2 * w) - l - 1 << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid debug_out() { cerr << endl; }\ntemplate <typename Head, typename... Tail>\nvoid debug_out(Head H, Tail... T) {\n  cerr << \" \" << to_string(H);\n  debug_out(T...);\n}\ntemplate <class T>\ninline bool chmax(T& a, T b) {\n  if (a < b) {\n    a = b;\n    return true;\n  }\n  return false;\n}\ntemplate <class T>\ninline bool chmin(T& a, T b) {\n  if (a > b) {\n    a = b;\n    return true;\n  }\n  return false;\n}\nusing ll = long long;\nusing ull = unsigned long long;\nusing P = pair<ll, ll>;\nconstexpr long double PI = 3.14159265358979323846264338327950288L;\nmt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count());\nclass BChessCheater {\n public:\n  void solve(istream& cin, ostream& cout) {\n    ios_base::sync_with_stdio(false);\n    cin.tie(nullptr);\n    int t;\n    cin >> t;\n    while (t--) {\n      int n, k;\n      cin >> n >> k;\n      string s;\n      cin >> s;\n      int ret = 0;\n      int cntL = 0;\n      for (int i = 0; i < n; i++) {\n        if (s[i] == 'W') {\n          if (i > 0 && s[i - 1] == 'W') {\n            ret += 2;\n          } else {\n            ret++;\n          }\n        } else {\n          cntL++;\n        }\n      }\n      if (cntL == n && k == 0) {\n        cout << 0 << '\\n';\n        continue;\n      }\n      if (cntL == n) {\n        cout << 2 * k - 1 << '\\n';\n        continue;\n      }\n      char before = 'x';\n      vector<pair<char, int>> vec;\n      for (int i = 0; i < n; i++) {\n        if (s[i] != before) {\n          vec.emplace_back(s[i], 1);\n        } else {\n          vec.back() = {vec.back().first, vec.back().second + 1};\n        }\n        before = s[i];\n      }\n      vector<int> v;\n      for (int i = 1; i < vec.size() - 1; i++) {\n        if (vec[i].first == 'L') {\n          v.push_back(vec[i].second);\n        }\n      }\n      sort(v.begin(), v.end());\n      int kk = k;\n      for (int i = 0; i < v.size(); i++) {\n        if (v[i] <= kk) {\n          kk -= v[i];\n          ret += 1;\n        } else {\n          break;\n        }\n      }\n      int used = min(k, cntL);\n      ret += 2 * used;\n      cout << ret << '\\n';\n    }\n  }\n};\nsigned main() {\n  BChessCheater solver;\n  std::istream& in(std::cin);\n  std::ostream& out(std::cout);\n  solver.solve(in, out);\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n,k=map(int,input().split())\n    s=input()\n    s1=list(s)\n    l=[len(i) for i in s.split('W')]\n    w=0\n    #print(s,k)\n    #print(l)\n    if sum(l)<=k:\n        print(2*n-1)\n    else:\n        prev=s[0]\n        if prev=='W':\n            w+=1\n        for i in s[1:]:\n            if prev==i and i=='W':\n                w+=2\n            elif i=='W':\n                w+=1\n            prev=i\n        #print(w)\n        m=sorted(l[1:-1],reverse=True)\n        cm=len(m)\n        while(k!=0 and cm!=0):\n            t=m[cm-1]\n            if t!=0:\n                if k>=t:\n                    w+=t*2+1\n                    k-=t\n                else:\n                    w+=k*2\n                    k=0\n            cm-=1\n        #print(k,w)\n        if len(l)==1:\n            g=l[0]\n            if k!=0:\n                w+=k*2-1\n        elif len(l)==2:\n            g=l[0]+l[-1]\n            if k!=0:\n                if g==n:\n                    w+=k*2-1\n                else:\n                    w+=k*2\n        else:\n            g=l[0]+l[-1]\n            if k!=0:\n                w+=k*2\n        print(w)\n\n        "
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n, k = list(map(int, input().split()))\n    s = input()\n    i = 0\n    first = 0\n    last = 0\n    res = 0\n    while i < n and s[i] != 'W':\n        i += 1\n        first += 1\n    intervals = []\n    while i < n:\n        start = i\n        while i < n and s[i] == 'W':\n            if i > start:\n                res += 2\n            else:\n                res += 1\n            i += 1\n        if i == n:\n            break\n        intervals.append(0)\n        while i < n and s[i] != 'W':\n            intervals[-1] += 1\n            i += 1\n        if i == n:\n            last = intervals.pop()\n    intervals.sort()\n    if len(intervals) == 0 and first == n:\n        print(max(0, min(n, k) * 2 - 1))\n    else:\n        i = 0\n        while k > 0 and i < len(intervals):\n            if intervals[i] <= k:\n                res += intervals[i] * 2 + 1\n                k -= intervals[i]\n            else:\n                res += 2 * k\n                k = 0\n            i += 1\n        if k > 0:\n            res += min(last + first, k) * 2\n        print(res)\n"
        },
        {
            "language": 1,
            "solution": "from __future__ import division, print_function\n# import threading\n# threading.stack_size(2**27)\nimport sys\nsys.setrecursionlimit(10**4)\n# sys.stdin = open('inpy.txt', 'r')\n# sys.stdout = open('outpy.txt', 'w')\nfrom sys import stdin, stdout\nimport bisect            #c++ upperbound\nimport math\nimport heapq\ni_m=9223372036854775807\ndef modinv(n,p):\n    return pow(n,p-2,p)\ndef cin():\n    return map(int,sin().split())\ndef ain():                           #takes array as input\n    return list(map(int,sin().split()))\ndef sin():\n    return input()\ndef inin():\n    return int(input())\nimport math  \ndef GCD(x, y): \n    x=abs(x)\n    y=abs(y)\n    if(min(x,y)==0):\n        return max(x,y)\n    while(y): \n        x, y = y, x % y \n    return x \ndef Divisors(n) : \n    l = []  \n    for i in range(1, int(math.sqrt(n) + 1)) :\n        if (n % i == 0) : \n            if (n // i == i) : \n                l.append(i) \n            else : \n                l.append(i)\n                l.append(n//i)\n    return l\nprime=[]\ndef SieveOfEratosthenes(n): \n    global prime\n    prime = [True for i in range(n+1)] \n    p = 2\n    while (p * p <= n): \n        if (prime[p] == True): \n            for i in range(p * p, n+1, p): \n                prime[i] = False\n        p += 1\n    f=[]\n    for p in range(2, n): \n        if prime[p]: \n            f.append(p)\n    return f\ndef primeFactors(n): \n    a=[]\n    # Print the number of two's that divide n \n    while n % 2 == 0: \n        a.append(2) \n        n = n // 2\n          \n    # n must be odd at this point \n    # so a skip of 2 ( i = i + 2) can be used \n    for i in range(3,int(math.sqrt(n))+1,2): \n          \n        # while i divides n , print i ad divide n \n        while n % i== 0: \n            a.append(i) \n            n = n // i \n              \n    # Condition if n is a prime \n    # number greater than 2 \n    if n > 2: \n        a.append(n)\n    return a\nan={}\nann={}\ndef dfs(g,v,l,a):\n    global an,ans\n    v[l]=1\n    h=g[l]\n    x=0\n    y=0\n    if a[l-1][1]!=a[l-1][2]:\n        x+=1\n    for i in h:\n        if i not in v:\n            c=dfs(g,v,i,a)\n            x+=c[0]\n            y+=c[1]\n    if x%2==1:\n        y=i_m\n    else:\n        if a[l-1][1]!=a[l-1][2]:\n            # print(y,a[l-1][0],x,l)\n            y=a[l-1][0]*2+min(y-i_m,a[l-1][0]*(x-2))\n    an[l]=x\n    ann[l]=y\n    return [x,y]\n\n\"\"\"*******************************************************\"\"\"\ndef main():\n    t=inin()\n    for _ in range(t):\n        n,k=cin()\n        s=sin()\n        a=list(s)\n        b=[]\n        x=p=0\n        for i in range(n):\n            if a[i]==\"W\" and p==0:\n                p=1\n            if a[i]==\"W\" and x>0:\n                b.append(x)\n                x=0\n            if a[i]==\"L\" and p==1:\n                x+=1\n        b.sort()\n        d={}\n        for i in b:\n            if k>=i:\n                k-=i\n                if i not in d:\n                    d[i]=1\n                else:\n                    d[i]+=1\n        x=p=0\n        for i in range(n):\n            if a[i]==\"W\" and p==0:\n                p=1\n            if a[i]==\"W\" and x>0:\n                if x in d and d[x]>0:\n                    for j in range(i-x,i):\n                        a[j]=\"W\"\n                    d[x]-=1\n                x=0\n            if a[i]==\"L\" and p==1:\n                x+=1\n        for i in range(1,n):\n            if k>0:\n                if (a[i]==\"L\" and a[i-1]==\"W\"):\n                    a[i]=\"W\"\n                    k-=1   \n                if (a[i-1]==\"L\" and a[i]==\"W\"):\n                    a[i-1]=\"W\"\n                    k-=1\n        a=a[::-1]\n        for i in range(1,n):\n            if k>0:\n                if (a[i]==\"L\" and a[i-1]==\"W\"):\n                    a[i]=\"W\"\n                    k-=1   \n                if (a[i-1]==\"L\" and a[i]==\"W\"):\n                    a[i-1]=\"W\"\n                    k-=1\n        a=a[::-1]\n        for i in range(n):\n            if a[i]==\"L\" and k>0:\n                a[i]=\"W\"\n                k-=1\n        x=0\n        for i in range(n):\n            if a[i]==\"W\":\n                x+=1\n                if i>0 and a[i-1]==\"W\":\n                    x+=1\n        print(x)\n######## Python 2 and 3 footer by Pajenegod and c1729\n \n# Note because cf runs old PyPy3 version which doesn't have the sped up\n# unicode strings, PyPy3 strings will many times be slower than pypy2.\n# There is a way to get around this by using binary strings in PyPy3\n# but its syntax is yferent which makes it kind of a mess to use.\n \n# So on cf, use PyPy2 for best string performance.\n \npy2 = round(0.5)\nif py2:\n    from future_builtins import ascii, filter, hex, map, oct, zip\n    range = xrange\n \nimport os, sys\nfrom io import IOBase, BytesIO\n \nBUFSIZE = 8192\nclass FastIO(BytesIO):\n    newlines = 0\n \n    def __init__(self, file):\n        self._file = file\n        self._fd = file.fileno()\n        self.writable = \"x\" in file.mode or \"w\" in file.mode\n        self.write = super(FastIO, self).write if self.writable else None\n \n    def _fill(self):\n        s = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n        self.seek((self.tell(), self.seek(0,2), super(FastIO, self).write(s))[0])\n        return s\n \n    def read(self):\n        while self._fill(): pass\n        return super(FastIO,self).read()\n \n    def readline(self):\n        while self.newlines == 0:\n            s = self._fill(); self.newlines = s.count(b\"\\n\") + (not s)\n        self.newlines -= 1\n        return super(FastIO, self).readline()\n \n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.getvalue())\n            self.truncate(0), self.seek(0)\n \nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        if py2:\n            self.write = self.buffer.write\n            self.read = self.buffer.read\n            self.readline = self.buffer.readline\n        else:\n            self.write = lambda s:self.buffer.write(s.encode('ascii'))\n            self.read = lambda:self.buffer.read().decode('ascii')\n            self.readline = lambda:self.buffer.readline().decode('ascii')\n \n \nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip('\\r\\n')\n \n# Cout implemented in Python\nimport sys\nclass ostream:\n    def __lshift__(self,a):\n        sys.stdout.write(str(a))\n        return self\ncout = ostream()\nendl = '\\n'\n \n# Read all remaining integers in stdin, type is given by optional argument, this is fast\ndef readnumbers(zero = 0):\n    conv = ord if py2 else lambda x:x\n    A = []; numb = zero; sign = 1; i = 0; s = sys.stdin.buffer.read()\n    try:\n        while True:\n            if s[i] >= b'R' [0]:\n                numb = 10 * numb + conv(s[i]) - 48\n            elif s[i] == b'-' [0]: sign = -1\n            elif s[i] != b'\\r' [0]:\n                A.append(sign*numb)\n                numb = zero; sign = 1\n            i += 1\n    except:pass\n    if s and s[-1] >= b'R' [0]:\n        A.append(sign*numb)\n    return A\n \n# threading.Thread(target=main).start()\nif __name__== \"__main__\":\n  main()"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nfor _ in range(t):\n    l=list(map(int,input().split()))\n    n,k=l[0],l[1]\n    s=str(input())\n    score=0\n    key=1\n    for i in range(n):\n        if(s[i]==\"L\"):\n            key=1\n        else:\n            score+=key\n            key=2\n    l=[]\n    count,count2=0,0\n    ind=0\n    for i in range(n):\n        if(s[i]==\"L\" and ind==0):\n            count2+=1\n        elif(s[i]==\"L\" and ind==1):\n            count+=1\n        elif(s[i]==\"W\" and ind==0):\n            ind=1\n        else:\n            if(count>0):\n                l.append(count)\n                count=0\n    count3=0\n    if(count>0):\n        count3=count\n    countf=count2+count3\n    l.sort()\n    #print(l,count2,count3)\n    p=len(l)\n    x=k\n    inc=0\n    for i in range(p):\n        if(x>=l[i]):\n            x=x-l[i]\n            #print((2*l[i])+1,\"now\")\n            inc+=((2*l[i])+1)\n        else:\n            inc+=(2*x)\n            x=0\n            #print(\"j\")\n        if(x==0):\n            break\n    #print(x,inc,\"here\")\n    if(x>0):\n        inc+=(2*min(x,count3))\n        x-=min(x,count3)\n    #print(x,\"here\")\n    if(x>0):\n        if(\"W\" in s):\n            inc+=(2*min(x,count2))\n            x-=min(x,count2)\n        else:\n            inc+=(2*min(x,count2)-1)\n            x-=min(x,count2)\n    print(score+inc)\n\n        \n        \n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n,k=[*map(int,input().split())]\n    s=input()\n    c=s.count('W')\n    z=[0]*(c+1)\n    x=0\n    kk=k\n    ans=0\n    if c==0 and k>0:\n        ans-=1\n    for i in range(n):\n        if i==0:\n            if s[i]=='W':\n                ans+=1\n        if i!=0:\n            if s[i]=='W':\n                if s[i-1]=='W':\n                    ans+=2\n                else:\n                    ans+=1\n        if s[i]=='W':\n            x+=1\n        if s[i]=='L':\n            z[x]+=1\n    a=z[0]+z[-1]\n    z=z[1:c]\n    z.sort()\n    for i in z:\n        if i==0:\n            continue\n        else:\n            if k-i>=0:\n                ans+=1\n                k-=i\n            else:\n                k=0\n                break\n    if k>0:\n        if k>=a:\n            k-=a\n            ans+=(kk-k)*2\n        else:\n            ans+=kk*2\n    else:\n        ans+=kk*2\n    print(ans)"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\nimport math\n\n############ ---- Input Functions ---- ############\n# single int\ndef inp():\n    return (int(input()))\n# int arr\ndef inlt():\n    return (list(map(int, input().split())))\n\n# string converted to char\ndef insr():\n    s = input()\n    return (list(s[:len(s) - 1]))\n\n\nT = inp()\nt = 0\nwhile t < T:\n    t += 1\n    n,k = inlt()\n    x = insr()\n    res = 0\n    arr = []\n    gap = -1\n    flag = False\n    for c in x:\n        if c=='L' and gap!=-1:\n            gap+=1\n        elif c=='W':\n            flag=True\n            if gap==-1:\n                gap=0\n                continue\n            if gap!=0:\n                arr.append(gap)\n                gap=0\n    if not flag and k>0:\n        print(min(k,len(x))*2-1)\n        continue\n#17+11+11+4+\n    arr.sort()\n    # print(arr)\n    for gap in arr:\n        if k>=gap:\n            res += gap*2+1\n            k -= gap\n        else:\n            # print(k,gap)\n            res += k*2\n            k=0\n            break\n    if k>0:\n        # print('nooo')\n        start=0\n        while start<len(x) and x[start]=='L':\n            start+=1\n        end = 0\n        while end<len(x) and len(x)-end-1>start and x[len(x)-end-1]=='L':\n            end+=1\n        if start>0 or end>0:\n            if k>start+end:\n                res+= (start+end)*2\n            else:\n                res+= k*2\n    # print(arr)\n    prior = 0\n    if x[0]=='W':\n        prior+=1\n    for i in range(1,len(x)):\n        if x[i]=='W':\n            if x[i-1]=='W':\n                prior+=2\n            else:\n                prior+=1\n    # print(res,prior)\n    res+=prior\n    print(res)"
        },
        {
            "language": 3,
            "solution": "def getsum(result) :\n    answer = 0\n\n    box = []\n\n    count = 0\n    \n    for i in result :\n        if i == \"W\" :\n            count += 1\n        else :\n            box.append(count)\n            count = 0\n\n    box.append(count)\n\n    for i in box :\n        if i != 0 :\n            answer += (2 * i) - 1\n\n    return answer\n    \n\nt = int(input())\n\nfor _ in range(t) :\n    n, k = map(int, input().split())\n\n    result = input()\n\n    wcount = result.count(\"W\")\n\n    if wcount == 0 :\n        if k != 0 :\n            print((2*k) -1)\n        else :\n            print(0)\n    else :\n        score = getsum(result)\n\n        betL = []\n        nobetL = []\n\n        start = -1\n        end = -1\n\n        tempw = 0\n\n        count = 0\n\n        for i in range(len(result)) :\n\n            if result[i] == \"L\" :\n                count += 1\n            else :\n                tempw += 1\n                \n                if start == -1 and end == -1 :\n                    if count != 0 :\n                        nobetL.append(count)\n                    count = 0\n                    start = i\n                elif start != -1 and end == -1 and tempw != wcount:\n                    if count != 0 :\n                        betL.append(count)\n                    count = 0\n                elif start != -1 and end == -1 and tempw == wcount :\n                    if count != 0 :\n                        betL.append(count)\n                    count = 0\n                    end = i\n        if count != 0 :\n            nobetL.append(count)\n\n        betL = sorted(betL)\n        nobetL = sorted(nobetL)\n\n        tempsum = 0\n\n        if sum(betL) >= k :\n            for i in betL :\n                if k >= i :\n                    tempsum += (2*i) + 1\n                    k -= i\n                else :\n                    tempsum += (2*k)\n                    break\n            print(score + tempsum)\n        else :\n            for i in betL :\n                if k >= i :\n                    tempsum += (2*i) + 1\n                    k -= i\n                else :\n                    tempsum += (2*k)\n                    break\n\n            for i in nobetL :\n                if k >= i :\n                    tempsum += (2*i)\n                    k -= i\n                else :\n                    tempsum += (2*k)\n                    break\n                \n            print(score + tempsum)"
        },
        {
            "language": 4,
            "solution": "////////////package round_global_11;\n\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Scanner;\n\npublic class B {\n    public static void main(String[] args) {\n        // TODO Auto-generated method stub\n        Scanner s = new Scanner(System.in);\n        int a = s.nextInt();\n        s.nextLine();\n        for (int x=0;x<a;x++){\n            String[] l=s.nextLine().split(\" \");\n            int n=Integer.parseInt(l[0]);\n            int k=Integer.parseInt(l[1]);\n            String b=s.nextLine();\n            ArrayList<Integer> gap=new ArrayList<>();\n            int c=0;\n            boolean check=false;\n            int ans=0;\n            for (int i=0;i<b.length()-1;i++){\n                if (b.substring(i,i+1).equals(b.substring(i+1,i+2))){\n                    c++;\n                }\n                else{\n                    c++;\n                    if (b.charAt(i)=='W'){\n                        ans=ans+1+2*(c-1);\n                    }\n                    if (b.charAt(i) == 'L' && check){\n                        gap.add(c);\n                    }\n                    check=true;\n                    c=0;\n\n                }\n            }\n            if (c>0){\n                if (b.charAt(b.length()-1)=='W'){\n                    c++;\n                    ans=ans+1+2*(c-1);\n                }\n            }\n            else{\n                if (b.charAt(b.length()-1)=='W'){\n                    ans=ans+1;\n                }\n            }\n            Collections.sort(gap);\n            check=true;\n            for (int i:gap){\n                if (k-i<0){\n                    ans=ans+2*k;\n                    check=false;\n                    break;\n                }\n                else{\n                    k=k-i;\n                    ans=ans+2*i+1;\n                }\n            }\n            if (check && k!=0){\n                int ind=0;\n                for (int i=0;i<b.length();i++){\n                    if (b.charAt(i)=='W'){\n                        ind=i;\n                        break;\n                    }\n                }\n                if (ind==0 && b.charAt(0)=='L'){\n                    ind=b.length();\n                }\n                if (ind>=k){\n                    if (ind==b.length()){\n                        ans=ans+1+2*(k-1);\n                    }\n                    else{\n                        ans=ans+2*k;\n                    }\n                }\n                else{\n                    k=k-ind;\n                    ans=ans+2*ind;\n                    for (int i=b.length()-1;i>=0;i--){\n                        if (b.charAt(i)=='W'){\n                            ind=i;\n                            break;\n                        }\n                    }\n                    ind=b.length()-ind-1;\n                    if (ind>=k){\n                        ans=ans+2*k;\n                    }\n                    else{\n                        ans=ans+2*ind;\n                    }\n                }\n            }\n            System.out.println(ans);\n\n        }\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "'''input\n1\n3 0\nLWW\n\n'''\n\nfrom collections import deque, defaultdict\n\ndef solve():\n\tn, k = map(int, input().split())\n\ts = input()\n\tclss = []\n\tcl = fl = ls = 0\n\tfor i in range(n):\n\t\tif s[i] == 'L':\n\t\t\tcl+=1\n\t\t\tls+=1\n\t\telif fl:\n\t\t\tclss.append(cl)\n\t\t\tcl = 0\n\t\telse:\n\t\t\tfl = 1\n\t\t\tcl = 0\n\ts = i = 0 \n\tclss.sort()\n\twhile i<len(clss):\n\t\ts+=clss[i]\n\t\tif s>k:\n\t\t\tbreak\n\t\ti+=1\n\tcons = len(clss)-i+1\n\tw = n-ls\n\tif ls == n and k ==0:\n\t\tprint(0)\n\telif k>=ls:\n\t\tprint(2*n-1)\n\telse:\n\t\tprint(2*(w+k)-cons)\n\ndef main():\n\tt = 1\n\tt = int(input())\n\tfor _ in range(t):\n\t\tsolve()\nmain()"
        },
        {
            "language": 4,
            "solution": "// package CodeForces;\n\nimport java.io.BufferedOutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.InputMismatchException;\n\npublic class GlobalRound11B {\n\n\tpublic static void solve() {\n\t\tint t = s.nextInt();\n\t\twhile(t-- > 0) {\n\t\t\tint n = s.nextInt();\n\t\t\tint k = s.nextInt();\n\t\t\tString str = s.next();\n\t\t\tint please = 0;\n\t\t\tfor(int i = n - 1; i >= 0; i--) {\n\t\t\t\tif(str.charAt(i) == 'L') please++;\n\t\t\t\telse break;\n\t\t\t}\n\t\t\tint start = 0;\n\t\t\tfor(int i = 0; i < n; i++) {\n\t\t\t\tif(str.charAt(i) == 'L') start++;\n\t\t\t\telse break;\n\t\t\t}\n\t\t\tArrayList<Integer> loss = new ArrayList<Integer>();\n\t\t\tArrayList<Integer> wins = new ArrayList<Integer>();\n\t\t\tint sum = 0;\n\t\t\tfor(int i = start; i < n - please; i++) {\n\t\t\t\tif(str.charAt(i) == 'L') {\n\t\t\t\t\tint j = i + 1;\n\t\t\t\t\tint count = 1;\n\t\t\t\t\twhile(j < n - please && str.charAt(j) == 'L') {\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\ti = j - 1;\n\t\t\t\t\tloss.add(count);\n\t\t\t\t\tsum += count;\n\t\t\t\t}else {\n\t\t\t\t\tint j = i + 1;\n\t\t\t\t\tint count = 1;\n\t\t\t\t\twhile(j < n - please && str.charAt(j) == 'W') {\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\ti = j - 1;\n\t\t\t\t\twins.add(count);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(sum + please + start <= k) {\n\t\t\t\tout.println(-1 + 2 * n);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tCollections.sort(loss);\n\t\t\tint comp = wins.size();\n\t\t\tint temp = k;\n\t\t\tint z = 0;\n\t\t\twhile(z < loss.size() && loss.get(z) <= k) {\n\t\t\t\tcomp--;\n\t\t\t\tk -= loss.get(z);\n\t\t\t\tz++;\n\t\t\t}\n\t\t\tif(please == n) {\n\t\t\t\tout.println(Math.max(0, 2 * temp - 1));\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tint total = 2 * (n - sum - please - start + temp) - comp;\n\t\t\tout.println(total);\n\t\t}\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Thread(null, null, \"Thread\", 1 << 27) {\n\t\t\tpublic void run() {\n\t\t\t\ttry {\n\t\t\t\t\tout = new PrintWriter(new BufferedOutputStream(System.out));\n\t\t\t\t\ts = new FastReader(System.in);\n\t\t\t\t\tsolve();\n\t\t\t\t\tout.close();\n\t\t\t\t} catch (Exception e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t\tSystem.exit(1);\n\t\t\t\t}\n\t\t\t}\n\t\t}.start();\n\t}\n\n\tpublic static PrintWriter out;\n\tpublic static FastReader s;\n\n\tpublic static class FastReader {\n\n\t\tprivate InputStream stream;\n\t\tprivate byte[] buf = new byte[4096];\n\t\tprivate int curChar, snumChars;\n\n\t\tpublic FastReader(InputStream stream) {\n\t\t\tthis.stream = stream;\n\t\t}\n\n\t\tpublic int read() {\n\t\t\tif (snumChars == -1) {\n\t\t\t\tthrow new InputMismatchException();\n\t\t\t}\n\t\t\tif (curChar >= snumChars) {\n\t\t\t\tcurChar = 0;\n\t\t\t\ttry {\n\t\t\t\t\tsnumChars = stream.read(buf);\n\t\t\t\t} catch (IOException E) {\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (snumChars <= 0) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn buf[curChar++];\n\t\t}\n\n\t\tpublic int nextInt() {\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c)) {\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tint sgn = 1;\n\t\t\tif (c == '-') {\n\t\t\t\tsgn = -1;\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tint number = 0;\n\t\t\tdo {\n\t\t\t\tnumber *= 10;\n\t\t\t\tnumber += c - '0';\n\t\t\t\tc = read();\n\t\t\t} while (!isSpaceChar(c));\n\t\t\treturn number * sgn;\n\t\t}\n\n\t\tpublic long nextLong() {\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c)) {\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tlong sgn = 1;\n\t\t\tif (c == '-') {\n\t\t\t\tsgn = -1;\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tlong number = 0;\n\t\t\tdo {\n\t\t\t\tnumber *= 10L;\n\t\t\t\tnumber += (long) (c - '0');\n\t\t\t\tc = read();\n\t\t\t} while (!isSpaceChar(c));\n\t\t\treturn number * sgn;\n\t\t}\n\n\t\tpublic int[] nextIntArray(int n) {\n\t\t\tint[] arr = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tarr[i] = this.nextInt();\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\n\t\tpublic long[] nextLongArray(int n) {\n\t\t\tlong[] arr = new long[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tarr[i] = this.nextLong();\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\n\t\tpublic String next() {\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c)) {\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tdo {\n\t\t\t\tres.appendCodePoint(c);\n\t\t\t\tc = read();\n\t\t\t} while (!isSpaceChar(c));\n\t\t\treturn res.toString();\n\t\t}\n\n\t\tpublic String nextLine() {\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c)) {\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tdo {\n\t\t\t\tres.appendCodePoint(c);\n\t\t\t\tc = read();\n\t\t\t} while (!isEndofLine(c));\n\t\t\treturn res.toString();\n\t\t}\n\n\t\tpublic boolean isSpaceChar(int c) {\n\t\t\treturn c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n\t\t}\n\n\t\tpublic boolean isEndofLine(int c) {\n\t\t\treturn c == '\\n' || c == '\\r' || c == -1;\n\t\t}\n\n\t}\n\n\t\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\nimport static java.lang.Math.*;\n\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        br = new BufferedReader(new InputStreamReader(System.in));\n        PrintWriter pw = new PrintWriter(System.out);\n        int t = nextInt();\n        while (t-- != 0) {\n            int n = nextInt();\n            int k = nextInt();\n            char[] a = next().toCharArray();\n            int wins = 0;\n            int loses = 0;\n            int winsStreak = 0;\n            ArrayList<Integer> losesStreak = new ArrayList<>();\n            for (int i = 0; i < a.length; i++) {\n                if (a[i] == 'W') {\n                    wins++;\n                    if (i == 0 || a[i - 1] == 'L') winsStreak++;\n                }\n            }\n            if (k + wins >= n) pw.println(2 * n - 1);\n            else if (wins == 0) pw.println(max(0, 2 * k - 1));\n            else {\n                for (int i = 0; i < a.length; i++) {\n                    if (a[i] == 'L') loses++;\n                    if (i < n - 1) {\n                        if (a[i + 1] == 'W' && loses != 0) {\n                            losesStreak.add(loses);\n                            loses = 0;\n                        }\n                    }\n                }\n                if (a[0] == 'L') losesStreak.set(0, (int) 1e8);\n                if (a[n - 1] == 'L') losesStreak.add((int) 1e8);\n                Collections.sort(losesStreak);\n                wins += k;\n                for (int ls : losesStreak) {\n                    if (k < ls) break;\n                    k -= ls;\n                    winsStreak--;\n                }\n                pw.println(2 * wins - winsStreak);\n            }\n        }\n        pw.close();\n    }\n\n    static BufferedReader br;\n    static StringTokenizer st = new StringTokenizer(\"\");\n    static PrintWriter pw;\n\n    static long nextLong() throws IOException {\n        while (!st.hasMoreTokens()) st = new StringTokenizer(br.readLine());\n        return Long.parseLong(st.nextToken());\n    }\n\n    static int nextInt() throws IOException {\n        while (!st.hasMoreTokens()) st = new StringTokenizer(br.readLine());\n        return Integer.parseInt(st.nextToken());\n    }\n\n    static double nextDouble() throws IOException {\n        while (!st.hasMoreTokens()) st = new StringTokenizer(br.readLine());\n        return Double.parseDouble(st.nextToken());\n    }\n\n    static String next() throws IOException {\n        while (!st.hasMoreTokens()) st = new StringTokenizer(br.readLine());\n        return st.nextToken();\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\nusing vi = vector<int>;\nconst int MAXN = 1e5 + 5;\nint N, K;\nmultiset<int> loseLen;\nbool W[MAXN];\nvoid solve() {\n  cin >> N >> K;\n  loseLen.clear();\n  string S;\n  cin >> S;\n  int numW = 0;\n  for (int i = (0); i < (N); i++) {\n    W[i] = S[i] == 'W';\n    if (W[i]) numW++;\n  }\n  K = min(N - numW, K);\n  int li = -1;\n  for (int i = (0); i < (N); i++) {\n    if (W[i]) {\n      if (li != -1 && li != i - 1) {\n        loseLen.insert(i - li - 1);\n      }\n      li = i;\n    }\n  }\n  int ans = numW + K;\n  for (int i = (1); i < (N); i++)\n    if (W[i] && W[i - 1]) ans++;\n  while (!loseLen.empty()) {\n    int x = *loseLen.begin();\n    loseLen.erase(loseLen.begin());\n    if (K >= x) {\n      K -= x;\n      ans += x + 1;\n    } else\n      break;\n  }\n  if (numW != 0)\n    ans += K;\n  else\n    ans += max(K - 1, 0);\n  cout << ans << '\\n';\n}\nint main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  int T;\n  cin >> T;\n  for (int i = (0); i < (T); i++) solve();\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nt = int(input())\nfor _ in range(t):\n    n, k = map(int, input().split())\n    s = input()\n    li = []\n    cnt = 0\n    ans = 0\n    lose = 0\n    first = True\n    for i in range(n):\n        if s[i]=='W':\n            if not first and cnt>0:\n                li.append(cnt)\n            cnt = 0\n            if i>0 and s[i-1]=='W':\n                ans += 2\n            else:\n                ans += 1\n            first = False\n        else:\n            lose += 1\n            cnt += 1\n    li.sort()\n    k = min(lose, k)\n    for i in li:\n        if k<i:\n            break\n        ans += 2*i+1\n        k -= i\n    ans += k*2\n    if lose==n and k>0:\n        ans -= 1\n    print(ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstruct tri {\n  int a, b, c;\n};\nconst int inf = 0x3f3f3f3f;\nconst long long linf = 0x3f3f3f3f3f3f3f3f;\nconst int N = 1e5 + 10;\nconst long long mod = 1e9 + 7;\nconst double PI = acos(0) * 2;\nint solve() {\n  int n, k, ret = 0;\n  cin >> n >> k;\n  string s;\n  cin >> s;\n  vector<int> v;\n  int left = 0;\n  int st = 0;\n  while (st < n && s[st] == 'L') st++;\n  if (st == n) {\n    k = min(k, n);\n    if (k == 0) return 0;\n    return k * 2 - 1;\n  }\n  int cnt = 0;\n  for (int i = st; i < n; i++) {\n    if (s[i] == 'L')\n      cnt++;\n    else {\n      if (cnt) v.push_back(cnt);\n      cnt = 0;\n      if (i && s[i - 1] == 'W')\n        ret += 2;\n      else\n        ret++;\n    }\n  }\n  st += cnt;\n  sort(v.begin(), v.end());\n  for (int i : v) {\n    if (i <= k) {\n      ret += i * 2 + 1;\n      k -= i;\n    } else {\n      ret += k * 2;\n      return ret;\n    }\n  }\n  k = min(k, st);\n  ret += k * 2;\n  return ret;\n}\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0), cout.tie(0);\n  int _;\n  cin >> _;\n  while (_--) {\n    cout << solve() << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "def solve():\n    n,k=map(int,input().split())\n    s=list(input())\n\n    if n==1:\n        print(1 if (s[0]=='W' or k>0) else 0)\n        return\n    if not 'W' in s:\n        print(min(k,n)*2-1 if k>0 else 0)\n        return\n\n    ans=0\n    arr=[]\n    arr2=0\n    i=0\n    for i in range(n):\n        if s[i]=='W':\n            if i>0 and s[i-1]=='W':\n                ans+=2\n            else:\n                ans+=1\n    i=0\n    while(i<n):\n        if s[i]=='W':\n            i+=1\n            continue\n        j=i\n        while(j<n and s[j]==s[i]):\n            j+=1\n        if j==n or i==0:\n            arr2+=j-i\n        else:\n            arr.append(j-i)\n        i=j\n    arr.sort()\n    for c in arr:\n        if c>k:\n            arr2+=c\n            continue\n        ans+=c*2+1\n        k-=c\n    ans+=min(k*2,arr2*2)\n    print(ans)\n\n    \n\n\nt=int(input())\n\nfor _ in range(t):\n    solve()"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n, k = map(int, input().split())\n    s = input()\n    score = 0\n    tmp = s.count('L')\n    for i in range(1, n):\n        if s[i] == \"W\" and s[i - 1] == \"W\":\n            score += 2\n        elif s[i] == \"W\":\n            score += 1\n    if s[0] == 'W':\n        score += 1\n    if k == 0:\n        print(score)\n        continue\n    res = []\n    idx = s.find('W')\n    count = 0\n    for i in range(idx + 1, n):\n        if s[i] == 'L':\n            count += 1\n        else:\n            res.append(count)\n            count = 0\n    res = list(filter(lambda x: x != 0, res))\n    res.sort()\n    i = 0\n    while k > 0 and i < len(res):\n        if res[i] <= k:\n            k -= res[i]\n            score += 2 * res[i]\n            score += 1\n        else:\n            score += 2 * k\n            k = 0\n        i += 1\n    if 'W' in s:\n        score += 2 * min(k, (tmp - sum(res)))\n    else:\n        if k<=n:\n            score += 2 * k - 1\n        else:\n            score += 2 * n - 1\n    print(score)"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\npublic class check2  {\n\n    public static void main(String[] args) throws IOException{\n\n        Reader sc=new Reader();\n        PrintWriter out = new PrintWriter(System.out);\n\n        int t=sc.nextInt();\n\n        while(t-->0)\n        {\n            int n=sc.nextInt();\n            long k=sc.nextInt();\n\n            long ans=0;\n\n            String s1=sc.next();\n            char carr[]=s1.toCharArray();\n            int cnt1[]=new int[carr.length];\n\n            int cntL=0;\n            for(int i=0;i<n;i++)\n            {\n                if(carr[i]=='L') cntL+=1;\n            }\n\n            if(cntL<=k)\n            {\n                out.println(n*2-1);\n                continue;\n            }\n            if(cntL==n){\n                out.println(Math.max(0,k*2-1));\n                continue;\n            }\n            ArrayList<Integer> tcnt1=new ArrayList<>();\n            ArrayList<Integer> tind1=new ArrayList<>();\n\n            for(int i=0;i<n;i++)\n            {\n                if(i==0)\n                {\n                    if(carr[i]=='L') cnt1[i]=-1;\n                    else cnt1[i]=1;\n                    continue;\n                }\n                if(carr[i]=='L')\n                {\n                    if(cnt1[i-1]>0)\n                    {\n                        tcnt1.add(cnt1[i-1]);\n                        tind1.add(i-1);\n                        cnt1[i]=-1;\n                    }\n\n                    else if(cnt1[i-1]<0) cnt1[i]=cnt1[i-1]-1;\n                }\n                else if(carr[i]=='W')\n                {\n                    if(cnt1[i-1]>0) cnt1[i]=cnt1[i-1]+1;\n\n                    else if(cnt1[i-1]<0)\n                    {\n                        tcnt1.add(cnt1[i-1]);\n                        tind1.add(i-1);\n                        cnt1[i]=1;\n                    }\n                }\n\n            }\n\n            tcnt1.add(cnt1[n-1]);\n            tind1.add(n-1);\n//            System.out.println(tcnt1);\n//            System.out.println(tind1);\n\n            for(int i=0;i<cnt1.length;i++)\n            {\n                if(cnt1[i]==1)\n                {\n                    ans+=1;\n                }\n                else if(cnt1[i]>1)\n                {\n                    ans+=2;\n                }\n                else continue;\n            }\n\n//            out.println(ans);\n            int xtra=0;\n           // long tarr[]=new long[200099];\n\n            TreeMap<Integer,Long> tm = new TreeMap<>();\n\n            for(int i=0;i<tcnt1.size();i++)\n            {\n                if(i==0 || i==tcnt1.size()-1)\n                {\n                    if(tcnt1.get(i)<0)\n                    {\n                        //int indtemp=tarr.length-1;\n                        xtra+=tcnt1.get(i)*(-1);\n\n                        continue;\n                    }\n\n                }\n                int val=tcnt1.get(i);\n                if(val<0)\n                {\n                    int tindex=-1*val;\n                    if(tm.containsKey(tindex))\n                    {\n                        long t12=tm.get(tindex);\n                        tm.put(tindex,t12+1);\n                    }\n                    else tm.put(tindex,1L);\n                    //tarr[tindex]+=1;\n                }\n            }\n\n            //out.println(tarr[1]+\" \"+tarr[2]);\n\n           for(Map.Entry<Integer,Long> mp:tm.entrySet())\n           {\n\n               long i=mp.getKey();\n               long t5 = mp.getValue();\n\n//               out.println(i+\" \"+t5);\n               long tinc=i*2+1;\n\n               long tempk=t5*i;\n               if(k>=tempk)\n               {\n                   k-=tempk;\n                   ans+=t5*tinc;\n\n\n                   if(k==0) break;\n               }\n               else if(k<tempk)\n               {\n                   //long tinc1=i*2;\n\n                   long t11=k%i;\n                   long k1=k/i;\n\n                   ans+=k1*tinc;\n                   ans+=t11*2;\n\n                   k=0;\n                   break;\n               }\n\n           }\n           long tmin=Math.min(k,xtra);\n           ans+=tmin*2;\n//            for(int i=0;i<tarr.length;i++)\n//            {\n////                if(i==tarr.length-1)\n////                {\n////                    long tmin=Math.min(k,tarr[i]);\n////                    ans+=tmin*2;\n////                    break;\n////                }\n//                long tempk = tarr[i]*i;\n//                long tinc=i*2+1;\n//                //out.println(k+\" \"+tempk);\n//                if(k>=tempk)\n//                {\n//                    k-=tempk;\n//                    ans+=tarr[i]*tinc;\n//\n//                    if(k==0) break;\n//                }\n//                else if(k<tempk)\n//                {\n//                    //long tinc1=i*2;\n//\n//                    long t11=k%i;\n//                    long k1=k/i;\n//\n//                    ans+=k1*tinc;\n//                    ans+=t11*2;\n//\n//                    break;\n//                }\n//\n//                //out.println(\"kkk \"+ans);\n//            }\n\n//            System.out.println(Arrays.toString(cnt1));\n\n            out.println(ans);\n\n\n\n        }\n        out.flush();\n    }\n\n\n    public static void shufflearray(long arr[])\n    {\n\n\n        int n=arr.length;\n        Random rand=new Random();\n        for(int i=0;i<n;i++)\n        {\n            long temp=arr[i];\n            int randomPos=i+rand.nextInt(n-i);\n            arr[i]=arr[randomPos];\n            arr[randomPos]=temp;\n        }\n    }\n    static class Reader {\n        final private int BUFFER_SIZE = 1 << 16;\n        private DataInputStream din;\n        private byte[] buffer;\n        private int bufferPointer, bytesRead;\n\n        public Reader() {\n            din = new DataInputStream(System.in);\n            buffer = new byte[BUFFER_SIZE];\n            bufferPointer = bytesRead = 0;\n        }\n\n        public Reader(String file_name) throws IOException {\n            din = new DataInputStream(new FileInputStream(file_name));\n            buffer = new byte[BUFFER_SIZE];\n            bufferPointer = bytesRead = 0;\n        }\n\n        public String nextLine() throws IOException {\n            byte[] buf = new byte[64]; // line length\n            int cnt = 0, c;\n            while ((c = read()) != -1) {\n                if (c == '\\n')\n                    break;\n                buf[cnt++] = (byte) c;\n            }\n            return new String(buf, 0, cnt);\n        }\n        public boolean isSpaceChar(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        public String next() throws IOException{\n            int c = read();\n            while (isSpaceChar(c)) c = read();\n            StringBuilder res = new StringBuilder();\n            do {\n                res.appendCodePoint(c);\n                c = read();\n            } while (!isSpaceChar(c));\n            return res.toString();\n        }\n\n\n        public int nextInt() throws IOException {\n            int ret = 0;\n            byte c = read();\n            while (c <= ' ')\n                c = read();\n            boolean neg = (c == '-');\n            if (neg)\n                c = read();\n            do {\n                ret = ret * 10 + c - '0';\n            } while ((c = read()) >= '0' && c <= '9');\n\n            if (neg)\n                return -ret;\n            return ret;\n        }\n\n        public long nextLong() throws IOException {\n            long ret = 0;\n            byte c = read();\n            while (c <= ' ')\n                c = read();\n            boolean neg = (c == '-');\n            if (neg)\n                c = read();\n            do {\n                ret = ret * 10 + c - '0';\n            }\n            while ((c = read()) >= '0' && c <= '9');\n            if (neg)\n                return -ret;\n            return ret;\n        }\n\n        public double nextDouble() throws IOException {\n            double ret = 0, div = 1;\n            byte c = read();\n            while (c <= ' ')\n                c = read();\n            boolean neg = (c == '-');\n            if (neg)\n                c = read();\n\n            do {\n                ret = ret * 10 + c - '0';\n            }\n            while ((c = read()) >= '0' && c <= '9');\n\n            if (c == '.') {\n                while ((c = read()) >= '0' && c <= '9') {\n                    ret += (c - '0') / (div *= 10);\n                }\n            }\n\n            if (neg)\n                return -ret;\n            return ret;\n        }\n\n        private void fillBuffer() throws IOException {\n            bytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE);\n            if (bytesRead == -1)\n                buffer[0] = -1;\n        }\n\n        private byte read() throws IOException {\n            if (bufferPointer == bytesRead)\n                fillBuffer();\n            return buffer[bufferPointer++];\n        }\n\n        public void close() throws IOException {\n            if (din == null)\n                return;\n            din.close();\n        }\n\n    }\n\n}"
        },
        {
            "language": 3,
            "solution": "gans = []\nfor _ in range(int(input())):\n    n, k = map(int, input().split())\n    a = list(input())\n    cnt = 1\n    u = []\n    ok = False\n    ans = 0\n    for i in range(1, n):\n        if a[i] != a[i - 1]:\n            if a[i - 1] == 'L':\n                u.append([cnt, 0])\n                if not ok:\n                    u[0][1] = 1\n            else:\n                ans += cnt * 2 - 1\n            cnt = 1\n            ok = True\n        else:\n            cnt += 1\n    if a[-1] == 'L':\n        u.append([cnt, 1])\n    else:\n        ans += cnt * 2 - 1\n    u.sort(key=lambda x: (x[1], x[0]))\n    if ans == 0:\n        ans = 2 * k - min(1, k)\n        gans.append(ans)\n        continue\n    for i in range(len(u)):\n        if u[i][0] > k:\n            ans += k * 2\n            break\n        k -= u[i][0]\n        ans += u[i][0] * 2 + 1 - u[i][1]\n    gans.append(ans)\nprint('\\n'.join(map(str, gans)))\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\nint strToInt(string& a) {\n  stringstream x(a);\n  int b;\n  x >> b;\n  return b;\n}\nvoid readI(int& a) { cin >> a; }\nvoid readI(int& a, int& b) { cin >> a >> b; }\nvoid readI(int& a, int& b, int& c) { cin >> a >> b >> c; }\nvector<int> readVI(int n) {\n  vector<int> a(n);\n  for (int i = 0; i < n; i++) cin >> a[i];\n  return a;\n}\nvector<vector<int> > readVVI(int n, int m) {\n  vector<vector<int> > a(n, vector<int>(m));\n  for (int i = 0; i < n; i++) a[i] = readVI(m);\n  return a;\n}\nvector<long long> readVLL(long long n) {\n  vector<long long> a(n);\n  for (int i = 0; i < n; i++) cin >> a[i];\n  return a;\n}\nvector<vector<long long> > readVVLL(long long n, long long m) {\n  vector<vector<long long> > a(n, vector<long long>(m));\n  for (int i = 0; i < n; i++) a[i] = readVLL(m);\n  return a;\n}\nvoid print(vector<int>& a) {\n  for (auto el : a) {\n    cout << el << ' ';\n  }\n  cout << '\\n';\n}\nvoid print(vector<int>& a, int n) {\n  int cnt = 0;\n  for (auto el : a) {\n    if (cnt++ == n) break;\n    cout << el << ' ';\n  }\n  cout << '\\n';\n}\nconst int MOD = 1e9 + 7;\nconst int INF = INT_MAX;\nconst long long INFF = INT64_MAX;\nconst double EPS = 1e-9;\nconst double PI = acos(-1.0);\nconst int moveX[] = {-1, 0, 1, 0};\nconst int moveY[] = {0, 1, 0, -1};\nvoid go() {\n  int n, m;\n  string s;\n  cin >> n >> m >> s;\n  int a = n, cnt = 0, gege = 0;\n  for (int i = 0; i < n; i++) {\n    if (s[i] == 'W' && a == n) a = i;\n    if (s[i] == 'W') cnt++;\n    if (i < n && s[i] == 'W' && s[i + 1] == 'W') {\n      gege++;\n    }\n  }\n  if (a == n) {\n    cout << max(0, m * 2 - 1) << '\\n';\n  } else {\n    if (m + cnt >= n) {\n      cout << max(0, n * 2 - 1) << '\\n';\n      return;\n    }\n    vector<int> tmp;\n    int curCnt = 0;\n    for (int i = a; i < n; i++) {\n      if (s[i] == 'L')\n        curCnt++;\n      else {\n        if (curCnt > 0) tmp.push_back(curCnt);\n        curCnt = 0;\n      }\n    }\n    int last = curCnt;\n    sort(tmp.begin(), tmp.end());\n    for (int i = 0; i < tmp.size(); i++) {\n      if (m >= tmp[i]) {\n        cnt += tmp[i] * 2 + 1;\n        m -= tmp[i];\n      }\n    }\n    cnt += 2 * m;\n    cout << cnt + gege << '\\n';\n  }\n}\nsigned main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  int T = 1;\n  cin >> T;\n  while (T--) go();\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid fast() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n}\nvoid ran() { srand(chrono::steady_clock::now().time_since_epoch().count()); }\nlong long get_rand() {\n  long long a = rand();\n  long long b = rand();\n  return a * (RAND_MAX + 1ll) + b;\n}\nvoid usaco() {\n  freopen(\"problem.in\", \"r\", stdin);\n  freopen(\"problem.out\", \"w\", stdout);\n}\nint score(string k) {\n  int x = 0;\n  for (int i = 0; i < k.size(); i++) {\n    if (k[i] == 'W') {\n      x++;\n      if (i > 0 && k[i - 1] == 'W') x++;\n    }\n  }\n  return x;\n}\nvoid solve() {\n  int n, k;\n  cin >> n >> k;\n  string s;\n  cin >> s;\n  bool ol = true;\n  int l = 0;\n  for (int i = 0; i < n; i++) {\n    if (s[i] == 'W')\n      ol = false;\n    else\n      l++;\n  }\n  if (ol) {\n    cout << max(0, 2 * min(n, k) - 1) << endl;\n    return;\n  }\n  vector<int> gaps;\n  int ls = -1;\n  for (int i = 0; i < n; i++) {\n    if (s[i] == 'W') {\n      if (ls != -1) {\n        if (ls != i - 1) {\n          gaps.push_back(i - ls - 1);\n        }\n      }\n      ls = i;\n    }\n  }\n  sort(gaps.begin(), gaps.end());\n  int ex = 0, sm = 0;\n  for (int i = 0; i < gaps.size(); i++) {\n    sm += gaps[i];\n    if (sm <= k) {\n      ex = i + 1;\n    }\n  }\n  k = min(k, l);\n  cout << score(s) + 2 * k + ex << endl;\n}\nsigned main() {\n  ran();\n  fast();\n  int t = 1;\n  cin >> t;\n  while (t--) solve();\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\nimport static java.lang.Math.*;\n\npublic class B {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        PrintWriter pw = new PrintWriter(System.out);\n        int t = in.nextInt();\n        for (int tt = 0; tt < t; tt++) {\n            int n = in.nextInt(), k = in.nextInt();\n            char[] s = in.next().toCharArray();\n            pw.println(solve(s, n, k));\n        }\n\n        pw.close();\n    }\n\n    static long solve(char[] arr, int n, int k) {\n       int res = 0;\n       int los = 0;\n       if (n == k) return 2 * n - 1;\n       for (int i = 0; i < n; i++) {\n           if (arr[i] == 'W') {\n               res++;\n               if (i > 0 && arr[i - 1] == 'W') res++;\n               continue;\n           }\n           los++;\n       }\n       if (k == 0) return res;\n       if (los < k) return 2 * n - 1;\n       if (los == n) return 2 * k - 1;\n\n       res += 2 * k;\n       int cnt = Integer.MIN_VALUE;\n       PriorityQueue<Integer> diff = new PriorityQueue<>();\n       for (int i = 0; i < n; i++) {\n           if (arr[i] == 'W') {\n               if (cnt > 0)diff.add(cnt);\n               cnt = 0;\n           } else cnt++;\n       }\n       while (!diff.isEmpty()) {\n           int temp = diff.remove();\n           if (temp > k) break;\n           res++;\n           k -= temp;\n       }\n       return res;\n    }\n\n\n    static void debug(Object... obj) {\n        System.err.println(Arrays.deepToString(obj));\n    }\n\n}\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n, k = list(map(int, input().split()))\n    a = list(input())\n    yes = 0\n    if a[0] == 'W':\n        ans = 1\n        yes = 1\n        c = 0\n    else:\n        ans = 0\n        c = 1\n    r = []\n    first = 0\n    for i in range(1, n):\n        if a[i] == 'W' and a[i - 1] == 'W':\n            ans += 2\n        elif a[i] == 'W' and a[i - 1] == 'L' and yes != 0:\n            r.append(c)\n            c = 0\n            ans += 1\n        elif a[i] == 'W' and a[i - 1] == 'L':\n            first = c\n            yes = 1\n            ans += 1\n            c = 0\n        else:\n            c += 1\n    last = c\n    if ans == 0:\n        print(min(max(k * 2 - 1, 0), n * 2 - 1))\n    else:\n        r.sort()\n        s = 0\n        i = 0\n        j = len(r)\n        while i < j and s + r[i] <= k:\n            s += r[i]\n            ans += r[i] * 2 + 1\n            i += 1\n        k -= s\n        if i < j:\n            ans += k * 2\n        else:\n            ans += min(last * 2 + first * 2, k * 2)\n        print(ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int todx[] = {-2, -2, -1, -1, 1, 1, 2, 2};\nconst int tody[] = {-1, 1, -2, 2, -2, 2, -1, 1};\nbool sortbysec(const pair<long long, long long> &a,\n               const pair<long long, long long> &b) {\n  return (a.second < b.second);\n}\nvoid func(void) {\n  freopen(\"input.txt\", \"r\", stdin);\n  freopen(\"output.txt\", \"w\", stdout);\n}\nint main() {\n  long long T;\n  cin >> T;\n  for (long long t = 0; t < T; t++) {\n    long long n;\n    long long k;\n    cin >> n >> k;\n    string s;\n    cin >> s;\n    long long last1 = 0;\n    vector<long long> zer(n, 0);\n    vector<long long> sg;\n    long long cnt = 0;\n    if (s[0] == 'W') cnt = 1;\n    for (int i = 1; i < n; i++) {\n      if (s[i] == 'W') {\n        if (s[i - 1] == 'W')\n          cnt += 2;\n        else\n          cnt += 1;\n      }\n    }\n    if (s[0] == 'L') zer[0] = 1;\n    if (n == 1) sg.push_back(zer[0]);\n    for (int i = 1; i < n; i++) {\n      if (s[i] == 'L') {\n        zer[i] = 1;\n        zer[i] += zer[i - 1];\n      } else {\n        if (s[i - 1] == 'L') {\n          sg.push_back(zer[i - 1]);\n        }\n      }\n      if (i == n - 1) {\n        if (s[i] == 'L') {\n          sg.push_back(zer[i]);\n          last1 = zer[i];\n        }\n      }\n    }\n    long long max1 = 0;\n    for (int i = 0; i < n; i++) {\n      if (zer[i] >= 1) {\n        max1 = max(max1, zer[i]);\n      } else {\n        break;\n      }\n    }\n    int flag1 = 0;\n    int flag2 = 0;\n    sort(sg.begin(), sg.end());\n    if (cnt == 0) cnt = -1;\n    for (auto x : sg) {\n      if (x <= k) {\n        if (flag1 == 0 && x == max1) {\n          flag1 = 1;\n          continue;\n        } else if (flag2 == 0 && x == last1) {\n          flag2 = 1;\n          continue;\n        } else {\n          cnt += 2 * x + 1;\n          k -= x;\n        }\n      } else {\n        cnt += 2 * min(x, k);\n        k = 0;\n        break;\n      }\n    }\n    if (flag1 == 1) {\n      if (n != 1) {\n        cnt += 2 * min(k, max1);\n      } else\n        cnt = 1;\n      k = k - min(k, max1);\n    }\n    if (flag2 == 1) {\n      if (n != 1) {\n        cnt += 2 * min(k, last1);\n      } else\n        cnt = 1;\n      k = k - min(k, last1);\n    }\n    if (cnt == -1) cnt = 0;\n    cout << cnt << endl;\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\nusing ull = unsigned long long;\nusing pii = pair<ll, ll>;\nvoid INIT() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n}\nll gcd(ll a, ll b) { return b == 0 ? a : gcd(b, a % b); }\nll lcm(ll a, ll b) { return a / gcd(a, b) * b; }\nll fpow(ll b, ll p) {\n  ll ans = 1, now = b;\n  while (p) {\n    if (p & 1) ans = ans * now % (ll)(1e9 + 7);\n    p /= 2;\n    now = now * now % (ll)(1e9 + 7);\n  }\n  return ans;\n}\nint32_t main() {\n  INIT();\n  ll N;\n  cin >> N;\n  while (N--) {\n    ll n, k;\n    cin >> n >> k;\n    string s;\n    cin >> s;\n    vector<ll> v;\n    {\n      ll i;\n      ll now = 0;\n      for (i = 0; i < n && s[i] == 'L'; i++)\n        ;\n      for (; i < n && s[i] == 'W'; i++)\n        ;\n      for (; i < n; i++) {\n        if (s[i] == 'W' && s[i - 1] == 'L') {\n          v.emplace_back(now);\n          now = 0;\n        } else if (s[i] == 'L') {\n          now++;\n        }\n      }\n    }\n    sort(v.begin(), v.end());\n    ll ans = 0;\n    ll al = 0;\n    for (ll i = 0; i <= n - 1; i++) {\n      if (s[i] == 'L') al++;\n      if (i > 0 && s[i] == 'W' && s[i - 1] == 'W')\n        ans += 2;\n      else if (s[i] == 'W')\n        ans++;\n    }\n    if (k == 0) {\n      cout << ans << \"\\n\";\n    } else if (al != n) {\n      k = min(k, al);\n      for (auto &i : v) {\n        if (i > k) break;\n        k -= i;\n        ans += i * 2 + 1;\n      }\n      cout << (ans + k * 2) << \"\\n\";\n    } else {\n      k = min(k, al);\n      cout << (k * 2 - 1) << \"\\n\";\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\nusing ld = double;\nusing pii = pair<int, int>;\nusing vi = vector<int>;\nusing qi = queue<int>;\nusing pqi = priority_queue<int>;\nusing si = set<int>;\nconst int INF = 0x3f3f3f3f;\nconst ll INFLL = 0x3f3f3f3f3f3f3f3f;\nconst double PI = acos(-1.0);\nint _w, _t;\nFILE* _f;\nconst int N = 1e5 + 5;\nint n, k, cnt, len[N], ans, cl;\nchar s[N];\nvoid solve() {\n  cnt = ans = cl = 0;\n  _w = scanf(\"%d%d%s\", &n, &k, s + 1);\n  for (int i = 1, ls = 1; i <= n; i++) {\n    if (s[i] == 'W') {\n      if (s[i - 1] == s[i]) {\n        ans += 2;\n      } else {\n        ans += 1;\n      }\n    } else {\n      ++cl;\n    }\n    if (s[i] ^ s[ls]) {\n      if (s[ls] == 'L' && ls != 1) {\n        len[++cnt] = i - ls;\n      }\n      ls = i;\n    }\n  }\n  if (cl == n && k) {\n    --ans;\n  }\n  sort(len + 1, len + cnt + 1);\n  ans += ((min(cl, k)) << 1);\n  for (int i = 1; i <= cnt; i++) {\n    if (k < len[i]) {\n      break;\n    }\n    ++ans;\n    k -= len[i];\n  }\n  printf(\"%d\\n\", ans);\n}\nint main() {\n  _w = scanf(\"%d\", &_t);\n  while (_t--) solve();\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "//package clipse;\n\n\nimport java.util.*;\n\nimport java.util.function.Function;\nimport java.util.stream.Collectors;\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.*;\nimport java.math.*;\n\n\npublic class BB\n{\n\tstatic StringBuffer sb;\n\tstatic int A[];\n\tstatic char a[];\n\tstatic char b[];\n\tstatic long k;\n\tstatic ArrayList<Integer>prime; \n\tstatic int n;\n\tstatic int dp[];\n\t\n\t\n\t\n\t public static void main(String[] args)\n\t    {\n\t\t \n\t\tsb=new StringBuffer();\n\t\tint t=i();\n\t\twhile(t-->0) {\n\t\tint n=i();int k=i();\n\t\tchar c[]=s().toCharArray();\n\t\tint win=0;\n\t\t\n\t\t\n\t\t\n\t\tint op=k;\n\t\tint pre=-1;\n\t\t\n\t\tArrayList<pair>l=new ArrayList<>();\n\t\tint lastind=0;\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t\tif(c[i]=='W')\n\t\t\t{\n\t\t\t\tlastind=i;\n\t\t\t\tint j=i+1;\n\t\t\t\twhile(j<n&&c[j]!='W')\n\t\t\t\t\tj++;\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tif(j<n){\n\t\t\t\tl.add(new pair(j-i-1,i+1));\n\t\t\t\ti=j-1;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tCollections.sort(l);\n\t\t\n\t\t//for(pair a:l)\n\t\t\t//System.out.println(a.x+\"--\"+a.y);\n\t\t\n\t\t\n\t\tfor(int i=0;i<l.size();i++)\n\t\t{\n\t\t\t\n\t\t\tif(k>0)\n\t\t\t{\n\t\t\t\tint v=l.get(i).x;\n\t\t\t\tint ind=l.get(i).y;\n\t\t\t\t//System.out.println(ind+\"o\"+v);\n\t\t\t\t\n\t\t\t\t\tfor(int j=ind;j<ind+v;j++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(j<n) \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t//System.out.println(c[j]);\n\t\t\t\t\t\t\tif(c[j]=='L') {\n\t\t\t\t\t\t\tc[j]='W';\n\t\t\t\t\t\t\tk--;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(k<=0)\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t}\n\t\t\telse\n\t\t\t\tbreak;\n\t\t}\n\t\t\n\t\tif(k>0)\n\t\t{\n\t\t\tfor(int i=lastind;i<n;i++)\n\t\t\t\tif(c[i]=='L'&&k>0)\n\t\t\t\t{\n\t\t\t\t\tc[i]='W';\n\t\t\t\t\tk--;\n\t\t\t\t}\n\t\t\t\n\t\t}\n\t\tif(k>0)\n\t\t{\n\t\t\tfor(int i=lastind;i>=0;i--)\n\t\t\t\tif(c[i]=='L'&&k>0)\n\t\t\t\t{\n\t\t\t\t\tc[i]='W';\n\t\t\t\t\tk--;\n\t\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t\n\t\tint cnt=0;\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t\tif(i==0&&c[i]=='W')\n\t\t\t\tcnt+=1;\n\t\t\telse if(c[i]=='W'&&c[i-1]=='W')\n\t\t\t\tcnt+=2;\n\t\t\telse if(c[i]=='W')\n\t\t\t\tcnt++;\n\t\t}\n\t\t\n\t\t//System.out.println(Arrays.toString(c));\n\t\tSystem.out.println(cnt);\n\t\t\n\t\t\n\t\t\t}\n\t    }\n\t    \n\t \n//*******************************************PRIME FACTORIZE *****************************************************************************************************//\n\t static TreeMap<Integer,Integer> prime(long n)\n\t {\n\t\t TreeMap<Integer,Integer>h=new TreeMap<>();\n\t\t long num=n;\n\t\t for(int i=2;i<=Math.sqrt(num);i++)\n\t\t {\n\t\t\t if(n%i==0)\n\t\t\t {\n\t\t\t\t int nt=0;\n\t\t\t\t while(n%i==0) {\n\t\t\t\t\t n=n/i;\n\t\t\t\t\t nt++;\n\t\t\t\t }\n\t\t\t\t h.put(i, nt);\n\t\t\t }\n\t\t }\n\t\t if(n!=1)\n\t\t\t h.put((int)n, 1);\n\t\t return h;\n\t\t \n\t }\n\t \n\t\n\t\n//*************CLASS PAIR ***********************************************************************************************************************************************\n\t    static class pair implements Comparable<pair>\n\t    {\n\t        int x;\n\t        int y;\n\n\t        pair(int x, int y) {\n\t            this.x = x;\n\t            this.y = y;\n\t        }\n\t        public int compareTo(pair o) {\n\t        return x-o.x;\n\t        }\n\t    }\n//*************CLASS PAIR *****************************************************************************************************************************************************\n\t\n\t\n\t\n\n    static class InputReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private SpaceCharFilter filter;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int read() {\n            if (numChars == -1)\n                throw new InputMismatchException();\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (numChars <= 0)\n                    return -1;\n            }\n            return buf[curChar++];\n        }\n\n        public int Int() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do {\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public String String() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            StringBuilder res = new StringBuilder();\n            do {\n                res.appendCodePoint(c);\n                c = read();\n            } while (!isSpaceChar(c));\n            return res.toString();\n        }\n\n        public boolean isSpaceChar(int c) {\n            if (filter != null)\n                return filter.isSpaceChar(c);\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        public String next() {\n            return String();\n        }\n\n        public interface SpaceCharFilter {\n            public boolean isSpaceChar(int ch);\n        }\n    }\n\n    static class OutputWriter {\n        private final PrintWriter writer;\n\n        public OutputWriter(OutputStream outputStream) {\n            writer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));\n        }\n\n        public OutputWriter(Writer writer) {\n            this.writer = new PrintWriter(writer);\n        }\n\n        public void print(Object... objects) {\n            for (int i = 0; i < objects.length; i++) {\n                if (i != 0)\n                    writer.print(' ');\n                writer.print(objects[i]);\n            }\n        }\n\n        public void printLine(Object... objects) {\n            print(objects);\n            writer.println();\n        }\n\n        public void close() {\n            writer.close();\n        }\n\n        public void flush() {\n            writer.flush();\n        }\n    }\n\n    static InputReader in = new InputReader(System.in);\n    static OutputWriter out = new OutputWriter(System.out);\n    static int modulus = (int) 1e7;\n\n    public static int[] sort(int[] a) {\n        int n = a.length;\n        ArrayList<Integer> l = new ArrayList<>();\n        for (int i : a)\n            l.add(i);\n        Collections.sort(l);\n        for (int i = 0; i < l.size(); i++)\n            a[i] = l.get(i);\n        return a;\n    }\n    public static long[] sort(long[] a) {\n        int n = a.length;\n        ArrayList<Long> l = new ArrayList<>();\n        for (long i : a)\n            l.add(i);\n        Collections.sort(l);\n        for (int i = 0; i < l.size(); i++)\n            a[i] = l.get(i);\n        return a;\n    }\n\n    public static long pow(long x, long y) {\n        long res = 1;\n        while (y > 0) {\n            if (y % 2 != 0) {\n                res = (res * x) % modulus;\n                y--;\n\n            }\n            x = (x * x) % modulus;\n            y = y / 2;\n        }\n        return res;\n    }\n//GCD___+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n    public static long gcd(long x, long y) {\n        if (x == 0)\n            return y;\n        else\n            return gcd(y % x, x);\n    }\n    //****************LOWEST COMMON MULTIPLE   *************************************************************************************************************************************\n\n    public static long lcm(long x, long y) {\n        return (x * (y / gcd(x, y)));\n    }\n//INPUT PATTERN******************************************************************************************************************************************************************\n    public static int i() {\n        return in.Int();\n    }\n\n    public static long l() {\n        String s = in.String();\n        return Long.parseLong(s);\n    }\n\n    public static String s() {\n        return in.String();\n    }\n\n    public static int[] readArray(int n) {\n        int A[] = new int[n];\n        for (int i = 0; i < n; i++) {\n            A[i] = i();\n        }\n        return A;\n    }\n\n    public static long[] readArray(long n) {\n        long A[] = new long[(int) n];\n        for (int i = 0; i < n; i++) {\n            A[i] = l();\n        }\n        return A;\n    }\n\n}\n\n\n\n\n\n\n\t"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor case in range(t):\n    n,k = map(int,input().split())\n    s = input().split()[0]\n    prev = \"L\"\n    score = 0\n    curr = 0\n    l = []\n    foundW = False\n    for i in range(n):\n        if s[i] == \"W\":\n            foundW = True\n            if curr != 0:\n                l.append(curr)\n            curr = 0\n            if prev == \"L\":\n                score += 1\n            else:\n                score += 2\n        else:\n            curr += 1\n        prev = s[i]\n    if curr != 0:\n        l.append(curr)\n    if len(l) == 0:\n        print(score)\n        continue\n    beg, end = False, False\n    if s[0] == \"L\":\n        beg = True\n    if s[n-1] == \"L\":\n        end = True\n    if foundW == False:\n        score = max(2*k-1,0)\n        print(score)\n        continue\n    \n    bonus = sum(l)\n    bonusPts = 2*sum(l)+len(l)\n    reg = 0\n    regPts = 0\n    if beg:\n        bonus -= l[0]\n        reg += l[0]\n        bonusPts -= 2*l[0]+1\n        regPts += 2*l[0]\n    if end:\n        bonus -= l[len(l)-1]\n        reg += l[len(l)-1]\n        bonusPts -= 2*l[len(l)-1]+1\n        regPts += 2*l[len(l)-1]\n    if k > bonus:\n        score += bonusPts\n        k -= bonus\n        score += 2*min(reg, k)\n    else:\n        if beg:\n            del l[0]\n        if end:\n            del l[-1]\n        l.sort()\n        for i in range(len(l)):\n            if k >= l[i]:\n                score += 2*l[i]+1\n                k -= l[i]\n            else:\n                score += 2*k\n                break\n    print(score)\n"
        },
        {
            "language": 3,
            "solution": "import sys\n\ndef minp():\n\treturn sys.stdin.readline().strip()\n\ndef mint():\n\treturn int(minp())\n\ndef mints():\n\treturn map(int, minp().split())\n\n\ndef solve():\n\tn, k = mints()\n\ti = 0\n\tp = None\n\tpos = []\n\ta = list(minp())\n\tfor i in range(n):\n\t\tif a[i] == 'W':\n\t\t\tif p is not None:\n\t\t\t\tpos.append((i-p-1,p+1))\n\t\t\telse:\n\t\t\t\tfirst = i\n\t\t\tp = i\n\t#print(pos)\n\tpos.sort()\n\tfor l, f in pos:\n\t\tif k == 0:\n\t\t\tbreak\n\t\tfor i in range(f, f+l):\n\t\t\tif k > 0:\n\t\t\t\tk -= 1\n\t\t\t\ta[i] = 'W'\n\t\t\telse:\n\t\t\t\tbreak\n\tif p is not None:\n\t\tfor i in range(p-1,-1,-1):\n\t\t\tif a[i] != 'W':\n\t\t\t\tif k > 0:\n\t\t\t\t\ta[i] = 'W'\n\t\t\t\t\tk -= 1\n\t\t\t\telse:\n\t\t\t\t\tbreak\n\tfor i in range(n):\n\t\tif a[i] != 'W':\n\t\t\tif k > 0:\n\t\t\t\ta[i] = 'W'\n\t\t\t\tk -= 1\n\t\t\telse:\n\t\t\t\tbreak\n\tans = 0\n\tcnt = 0\n\t#print(''.join(a))\n\tfor i in range(n):\n\t\tif a[i] == 'W':\n\t\t\tcnt = min(cnt + 1, 2)\n\t\t\tans += cnt\n\t\telse:\n\t\t\tcnt = 0\n\tprint(ans)\n\nfor i in range(mint()):\n\tsolve()\n"
        },
        {
            "language": 3,
            "solution": "for _ in \" \"*int(input()):\n  n,k=map(int,input().split())\n  s=list(input())\n  if \"W\" not in s:\n    print(max((min(k,n)*2)-1,0))\n  elif k >= s.count(\"L\"):\n    print((n*2)-1)\n  else:\n    cnt=[]\n    sm=s.count(\"W\")\n    ind=s.index(\"W\")\n    for i in range(ind+1,n):\n      if s[i] == \"W\":\n        cnt.append(i-ind-1)\n        ind=i\n    cnt.sort()\n    for i in cnt:\n      if k >= i:\n        sm+=(2*i)+1\n        k-=i\n    if k>0:\n      sm+=(2*k)\n    print(sm)"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n,k = map(int,input().split())\n    S = input()\n    K=k\n    s = []\n    for i in S:\n        s.append(i)\n    a = []\n    if s[0]=='L':\n        ans = 0\n    else:\n        ans = 1\n    for i in range(1,n):\n        if s[i]=='W':\n            ans+=1\n            if s[i-1]=='W':\n                ans+=1\n    cnt = 0\n    for i in range(n):\n        if s[i]=='L':\n            cnt+=1\n        else:\n            if cnt!=0:\n                a.append(cnt)\n            cnt = 0\n    if cnt!=0:\n        a.append(cnt)\n    if len(a)!=0 and s[0]=='L':\n        a.remove(a[0])\n    if len(a)!=0 and s[-1]=='L':\n        a.remove(a[-1])\n    mx = a.count(0)\n    a.sort()\n    for i in a:\n        if i<=k:\n            k-=i\n            ans+=(1+2*i)\n        else:\n            ans+=2*k\n            k=0\n            break\n    cnt=0\n    for i in range(n-1,-1,-1):\n        if s[i]=='L':\n            cnt+=1\n        else:\n            break\n    mn = min(k,cnt)\n    k-=mn\n    ans+=2*mn\n    cnt = 0\n    for i in range(n):\n        if s[i]=='L':\n            cnt+=1\n        else:\n            break\n    mn = min(k,cnt)\n    ans+=2*mn\n    if s.count(\"W\")==0:\n        mn = min(K,n)\n        if mn>=1:\n            ans = 1+2*(mn-1)\n    print(ans)"
        },
        {
            "language": 4,
            "solution": "/**\n * @Created_by : Lucent868\n * @Date : 24 Jun, 2021\n * @Time :  12:15 PM\n */\n\nimport java.util.*;\nimport java.io.*;\nimport java.math.*;\n\npublic class ChessCheaterCF {\n    static InputReader in;\n    static PrintWriter out;\n\n    public static void main(String args[]) {\n        new Thread(null, new Runnable() {\n            public void run() {\n                try {\n                    solve();\n                    out.flush();\n                    out.close();\n                } catch (Exception e) {\n                    e.printStackTrace();\n                }\n            }\n        }, \"1\", 1 << 26).start();\n    }\n\n    public static void solve() {\n        in = new InputReader(System.in);\n        out = new PrintWriter(System.out);\n\n        int t = in.nextInt();\n        while (t-- > 0) {\n           int n = in.nextInt();\n           int k = in.nextInt();\n           String s = in.readString();\n           int w=0;\n            for (int i = 0; i < n; i++) {\n                if(s.charAt(i) == 'W')w++;\n            }\n\n            if(n-w <=k)\n            {\n                out.println(2*n-1);\n                continue;\n            }\n\n           int g=(int)1e9;\n           int l = 0;\n           int ws = 0;\n           ArrayList< Integer> gap = new ArrayList<>();\n            for (int i = 0; i < n; i++) {\n                   if(s.charAt(i) == 'W')\n                   {\n                       if(i==0 || s.charAt(i-1)=='L')\n                           ws++;\n                       if(g!=0)\n                        gap.add(g);\n                       g=0;\n                   }\n                    else\n                   {\n                        g++;\n                   }\n            }\n            if(g!=0){\n                if(s.charAt(n-1) !='L')\n                    gap.add(g);\n                else\n                    gap.add((int)1e9);\n            }\n\n//            out.println(ws);\n//            if (s.charAt(0) == 'L')  gap.add(0,Integer.MAX_VALUE);\n//            if (s.charAt(n-1) == 'L') gap.add(Integer.MAX_VALUE);\n\n            if (w == 0) {\n                if (k == 0) out.println(0);\n                else out.println(2*k-1);\n                continue;\n            }\n\n\n            Collections.sort(gap);\n            w+=k;\n            int i=0;\n//            out.println(gap);\n            for (int ls: gap) {\n                if (ls > k) break;\n                k -= ls;\n                ws--;\n            }\n//            out.println(w);\n            out.println(2*w-ws);\n        }\n    }\n\n    static class InputReader {\n        private final InputStream stream;\n        private final byte[] buf = new byte[8192];\n        private int curChar, numChars;\n        private SpaceCharFilter filter;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int read() {\n            if (numChars == -1) {\n                throw new InputMismatchException();\n            }\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (numChars <= 0) {\n                    return -1;\n                }\n            }\n            return buf[curChar++];\n        }\n\n        public String nextLine() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            StringBuilder res = new StringBuilder();\n            do {\n                res.appendCodePoint(c);\n                c = read();\n            } while (!isEndOfLine(c));\n            return res.toString();\n        }\n\n        public String readString() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            StringBuilder res = new StringBuilder();\n            do {\n                res.appendCodePoint(c);\n                c = read();\n            } while (!isSpaceChar(c));\n            return res.toString();\n        }\n\n        public long nextLong() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            long res = 0;\n            do {\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public int nextInt() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do {\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public int[] nextIntArray(int n) {\n            int[] arr = new int[n];\n            for (int i = 0; i < n; i++) {\n                arr[i] = nextInt();\n            }\n            return arr;\n        }\n\n        public long[] nextLongArray(int n) {\n            long[] arr = new long[n];\n            for (int i = 0; i < n; i++) {\n                arr[i] = nextLong();\n            }\n            return arr;\n        }\n\n        public boolean isSpaceChar(int c) {\n            if (filter != null)\n                return filter.isSpaceChar(c);\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        private boolean isEndOfLine(int c) {\n            return c == '\\n' || c == '\\r' || c == -1;\n        }\n\n        public interface SpaceCharFilter {\n            public boolean isSpaceChar(int ch);\n        }\n    }\n\n    public static int[] sort(int[] arr) {\n        List<Integer> temp = new ArrayList();\n        for (int i : arr) temp.add(i);\n        Collections.sort(temp);\n        int start = 0;\n        for (int i : temp) arr[start++] = i;\n        return arr;\n    }\n\n    public static long[] sort(long[] arr) {\n        List<Long> temp = new ArrayList();\n        for (long i : arr) temp.add(i);\n        Collections.sort(temp);\n        int start = 0;\n        for (long i : temp) arr[start++] = i;\n        return arr;\n    }\n\n    public static int bs(int[] a, int fromIndex, int toIndex,\n                         double key) {\n        int low = fromIndex;\n        int high = toIndex - 1;\n\n        while (low <= high) {\n            int mid = (low + high) >>> 1;\n            long midVal = a[mid];\n\n            if (midVal < key)\n                low = mid + 1;\n            else if (midVal > key)\n                high = mid - 1;\n            else\n                return mid; // key found\n        }\n        return -(low + 1);  // key not found.\n    }\n\n}\n\n\n\n\n\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor i in range(t):\n   n, m = map(int, input().split())\n   s = input()\n   scoreinitial = 0\n   if s[0] == 'W':\n      scoreinitial += 1\n   for i in range(1, len(s)):\n      if s[i] == 'W' and s[i-1] == 'W':\n         scoreinitial += 2\n      elif s[i] == 'W':\n         scoreinitial += 1\n   paq = []\n   cuts = s.split('W')\n   extr = [len(x) for x in cuts]\n   nbL = sum(extr)\n   stock = min(m, nbL)\n   if stock == 0:\n      print(scoreinitial)\n   elif nbL < n:\n      paq = sorted(extr[1:-1])\n      #print(paq)\n      rep = 0\n      for i in paq:\n         if i <= stock and i > 0:\n            rep += i*2 + 1\n            stock -= i\n      rep += 2*stock\n      print(rep+scoreinitial)\n   else:\n      print(stock*2-1)\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\nimport java.util.ArrayList;\n// import java.util.Arrays;\n// import java.util.HashMap;\n// import java.util.HashSet;\nimport java.util.Collections;\n\n\npublic class ans2{\n    static int mod = (int)10e8;\n\n    public static int lower(int arr[],int key){\n        int low = 0;\n        int high = arr.length-1;\n        while(low < high){\n            int mid = low + (high - low)/2;\n            if(arr[mid] >= key){\n                high = mid;\n            }\n            else{\n                low = mid+1;\n            }\n        }\n        return low;\n    }\n\n    public static int upper(int arr[],int key){\n        int low = 0;\n        int high = arr.length-1;\n        while(low < high){\n            int mid = low + (high - low+1)/2;\n            if(arr[mid] <= key){\n                low = mid;\n            }\n            else{\n                high = mid-1;\n            }\n        }\n        return low;\n    }\n\n    public static void main(String args[]){\n        Scanner scn = new Scanner(System.in);\n\n        int test = scn.nextInt();\n        StringBuilder sb = new StringBuilder();\n        while(test-- > 0){\n            int n = scn.nextInt();\n            int k = scn.nextInt();\n            scn.nextLine();\n            String str = scn.nextLine();\n\n            // char ch[] = str.toCharArray();\n\n            int curr = 0;\n            boolean f = false;\n            for(int i = 0 ; i < str.length() ; i++){\n                if(f && str.charAt(i) == 'W'){\n                    // f = true;\n                    curr+=2;\n                }else if(!f &&str.charAt(i) == 'W'){\n                    curr++;\n                    f = true;\n                }else if(str.charAt(i) == 'L'){\n                    f = false;\n                }\n            }\n\n            if(k == 0){\n                sb.append(curr);\n                sb.append(\"\\n\");\n                continue;\n            } \n\n            f = false;\n            int st = 0;\n            int start = 0;\n            int end = 0;\n            ArrayList<Integer> gap = new ArrayList<>();\n            if(str.charAt(0) == 'L'){\n                // int s = 0;\n                while(st < str.length() && str.charAt(st) != 'W'){\n                    st++;\n                    start++;\n                }\n            }\n            if(st == str.length()){\n                int sum = 0;\n                sum += Math.min(str.length() - 1,k-1)*2;\n                sum++;\n                sb.append(sum);\n                sb.append(\"\\n\");\n                continue;\n            }\n\n            int ei = str.length() - 1;\n            if(str.charAt(ei) == 'L'){\n                while(str.charAt(ei) == 'L'){\n                    ei--;\n                    end++;\n                }\n            }\n            while(st < ei){\n                while(st < ei && str.charAt(st) == 'W'){\n                    st++;\n                }\n                int ctr = 0;\n                boolean flag = false;\n                while(st < ei && str.charAt(st) == 'L'){\n                    st++;\n                    ctr++;\n                    flag = true;\n                }\n                if(flag)\n                    gap.add(ctr);\n            }\n\n            Collections.sort(gap);\n\n            \n\n            for(int i : gap){\n                if(k == 0) break;\n\n                if(k >= i){\n                    k-= i;\n                    curr += (i*2);\n                    curr++;\n                }\n                else if(k < i){\n                    curr += (k*2);\n                    k = 0;\n                }\n            }\n            // System.out.println(start + \" \" + end + \" \" + curr + \" \" + k);\n            \n            if(k != 0){\n                if(k >=  end && end != 0){\n                    k -= end;\n                    k = Math.max(0 , k);\n                    curr += end*2;\n                }\n                else if(k < end && end != 0){\n                    curr += k*2;\n                    k = 0;\n                }\n                // System.out.println(curr);\n                // System.out.println(k);\n                if(k >= start && start != 0){\n                    k -= start;\n                    k = Math.max(0 , k);\n                    curr += start*2;\n                    // curr--;\n                }else if(k < start && start != 0){\n                    curr += k*2;\n                    k = 0;\n                    // curr += k*2;\n                }\n            }\n            sb.append(curr);\n            sb.append(\"\\n\");\n\n\n        }\n        System.out.println(sb);\n    }\n}"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n\tn, k = [int(i) for i in input().split()]\n\ts = input()\n\tif k + s.count(\"W\") >= n:\n\t\tprint(2*n-1)\n\telif k == 0 and s.count(\"W\")==0:\n\t\tprint(0)\n\telse:\n\t\tchains = []\n\t\tchain = 0\n\t\tstreak = False\n\t\tfor char in s.strip(\"L\"):\n\t\t\tif char == \"W\" and chain != 0:\n\t\t\t\tchains.append(chain)\n\t\t\t\tchain = 0\n\t\t\telif char == \"L\":\n\t\t\t\tchain += 1\n\t\tchains.sort()\n\t\ti = 0\n\t\ttotal = 0\n\t\twhile chains and total+chains[i] <= k:\n\t\t\ttotal += chains[i]\n\t\t\ti += 1\n\t\t\tif i >= len(chains):\n\t\t\t\tbreak\n\t\tprint(2*(k+s.count(\"W\"))-len(chains)-1+i)"
        },
        {
            "language": 3,
            "solution": "from sys import stdin, stdout\nimport math,sys,heapq\nfrom itertools import permutations, combinations\nfrom collections import defaultdict,deque,OrderedDict\nfrom os import path\nimport random\nimport bisect as bi\ndef yes():print('YES')\ndef no():print('NO')\nif (path.exists('input.txt')): \n    #------------------Sublime--------------------------------------#\n    sys.stdin=open('input.txt','r');sys.stdout=open('output.txt','w');\n    def I():return (int(input()))\n    def In():return(map(int,input().split()))\nelse:\n    #------------------PYPY FAst I/o--------------------------------#\n    def I():return (int(stdin.readline()))\n    def In():return(map(int,stdin.readline().split()))\n#sys.setrecursionlimit(1500)\ndef dict(a):\n    d={} \n    for x in a:\n        if d.get(x,-1)!=-1:\n            d[x]+=1\n        else:\n            d[x]=1\n    return d\ndef find_gt(a, x):\n    'Find leftmost value greater than x'\n    i = bi.bisect_left(a, x)\n    if i != len(a):\n        return i\n    else:            \n        return -1\ndef main():\n    try:\n        t=[]\n        n,k=In()\n        s=input()\n        totalL=s.count('L')\n\n        if totalL<=k:\n            print(2*n - 1)\n            return\n        if n==totalL:\n            print(max(2*k - 1,0 ))\n            return\n        no0=0\n        now=0\n        ans=0\n        for i in range(n):\n            if s[i]=='W':\n                now+=1\n                if no0:\n                    t.append(no0)\n                    no0=0\n            else: \n                no0+=1\n                if now:\n                    ans+=(now*2 -1)\n                    now=0\n        \n        t1,t2=0,0\n        if s[0]=='L':\n            t1=t.pop(0)\n        if s[-1]=='L':\n            t2=no0\n        if now:\n            ans+=(now*2 -1)\n        t.sort()\n        for x in t:\n            if k>=x:\n                k-=x\n                ans+=2*x\n                ans+=1\n            else:\n                ans+=2*k\n                k=0\n                break\n\n        if k:\n            if t1<t2:\n                ans+=(max(min(k,t1)*2 ,0)) \n               \n                k-=(min(k,t1))\n                if k:\n                    ans+=max(min(k,t2)*2 ,0)\n                   \n            else:\n                ans+=max(min(k,t2)*2,0)\n                \n                k-=(min(k,t2))\n                if k:\n                    ans+=max(min(k,t1)*2,0)\n                   \n        print(ans)\n\n\n    except:\n        pass\n        \nM = 998244353\nP = 1000000007\n \nif __name__ == '__main__':\n    for _ in range(I()):main()\n    #for _ in range(1):main()"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.util.InputMismatchException;\nimport java.util.*;\nimport java.io.*;\nimport java.lang.*;\npublic class Main{\n    public static class InputReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private InputReader.SpaceCharFilter filter;\n        private BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n     \n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n     \n        public int read() {\n            if (numChars==-1)\n                throw new InputMismatchException();\n     \n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                }\n                catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n     \n                if(numChars <= 0)\n                    return -1;\n            }\n            return buf[curChar++];\n        }\n     \n        public String nextLine() {\n            String str = \"\";\n            try {\n                str = br.readLine();\n            }\n            catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n        public int nextInt() {\n            int c = read();\n     \n            while(isSpaceChar(c))\n                c = read();\n     \n            int sgn = 1;\n     \n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n     \n            int res = 0;\n            do {\n                if(c<'0'||c>'9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            while (!isSpaceChar(c));\n     \n            return res * sgn;\n        }\n     \n        public long nextLong() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            long res = 0;\n     \n            do {\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            while (!isSpaceChar(c));\n            return res * sgn;\n        }\n     \n        public double nextDouble() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            double res = 0;\n            while (!isSpaceChar(c) && c != '.') {\n                if (c == 'e' || c == 'E')\n                    return res * Math.pow(10, nextInt());\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            if (c == '.') {\n                c = read();\n                double m = 1;\n                while (!isSpaceChar(c)) {\n                    if (c == 'e' || c == 'E')\n                        return res * Math.pow(10, nextInt());\n                    if (c < '0' || c > '9')\n                        throw new InputMismatchException();\n                    m /= 10;\n                    res += (c - '0') * m;\n                    c = read();\n                }\n            }\n            return res * sgn;\n        }\n     \n        public String readString() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            StringBuilder res = new StringBuilder();\n            do {\n                res.appendCodePoint(c);\n                c = read();\n            }\n            while (!isSpaceChar(c));\n     \n            return res.toString();\n        }\n     \n        public boolean isSpaceChar(int c) {\n            if (filter != null)\n                return filter.isSpaceChar(c);\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n     \n        public String next() {\n            return readString();\n        }\n     \n        public interface SpaceCharFilter {\n            public boolean isSpaceChar(int ch);\n        }\n    }\n \n    static long gcd(long a, long b){\n        if (a == 0)\n            return b;  \n        return gcd(b % a, a);  \n    }\n    static long lcm(long a, long b)  {\n        return (a*b)/gcd(a, b);  \n    }\n    public static void sortbyColumn(int arr[][], int col) \n    { \n        \n        Arrays.sort(arr, new Comparator<int[]>() { \n            \n          @Override              \n          \n          public int compare(final int[] entry1,  \n                             final int[] entry2) { \n  \n            \n            if (entry1[col] > entry2[col]) \n                return 1; \n            else\n                return -1; \n          } \n        });  \n    } \n    static long func(long a[],int size,int s){\n        long max1=a[s];\n        long maxc=a[s];\n        for(int i=s+1;i<size;i++){\n            maxc=Math.max(a[i],maxc+a[i]);\n            max1=Math.max(maxc,max1);\n        }\n        return max1;\n    }\n    public static class Pair<U extends Comparable<U>, V extends Comparable<V>> implements Comparable<Pair<U, V>> {\n        public U x;\n        public V y;\n    \n        public Pair(U x, V y) {\n            this.x = x;\n            this.y = y;\n        }\n    \n        public int hashCode() {\n            return (x == null ? 0 : x.hashCode() * 31) + (y == null ? 0 : y.hashCode());\n        }\n    \n        public boolean equals(Object o) {\n            if (this == o)\n                return true;\n            if (o == null || getClass() != o.getClass())\n                return false;\n            Pair<U, V> p = (Pair<U, V>) o;\n            return (x == null ? p.x == null : x.equals(p.x)) && (y == null ? p.y == null : y.equals(p.y));\n        }\n    \n        public int compareTo(Pair<U, V> b) {\n            int cmpU = x.compareTo(b.x);\n            return cmpU != 0 ? cmpU : y.compareTo(b.y);\n        }\n    \n        public String toString() {\n            return String.format(\"(%s, %s)\", x.toString(), y.toString());\n        }\n    \n    }\n    static class MultiSet<U extends Comparable<U>> {\n        public int sz = 0;\n        public TreeMap<U, Integer> t;\n \n        public MultiSet() {\n            t = new TreeMap<>();\n        }\n \n        public void add(U x) {\n            t.put(x, t.getOrDefault(x, 0) + 1);\n            sz++;\n        }\n \n        public void remove(U x) {\n            if (t.get(x) == 1) t.remove(x);\n            else t.put(x, t.get(x) - 1);\n            sz--;\n        }\n \n    }\n    static void shuffle(int[] a) {\n        Random get = new Random();\n        for (int i = 0; i < a.length; i++) {\n            int r = get.nextInt(a.length);\n            int temp = a[i];\n            a[i] = a[r];\n            a[r] = temp;\n        }\n    }\n    static long myceil(long a, long b){\n        return (a+b-1)/b;\n    }\n    \n    static long C(int n,int r){\n        long count=0,temp=n;\n        long ans=1;\n        while(count<r){\n            count++;\n            ans*=temp;\n            temp--;\n        }\n        while(r>0){\n            ans/=r;\n            r--;\n        }\n        return ans%MOD;\n    }\n    \n    static long dist[];\n    static int visited[][];\n    static ArrayList<Integer> adj[];\n    static int dp[][][];\n    static int R,G,B,MOD=998244353;\n    static int[] par,size;\n    static int[] sieve,is_sieve;\n    \n    \n    \n    public static void main(String args[]){\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter w = new PrintWriter(outputStream);\n        int t,i,j;\n        t=in.nextInt();\n        //t=1;\n        while(t-->0){\n            \n            int n=in.nextInt();\n            int k=in.nextInt(),temp=k;\n            String s=in.next();\n            char ch[]=s.toCharArray();\n            if(n==1&&ch[0]=='L'&&temp>0){\n                w.println(1);\n                continue;\n            }\n            int count=0,flag=0;\n            for(i=0;i<n;i++){\n                if(ch[i]=='W'){\n                    flag=1;\n                    break;\n                }\n            }\n            if(flag==0&&temp>0){\n                w.println(2*temp-1);\n                continue;\n            }\n            LinkedList<Integer> li=new LinkedList<>();\n            int y=0;\n            if(ch[0]=='L'){\n                for(i=0;i<n;i++){\n                    if(ch[i]=='W'){\n                        li.add(i);\n                        y=i;\n                        break;\n                    }\n                }\n            }\n            if(ch[n-1]=='L'){\n                for(i=n-1;i>=0;i--){\n                    if(ch[i]=='W'){\n                        li.add(n-1-i);\n                        break;\n                    }\n                }\n            }\n            Collections.sort(li);\n            LinkedList<Integer> li1=new LinkedList<>();\n            \n            flag=0;\n            for(i=y;i<n;i++){\n                if(ch[i]=='W'&&flag==1){\n                    flag=0;\n                    li1.add(i-y);\n                }\n                if(ch[i]=='L'&&flag==0){\n                    y=i;\n                    flag=1;\n                }\n            }\n            Collections.sort(li1);\n            if(ch[0]=='W'){\n                count=1;\n            }\n            for(i=1;i<n;i++){\n                if(ch[i]=='W'){\n                    if(ch[i-1]=='W'){\n                        count+=2;\n                    }else{\n                        count+=1;\n                    }\n                }\n            }\n            //w.println(count+\" \"+li+\" \"+li1);\n            while(!li1.isEmpty()){\n                int x=li1.pollFirst();\n                if(x<=temp){\n                    count+=(2*x+1);\n                    temp-=x;\n                }else{\n                    count+=2*temp;\n                    temp=0;\n                    break;\n                }\n            }\n            while(!li.isEmpty()){\n                int x=li.pollFirst();\n                if(x<=temp){\n                    count+=(2*x);\n                    temp-=x;\n                }else{\n                    count+=2*temp;\n                    temp=0;\n                    break;\n                }\n            }\n            w.println(count);\n        }\n        w.close();\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int NMAX = 100100;\nstruct obj {\n  int val;\n  int x, y;\n} v[NMAX];\nint T, N, K, S;\nchar s[NMAX];\nbool cmp(obj a, obj b) { return a.val < b.val; }\nint main() {\n  cin >> T;\n  for (int l = 1; l <= T; l++) {\n    cin >> N >> K;\n    cin >> s + 1;\n    bool okW = false;\n    s[0] = 'L';\n    s[N + 1] = 'L';\n    S = 0;\n    int st = 0;\n    for (int i = 1; i <= N; i++) {\n      if (s[i] == 'W') {\n        if (st) v[++S] = {i - st - 1, st, i};\n        st = i;\n      }\n    }\n    sort(v + 1, v + S + 1, cmp);\n    for (int i = 1; i <= S; i++) {\n      if (K >= v[i].val) {\n        for (int j = v[i].x + 1; j < v[i].y; j++) s[j] = 'W';\n        K -= v[i].val;\n      }\n    }\n    for (int i = 1; i <= N; i++)\n      if (K > 0 && s[i] == 'L' && s[i - 1] == 'W') {\n        s[i] = 'W';\n        K--;\n      }\n    for (int i = N; i > 0; i--)\n      if (K > 0 && s[i] == 'L' && s[i + 1] == 'W') {\n        s[i] = 'W';\n        K--;\n      }\n    for (int i = 1; i <= N; i++)\n      if (K > 0 && s[i] == 'L') {\n        s[i] = 'W';\n        K--;\n      }\n    int ans = 0;\n    for (int i = 1; i <= N; i++) {\n      if (s[i] == 'W') {\n        ans++;\n        if (s[i - 1] == 'W') ans++;\n      }\n    }\n    cout << ans << '\\n';\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\n\n\ndef binsearch(nums, target):\n    left = 0\n    right = len(nums) - 1\n    while left <= right:\n        mid = (left + right) // 2\n        if nums[mid] == target:\n            return mid\n        elif nums[mid] > target:\n            right = mid - 1\n        elif nums[mid] < target:\n            left = mid + 1\n\n    return left\n\n\nfor tc in range(t):\n\n    n, k = map(int, input().split())\n    s = input()\n\n    if n == 1:\n        print(min(1, k + s.count('W')))\n        continue\n\n    wins = s.count(\"W\")\n\n    if k >= n - wins:\n        print(2*n - 1)\n        continue\n\n    if wins == 0:\n        print(max(0, 2*k - 1))\n        continue\n\n    gaps = []\n    last = '0'\n    winstreaks = 1\n    c = 0; fl = 0\n    for i in range(n):\n        if s[i] == 'L' and not fl:\n            continue\n        if s[i] == 'W' and not fl:\n            fl = 1\n        elif s[i] == 'W' and s[i-1] == 'L' and fl:\n            winstreaks += 1\n            gaps.append(c)\n            c = 0\n        elif s[i] == 'L':\n            c += 1\n        # if s[i] != last:\n        #     if s[i] == 'W':\n        #         winstreaks += 1\n        #         if c:\n        #             gaps.append(c)\n        #         c = 1\n        #     else:\n        #         c = 1\n        #     last = s[i]\n        # else:\n        #     c += 1\n        #     last = s[i]\n        # i += 1\n\n    # if s[-1] == 'L':\n    #     if c:\n    #         gaps.append(c)\n\n    gaps1 = sorted(gaps)\n\n    r = 0; rc = 0\n\n    while r < len(gaps1):\n        if rc + gaps1[r] <= k:\n            rc += gaps1[r]\n            winstreaks -= 1\n            r += 1\n        else:\n            break\n\n    res = (2 * (k + wins)) - winstreaks\n\n    print(res)\n\n    # twoadj, oneadj, noadj = [], [], []\n    #\n    # for i in range(1, n-1):\n    #     if s[i] == 'L' and s[i-1] == 'W' and s[i+1] == 'W':\n    #         twoadj.append(i)\n    #\n    # for i in range(1, n-1):\n    #     if s[i] == 'L' and s[i+1] == 'W' and s[i-1] == 'L':\n    #         oneadj.append(i)\n    #\n    # for i in range(1, n-1):\n    #     if s[i] == 'L' and s[i-1] == 'W' and s[i+1] == 'L':\n    #         oneadj.append(i)\n    #\n    # if n == 2:\n    #     if k + s.count('W') >= 2:\n    #         print(3)\n    #     elif k + s.count('W') == 1:\n    #         print(1)\n    #     else:\n    #         print(0)\n    #     continue\n    #\n    # if n > 2:\n    #     if s[0] == 'L' and s[1] == 'L':\n    #         noadj.append(0)\n    #     elif s[0] == 'L' and s[1] == 'W':\n    #         oneadj.append(0)\n    #\n    #     if s[-1] == 'L' and s[-2] == 'L':\n    #         noadj.append(n-1)\n    #     elif s[-1] == 'L' and s[-2] == 'W':\n    #         oneadj.append(n-1)\n    #\n    # for i in range(1, n-1):\n    #     if s[i] == 'L' and s[i-1] == 'L' and s[i+1] == 'L':\n    #         noadj.append(i)\n    #\n    # precnt = 0\n    # if s[0] == 'W':\n    #     precnt += 1\n    #\n    # for i in range(1, n):\n    #     if s[i] == 'W' and s[i - 1] == 'W':\n    #         precnt += 2\n    #     elif s[i] == 'W' and s[i - 1] == 'L':\n    #         precnt += 1\n    #\n    # settwoadj = set()\n    # setoneadj = set()\n    # setnoadj = set()\n    #\n    # for i in twoadj:\n    #     settwoadj.add(i)\n    # for i in oneadj:\n    #     setoneadj.add(i)\n    # for i in noadj:\n    #     setnoadj.add(i)\n    #\n    # full = twoadj + oneadj + noadj\n    #\n    # fin = full[:min(k, n)]\n    #\n    # setfin = set()\n    # for i in fin:\n    #     setfin.add(i)\n    #\n    # res = []\n    # for i in range(n):\n    #     if i in setfin:\n    #         res.append('W')\n    #     else:\n    #         res.append(s[i])\n    #\n    # #print(res, full)\n    #\n    # fincnt = 0\n    # if res[0] == 'W':\n    #     fincnt += 1\n    # for i in range(1, n):\n    #     if res[i] == 'W' and res[i-1] == 'W':\n    #         fincnt += 2\n    #     elif res[i] == 'W' and res[i-1] == 'L':\n    #         fincnt += 1\n    #\n    # # if k < twoadj:\n    # #     added += 3*k\n    # #     k = 0\n    # # else:\n    # #     added += 3*twoadj\n    # #     k -= twoadj\n    # #\n    # # if k < oneadj:\n    # #     added += 2*k\n    # #     k = 0\n    # # else:\n    # #     added += 2*oneadj\n    # #     k -= oneadj\n    # #\n    # # if k < noadj:\n    # #     added += 1*k\n    # #     k = 0\n    # # else:\n    # #     added += 1*noadj\n    # #     k -= noadj\n    #\n    #\n    #\n    # print(fincnt)\n"
        },
        {
            "language": 3,
            "solution": "import sys, os\nimport heapq, functools, collections\nimport math, random\nfrom collections import Counter, defaultdict\n\n# available on Google, not available on Codeforces\n# import numpy as np\n# import scipy\n\n\ndef solve_(lst, k):\n    # your solution here\n    length = len(lst)\n    lst = lst\n\n\n    if sum(lst) + k >= length:\n        # console(lst, sum(lst), k, length)\n        # console(\"skip\")\n        return 2*length - 1\n\n    if sum(lst) == 0:\n        return max(0, k*2 - 1)\n\n    lst = \"\".join(str(x) for x in lst)\n    lst = lst.strip(\"0\")\n    lst = [int(x) for x in lst]    \n\n    console(lst)\n\n    spaces = []\n    prev = 0\n    curspace = 0\n    for a in lst:\n        if prev == 0 and a == 1:\n            spaces.append(curspace)\n            curspace = 0\n        if a == 0:\n            curspace += 1\n        prev = a\n    \n    spaces = spaces[1:]\n    spaces = sorted(spaces)\n    \n    console(\"spaces\", spaces, k)\n\n    res = 2*sum(lst) - len(spaces) - 1\n    console(\"initial\", res)\n\n    for a in spaces:\n        if a <= k:\n            k -= a\n            res += a*2 + 1\n\n    console(\"filled\", res)\n\n    console(\"remainder\", k)\n    res += k*2\n    \n    return res\n\n\ndef console(*args):  \n    # print on terminal in different color\n    print('\\033[36m', *args, '\\033[0m', file=sys.stderr)\n    pass\n\n\n# if Codeforces environment\nif os.path.exists('input.txt'):\n    sys.stdin = open(\"input.txt\",\"r\")\n    sys.stdout = open(\"output.txt\",\"w\")\n\n    def console(*args):\n        pass\n\n\ndef solve(*args):\n    # screen input\n    # console(\"----- solving ------\")\n    # console(*args)\n    # console(\"----- ------- ------\")\n    return solve_(*args)\n\n\nif True:\n    # if memory is not a constraint\n    inp = iter(sys.stdin.buffer.readlines())\n    input = lambda: next(inp)\nelse:\n    # if memory is a constraint\n    input = sys.stdin.buffer.readline\n\n\ncout = []\nfor case_num in range(int(input())):\n\n    _, k = list(map(int,input().split()))\n\n    # read line as a string\n    lst = input().strip()\n    # lst = str(lst)\n\n    # read line as an integer\n    # k = int(input())\n    \n    # read one line and parse each word as a string\n    # lst = input().split()\n\n    # read one line and parse each word as an integer\n    # lst = list(map(int,input().split()))\n\n    # read matrix and parse as integers (after reading read nrows)\n    # lst = list(map(int,input().split()))\n    # nrows = lst[0]  # index containing information, please change\n    # grid = []\n    # for _ in range(nrows):\n    #     grid.append(list(map(int,input().split())))\n\n    # console(lst)\n    lst = [0 if x == 76 else 1 for x in lst]\n    res = solve(lst, k)  # please change\n    \n    # post processing methods\n    # res = [str(x) for x in res]\n    # res = \" \".join(res)\n\n    # print result\n    # Google - case number required\n    # print(\"Case #{}: {}\".format(case_num+1, res))\n\n    # Codeforces - no case number required\n    cout.append(str(res))\nprint(\"\\n\".join(cout))"
        },
        {
            "language": 3,
            "solution": "\n\ndef cal(s, n):\n    #print(s, n)\n    pits = []\n    wins = []\n    pit = 0\n    win = 0\n    for c in s:\n        if c == 'W':\n            win+=1\n            if pit > 0:\n                pits.append(pit)\n                pit = 0\n        else:\n            pit += 1\n            if win > 0:\n                wins.append(win)\n                win = 0\n    if win > 0:\n        wins.append(win)\n    \n    if s[0]=='L' and len(pits)>0:\n        pit += pits[0]\n        pits = pits[1:]\n    \n    \n    pits = sorted(pits)\n    fliped = 0\n    adt = 0\n    for p in pits:\n        if fliped + p <= n:\n            fliped += p\n            adt += 1\n        else:\n            pit += p\n    if n>= fliped+pit:\n        return len(s)*2-1        \n    if len(wins) == 0:\n        return max(min(n,len(s))*2-1,0)\n    \n    #print('pits',pits,pit,wins,pit,adt,fliped,n-fliped)\n    \n    return sum(wins)*2-len(wins)+fliped*2+adt + min(n-fliped, pit)*2\n#9*2-3=15   15+3*2+1+2*2=\n    \n\ndef web():\n    T = int(input())\n    for t in range(1, T + 1):\n        arr = [int(s) for s in input().split(\" \")] \n        c = arr[1]\n        s = input()\n        ans = cal(s, c)\n        print(ans)\n              \ndef file():\n    x = open('p2_in.txt')\n    T = int(x.readline())\n    for t in range(1, T + 1):\n        arr = [int(s) for s in x.readline().split(\" \")] \n        c = arr[1]\n        s = x.readline()[:-1]\n        ans = cal(s, c)\n        print(ans)\n#file()     \nweb()\n\n'''\ncd Desktop\\Desktpop\\coding contest\\CodeJamQualify\npython it_run.py python p4_runner.py 1 -- python p4.py\n'''\n\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    int n, k;\n    cin >> n >> k;\n    string s;\n    cin >> s;\n    int w = 0, l = 0;\n    int cWins = 0;\n    vector<int> closs;\n    for (int i = 0; i < n; i++) {\n      if (s[i] == 'W') {\n        w++;\n        if (i == 0 || s[i - 1] == 'L') cWins++;\n      }\n      if (s[i] == 'L') {\n        l++;\n        if (i == 0 || s[i - 1] == 'W') closs.push_back(0);\n        closs.back()++;\n      }\n    }\n    if (k >= l) {\n      cout << 2 * n - 1 << \"\\n\";\n      continue;\n    } else if (w == 0) {\n      if (k == 0)\n        cout << 0 << \"\\n\";\n      else\n        cout << 2 * k - 1 << \"\\n\";\n      continue;\n    }\n    if (s[0] == 'L') closs[0] = 1e8;\n    if (s[n - 1] == 'L') closs.back() = 1e8;\n    sort(closs.begin(), closs.end());\n    w += k;\n    for (int x : closs) {\n      if (x > k) break;\n      k -= x;\n      cWins--;\n    }\n    cout << 2 * w - cWins << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class Main{\n\t\n\tstatic int mod=(int)1e9+7;\n\t\n\tpublic static void main(String[] args) throws IOException {\n\t\tWriter out=new Writer(System.out);\n\t\tReader in=new Reader(System.in);\n\t\tint ts=in.nextInt();\n\t\touter: while(ts-->0) {\t\n\t\t\n\t\t\tint n=in.nextInt();\n\t\t\tint k=in.nextInt();\n\t\t\tchar [] s=in.next().toCharArray();\n\t\t\tint st=0, en=0;\n\t\t\twhile(st<n && s[st]=='L') st++;\n\t\t\tif(st==n) {\n\t\t\t\tn=Math.min(k, n);\n\t\t\t\tif(n==0) out.println(0);\n\t\t\t\telse out.println(2*n-1);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\twhile(en<n && s[n-1-en]=='L') en++;\n\t\t\t\n\t\t\tlong ans=0;\n\t\t\tif(s[0]=='W') ans++;\n\t\t\tfor(int i=1; i<n; i++) {\n\t\t\t\t\n\t\t\t\tif(s[i]=='W') {\n\t\t\t\t\tif(s[i-1]=='W') ans+=2;\n\t\t\t\t\telse ans++;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n//\t\t\tout.println(\"ans\"+ans);\n\t\t\tint l=0;\n\t\t\tArrayList<Integer> contLoss=new ArrayList<>();\n\t\t\tfor(int i=st; i<=n-1-en; i++) {\n\t\t\t\tif(s[i]=='L') l++;\n\t\t\t\telse {\n\t\t\t\t\tif(l!=0) contLoss.add(l);\n\t\t\t\t\tl=0;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tCollections.sort(contLoss);\n//\t\t\tout.println(contLoss);\n//\t\t\tout.println();\n\t\t\tfor(int i=0; i<contLoss.size(); i++) {\n\t\t\t\t\n\t\t\t\tint temp=contLoss.get(i);\n\t\t\t\tif(k>=temp) {\n\t\t\t\t\tans=ans+(2*temp+1);\n\t\t\t\t\tk-=temp;\n\t\t\t\t}else {\n\t\t\t\t\tans=ans+(2*k);\n\t\t\t\t\tk=0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif(k!=0) {\n\t\t\t\tif(k>=en){\n\t\t\t\t\tans=ans+(2*en);\n\t\t\t\t\tk-=en;\n\t\t\t\t}else {\n\t\t\t\t\tans=ans+(2*k);\n\t\t\t\t\tk=0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(k!=0) {\n\t\t\t\tif(k>=st) {\n\t\t\t\t\tans=ans+(2*st);\n\t\t\t\t} else {\n\t\t\t\t\tans=ans+(2*k);\n\t\t\t\t}\n\t\t\t}\n\t\t\tout.println(ans);\n\t\t\t\n\t\t}\n\t\tout.close();\t\t\n\t\t\n\t}\n\t\n\t\n/*********************************** UTILITY CODE BELOW **************************************/\t\n\t\t\n\tstatic int abs(int a) {\n\t\treturn a>0 ? a : -a;\n\t}\n\t\n\tstatic int max(int a, int b) {\n\t\treturn a>b ? a : b;\n\t}\n\t\n\tstatic int min(int a, int b) {\n\t\treturn a<b ? a : b;\n\t}\n\tstatic long pow(long n, long m) {\n\t\tif(m==0) return 1;\n\t\tlong temp=pow(n,m/2);\n\t\tlong res=((temp*temp)%mod);\n\t\tif(m%2==0) return res;\n\t\treturn (res*n)%mod;\n\t}\n\t\n\tstatic class Pair{\n\t\tint u, v;\n\t\t\n\t\tPair(int u, int v){this.u=u; this.v=v;}\n\t\t\n\t\tstatic void sort(Pair [] coll) {\t\t\n\t\t\tList<Pair> al=new ArrayList<>(Arrays.asList(coll));\n\t\t\tCollections.sort(al,new Comparator<Pair>() {\n\t\t\t\tpublic int compare(Pair p1, Pair p2) {\n\t\t\t\t\treturn p1.u-p2.u;\n\t\t\t\t}\t\n\t\t\t});\n\t\t\tfor(int i=0; i<al.size(); i++) {\n\t\t\t\tcoll[i]=al.get(i);\n\t\t\t}\n\t\t}\n\t\t\n\t}\n\t\n\tstatic void sort(int[] a) {\n\t\tArrayList<Integer> list=new ArrayList<>();\n\t\tfor (int i:a) list.add(i);\n\t\tCollections.sort(list);\n\t\tfor (int i=0; i<a.length; i++) a[i]=list.get(i);\n\t}\n\t\n\tstatic void sort(long a[]) {\n\t\tArrayList<Long> list=new ArrayList<>();\n\t\tfor(long i: a) list.add(i);\n\t\tCollections.sort(list);\n\t\tfor(int i=0; i<a.length; i++) a[i]=list.get(i);\n\t}\n\t\n\tstatic int [] array(int n, int value) {\t\n\t\tint a[]=new int[n];\n\t\tfor(int i=0; i<n; i++) a[i]=value;\n\t\treturn a;\n\t}\n\t\n\tstatic class Reader{\n\t\t\n\t\tBufferedReader br;\n\t\tStringTokenizer to;\n\t\t\n\t\tReader(InputStream stream){\n\t\t\tbr=new BufferedReader(new InputStreamReader(stream));\n\t\t\tto=new StringTokenizer(\"\");\n\t\t}\n\t\t\n\t\tString next() {\n\t\t\twhile(!to.hasMoreTokens()) {\n\t\t\t\ttry {\n\t\t\t\t\tto=new StringTokenizer(br.readLine());\t\n\t\t\t\t}catch(IOException e) {}\n\t\t\t\t\n\t\t\t}\n\t\t\treturn to.nextToken();\n\t\t\t\n\t\t}\n\t\t\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\t\t\n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\t\t\n\t\tint [] readArray(int n) {\n\t\t\tint a[]=new int[n];\n\t\t\tfor(int i=0; i<n ;i++) a[i]=nextInt();\n\t\t\treturn a;\n\t\t}\n\t\tlong [] readLongArray(int n) {\n\t\t\tlong a[]=new long[n];\n\t\t\tfor(int i=0; i<n ;i++) a[i]=nextLong();\n\t\t\treturn a;\n\t\t}\n\t\t\n\t}\n\t\n\tstatic class Writer extends PrintWriter{\n\t\tWriter(OutputStream stream){\n\t\t\tsuper(stream);\n\t\t}\n\t\tvoid println(int [] array) {\n\t\t\tfor(int i=0; i<array.length; i++) {\n\t\t\t\tprint(array[i]+\" \");\n\t\t\t}\n\t\t\tprintln();\n\t\t}\n\t\tvoid println(long [] array) {\n\t\t\tfor(int i=0; i<array.length; i++) {\n\t\t\t\tprint(array[i]+\" \");\n\t\t\t}\n\t\t\tprintln();\n\t\t}\n\t}\n\t\n}"
        },
        {
            "language": 3,
            "solution": "from sys import stdin\ninput=stdin.readline\n\ndef A():\n    t=int(input())\n    for _ in range(t):\n        n=int(input())\n        a=list(map(int,input().split()))\n        if sum(a) == 0:\n            print(\"NO\")\n        elif sum(a) > 0:\n            a.sort(reverse=True)\n            print(\"YES\")\n            print(*a)\n        else:\n            a.sort()\n            print(\"YES\")\n            print(*a)\n\ndef B():\n    from collections import deque\n    t=int(input())\n    for _ in range(t):\n        n,k=map(int,input().split())\n        s=[bool(ord(x) - ord('L')) for x in input().rstrip()]\n\n        lastGame = False\n        score = 0\n        for i in range(n):\n            if s[i]:\n                if lastGame:\n                    score += 2\n                else:\n                    score += 1\n                lastGame=True\n            else:\n                lastGame=False\n\n        startW=0\n        endW=n-1\n        while startW < n and not s[startW]:\n            startW += 1\n        while endW >= 0 and not s[endW]:\n            endW -= 1\n        streak=0\n        wlws=deque()\n        for i in range(startW+1, endW+1):\n            if s[i] and streak > 0:\n                wlws.append(streak)\n                streak=0\n            elif not s[i]:\n                streak += 1\n        \n        wlws=sorted(list(wlws))\n\n        j = 0\n        while j < len(wlws) and k >= wlws[j]:\n            score += (2 * wlws[j] + 1)\n            k -= wlws[j]\n            j += 1\n            \n        if k > 0:\n            remainingLs = startW + (n - 1 - endW)\n            if startW == n:\n                remainingLs = n\n                score -= 1\n            if j < len(wlws):\n                remainingLs = wlws[j]\n            score += min(remainingLs, k) * 2\n        print(score)\n        \n\ndef C():\n    t=int(input())\n    for _ in range(t):\n        print(t)\n\ndef D():\n    t=int(input())\n    for _ in range(t):\n        print(t)\n\nB()\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int inf = 0x3f3f3f3f;\nconst int maxn = 1e5;\nint t, n, k;\nstring s;\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  while (cin >> t) {\n    while (t--) {\n      cin >> n >> k;\n      cin >> s;\n      int wins = 0, losses = 0, wins_streaks = 0;\n      vector<int> losing_streaks;\n      for (int i = 0; i <= n - 1; i++) {\n        if (s[i] == 'W') {\n          if (i == 0 || s[i - 1] == 'L') {\n            wins_streaks++;\n          }\n          wins++;\n        } else {\n          losses++;\n          if (i == 0 || s[i - 1] == 'W') {\n            losing_streaks.push_back(0);\n          }\n          losing_streaks.back()++;\n        }\n      }\n      if (k >= losses) {\n        cout << 2 * n - 1 << endl;\n        continue;\n      }\n      if (wins == 0) {\n        if (k == 0) {\n          cout << 0 << endl;\n        } else {\n          cout << 2 * k - 1 << endl;\n        }\n        continue;\n      }\n      if (s[0] == 'L') {\n        losing_streaks[0] = inf;\n      }\n      if (s[n - 1] == 'L') {\n        losing_streaks.back() = inf;\n      }\n      sort(losing_streaks.begin(), losing_streaks.end());\n      int len = losing_streaks.size();\n      wins += k;\n      for (int i = 0; i <= len - 1; i++) {\n        if (losing_streaks[i] > k) {\n          break;\n        } else {\n          wins_streaks--;\n          k -= losing_streaks[i];\n        }\n      }\n      cout << 2 * wins - wins_streaks << endl;\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "def f(n,k,s):\n\tscore = 0\n\tarr = []\t\n\tsm = 0\n\tif \"W\" not in s:\n\t\treturn max(min(n,k)*2-1,0)\n\n\tarr = s.split(\"W\")[1:-1]\n\tarr = list(filter(None,arr))\n\tarr = [len(i) for i in arr]\n\tarr.sort()\n\t\n\tsm = s.count('W')\n\tncut = len(arr)+1\n\tfor i in range(len(arr)):\n\t\tif k >= arr[i]:\n\t\t\tsm += arr[i]\n\t\t\tk -= arr[i]\n\t\t\tncut-=1\n\n\treturn max(0,min(2*n-1,(sm+k)*2-ncut))\n\nt = int(input())\nfor x in range(t):\n\tn,k = list(map(int,input().split()))\n\ts = input()\n\th = f(n,k,s)\n\tprint(h)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 1E5 + 100;\nint bet[MAXN];\nint n, k, indx, wcnt;\nstring s;\nvoid input();\nvoid solve();\nvoid makeBet();\nvoid make0();\nint main() {\n  int T;\n  cin >> T;\n  while (T--) {\n    input();\n    make0();\n    makeBet();\n    solve();\n  }\n}\nvoid make0() {\n  for (int i = 0; i < n; i++) bet[i] = 0;\n}\nvoid solve() {\n  if (wcnt + k >= n) {\n    cout << 2 * n - 1 << endl;\n    return;\n  }\n  if (k == 0) {\n    cout << wcnt * 2 - indx << endl;\n    return;\n  }\n  if (wcnt == 0) {\n    cout << 2 * k - 1 << endl;\n    return;\n  }\n  wcnt += k;\n  sort(bet + 1, bet + indx);\n  int component = indx;\n  for (int i = 1; i < indx; i++) {\n    if (k >= bet[i]) {\n      k -= bet[i];\n      component--;\n    } else\n      break;\n  }\n  cout << 1ll * wcnt * 2 - component << endl;\n}\nvoid makeBet() {\n  int cntl = 0;\n  s = \"L\" + s;\n  indx = 0, wcnt = 0;\n  for (int i = 1; i <= n; i++) {\n    if (s[i] == 'W') wcnt++;\n    if (s[i] == 'W' && s[i - 1] != 'W') indx++;\n    if (s[i] == 'L') bet[indx]++;\n  }\n}\nvoid input() {\n  cin >> n >> k;\n  cin >> s;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long get_score(string s) {\n  long long score = 0;\n  bool streak = false;\n  for (auto c : s) {\n    if (c == 'L')\n      streak = false;\n    else {\n      if (streak)\n        score += 2;\n      else {\n        score++;\n        streak = true;\n      }\n    }\n  }\n  return score;\n}\nbool cmp(pair<long long, long long> x, pair<long long, long long> y) {\n  return (x.second - x.first) < (y.second - y.first);\n}\nint main() {\n  long long t;\n  cin >> t;\n  while (t--) {\n    long long n, k, init = -1;\n    cin >> n >> k;\n    string s;\n    cin >> s;\n    vector<pair<long long, long long>> pos;\n    for (long long i = 0; i < n; i++) {\n      if (s[i] == 'L') {\n        if (init == -1) init = i;\n      } else {\n        if (init != -1) {\n          pos.push_back({init, i - 1});\n          init = -1;\n        }\n      }\n    }\n    pair<long long, long long> start = {-1, -1}, end = {-1, -1};\n    if (pos.size() > 0) start = pos[0];\n    if (init != -1) end = {init, n - 1};\n    sort(pos.begin(), pos.end(), cmp);\n    for (auto x : pos) {\n      if (x.first != 0)\n        for (long long i = x.first; i <= x.second && k > 0; i++, k--)\n          s[i] = 'W';\n    }\n    if (k && start.first == 0) {\n      for (long long i = start.second; i >= start.first && k > 0; i--, k--)\n        s[i] = 'W';\n    }\n    if (k && end.first != -1) {\n      for (long long i = end.first; i <= end.second && k > 0; i++, k--)\n        s[i] = 'W';\n    }\n    cout << get_score(s) << endl;\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <typename T>\nvoid tk_input(vector<T> &arr) {\n  for (T &i : arr) cin >> i;\n}\nvoid solve() {\n  int n, k;\n  cin >> n >> k;\n  string s;\n  cin >> s;\n  priority_queue<pair<int, int>, vector<pair<int, int> >,\n                 greater<pair<int, int> > >\n      pq;\n  int sc = 0, ls = 0, ls_i = 0, f_i = n, l_i = -1;\n  for (int i = 0; i <= n - 1; i++) {\n    if (s[i] == 'W') {\n      if ((ls > 0) && (f_i != n)) pq.push(pair<int, int>(ls, ls_i));\n      f_i = min(f_i, i);\n      l_i = max(l_i, i);\n      ls_i = i + 1;\n      ls = 0;\n    } else {\n      ls++;\n    }\n  }\n  while ((!pq.empty()) && (k > 0)) {\n    auto tp = pq.top();\n    pq.pop();\n    for (int i = tp.second; i <= tp.first + tp.second - 1; i++) {\n      if (k == 0) break;\n      s[i] = 'W';\n      k--;\n    }\n  }\n  for (int i = f_i - 1; i >= 0; i--) {\n    if (k == 0) break;\n    s[i] = 'W';\n    k--;\n  }\n  if (l_i != -1) {\n    for (int i = l_i + 1; i <= n - 1; i++) {\n      if (k == 0) break;\n      s[i] = 'W';\n      k--;\n    }\n  }\n  sc += (s[0] == 'W');\n  for (int i = 1; i <= n - 1; i++) {\n    sc += ((s[i] == 'W') * (1 + (s[i - 1] == 'W')));\n  }\n  cout << sc << '\\n';\n}\nsigned main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  int _t;\n  cin >> _t;\n  while (_t--) solve();\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.StringTokenizer;\n\npublic class B {\n    static BufferedReader br;\n    static StringTokenizer st;\n    static PrintWriter pw;\n\n    static String nextToken() {\n        try {\n            while (st == null || !st.hasMoreTokens()) {\n                st = new StringTokenizer(br.readLine());\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        return st.nextToken();\n    }\n\n    static int nextInt() {\n        return Integer.parseInt(nextToken());\n    }\n\n    static long nextLong() {\n        return Long.parseLong(nextToken());\n    }\n\n    static double nextDouble() {\n        return Double.parseDouble(nextToken());\n    }\n\n    static String nextLine() {\n        try {\n            return br.readLine();\n        } catch (IOException e) {\n            throw new IllegalArgumentException();\n        }\n    }\n\n    static char nextChar() {\n        try {\n            return (char) br.read();\n        } catch (IOException e) {\n            throw new IllegalArgumentException(e);\n        }\n    }\n\n    public static void main(String[] args) throws IOException {\n//        br = new BufferedReader(new InputStreamReader(new FileInputStream(\"input.txt\")));\n        br = new BufferedReader(new InputStreamReader(System.in));\n//        pw = new PrintWriter(new FileWriter(\"output.txt\"));\n        pw = new PrintWriter(System.out);\n        solve();\n        pw.close();\n    }\n\n    private static void solve() {\n        int t = nextInt();\n        for (int i = 0; i < t; i++) {\n            int n = nextInt();\n            int k = nextInt();\n            String s = nextToken();\n            int sum = 0;\n            ArrayList<Integer> spl = new ArrayList<>();\n            int st = -1;\n            int ed;\n            int w = 0;\n            for (int j = 0; j < s.length(); j++) {\n                if (s.charAt(j) == 'W') {\n                    if (st == -1) {\n                        sum--;\n                        st = j - 1;\n                    }\n                    ed = st;\n                    st = j;\n                    if (st - ed - 1 > 0) {\n                        spl.add(st - ed - 1);\n                    } else {\n                        sum++;\n                    }\n                    sum++;\n                    w++;\n                }\n            }\n            Collections.sort(spl);\n            for (int x : spl) {\n                if (k >= x) {\n                    k -= x;\n                    sum += x * 2 + 1;\n                    w += x;\n                } else {\n                    break;\n                }\n            }\n            if (w == 0 && k > 0) {\n                sum--;\n            }\n            if (k > 0) {\n                sum += Math.min(k, n - w) * 2;\n            }\n            pw.println(sum);\n        }\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\nread = lambda: sys.stdin.readline().strip()\nreadi = lambda: map(int, read().split())\nfrom collections import *\nfrom math import *\n\nfor _ in range(int(read())):\n    n, k = readi()\n    s = read()\n\n    gaps = list()\n    temp = 0\n    sc = s.strip(\"L\")\n    if len(sc) == 0:\n        print(max(min(n, k) * 2 - 1, 0))\n        continue\n    for c in sc:\n        if c == \"L\":\n            temp += 1\n        else:\n            if temp > 0:\n                gaps.append(temp)\n                temp = 0\n    if temp > 0: gaps.append(temp)\n    gaps.sort()\n\n    increment = 0\n    for gap in gaps:\n        if gap <= k:\n            increment += gap * 2 + 1\n            k -= gap \n        else:\n            increment += k * 2\n            k = 0\n            break\n    increment += min(k, len(s) - len(sc)) * 2\n    \n    baseAns = 0\n    temp = 0\n    for c in s:\n        if c == \"W\":\n            if temp > 0:baseAns += 2\n            else: baseAns += 1\n            temp += 1\n        else:\n            temp = 0\n    print(increment+baseAns)"
        },
        {
            "language": 3,
            "solution": "def solve():\n    n, k = map(int, input().split())\n    s = input()\n    ans = 0\n    prev = False\n    c = []\n    cc = 0\n    for i in range(n):\n        if s[i] == 'W':\n            if cc:\n                if cc != i:\n                    c.append(cc)\n                cc = 0\n            if prev:\n                ans += 2\n            else:\n                ans += 1\n            prev = True\n        else:\n            prev = False\n            cc += 1\n    c.sort()\n    for i in range(len(c)):\n        if c[i] <= k:\n            k -= c[i]\n            ans += c[i] * 2 + 1\n    if 'W' in s:\n        ans += k * 2\n    else:\n        ans += max(k * 2 - 1, 0)\n    ans = min(ans, n * 2 - 1)\n    print(ans)\nt = int(input())\nfor _ in range(t):\n    solve()\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long int i, j, k, l, m, n, p, t, a, b, c;\n  cin >> t;\n  while (t--) {\n    cin >> n >> k;\n    string s;\n    cin >> s;\n    p = 0;\n    vector<long long int> freq;\n    m = 0;\n    for (i = 0; i < n; i++) {\n      if (s[i] != 'L') {\n        break;\n      } else {\n        m++;\n      }\n    }\n    a = i;\n    for (i = a; i < n;) {\n      l = 0;\n      b = 1;\n      for (j = i + 1; j < n; j++) {\n        if (s[j] == 'W')\n          b += 2;\n        else\n          break;\n      }\n      i = j;\n      p += b;\n      for (c = j; c < n; c++) {\n        if (s[c] == 'L') {\n          l++;\n          m++;\n        } else\n          break;\n      }\n      i = c;\n      if (i != n) freq.push_back(l);\n    }\n    sort(freq.begin(), freq.end());\n    i = 0;\n    while (k > 0 && i < freq.size()) {\n      if (k >= freq[i]) {\n        p += (1 + freq[i] * 2);\n        k = k - freq[i];\n        m = m - freq[i];\n      } else\n        break;\n      i++;\n    }\n    if (k > 0) {\n      if (p == 0) {\n        p--;\n      }\n      p += (min(m, k) * 2);\n    }\n    cout << p << \"\\n\";\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n\tn, k = map(int, input().split())\n\ts = input()\n\tar = []\n\ti = 0\n\tsingle = []\n\twhile i < n and s[i] == 'L':\n\t\ti += 1\n\tif i == n:\n\t\tif k > 0:\n\n\t\t\tprint(k * 2 - 1)\n\t\telse:\n\t\t\tprint(0)\n\t\tcontinue\n\tif i != 0:\n\t\tsingle.append(i)\n\tdouble = []\n\tf = False\n\tcnt = 0\n\tans = 0\n\twhile i < n:\n\t\tif s[i] == 'L':\n\t\t\tif not f:\n\t\t\t\tf = True\n\t\t\tcnt += 1\n\t\telse:\n\t\t\tif f:\n\t\t\t\tdouble.append(cnt)\n\t\t\t\tf = False\n\t\t\t\tcnt = 0\n\t\t\t\tans += 1\n\t\t\telse:\n\t\t\t\tadd = 0\n\t\t\t\tif i > 0 and s[i - 1] == 'W':\n\t\t\t\t\tadd = 1\n\t\t\t\tans += 1 + add\n\t\ti += 1\n\tif cnt:\n\t\tsingle.append(cnt)\n\tdouble.sort()\n\tsingle.sort()\n\ti = 0\n\twhile k > 0 and i < len(double):\n\t\tif double[i] <= k:\n\t\t\tk -= double[i]\n\t\t\tans += double[i] * 2 + 1\n\t\telse:\n\t\t\tans += k * 2\n\t\t\tk =0\n\t\ti += 1\n\ti = 0\n\twhile k > 0 and i < len(single):\n\t\tif single[i] <= k:\n\t\t\tk -= single[i]\n\t\t\tans += single[i] * 2\n\t\telse:\n\t\t\tans += k * 2\n\t\t\tk =0\n\t\ti += 1\n\tprint(ans)\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor case in range(t):\n    n, k = [int(x) for x in input().split(' ')]\n    s = input()\n    score = int(s[0] == 'W')\n\n    for i in range(1, n):\n        if s[i-1:i+1] == 'WW':\n            score += 2\n        elif s[i-1:i+1] == 'LW':\n            score += 1\n\n    losses = s.count('L')\n\n    if 'W' in s:\n        s_losses = s.index('W')\n        e_losses = n - 1 - s.rindex('W')\n        m_losses = [len(x) for x in s[s_losses:s.rindex('W') + 1].split('W') if x]\n        m_dict = {}\n        for streak in m_losses:\n            if streak in m_dict.keys():\n                m_dict[streak] += 1\n            else:\n                m_dict[streak] = 1\n\n\n        while m_dict and k > 0:\n            y = min(m_dict.keys())\n\n            if k < y:\n                score += k * 2\n                k = 0\n            else:\n                score += 2 * y + 1\n                m_dict[y] -= 1\n                if m_dict[y] == 0:\n                    del m_dict[y]\n                k -= y\n\n\n        ends = [x for x in sorted([s_losses, e_losses]) if x]\n\n        for y in ends:\n            if k < y:\n                score += k * 2\n                k = 0\n            else:\n                score += 2 * y\n                k -= y\n\n\n    else:\n        score = max(2 * k - 1, 0)\n    print(score)\n\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  long long int t;\n  cin >> t;\n  while (t--) {\n    long long int n, k, i, count = 0, ptr = 0, flag = 0, j;\n    cin >> n >> k;\n    string s;\n    cin >> s;\n    vector<pair<long long int, pair<long long int, long long int> > > vi;\n    for (i = 0; i < n; i++) {\n      if (s[i] == 'W' && flag == 0) {\n        ptr = i;\n        flag = 1;\n      } else {\n        if (flag == 1 && s[i] == 'W' && (i - ptr - 1) > 0) {\n          vi.push_back({i - ptr - 1, {ptr + 1, i - 1}});\n        }\n        if (s[i] == 'W') {\n          ptr = i;\n        }\n      }\n    }\n    sort(vi.begin(), vi.end());\n    for (auto x : vi) {\n      for (j = x.second.first; j <= x.second.second; j++) {\n        if (k > 0) {\n          s[j] = 'W';\n          k--;\n        }\n      }\n    }\n    for (i = 0; i < n - 1; i++) {\n      if (s[i] == 'W' && s[i + 1] == 'L' && k > 0) {\n        s[i + 1] = 'W';\n        k--;\n      }\n    }\n    for (i = n - 1; i > 0; i--) {\n      if (s[i] == 'W' && s[i - 1] == 'L' && k > 0) {\n        s[i - 1] = 'W';\n        k--;\n      }\n    }\n    for (i = 0; i < n; i++) {\n      if (s[i] == 'L' && k > 0) {\n        s[i] = 'W';\n        k--;\n      }\n    }\n    for (i = 0; i < n; i++) {\n      if (i == 0) {\n        if (s[i] == 'W') {\n          count++;\n        }\n      } else {\n        if (s[i] == 'W') {\n          if (s[i - 1] == 'W') {\n            count += 2;\n          } else {\n            count++;\n          }\n        }\n      }\n    }\n    cout << count << '\\n';\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "t = int (input ())\n\ntests = []\nfor i in range (t):\n    n, k = map (int, input().split())\n    s = input ()\n    tests.append ([n,k,s])\n    \n    \nfor test in tests:\n    n, k, s = test\n    result = 0\n    \n    w = s.count('W')\n    if w == 0:\n        if k == 0:\n            print (0)\n        else:\n            print (min(n,k)*2-1)\n        continue\n            \n    #prev = 'L'\n    results = []\n    for x in s:\n        # if x == 'W':\n        #     if prev == 'W':\n        #         result += 2\n        #     else:\n        #         result += 1\n        # prev = x\n        if results and results[-1][0] == x:\n            results[-1][1] +=1\n        else:\n            results.append ([x,1])\n     \n    first_loses = 0\n    if results[0][0] == 'L':\n        first_loses = results[0][1]\n        results.pop(0)\n    \n        \n    last_loses = 0\n    if results[-1][0] == 'L':\n        last_loses = results[-1][1]\n        results.pop ()\n        \n    loses = []       \n    for x,y in results:\n        if x =='W':\n            result += 2*y-1\n        else:\n            loses.append ([x,y])\n            \n    \n     \n    loses.sort ()\n    for x,y in loses:\n        if x == 'L':\n            if k >= y:\n               result += 2*y+1\n               k -= y\n            else:\n                result += 2*k\n                k = 0\n                break\n    \n    if last_loses > 0:\n        if k >= last_loses:\n            result += 2*last_loses\n            k -= last_loses\n        else:\n            result += 2 * k\n            k = 0\n            \n    if first_loses > 0:\n        if k >= first_loses:\n            result += 2 * first_loses\n        else:\n            result += 2 * k\n            \n    print (result)"
        },
        {
            "language": 3,
            "solution": "I=input\nfor _ in[0]*int(I()):\n n,k=map(int,I().split());s=I();a=sorted(map(len,filter(None,s.strip('L').split('W'))));r=0\n while a and r+a[0]<=k:r+=a.pop(0)\n print((2*min(n,s.count('W')+k)-len(a)or 1)-1)"
        },
        {
            "language": 3,
            "solution": "t = int(input())\ndef answer(n,k,s):\n  win = []\n  for i in range(n):\n    if s[i] == 'W':\n      win.append(i)\n  l = len(win)\n  if l <= 1:\n    print(min(max(2*(k+l)-1 , 0),2*n-1))\n  elif win[-1] - l  + 1 <= k:\n    ans = min(2*(k+l) - 1 , 2*n - 1)\n    print(ans)\n  else:\n    ans = 1\n    for i in range(l - 1):\n      if win[i+1] - win[i] == 1:\n        ans += 2\n      else:\n        ans += 1 \n    delta = [win[i+1] - win[i] - 1 for i in range(l-1)]\n    delta.sort()\n    flag = k\n    j = 0\n    while flag > 0 and j < l - 1:\n      d = delta[j]\n      if d != 0:\n        if flag >= d:\n          flag -=d\n          ans += 2*d + 1\n        else:\n          ans += 2*flag\n          flag = -1\n      j +=1  \n    if flag > 0:\n      ans += 2*flag\n    print(ans)     \nfor i in range(t):\n  n , k = map(int,input().split())\n  s = list(str(input()))\n  answer(n,k,s)\n    \n  "
        },
        {
            "language": 3,
            "solution": "#!/usr/bin/env python\nimport os\nimport sys\nfrom io import BytesIO, IOBase\n#from bisect import bisect_left as bl                #c++ lowerbound bl(array,element)\n#from bisect import bisect_right as br               #c++ upperbound br(array,element)\n \nfrom functools import cmp_to_key\ndef main():\n    for _ in range(int(input())):\n        n,k=map(int,input().split(\" \"))\n        a=list(input())\n        start=-1\n        end=-1\n        temp=[]\n        for x in range(n):\n            if a[x]=='L':\n                end+=1\n            else:\n                if start!=end:\n                    temp.append([end-start,[start+1,end]])\n                start=x\n                end=x\n        if start!=end:\n            temp.append([end-start,[start+1,end]])\n        def boss(a,b):\n            if a[1][0]==0 or a[1][1]==n-1:\n                if b[1][0]==0 or b[1][1]==n-1:\n                    if a[0]>b[0]:\n                        return 1\n                    else:\n                        return -1\n                else:\n                    return 1\n            elif b[1][0]==0 or b[1][1]==n-1:\n                if a[1][0]==0 or a[1][1]==n-1:\n                    if a[0]>b[0]:\n                        return 1\n                    else:\n                        return -1\n                else:\n                    return -1\n            elif a[0]>b[0]:\n                return 1\n            else:\n                return -1\n        temp.sort(key=cmp_to_key(boss))\n        #print(temp)\n        for x in temp:\n            if k<=0:\n                break\n            if x[1][1]==n-1:\n                for z in range(x[1][0],x[1][1]+1):\n                    a[z]='W'\n                    k-=1\n                    if k<=0:                        \n                        break\n            else:\n                #print(x[1][1],x[1][0])\n                for z in range(x[1][1],x[1][0]-1,-1):\n                    a[z]='W'\n                    k-=1\n                    if k<=0:                        \n                        break\n            if k<=0:\n                break\n        ans=0\n        chk=-1\n        for x in range(n):\n            if a[x]=='W':\n                if chk==-1:\n                    ans+=1\n                    chk=0\n                else:\n                    ans+=2\n            else:\n                chk=-1\n        print(ans)\n\n\n\n\n\n\n#-----------------------------BOSS-------------------------------------!\n# region fastio\n\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\n# endregion\n\nif __name__ == \"__main__\":\n    main()"
        },
        {
            "language": 3,
            "solution": "\nfor _ in range(int(input())):\n    \n    n, k = map(int, input().split())\n    \n    x = 1\n    X = []\n    ans = 0\n    y = 0\n    for s in input():\n        if s == 'W':\n            y = 1\n            if x:\n                X += [x]\n                ans += 1\n                x = 0\n            else:\n                ans += 2\n                \n        else:\n            x += 1\n    if y == 0:\n        print(max(min(k, n) * 2 - 1, 0))\n        continue\n    if x:\n        X += [x + 10 ** 8]\n    X[0] += 99999999\n    X.sort()\n    X.reverse()\n    while k > 0 and X:\n        \n        x = X.pop()\n        if x >= 10 ** 7:\n            x -= 10 ** 8\n            ans += 2 * min(x, k)\n            k -= min(x, k)\n        elif x > k:\n            ans += 2 * k\n            break\n        else:\n            ans += 2 * x + 1\n            k -= x\n        \n    print(ans)\n    "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    int n, k;\n    cin >> n >> k;\n    string s;\n    cin >> s;\n    int w(0), l(0);\n    for (char c : s) {\n      if (c == 'W') w++;\n    }\n    if (k + w >= n) {\n      cout << 2 * n - 1 << '\\n';\n      continue;\n    }\n    vector<int> gaps;\n    for (int i = 0; i < n; ++i) {\n      bool good = (i > 0);\n      if (s[i] == 'W') {\n        continue;\n      }\n      int len = 1;\n      while (i + 1 < n && s[i + 1] == 'L') {\n        len++;\n        i++;\n      }\n      if (good && i != n - 1) {\n        gaps.push_back(len);\n      }\n    }\n    sort(gaps.begin(), gaps.end());\n    int ans(0), rem(0);\n    for (int i = 0; i < n; ++i) {\n      if (s[i] == 'W')\n        ans++;\n      else\n        rem++;\n      if (s[i] == 'W' && i > 0 && s[i - 1] == 'W') ans++;\n    }\n    if (rem == n && k > 0) ans--;\n    for (int x : gaps) {\n      if (k >= x) {\n        k -= x;\n        ans += 2 * x + 1;\n        rem -= x;\n      } else {\n        break;\n      }\n    }\n    ans += 2 * min(k, rem);\n    cout << ans << '\\n';\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long int;\nusing dl = double;\nusing ull = unsigned long long;\nconst int N = 2e5 + 10;\nll aarray[N];\nll magic[505][505];\nvector<ll> primes;\nbool ok[1000001];\nmap<ll, ll> mp;\nvoid solve() {\n  ll i, n, k, ans = 0, w = 0, j;\n  string str;\n  cin >> n >> k;\n  cin >> str;\n  for (i = 0; i < str.length(); i++) {\n    if (str[i] == 'W') w++;\n  }\n  if (w + k >= n) {\n    cout << 2 * n - 1 << \"\\n\";\n    return;\n  }\n  ll pre[100000 + 10];\n  memset(pre, 0, sizeof(pre));\n  for (i = 1; i < str.length() - 1; i++) {\n    if (str[i] == 'L' && str[i - 1] == 'W' && str[i + 1] == 'W' && k)\n      str[i] = 'W', k--;\n  }\n  for (i = str.length() - 1; i >= 0; i--) {\n    if (str[i] == 'W') {\n      pre[i] = i;\n    } else {\n      if (i == str.length() - 1) {\n        pre[i] = INT_MAX;\n      } else\n        pre[i] = pre[i + 1];\n    }\n  }\n  vector<ll> v;\n  for (i = 0; i < str.length() - 1; i++) {\n    if (str[i] == 'W' && str[i + 1] == 'L') {\n      ll a = pre[i];\n      ll b = pre[i + 1];\n      b--;\n      b = b - a;\n      v.push_back(b);\n    }\n  }\n  sort(v.begin(), v.end());\n  ll sum = 0;\n  for (i = 0; i < v.size(); i++) {\n    if (sum + v[i] <= k) {\n      sum += v[i];\n      mp[v[i]]++;\n    } else\n      break;\n  }\n  k -= sum;\n  for (i = 0; i < str.length() - 1; i++) {\n    if (str[i] == 'W' && str[i + 1] == 'L') {\n      ll a = pre[i];\n      ll b = pre[i + 1];\n      b--;\n      b = b - a;\n      if (mp[b]) {\n        mp[b]--;\n        for (j = pre[i]; j <= pre[i + 1]; j++) {\n          str[j] = 'W';\n        }\n      }\n    }\n  }\n  for (i = 0; i < str.length(); i++) {\n    if (str[i] == 'W') {\n      if (i == 0 || str[i - 1] != 'W')\n        ans++;\n      else if (str[i - 1] == 'W')\n        ans += 2;\n      else\n        ans++;\n    }\n  }\n  if (k) {\n    if (ans == 0)\n      ans += 2 * k - 1;\n    else\n      ans += 2 * k;\n  }\n  cout << ans << \"\\n\";\n  mp.clear();\n  return;\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  string str;\n  ll i, j, n, m, k, t;\n  cin >> t;\n  while (t--) {\n    solve();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n,k = map(int, input().split())\n    string = input()\n    string = \"LL\"+string\n    wcount = 0\n    lcount = 0\n    wlw = []\n    pre1 = \"L\"\n    pre2 = \"L\"\n    # if pre2 == \"L\" and pre1==three==\"W\":\n    #     wlw+= 1\n    wstart = -100000000000\n    for j, i in enumerate(string[2:]):\n        if i == \"W\":\n            wcount+= 1\n            wstart = j-wstart\n            if wstart>1:\n                wlw.append(wstart-1)\n            else:\n                wcount += 1\n            wstart = j\n\n        else:\n            lcount += 1\n    wlw = wlw[1:]\n    wlw.sort()\n\n\n    result = -1\n\n    if k<=0:\n        result = wcount\n    elif lcount<=k:\n        result = (n*2)-1\n\n    else:\n        kcopy = k\n        val = 0\n        for i in wlw:\n            if i<=kcopy:\n                val+= (i*2)+1\n                kcopy -= i\n\n            else:\n                break\n\n        val += kcopy*2\n        result = wcount+val\n        if wcount == 0:\n            result -= 1\n    print(result)"
        },
        {
            "language": 3,
            "solution": "import math\n\nt = int(input())\n\n\nfor _ in range(t):\n    nk = input().split()\n    n = int(nk[0])\n    k = int(nk[1])\n\n    s = input()\n\n    n_winning_steaks = 0\n    n_wins = 0\n    n_losses = 0\n    losing_streaks = []\n    for i in range(n):\n        if s[i] == \"W\":\n            n_wins += 1\n            if i == 0 or s[i-1] == \"L\":\n                n_winning_steaks += 1\n        if s[i] == \"L\":\n            n_losses += 1\n            if i == 0 or s[i-1] == \"W\":\n                losing_streaks.append(0)\n            losing_streaks[-1] += 1\n\n    # print(f\"{n_wins} - {n_losses} - {n_winning_steaks}\")\n    # print(f\"losing_streaks: {losing_streaks}\")\n\n    if k >= n_losses:\n        print(2*n-1)\n        continue\n\n    if n_wins == 0:\n        if k == 0:\n            print(0)\n        else:\n            print(2*k-1)\n        continue\n\n    if s[0] == \"L\":\n        losing_streaks[0] = math.inf\n    if s[-1] == \"L\":\n        losing_streaks[-1] = math.inf\n\n    losing_streaks.sort()\n    # print(f\"losing_streaks: {losing_streaks}\")\n\n    n_wins += k\n    for i in range(len(losing_streaks)):\n        ls = losing_streaks[i]\n        if ls > k:\n            break\n        k -= ls\n        n_winning_steaks -= 1\n    \n    print(f\"{2*n_wins - n_winning_steaks}\")"
        },
        {
            "language": 4,
            "solution": "import com.sun.source.tree.Tree;\n\nimport javax.naming.spi.DirObjectFactory;\nimport javax.xml.crypto.dsig.spec.XSLTTransformParameterSpec;\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\n\n\nimport java.math.BigDecimal;\nimport java.math.BigInteger;\nimport java.math.RoundingMode;\nimport java.nio.file.LinkOption;\nimport java.util.*;\n\n\npublic class Main {\n\n\n    public static void main(String[] args) throws IOException {\n        Scanner in = new Scanner(System.in);\n\n\n        try (PrintWriter or = new PrintWriter(System.out)) {\n\n            int t = in.nextInt();\n            outer:\n            while (t-- > 0) {\n\n                int n = in.nextInt();\n\n                int k = in.nextInt();\n                char[] a = in.next().toCharArray();\n                class Pair {\n                    int first, second;\n\n                    public Pair(int start, int end) {\n                        this.first = start;\n                        this.second = end;\n                    }\n                }\n                int lst = -1;\n                ArrayList<Pair> v = new ArrayList<>();\n                for (int i = 0; i < n; ++i) {\n                    if (a[i] == 'L') continue;\n                    if (lst != -1) v.add(new Pair(i - lst - 1, lst));\n                    lst = i;\n                }\n                Collections.sort(v, new Comparator<Pair>() {\n                    @Override\n                    public int compare(Pair o1, Pair o2) {\n                        if (o1.first == o2.first) return o1.second - o2.second;\n                        return o1.first - o2.first;\n                    }\n                });\n                for (Pair go : v) {\n                    if (go.first > k) break;\n                    for (int j = go.second + 1; j < n && a[j] == 'L'; ++j) {\n                        --k;\n                        a[j] = 'W';\n                    }\n                }\n                for (int i = 1; i + 1 < n && k > 0; ++i)\n                    if (a[i] == 'L' && a[i - 1] == 'W' && a[i + 1] == 'W') {\n                        --k;\n                        a[i] = 'W';\n                    }\n                for (int i = n - 2; i >= 0 && k > 0; --i)\n                    if (a[i + 1] == 'W' && a[i] == 'L') {\n                        --k;\n                        a[i] = 'W';\n                    }\n                for (int i = 1; i < n && k > 0; ++i)\n                    if (a[i - 1] == 'W' && a[i] == 'L') {\n                        --k;\n                        a[i] = 'W';\n                    }\n                for (int i = 0; i < n && k > 0; ++i)\n                    if (a[i] == 'L') {\n                        a[i] = 'W';\n                        --k;\n                    }\n                int ans = 0;\n                for (int i = 0; i < n; ++i)\n                    if (a[i] == 'W') {\n                        ++ans;\n                        if (i > 0 && a[i - 1] == 'W') ++ans;\n                    }\n                or.printf(\"%d\\n\", ans);\n\n\n            }\n        }\n\n\n    }\n\n    static long gcd(long a, long b) {\n        if (b == 0)\n            return a;\n        return gcd(b, a % b);\n    }\n\n}\n\n\n"
        },
        {
            "language": 3,
            "solution": "'''Author- Akshit Monga'''\nt = int(input())\nfor _ in range(t):\n    n,k=map(int,input().split())\n    s=input()\n    ans=0\n    prev='L'\n    for i in s:\n        if i=='W' and prev=='W':\n            ans+=2\n        elif i=='W':\n            ans+=1\n        prev=i\n    temp=[]\n    a=0\n    b=0\n    x=0\n    y=0\n    for i in s:\n        if i=='W':\n            break\n        else:\n            x+=1\n    else:\n        if k>=n:\n            ans=1+2*(n-1)\n        else:\n            ans=1+2*(k-1)\n        print(max(ans,0))\n        continue\n    for i in s:\n        if i=='W':\n            b=1\n            if a!=0:\n                temp.append(a)\n            a=0\n        elif b==0:\n            continue\n        else:\n            a+=1\n    if a!=0:\n        y=a\n    temp=sorted(temp)\n    for i in temp:\n        if i<=k:\n            ans+=2*i+1\n            k-=i\n        else:\n            ans+=2*k\n            k=0\n    if k>0:\n        if (x+y)>=k:\n            ans+=2*k\n        else:\n            ans+=2*(x+y)\n    print(ans)\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput=sys.stdin.readline #FOR READING STRING/TEXT INPUTS. note that this will also append '\\n' to the back of the input.\n\nt=int(input())\nfor _ in range(t):\n    n,k=[int(x) for x in input().split()]\n    s=list(input()[:-1])\n    \n    \n    startGroup=[]\n    endGroup=[]\n    LGroups=[]\n    currLGroup=[]\n    isStart=False\n    isEnd=False\n    for i in range(n):\n        if i==0:\n            isStart=True\n        if s[i]=='W':\n            if len(currLGroup)>0:\n                if isStart:\n                    startGroup=currLGroup\n                else:\n                    LGroups.append(currLGroup)\n            isStart=False\n            currLGroup=[]\n        else:\n            currLGroup.append(i)\n    if len(currLGroup)>0:\n        endGroup=currLGroup\n    \n    finalLCount=max(s.count('L')-k,0)\n#    print('finalLCount:{}'.format(finalLCount))##\n#    print('startG:{} endG:{}'.format(startGroup,endGroup))\n    s2=['W']*n\n    if finalLCount>0:\n        for i in startGroup:\n            s2[i]='L'\n            finalLCount-=1\n            if finalLCount==0:\n                break\n    if finalLCount>0:\n        for j in range(len(endGroup)-1,-1,-1):\n            s2[endGroup[j]]='L'\n            finalLCount-=1\n            if finalLCount==0:\n                break\n    if finalLCount>0:\n        LGroups.sort(key=lambda x:len(x),reverse=True)\n        for g in LGroups:\n            for i in g:\n                s2[i]='L'\n                finalLCount-=1\n                if finalLCount==0:\n                    break\n            if finalLCount==0:\n                break\n    \n#    print(s2) ####\n    ans=0\n    for i in range(n):\n        if s2[i]=='W':\n            ans+=1\n            if i>0 and s2[i-1]=='W':\n                ans+=1\n    print(ans)"
        },
        {
            "language": 3,
            "solution": "for t in range(int(input())):\n    n,k = list(map(int, input().split(\" \")))\n    s = input()\n \n    point = j = 0\n    flag = True\n    cnt=0\n    c = []\n \n    j=0\n    while j<n and s[j]=='L' :\n        j+=1\n    st = j\n \n    if st==n and k>0:\n        print((min(st,k)*2)-1)\n        continue\n \n    while(j<n):\n        if flag and s[j] == \"W\":\n            if cnt > 0:\n                c.append(cnt)\n            point+=1\n            flag = False\n            cnt=0\n        elif s[j]==\"W\":\n            point+=2\n        else:\n            flag = True\n            cnt+=1\n        j+=1\n    c.sort()\n    lst = cnt\n \n    for i in c:\n        if k>0 and k-i>=0:\n            point +=((2*i)+1)\n            k-=i\n        elif k>0 and k-i<0:\n            point += k*2\n            k=0\n            break\n        else:\n            k=0\n            break\n \n    if k>0 and lst>=k:\n        point+=(k*2)\n        k=0\n    elif k>0 and lst<k:\n        point+=(lst*2)\n        k -= lst\n \n    if k > 0 and st >= k:\n        point += (k * 2)\n        k = 0\n    elif k > 0 and st < k:\n        point += (st * 2)\n        k -= st\n \n    print(point)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long int T;\n  cin >> T;\n  while (T--) {\n    long long int n, k, i;\n    cin >> n >> k;\n    string s;\n    cin >> s;\n    long long int flag1 = 0;\n    long long int cnt1 = 0;\n    long long int cnt3 = 0;\n    multiset<long long int> s1;\n    long long int cnt2 = 0;\n    for (i = 0; i < n; i++)\n      if (s[i] == 'W') cnt2++;\n    if ((cnt2 == 0) && (k > 0)) {\n      s[0] = 'W';\n      k--;\n    }\n    for (i = 0; i < n; i++) {\n      if ((flag1 == 0) && (s[i] == 'L')) cnt3++;\n      if (s[i] == 'W') {\n        flag1 = 1;\n        if (cnt1 != 0) s1.insert(cnt1);\n        cnt1 = 0;\n      }\n      if ((flag1 == 1) && (s[i] == 'L')) cnt1++;\n    }\n    long long int cost = 0;\n    for (i = 0; i < n; i++) {\n      if ((s[i] == 'W') && (s[i - 1] == 'W'))\n        cost += 2;\n      else if (s[i] == 'W')\n        cost += 1;\n    }\n    multiset<long long int>::iterator it;\n    for (it = s1.begin(); it != s1.end(); it++) {\n      if ((*it) > k) {\n        cost += (2 * k);\n        k = 0;\n        break;\n      } else {\n        cost += 3 + (2 * (*it - 1));\n        k -= (*it);\n      }\n    }\n    if (k != 0) {\n      cost += 2 * (min(k, cnt1 + cnt3));\n    }\n    cout << cost << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "# ref: https://www.bbsmax.com/A/WpdKEVpmJV/\nfor _ in range(int(input())):\n    N,K = map(int, input().split())\n    S = input()\n    \n    winning_steaks_cnt = wins = losses = 0\n    losing_steaks = []\n    \n    for i in range(N):\n        if S[i] == 'W':\n            wins += 1\n            if i==0 or S[i-1]=='L':\n                winning_steaks_cnt += 1\n            \n        if S[i]=='L':\n            losses += 1\n            if i==0 or S[i-1]=='W':\n                losing_steaks.append(0)\n            losing_steaks[-1] = losing_steaks[-1] + 1\n    \n    if K >= losses:\n        print(2*N-1)\n        continue\n    \n    if wins == 0:\n        if K == 0:\n            print(0)\n        else:\n            print(2*K-1)\n        continue\n    \n    if S[0]=='L':\n        losing_steaks[0] = 1e8\n    if S[-1]=='L':\n        losing_steaks[-1] = 1e8\n    \n    losing_steaks.sort()\n    wins += K\n    for ls in losing_steaks:\n        if ls > K:\n            break\n        \n        K -= ls\n        winning_steaks_cnt -= 1\n    \n    print(2*wins - winning_steaks_cnt)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid solve() {\n  long long n, k, ans = 0, cnt = 0;\n  cin >> n >> k;\n  string s;\n  cin >> s;\n  vector<long long> a;\n  long long lc = 0;\n  for (long long i = 0; i < n; i++) lc += (s[i] == 'L');\n  for (long long i = 0; i < n; i++) {\n    if (s[i] == 'W')\n      cnt++;\n    else if (cnt != 0)\n      a.push_back(cnt), cnt = 0;\n  }\n  if (cnt != 0) a.push_back(cnt);\n  for (auto i : a) ans += i * 2 - 1;\n  if (k == 0) {\n    cout << ans << endl;\n    return;\n  }\n  a.clear();\n  cnt = 0;\n  long long st = 0;\n  while (s[st] == 'L' && st < n) st++;\n  for (long long i = st; i < n; i++) {\n    if (s[i] == 'L')\n      cnt++;\n    else if (cnt != 0)\n      a.push_back(cnt), cnt = 0;\n  }\n  long long en = cnt;\n  if (k >= lc) {\n    cout << (2 * n) - 1 << endl;\n  } else {\n    if (k <= lc - st - en) {\n      sort(a.begin(), a.end());\n      long long i = 0;\n      while (k >= a[i]) {\n        k -= a[i];\n        ans += 2 * a[i] + 1;\n        i++;\n      }\n      ans += 2 * k;\n      cout << ans << endl;\n    } else {\n      long long nd = n - st - en - 1;\n      long long kd = lc - st - en;\n      ans = (2 * nd) + 1 + 2 * (k - kd);\n      cout << ans << endl;\n    }\n  }\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  long long t = 1;\n  cin >> t;\n  while (t--) solve();\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "from bisect import *\nfrom math import *\nfrom collections import Counter,defaultdict\nI =lambda:int(input())\nM =lambda:map(int,input().split())\nLI=lambda:list(map(int,input().split()))\ndef split(s,c):\n    b=[]\n    ch=\"\"\n    for i in range(len(s)):\n        if s[i]==c:\n            ch+=c\n        else:\n            if ch!=\"\":\n                b+=[ch]\n            ch=\"\"\n    if ch!=\"\":\n        b+=[ch]\n    return b\ndef solve():\n    n,k=M()\n    s=input()\n    ans=0\n    a=split(s,\"W\")\n    for i in range(len(a)):\n        if a[i]!='':\n            ans+=((len(a[i])-1)*2)\n            ans+=1\n    ind1=-1;ind2=-1\n    for i in range(n):\n        if s[i]==\"W\":\n            ind1=i;break\n    for i in range(n-1,-1,-1):\n        if s[i]==\"W\":\n            ind2=i;break\n    a=split(s[ind1:ind2],\"L\")\n    b=sorted(a)\n    for i in range(len(b)):\n        c=len(b[i])\n        if c<=k:\n            ans+=((c*2)+1)\n        else:\n            ans+=(k*2)\n        k-=min(k,c)\n        if k==0:\n            break\n    c=ind1\n    if ind1!=-1:\n        c+=(n-ind2)\n        c-=1\n        ans+=(min(c,k))*2\n    elif k!=0:\n        ans+=((min(len(s),k)-1)*2)\n        ans+=1\n        ans=max(0,ans)\n    print(min(ans,((len(s)*2)-1)))\nfor _ in range(I()):\n    solve()\n    \n    \n\n\n            \n            \n                \n        \n        \n            \n    \n\n\n            \n\n\n\n        \n            \n\n\n\n\n    \n\n\n      \n      \n    \n\n  \n\n\n\n"
        },
        {
            "language": 3,
            "solution": "a = int(input())\nfor k in range(a):\n    b, n = [int(k) for k in input().split()]\n    r = input()\n    len_r = len(r)\n    p_W = []\n    for x in range(len_r):\n        if r[x] == 'W':\n            p_W.append(x)\n    len_p_W = len(p_W)\n    l_d = []\n    for y in range(len(p_W)-1):\n        d = p_W[y+1] - p_W[y]\n        l_d.append(d)\n    len_l_d = len(l_d)\n    if n ==0:\n        if p_W == []:\n            ans = 0\n        else:\n            ans = 1\n            for x in l_d:\n                if  x > 1:\n                    ans += 1\n                else:\n                    ans += 2\n    elif p_W == [] or l_d.count(1) == len_l_d or sum(l_d) - len_l_d <= n:\n        ans = min(n, 1) + 2*min(len_p_W + n - 1, len_r - 1)\n    else:\n        ans = 1\n        for x in l_d:\n            if  x > 1:\n                ans += 1\n            else:\n                ans += 2\n        l_d = list(filter(lambda a: a > 1, l_d))\n        l_d.sort()\n        for x in l_d:\n            if x - 1 <= n:\n                ans += 2*(x - 1) + 1\n                n -= x - 1\n            else:\n                ans += 2*n\n                break\n    print(ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MOD = 1e9 + 7;\nvoid solve() {\n  long long int n, k;\n  cin >> n >> k;\n  string s;\n  cin >> s;\n  vector<long long int> gap;\n  long long int front = 0;\n  long long int i = 0;\n  while (i < n && s[i] == 'L') {\n    front++;\n    i++;\n  }\n  if (i == n) {\n    cout << max(0LL, 2 * min(n, k) - 1) << \"\\n\";\n    return;\n  }\n  long long int cnt = 0;\n  long long int ans = 0;\n  long long int loss = 0;\n  long long int win = 0;\n  for (; i < n; i++) {\n    if (s[i] == 'L') {\n      loss++;\n      win = 0;\n    } else {\n      if (win == 0) {\n        ans += 1;\n      } else {\n        ans += 2;\n      }\n      if (loss > 0) {\n        gap.push_back(loss);\n        loss = 0;\n      }\n      win++;\n    }\n  }\n  sort(gap.begin(), gap.end());\n  for (long long int i = 0; i < gap.size(); i++) {\n    if (k < gap[i]) {\n      ans += 2 * k;\n      k = 0;\n    } else {\n      ans += (2 * gap[i] + 1);\n      k -= gap[i];\n    }\n    if (k == 0) {\n      break;\n    }\n  }\n  if (k > 0) {\n    ans = min(2 * n - 1, ans + (k * 2));\n  }\n  cout << ans << \"\\n\";\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  int t;\n  cin >> t;\n  while (t--) {\n    solve();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <class T, class T1>\nint chkmin(T &x, const T1 &y) {\n  return x > y ? x = y, 1 : 0;\n}\ntemplate <class T, class T1>\nint chkmax(T &x, const T1 &y) {\n  return x < y ? x = y, 1 : 0;\n}\nconst int MAXN = (1 << 20);\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  long long T = 1;\n  cin >> T;\n  for (long long t = 0; t < T; t++) {\n    string s;\n    long long n, k, p = 0, ans = 0, c = 0, countera = 0, counterb = 0;\n    cin >> n >> k >> s;\n    long long j = 0;\n    long long wc = count(s.begin(), s.end(), 'W');\n    if (wc == 0) {\n      ans = min(n, k) * 2 - 1;\n      if (ans < 0) ans = 0;\n    } else {\n      vector<long long> b;\n      long long i = 0;\n      while (s[i] == 'L' && i < n) {\n        i++;\n        countera++;\n      }\n      for (; i < n; i++) {\n        if (s[i] == 'L') {\n          c++;\n        } else {\n          if (c) b.push_back(c);\n          c = 0;\n        }\n      }\n      long long j = n - 1;\n      while (s[j] == 'L') {\n        j--;\n        counterb++;\n      }\n      for (long long i = 0; i < n; i++) {\n        if (s[i] == 'W') {\n          p++;\n        } else {\n          if (p) ans = ans + p * 2 - 1;\n          p = 0;\n        }\n      }\n      if (p) ans = ans + p * 2 - 1;\n      sort(b.begin(), b.end());\n      for (auto x : b) {\n        if (x <= k) {\n          ans = ans + x * 2 + 1;\n          k = k - x;\n        } else {\n          ans = ans + k * 2;\n          k = 0;\n        }\n        if (k == 0) break;\n      }\n      if (k && counterb) {\n        if (counterb <= k)\n          ans = ans + counterb * 2;\n        else\n          ans = ans + k * 2;\n        k = k - min(k, counterb);\n      }\n      if (k && countera) {\n        if (k >= countera)\n          ans = ans + (countera)*2;\n        else\n          ans = ans + k * 2;\n      }\n    }\n    cout << ans << '\\n';\n  }\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "\ndef f(n, k , s):\n    stack = []\n    for ii in range(len(s)):\n        if stack == [] or stack[-1][0] != s[ii]:\n            stack.append([s[ii],1])\n        else:\n            stack[-1][1]+=1\n    if len(stack) ==1:\n        c = k if stack[0][0] == 'L' else n\n        return max(0,c * 2 -1)\n\n    score = 0\n    for u in stack:\n        if u[0] == 'W':\n            score += (u[1] * 2) - 1 \n    used = set([])\n    potential = []\n    for i,u in enumerate(stack):\n        if 0<i<len(stack)-1 and u[0] == 'L':\n            if k >= u[1]:\n                potential.append((u[1],i))\n\n    potential.sort()\n    for p,i in potential:\n        if k >= p:\n            score += 2 * p +1\n            used.add(i)\n            k -= p\n            \n\n    for i,u in enumerate(stack):\n        if u[0] == 'L' and i not in used:\n            if k > 0:\n                score += 2 * min(k,u[1])\n                used.add(i)\n                k-= min(k,u[1])\n            else:\n                break\n    return score\n\nnt = int(raw_input())\nfor u in range(nt):\n    n,k = map(int, raw_input().split())\n    s = raw_input()\n    print f(n,k,s)"
        },
        {
            "language": 3,
            "solution": "import sys\nimport math\ndef II():\n\treturn int(sys.stdin.readline())\n \ndef LI():\n\treturn list(map(int, sys.stdin.readline().split()))\n \ndef MI():\n\treturn map(int, sys.stdin.readline().split())\ndef SI():\n\treturn sys.stdin.readline().strip()\nt = II()\nfor q in range(t):\n\tn,k = MI()\n\ts = list(SI())\n\tcur = 0\n\ta = 0\n\tb = 0\n\td = []\n\ttemp = 0\n\tif len(set(s)) == 1 and \"L\" in s and k>0:\n\t\tk-=1\n\t\ts[0] = \"W\"\n\tfor i in range(n):\n\t\tif s[i] == \"W\":\n\t\t\tif temp!=0:\n\t\t\t\td.append(temp)\n\t\t\t\ttemp = 0\n\t\t\tif i>0 and s[i-1] == \"W\":\n\t\t\t\tcur+=2\n\t\t\telse:\n\t\t\t\tcur+=1\n\t\telse:\n\t\t\ttemp+=1\n\tif temp!=0:\n\t\td.append(temp)\n\tif \"L\" not in s or k == 0:\n\t\tprint(cur)\n\telse:\n\t\tif s[0] == \"L\":\n\t\t\ta = d[0]\n\t\t\td = d[1:]\n\t\tif s[-1] == \"L\":\n\t\t\ta += d[-1]\n\t\t\td = d[:-1]\n\t\td.sort()\n\t\tfor i in range(len(d)):\n\t\t\tif k>=d[i]:\n\t\t\t\tcur+=d[i]*2+1\n\t\t\t\tk-=d[i]\n\t\t\telse:\n\t\t\t\tcur+=k*2\n\t\t\t\tk = 0\n\t\t\tif k == 0:\n\t\t\t\tbreak\n\t\tif k!=0:\n\t\t\tm = min(k,a)\n\t\t\tif m>0:\n\t\t\t\tk-=m\n\t\t\t\tcur+=m*2\n\t\tprint(cur)\n\n\t\t\n\t\t"
        },
        {
            "language": 3,
            "solution": "import sys\n\ninput = lambda : sys.stdin.readline().strip()\n# n,x,y = map(int,input().split())\nfor i in range(int(input())):\n    n,k = map(int,input().split())\n    a = list(input())\n    ans = [0]\n    lol = [0]\n    lk = 0\n    if len(a)==1:\n        if a[0]==\"W\":\n            print(1)\n        else:\n            if k:\n                print(1)\n            else:\n                print(0)\n        continue\n    for i in range(n):\n        if a[i]==\"W\":\n            if lol[-1]!=0:\n                lol.append(0)\n                lk = 1\n            if ans[-1]==0:\n                ans.append(1)\n            else:\n                ans.append(2)\n        else:\n            ans.append(0)\n            lol[-1]+=1\n    if lol[-1]==0:\n        del lol[-1]\n    answ = sum(ans)\n    # print(answ)\n    lox = []\n    if len(lol)>1:\n        lox = lol[1:-1]\n    popa = 0\n    if len(lol)==0:\n        print(answ)\n        continue\n    if a[0]==\"W\" and lk:\n        lox.append(lol[0])\n    else:\n        popa =lol[0]\n    if len(lol)==1:\n        pass\n    elif a[-1]==\"W\" and lk:\n        lox.append(lol[-1])\n    else:\n        popa+=lol[-1]\n    lox.sort()\n    # print(lox)\n    l = len(lox)\n    for i in range(len(lox)):\n        if k>=lox[i]:\n            k-= lox[i]\n            answ+=2*lox[i]+1\n        else:\n            answ+=2*k\n            k = 0\n    k = min(k,popa)\n    if \"W\" in a:\n        answ+=2*k\n        print(answ)\n    else:\n        answ+=max(0,2*k-1)\n        print(answ)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  int t;\n  cin >> t;\n  while (t--) {\n    int count, count2, count3;\n    int n, k, j = 0;\n    cin >> n >> k;\n    vector<int> m;\n    string s;\n    cin >> s;\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n      if (s[i] == 'W') {\n        count = 0;\n        while (s[i] == 'W' && i < n) {\n          i++;\n          count++;\n          j++;\n        }\n        ans += 1 + (count - 1) * 2;\n        count2 = 0;\n        count3 = 0;\n        while (s[i] == 'L' && i < n) {\n          i++;\n          count2++;\n        }\n        if (s[i] == 'W') m.push_back(count2);\n        i--;\n      }\n    }\n    sort(m.begin(), m.end());\n    int i = 0;\n    int k2 = k;\n    while (i < m.size() && k >= m[i]) {\n      k -= m[i];\n      i++;\n    }\n    ans += i;\n    int max_ans = 1 + (n - 1) * 2;\n    if (ans > 0) {\n      if (ans + k2 * 2 >= max_ans)\n        ans = max_ans;\n      else\n        ans += k2 * 2;\n    } else if (ans == 0)\n      ans = max(1 + (k2 - 1) * 2, 0);\n    cout << ans << endl;\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor i in range(t):\n    n, k = map(int, input().split())\n    s = input()\n    s = \"L\" + s + \"W\"\n    a = []\n    p = 0\n    c = 0\n    koL = 0\n    sum = 0\n    for i in range(1, n + 2):\n        if s[i] == 'W' and p == 0:\n            p = 1\n            if i!= 1:\n                a.append(c)\n            c = 0\n            if i != n + 1:\n                sum += 1\n        elif s[i] == 'W' and p == 1 and i != n + 1:\n            sum += 2\n\n        if s[i] == 'L':\n            p = 0\n            c += 1\n            koL += 1\n    if s[n] == 'L':\n        a.pop()\n    if s[1] == 'L' and len(a) != 0:\n        a.pop(0)\n    if koL <= k:\n        print(2 * n - 1)\n    else:\n        a.sort()\n        cum = 0\n        p = 0\n        for i in range(len(a)):\n            if cum + a[i] <= k:\n                cum += a[i]\n                p += 1\n            else:\n                break\n        if sum == 0 and k != 0:\n            print(2 * k - 1)\n        else:\n            print(sum + 2 * k + p)\n"
        },
        {
            "language": 3,
            "solution": "import sys\nimport math \nfrom decimal import *\ndef I(): return int(sys.stdin.readline())\ndef IL(): return list(map(int,sys.stdin.readline().strip().split()))\ndef ILS(): return list(map(str,sys.stdin.readline().strip().split()))\n\ndef solve():\n\ttt = I()\n\tfor ii in range(tt):\n\t\tn,k = IL()\n\t\tss = input()\n\t\ts = [x for x in ss]\n\t\tw=0;l=0;\n\t\tfor i in range(n):\n\t\t\tif(s[i]=='W') : w+=1;\n\t\t\telse : l+=1;\n\t\t\n\t\tif(k>=l):\n\t\t\tprint((2*n - 1));\n\t\t\tcontinue;\n\t\t\n\t\tans=0;\n\t\tif(s[0]=='W') :\n\t\t\tans+=1;\n\t\tfor i in range(1,n):\n\t\t\tif(s[i]=='W'):\n\t\t\t\tans+=1;\n\t\t\t\tif(s[i-1]=='W'):\n\t\t\t\t\tans+=1;\n\t\t\t\n\t\t\n\t\tif(k==0):\n\t\t\tprint(ans);\n\t\t\tcontinue;\n\t\t\n\t\tloss = [];\n\t\tc=0;idx=n;\n\t\tfor i in range(n):\n\t\t\tif(s[i]=='W'):\n\t\t\t\tidx=i;\n\t\t\t\tbreak;\n\t\t\t\n\t\tif(idx==n):\n\t\t\tprint((k*2)-1);\n\t\t\tcontinue;\n\t\tfor i in range(idx,n):\n\t\t\n\t\t\tif(s[i]=='W' and c>0):\n\t\t\t\tloss.append(c);\n\t\t\t\tc=0;\n\t\t\t\n\t\t\telif(s[i]=='L') : c+=1;\n\t\t\n\t\tloss.sort()\n\t\tm=len(loss)\n\t\tfor i in range(m):\n\t\t\tif(k<=0): break;\n\t\t\tif(loss[i]>k):\n\t\t\t\tans+=(k*2);\n\t\t\t\tk=0;\n\t\t\t\n\t\t\telse:\n\t\t\t\tans+=((loss[i]*2)+1);\n\t\t\t\tk-=loss[i];\n\t\t\t\n\t\tif(k>0):\n\t\t\tans+=(k*2);\n\t\t\n\t\tprint(ans);\n\nsolve()"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\n#pragma GCC optimize(2)\nusing namespace std;\nconst long long int inf = 1e9 + 7;\nconst long long int mod = 998244353;\nmap<long long int, long long int>::iterator it;\nlong long int read() {\n  long long int x;\n  scanf(\"%lld\", &x);\n  return x;\n}\nstring c2s(char c) {\n  string re = \"0\";\n  re[0] = c;\n  return re;\n}\nlong long int printv(vector<long long int> V) {\n  cout << V.size() << \": \";\n  for (long long int i = 0; i < V.size(); i++) cout << V[i] << \" \";\n  puts(\"\");\n}\nlong long int gcd(long long int x, long long int y) {\n  while (x % y) {\n    long long int t = x % y;\n    x = y;\n    y = t;\n  }\n  return y;\n}\nlong long int readv(vector<long long int>& V) {\n  for (long long int i = 0; i < ((long long int)V.size()); i++) V[i] = read();\n}\nbool isprime(long long int x) {\n  for (long long int i = 2; i * i <= x; i++)\n    if (x % i == 0) return false;\n  return true;\n}\nvoid yn(bool x) {\n  if (x)\n    puts(\"YES\");\n  else\n    puts(\"NO\");\n}\nlong long int fpow(long long int a, long long int n) {\n  long long int re = 1;\n  while (n) {\n    if (n & 1) re = re * a % mod;\n    a = a * a % mod;\n    n /= 2;\n  }\n  return re;\n}\nconst long long int dir[4][2] = {{1, 0}, {-1, 0}, {0, 1}, {0, -1}};\nconst long long int dir2[8][2] = {{1, 1},  {1, 0},  {1, -1}, {0, 1},\n                                  {0, -1}, {-1, 1}, {-1, 0}, {-1, -1}};\nlong long int fff(long long int x) {\n  if (x > 0)\n    return (x + 1) / 2;\n  else\n    return ((-1) * x) / 2 * (-1);\n}\nint main() {\n  long long int ca = read();\n  for (long long int ci = 0; ci < ca; ci++) {\n    long long int n = read(), k = read();\n    string t;\n    cin >> t;\n    long long int lcnt = 0, wcnt = 0;\n    long long int winpos = -1;\n    vector<long long int> A;\n    for (long long int i = 0; i < ((long long int)t.size()); i++) {\n      if (t[i] == 'L')\n        lcnt++;\n      else {\n        wcnt++;\n        if (winpos != -1 && winpos + 1 != i) A.push_back(i - winpos - 1);\n        winpos = i;\n      }\n    }\n    sort(A.begin(), A.end());\n    if (lcnt <= k)\n      cout << 2 * n - 1 << endl;\n    else if (wcnt == 0 && k)\n      cout << 2 * k - 1 << endl;\n    else {\n      long long int presco = 0;\n      long long int pre = 0;\n      for (long long int i = 0; i < n; i++) {\n        if (t[i] == 'W' && pre) presco += 2;\n        if (t[i] == 'W' && pre == 0) presco++;\n        if (t[i] == 'W') pre = 1;\n        if (t[i] == 'L') pre = 0;\n      }\n      long long int ans = presco + 2 * k;\n      if (k) {\n        long long int i = 0;\n        while (i + 1 <= A.size() && k >= A[i]) {\n          k -= A[i++];\n          ans++;\n        }\n      }\n      cout << ans << endl;\n    }\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\n#pragma comment(linker, \"/stack:200000000\")\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native\")\ntemplate <typename T>\nbool mmax(T &m, const T q) {\n  if (m < q) {\n    m = q;\n    return true;\n  } else\n    return false;\n}\ntemplate <typename T>\nbool mmin(T &m, const T q) {\n  if (m > q) {\n    m = q;\n    return true;\n  } else\n    return false;\n}\nvoid __print(long long first) { cerr << first; }\nvoid __print(long first) { cerr << first; }\nvoid __print(unsigned first) { cerr << first; }\nvoid __print(unsigned long first) { cerr << first; }\nvoid __print(unsigned long long first) { cerr << first; }\nvoid __print(float first) { cerr << first; }\nvoid __print(double first) { cerr << first; }\nvoid __print(long double first) { cerr << first; }\nvoid __print(char first) { cerr << '\\'' << first << '\\''; }\nvoid __print(const char *first) { cerr << '\\\"' << first << '\\\"'; }\nvoid __print(const string &first) { cerr << '\\\"' << first << '\\\"'; }\nvoid __print(bool first) { cerr << (first ? \"true\" : \"false\"); }\ntemplate <typename T, typename V>\nvoid __print(const pair<T, V> &first) {\n  cerr << '{';\n  __print(first.first);\n  cerr << ',';\n  __print(first.second);\n  cerr << '}';\n}\ntemplate <typename T>\nvoid __print(const T &first) {\n  long long f = 0;\n  cerr << '{';\n  for (auto &i : first) cerr << (f++ ? \",\" : \"\"), __print(i);\n  cerr << \"}\";\n}\nvoid _print() { cerr << \"]\\n\"; }\ntemplate <typename T, typename... V>\nvoid _print(T t, V... v) {\n  __print(t);\n  if (sizeof...(v)) cerr << \", \";\n  _print(v...);\n}\nmt19937_64 rng(chrono::high_resolution_clock::now().time_since_epoch().count());\nconst long long N = 1 << 20;\nint32_t main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  cout << fixed << setprecision(12);\n  long long T;\n  cin >> T;\n  while (T--) {\n    long long n, k;\n    cin >> n >> k;\n    string s;\n    cin >> s;\n    long long f = 0, ans = 0, c = 0, pre = 0, suf = 0;\n    ;\n    vector<long long> v;\n    for (long long i = 0; i < n; i++) {\n      if (s[i] == 'L') {\n        c++;\n      } else {\n        if (f) {\n          if (c) v.push_back(c);\n        } else\n          pre = c;\n        c = 0;\n        f = 1;\n        if (i - 1 >= 0 and s[i - 1] == 'W')\n          ans += 2;\n        else\n          ans++;\n      }\n    }\n    suf = c;\n    if (k == 0) {\n      cout << ans << \"\\n\";\n      continue;\n    }\n    if (suf == n) {\n      mmin(k, suf);\n      ans += (k - 1) * 2;\n      ans++;\n      cout << ans << \"\\n\";\n      continue;\n    }\n    sort((v).begin(), (v).end());\n    for (auto i : v) {\n      if (i <= k) {\n        ans += 2 * i;\n        ans++;\n        k -= i;\n      } else {\n        ans += 2 * k;\n        k = 0;\n        break;\n      }\n    }\n    long long d = min(k, pre);\n    ans += d * 2;\n    k -= d;\n    ans += min(k, suf) * 2;\n    cout << ans << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst double PI = acos(-1.0);\nbool comp(pair<int, int> a, pair<int, int> b) {\n  if (a.second == b.second) return (a.first < b.first);\n  return (a.second < b.second);\n}\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  long long mi = 1e12, ma = -1e12;\n  long long a, b, c, d, n, ex, m, k, sum = 0, no = 0, s = 0, tt, mod = 1e9 + 7,\n                                     x, y, w = 0;\n  char ch;\n  string C;\n  vector<long long> A, B, T;\n  set<long long> St;\n  cin >> ex;\n  while (ex--) {\n    s = 0;\n    w = 0;\n    no = 0;\n    cin >> n >> k >> C;\n    for (int i = 0; i < n; i++) {\n      if (C[i] == 'W') {\n        w++;\n        no = 1;\n      }\n      if (C[i] == 'L' && no) {\n        s++;\n      } else {\n        if (s) A.push_back(s);\n        s = 0;\n      }\n    }\n    w += min(k, n - w);\n    if (w == 0 && k == 0)\n      cout << 0;\n    else {\n      sort(A.begin(), A.end());\n      reverse(A.begin(), A.end());\n      for (int i = A.size() - 1; i >= 0; i--) {\n        if (A[i] <= k) {\n          k -= A[i];\n          A.pop_back();\n        }\n      }\n      cout << 2 * w - (A.size() + 1);\n    }\n    cout << '\\n';\n    ;\n    A.clear();\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Tue Nov 17 20:10:01 2020\n\n@author: \u7ae0\u65af\u5c9a\n\"\"\"\nt=input\nfor i in range(int(t())):\n    n,k=map(int,t().split())\n    a=sorted(map(len,t().strip('L').split('W')))\n    m=len(a)+k\n    while a and k>=a[0]:\n        k-=a.pop(0)\n    print((2*min(n,m-1)-len(a) or 1)-1)"
        },
        {
            "language": 3,
            "solution": "def solve():\n\tn,k=map(int,input().split())\n\t#print(n,k)\n\tl=sorted(map(len,input().strip('L').split('W')))\n\tz=len(l)+k\n\twhile l and l[0]<=k:\n\t\tk-=l.pop(0)\n\tans=2*min(n,z-1)-len(l)\n\tif ans<=0:\n\t\tans=1\n\tprint(ans-1)\n\nt=int(input())\nfor _ in range(0,t):\n\tsolve()\n\n\n\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.io.BufferedWriter;\nimport java.util.InputMismatchException;\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.io.Writer;\nimport java.io.OutputStreamWriter;\nimport java.util.Collections;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        OutputWriter out = new OutputWriter(outputStream);\n        BChessCheater solver = new BChessCheater();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class BChessCheater {\n        public void solve(int testNumber, InputReader in, OutputWriter out) {\n            int ntc = 1;\n            ntc = in.nextInt();\n            while ((ntc--) > 0) {\n                int n = in.nextInt();\n                int k = in.nextInt();\n                char[] chrr = in.nextString().toCharArray();\n                int first = -1;\n                int last = -1;\n                ArrayList<int[]> gaps = new ArrayList<>();\n                int cntW = 0;\n                for (int i = 0; i < n; i++) {\n                    if (chrr[i] == 'W') {\n                        if (first == -1) first = i;\n                        if (last != -1) {\n                            gaps.add(new int[]{last + 1, i - 1});\n                        }\n                        int j = i;\n                        while (j < n && chrr[j] == 'W') {\n                            last = j;\n                            j++;\n                            cntW++;\n                        }\n                        i = j - 1;\n                    }\n                }\n                if (last == -1 || gaps.size() == 0) {\n                    out.println(Math.max(0, (Math.min(k, n - cntW) + cntW) * 2 - 1));\n                    continue;\n                }\n                Collections.sort(gaps, (a, b) -> {\n                    return Math.abs(a[0] - a[1]) - Math.abs(b[0] - b[1]);\n                });\n                for (int[] gap : gaps) {\n                    if (gap[1] - gap[0] + 1 <= k) {\n                        for (int j = gap[0]; j <= gap[1]; j++) {\n                            chrr[j] = 'W';\n                            k--;\n                        }\n                    } else break;\n                }\n                for (int i = n - 2; i >= 0; i--) {\n                    if (chrr[i + 1] == 'W' && chrr[i] == 'L' && k > 0) {\n                        chrr[i] = 'W';\n                        --k;\n                    }\n                }\n                for (int i = 1; i < n; i++) {\n                    if (chrr[i - 1] == 'W' && chrr[i] == 'L' && k > 0) {\n                        chrr[i] = 'W';\n                        k--;\n                    }\n                }\n                out.println(countValue(chrr));\n            }\n        }\n\n        public int countValue(char[] chrr) {\n            char prev = 'L';\n            int value = 0;\n            for (char ch : chrr) {\n                if (prev == 'L') {\n                    if (ch == 'W') {\n                        value += 1;\n                    } else {\n                        value += 0;\n                    }\n                } else {\n                    if (ch == 'W') {\n                        value += 2;\n                    } else {\n                        value += 0;\n                    }\n                }\n                prev = ch;\n            }\n            return value;\n        }\n\n    }\n\n    static class InputReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private InputReader.SpaceCharFilter filter;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int read() {\n            if (numChars == -1) {\n                throw new InputMismatchException();\n            }\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (numChars <= 0) {\n                    return -1;\n                }\n            }\n            return buf[curChar++];\n        }\n\n        public int nextInt() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do {\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public String nextString() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            StringBuilder res = new StringBuilder();\n            do {\n                if (Character.isValidCodePoint(c)) {\n                    res.appendCodePoint(c);\n                }\n                c = read();\n            } while (!isSpaceChar(c));\n            return res.toString();\n        }\n\n        public boolean isSpaceChar(int c) {\n            if (filter != null) {\n                return filter.isSpaceChar(c);\n            }\n            return isWhitespace(c);\n        }\n\n        public static boolean isWhitespace(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        public interface SpaceCharFilter {\n            public boolean isSpaceChar(int ch);\n\n        }\n\n    }\n\n    static class OutputWriter {\n        private final PrintWriter writer;\n\n        public OutputWriter(OutputStream outputStream) {\n            writer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));\n        }\n\n        public OutputWriter(Writer writer) {\n            this.writer = new PrintWriter(writer);\n        }\n\n        public void close() {\n            writer.close();\n        }\n\n        public void println(long i) {\n            writer.println(i);\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor _ in range(t):\n    n,k = list(map(int,input().split()))\n    s = list(input())\n    ans = 0\n    for i in range(1,n):\n        if s[i]=='W':\n            if s[i-1]=='W':\n                ans+=2\n            else:\n                ans+=1\n    if s[0]=='W':\n        ans+=1\n    \n    k =  min(k,s.count('L'))\n    diff = []\n    if s.count('L')==n:\n        print(max(2*k-1,0))\n        continue\n    start = 0\n    pre = s.index('W')\n    start = pre\n    for i in range(pre+1,n):\n        if s[i]=='W':\n            if ((i-pre-1)!=0):\n                diff.append(i-pre-1)\n            pre = i\n    #print(diff)\n    diff.sort()\n    \n    for i in diff:\n        if i<=k:\n            ans+=(2*i+1)\n            k-=i\n        else:\n            ans+=2*k\n            k = 0\n            break\n    if k>0:\n        ans+=2*k\n    print(ans)\n    \n    "
        },
        {
            "language": 4,
            "solution": "        import java.io.*;\n        import java.util.*;\n        import java.math.*;\n        import java.lang.*;\n\n        public class Main implements Runnable \n        {\n            static class InputReader \n            {\n                private InputStream stream;\n                private byte[] buf = new byte[1024];\n                private int curChar;\n                private int numChars;\n                private SpaceCharFilter filter;\n                private BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n                public InputReader(InputStream stream) \n                {\n                    this.stream = stream;\n                }\n                \n                public int read()\n                {\n                    if (numChars==-1) \n                        throw new InputMismatchException();\n                    \n                    if (curChar >= numChars) \n                    {\n                        curChar = 0;\n                        try\n                        {\n                            numChars = stream.read(buf);\n                        }\n                        catch (IOException e)\n                        {\n                            throw new InputMismatchException();\n                        }\n                        \n                        if(numChars <= 0)               \n                            return -1;\n                    }\n                    return buf[curChar++];\n                }\n            \n                public String nextLine()\n                {\n                    String str = \"\";\n                    try\n                    {\n                        str = br.readLine();\n                    }\n                    catch (IOException e)\n                    {\n                        e.printStackTrace();\n                    }    \n                    return str;\n                }\n                public int nextInt() \n                {\n                    int c = read();\n                    \n                    while(isSpaceChar(c)) \n                        c = read();\n                \n                    int sgn = 1;\n                \n                    if (c == '-') \n                    {\n                        sgn = -1;\n                        c = read();\n                    }\n                    \n                    int res = 0;\n                    do\n                    {\n                        if(c<'0'||c>'9') \n                            throw new InputMismatchException();\n                        res *= 10;\n                        res += c - '0';\n                        c = read();\n                    }\n                    while (!isSpaceChar(c)); \n                \n                    return res * sgn;\n                }\n                \n                public long nextLong() \n                {\n                    int c = read();\n                    while (isSpaceChar(c))\n                        c = read();\n                    int sgn = 1;\n                    if (c == '-')\n                    {\n                        sgn = -1;\n                        c = read();\n                    }\n                    long res = 0;\n                    \n                    do \n                    {\n                        if (c < '0' || c > '9')\n                            throw new InputMismatchException();\n                        res *= 10;\n                        res += c - '0';\n                        c = read();\n                    }    \n                    while (!isSpaceChar(c));\n                        return res * sgn;\n                }\n                \n                public double nextDouble() \n                {\n                    int c = read();\n                    while (isSpaceChar(c))\n                        c = read();\n                    int sgn = 1;\n                    if (c == '-')\n                    {\n                        sgn = -1;\n                        c = read();\n                    }\n                    double res = 0;\n                    while (!isSpaceChar(c) && c != '.') \n                    {\n                        if (c == 'e' || c == 'E')\n                            return res * Math.pow(10, nextInt());\n                        if (c < '0' || c > '9')\n                            throw new InputMismatchException();\n                        res *= 10;\n                        res += c - '0';\n                        c = read();\n                    }\n                    if (c == '.') \n                    {\n                        c = read();\n                        double m = 1;\n                        while (!isSpaceChar(c))\n                        {\n                            if (c == 'e' || c == 'E')\n                                return res * Math.pow(10, nextInt());\n                            if (c < '0' || c > '9')\n                                throw new InputMismatchException();\n                            m /= 10;\n                            res += (c - '0') * m;\n                            c = read();\n                        }\n                    }\n                    return res * sgn;\n                }\n            \n                public String readString() \n                {\n                    int c = read();\n                    while (isSpaceChar(c))\n                        c = read();\n                    StringBuilder res = new StringBuilder();\n                    do \n                    {\n                        res.appendCodePoint(c);\n                        c = read();\n                    } \n                    while (!isSpaceChar(c));\n                    \n                    return res.toString();\n                }\n            \n                public boolean isSpaceChar(int c) \n                {\n                    if (filter != null)\n                        return filter.isSpaceChar(c);\n                    return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n                }\n            \n                public String next()\n                {\n                    return readString();\n                }\n                \n                public interface SpaceCharFilter\n                {\n                    public boolean isSpaceChar(int ch);\n                }\n            }\n            public static void main(String args[]) throws Exception \n            {\n                new Thread(null, new Main(),\"Main\",1<<27).start();\n            }\n            \n            static class Pair{\n                int f;\n                int s;\n                boolean n;\n                \n                \n                Pair(int f,int s, boolean n){\n                    this.f=f;\n                    this.s=s;\n                    this.n = n;\n                    \n                }\n                \n                public static Comparator<Pair> wc = new Comparator<Pair>(){\n                    public int compare(Pair e1,Pair e2){\n                        \n                        //reverse order\n                        if(e1.n)return 1;\n                        else if(e2.n) return -1;\n                        else if(e1.s < e2.s) \n                            return -1;  // 1 for swaping.\n                        else if (e1.s > e2.s) \n                            return 1; \n                        else {\n                            return 0;\n                        } \n                        \n                    }\n                };\t\n            }\n\n            public static long gcd(long a,long b){\n                if(b==0)return a;\n                else return gcd(b,a%b);\n            }\n\n\n            ////recursive BFS\n            public static int bfsr(int s,ArrayList<Integer>[] a,boolean[] b,int[] pre){\n                b[s]=true;\n                int p = 1;\n                int n = pre.length -1;\n                int t = a[s].size();\n                int max = 1;\n                for(int i=0;i<t;i++){\n                    int x = a[s].get(i);\n                    if(!b[x]){\n                        //dist[x] = dist[s] + 1;\n                        int xz =  (bfsr(x,a,b,pre));\n                        p+=xz;\n                        max = Math.max(xz,max);\n                    }\n                }\n                //max = Math.max(max,(n-p));\n                pre[s] = max;\n                return p;\n            }   \n\n        //// iterative BFS\n            public static int bfs(int s,ArrayList<Integer>[] a,int dist,boolean[] b,PrintWriter w){\n                b[s]=true;\n                int siz = 0;\n                dist--;\n                Queue<Integer> q = new LinkedList<>();\n                q.add(s);\n                while(q.size()!=0 && dist>0 ){\n                    int i=q.poll();\n                    Iterator<Integer> it = a[i].listIterator();\n                    int z=0;\n                    while(it.hasNext() && dist>0){\n                        z=it.next();\n                        if(!b[z]){\n                            b[z]=true;\n                            dist--;\n                            //dist[z] = dist[i] + 1;\n                            siz++;\n                            q.add(z);\n                        }\n                    }   \n                \n                }\n                return siz;\n            }\n\n            public static int lower(int key, int[] a){\n                int l = 0;\n                int r = a.length-1;\n                int res = 0;\n\n                while(l<=r){\n                    int mid = (l+r)/2;\n\n                    if(a[mid]<=key){\n                        l = mid+1;\n                        res = mid+1;\n                    }\n                    else{\n                        r = mid -1;\n                    }\n                }\n\n                return res;\n            }\n\n            \n\n\n        //////////////////////////////////////////////////////////////////////////////////////////////////////\n        //////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\n            public void run()\n            {\n                InputReader sc = new InputReader(System.in);\n                PrintWriter w = new PrintWriter(System.out);\n                long defaultValue=0;\n                \n\n                \n                int tc = sc.nextInt();\n                while(tc-->0){\n                    int n = sc.nextInt();\n                    int k = sc.nextInt();\n                    StringBuilder s = new StringBuilder(sc.next());\n                    int c = 0;\n\n                    PriorityQueue<Pair> p = new PriorityQueue<Pair>(Pair.wc);\n\n                    for(int i=0;i<n;i++){\n                        if(s.charAt(i)=='L'){\n                            c++;\n                        }\n                        if(s.charAt(i)=='W' || i==n-1){\n                            if(c!=0){\n                                int y = s.charAt(i)=='W'?i-c:i-c+1;\n                                boolean z = false;\n                                if(y==0) z = true;\n                                if(y+c==n) z = true;\n                                p.add(new Pair(y,c,z));\n                                c = 0;\n                            }\n                            else{\n                                continue;\n                            }\n                        }\n                    }\n                    //w.println(tc);\n                    while(p.size()!=0 && k>0){\n                        Pair x = p.poll();\n                        //w.println(x.f+\" \"+x.s);\n                        if(x.f!=0){\n                            for(int i=x.f;i<(x.f+x.s) && k>0;i++){\n                                s.setCharAt(i, 'W');\n                                k--;\n                            }\n                        }\n                        else{\n                            for(int i=(x.f+x.s-1);i>-1 && k>0;i--){\n                                s.setCharAt(i, 'W');\n                                k--;\n                            }\n                        }\n\n                    }\n                    boolean f = false;\n                    long ans = 0;\n                    for(int i=0;i<n;i++){\n                        if(s.charAt(i)=='W'){\n                            if(f)ans+=2;\n                            else{\n                                ans+=1;\n                                f = true;\n                            }\n                            \n                        }    \n                        else{\n                            f = false;\n                        }\n                    }\n                    //w.print(s.toString());\n                    w.println(ans);\n\n\n\n\n                }\n                w.flush();\n                w.close();\n            }\n            \n        \n            \n\n            \n        }\n\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.PriorityQueue;\nimport java.util.StringTokenizer;\n\npublic class Main {\n\n\n    public static void main(String[] args){\n        MyScanner s = new MyScanner();\n        int t = s.nextInt();\n        while(t-->0){\n            int n = s.nextInt();\n            int k = s.nextInt();\n            String str = s.next();\n            int firstW = -1;\n            int lastW = -1;\n            int loses = 0;\n            int score = 0;\n            for(int i=0;i<n;i++){\n                if(str.charAt(i) == 'W'){\n                    if( firstW == -1){\n                        firstW = i;\n                    }\n                    lastW = i;\n                    score++;\n                    if (i < n - 1) {\n                        if(str.charAt(i+1) == 'W'){\n                            score++;\n                        }\n                    }\n                }else{\n                    loses++;\n                }\n            }\n            if(k == 0){\n                System.out.println(score);\n                continue;\n            }\n            if(firstW == -1){\n                System.out.println(score + 2*Math.min(n,k)-1);\n                continue;\n            }\n\n            PriorityQueue<Integer> twoSided = new PriorityQueue<>();\n            for(int i=firstW;i<=lastW;i++){\n                int segment = 0;\n                while(str.charAt(i) == 'L'){\n                    segment++;\n                    i++;\n                }\n                if(segment!=0)\n                    twoSided.add(segment);\n            }\n            while(k>0 && !twoSided.isEmpty()){\n                int seg = twoSided.poll();\n                if(seg<=k){\n                    score += 2*seg + 1;\n                    k -= seg;\n                    loses -= seg;\n                }else{\n                    score += Math.min(loses,k)*2;\n                    k = 0;\n                }\n            }\n            score += Math.min(loses,k)*2;\n            System.out.println(score);\n\n        }\n\n\n    }\n\n\n\n\n\n\n\n\n\n\n\n\n    public static class MyScanner {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public MyScanner() {\n            br = new BufferedReader(new InputStreamReader(System.in));\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine(){\n            String str = \"\";\n            try {\n                str = br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n\n    }\n\n}\n\n\n"
        },
        {
            "language": 3,
            "solution": "#!/usr/bin/python3\n\nns = lambda: input()\nni = lambda: int(input())\nnm = lambda: map(int, input().split())\nnl = lambda: list(map(int, input().split()))\n\n\"B. Chess Cheater\"\nfor _ in range(ni()):\n    n,k=nm()\n    s=ns()\n    w=[]\n    l=[]\n    i=count=1\n    f=s[0]\n    ll=[]\n    while i<n:\n        if s[i]==\"W\" and f!=\"W\":\n            l.append(count)\n            ll.append(count)\n            w.append(0)\n            f=\"W\"\n            count=1\n        elif s[i]==\"L\" and f!=\"L\":\n            w.append(count)\n            l.append(0)\n            f=\"L\"\n            count=1\n        else:\n            count+=1\n        i+=1\n    if s[-1]==\"W\":\n        w.append(count)\n        l.append(0)\n    else:\n        l.append(count)\n        ll.append(count)\n        w.append(0)\n    # print(w)\n    # print(l)\n    # print(ll)\n    if n<3:\n        ans=min(sum(w)+k,n)\n        if ans!=0:\n            ans=(2*ans)-1\n        print(ans)\n        continue\n    z=[]\n    if k>=sum(ll):\n        print((2*n)-1)\n        continue\n    if l[0]!=0 and len(ll)>0:\n        t=ll.pop(0)\n        z.append(t)\n    if l[-1]!=0 and len(ll)>0:\n        t=ll.pop(-1)\n        z.append(t)\n    ll.sort()\n    su=0\n    ind=0\n    # print(ll,z)\n    if k==0:\n        ans=sum(w)\n        if ans!=0:\n            ans=(2*ans)-1-(len(ll))\n        print(ans)\n        continue\n    while ind<len(ll):\n        su+=ll[ind]      \n        if su==k:\n            ind+=1\n            break\n        elif su>k:\n            su-=ll[ind]\n            break\n        ind+=1\n    if ind==len(l):\n        ans=min(n,sum(w)+k)\n        ans=(2*ans)-1\n    else:\n        ans=min(n,sum(w)+k)\n        ans=(2*ans)-1-(len(ll)-ind)\n    print(ans)\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n, k = map(int, input().split())\n    s = input()\n    ans,t,b,f =0,0,0,0\n    l = []\n    for i in range(n):\n        if s[i]=='W':\n            ans += f + 1\n            f = 1\n            if b:l.append(b)\n            b = 0\n        else:f = 0;b += 1\n    if b:l.append(b)\n    m,v = 0,0\n    if s[0]=='L':m = l.pop(0)\n    if s[-1]=='L':\n        if ans:\n            v = l.pop()\n    l.sort()\n    while k and l:\n        t = l.pop(0)\n        if k >= t:\n            ans += t*2 + 1;k -= t\n        else:ans += 2*k;k = 0\n    if k:\n        ans = ans+2*min(k,m+v) if ans else ans + 2*min(k,m)-1\n    print(ans)"
        },
        {
            "language": 3,
            "solution": "# Legends Always Come Up with Solution\n# Author: Manvir Singh\n\nimport os\nfrom io import BytesIO, IOBase\nimport sys\nfrom collections import defaultdict,deque,Counter\nfrom bisect import *\nfrom math import sqrt,pi,ceil,log,inf\nfrom itertools import permutations\nfrom copy import deepcopy\n\nfrom sys import setrecursionlimit\n\n\ndef main():\n    for _ in range(int(input())):\n        n,k=map(int,input().split())\n        a=list(input().rstrip())\n        b=[]\n        i=0\n        while i<n:\n            if a[i]==\"L\":\n                j=i+1\n                while j<n and a[j]==\"L\":\n                    j+=1\n                b.append([i,j-1])\n                i=j\n            i+=1\n        b.sort(key=lambda x:(x[1]-x[0])+(0 if (x[0]!=0 and x[1]!=n-1) else 10**5))\n        for i in range(len(b)):\n            if b[i][0]!=0:\n                for j in range(b[i][0],b[i][1]+1):\n                    if k==0:\n                        break\n                    a[j]=\"W\"\n                    k-=1\n                if k==0:\n                    break\n            else:\n                for j in range(b[i][1],b[i][0]-1,-1):\n                    if k==0:\n                        break\n                    a[j]=\"W\"\n                    k-=1\n                if k==0:\n                    break\n        ans=int(a[0]==\"W\")\n        for i in range(1,n):\n            if a[i-1]==\"W\" and a[i]==\"W\":\n                ans+=2\n            elif a[i]==\"W\":\n                ans+=1\n        print(ans)\n\n\n# region fastio\nBUFSIZE = 8192\n\nclass FastIO(IOBase):\n    newlines = 0\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\nif __name__ == \"__main__\":\n    main()"
        },
        {
            "language": 4,
            "solution": "import java.io.PrintWriter;\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.*;\npublic class a{ \n    public static void main(String args[]) throws java.lang.Exception{ \n    \tFastScanner s=new FastScanner();\n\t\tPrintWriter out=new PrintWriter(System.out);\n\t\tint t=s.nextInt();\n\t\tfor(int tt=0;tt<t;tt++) {\n\t\t\tint n=s.nextInt(),k=s.nextInt();\n\t\t\tString a=s.next();\n\t\t\tArrayList<Integer> c=new ArrayList<Integer>();\n\t\t\tint count=0,wins=0,winst=0;\n\t\t\tif(a.charAt(0)=='W'){\n\t\t\t\twinst=1;\n\t\t\t}\n\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\tif(a.charAt(i)=='W'){\n\t\t\t\t\twins++;\n\t\t\t\t\tif(count!=0 ){\n\t\t\t\t\t\twinst++;\n\t\t\t\t\t}\n\t\t\t\t\tif(count!=0 && wins!=1){\n\t\t\t\t\t\tc.add(count);\n\t\t\t\t\t}\n\t\t\t\t\tcount=0;\n\t\t\t\t}else{\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlong ans=0;\n\t\t\tif((k+wins)>=n){\n\t\t\t\tans=2*n-1;\n\t\t\t}else{\n\t\t\t\tif(wins==0 && k!=0){\n\t\t\t\t\tans=2*Math.min(k,n)-1;\n\t\t\t\t}else{\n\t\t\t\tCollections.sort(c);\n\t\t\t\tint i=0;\n\t\t\t\tans=2*(wins+k)-winst;\n\t\t\t\twhile(i<c.size() && k>=c.get(i)){\n\t\t\t\t\tk-=c.get(i);\n\t\t\t\t\tans++;\n\t\t\t\t\ti++;\n\t\t\t\t}}\n\t\t\t}\n\t\t\tout.println(ans);\n\t\t}\n\t\tout.close();\n    }\n\tstatic boolean isPrime(int n){\n        if (n <= 1)\n            return false;\n        else if (n == 2)\n            return true;\n        else if (n % 2 == 0)\n            return false;\n        for (int i = 3; i <= Math.sqrt(n); i += 2){\n            if (n % i == 0)\n                return false;\n        }\n        return true;\n    }\n    static void sort(long [] a) {\n\t\tArrayList<Long> l=new ArrayList<>();\n\t\tfor (long i:a) l.add(i);\n\t\tCollections.sort(l);\n\t\tfor (int i=0; i<a.length; i++) a[i]=l.get(i);\n\t}\n    static void sort(int [] a) {\n\t\tArrayList<Integer> l=new ArrayList<>();\n\t\tfor (int i:a) l.add(i);\n\t\tCollections.sort(l);\n\t\tfor (int i=0; i<a.length; i++) a[i]=l.get(i);\n\t}\n    static int gcd(int a, int b){\n      if (b == 0)\n        return a;\n      return gcd(b, a % b);\n    }\n    static void sortcol(int a[][],int c) {\n\t\tArrays.sort(a, (x, y) -> {\n\t\t\tif(x[c]>y[c]) {\n\t\t\t\treturn 1;\n\t\t\t}else {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t});\n\t}\n    public static void printb(boolean ans) {\n    \tif(ans) {\n    \t\tSystem.out.println(\"Yes\");\n    \t}else {\n    \t\tSystem.out.println(\"No\");\n    \t}\n    }\n    static class FastScanner {\n\t\tBufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n\t\tStringTokenizer st=new StringTokenizer(\"\");\n\t\tString next() {\n\t\t\twhile (!st.hasMoreTokens())\n\t\t\t\ttry {\n\t\t\t\t\tst=new StringTokenizer(br.readLine());\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\t\tdouble nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\t\tint[] readArray(int n) {\n\t\t\tint[] a=new int[n];\n\t\t\tfor (int i=0; i<n; i++) a[i]=nextInt();\n\t\t\treturn a;\n\t\t}\n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\t}\n    static class Pair implements Comparable<Pair>{\n    \tint a , b; \n    \tPair(int x , int y){\n    \t\ta=x;\n    \t\tb=y;\n    \t}\n    \tpublic int compareTo(Pair o) {\n    \t\treturn a != o.a ? a - o.a : b - o.b;\n    \t}\n    }\n}"
        },
        {
            "language": 3,
            "solution": "# Legends Always Come Up with Solution\n# Author: Manvir Singh\n\nimport os\nfrom io import BytesIO, IOBase\nimport sys\nfrom collections import defaultdict,deque,Counter\nfrom bisect import *\nfrom math import sqrt,pi,ceil,log,inf\nfrom itertools import permutations\nfrom copy import deepcopy\n\nfrom sys import setrecursionlimit\n\n\ndef main():\n    for _ in range(int(input())):\n        n,k=map(int,input().split())\n        a=list(input().rstrip())\n        b=[]\n        i=0\n        while i<n:\n            if a[i]==\"L\":\n                j=i+1\n                while j<n and a[j]==\"L\":\n                    j+=1\n                b.append([i,j-1])\n                i=j\n            i+=1\n        b.sort(key=lambda x:(x[1]-x[0])+(0 if (x[0]!=0 and x[1]!=n-1) else 10**5))\n        for i in range(len(b)):\n            for j in range(b[i][0] if b[i][0]!=0 else b[i][1],b[i][1]+1 if b[i][0]!=0 else b[i][0]-1,1 if b[i][0]!=0 else -1):\n                if k==0:\n                    break\n                a[j]=\"W\"\n                k-=1\n            if k==0:\n                break\n        ans=int(a[0]==\"W\")\n        for i in range(1,n):\n            if a[i-1]==\"W\" and a[i]==\"W\":\n                ans+=2\n            elif a[i]==\"W\":\n                ans+=1\n        print(ans)\n\n\n# region fastio\nBUFSIZE = 8192\n\nclass FastIO(IOBase):\n    newlines = 0\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\nif __name__ == \"__main__\":\n    main()"
        },
        {
            "language": 4,
            "solution": "//189301019.akshay\nimport java.io.BufferedReader; \nimport java.io.IOException; \nimport java.io.InputStreamReader; \nimport java.util.Scanner; \nimport java.util.Random;\nimport java.util.Arrays;\nimport java.util.StringTokenizer; \nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.Random;\npublic class A \n{ \n\tstatic  Random rand = new Random(); \n\tstatic class Node{\n\t\tint l,r;\n\t\tint cnt=0;\n\t\tdouble cntperele=0;\n\t\tNode(){l=r=0;}\n\t\tNode(int ll,int rr,int ct){\n\t\t\tthis();\n\t\t\tl=ll;\n\t\t\tr=rr;\n\t\t\tcnt=ct;\n\t\t\tcntperele = (double)cnt/(double)(r-l+1);\n\t\t}\n\t}\n\t\n\tstatic class customSort implements Comparator<Node>{\n\t\tpublic int compare(Node a,Node b) {\n\t\t\tif(a.cntperele < b.cntperele)\n\t\t\t\treturn 1;\n\t\t\tif(a.cntperele > b.cntperele)\n\t\t\treturn -1;\n\t\t\treturn 0;\n\t\t}\n\t}\n\t\n\tstatic char[] getString(int n) {\n\t\tchar str[]= {'W','L'};\n\t\tchar r[]=new char[n];\n\t\tfor(int i=0;i<n;i++) {\n\t\t\tr[i] = str[rand.nextInt(2)];\n\t\t}\n\t\treturn r;\n\t}\n\tstatic int getN() {\n\t\t int rand_int1 = rand.nextInt(100000)+1; \n\t       return rand_int1;\n\t}\n\tstatic int getK(int n) {\n\t\t int rand_int1 = rand.nextInt(n); \n\t       return rand_int1;\n\t}\n\n    public static void main(String[] args) \n\t{ \n\t\tFastReader sc=new FastReader(); \n\t\tStringBuffer ans=new StringBuffer();\n\t\tint test=sc.nextInt();\n\t\twhile(test-->0)\n\t\t{\n\t\t\tint n=sc.nextInt();\n\t\t\tint k=sc.nextInt();\n//\t\t\tint n = getN();\n//\t\t\tint k=getK(n);\n//\t\t\tchar arr[]=getString(n);\n\t\t\tint lcnt=0;\n\t\t\tint wcnt=0;\n\t\t\tint res=0;\n\t\t\tchar arr[]=sc.nextLine().toCharArray();\n\t\t\tfor(int i=0;i<n;i++) {\n\t\t\t\tif(arr[i] == 'L') ++lcnt;\n\t\t\t\telse ++wcnt;\n\t\t\t}\n\t\t\n\t\t\tif(wcnt == 0) {\n\t\t\t\tif(k>=2) {\n\t\t\t\t\tres+=3;\n\t\t\t\t\tk-=2;\n\t\t\t\t\tfor(int i=2;i<n&&k>0;i++,--k) {\n\t\t\t\t\t\tres+=2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tres+=k;\n\t\t\t\t}\n\t\t\t\tans.append(res+\"\\n\");\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\tif(lcnt == 0) {\n\t\t\t\tres+=1;\n\t\t\t\tres+=(2*(n-1));\n\t\t\t\tans.append(res+\"\\n\");\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t//General Case:\n\t\t\t\n\t\t\t\n\t\t\tArrayList<Node> li =new ArrayList<>();\n\t\t\tint l =-1;\n\t\t\tint r =-1;\n\t\t\tfor(int i=0;i<n;i++) {\n\n\t\t\t\twhile(i<n && arr[i] == 'W') {\n\t\t\t\t\t++i;\n\t\t\t\t}\n\t\t\t\tl =i;\n\t\t\t\t\n\t\t\t\tif(l == n) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\twhile(i<n && arr[i] == 'L') {++i;}\n\t\t\t\tr=i-1;\n\t\t\t\t\n\t\t\t\tint temp=0;\n\t\t\t\tif(l>0 && arr[l-1] == 'W' && r<n-1 && arr[r+1] == 'W') {\t\t\t\n\t\t\t\t\ttemp= 2*(r-l+1);\n\t\t\t\t\t++temp;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttemp= 2*(r-l+1);\n\t\t\t\t}\n\t\t\t\tli.add(new Node(l,r,temp));\t\t\n\t\t\t\t\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tCollections.sort(li,new customSort());\n\t\t\t}\n\t\t\tcatch(Exception e) {\n\t\t\t\tSystem.out.println(arr);\n\t\t\t}\n\t\t\n\t\t\t\n\t\t\t\n\t\t\tres=0;\n\t\t\tres+=(arr[0] == 'W')?1:0;\n\t\t\tfor(int i=1;i<n;i++) {\n\t\t\t\tif(arr[i] == 'W') {\n\t\t\t\t\tif(arr[i-1] == 'W')\n\t\t\t\t\t\tres+=2;\n\t\t\t\t\telse\n\t\t\t\t\t\tres+=1;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t\n//\t\t\tfor(Node x:li) {\n//\t\t\t\tSystem.out.println(x.l+\" \"+x.r+\" \"+x.cntperele);\n//\t\t\t}\n\n//\t\t\tSystem.out.println(li.size());\n\t\t\tint lp=0;\n\t\t\twhile(k>0 && lp<li.size()) {\t\n\t\t\t\tNode x=li.get(lp);\n\t\t\t\tif(k>=(x.r-x.l+1)) {\n\t\t\t\t\tres+=x.cnt;\n\t\t\t\t\tk-=(x.r-x.l+1);\n\t\t\t\t}\n\t\t\t\telse {\t\n\t\t\t\t\tres+=((k)*2);\n\t\t\t\t\tk=0;\n\t\t\t\t}\t\n\t\t\t\t++lp;\n\t\t\t}\n\t\t\tans.append(res+\"\\n\");\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t}\n\t\t\n\t    System.out.print(ans);\n\t} \n    \n    static final Random random=new Random();\n    \n\tstatic void ruffleSort(int[] a) {\n\t\tint n=a.length;//shuffle, then sort \n\t\tfor (int i=0; i<n; i++) {\n\t\t\tint oi=random.nextInt(n), temp=a[oi];\n\t\t\ta[oi]=a[i]; a[i]=temp;\n\t\t}\n\t\tArrays.sort(a);\n\t}\n\t\n\tstatic void ruffleSort(long[] a) {\n\t\tint n=a.length;//shuffle, then sort \n\t\tfor (int i=0; i<n; i++) {\n\t\t\tint oi=random.nextInt(n);\n\t\t\tlong temp=a[oi];\n\t\t\ta[oi]=a[i]; a[i]=temp;\n\t\t}\n\t\tArrays.sort(a);\n\t}\n\t\n\tstatic class FastReader \n\t{ \n\t\tBufferedReader br; \n\t\tStringTokenizer st; \n\n\t\tpublic FastReader() \n\t\t{ \n\t\t\tbr = new BufferedReader(new\n\t\t\t\t\tInputStreamReader(System.in)); \n\t\t} \n\n\t\tString next() \n\t\t{ \n\t\t\twhile (st == null || !st.hasMoreElements()) \n\t\t\t{ \n\t\t\t\ttry\n\t\t\t\t{ \n\t\t\t\t\tst = new StringTokenizer(br.readLine()); \n\t\t\t\t} \n\t\t\t\tcatch (IOException e) \n\t\t\t\t{ \n\t\t\t\t\te.printStackTrace(); \n\t\t\t\t} \n\t\t\t} \n\t\t\treturn st.nextToken(); \n\t\t} \n\n\t\tint nextInt() \n\t\t{ \n\t\t\treturn Integer.parseInt(next()); \n\t\t} \n\n\t\tlong nextLong() \n\t\t{ \n\t\t\treturn Long.parseLong(next()); \n\t\t} \n\n\t\tdouble nextDouble() \n\t\t{ \n\t\t\treturn Double.parseDouble(next()); \n\t\t} \n\n\t\tString nextLine() \n\t\t{ \n\t\t\tString str = \"\"; \n\t\t\ttry\n\t\t\t{ \n\t\t\t\tstr = br.readLine(); \n\t\t\t} \n\t\t\tcatch (IOException e) \n\t\t\t{ \n\t\t\t\te.printStackTrace(); \n\t\t\t} \n\t\t\treturn str; \n\t\t} \n\t} \n\n\n} \n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst double eps = 1e-9;\nconst double PI = acos(-1.0);\nconst long long int mod = 1e9 + 7;\nconst int MAXN = 1e6 + 5;\nvoid cp() {\n  int n, k;\n  string s;\n  cin >> n >> k >> s;\n  vector<pair<int, int> > group;\n  int l = 0, r = 0;\n  while (l < n) {\n    while (l < n && s[l] == 'L') l++;\n    if (l >= n) break;\n    r = l;\n    while (r + 1 < n && s[r + 1] == 'W') r++;\n    group.push_back({l, r});\n    l = r + 1;\n  }\n  vector<pair<int, int> > diff;\n  for (int i = 0; i < ((int)group.size()) - 1; i++) {\n    int d = group[i + 1].first - group[i].second - 1;\n    diff.push_back({d, i});\n  }\n  sort(diff.rbegin(), diff.rend());\n  while (k > 0 && !diff.empty()) {\n    pair<int, int> last = diff.back();\n    diff.pop_back();\n    int can = min(last.first, k);\n    k -= can;\n    for (int i = group[last.second].second + 1;\n         i < group[last.second + 1].first && can > 0; i++, can--)\n      s[i] = 'W';\n  }\n  if (k > 0) {\n    int pos = -2;\n    for (int i = 0; i < n; i++)\n      if (s[i] == 'W') pos = i;\n    pos++;\n    if (pos >= 0 && pos < n)\n      for (int i = pos; i < n && k > 0; i++)\n        if (s[i] == 'L') s[i] = 'W', k--;\n  }\n  if (k > 0 && s[0] == 'L') {\n    int pos = n;\n    for (int i = 0; i < n && pos == n; i++)\n      if (s[i] == 'W') pos = i;\n    pos--;\n    if (pos >= 0) {\n      for (int i = pos; i >= 0 && k > 0; i--)\n        if (s[i] == 'L') s[i] = 'W', k--;\n    }\n  }\n  int score = 0;\n  for (int i = 0; i < n; i++) {\n    score += (s[i] == 'W');\n    if (i - 1 >= 0 && s[i] == 'W' && s[i - 1] == 'W') score++;\n  }\n  cout << score << '\\n';\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  ;\n  int t;\n  t = 1;\n  cin >> t;\n  while (t--) {\n    cp();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nmt19937 rnd(chrono::steady_clock::now().time_since_epoch().count());\nmt19937 rnf(2106);\nconst int N = 100005;\nint n, k;\nchar a[N];\nvoid solv() {\n  scanf(\"%d%d\", &n, &k);\n  scanf(\"%s\", a);\n  vector<int> v;\n  bool z = false;\n  int q = 0;\n  for (int i = 0; i < n; ++i) {\n    if (a[i] == 'L')\n      ++q;\n    else {\n      if (z) v.push_back(q);\n      q = 0;\n      z = true;\n    }\n  }\n  q = 0;\n  for (int i = 0; i < n; ++i) {\n    if (a[i] == 'W') ++q;\n  }\n  if (q + k >= n) {\n    printf(\"%d\\n\", n * 2 - 1);\n    return;\n  }\n  if (q == 0) {\n    printf(\"%d\\n\", max(0, k * 2 - 1));\n    return;\n  }\n  int ans = q * 2;\n  for (int i = 0; i < n; ++i) {\n    if (a[i] == 'W' && (i == 0 || a[i - 1] == 'L')) --ans;\n  }\n  sort((v).begin(), (v).end());\n  for (int i = 0; i < ((int)(v).size()); ++i) {\n    if (v[i] == 0) continue;\n    if (k >= v[i]) {\n      k -= v[i];\n      ans += v[i] * 2;\n      ++ans;\n    } else\n      break;\n  }\n  ans += k * 2;\n  printf(\"%d\\n\", ans);\n}\nint main() {\n  int tt;\n  scanf(\"%d\", &tt);\n  while (tt--) solv();\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid sol() {\n  long long n, k;\n  cin >> n >> k;\n  string s;\n  cin >> s;\n  long long w = 0;\n  for (auto el : s) {\n    if (el == 'W') {\n      w++;\n    }\n  }\n  vector<long long> rofl;\n  for (long long i = 0; i < n; i++) {\n    if (s[i] == 'W') {\n      rofl.push_back(i);\n    }\n  }\n  vector<pair<long long, long long>> kek;\n  for (long long i = 1; i < (long long)rofl.size(); i++) {\n    long long left = rofl[i - 1], right = rofl[i];\n    kek.emplace_back(right - left + 1, left);\n  }\n  sort(kek.begin(), kek.end());\n  for (auto pp : kek) {\n    long long len = pp.first, l = pp.second;\n    for (long long i = l; i < l + len; i++) {\n      if (k > 0 && s[i] == 'L') {\n        s[i] = 'W';\n        k--;\n      }\n    }\n  }\n  if (rofl.empty()) {\n    rofl.push_back(0);\n  }\n  for (long long i = rofl.back(); i < n; i++) {\n    if (k > 0 && s[i] == 'L') {\n      k--;\n      s[i] = 'W';\n    }\n  }\n  for (long long i = rofl.back(); i >= 0; i--) {\n    if (k > 0 && s[i] == 'L') {\n      k--;\n      s[i] = 'W';\n    }\n  }\n  long long ans = 0;\n  for (long long i = 0; i < n; i++) {\n    if (s[i] == 'W') {\n      if (i == 0 || s[i - 1] == 'L') {\n        ans++;\n      } else {\n        ans += 2;\n      }\n    }\n  }\n  cout << ans << '\\n';\n}\nsigned main() {\n  ios::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  long long t = 1;\n  cin >> t;\n  while (t--) {\n    sol();\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "\n\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.lang.reflect.Array;\nimport java.util.*;\n\npublic class TestClass {\n\n\n    static final class InputReader {\n        private final InputStream stream;\n        private final byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        private int read() throws IOException {\n            if (curChar >= numChars) {\n                curChar = 0;\n                numChars = stream.read(buf);\n                if (numChars <= 0) {\n                    return -1;\n                }\n            }\n            return buf[curChar++];\n        }\n\n        public final int readInt() throws IOException {\n            return (int) readLong();\n        }\n\n        public final long readLong() throws IOException {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n                if (c == -1) throw new IOException();\n            }\n            boolean negative = false;\n            if (c == '-') {\n                negative = true;\n                c = read();\n            }\n            long res = 0;\n            do {\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return negative ? -res : res;\n        }\n\n        public final int[] readIntArray(int size) throws IOException {\n            int[] array = new int[size];\n            for (int i = 0; i < size; i++) {\n                array[i] = readInt();\n            }\n            return array;\n        }\n\n        public final long[] readLongArray(int size) throws IOException {\n            long[] array = new long[size];\n            for (int i = 0; i < size; i++) {\n                array[i] = readLong();\n            }\n            return array;\n        }\n\n        public final String readString() throws IOException {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            StringBuilder res = new StringBuilder();\n            do {\n                res.append((char) c);\n                c = read();\n            } while (!isSpaceChar(c));\n            return res.toString();\n        }\n\n        private boolean isSpaceChar(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n    }\n\n    static long mulmod(long a, long b,\n                       long mod) {\n        long res = 0; // Initialize result\n        a = a % mod;\n        while (b > 0) {\n            // If b is odd, add 'a' to result\n            if (b % 2 == 1) {\n                res = (res + a) % mod;\n            }\n\n            // Multiply 'a' with 2\n            a = (a * 2) % mod;\n\n            // Divide b by 2\n            b /= 2;\n        }\n\n        // Return result\n        return res % mod;\n    }\n\n    static long pow(long a, long b, long MOD) {\n        long x = 1, y = a;\n        while (b > 0) {\n            if (b % 2 == 1) {\n                x = (x * y);\n                if (x > MOD) x %= MOD;\n            }\n            y = (y * y);\n            if (y > MOD) y %= MOD;\n            b /= 2;\n        }\n        return x;\n    }\n\n    static long[] f = new long[100001];\n\n    static long InverseEuler(long n, long MOD) {\n        return pow(n, MOD - 2, MOD);\n    }\n\n    static long C(int n, int r, long MOD) {\n\n        return (f[n] * ((InverseEuler(f[r], MOD) * InverseEuler(f[n - r], MOD)) % MOD)) % MOD;\n    }\n\n\n    static int[] h = {0, 0, -1, 1};\n    static int[] v = {1, -1, 0, 0};\n\n\n    public static class Pair {\n        public long a, b;\n        public long pos, bb;\n\n        public Pair(long a, long b, long pos, long bb) {\n            this.a = a;\n            this.b = b;\n            this.pos = pos;\n            this.bb = bb;\n        }\n    }\n\n    static class Pair2 {\n        public long cost;\n        int node;\n\n        public Pair2(long cos, int node) {\n            this.cost = cos;\n            this.node = node;\n        }\n    }\n\n    static long compute_hash(String s) {\n        int p = 31;\n        int m = 1000000007;\n        long hash_value = 0;\n        long p_pow = 1;\n        for (int i = 0; i < s.length(); ++i) {\n            char c = s.charAt(i);\n            hash_value = (hash_value + (c - 'a' + 1) * p_pow) % m;\n            p_pow = (p_pow * p) % m;\n        }\n        return hash_value;\n    }\n\n    public static class SegmentTree {\n        long[][] tree;\n        int n;\n\n        public SegmentTree(int[] nodes) {\n            tree = new long[nodes.length * 4][2];\n            n = nodes.length;\n            build(0, n - 1, 0, nodes);\n\n        }\n\n        private void build(int l, int r, int pos, int[] nodes) {\n            if (l == r) {\n                tree[pos][0] = nodes[l];\n                tree[pos][1] = l;\n                return;\n            }\n            int mid = (l + r) / 2;\n            build(l, mid, 2 * pos + 1, nodes);\n            build(mid + 1, r, 2 * pos + 2, nodes);\n            if (tree[2 * pos + 1][0] > tree[2 * pos + 2][0]) {\n                tree[pos][1] = tree[2 * pos + 1][1];\n            } else {\n                tree[pos][1] = tree[2 * pos + 2][1];\n            }\n            tree[pos][0] = Math.max(tree[2 * pos + 1][0], tree[2 * pos + 2][0]);\n        }\n\n//        public void update(int pos, int val) {\n//            updateUtil(0, n - 1, 0, pos, val);\n//        }\n\n        public long[] get(int l, int r) {\n            return getUtil(0, n - 1, 0, l, r);\n        }\n\n        private long[] getUtil(int l, int r, int pos, int ql, int qr) {\n            if (ql > r || qr < l) {\n                return new long[]{-1, -1};\n            }\n            if (l >= ql && r <= qr) {\n                return tree[pos];\n            }\n\n            int mid = (l + r) / 2;\n            long[] left = getUtil(l, mid, 2 * pos + 1, ql, qr);\n            long[] right = getUtil(mid + 1, r, 2 * pos + 2, ql, qr);\n            long choice = right[1];\n            if (left[0] > right[0]) choice = left[1];\n            return new long[]{Math.max(left[0], right[0]), choice};\n\n        }\n\n//        private void updateUtil(int l, int r, int pos, int i, int val) {\n//            if (i < l || i > r) {\n//                return;\n//            }\n//            if (l == r) {\n//                tree[pos] = val;\n//                return;\n//            }\n//            int mid = (l + r) / 2;\n//            updateUtil(l, mid, 2 * pos + 1, i, val);\n//            updateUtil(mid + 1, r, 2 * pos + 2, i, val);\n//            tree[pos] = tree[2 * pos + 1] + tree[2 * pos + 2];\n//        }\n    }\n\n    static int counter = 0;\n    static int[] rIn;\n    static int[] rOut;\n    static int[] lIn;\n    static int[] lOut;\n    private static int[] flatten;\n    private static int[] lFlatten;\n    static long answer = 0;\n\n    static int VISITED = 1;\n    static int VISITING = 2;\n\n    public static void main(String[] args) throws Exception {\n        //https://i...content-available-to-author-only...e.com/ebRGa6\n        InputReader in = new InputReader(System.in);\n\n\n        int t = in.readInt();\n        while (t-- > 0) {\n\n            int n = in.readInt();\n            int k = in.readInt();\n\n            String g = in.readString();\n            int forw = 0;\n            int ans = 0;\n            int i = 0;\n            for (; i < n; ++i) {\n\n                if (g.charAt(i) == 'W') {\n                    if (i > 0 &&  g.charAt(i-1) == 'W') {\n                        ans+=2;\n                    } else {\n                        ans+=1;\n                    }\n                }\n            }\n            i=0;\n            for (; i < n; ++i) {\n\n                if (g.charAt(i) == 'W') {\n                    break;\n                }\n            }\n            if (i == n) {\n                if (k != 0)\n                System.out.println(Math.min(k, n)*2 - 1);\n                else\n\n                    System.out.println(0);\n                continue;\n            }\n            int j = n-1;\n            for (; j >= 0; --j) {\n\n                if (g.charAt(j) == 'W') {\n                    break;\n                }\n            }\n\n            // LLLWLLL\n            // 0123456\n            // 3\n\n            int front = i + n - j - 1;\n            PriorityQueue<Integer> q = new PriorityQueue<>();\n            for (; i <= j;) {\n                if (g.charAt(i) == 'L') {\n                    int len = 0;\n                    while (i < n && g.charAt(i) == 'L') {\n                        len++;\n                        i++;\n                    }\n                    q.add(len);\n                } else i++;\n            }\n\n            while (k > 0 && q.size() != 0) {\n                Integer ls = q.remove();\n                if (ls > k) {\n                    ans += k * 2;\n                    k = 0;\n                } else {\n                    ans += ls * 2;\n                    ans += 1;\n                    k -= ls;\n                }\n            }\n\n            if (k > 0) {\n                ans += Math.min(k, front) * 2;\n            }\n\n\n            System.out.println(ans);\n\n\n        }\n\n    }\n\n    private static int solver(int[] nums, int pos, int[] dp) {\n        if (pos >= nums.length) return 0;\n        if (dp[pos] != Integer.MAX_VALUE) return dp[pos];\n        int min = solver(nums, pos + 2, dp) + nums[pos];\n        min = Math.min(solver(nums, pos + 3, dp) + nums[pos], min);\n        if (pos + 1 < nums.length) min = Math.min(min, nums[pos] + nums[pos + 1] + solver(nums, pos + 3, dp));\n        if (pos + 1 < nums.length) min = Math.min(min, nums[pos] + nums[pos + 1] + solver(nums, pos + 4, dp));\n\n//        System.out.println(pos + \" \" + min);\n        return dp[pos] = min;\n    }\n\n\n    static int countFreq(String pattern, String text) {\n        int m = pattern.length();\n        int n = text.length();\n        int res = 0;\n\n        for (int i = 0; i <= n - m; i++) {\n            int j;\n            for (j = 0; j < m; j++) {\n                if (text.charAt(i + j) != pattern.charAt(j)) {\n                    break;\n                }\n            }\n            if (j == m) {\n                res++;\n                j = 0;\n            }\n        }\n        return res;\n    }\n\n    private static int solve(int n, int[] dp, int cn) {\n        if (cn > n) return 0;\n        if (cn == n) return 1;\n        if (dp[cn] != -1) return dp[cn];\n        int ans = 0;\n        for (int i = 2; i <= 9; ++i) {\n            ans += solve(n, dp, cn * i);\n        }\n        return dp[cn] = ans;\n    }\n\n\n    private static void dfsR(List<List<Integer>> g, int node, int[] v) {\n        rIn[node] = counter;\n        flatten[counter++] = v[node];\n\n        for (int i = 0; i < g.get(node).size(); ++i) {\n            dfsR(g, g.get(node).get(i), v);\n        }\n\n        rOut[node] = counter;\n        flatten[counter++] = v[node] * -1;\n    }\n\n    private static void dfsL(List<List<Integer>> g, int node, int[] v) {\n        lIn[node] = counter;\n        lFlatten[counter++] = v[node];\n\n        for (int i = 0; i < g.get(node).size(); ++i) {\n            dfsL(g, g.get(node).get(i), v);\n        }\n\n        lOut[node] = counter;\n        lFlatten[counter++] = v[node] * -1;\n\n        TreeMap<String, Integer> map = new TreeMap<>();\n    }\n\n\n    private static void preprocess(int pos, int[][] pre, List<List<Integer>> tree, int[] traverse, int depth, int last, int[] tin, int[] tout) {\n        tin[pos] = counter++;\n        traverse[depth] = pos;\n\n        for (int i = 0; depth - (1 << i) >= 0; ++i) {\n            pre[pos][i] = traverse[depth - (1 << i)];\n        }\n\n        for (int i = 0; i < tree.get(pos).size(); ++i) {\n            if (tree.get(pos).get(i) != last)\n                preprocess(tree.get(pos).get(i), pre, tree, traverse, depth + 1, pos, tin, tout);\n        }\n        tout[pos] = counter++;\n    }\n\n    static int gcd(int a, int b) {\n\n        while (b != 0) {\n            int t = a;\n            a = b;\n            b = t % b;\n        }\n        return a;\n    }\n\n\n    static boolean submit = true;\n\n    static void debug(String s) {\n        if (!submit)\n            System.out.println(s);\n    }\n\n    static void debug(int s) {\n\n        Stack<Integer> st = new Stack<>();\n        if (!submit)\n            System.out.println(s);\n\n\n        /*\n\n        4 2 3 _ 2 4 3 _\n         */\n    }\n\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.*;\nimport java.lang.*;\nimport java.io.*;\n\npublic class first {\n\n\tpublic static void main(String[] args) throws Exception {\n\n//\t\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n//\t\t\tint t = Integer.parseInt(br.readLine());\n//\t\t\tStringBuilder sb = new StringBuilder();\n//\t\t\twhile (t-- > 0) {\n//\t\t\t\tint n = Integer.parseInt(br.readLine());\n//\t\t\t\tString[] str = (br.readLine()).trim().split(\" \");\n//\t\t\t\tint[] arr = new int[n];\n//\t\t\t\tfor (int i = 0; i < n; i++) {\n//\t\t\t\t\tarr[i] = Integer.parseInt(str[i]);\n//\t\t\t\t}\n//\t\t\t}\n//\t\t\treturn;\n\n//\t\tfirst();\n\t\tsec();\n//\t\t\tthird();\n//\t\t\tfour();\n//\t\t\tfif();\n//\t\t\tsix();\n\t}\n\n\tprivate static void first() throws Exception {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tint t = Integer.parseInt(br.readLine());\n\n\t\twhile (t-- > 0) {\n\t\t\tStringBuilder sb = new StringBuilder();\n\t\t\tint n = Integer.parseInt(br.readLine());\n\t\t\tString[] str = (br.readLine()).trim().split(\" \");\n\t\t\tint[] arr = new int[n];\n\t\t\tlong sum = 0;\n\t\t\tlong count = 0;\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tarr[i] = Integer.parseInt(str[i]);\n\t\t\t\tsum += arr[i];\n\t\t\t\tif (sum == 0) {\n\t\t\t\t\tcount += 1;\n\t\t\t\t}\n\t\t\t\tsb.append(arr[i] + \" \");\n\t\t\t}\n\t\t\tboolean flag = false;\n\t\t\tif (sum == 0) {\n\t\t\t\tSystem.out.println(\"NO\");\n\t\t\t\tcontinue;\n\t\t\t} else {\n\n\t\t\t\tif (count == 0) {\n\t\t\t\t\tSystem.out.println(\"YES\");\n\t\t\t\t\tSystem.out.println(sb);\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\tfor (int j = 0; j < n; j++) {\n\t\t\t\t\t\tsum = 0;\n\t\t\t\t\t\tcount = 0;\n\t\t\t\t\t\tsb = new StringBuilder();\n\t\t\t\t\t\tint temp = arr[0];\n\t\t\t\t\t\tfor (int i = 0; i < n - 1; i++) {\n\t\t\t\t\t\t\tarr[i] = arr[i + 1];\n\t\t\t\t\t\t\tsum += arr[i];\n\t\t\t\t\t\t\tif (sum == 0) {\n\t\t\t\t\t\t\t\tcount += 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tsb.append(arr[i] + \" \");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tarr[n - 1] = temp;\n\t\t\t\t\t\tsb.append(arr[n - 1] + \" \");\n\n\t\t\t\t\t\tif (count == 0) {\n\t\t\t\t\t\t\tSystem.out.println(\"YES\");\n\t\t\t\t\t\t\tSystem.out.println(sb);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (flag) {\n\t\t\t\t\tSystem.out.println(\"NO\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n\n\tstatic class pair {\n\t\tint len;\n\t\tint idx;\n\n\t\tpair(int a, int b) {\n\t\t\tlen = a;\n\t\t\tidx = b;\n\t\t}\n\t}\n\n\tprivate static void sec() throws Exception {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tint t = Integer.parseInt(br.readLine());\n\t\twhile (t-- > 0) {\n\t\t\tString[] str = (br.readLine()).trim().split(\" \");\n\t\t\tint n = Integer.parseInt(str[0]);\n\t\t\tint k = Integer.parseInt(str[1]);\n\t\t\tString s = br.readLine();\n\t\t\tArrayList<pair> interval = new ArrayList<>();\n\t\t\tint count = 0;\n\t\t\tint flag = -1;\n\t\t\tlong csum = 0;\n\t\t\tint lidx = 0;\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tif (s.charAt(i) == 'W') {\n\t\t\t\t\tlidx = i;\n\t\t\t\t\tif (flag == -1) {\n\t\t\t\t\t\tflag = count;\n\t\t\t\t\t\tcount = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (count > 0) {\n\t\t\t\t\t\t\tinterval.add(new pair(count, i - count));\n\t\t\t\t\t\t\tcount = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\tcount += 1;\n\t\t\t\t}\n\t\t\t}\n//\t\t\tinterval.add(new pair(count, n - count));\n\t\t\tCollections.sort(interval, (a, b) -> {\n\t\t\t\tif (a.len == b.len) {\n\t\t\t\t\treturn a.idx - b.idx;\n\t\t\t\t}\n\t\t\t\treturn a.len - b.len;\n\t\t\t});\n\t\t\tStringBuilder ab = new StringBuilder(s);\n\t\t\tfor (pair i : interval) {\n\t\t\t\tint idx = i.idx;\n\t\t\t\tint len = i.len;\n\t\t\t\tif (k <= 0)\n\t\t\t\t\tbreak;\n\t\t\t\tif (k >= len) {\n\t\t\t\t\tfor (int j = idx; j < idx + len; j++) {\n\t\t\t\t\t\tab.setCharAt(j, 'W');\n\t\t\t\t\t}\n\t\t\t\t\tk -= len;\n\t\t\t\t} else {\n\t\t\t\t\tfor (int j = idx; j < idx + k; j++) {\n\t\t\t\t\t\tab.setCharAt(j, 'W');\n\t\t\t\t\t}\n\t\t\t\t\tk -= len;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (k > 0) {\n\t\t\t\tint idx = s.indexOf('W');\n\t\t\t\tif (idx == -1) {\n\t\t\t\t\tfor (int i = 0; i < s.length(); i++) {\n\t\t\t\t\t\tab.setCharAt(i, 'W');\n\t\t\t\t\t\tk -= 1;\n\t\t\t\t\t\tif (k == 0)\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\twhile (k > 0) {\n\t\t\t\t\t\tif (idx == 0) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tab.setCharAt(idx - 1, 'W');\n\t\t\t\t\t\tidx -= 1;\n\t\t\t\t\t\tk -= 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (k > 0) {\n\t\t\t\tint idx = lidx+1;\n\t\t\t\twhile (idx < n) {\n\t\t\t\t\t\tab.setCharAt(idx, 'W');\n\t\t\t\t\t\tk -= 1;\n\t\t\t\t\t\tif (k == 0)\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tidx+=1;\n\t\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (ab.charAt(0) == 'W') {\n\t\t\t\tcsum += 1;\n\t\t\t}\n\t\t\tfor (int i = 1; i < n; i++) {\n\t\t\t\tif (ab.charAt(i) == 'W') {\n\t\t\t\t\tif (ab.charAt(i) == ab.charAt(i - 1)) {\n\t\t\t\t\t\tcsum += 2;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcsum += 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n//\t\t\tSystem.out.println(ab);\n\t\t\tSystem.out.println(csum);\n\t\t}\n\t\treturn;\n\t}\n\n\tprivate static void third() throws Exception {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tint t = Integer.parseInt(br.readLine());\n\t\tStringBuilder sb = new StringBuilder();\n\n\t\twhile (t-- > 0) {\n\t\t\tint n = Integer.parseInt(br.readLine());\n\t\t\tString[] str = (br.readLine()).trim().split(\" \");\n\t\t\tint[] arr = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tarr[i] = Integer.parseInt(str[i]);\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n\n\tprivate static void four() throws Exception {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tint t = Integer.parseInt(br.readLine());\n\t\tStringBuilder sb = new StringBuilder();\n\n\t\twhile (t-- > 0) {\n\t\t\tint n = Integer.parseInt(br.readLine());\n\t\t\tString[] str = (br.readLine()).trim().split(\" \");\n\t\t\tint[] arr = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tarr[i] = Integer.parseInt(str[i]);\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n\n\tprivate static void fif() throws Exception {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tint t = Integer.parseInt(br.readLine());\n\t\tStringBuilder sb = new StringBuilder();\n\n\t\twhile (t-- > 0) {\n\t\t\tint n = Integer.parseInt(br.readLine());\n\t\t\tString[] str = (br.readLine()).trim().split(\" \");\n\t\t\tint[] arr = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tarr[i] = Integer.parseInt(str[i]);\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n\n\tprivate static void six() throws Exception {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tint t = Integer.parseInt(br.readLine());\n\t\tStringBuilder sb = new StringBuilder();\n\n\t\twhile (t-- > 0) {\n\t\t\tint n = Integer.parseInt(br.readLine());\n\t\t\tString[] str = (br.readLine()).trim().split(\" \");\n\t\t\tint[] arr = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tarr[i] = Integer.parseInt(str[i]);\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long INF = 2147483647;\nconst long long MOD = 1000000007;\nconst long long mod = 998244353;\nconst long double eps = 1e-12;\nlong long n, k;\nchar str[100001];\nlong long res;\nlong long lcnt;\nvector<long long> v;\nsigned main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  long long T;\n  cin >> T;\n  while (T--) {\n    cin >> n >> k;\n    cin >> str;\n    bool flag = 1;\n    for (long long i = 0; i < n; i++) {\n      if (str[i] == 'W') {\n        flag = 0;\n      }\n    }\n    if (flag == 1) {\n      if (k == 0) {\n        cout << 0 << endl;\n      } else {\n        cout << 2 * k - 1 << endl;\n      }\n      continue;\n    }\n    v.clear();\n    res = 0;\n    lcnt = 0;\n    if (str[0] == 'W') {\n      res++;\n    } else {\n      lcnt++;\n    }\n    for (long long i = 1; i < n; i++) {\n      if (str[i] == 'W') {\n        res += (str[i - 1] == 'W') ? 2 : 1;\n      } else {\n        lcnt++;\n      }\n    }\n    long long prev = -INF;\n    for (long long i = 0; i < n; i++) {\n      if (str[i] == 'W') {\n        if (i - prev - 1 > 0 and prev != -INF) {\n          v.push_back(i - prev - 1);\n        }\n        prev = i;\n      }\n    }\n    sort(v.begin(), v.end());\n    for (long long i = 0; i < v.size(); i++) {\n      if (k >= v[i]) {\n        k -= v[i];\n        res += v[i] * 2 + 1;\n        lcnt -= v[i];\n      } else {\n        break;\n      }\n    }\n    res += 2 * min(k, lcnt);\n    cout << res << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin,stdout\nfrom math import gcd,sqrt,factorial,pi,inf\nfrom collections import deque,defaultdict\ninput=stdin.readline\nR=lambda:map(int,input().split())\nI=lambda:int(input())\nS=lambda:input().rstrip('\\n')\nL=lambda:list(R())\nP=lambda x:stdout.write(x)\nlcm=lambda x,y:(x*y)//gcd(x,y)\nhg=lambda x,y:((y+x-1)//x)*x\npw=lambda x:1 if x==1 else 1+pw(x//2)\nchk=lambda x:chk(x//2) if not x%2 else True if x==1 else False\nsm=lambda x:(x**2+x)//2\nN=10**9+7\n\nfor _ in range(I()):\n\tn,k=R()\n\ta=[]\n\tp=0\n\tj=0\n\tans=0\n\tfor i in S():\n\t\tj+=1\n\t\tif i=='W':\n\t\t\tif not p:\n\t\t\t\tp=j\n\t\t\t\tans+=1\n\t\t\telse:\n\t\t\t\tif j-p-1:\n\t\t\t\t\ta+=j-p-1,\n\t\t\t\t\tans+=1\n\t\t\t\telse:ans+=2\n\t\t\t\tp=j\n\tif not p:print(max(0,k*2-1));continue\n\ta.sort(reverse=True)\n\twhile a and k:\n\t\tp=a.pop()\n\t\tif p<=k:\n\t\t\tans+=p*2+1\n\t\t\tk-=p\n\t\telse:\n\t\t\tans+=k*2\n\t\t\tk=0\n\t\t\tbreak\n\tprint(min(n*2-1,ans+k*2))"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor _ in range(t):\n    n, k = map(int, input().split())\n    s = input()\n    if all(i == \"L\" for i in s):\n        print(max(0, 2 * k - 1))\n        continue\n    f = False\n    if s[0] == \"L\":\n        f = True\n    cur = s[0]\n    l = []\n    cnt = 1\n    f2 = True\n    score = 0\n    for i in range(1, n):\n        if cur == s[i]:\n            cnt += 1\n        else:\n            if f2:\n                if f:\n                    l.append((cnt, 2 * cnt))\n                else:\n                    score += cnt * 2 - 1\n                f2 = False\n            else:\n                if cur == \"W\":\n                    score += cnt * 2 - 1\n                else:\n                    l.append((cnt, 2 * cnt + 1))\n            cnt = 1\n            cur = s[i]\n    if s[-1] == \"W\":\n        score += 2 * cnt - 1\n    else:\n        if f2:\n            l.append((cnt, 2 * cnt - 1))\n        else:\n            l.append((cnt, cnt * 2))\n    l.sort(key=lambda x:x[1] / x[0], reverse=True)\n    cnt = s.count(\"L\")\n    for i, j in l:\n        if k - i < 0:\n            continue\n        else:\n            score += j\n            k -= i\n            cnt -= i\n    print(score + 2 * min(k, cnt))"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint main() {\n  int t;\n  std::cin >> t;\n  for (int p = 0; p < t; p++) {\n    int n;\n    int k;\n    std::cin >> n >> k;\n    std::string word;\n    std::cin >> word;\n    std::vector<char> a(word.begin(), word.end());\n    std::vector<int> values;\n    bool left = false;\n    bool right = false;\n    if (a[0] == 'L') {\n      left = true;\n    }\n    if (a[a.size() - 1] == 'L') {\n      right = true;\n    }\n    int local = 0;\n    for (int i = 0; i < a.size(); i++) {\n      if (a[i] == 'L') {\n        local++;\n      }\n      if (a[i] == 'W' && local != 0) {\n        values.push_back(local);\n        local = 0;\n      }\n    }\n    if (local != 0) {\n      values.push_back(local);\n      local = 0;\n    }\n    int m = 0;\n    std::vector<int> b;\n    if (!left && !right) {\n      b = values;\n      std::sort(b.begin(), b.end());\n    }\n    if (left && !right) {\n      b = values;\n      b[0] = 3000000;\n      std::sort(b.begin(), b.end());\n    }\n    if (!left && right) {\n      b = values;\n      b.pop_back();\n      std::sort(b.begin(), b.end());\n    }\n    if (left && right) {\n      b = values;\n      b.pop_back();\n      b[0] = 3000000;\n      std::sort(b.begin(), b.end());\n    }\n    int sum = 0;\n    for (int j = 0; j < b.size() && (sum + b[j] <= k); j++) {\n      sum += b[j];\n      m++;\n    }\n    int points = 0;\n    for (int i = 0; i < a.size() - 1; i++) {\n      if (a[i] == 'W') {\n        points++;\n      }\n      if (a[i] == 'W' && a[i + 1] == 'W') {\n        points++;\n      }\n    }\n    if (!right) {\n      points++;\n    }\n    points += m;\n    int suml = 0;\n    for (int i = 0; i < values.size(); i++) {\n      suml += values[i];\n    }\n    if (suml == a.size() && k > 0) {\n      points += 2 * std::min(suml, k);\n      points--;\n    } else {\n      points += 2 * std::min(suml, k);\n    }\n    std::cout << points << std::endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "def solve():\n    n,k=map(int,input().split())\n    s=input()[:n]\n    z=s.count('W')\n    leftL=n-z\n    if z==0:\n        if k!=0:\n            print(1+2*(k-1))\n        else:\n            print(0)\n    else:\n        total=0\n        for i in range(n):\n            if s[i]=='W':\n                if (i-1)>=0:\n                    if s[i-1]=='W':\n                        total+=2\n                    else:\n                        total+=1\n                else:\n                    total+=1\n        cont_seg=[]\n        fir,sec=-1,-1\n        for i in range(n):\n            if s[i]=='W':\n                if fir==-1:\n                    fir=i\n                else:\n                    sec=i\n            if fir!=-1 and sec!=-1:\n                temp=sec-fir-1\n                if temp>0:\n                    cont_seg.append(temp)\n                fir=sec\n        cont_seg.sort()\n        for i in cont_seg:\n            if i<=k:\n                total+=1+i*2\n                k-=i\n                leftL-=i\n        if leftL!=0 and k!=0:\n            if leftL<=k:\n                total+=leftL*2\n            elif leftL>k:\n                total+=k*2\n        print(total)\nif __name__ == \"__main__\":\n    for _ in range(int(input())):\n        solve()"
        },
        {
            "language": 3,
            "solution": "# import sys; input = sys.stdin.buffer.readline\n# sys.setrecursionlimit(10**7)\nfrom collections import defaultdict\nmod = 10 ** 9 + 7; INF = float(\"inf\")\n\ndef getlist():\n\treturn list(map(int, input().split()))\n\ndef inverse(N, mod):\n\treturn (pow(N, mod - 2, mod))\n\ndef main():\n\tT = int(input())\n\tfor _ in range(T):\n\t\tN, K = getlist()\n\t\ts = list(input())\n\t\tK2 = K\n\t\tnum = s.count(\"W\")\n\t\tif num == 0:\n\t\t\tans = 2 * min(N, K) - 1\n\t\t\tprint(max(ans, 0))\n\t\telse:\n\t\t\tLis = []\n\t\t\tcnt = 0\n\t\t\tfor i in s:\n\t\t\t\tif i == \"L\":\n\t\t\t\t\tcnt += 1\n\t\t\t\telse:\n\t\t\t\t\tif cnt != 0:\n\t\t\t\t\t\tLis.append(cnt)\n\t\t\t\t\t\tcnt = 0\n\n\t\t\tif cnt != 0:\n\t\t\t\tLis.append(cnt)\n\t\t\tLis2 = []\n\t\t\tM = len(Lis)\n\t\t\tseg = M - 1\n\t\t\tcnt2 = 0\n\t\t\tS, G = 0, M\n\t\t\tif s[0] == \"W\":\n\t\t\t\tseg += 1\n\t\t\telse:\n\t\t\t\tS += 1\n\t\t\tif s[-1] == \"W\":\n\t\t\t\tseg += 1\n\t\t\telse:\n\t\t\t\tG -= 1\n\n\t\t\t# print(Lis)\n\t\t\t# print(seg, cnt2)\n\t\t\tfor i in range(S, G):\n\t\t\t\tLis2.append(Lis[i])\n\n\t\t\tLis2.sort()\n\t\t\t# print(Lis2)\n\t\t\tM2 = len(Lis2)\n\t\t\tfor i in range(M2):\n\t\t\t\tif K >= Lis2[i]:\n\t\t\t\t\tseg -= 1\n\t\t\t\t\tK -= Lis2[i]\n\t\t\t\telse:\n\t\t\t\t\tbreak\n\n\n\t\t\tans = 2 * min(N, num + K2) - seg\n\t\t\tprint(ans)\n\n\nif __name__ == '__main__':\n\tmain()"
        },
        {
            "language": 3,
            "solution": "def solve():\n    n, k = map(int, input().split())\n    A = input()\n\n    segs = []\n    s, t = 0, 0\n\n    while s < n and A[s] == 'L':\n        s += 1\n    head = (0, s)\n\n    nn = n\n    while nn >= 1 and A[nn - 1] == 'L':\n        nn -= 1\n    tail = (nn, n)\n    \n    while s < nn:\n        if A[s] == 'W':\n            s += 1\n            continue\n        t = s\n        while t < nn and A[t] == 'L':\n            t += 1\n        segs.append((s, t))\n        s = t\n    \n    segs.sort(key=lambda x: x[1] - x[0])\n\n    B = list(A)\n    for (s, t) in segs:\n        if k <= 0:\n            break\n        w = min(t - s, k)\n        B[s:s+w] = 'W' * w\n        k -= w\n    \n    if k > 0 and tail[0] != n:\n        s, t = tail\n        w = min(t - s, k)\n        B[s:s+w] = 'W' * w\n        k -= w\n    if k > 0 and head[1] > 0:\n        s, t = head\n        w = min(t - s, k)\n        B[t - w: t] = 'W' * w\n        k -= w\n        \n    score = 0\n    for i in range(n):\n        if i >= 1 and B[i - 1] == 'W' and B[i] == 'W':\n            score += 2\n            continue\n        if B[i] == 'W':\n            score += 1\n            continue\n    return score\n\n\nTC = int(input())\nfor _ in range(TC):\n    print(solve())\n "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, k;\nstring s;\nint solve() {\n  vector<int> holes;\n  int cur = 0;\n  int tt = 0;\n  bool start = false;\n  int iscore = 0;\n  for (int i = 0; i < n; i++) {\n    if (s[i] == 'W') {\n      if (i > 0 && s[i - 1] == 'W')\n        iscore += 2;\n      else\n        iscore++;\n      if (!start) {\n        start = true;\n        tt = cur;\n        cur = 0;\n        continue;\n      }\n      if (cur > 0) {\n        holes.push_back(cur);\n        tt += cur;\n        cur = 0;\n      }\n    } else\n      cur++;\n  }\n  tt += cur;\n  sort(holes.begin(), holes.end());\n  int ct = 0, dscore = 0;\n  for (int i = 0; i < holes.size(); i++) {\n    if (k >= holes[i]) {\n      dscore += holes[i] * 2 + 1;\n      k -= holes[i];\n      tt -= holes[i];\n    } else\n      break;\n  }\n  dscore += 2 * min(k, tt);\n  if (!start && dscore > 0) dscore--;\n  return iscore + dscore;\n}\nint main() {\n  cin.tie(0);\n  ios::sync_with_stdio(0);\n  int t;\n  cin >> t;\n  for (int ti = 0; ti < t; ti++) {\n    cin >> n >> k;\n    cin >> s;\n    cout << solve() << \"\\n\";\n  }\n}\n"
        },
        {
            "language": 1,
            "solution": "import sys\nif sys.subversion[0] == \"PyPy\":\n    import io, atexit\n    sys.stdout = io.BytesIO()\n    atexit.register(lambda: sys.__stdout__.write(sys.stdout.getvalue()))\n    \n    sys.stdin = io.BytesIO(sys.stdin.read())\n    input = lambda: sys.stdin.readline().rstrip()\n\nRS = raw_input\nRI = lambda x=int: map(x,RS().split())\nRN = lambda x=int: x(RS())\n''' ...................................................................... '''\n\ndef fun(num,n):\n    tot= 1 if num[0]=='W' else 0\n    for i in xrange(1,n):\n        if num[i]=='W':\n            tot += (2 if num[i-1]=='W' else 1)\n    return tot\n\ndef kind(num,cnt,start):\n\n    prev = start-1\n    end = start+cnt\n\n    if num[prev]=='W':\n        if num[end]=='W':\n            return 0\n        return 1\n\n    if num[end]=='W': return 1\n    return 2\n\nfor _ in xrange(RN()):\n    n,k = RI()\n    num = list('L'+RS()+'L')\n\n    arr = []\n    \n    cnt,start = 0,1\n    \n    for i in xrange(1,n+1):\n        if num[i]=='W':\n            if cnt!=0:\n                X = kind(num,cnt,start)\n                arr.append([X,cnt,start])\n                cnt=0\n        else:\n            if cnt==0:\n                start = i\n            cnt+=1\n\n    if cnt!=0:\n        X = kind(num,cnt,start)\n        arr.append([X,cnt,start])\n\n    arr.sort()\n    tot = 0\n    \n    for X,cnt,start in arr:\n        if k<=0: break\n\n        if cnt<=k:\n            k-=cnt\n            for i in xrange(cnt):\n                num[start+i] = 'W'\n\n        else:\n            if num[start-1]=='W':\n                for i in xrange(k):\n                    num[start+i]='W'\n            else:\n                end = start+cnt-1\n                for i in xrange(k):\n                    num[end-i]='W'\n                    \n            k=0\n\n    print fun(num,n+2)\n            \n        \n        \n            \n    \n"
        },
        {
            "language": 3,
            "solution": "import itertools\n\ndef remove_beginning(lst, bad):\n    idx = 0\n    while lst[idx] == bad:\n        idx += 1\n        if len(lst) == idx:\n            break\n    return idx\n\ndef solve():\n    n, k = [int(x) for x in input().strip().split()]\n    game_scores = list(input().strip())\n    win, lose = 'W', 'L'\n\n    first_good_pos = remove_beginning(game_scores, lose)\n    first_range = first_good_pos\n    game_scores = game_scores[first_good_pos:]\n    # print(f'Games after removing from head {game_scores}')\n    game_scores.reverse()\n    if not game_scores:\n        return max(2 * min(k, first_range) - 1, 0)\n    last_good_pos = remove_beginning(game_scores, lose)\n    last_range = last_good_pos\n    game_scores = game_scores[last_good_pos:]\n    game_scores.reverse()\n    # print(f'Games after removing from tail {game_scores}, {last_range}')\n    \n    assignable_points_from_list_ends = first_range + last_range\n\n    lose_lengths = []\n    for key, group in itertools.groupby(game_scores):\n        lose_lengths.append([key, len(list(group))])\n    # print(lose_lengths)\n    initial_points = sum(map(lambda t: 0 if t[0] == lose else 2 * t[1] - 1, lose_lengths))\n    # print(f'Initial points {initial_points}. Assignable points from bounds {assignable_points_from_list_ends}')\n    lose_lengths = list(filter(lambda t: t > 0, map(lambda t: 0 if t[0] == win else t[1], lose_lengths)))\n    if n == 1:\n        if game_scores[0] == win:\n            return 1\n        return 1 if (k == 1) else 0\n    # print(lose_lengths)\n    lose_lengths.sort()\n    for l in lose_lengths:\n        if k >= l:\n            k, initial_points = k - l, initial_points + 2 * (l - 1) + 3\n        else:\n            k, initial_points = 0, initial_points + 2 * k\n\n    initial_points += 2 * min (k, assignable_points_from_list_ends)\n    return initial_points\n\n\nif __name__=='__main__':\n    for _ in range(int(input().strip())):\n        print(solve())"
        },
        {
            "language": 3,
            "solution": "from collections import *\nfrom itertools import *\nfrom bisect import *\n\ndef inp():\n    return int(input())\ndef arrinp():\n    return [int(x) for x in input().split()]\n\ndef main():\n    t = inp()\n    for _ in range(t):\n        n,k = arrinp()\n        s = [x for x in input()]\n        score = 0\n        for i in range(n):\n            if(i==0 and s[i]==\"W\"):\n                score +=1\n            elif(s[i]=='W' and s[i-1]=='W'):\n                score += 2\n            elif(s[i] == 'W' and s[i-1]!='W'):\n                score +=1    \n        if(k==0):\n            print(score)\n            continue\n        if(score == 0):\n            print(1+(k-1)*2)\n            continue\n        #some W exists and K>0\n        diff = []\n        special = []\n        last = -1\n        i = 0\n        while(i<n):\n            if(s[i]=='W'):\n                if(last==-1):\n                    last = i\n                    if(i>0):\n                        special.append(i)\n                else:\n                    if(i-last-1>0):\n                        diff.append(i-last-1)\n                    last = i\n            i+=1 \n        if(n-last-1>0): \n            special.append(n-last-1)\n        diff.sort()\n        for ele in diff:\n            if(ele<=k):\n                score += 2*ele + 1\n                k -= ele\n            elif(ele>k):\n                score += 2*k\n                k = 0\n            if(k==0):\n                break\n        if(k>0):\n            for ele in special:\n                if(ele<=k):\n                    score += 2*ele\n                    k -= ele\n                elif(ele>k):\n                    score += 2*k\n                    k = 0\n                if(k==0):\n                    break\n        print(score)\nif __name__ == '__main__':\n    main()"
        },
        {
            "language": 4,
            "solution": "//package com.company;\n\n\nimport javax.print.attribute.standard.PrinterIsAcceptingJobs;\nimport javax.sound.midi.spi.SoundbankReader;\nimport java.io.*;\nimport java.math.BigInteger;\nimport java.net.Inet4Address;\nimport java.text.CollationElementIterator;\nimport java.util.*;\nimport java.util.concurrent.CopyOnWriteArrayList;\n\npublic class Main implements Runnable {\n    int size[];\n    static int e9 = 1000000007;\n    int max = Integer.MIN_VALUE;\n    long max1 = Long.MIN_VALUE;\n    long min1 = Long.MAX_VALUE;\n    long fib[][];\n    static class FastReader {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public FastReader() {\n            br = new BufferedReader(new\n                    InputStreamReader(System.in));\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine() {\n            String str = \"\";\n            try {\n                str = br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n    }\n    int parent[];\n    int rank[];\n    ArrayList<ArrayList<Integer>> arrayLists;\n    long fib1[][];\n    long r[];\n    int n;\n    int m;\n    long co=0;\n    long size1[];\n    long v[];\n    int arr[][];\n    int u=0;\n    HashMap<Long,Long> hashMap=new HashMap<>();\n    ArrayList<Pair> arrayList;\n    public static void main(String[] args) throws IOException {\n        new Thread(null,new Main(),\"Main\",1<<28).start();\n    }\n\n    public void run() {\n        FastReader scanner = new FastReader();\n//            Scanner scanner = new Scanner(System.in);\n//            BufferedReader bufferedReader=new BufferedReader(new InputStreamReader(System.in));\n        PrintWriter printWriter = new PrintWriter(System.out);\n        long t = scanner.nextLong();\n        int r=0;\n        high:while (t-- > 0) {\n            int n=scanner.nextInt();\n            int k=scanner.nextInt();\n            ArrayList<Pair> arrayList=new ArrayList<>();\n            String s=scanner.next();\n            int o=0;\n            int prev=-1;\n            char arr[]=s.toCharArray();\n            long ans=0;\n            int e=0;\n            for (int i = 0; i < n; i++) {\n                if(s.charAt(i)=='W'){\n                    e=i;\n                    if(prev!=-1){\n                        arrayList.add(new Pair(prev,i));\n                    }\n                    else{\n                        o=i-1;\n                    }\n                    prev=i;\n                }\n            }\n            Collections.sort(arrayList, new Comparator<Pair>() {\n                @Override\n                public int compare(Pair o1, Pair o2) {\n                    return Long.compare(o1.y-o1.x,o2.y-o2.x);\n                }\n            });\n            for (int i = 0; i < arrayList.size()&&k>0; i++) {\n                Pair p=arrayList.get(i);\n                for (int j =(int) p.x+1; j < p.y&&k>0; j++) {\n                    arr[j]='W';\n                    k--;\n                }\n            }\n            e++;\n            while (k>0&&o>=0){\n                arr[o]='W';\n                o--;\n                k--;\n            }\n            while (k>0&&e<n){\n                arr[e]='W';\n                e++;\n                k--;\n            }\n            for (int i = 0; i < n; i++) {\n//                System.out.println(arr[i]);\n                if(i>0&&arr[i]=='W'&&arr[i-1]=='W'){\n                    ans+=2;\n                }\n                else if(arr[i]=='W'){\n                    ans++;\n                }\n            }\n            printWriter.println(ans);\n        }\n        printWriter.flush();\n    }\n    static long mod=1_000_000_007;\n    public long lcm(long a,long b){\n        return (a*b)/gcd(a,b);\n    }\n    public long mul(long a, long b) {\n//        System.out.println(a+\" \"+b);\n        return ((a)*(b));\n    }\n    public long fact(int x) {\n        long ans=1;\n        for (int i=2; i<=x; i++) ans=mul(ans, i);\n        return ans;\n    }\n    public long fastPow(long base, long exp) {\n        if (exp==0) return 1;\n        long half=fastPow(base, exp/2);\n        if (exp%2==0) return mul(half, half);\n        return mul(half, mul(half, base));\n    }\n    public long modInv(long x) {\n        return fastPow(x, mod-2);\n    }\n    public long nCk(int n, int k) {\n        return mul(fact(n), mul(modInv(fact(k)), modInv(fact(n-k))));\n    }\n    public void parent(int n){\n        parent=new int[n+1];\n        size=new int[n+1];\n        rank=new int[n+1];\n        for (int i = 0; i <=n; i++) {\n            parent[i]=i;\n            rank[i]=0;\n//            size[i]=1;\n        }\n    }\n    public void union(int i,int j){\n        int root1=find(i);\n        int root2=find(j);\n//            if(root1 != root2) {\n//                parent[root2] = root1;\n////                sz[a] += sz[b];\n//            }\n        if(root1==root2){\n            return;\n        }\n        if(rank[root1]>rank[root2]){\n            parent[root2]=root1;\n            size[root1]+=size[root2];\n        }\n        else if(rank[root1]<rank[root2]){\n            parent[root1]=root2;\n            size[root2]+=size[root1];\n        }\n        else{\n            parent[root2]=root1;\n            rank[root1]+=1;\n            size[root1]+=size[root2];\n        }\n    }\n    public int find(int p){\n        if(parent[p]!=p){\n            if(parent[p]==-1){\n                return parent[p];\n            }\n            parent[p]=find(parent[p]);\n        }\n        return parent[p];\n    }\n    public double dist(double x1,double y1,double x2,double y2){\n        double e=(x2-x1)*(x2-x1)+(y2-y1)*(y2-y1);\n        double e1=Math.sqrt(e);\n        return e1;\n    }\n    public void make(int p){\n        parent[p]=p;\n        rank[p]=1;\n    }\n    Random rand = new Random();\n    public void sort(int[] a, int n) {\n        for (int i = 0; i < n; i++) {\n            int j = rand.nextInt(i + 1);\n            int tmp = a[i];\n            a[i] = a[j];\n            a[j] = tmp;\n        }\n        Arrays.sort(a, 0, n);\n    }\n    public long gcd(long a,long b){\n        if(b==0){\n            return a;\n        }\n        return gcd(b,a%b);\n    }\n    //    public void dfs(ArrayList<Integer> arrayList){\n//        for (int i = 0; i < arrayList.size(); i++) {\n//            if(v1[arrayList.get(i)]==false){\n//                v1[arrayList.get(i)]=true;\n//                dfs(arrayLists.get(i));\n//            }\n//        }\n//    }\n    public double fact(double h){\n        double sum=1;\n        while(h>=1){\n            sum=(sum%e9)*(h%e9);\n            h--;\n        }\n        return sum%e9;\n    }\n    public long primef(double r){\n        long c=0;\n        long ans=1;\n        long g=0;\n        while(r%2==0){\n            c++;\n            r=r/2;\n        }\n        if(c>0){\n            ans*=2;\n        }\n        c=0;\n//            System.out.println(ans+\" \"+r);\n        for (int i = 3; i <=Math.sqrt(r) ;i+=2) {\n            g=0;\n            while(r%i==0){\n//                    System.out.println(i);\n                c++;\n                g++;\n                r=r/i;\n            }\n            if(c>0){\n                ans*=i;\n            }\n            c=0;\n        }\n        if(r>2){\n            ans*=r;\n        }\n        return ans;\n    }\n    public long divisor(double r){\n        long c=0;\n//        if(n==3)\n//            System.out.println(r+\" \"+n+\" \"+k+\" \"+\"l\");\n        for (int i =2; i <=Math.sqrt(r); i++) {\n            if(r%i==0){\n                if(r/i==i){\n                    c++;\n                }\n                else{\n                    if(r/i<n){\n                        c+=2;\n                    }else{\n                        c++;\n                    }\n                }\n            }\n        }\n        return c;\n    }\n}\nclass Pair {\n    long x;\n    long y;\n    int z;\n    public Pair(long x,long y) {\n        this.x = x;\n        this.y = y;\n//        this.z=z;\n    }\n\n    // @Override\n//    public int hashCode() {\n//        int hash = 37;\n//        return this.x * hash + this.y;\n//    }\n\n//    @Override\n//    public boolean equals(Object o1) {\n//        if (o1 == null || o1.getClass() != this.getClass()) {\n//            return false;\n//        }\n//        Pair o = (Pair) o1;\n//        if (o.x == this.x && o.y == this.y) {\n//            return true;\n//        }\n//        return false;\n//    }\n}\nclass Sorting implements Comparator<Pair> {\n    public int compare(Pair p1, Pair p2) {\n        if(p1.x==p2.x){\n            return Long.compare(p1.y,p2.y);\n        }else {\n            return Long.compare(p1.x, p2.x);\n        }\n    }\n}\nclass Edge{\n    int s=0;\n    int d=0;\n    int c=0;\n    public Edge(int s,int d,int c){\n        this.s=s;\n        this.d=d;\n        this.c=c;\n    }\n}"
        },
        {
            "language": 3,
            "solution": "#!/usr/bin/python3.6\n# -*- coding: utf-8 -*-\n# @Time    : 2020/10/20 3:39 PM\n# @Author  : Songtao Li\nimport re\n\n\ndef cal_base_score(input_string):\n    W_list = re.findall(\"W+\", input_string)\n    score = sum([2 * (len(w) - 1) + 1 for w in W_list])\n\n    return score\n\n\nif __name__ == \"__main__\":\n    total_samples = int(input())\n\n    for i in range(total_samples):\n\n        length, modify = map(int, input().split())\n        string = input()\n        w_count = string.count(\"W\")\n        l_count = length - w_count\n        base_score = cal_base_score(string)\n\n        if \"W\" not in string:\n            if modify == 0:\n                print(0)\n            else:\n                print(2 * modify - 1)\n\n        else:\n            s = re.search(\"(W.*W)\", string)\n            if s is not None:\n                s = s.group()\n            else:\n                s = \"\"\n            stack = sorted(re.findall(\"L+\", s), reverse=True)\n            first_l_seg = re.match(\"L+\", string)\n            last_l_seg = re.match(\"L+\", string[::-1])\n            while modify > 0 and len(stack) > 0:\n                seg = stack.pop()\n                modify -= 1\n                if seg == \"L\":\n                    base_score += 3\n                else:\n                    base_score += 2\n                    stack.append(seg.replace(\"L\", \"\", 1))\n            if first_l_seg is None:\n                len_first = 0\n            else:\n                len_first = len(first_l_seg.group())\n            if last_l_seg is None:\n                len_last = 0\n            else:\n                len_last = len(last_l_seg.group())\n            if modify > 0:\n                for _ in range(len_first+len_last):\n                    base_score += 2\n                    modify -= 1\n                    if modify <= 0:\n                        break\n            print(base_score)\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\npublic class MainClass\n{\n    public static void main(String[] args) throws IOException\n    {\n        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n        StringBuilder stringBuilder = new StringBuilder();\n        int t = Integer.parseInt(in.readLine());\n        while (t-- > 0)\n        {\n            String s1[] = in.readLine().split(\" \");\n            int n = Integer.parseInt(s1[0]);\n            int k = Integer.parseInt(s1[1]);\n            char[] S = in.readLine().toCharArray();\n            ArrayList<Integer> B = new ArrayList<>();\n            int ans = 0;\n            int c = 0;\n            for (int i=0;i<n;i++)\n            {\n                if (S[i] == 'L')\n                {\n                    c++;\n                }\n            }\n            if (c <= k)\n            {\n                stringBuilder.append(2 * n - 1).append(\"\\n\");\n                continue;\n            }\n            else if (c == n)\n            {\n                if (k == 0)\n                    stringBuilder.append(\"0\\n\");\n                else\n                    stringBuilder.append(2 * Math.min(n, k) - 1).append(\"\\n\");\n                continue;\n            }\n            for (int i=0;i<n;i++)\n            {\n                if (S[i] == 'W')\n                {\n                    ans ++;\n                    if (i > 0 && S[i - 1] == 'W')\n                        ans++;\n                }\n                else\n                {\n                    int j = i;\n                    while (j < n && S[j] == S[i])\n                    {\n                        j++;\n                    }\n                    if (i != 0 && j != n)\n                    {\n                        B.add(j - i);\n                    }\n                    i = j - 1;\n                }\n            }\n            Collections.sort(B);\n            int i = 0;\n            int sum = 0;\n            while (i < B.size())\n            {\n                if (sum + B.get(i) <= k)\n                {\n                    ans += 2 * B.get(i) + 1;\n                    sum += B.get(i);\n                }\n                else\n                {\n                    ans += 2 * (k - sum);\n                    sum = k;\n                }\n                i++;\n            }\n            if (sum < k)\n            {\n                int count = 0;\n                if (S[0] == 'L')\n                {\n                    for (int j=0;j<n;j++)\n                    {\n                        if (S[j] == 'L')\n                            count++;\n                        else\n                            break;\n                    }\n                    int xx = Math.min(k - sum, count);\n                    ans += 2 * xx;\n                    sum += xx;\n                }\n                if (S[n - 1] == 'L' && count != n)\n                {\n                    count = 0;\n                    for (int j=n - 1;j>=0;j--)\n                    {\n                        if (S[j] == 'L')\n                            count++;\n                        else\n                            break;\n                    }\n                    int xx = Math.min(k - sum, count);\n                    ans += 2 * xx;\n                    sum += xx;\n                }\n            }\n            stringBuilder.append(ans).append(\"\\n\");\n        }\n        System.out.println(stringBuilder);\n    }\n}\nclass Reader\n{\n    final private int BUFFER_SIZE = 1 << 16;\n    private DataInputStream din;\n    private byte[] buffer;\n    private int bufferPointer, bytesRead;\n\n    public Reader()\n    {\n        din = new DataInputStream(System.in);\n        buffer = new byte[BUFFER_SIZE];\n        bufferPointer = bytesRead = 0;\n    }\n\n    public Reader(String file_name) throws IOException\n    {\n        din = new DataInputStream(new FileInputStream(file_name));\n        buffer = new byte[BUFFER_SIZE];\n        bufferPointer = bytesRead = 0;\n    }\n\n    public String readLine() throws IOException\n    {\n        byte[] buf = new byte[64]; // line length\n        int cnt = 0, c;\n        while ((c = read()) != -1)\n        {\n            if (c == '\\n')\n                break;\n            buf[cnt++] = (byte) c;\n        }\n        return new String(buf, 0, cnt);\n    }\n\n    public int nextInt() throws IOException\n    {\n        int ret = 0;\n        byte c = read();\n        while (c <= ' ')\n            c = read();\n        boolean neg = (c == '-');\n        if (neg)\n            c = read();\n        do\n        {\n            ret = ret * 10 + c - '0';\n        }  while ((c = read()) >= '0' && c <= '9');\n\n        if (neg)\n            return -ret;\n        return ret;\n    }\n\n    public long nextLong() throws IOException\n    {\n        long ret = 0;\n        byte c = read();\n        while (c <= ' ')\n            c = read();\n        boolean neg = (c == '-');\n        if (neg)\n            c = read();\n        do {\n            ret = ret * 10 + c - '0';\n        }\n        while ((c = read()) >= '0' && c <= '9');\n        if (neg)\n            return -ret;\n        return ret;\n    }\n\n    public double nextDouble() throws IOException\n    {\n        double ret = 0, div = 1;\n        byte c = read();\n        while (c <= ' ')\n            c = read();\n        boolean neg = (c == '-');\n        if (neg)\n            c = read();\n\n        do {\n            ret = ret * 10 + c - '0';\n        }\n        while ((c = read()) >= '0' && c <= '9');\n\n        if (c == '.')\n        {\n            while ((c = read()) >= '0' && c <= '9')\n            {\n                ret += (c - '0') / (div *= 10);\n            }\n        }\n\n        if (neg)\n            return -ret;\n        return ret;\n    }\n\n    private void fillBuffer() throws IOException\n    {\n        bytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE);\n        if (bytesRead == -1)\n            buffer[0] = -1;\n    }\n\n    private byte read() throws IOException\n    {\n        if (bufferPointer == bytesRead)\n            fillBuffer();\n        return buffer[bufferPointer++];\n    }\n\n    public void close() throws IOException\n    {\n        if (din == null)\n            return;\n        din.close();\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.List;\nimport java.util.StringTokenizer;\nimport java.io.IOException;\nimport java.io.BufferedReader;\nimport java.util.Collections;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        FastScanner in = new FastScanner(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskB solver = new TaskB();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class TaskB {\n        public void solve(int testNumber, FastScanner in, PrintWriter out) {\n            int numTests = in.nextInt();\n            for (int test = 0; test < numTests; test++) {\n                int n = in.nextInt();\n                int k = in.nextInt();\n                char[] s = in.next().toCharArray();\n                List<int[]> gaps = new ArrayList<>();\n                int[] first = null;\n                int[] last = null;\n                for (int i = 0; i < n; ) {\n                    int j = i;\n                    while (j < n && s[i] == s[j]) {\n                        ++j;\n                    }\n                    if (s[i] == 'L') {\n                        int[] gap = new int[]{i, j};\n                        if (i == 0) {\n                            first = gap;\n                        } else if (j == n) {\n                            last = gap;\n                        } else {\n                            gaps.add(gap);\n                        }\n                    }\n                    i = j;\n                }\n                Collections.sort(gaps, (u, v) -> ((u[1] - u[0]) - (v[1] - v[0])));\n                if (last != null) {\n                    gaps.add(last);\n                }\n                for (int[] gap : gaps) {\n                    for (int i = gap[0]; i < gap[1]; i++) {\n                        if (k > 0) {\n                            --k;\n                            s[i] = 'W';\n                        }\n                    }\n                }\n                if (first != null) {\n                    for (int i = first[1] - 1; i >= first[0]; i--) {\n                        if (k > 0) {\n                            --k;\n                            s[i] = 'W';\n                        }\n                    }\n                }\n                int ans = 0;\n                for (int i = 0; i < n; i++) {\n                    if (s[i] == 'L') {\n                        continue;\n                    }\n                    if (i > 0 && s[i - 1] == 'W') {\n                        ans += 2;\n                    } else {\n                        ans += 1;\n                    }\n                }\n                out.println(ans);\n            }\n        }\n\n    }\n\n    static class FastScanner {\n        private BufferedReader in;\n        private StringTokenizer st;\n\n        public FastScanner(InputStream stream) {\n            in = new BufferedReader(new InputStreamReader(stream));\n        }\n\n        public String next() {\n            while (st == null || !st.hasMoreTokens()) {\n                try {\n                    st = new StringTokenizer(in.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return st.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class B\n{\n   public static void main(String[] args) throws IOException\n   {\n      FastScanner sc = new FastScanner();\n      PrintWriter out = new PrintWriter(System.out);\n      int T = sc.nextInt();\n      for(int t = 0; t < T; t++){\n         int n = sc.nextInt();\n         int k = sc.nextInt();\n         String str = sc.next();\n         int ans = 0;\n         PriorityQueue<Integer> pq = new PriorityQueue<Integer>();\n         int leftover = 0;\n         int cur = -1;\n         for(int i = 0; i < n; i++){\n            if(str.charAt(i) == 'W'){\n               if(cur == -1){\n                  leftover += i;\n                  cur = i;\n               }\n               else{\n                  if(i-cur-1 != 0) pq.add(i-cur-1);\n                  cur = i;\n               }\n               if(i == 0){\n                  ans++;\n               }\n               else{\n                  if(str.charAt(i-1) == 'W'){\n                     ans += 2;\n                  }\n                  else{\n                     ans += 1;\n                  }\n               }\n            }\n         }\n         leftover += n-cur-1;\n         \n         if(cur == -1){\n            if(k > 0){\n               out.println(2*(k-1)+1);\n            }\n            else{\n               out.println(0);\n            }\n            continue;\n         }\n         while(k != 0 && !pq.isEmpty()){\n            cur = pq.poll();\n            if(k >= cur){\n               ans += 2*(cur-1)+3;\n               k -= cur;\n            }\n            else{\n               ans += 2*k;\n               k = 0;\n            }\n         }\n         if(k != 0){\n            ans += Math.min(k, leftover)*2;\n         }\n         out.println(ans);\n      }\n      out.close();\n   }\n   \n   \n   static class FastScanner {\n      private int BS = 1 << 16;\n      private char NC = (char) 0;\n      private byte[] buf = new byte[BS];\n      private int bId = 0, size = 0;\n      private char c = NC;\n      private double cnt = 1;\n      private BufferedInputStream in;\n   \n      public FastScanner() {\n         in = new BufferedInputStream(System.in, BS);\n      }\n   \n      public FastScanner(String s) {\n         try {\n            in = new BufferedInputStream(new FileInputStream(new File(s)), BS);\n         } catch (Exception e) {\n            in = new BufferedInputStream(System.in, BS);\n         }\n      }\n   \n      private char getChar() {\n         while (bId == size) {\n            try {\n               size = in.read(buf);\n            } catch (Exception e) {\n               return NC;\n            }\n            if (size == -1) \n               return NC;\n            bId = 0;\n         }\n         return (char) buf[bId++];\n      }\n   \n      public int nextInt() {\n         return (int) nextLong();\n      }\n   \n      public int[] nextInts(int N) {\n         int[] res = new int[N];\n         for (int i = 0; i < N; i++) {\n            res[i] = (int) nextLong();\n         }\n         return res;\n      }\n   \n      public long[] nextLongs(int N) {\n         long[] res = new long[N];\n         for (int i = 0; i < N; i++) {\n            res[i] = nextLong();\n         }\n         return res;\n      }\n   \n      public long nextLong() {\n         cnt = 1;\n         boolean neg = false;\n         if (c == NC) c = getChar();\n         for (; (c < '0' || c > '9'); c = getChar()) {\n            if (c == '-') neg = true;\n         }\n         long res = 0;\n         for (; c >= '0' && c <= '9'; c = getChar()) {\n            res = (res << 3) + (res << 1) + c - '0';\n            cnt *= 10;\n         }\n         return neg ? -res : res;\n      }\n   \n      public double nextDouble() {\n         double cur = nextLong();\n         return c != '.' ? cur : cur + nextLong() / cnt;\n      }\n   \n      public double[] nextDoubles(int N) {\n         double[] res = new double[N];\n         for (int i = 0; i < N; i++) {\n            res[i] = nextDouble();\n         }\n         return res;\n      }\n   \n      public String next() {\n         StringBuilder res = new StringBuilder();\n         while (c <= 32) c = getChar();\n         while (c > 32) {\n            res.append(c);\n            c = getChar();\n         }\n         return res.toString();\n      }\n   \n      public String nextLine() {\n         StringBuilder res = new StringBuilder();\n         while (c <= 32) c = getChar();\n         while (c != '\\n') {\n            res.append(c);\n            c = getChar();\n         }\n         return res.toString();\n      }\n   \n      public boolean hasNext() {\n         if (c > 32) \n            return true;\n         while (true) {\n            c = getChar();\n            if (c == NC) \n               return false;\n            else if (c > 32) \n               return true;\n         }\n      }\n   }\n \n   static void ASSERT(boolean assertion, String message) {\n      if (!assertion) throw new AssertionError(message);\n   }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  int T = 1;\n  cin >> T;\n  while (T--) {\n    int n, k;\n    cin >> n >> k;\n    string s;\n    cin >> s;\n    vector<int> v;\n    int w = 0;\n    for (int i = 0; i < n; i++) {\n      if (s[i] == 'W') w++;\n    }\n    if (w == 0) {\n      cout << max(2 * k - 1, 0) << \"\\n\";\n      continue;\n    }\n    w += k;\n    if (w >= n) {\n      cout << 2 * n - 1 << \"\\n\";\n      continue;\n    }\n    int l = 0;\n    for (int i = 0; i < n; i++) {\n      if (s[i] == 'L')\n        l++;\n      else {\n        v.push_back(l);\n        l = 0;\n      }\n    }\n    if (l != 0) v.push_back(l);\n    if (s[0] == 'L') v.erase(v.begin());\n    if (s[n - 1] == 'L') v.erase(v.begin() + v.size() - 1);\n    sort(v.begin(), v.end());\n    int sp = 0;\n    int i;\n    for (i = 0; i < v.size(); i++) {\n      if (sp + v[i] > k) break;\n      sp += v[i];\n    }\n    int wl = v.size() - i;\n    cout << 2 * w - wl - 1 << \"\\n\";\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.Scanner;\n\npublic class B {\n    static Scanner sc = new Scanner(System.in);\n    public static void main(String[] args) {\n        int t = 1;\n        t = sc.nextInt();\n        while (t-- > 0) {\n            solve();\n        }\n    }\n\n    private static void solve() {\n        int n=sc.nextInt();\n        int k=sc.nextInt();\n        char[] s = sc.next().toCharArray();\n        ArrayList<Integer> nodes=new ArrayList<>();\n        int lcount=0;\n        int wcount=0;\n        int i=0;\n        int l=0;\n        while(i<s.length&&s[i]=='L'){\n            l++;\n        i++;\n    }\n        int j=n-1;\n        while(j>i&&s[j]=='L'){\n        j--;\n        l++;\n        }\n        int sub=1;\n        for (; i <=j; i++) {\n            if(s[i]=='W')\n           {\n               if(lcount!=0)\n               nodes.add(lcount);\n               lcount=0;\n            wcount++;\n           }\n            else\n            {\n                lcount++;\n            }\n        }\n        Collections.sort(nodes);\n        for (int g=0;g<nodes.size();g++) {\n            if(nodes.get(g)>k)\n            {\n                sub+=1;\n                l+=nodes.get(g);\n                continue;\n\n            }\n            wcount+=nodes.get(g);\n            k-=nodes.get(g);\n        }\n        if(k!=0)\n        {\n            wcount+=Math.min(k,l);\n        }\n        System.out.println(Math.max((long)(wcount*2)-sub,0));\n    }\n    }"
        },
        {
            "language": 3,
            "solution": "#This code is contributed by Siddharth\nfrom bisect import *\nimport math\nfrom collections import *\nfrom heapq import *\nfrom itertools import *\ninf=10**18\nmod=10**9+7\n\n\n\n\n\n\n# ==========================================> Code Starts Here <=====================================================================\n\n\nfor _ in range(int(input())):\n    n,k=map(int,input().split())\n    s=list(input())\n    arr=[]\n    prev=-1\n    if n == 1:\n        if k:\n            print(1)\n        else:\n            if s[0] == 'W':\n                print(1)\n            else:\n                print(0)\n        continue\n    for i in range(n):\n        if s[i]=='W':\n            if prev==-1:\n                prev=i\n            elif i-prev==1:\n                prev=i\n            else:\n                arr.append(i-prev-1)\n                prev=i\n    if s.count('W')+k>=n or len(arr)==0:\n        print(max(0,min(n,s.count('W')+k)*2-1))\n    else:\n        arr.sort()\n        ans=s.count('W')\n        cnl=s.count('L')\n        par=len(arr)+1\n        for i in arr:\n            if i<=k:\n                k-=i\n                cnl-=i\n                par-=1\n                ans+=i\n        ans+=min(k,cnl)\n        print(max(0,ans*2-par))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor _ in range(t):\n    n,k = map(int, input().split())\n    s = str(input())\n\n    base = 0\n    for i in range(n):\n        if s[i] == 'W':\n            if i != 0:\n                if s[i-1] == 'W':\n                    base += 2\n                else:\n                    base += 1\n            else:\n                base += 1\n\n    if base == 0:\n        x = n\n        if n == 1:\n            if k >= 1:\n                ans = 1\n            else:\n                ans = 0\n        elif n == 2:\n            if k >= 2:\n                ans = 3\n            elif k == 1:\n                ans = 1\n            else:\n                ans = 0\n        else:\n            if k >= x:\n                ans = 2*x-1\n            else:\n                if k == 0:\n                    ans = 0\n                elif k == 1:\n                    ans = 1\n                else:\n                    ans = 1+(k-1)*2\n        print(ans+base)\n        continue\n\n    X= []\n    cur = s[0]\n    cnt = 0\n    for i in range(n):\n        if cur == s[i]:\n            cnt += 1\n        else:\n            if cur == 'L':\n                X.append([cnt, 0])\n            cnt = 1\n            cur = s[i]\n    else:\n        if cur == 'L':\n            X.append([cnt, 1])\n    if s[0] == 'L':\n        X[0][1] = 1\n    X.sort(key=lambda x:(x[1], x[0]))\n    #print(X)\n\n    ans = 0\n    for x, j in X:\n        if k >= x:\n            if j != 1:\n                ans += 2*x+1\n            else:\n                ans += 2*x\n            k -= x\n        else:\n            ans += k*2\n            break\n    print(ans+base)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long double epsylon = 1e-9;\nconst std::string PROGRAM_NAME = \"ivo\";\nint main() {\n  int nt;\n  cin >> nt;\n  for (int it = 0; it < nt; ++it) {\n    int n, k;\n    cin >> n >> k;\n    string s;\n    getline(cin, s);\n    getline(cin, s);\n    vector<int> a;\n    int c = 0;\n    for (int i = 0; i < (int)s.size(); ++i) {\n      if (s[i] == 'W') {\n        if (c) {\n          if (c == i) {\n            c += 1000000;\n          }\n          a.push_back(c);\n          c = 0;\n        }\n      } else {\n        c++;\n      }\n    }\n    if (c) {\n      if (c == (int)s.size()) {\n        c += 1000000;\n      }\n      c += 1000000;\n      a.push_back(c);\n    }\n    sort(a.begin(), a.end());\n    int score = 0;\n    for (int i = 0; i < (int)s.size(); ++i) {\n      if (s[i] == 'W') {\n        if (i > 0 && s[i - 1] == 'W') {\n          score += 2;\n        } else {\n          score += 1;\n        }\n      }\n    }\n    for (int i = 0; i < (int)a.size() && k > 0; ++i) {\n      int sub = 0;\n      while (a[i] > 1000000) {\n        a[i] -= 1000000;\n        sub++;\n      }\n      if (k < a[i]) {\n        score += 2 * k;\n        score -= max(0, sub - 1);\n        k = 0;\n      } else {\n        score += 2 * a[i] + 1;\n        score -= sub;\n        k -= a[i];\n      }\n    }\n    cout << score << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "tests = int (input())\nfor test in range (tests):\n  n, k = map (int, input().split())\n  s = 'L' + input().strip() + 'L'\n  res = 0\n  pr = 'L'\n  for c in s[1:-1]:\n    if c == 'W':\n      if pr == 'L':\n        res += 1\n      else:\n        res += 2\n    pr = c\n  r = 0  \n  if res == 0:\n    r = 1\n  a = [len (c) for c in (s.split('W'))]\n  a = list(filter(lambda x: x != 0, a))\n  t = len(a)\n  for i in range (t):\n    if i == 0 or i == t - 1:\n      a[i] = 2 * a[i] - 2\n    else:\n      a[i] = 2 * a[i] + 1\n\n  b = sorted(a[1:-1])\n  for i in b:\n    if k * 2 + 1 < i:\n      res += k * 2\n    else: \n      res += i\n    k -= i // 2\n    if k <= 0:\n      break\n  if k > 0:\n    res += min (k * 2, a[0])\n    k -= a[0] // 2\n  if k > 0:\n    res += min (k * 2, a[t-1])\n    k -= a[t-1] // 2\n\n#  print (s)\n#  print (b, a[0], a[t-1])\n#  print (res)\n  \n  if res > 0:\n    res -= r\n  res = min (res, n * 2 - 1)\n  print (res)\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    n, k = map(int, input().split())\n    s = input().strip()\n    curr = n + 100\n    streaks = []\n    out = 0\n    wins = k\n    \n    for i in range(n-1):\n        if s[i] == 'W' and s[i+1] == 'W':\n            out += 1\n            \n    for c in s:\n        if c == 'W':\n            streaks.append(curr)\n            curr = 0\n            out += 1\n            wins += 1\n        else:\n            curr += 1\n            \n    streaks.sort()\n    out += 2 * k\n    for v in streaks:\n        if v > 0 and v <= k:\n            k -= v\n            out += 1\n\n    print(min([2 * n - 1,out,max(0,2 * wins - 1)]))\n"
        },
        {
            "language": 3,
            "solution": "import math\nT=int(input())\nfor _ in range(T):\n    n,k=map(int,input().split())\n    s=list(input())\n    edge=0\n    ans=0\n    f=0\n    for i in s:\n        if i=='W':\n            f=1\n            break\n    if s[0]=='W':\n        ans=1\n    for i in range(1,n):\n        if s[i-1]=='W' and s[i]=='W':\n            ans+=2\n        elif s[i]=='W':\n            ans+=1\n    for i in range(n):\n        if s[i]=='W':\n            break\n        edge+=1\n    for j in range(n-1,-1,-1):\n        if s[j]=='W':\n            break\n        else:\n            edge+=1\n    st,en=i,j\n    l=[]\n    c=0\n    for i in range(st,en+1):\n        if s[i]=='L':\n            c+=1\n        else:\n            if c:\n                l.append(c)\n            c=0\n    l.sort()\n    for i in l:\n        if i<=k:\n            ans+=(2*i+1)\n            k-=i\n        else:\n            edge+=i\n    able=min(edge,k)\n    if f:\n        ans+=(2*able)\n    else:\n        ans+=(2*able-1)\n    print(max(ans,0))\n"
        },
        {
            "language": 4,
            "solution": "//package codeforces.problem.old.nov;\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.*;\n\n/*\nhttps://codeforces.com/problemset/problem/1427/B\n2\n5 2\nWLWLL\n6 5\nLLLWWL\n\n1\n15 5\nWWWLLLWWWLLLWWW\n */\npublic class TaskB_1427 {\n\n    static void solve() {\n        int N = FS.nextInt();\n        int K = FS.nextInt();\n        char[] S = FS.next().toCharArray();\n\n        int winning_streaks_cnt = 0;\n        int wins = 0;\n        int losses = 0;\n        List<Integer> losing_streaks = new ArrayList<>();\n        for (int i = 0; i < N; i++) {\n            if (S[i] == 'W') {\n                wins++;\n                if (i == 0 || S[i - 1] == 'L') winning_streaks_cnt++;\n            }\n            if (S[i] == 'L') {\n                losses++;\n                if (i == 0 || S[i - 1] == 'W') losing_streaks.add(0);\n                losing_streaks.set(losing_streaks.size() - 1, losing_streaks.get(losing_streaks.size() - 1) + 1);\n            }\n        }\n        if (K >= losses) {\n            FS.pt.println(2 * N - 1);\n            return;\n        }\n        if (wins == 0) {\n            if (K == 0) FS.pt.println(0);\n            else FS.pt.println(2 * K - 1);\n            return;\n        }\n        if (S[0] == 'L') losing_streaks.set(0, Integer.MAX_VALUE);\n        if (S[N - 1] == 'L') losing_streaks.set(losing_streaks.size() - 1, Integer.MAX_VALUE);\n        losing_streaks.sort(Comparator.naturalOrder());\n        wins += K;\n        for (int ls : losing_streaks) {\n            if (ls > K) break;\n            K -= ls;\n            winning_streaks_cnt--;\n        }\n        FS.pt.println(2 * wins - winning_streaks_cnt);\n    }\n\n    public static void main(String[] args) {\n        int T = FS.nextInt();\n        for (int tt = 0; tt < T; tt++) {\n            solve();\n        }\n        FS.pt.close();\n    }\n\n    static class FS {\n        private static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        private static StringTokenizer st = new StringTokenizer(\"\");\n        static PrintWriter pt = new PrintWriter(System.out);\n\n        static String next() {\n            while (!st.hasMoreTokens())\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            return st.nextToken();\n        }\n\n        static int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        static int[] readArray(int n) {\n            int[] a = new int[n];\n            for (int i = 0; i < n; i++) a[i] = nextInt();\n            return a;\n        }\n\n        static int[][] read2Array(int n, int m) {\n            int[][] a = new int[n][m];\n            for (int i = 0; i < n; i++) {\n                for (int j = 0; j < m; j++) {\n                    a[i][j] = nextInt();\n                }\n            }\n            return a;\n        }\n\n        static long[][] read2ArrayL(int n, int m) {\n            long[][] a = new long[n][m];\n            for (int i = 0; i < n; i++) {\n                for (int j = 0; j < m; j++) {\n                    a[i][j] = nextInt();\n                }\n            }\n            return a;\n        }\n\n        void printArr(long[] arr) {\n            for (long value : arr) {\n                pt.print(value);\n                pt.print(\" \");\n            }\n            pt.println();\n        }\n\n        static long[] readArrayL(int n) {\n            long[] a = new long[n];\n            for (int i = 0; i < n; i++) a[i] = nextInt();\n            return a;\n        }\n\n        static void printArr(int[] arr) {\n            for (int value : arr) {\n                pt.print(value);\n                pt.print(\" \");\n            }\n            pt.println();\n        }\n\n        static void printArrL(int[] arr) {\n            for (int value : arr) {\n                pt.print(value);\n                pt.print(\" \");\n            }\n            pt.println();\n        }\n\n        static void print2Arr(int[][] arr, int n, int m) {\n            for (int i = 0; i < n; i++) {\n                for (int j = 0; j < m; j++) {\n                    pt.print(arr[i][j]);\n                    pt.print(\" \");\n                }\n                pt.println();\n            }\n            pt.println();\n        }\n\n        static void print2Arr(long[][] arr, int n, int m) {\n            for (int i = 0; i < n; i++) {\n                for (int j = 0; j < m; j++) {\n                    pt.print(arr[i][j]);\n                    pt.print(\" \");\n                }\n                pt.println();\n            }\n            pt.println();\n        }\n\n        static List<Long> readListLong(int n) {\n            List<Long> list = new ArrayList<>(n);\n            for (int i = 0; i < n; i++) {\n                list.add(nextLong());\n            }\n            return list;\n        }\n\n        static List<Integer> readListInt(int n) {\n            List<Integer> list = new ArrayList<>(n);\n            for (int i = 0; i < n; i++) {\n                list.add(nextInt());\n            }\n            return list;\n        }\n\n        static <T> void printList(List<T> list) {\n            for (T value : list) {\n                pt.print(value);\n                pt.print(\" \");\n            }\n            pt.println();\n        }\n\n        static void close() {\n            pt.close();\n        }\n\n        static long nextLong() {\n            return Long.parseLong(next());\n        }\n    }\n\n    static class Pair<T, K> {\n        T first;\n        K second;\n\n        public Pair(T first, K second) {\n            this.first = first;\n            this.second = second;\n        }\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "\ndef calculate(game):\n    if not game:\n        return 0\n    su = 1 if game[0] == 'W' else 0\n    prev = game[0]\n\n    for g in game[1:]:\n        if g == 'W':\n            su += 2 if prev == 'W' else 1\n            prev = 'W'\n        else:\n            prev = 'L'\n\n    return su\n\n\nfor t in range(int(input())):\n    n, k = map(int, input().split())\n    games = input()\n    gaps = list(map(len, games.split(('W'))))\n    front_end = []\n    bonus = 0\n\n    if len(gaps):\n        front_end.append(gaps.pop(0))\n\n    if len(gaps):\n        front_end.append(gaps.pop())\n    else:\n        bonus = -1 if k else 0\n\n    front_end = [f for f in front_end if f]\n    front_end.sort()\n    gaps = [g for g in gaps if g]\n    gaps.sort()\n\n    while k:\n        midgap = 0\n        if gaps:\n            top = gaps.pop(0)\n            midgap = 1\n        elif front_end:\n            top = front_end.pop(0)\n        else:\n            break\n\n        if top > k:\n            bonus += k*2\n            k = 0\n        else:\n            bonus += top*2 + midgap\n            k -= top\n\n\n    print(calculate(games) + bonus)\n"
        },
        {
            "language": 3,
            "solution": "'''\n     |\\_/|                  \n     | @ @   Woof! \n     |   <>              _  \n     |  _/\\------____ ((| |))\n     |               `--' |   \n ____|_       ___|   |___.' \n/_/_____/____/_______|\n\nI am here to gaurd this code, woof!\n\n'''\n\nfrom sys import stdin, stdout\nfrom math import ceil, floor, sqrt, log, log2, log10\nfrom collections import Counter\n\ninput = stdin.readline\n\ndef solve():\n    pass\n\nt = int(input())\nfor _ in range(t):\n    n, k = map(int, input().split())\n    s = input().strip()\n    curr = n + 100\n    streaks = []\n    out = 0\n    wins = k\n    \n    for i in range(n-1):\n        if s[i] == 'W' and s[i+1] == 'W':\n            out += 1\n            \n    for c in s:\n        if c == 'W':\n            streaks.append(curr)\n            curr = 0\n            out += 1\n            wins += 1\n        else:\n            curr += 1\n            \n    streaks.sort()\n    out += 2 * k\n    for v in streaks:\n        if v > 0 and v <= k:\n            k -= v\n            out += 1\n \n    print(min([2 * n - 1,out,max(0,2 * wins - 1)]))"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n,k=map(int,input().split())\n    a=list(input())\n    f=False\n    loss=0\n    arr=[]\n    start=0\n    last=0\n    ans=0    \n    if n==a.count(\"L\") and k>0:\n        ans-=1\n    for i in range(n):\n        if a[i]=='W':\n            f=True\n            \n        if f and i>0:\n            if a[i]==\"L\" and a[i-1]==\"L\":\n                loss+=1\n            elif a[i]==\"L\":\n                loss=1\n            elif loss!=0:\n                arr.append(loss)\n                loss=0\n    if loss!=0:\n        arr.append(loss)    \n    if a[-1]!=\"W\" and len(arr)>0:\n        last=arr.pop()\n    for i in range(n):\n        if a[i]==\"L\":\n            start+=1\n        else:\n            break\n    arr.sort()\n    if a[0]==\"W\":\n        ans+=1\n    for i in range(1,n):\n        if a[i]==a[i-1] and a[i]==\"W\":\n            ans+=2\n        elif a[i]==\"W\":\n            ans+=1\n            \n    for i in arr:\n        if k-i>=0:\n            ans+=(i)*2\n            ans+=1\n            k-=i\n        else:\n            ans+=k*2\n            k=0\n        \n    start,last=min(start,last),max(start,last)\n    if k-start>=0:\n        k-=start\n        ans+=(start*2)\n    else:\n        ans+=k*2\n        k=0\n        \n    if k-last>=0:\n        k-=last\n        ans+=(last*2)\n    else:\n        ans+=k*2\n        k=0\n    \n    print(ans)    \n                \n            "
        },
        {
            "language": 3,
            "solution": "if __name__ == '__main__':\n    t = int(input())\n    tag = []\n    for i in range(t):\n        n, k = map(int, input().split())\n        s = input()\n        cur, ans = k + 5, 0\n        tag.clear()\n        for j in range(n):\n            if s[j] == 'L':\n                cur += 1\n            else:\n                ans += 1 if cur > 0 else 2\n                if cur > 0:\n                    tag.append(cur)\n                cur = 0\n\n        if cur == k + n + 5:\n            print(max(0, 2 * min(k, n) - 1))\n            continue\n\n        tag.sort()\n        for j in range(len(tag)):\n            if k >= tag[j]:\n                ans = ans + 2 * tag[j]\n                ans += 1\n                k -= tag[j]\n\n        ans += 2 * k\n        ans = min(ans, 2 * n - 1)\n        print(ans)\n\n\t\t \t\t \t\t      \t\t\t    \t  \t\t \t"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long M = 1e5 + 5;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  int t;\n  cin >> t;\n  while (t--) {\n    int n, k;\n    cin >> n >> k;\n    string s;\n    cin >> s;\n    int beg = 0;\n    int end = 0;\n    int mv = 0;\n    while (mv < n && s[mv] == 'L') {\n      mv++;\n      beg++;\n    }\n    mv = n - 1;\n    while (mv >= 0 && s[mv] == 'L') {\n      mv--;\n      end++;\n    }\n    vector<pair<int, pair<int, int> > > len;\n    int i = beg;\n    while (i < n - end) {\n      if (s[i] == 'W') {\n        i++;\n        continue;\n      }\n      int shuru = i;\n      while (i < n - end && s[i] == 'L') i++;\n      int khatm = i - 1;\n      len.push_back(make_pair(khatm - shuru + 1, make_pair(shuru, khatm)));\n    }\n    sort(len.begin(), len.end());\n    if (beg >= end) {\n      len.push_back(make_pair(beg, make_pair(0, beg - 1)));\n      len.push_back(make_pair(end, make_pair(n - end, n - 1)));\n    } else {\n      len.push_back(make_pair(end, make_pair(n - end, n - 1)));\n      len.push_back(make_pair(beg, make_pair(0, beg - 1)));\n    }\n    for (i = 0; i < len.size(); i++) {\n      if (k >= len[i].first) {\n        k -= len[i].first;\n        if (len[i].second.first != 0) {\n          for (int j = len[i].second.first; j <= len[i].second.second; j++)\n            s[j] = 'W';\n        } else {\n          for (int j = len[i].second.second; j >= len[i].second.first; j--)\n            s[j] = 'W';\n        }\n      } else {\n        if (len[i].second.first != 0) {\n          for (int j = len[i].second.first; j <= len[i].second.second; j++) {\n            if (k == 0) break;\n            s[j] = 'W';\n            k--;\n          }\n          break;\n        } else {\n          for (int j = len[i].second.second; j >= len[i].second.first; j--) {\n            if (k == 0) break;\n            s[j] = 'W';\n            k--;\n          }\n          break;\n        }\n      }\n    }\n    int ans = 0;\n    i = 0;\n    while (i < n) {\n      if (s[i] == 'L') {\n        i++;\n        continue;\n      }\n      int ct = 0;\n      while (s[i] == 'W') {\n        ct++;\n        i++;\n      }\n      ans += 1 + (ct - 1) * 2;\n    }\n    cout << ans << '\\n';\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "//make sure to make new file!\nimport java.io.*;\nimport java.util.*;\n\npublic class BG11{\n   \n   public static void main(String[] args)throws IOException{\n      BufferedReader f = new BufferedReader(new InputStreamReader(System.in));\n      PrintWriter out = new PrintWriter(System.out);\n      \n      int t = Integer.parseInt(f.readLine());\n      \n      for(int q = 1; q <= t; q++){\n      \n         StringTokenizer st = new StringTokenizer(f.readLine());\n      \n         int n = Integer.parseInt(st.nextToken());\n         int m = Integer.parseInt(st.nextToken());\n         \n         char[] array = f.readLine().toCharArray();\n         \n         \n         int score = 0;\n         int numl = 0;\n         for(int k = 0; k < n; k++){\n            if(array[k] == 'W'){\n               score++;\n               if(k > 0 && array[k-1] == 'W') score++;\n            } else numl++;\n            \n            \n         }\n         \n         if(m == 0){\n            out.println(score);\n            continue;\n         }\n         \n         if(score == 0){\n            int answer = (m-1)*2+1;\n            out.println(answer);\n            continue;\n         }   \n         \n         m = Math.min(m,numl);\n         //fill in as many middle gaps as you can\n         PriorityQueue<Integer> pq = new PriorityQueue<Integer>();\n         int start = 0;\n         for(int k = 0; k < n; k++){\n            if(array[k] == 'W'){\n               if(start != 0 && start != k) pq.add(k-start);\n               start = k+1;\n            }\n         }\n         \n         while(!pq.isEmpty()){\n            int i = pq.poll();\n            if(i <= m){\n               score += i*2+1;\n            } else {\n               break;\n            }\n            m-=i;\n         }\n         \n         score += 2*m;\n         out.println(score);\n      }\n      \n      \n      \n      \n      out.close();\n   }\n   \n      \n}"
        },
        {
            "language": 3,
            "solution": "def solve():\n    x, y = map(int, input().split())\n    s = list(input())\n\n    v = []\n    ind = -1\n    ct = 0\n    st = 0\n    for n in range(len(s)):\n        if s[n] == 'L':\n            if st:\n                if ind == -1:\n                    ind = n\n                ct += 1\n        else:\n            if ct:\n                v.append([ct, ind])\n                ct = 0\n                ind = -1\n            st = 1\n    v.sort(key=lambda x: x[0])\n\n    for n in v:\n        for k in range(n[1], n[1]+n[0]):\n            if y:\n                s[k] = 'W'\n                y -= 1\n    id = 0\n    for n in range(x):\n        if s[n] == 'L':\n            id += 1\n        if s[n] == 'W':\n            break\n    id -= 1\n    while id >= 0 and y:\n        s[id] = 'W'\n        id -= 1\n        y -= 1\n    id = x-1\n    while s[id] == 'L' and id > 0:\n        id -= 1\n    id += 1\n    while id < x and y:\n        s[id] = 'W'\n        id += 1\n        y -= 1\n\n    res = 0\n    st = 0\n    for n in s:\n        if n == 'W':\n            if st == 0:\n                res += 1\n                st = 1\n            else:\n                res += 2\n        else:\n            st = 0\n    print(res)\n\n\nfor _ in range(int(input())):\n    solve()\n"
        },
        {
            "language": 3,
            "solution": "\ndef calculate(game):\n    if not game:\n        return 0\n    su = 1 if game[0] == 'W' else 0\n    prev = game[0]\n\n    for g in game[1:]:\n        if g == 'W':\n            su += 2 if prev == 'W' else 1\n            prev = 'W'\n        else:\n            prev = 'L'\n\n    return su\n\n\nfor t in range(int(input())):\n    n, k = map(int, input().split())\n    games = input()\n    gaps = list(map(len, games.split(('W'))))\n    front_end = []\n    bonus = 0\n\n    if len(gaps):\n        front_end.append(gaps.pop(0))\n\n    if len(gaps):\n        front_end.append(gaps.pop())\n    else:\n        bonus = -1 if k else 0\n\n    front_end = [f for f in front_end if f]\n    front_end.sort()\n    gaps = [g for g in gaps if g]\n    gaps.sort()\n\n    while k:\n        if not gaps:\n            if not front_end:\n                break\n\n            top = front_end.pop(0)\n            if top > k:\n                bonus += k*2\n                k = 0\n            else:\n                bonus += top*2\n                k -= top\n\n        else:\n            top = gaps.pop(0)\n\n            if top > k:\n                bonus += k*2\n                k = 0\n            else:\n                bonus += top*2 + 1\n                k -= top\n\n    print(calculate(games) + bonus)\n"
        },
        {
            "language": 3,
            "solution": "for i in range(int(input())):\n    n, k = map(int, input().split())\n    s = input()\n    wins = s.count('W') + k\n    if wins >= n:\n        print(2 * n - 1)\n    else:\n        streaks = int(s[0] == 'W') + s.count('LW') or int(wins > 0)\n        gaps = s.strip('L').replace('W', ' ').strip().split()\n        for g in sorted(map(len, gaps)):\n            if g > k:\n                break\n            k -= g\n            streaks -= 1\n        print(wins * 2 - streaks)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 2e5 + 7;\nconst int mod = 1e9 + 7;\nconst long long INF = 1e18;\nvector<int> a;\nchar s[maxn];\nvoid rua() {\n  int n, m, k = 0, ans = 0;\n  scanf(\"%d%d\", &n, &m);\n  a.clear();\n  scanf(\"%s\", s + 1);\n  for (int i = 1; i <= n; i++)\n    if (s[i] == 'L') k++;\n  m = min(m, k);\n  int ol = 0, ow = 0, ff = 0;\n  for (int i = 1; i <= n; i++) {\n    if (s[i] == 'L') {\n      ol++;\n      if (s[i - 1] == 'W') {\n        ans += 2 * ow - 1;\n        ow = 0;\n      }\n    } else {\n      ow++;\n      if (s[i - 1] == 'L') {\n        if (ff) a.push_back(ol);\n        ol = 0;\n      }\n      ff = 1;\n    }\n  }\n  if (ow) ans += 2 * ow - 1;\n  sort(a.begin(), a.end());\n  for (auto x : a) {\n    if (m < x) {\n      ans += 2 * m;\n      m = 0;\n      break;\n    }\n    ans += 2 * x + 1;\n    m -= x;\n  }\n  if (m) {\n    ans += 2 * m;\n    if (!ff) ans--;\n  }\n  printf(\"%d\\n\", ans);\n}\nint main() {\n  int t;\n  scanf(\"%d\", &t);\n  while (t--) rua();\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.lang.*;\nimport java.io.*;\n\npublic class Main\n{\n\tpublic static void main (String[] args)\n\t{\n    \tScanner sc=new Scanner(System.in);\n    \tint t=sc.nextInt();\n    \touter:\n    \tfor(int z=0;z<t;z++)\n    \t{\n    \t    int n=sc.nextInt();\n    \t    int k=sc.nextInt();\n    \t    String str=sc.next();\n    \t    int f=str.indexOf(\"W\");\n    \t    if(f==-1)\n    \t    {\n    \t        int score1=Math.min(k,n)*2-1;\n    \t        if(k==0)\n    \t            score1=0;\n    \t        System.out.println(score1);\n    \t        continue outer;\n    \t    }\n    \t    int l=str.lastIndexOf(\"W\");\n    \t    int gap[]=new int[n];\n    \t    int j=0;\n    \t    boolean flag=false;\n    \t    int score=0;\n    \t    for(int i=f;i<=l;i++)\n    \t    {\n    \t        if(str.charAt(i)=='W')\n    \t            {\n    \t                if(flag==false)\n    \t                    score+=1;\n    \t                else\n    \t                    score+=2;\n    \t                flag=true;\n    \t            }\n    \t        else\n    \t            flag=false;\n    \t        if(str.charAt(i)=='L')\n    \t            gap[j]+=1;\n    \t        else\n    \t        {\n    \t            if(gap[j]!=0)\n    \t            j++;\n    \t        }\n    \t    }\n    \t    Arrays.sort(gap);\n    \t    inner:\n    \t    for(int i=0;i<n;i++)\n    \t    {\n    \t        if(gap[i]==0)\n    \t            continue inner;\n    \t        if(gap[i]<=k)\n    \t        {\n    \t            score+=gap[i]*2 +1;\n    \t            k-=gap[i];\n    \t        }\n    \t        else\n    \t        {\n    \t            score+=k*2;\n    \t            k=0;\n    \t            break inner;\n    \t        }\n    \t    }\n    \t    score+=Math.min((f+n-l-1),k)*2;\n    \t    System.out.println(score);\n    \t}\n    \t\n\t}\n}\n"
        },
        {
            "language": 1,
            "solution": "for _ in range(input()):\n    n,k=map(int,raw_input().split())\n    s=raw_input()\n    curscore=0\n    pos=[]\n    w=0\n    if s[0]==\"W\":\n        curscore+=1\n        pos.append(0)\n        w+=1\n    for i in range(1,n):\n        if s[i]==\"W\":\n            if s[i-1]==\"W\":\n                curscore+=2\n            else:\n                curscore+=1\n            pos.append(i)\n            w+=1\n    if k==0:\n        print curscore\n        continue\n    if k>=n-w:\n        print 2*n-1\n        continue\n    if w==0:\n        print 2*k-1\n        continue\n    dif=[]\n    for i in range(1,len(pos)):\n        dif.append(pos[i]-pos[i-1])\n    dif.sort()\n    for i in range(len(dif)):\n        if dif[i]==1:\n            continue\n        el=dif[i]-1\n        if el<=k:\n            k-=el\n            curscore+=2*(el)+1\n            w+=el\n        else:\n            break\n\n    curscore+=2*k\n    print curscore\n\n\n"
        },
        {
            "language": 3,
            "solution": "\ndef solve():\n    n, k = map(int, input().split())\n    s = input()\n\n    wn = 0\n    for c in s:\n        if c == 'W':\n            wn += 1\n\n    ln = 0\n    c = 0\n    while c < n and s[c] == 'L':\n        c += 1\n        ln += 1\n    a = c\n\n    c = len(s) - 1\n    ln = 0\n    while c >= 0 and s[c] == 'L':\n        c -= 1\n        ln += 1\n    b = c\n    \n    ln = 0\n    d = [ 0 for _ in range(n) ]\n    for i in range(a, b + 1):\n        if s[i] == 'L':\n            ln += 1\n        else:\n            d[ln] += 1\n            ln = 0\n\n    ls = 0\n    K = k\n    for i in range(1, len(d)):\n        mn = min(k // i, d[i])\n        ls += d[i] - mn\n        k = k - mn * i\n\n    score = 2*min(n, wn + K) - (ls + 1)\n    score = max(0, score)\n    print(score)\n\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        solve()\n\n\n\nmain()\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n,k = list(map(int,input().split()))\n    arr = list(input())\n    last = False\n    tot = 0\n    for i in range(n):\n        if arr[i] == \"W\":\n            if last:\n                tot+=2\n            else:\n                tot+=1\n                last = True\n        else:\n            last = False\n    globalFlag = tot > 0\n    dists = []\n    last = -1\n    flag = False\n\n    prefix = 0\n    sufix = 0\n\n    for i in range(n):\n        if not flag:\n            if arr[i] == \"W\":\n                prefix = i\n                last = i\n                flag = True\n        else:\n            if arr[i] == \"W\":\n                if i-last>1:\n                    dists.append(i-last-1)\n                last = i\n    sufix = n-last-1\n    if not flag:\n        sufix = n\n\n    dists.sort()\n    # print(dists,prefix,sufix)\n    for i in range(len(dists)):\n        canAtThis = min(k,dists[i])\n        if k == 0:\n            break\n        if k >= dists[i]:\n            tot+=2*canAtThis+1\n            k-=canAtThis\n        else:\n            tot+=2*canAtThis\n            k-=canAtThis\n        if k == 0:\n            break\n\n    if k != 0 and sufix !=0 :\n        sufixGive = min(k,sufix)\n        # print(sufixGive)\n        tot+=1\n        tot+=sufixGive*2-1\n        k-=sufixGive\n        if not globalFlag:\n            tot-=1\n    if globalFlag:\n        if k!=0 and prefix!=0:\n            prefixGive = min(k,prefix)\n            tot+=prefixGive*2\n    print(tot)\n"
        },
        {
            "language": 4,
            "solution": "\n\nimport java.io.*;\nimport java.util.*;\nimport java.util.stream.IntStream;\n\nimport static java.lang.Math.*;\nimport static java.util.Arrays.*;\n\n@SuppressWarnings(\"ALL\")\npublic class TaskB {\n    public static void main(String[] $) throws IOException {\n        TaskB o = new TaskB();\n        o.main();\n        out.flush();\n        out.close();\n    }\n\n    void main() throws IOException {\n        int T = in.ri();\n        while (T-- > 0) {\n            in.r();\n            int N = in.ni();\n            int K = in.ni();\n            String s = in.rline();\n            /*int[] gaps = new int[N];\n            int nGaps = 0;\n            int wins = 0;\n            int curGap = 0;\n            for (int i = 0; i < N; i++) {\n                if (s.charAt(i) == 'W') {\n                    wins++;\n                    if (curGap != 0 && curGap != i) {\n                        gaps[nGaps++] = curGap;\n                    }\n                    curGap = 0;\n                } else {\n                    ++curGap;\n                }\n            }\n            if (wins + K == 0) {\n                out.prln(0);\n            } else if (wins + K >= N) {\n                out.prln((2 * N) - 1);\n            } else {\n                ssort(gaps, nGaps);\n                int closeGaps = 0;\n                while (closeGaps < nGaps && K >= gaps[closeGaps]) {\n                    K -= gaps[closeGaps];\n                    wins += gaps[closeGaps];\n                    ++closeGaps;\n                }\n                out.prln(2 * (wins + K) - 1 - (nGaps - closeGaps));\n            }*/\n            int wins = 0;\n            for (char ch : s.toCharArray()) {\n                if (ch == 'W') wins++;\n            }\n\n            if (wins == 0) {\n                out.prln(mathx.maxof(2 * K - 1, 0));\n                continue;\n            }\n            wins += K;\n\n            if (wins >= N) {\n                out.prln(2 * N - 1);\n                continue;\n            }\n\n            int loss = 0;\n            ArrayList<Integer> lossStreak = new ArrayList<>();\n            for (int i = 0; i < N; i++) {\n                if (s.charAt(i) == 'L') loss++;\n                else {\n                    lossStreak.add(loss);\n                    loss = 0;\n                }\n            }\n            if (loss != 0) lossStreak.add(loss);\n            if (s.charAt(0) == 'L') lossStreak.remove(0);\n            if (s.charAt(N - 1) == 'L') lossStreak.remove( lossStreak.size() - 1);\n            Collections.sort(lossStreak);\n            int sp = 0;\n            int i;\n            for (i = 0; i < lossStreak.size(); i++) {\n                if (sp + lossStreak.get(i) > K) {\n                    break;\n                }\n                sp += lossStreak.get(i);\n            }\n            int wl = lossStreak.size() - i;\n            out.prln(2 * wins - wl - 1);\n        }\n    }\n\n   /*static void ssort(int a[], int n) {\n        if (n == 0) {\n            return;\n        }\n        for (int i = 1; i < n; i++) {\n            int j = i;\n            int ca = a[i];\n            do {\n                int nj = (j - 1) >> 1;\n                int na = a[nj];\n                if (ca <= na) {\n                    break;\n                }\n                a[j] = na;\n                j = nj;\n            } while (j != 0);\n            a[j] = ca;\n        }\n        int ca = a[0];\n        for (int i = n - 1; i > 0; i--) {\n            int j = 0;\n            while ((j << 1) + 2 + Integer.MIN_VALUE < i + Integer.MIN_VALUE) {\n                j <<= 1;\n                j += (a[j + 2] > a[j + 1]) ? 2 : 1;\n            }\n            if ((j << 1) + 2 == i) {\n                j = (j << 1) + 1;\n            }\n            int na = a[i];\n            a[i] = ca;\n            ca = na;\n            while (j != 0 && a[j] < ca) {\n                j = (j - 1) >> 1;\n            }\n            while (j != 0) {\n                na = a[j];\n                a[j] = ca;\n                ca = na;\n                j = (j - 1) >> 1;\n            }\n        }\n        a[0] = ca;\n    }*/\n\n    static BufferedReader __in = new BufferedReader(new InputStreamReader(System.in));\n    static PrintWriter __out = new PrintWriter(new OutputStreamWriter(System.out));\n    static StringTokenizer input;\n    static Random __rand = new Random();\n    // constants\n    static final int IBIG = 1000000007;\n    static final int IMAX = 2147483647;\n    static final int IMIN = -2147483648;\n    static final long LMAX = 9223372036854775807L;\n    static final long LMIN = -9223372036854775808L;\n\n    //Fast Reader Class\n    /*static class FastReader {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public FastReader() {\n            br = new BufferedReader(new\n                    InputStreamReader(System.in));\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine() {\n            String str = \"\";\n            try {\n                str = br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n    }*/\n\n    //Input fxs\n    static class in {\n        // input\n        static void r() throws IOException {\n            input = new StringTokenizer(rline());\n        }\n\n        static int ri() throws IOException {\n            return Integer.parseInt(rline());\n        }\n\n        static long rl() throws IOException {\n            return Long.parseLong(rline());\n        }\n\n        static double rd() throws IOException {\n            return Double.parseDouble(rline());\n        }\n\n        static int[] ria(int n) throws IOException {\n            int[] a = new int[n];\n            r();\n            for (int i = 0; i < n; ++i) a[i] = ni();\n            return a;\n        }\n\n        static int[] riam1(int n) throws IOException {\n            int[] a = new int[n];\n            r();\n            for (int i = 0; i < n; ++i) a[i] = ni() - 1;\n            return a;\n        }\n\n        static long[] ria1i(long n) throws IOException {\n            long[] a = new long[(int) n + 1];\n            r();\n            for (int i = 1; i <= n; i++) a[i] = nl();\n            return a;\n        }\n\n        static long[] rla(int n) throws IOException {\n            long[] a = new long[n];\n            r();\n            for (int i = 0; i < n; ++i) a[i] = nl();\n            return a;\n        }\n\n        static double[] rda(int n) throws IOException {\n            double[] a = new double[n];\n            r();\n            for (int i = 0; i < n; ++i) a[i] = nd();\n            return a;\n        }\n\n        static char[] rcha() throws IOException {\n            return rline().toCharArray();\n        }\n\n        static ArrayList<Integer> riaa(int n) throws IOException {\n            ArrayList<Integer> a = new ArrayList<>();\n            r();\n            for (int i = 0; i < n; i++) a.add(ni());\n            return a;\n        }\n\n        static String rline() throws IOException {\n            return __in.readLine();\n        }\n\n        static String n() {\n            return input.nextToken();\n        }\n\n        static int rni() throws IOException {\n            r();\n            return ni();\n        }\n\n        static int ni() {\n            return Integer.parseInt(n());\n        }\n\n        static long rnl() throws IOException {\n            r();\n            return nl();\n        }\n\n        static long nl() {\n            return Long.parseLong(n());\n        }\n\n        static double rnd() throws IOException {\n            r();\n            return nd();\n        }\n\n        static double nd() {\n            return Double.parseDouble(n());\n        }\n\n        static List<List<Integer>> rg(int n, int m) throws IOException {\n            List<List<Integer>> g = GR.g(n);\n            for (int i = 0; i < m; ++i) GR.c(g, rni() - 1, ni() - 1);\n            return g;\n        }\n\n        static void rg(List<List<Integer>> g, int m) throws IOException {\n            for (int i = 0; i < m; ++i) GR.c(g, rni() - 1, ni() - 1);\n        }\n\n        static List<List<Integer>> rdg(int n, int m) throws IOException {\n            List<List<Integer>> g = GR.g(n);\n            for (int i = 0; i < m; ++i) GR.cto(g, rni() - 1, ni() - 1);\n            return g;\n        }\n\n        static void rdg(List<List<Integer>> g, int m) throws IOException {\n            for (int i = 0; i < m; ++i) GR.cto(g, rni() - 1, ni() - 1);\n        }\n\n        static List<Set<Integer>> rsg(int n, int m) throws IOException {\n            List<Set<Integer>> g = GR.sg(n);\n            for (int i = 0; i < m; ++i) GR.c(g, rni() - 1, ni() - 1);\n            return g;\n        }\n\n        static void rsg(List<Set<Integer>> g, int m) throws IOException {\n            for (int i = 0; i < m; ++i) GR.c(g, rni() - 1, ni() - 1);\n        }\n\n        static List<Set<Integer>> rdsg(int n, int m) throws IOException {\n            List<Set<Integer>> g = GR.sg(n);\n            for (int i = 0; i < m; ++i) GR.cto(g, rni() - 1, ni() - 1);\n            return g;\n        }\n\n        static void rdsg(List<Set<Integer>> g, int m) throws IOException {\n            for (int i = 0; i < m; ++i) GR.cto(g, rni() - 1, ni() - 1);\n        }\n\n        static int[][] rim(int n, int m) throws IOException {\n            int[][] a = new int[n][m];\n            for (int i = 0; i < n; i++) {\n                in.r();\n                for (int j = 0; j < m; j++) {\n                    a[i][j] = in.ni();\n                }\n            }\n            return a;\n        }\n    }\n\n    //Output fxs\n    static class out {\n        // output\n        static void pr(int i) {\n            __out.print(i);\n        }\n\n        static void prln(int i) {\n            __out.println(i);\n        }\n\n        static void pr(long l) {\n            __out.print(l);\n        }\n\n        static void prln(long l) {\n            __out.println(l);\n        }\n\n        static void pr(double d) {\n            __out.print(d);\n        }\n\n        static void prln(double d) {\n            __out.println(d);\n        }\n\n        static void pr(char c) {\n            __out.print(c);\n        }\n\n        static void prln(char c) {\n            __out.println(c);\n        }\n\n        static void pr(char[] s) {\n            __out.print(new String(s));\n        }\n\n        static void prln(char[] s) {\n            __out.println(new String(s));\n        }\n\n        static void pr(String s) {\n            __out.print(s);\n        }\n\n        static void prln(String s) {\n            __out.println(s);\n        }\n\n        static void pr(Object o) {\n            __out.print(o);\n        }\n\n        static void prln(Object o) {\n            __out.println(o);\n        }\n\n        static void prln() {\n            __out.println();\n        }\n\n        static void pryes() {\n            prln(\"yes\");\n        }\n\n        static void pry() {\n            prln(\"Yes\");\n        }\n\n        static void prY() {\n            prln(\"YES\");\n        }\n\n        static void prno() {\n            prln(\"no\");\n        }\n\n        static void prn() {\n            prln(\"No\");\n        }\n\n        static void prN() {\n            prln(\"NO\");\n        }\n\n        static void pryesno(boolean b) {\n            prln(b ? \"yes\" : \"no\");\n        }\n\n        ;\n\n        static void pryn(boolean b) {\n            prln(b ? \"Yes\" : \"No\");\n        }\n\n        static void prYN(boolean b) {\n            prln(b ? \"YES\" : \"NO\");\n        }\n\n        static void prln(int... a) {\n            for (int i = 0, len = a.length - 1; i < len; pr(a[i]), pr(' '), ++i) ;\n            if (a.length > 0) prln(a[a.length - 1]);\n            else prln();\n        }\n\n        static void prln(long... a) {\n            for (int i = 0, len = a.length - 1; i < len; pr(a[i]), pr(' '), ++i) ;\n            if (a.length > 0) prln(a[a.length - 1]);\n            else prln();\n        }\n\n        static void prln(double... a) {\n            for (int i = 0, len = a.length - 1; i < len; pr(a[i]), pr(' '), ++i) ;\n            if (a.length > 0) prln(a[a.length - 1]);\n            else prln();\n        }\n\n        static <T> void prln(Collection<T> c) {\n            int n = c.size() - 1;\n            Iterator<T> iter = c.iterator();\n            for (int i = 0; i < n; pr(iter.next()), pr(' '), ++i) ;\n            if (n >= 0) prln(iter.next());\n            else prln();\n        }\n\n        static void h() {\n            prln(\"hlfd\");\n            flush();\n        }\n\n        static void flush() {\n            __out.flush();\n        }\n\n        static void close() {\n            __out.close();\n        }\n\n        static void prM(int[][] a, int n, int m) {\n            for (int i = 0; i < m; i++) {\n                for (int j = 0; j < n; j++)\n                    out.pr(a[i][j] + \" \");\n                out.prln();\n            }\n        }\n    }\n\n    //Math fxs\n    static class mathx {\n        // math util\n        static int minof(int a, int b, int c) {\n            return min(a, min(b, c));\n        }\n\n        static int minof(int... x) {\n            if (x.length == 1) return x[0];\n            if (x.length == 2) return min(x[0], x[1]);\n            if (x.length == 3) return min(x[0], min(x[1], x[2]));\n            int min = x[0];\n            for (int i = 1; i < x.length; ++i) if (x[i] < min) min = x[i];\n            return min;\n        }\n\n        static long minof(long a, long b, long c) {\n            return min(a, min(b, c));\n        }\n\n        static long minof(long... x) {\n            if (x.length == 1) return x[0];\n            if (x.length == 2) return min(x[0], x[1]);\n            if (x.length == 3) return min(x[0], min(x[1], x[2]));\n            long min = x[0];\n            for (int i = 1; i < x.length; ++i) if (x[i] < min) min = x[i];\n            return min;\n        }\n\n        static int maxof(int a, int b, int c) {\n            return max(a, max(b, c));\n        }\n\n        static int maxof(int... x) {\n            if (x.length == 1) return x[0];\n            if (x.length == 2) return max(x[0], x[1]);\n            if (x.length == 3) return max(x[0], max(x[1], x[2]));\n            int max = x[0];\n            for (int i = 1; i < x.length; ++i) if (x[i] > max) max = x[i];\n            return max;\n        }\n\n        static long maxof(long a, long b, long c) {\n            return max(a, max(b, c));\n        }\n\n        static long maxof(long... x) {\n            if (x.length == 1) return x[0];\n            if (x.length == 2) return max(x[0], x[1]);\n            if (x.length == 3) return max(x[0], max(x[1], x[2]));\n            long max = x[0];\n            for (int i = 1; i < x.length; ++i) if (x[i] > max) max = x[i];\n            return max;\n        }\n\n        static int powi(int a, int b) {\n            if (a == 0) return 0;\n            int ans = 1;\n            while (b > 0) {\n                if ((b & 1) > 0) ans *= a;\n                a *= a;\n                b >>= 1;\n            }\n            return ans;\n        }\n\n        static long powl(long a, int b) {\n            if (a == 0) return 0;\n            long ans = 1;\n            while (b > 0) {\n                if ((b & 1) > 0) ans *= a;\n                a *= a;\n                b >>= 1;\n            }\n            return ans;\n        }\n\n        static int fli(double d) {\n            return (int) d;\n        }\n\n        static int cei(double d) {\n            return (int) ceil(d);\n        }\n\n        static long fll(double d) {\n            return (long) d;\n        }\n\n        static long cel(double d) {\n            return (long) ceil(d);\n        }\n\n        static int gcf(int a, int b) {\n            return b == 0 ? a : gcf(b, a % b);\n        }\n\n        static long gcf(long a, long b) {\n            return b == 0 ? a : gcf(b, a % b);\n        }\n\n        static int lcm(int a, int b) {\n            return a * b / gcf(a, b);\n        }\n\n        static long lcm(long a, long b) {\n            return a * b / gcf(a, b);\n        }\n\n        static int randInt(int min, int max) {\n            return __rand.nextInt(max - min + 1) + min;\n        }\n\n        static long mix(long x) {\n            x += 0x9e3779b97f4a7c15L;\n            x = (x ^ (x >> 30)) * 0xbf58476d1ce4e5b9L;\n            x = (x ^ (x >> 27)) * 0x94d049bb133111ebL;\n            return x ^ (x >> 31);\n        }\n    }\n\n    //Array fxs\n    static class ARR {\n        // array util\n        static void reverse(int[] a) {\n            for (int i = 0, n = a.length, half = n / 2; i < half; ++i) {\n                int swap = a[i];\n                a[i] = a[n - i - 1];\n                a[n - i - 1] = swap;\n            }\n        }\n\n        static void reverse(long[] a) {\n            for (int i = 0, n = a.length, half = n / 2; i < half; ++i) {\n                long swap = a[i];\n                a[i] = a[n - i - 1];\n                a[n - i - 1] = swap;\n            }\n        }\n\n        static void reverse(double[] a) {\n            for (int i = 0, n = a.length, half = n / 2; i < half; ++i) {\n                double swap = a[i];\n                a[i] = a[n - i - 1];\n                a[n - i - 1] = swap;\n            }\n        }\n\n        static void reverse(char[] a) {\n            for (int i = 0, n = a.length, half = n / 2; i < half; ++i) {\n                char swap = a[i];\n                a[i] = a[n - i - 1];\n                a[n - i - 1] = swap;\n            }\n        }\n\n        static void shuffle(int[] a) {\n            int n = a.length - 1;\n            for (int i = 0; i < n; ++i) {\n                int ind = mathx.randInt(i, n);\n                int swap = a[i];\n                a[i] = a[ind];\n                a[ind] = swap;\n            }\n        }\n\n        static void shuffle(long[] a) {\n            int n = a.length - 1;\n            for (int i = 0; i < n; ++i) {\n                int ind = mathx.randInt(i, n);\n                long swap = a[i];\n                a[i] = a[ind];\n                a[ind] = swap;\n            }\n        }\n\n        static void shuffle(double[] a) {\n            int n = a.length - 1;\n            for (int i = 0; i < n; ++i) {\n                int ind = mathx.randInt(i, n);\n                double swap = a[i];\n                a[i] = a[ind];\n                a[ind] = swap;\n            }\n        }\n\n        static void rsort(int[] a) {\n            shuffle(a);\n            sort(a);\n        }\n\n        static void rsort(long[] a) {\n            shuffle(a);\n            sort(a);\n        }\n\n        static void rsort(double[] a) {\n            shuffle(a);\n            sort(a);\n        }\n\n        static int[] copy(int[] a) {\n            int[] ans = new int[a.length];\n            System.arraycopy(a, 0, ans, 0, a.length);\n            return ans;\n        }\n\n        static long[] copy(long[] a) {\n            long[] ans = new long[a.length];\n            System.arraycopy(a, 0, ans, 0, a.length);\n            return ans;\n        }\n\n        static double[] copy(double[] a) {\n            double[] ans = new double[a.length];\n            System.arraycopy(a, 0, ans, 0, a.length);\n            return ans;\n        }\n\n        static char[] copy(char[] a) {\n            char[] ans = new char[a.length];\n            System.arraycopy(a, 0, ans, 0, a.length);\n            return ans;\n        }\n    }\n\n    //Graph fxs\n    static class GR {\n        // graph util\n        static List<List<Integer>> g(int n) {\n            List<List<Integer>> g = new ArrayList<>();\n            for (int i = 0; i < n; ++i) g.add(new ArrayList<>());\n            return g;\n        }\n\n        static List<Set<Integer>> sg(int n) {\n            List<Set<Integer>> g = new ArrayList<>();\n            for (int i = 0; i < n; ++i) g.add(new HashSet<>());\n            return g;\n        }\n\n        static void c(List<? extends Collection<Integer>> g, int u, int v) {\n            g.get(u).add(v);\n            g.get(v).add(u);\n        }\n\n        static void cto(List<? extends Collection<Integer>> g, int u, int v) {\n            g.get(u).add(v);\n        }\n\n        static void dc(List<? extends Collection<Integer>> g, int u, int v) {\n            g.get(u).remove(v);\n            g.get(v).remove(u);\n        }\n\n        static void dcto(List<? extends Collection<Integer>> g, int u, int v) {\n            g.get(u).remove(v);\n        }\n    }\n\n    //Utilsx class\n    static class utilX {\n        static int[] subsetSum(int[] nums) {\n            int M = IntStream.of(nums).sum();\n            int[] m = new int[M + 10];\n            for (int i = 0; i < M + 10; i++) m[i] = 0;\n            m[0] = 1;\n            for (int num : nums) {\n                for (int j = M; j >= num; j--) {\n                    m[j] |= m[j - num];\n                }\n            }\n            return m;\n        }\n\n        static int LIS(int[] nums) {\n            int[] m = new int[nums.length];\n            for (int i = nums.length - 1; i >= 0; i--) {\n                m[i] = 1;\n                for (int j = i + 1; j < nums.length; j++) {\n                    if (nums[j] > nums[i]) {\n                        m[i] = max(m[i], m[j] + 1);\n                    }\n                }\n            }\n            int ans = 0;\n            for (int i = 0; i < nums.length; i++) {\n                ans = max(ans, m[i]);\n            }\n            return ans;\n        }\n    }\n\n    //Pair Class\n    static class Pair<F, S> {\n        public final F first;\n        public final S second;\n\n        public Pair(F first, S second) {\n            this.first = first;\n            this.second = second;\n        }\n\n        @Override\n        public boolean equals(Object o) {\n            if (!(o instanceof Pair)) {\n                return false;\n            }\n            Pair<?, ?> p = (Pair<?, ?>) o;\n            return Objects.equals(p.first, first) && Objects.equals(p.second, second);\n        }\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "\n/**\n * Date: 10 Oct, 2020\n * Link: https://codeforces.com/contest/1427/problem/B\n * \n * @author: Prasad Chaudhari\n * @linkedIn: https://www.linkedin.com/in/prasad-chaudhari-841655a6/\n * @git: https://github.com/Prasad-Chaudhari\n */\nimport java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.OutputStreamWriter;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.LinkedList;\nimport java.util.List;\n\npublic class B_1427 {\n\n    public static void main(String[] args) throws IOException {\n        FastIO in = new FastIO(args);\n        int t = in.ni();\n        while (t-- > 0) {\n            int n = in.ni();\n            int k = in.ni();\n            char c[] = in.next().toCharArray();\n            int start = -1;\n            int ending = n - 1;\n            for (int i = 0; i < n; i++) {\n                if (c[i] == 'W') {\n                    start = i;\n                    break;\n                }\n            }\n            for (int i = n - 1; i >= 0; i--) {\n                if (c[i] == 'W') {\n                    ending = i;\n                    break;\n                }\n            }\n            if (start == -1) {\n                if (k == 0)\n                    System.out.println(0);\n                else\n                    System.out.println(2 * (k - 1) + 1);\n            } else {\n                int end = 0;\n                int count = 0;\n                LinkedList<int[]> l = new LinkedList<>();\n                for (int i = start; i <= ending; i++) {\n                    if (c[i] == 'W') {\n                        if (count != 0) {\n                            l.add(new int[] { end, count });\n                        }\n                        count = 0;\n                    } else {\n                        end = i;\n                        count++;\n                    }\n                }\n                if (count != 0) {\n                    l.add(new int[] { end, count });\n                }\n                Collections.sort(l, new Comparator<int[]>() {\n                    @Override\n                    public int compare(int[] a, int[] b) {\n                        if (a[1] == b[1]) {\n                            return Integer.compare(a[0], b[0]);\n                        }\n                        return Integer.compare(a[1], b[1]);\n                    }\n                });\n                int ans = 0;\n                for (int i = 0; i < n; i++) {\n                    if (c[i] == 'W') {\n                        if (i != 0) {\n                            if (c[i - 1] == 'W')\n                                ans += 2;\n                            else\n                                ans += 1;\n                        } else\n                            ans += 1;\n                    }\n                }\n                while (k > 0 && !l.isEmpty()) {\n                    int[] set = l.remove();\n                    // System.out.println(set[0]);\n                    if (set[1] <= k) {\n                        ans += set[1] * 2 + (set[0] == n - 1 ? 0 : 1);\n                        k -= set[1];\n                    } else if (k > 0) {\n                        ans += k * 2;\n                        k = 0;\n                    }\n                }\n                int r = Math.min(k, n - ending - 1);\n                ans += 2 * r;\n                k -= r;\n                ans += Math.min(k, start) * 2;\n                System.out.println(ans);\n            }\n        }\n        in.bw.flush();\n    }\n\n    static class Data implements Comparable<Data> {\n\n        int a, b;\n\n        public Data(int a, int b) {\n            this.a = a;\n            this.b = b;\n        }\n\n        @Override\n        public int compareTo(Data o) {\n            if (a == o.a) {\n                return Integer.compare(b, o.b);\n            }\n            return Integer.compare(a, o.a);\n        }\n\n        public static void sort(int a[]) {\n            Data d[] = new Data[a.length];\n            for (int i = 0; i < a.length; i++) {\n                d[i] = new Data(a[i], 0);\n            }\n            Arrays.sort(d);\n            for (int i = 0; i < a.length; i++) {\n                a[i] = d[i].a;\n            }\n        }\n    }\n\n    static class FastIO {\n\n        private final BufferedReader br;\n        private final BufferedWriter bw;\n        private String s[];\n        private int index;\n\n        public FastIO(String[] args) throws IOException {\n            if (args.length > 1) {\n                br = new BufferedReader(new InputStreamReader(new FileInputStream(new File(args[0]))));\n                bw = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(new File(args[1]))));\n            } else {\n                br = new BufferedReader(new InputStreamReader(System.in));\n                bw = new BufferedWriter(new OutputStreamWriter(System.out, \"UTF-8\"));\n            }\n            s = br.readLine().split(\" \");\n            index = 0;\n        }\n\n        public int ni() throws IOException {\n            return Integer.parseInt(nextToken());\n        }\n\n        public double nd() throws IOException {\n            return Double.parseDouble(nextToken());\n        }\n\n        public long nl() throws IOException {\n            return Long.parseLong(nextToken());\n        }\n\n        public String next() throws IOException {\n            return nextToken();\n        }\n\n        public String nli() throws IOException {\n            try {\n                return br.readLine();\n            } catch (IOException ex) {\n\n            }\n            return null;\n        }\n\n        public int[] gia(int n) throws IOException {\n            int a[] = new int[n];\n            for (int i = 0; i < n; i++) {\n                a[i] = ni();\n            }\n            return a;\n        }\n\n        public int[] gia(int n, int start, int end) throws IOException {\n            validate(n, start, end);\n            int a[] = new int[n];\n            for (int i = start; i < end; i++) {\n                a[i] = ni();\n            }\n            return a;\n        }\n\n        public double[] gda(int n) throws IOException {\n            double a[] = new double[n];\n            for (int i = 0; i < n; i++) {\n                a[i] = nd();\n            }\n            return a;\n        }\n\n        public double[] gda(int n, int start, int end) throws IOException {\n            validate(n, start, end);\n            double a[] = new double[n];\n            for (int i = start; i < end; i++) {\n                a[i] = nd();\n            }\n            return a;\n        }\n\n        public long[] gla(int n) throws IOException {\n            long a[] = new long[n];\n            for (int i = 0; i < n; i++) {\n                a[i] = nl();\n            }\n            return a;\n        }\n\n        public long[] gla(int n, int start, int end) throws IOException {\n            validate(n, start, end);\n            long a[] = new long[n];\n            for (int i = start; i < end; i++) {\n                a[i] = nl();\n            }\n            return a;\n        }\n\n        public void print(String s) throws IOException {\n            bw.write(s);\n        }\n\n        public void println(String s) throws IOException {\n            bw.write(s);\n            bw.newLine();\n        }\n\n        public void print(int s) throws IOException {\n            bw.write(s + \"\");\n        }\n\n        public void println(int s) throws IOException {\n            bw.write(s + \"\");\n            bw.newLine();\n        }\n\n        public void print(long s) throws IOException {\n            bw.write(s + \"\");\n        }\n\n        public void println(long s) throws IOException {\n            bw.write(s + \"\");\n            bw.newLine();\n        }\n\n        public void print(double s) throws IOException {\n            bw.write(s + \"\");\n        }\n\n        public void println(double s) throws IOException {\n            bw.write(s + \"\");\n            bw.newLine();\n        }\n\n        private String nextToken() throws IndexOutOfBoundsException, IOException {\n            if (index == s.length) {\n                s = br.readLine().split(\" \");\n                index = 0;\n            }\n            return s[index++];\n        }\n\n        private void validate(int n, int start, int end) {\n            if (start < 0 || end >= n) {\n                throw new IllegalArgumentException();\n            }\n        }\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "\n\nimport java.util.*;\nimport java.util.stream.Collectors;\n\npublic class B1427 {\n    private final static Scanner scanner = new Scanner(System.in);\n\n    private static int size;\n    private static int times;\n\n    public static void main(String[] args) {\n        int groups = scanner.nextInt();\n        for (int i = 0; i < groups; i++) {\n            inner();\n        }\n    }\n\n    private static void inner(){\n        size = scanner.nextInt();\n        times = scanner.nextInt();\n        String result = scanner.next();\n        char[] game = new char[size];\n        for (int i = 0; i < size; i++) {\n            game[i] = result.charAt(i);\n        }\n        int lostNum = result.replace(\"W\", \"\").length();\n        if (times == 0){\n\n        }else if (lostNum <= times){\n            for (int i = 0; i < size; i++) {\n                game[i] = 'W';\n            }\n        }else{\n            math(game, result);\n        }\n\n        //\u8f93\u51fa\n        int count = 0;\n        for (int i = size-1; i > 0; i--) {\n            if (game[i] == 'W' && game[i-1] == 'W'){\n                count += 2;\n            }else if (game[i] == 'W' && game[i-1] == 'L'){\n                count += 1;\n            }\n        }\n        if (game[0] == 'W'){\n            count += 1;\n        }\n//        for (int i = 0; i < size; i++) {\n//            System.out.print(game[i]);\n//        }\n        System.out.println(count);\n    }\n\n    private static void math(char[] game, String string){\n        //\u770b\u662f\u5426\u6709WLL..n..LLW\u7684\u5b58\u5728\uff0c\u82e5\u6709\u5219\u83b7\u53d6\n        int distence;\n        List<Flag>  flags = new ArrayList<>();\n        for (int  a = 0; a < size-1; a++) {\n            if (game[a] == 'W' && game[a+1]== 'L'){\n                distence = 0;\n                for (int i = a+1; i < size-1; i++) {\n                    if (game[i] == 'L' && game[i+1] == 'L'){\n                        distence += 1;\n                    }else if (game[i] == 'L' && game[i+1] == 'W'){\n                        distence += 1;\n                        flags.add(new Flag(a+1, distence));\n                        //\u4ece\u6570\u7ec4\u5f53\u524d\u4f4d\u7f6e\u7ee7\u7eed\u904d\u5386,\u964d\u4f4e\u590d\u6742\u5ea6\n                        a = i;\n                        break;\n                    }\n                }\n            }\n        }\n        flags = flags.stream().sorted(Comparator.comparing(Flag::getDistence)).collect(Collectors.toList());\n        //\u8fd0\u7b97\n        if (!flags.isEmpty()){\n            for (Flag flag:flags){\n                for (int i = flag.getPoint(); i < flag.getPoint()+flag.getDistence(); i++) {\n                    if (game[i] == 'L') {\n                        game[i] = 'W';\n                        if (--times == 0) return;\n                    }\n                }\n            }\n        }\n        //\u7ed9\u5f62\u5982LLLWWWLLL\u4e2d\u7684\u524d\u534a\u90e8\u6539\u503c\n        int fountPoint = -1;\n        for (int i = 0; i < size-1; i++) {\n            if (game[i] == 'L' && game[i+1] == 'W'){\n                fountPoint = i;\n                break;\n            }\n        }\n        if (fountPoint != -1){\n            for (int i = fountPoint; i >=0 ; i--) {\n                if (game[i] == 'L'){\n                    game[i] = 'W';\n                    if (--times == 0) return;\n                }\n            }\n        }\n        //\u7ed9\u5f62\u5982LLLWWWLLL\u4e2d\u7684\u540e\u534a\u90e8\u6539\u503c\n        int backPoint = -1;\n        for (int i = 1; i < size; i++) {\n            if (game[i] == 'L' && game[i-1] == 'W'){\n                backPoint = i;\n                break;\n            }\n        }\n        if (backPoint != -1){\n            for (int i = backPoint; i <size ; i++) {\n                if (game[i] == 'L'){\n                    game[i] = 'W';\n                    if (--times == 0) return;\n                }\n            }\n        }\n        //\u7ed9\u5f62\u5982LLLLLLLLL\u6328\u4e2a\u6539\u503c\n        for (int i = 0; i < size; i++) {\n            if (game[i] == 'L'){\n                game[i] = 'W';\n                if (--times == 0) return;\n            }\n        }\n    }\n\n}\n\nclass Flag {\n    private int point;\n    private int distence;\n\n    public Flag(int point , int distence) {\n        this.point = point;\n        this.distence = distence;\n    }\n\n    public int getPoint() {\n        return point;\n    }\n    public void setPoint(int point) {\n        this.point = point;\n    }\n    public int getDistence() {\n        return distence;\n    }\n    public void setDistence(int distence) {\n        this.distence = distence;\n    }\n    @Override\n    public String toString() {\n        return \"Flags{\" +\n                \"point=\" + point +\n                \", distence=\" + distence +\n                '}';\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int mod = 1000000007, N = 500005;\nlong long a, b, c, d, e, f, g = 1, h[N], arr[N];\nstring s;\nvector<pair<long long, long long>> v;\nvoid solve() {\n  cin >> a >> b >> s;\n  v.clear();\n  long long l = 0, ok = 0, ans = 0;\n  ;\n  for (long long i = 0; i < a; i++) {\n    if (s[i] == 'W') {\n      ans++;\n      if (i > 0 and s[i - 1] == 'W') ans++;\n    }\n    if (s[i] == 'L')\n      l++;\n    else if (ok == 0) {\n      if (l) v.push_back({2, l});\n      l = 0, ok = 1;\n    } else {\n      if (l) v.push_back({0, l});\n      l = 0;\n    }\n  }\n  if (ok == 0) {\n    cout << max(0ll, b * 2 - 1) << \"\\n\";\n    return;\n  }\n  if (l) v.push_back({1, l});\n  sort(v.begin(), v.end());\n  for (long long i = 0; i < v.size(); i++) {\n    if (v[i].first == 0) {\n      if (b >= v[i].second) {\n        ans += 2 * v[i].second + 1;\n        b -= v[i].second;\n      } else {\n        ans += 2 * b;\n        break;\n      }\n    } else {\n      ans += 2 * min(b, v[i].second);\n      b -= min(b, v[i].second);\n    }\n  }\n  cout << ans << \"\\n\";\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  cin >> g;\n  while (g--) solve();\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Scanner;\n\npublic class CodeForces {\n\n    public static int n;\n    public static int k;\n    public static int score;\n    public static String range;\n    public static int INF = 1000000000;\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int match = scanner.nextInt();\n        for (int t = 0; t < match; t++) {\n            n = scanner.nextInt();\n            k = scanner.nextInt();\n            scanner.nextLine();\n            String s = scanner.nextLine();\n            range = s;\n            score = 0;\n            char[] a = range.toCharArray();\n            findMaxScore(a);\n        }\n    }\n\n    public static void findMaxScore(char[] a) {\n        int losses = 0;\n        int wins = 0;\n        int wins_streaks = 0;\n        ArrayList<Integer> losses_streaks = new ArrayList<>();\n        for (int i = 0; i < n; i++) {\n            if (a[i] == 'W') {\n                wins += 1;\n                if (i == 0 || a[i - 1] == 'L') {\n                    wins_streaks += 1;\n                }\n            } else {\n                losses += 1;\n                if (i == 0 || a[i - 1] == 'W') {\n                    losses_streaks.add(0);\n                }\n                losses_streaks.set(losses_streaks.size() - 1, losses_streaks.get(losses_streaks.size() - 1) + 1);\n            }\n        }\n\n        if (wins == 0) {\n            if (k == 0) {\n                System.out.println(0);\n                return;\n            }\n            System.out.println(2 * k - 1);\n            return;\n        }\n        if (k >= losses) {\n            System.out.println(2 * n - 1);\n            return;\n        }\n        wins += k;\n        if (a[0] == 'L') {\n            losses_streaks.set(0, INF);\n        }\n        if (a[n - 1] == 'L') {\n            losses_streaks.set(losses_streaks.size() - 1, INF);\n        }\n        Collections.sort(losses_streaks);\n        for (Integer streak : losses_streaks) {\n            if (streak <= k) {\n                k -= streak;\n                wins_streaks -= 1;\n            } else {\n                break;\n            }\n        }\n        System.out.println(2 * wins - wins_streaks);\n    }\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class B{\n\n    static final FastReader in = new FastReader();\n    public static void main(String args[]){\n\n        int t = in.nextInt();\n        while(t-->0){\n            solve();\n        }\n    }\n\n    static void solve(){\n        int n = in.nextInt();\n        int k = in.nextInt();\n        char[] ch = in.next().toCharArray();\n        int win = 0;\n        int temp = 0;\n        int loses = 0;\n        boolean flag = false;\n        ArrayList<Integer> pq =new ArrayList<>();\n        for(int i=0; i<n; i++){\n            if(ch[i]=='W'){\n                if(temp>0 && win>0){\n                    pq.add(temp);\n                }\n                temp = 0;\n                win=(flag)?win+2:win+1;\n                flag = true;\n            }else{\n                flag = false;\n                temp++;\n                loses++;\n            }\n        }\n        Collections.sort(pq);\n\n        if(win==0){\n            System.out.println(Math.max(0,k*2-1));\n        }else{\n            for(int p: pq){\n                if(k<1){\n                    break;\n                }\n                if(p<=k){\n                    win+=p*2+1;\n                    k-=p;\n                    loses-=p;\n                }else if(p>k){\n                    win+=k*2;\n                    k=0;\n                    loses-=k;\n                }\n            }\n            if(k>0 && loses>0)  win+=Math.min(k,loses)*2;\n            System.out.println(win);\n        }\n    }\n\n\tstatic class FastReader{\n\t\tBufferedReader br;\n\t\tStringTokenizer st;\n\t\t\n\t\tpublic FastReader(){\n\t\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t\t}\n\t\t\n\t\tString next(){\n\t\t\twhile (st == null || !st.hasMoreElements()){\n\t\t\t\ttry{\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\t}\n\t\t\t\tcatch(IOException e){\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\t\t\n\t\tint nextInt(){\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\t\t\n\t\tlong nextLong(){\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\t\tdouble nextDouble(){\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\t\t\n\t\tString nextLine(){\n\t\t\tString str = \"\";\n\t\t\ttry{\n\t\t\t\tstr = br.readLine();\n\t\t\t}\n\t\t\tcatch(IOException e){\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\treturn str;\n\t\t}\n\t}\n\t\n}\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n\tn, k = [int(i) for i in input().split()]\n\ts = input()\n\tchains = []\n\tchain = 0\n\tstreak = False\n\n\tif k + s.count(\"W\") >= n:\n\t\tprint(2*n-1)\n\telif k == 0 and s.count(\"W\")==0:\n\t\tprint(0)\n\telse:\n\t\tfor char in s.strip(\"L\").strip(\"W\"):\n\t\t\tif char == \"W\" and chain != 0:\n\t\t\t\tchains.append(chain)\n\t\t\t\tchain = 0\n\t\t\telif char == \"L\":\n\t\t\t\tchain += 1\n\t\tif chain != 0:\n\t\t\tchains.append(chain)\n\t\tchains.sort()\n\t\ti = 0\n\t\ttotal = 0\n\t\twhile chains and total+chains[i] <= k:\n\t\t\ttotal += chains[i]\n\t\t\ti += 1\n\t\t\tif i >= len(chains):\n\t\t\t\tbreak\n\t\tprint(2*(k+s.count(\"W\"))-len(chains)-1+i)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int sz = 1e5 + 9, infP = INT_MAX, infN = INT_MIN, mod = 1e9 + 7,\n          eps = 1e-9;\nvoid ini() { return; }\nvoid solve() {\n  long long int n, m, k, l, r, ans = 0, cntL = 0;\n  string s;\n  cin >> n >> k >> s;\n  int ind[n];\n  m = -1;\n  for (int i = 0; i < n; i++) {\n    if (s[i] == 'L') {\n      ind[i] = m;\n      m = i;\n    } else {\n      ind[i] = m;\n    }\n  }\n  m = 0;\n  for (int i = 0; i < n; i++) {\n    if (s[i] == 'W' && m == 0) {\n      m = 1;\n      ans += 1;\n      continue;\n    }\n    if (s[i] == 'W' && m == 1) {\n      ans += 2;\n      continue;\n    }\n    if (s[i] == 'L') cntL++;\n    m = 0;\n  }\n  if (k == 0) {\n    cout << ans << \"\\n\";\n    return;\n  }\n  if (cntL == n) {\n    if (k >= n) {\n      ans = n * 2;\n      ans -= 1;\n    } else {\n      ans = k * 2;\n      ans -= 1;\n    }\n    cout << ans << \"\\n\";\n    return;\n  }\n  int start = 0, last = -1, stop = 0;\n  for (int i = 0; i < n; i++) {\n    if (s[i] == 'W') {\n      break;\n    }\n    last = i;\n    start++;\n  }\n  vector<int> lst;\n  for (int i = last + 1; i < n; i++) {\n    if (s[i] == 'W') {\n      if (i - 1 != last) {\n        lst.push_back(i - last - 1);\n      }\n      last = i;\n    }\n  }\n  for (int i = last + 1; i < n; i++) {\n    stop++;\n  }\n  sort(lst.begin(), lst.end());\n  ;\n  for (int i = 0; i < lst.size(); i++) {\n    if (lst[i] <= k) {\n      ans += lst[i] * 2;\n      ans++;\n      k -= lst[i];\n    } else {\n      ans += k * 2;\n      k = 0;\n      break;\n    }\n  }\n  if (k == 0) {\n    cout << ans << \"\\n\";\n    return;\n  }\n  if (stop >= k) {\n    ans += k * 2;\n    k = 0;\n  } else {\n    ans += stop * 2;\n    k = k - stop;\n  }\n  if (k == 0) {\n    cout << ans << \"\\n\";\n    return;\n  }\n  if (start >= k) {\n    ans += k * 2;\n    k = 0;\n  } else {\n    ans += start * 2;\n    k = k - stop;\n  }\n  cout << ans << \"\\n\";\n}\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  ;\n  int t = 1;\n  cin >> t;\n  while (t--) solve();\n}\n"
        },
        {
            "language": 3,
            "solution": "for _ in \" \"*int(input()):\n  n,k=map(int,input().split())\n  s=list(input())\n  if \"W\" not in s:\n    print(max((min(k,n)*2)-1,0))\n  elif k >= s.count(\"L\"):\n    print((n*2)-1)\n  else:\n    cnt=[]\n    sm=0\n    for i in range(n):\n      if s[i] == \"W\":\n        sm+=1\n    ind=s.index(\"W\")\n    for i in range(ind+1,n):\n      if s[i] == \"W\":\n        cnt.append(i-ind-1)\n        ind=i\n    cnt.sort()\n    for i in cnt:\n      if k >= i:\n        sm+=(2*i)+1\n        k-=i\n    if k>0:\n      sm+=(2*k)\n    print(sm)"
        },
        {
            "language": 3,
            "solution": "import sys\n#from collections import deque\n#from functools import *\n#from fractions import Fraction as f\n#from copy import *\n#from bisect import *\t\nfrom heapq import *\n#from heapq import *\n#from math import gcd,ceil,sqrt\n#from itertools import permutations as prm,product\n \ndef eprint(*args):\n    print(*args, file=sys.stderr)\nzz=1\n \n#sys.setrecursionlimit(10**6)\nif zz:\n\tinput=sys.stdin.readline\nelse:\t\n\tsys.stdin=open('input.txt', 'r')\n\tsys.stdout=open('all.txt','w')\ndi=[[-1,0],[1,0],[0,1],[0,-1]]\n\ndef string(s):\n\treturn \"\".join(s)\ndef fori(n):\n\treturn [fi() for i in range(n)]\t\ndef inc(d,c,x=1):\n\td[c]=d[c]+x if c in d else x\ndef bo(i):\n\treturn ord(i)-ord('A')\t\ndef li():\n\treturn [int(xx) for xx in input().split()]\ndef fli():\n\treturn [float(x) for x in input().split()]\t\ndef comp(a,b):\n\tif(a>b):\n\t\treturn 2\n\treturn 2 if a==b else 0\t\t\ndef gi():\t\n\treturn [xx for xx in input().split()]\ndef cil(n,m):\n\treturn n//m+int(n%m>0)\t\ndef fi():\n\treturn int(input())\ndef pro(a): \n\treturn reduce(lambda a,b:a*b,a)\t\t\ndef swap(a,i,j): \n\ta[i],a[j]=a[j],a[i]\t\ndef si():\n\treturn list(input().rstrip())\t\ndef mi():\n\treturn \tmap(int,input().split())\t\t\t\ndef gh():\n\tsys.stdout.flush()\ndef isvalid(i,j):\n\treturn 0<=i<n and 0<=j<m and a[i][j]!=\".\"\ndef bo(i):\n\treturn ord(i)-ord('a')\t\ndef graph(n,m):\n\tfor i in range(m):\n\t\tx,y=mi()\n\t\ta[x].append(y)\n\t\ta[y].append(x)\n\n\nt=fi()\n\nwhile t>0:\n\tt-=1\n\tn,k=mi()\n\ts=si()\n\ta=[0]*(n)\n\tans=0\n\tfor i in range(n):\n\t\tif s[i]=='W':\n\t\t\ta[i]+=1\n\t\t\tif i>0 and a[i-1]:\n\t\t\t\tans+=2\n\t\t\telse:\n\t\t\t\tans+=1\t\n\n\tl=[]\n\td=[]\n\n\tprev=-1\n\tfor i in range(n):\n\t\tif a[i]:\n\t\t\tif prev==-1 and i:\n\t\t\t\td.append([1,i])\n\t\t\telif i and i-prev-1:\n\t\t\t\td.append([0,i-prev-1])\n\t\t\tprev=i\n\tif prev!=n-1 :\t\t\t\t\n\t\t\td.append([1,n-prev-1])\n\tif a.count(1)==0:\n\t\tprint(1+2*(k-1) if k>0 else 0)\n\t\tcontinue\t\t\n\n\td.sort()\n\tfor i in range(len(d)):\n\t\tif k-d[i][1]>=0:\n\t\t\tans+=(d[i][1])*2\n\t\t\tif d[i][0]==0:\n\t\t\t\tans+=1\n\t\t\tk-=d[i][1]\n\t\telif k:\n\t\t\tans+=k*2\n\t\t\tk=0\t \t\t\n\t#print(*a)\n\tprint(ans)\n\t#print(d)\t\t\t\t\n\n\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor t1 in range(t):\n\tn,final = [int(n1) for n1 in input().split()]\n\ts = list(str(input()))\n\td = []\n\tk = []\n\tcount = 0\n\tif s[0]=='W':\n\t\tcount = 1\n\telse:\n\t\tcount = 0\n\ti = 0\n\tfirst = -1\n\tearlier_count = 0\n\tprev = 'L'\n\twhile i<len(s):\n\t\tif s[i]=='W':\n\t\t\tif first==-1: \n\t\t\t\tfirst = i  \n\t\t\tif prev=='W':\n\t\t\t\tearlier_count = earlier_count + 2\n\t\t\telse:\n\t\t\t\tearlier_count = earlier_count + 1\t\t\t\t\t\n\t\t\td1 = - 1 \n\t\t\tif i+1<n:\n\t\t\t\tfor j in range(i+1,n):\n\t\t\t\t\tif s[j]=='W':\n\t\t\t\t\t\td1 = j-i-1\n\t\t\t\t\t\tbreak\n\t\t\t\tif (d1>0):\n\t\t\t\t\td.append(d1)\n\t\t\t\t\tk.append(2)\n\t\t\t\t\tprev = 'L'\n\t\t\t\telif d1==-1:\n\t\t\t\t\td.append(n-1-i)\n\t\t\t\t\tk.append(3)\n\t\t\t\t\tprev = 'L'\n\t\t\t\telse:\n\t\t\t\t\tprev = 'W'\n\t\t\t\ti = j\n\t\t\telse:\n\t\t\t\ti = i +1\n\t\telse:\n\t\t\tprev = 'L'\n\t\t\ti = i + 1\n\tif ((first!=0) and (first!=-1)):\n\t\td.append(first-0)\n\t\tk.append(3)\n\tif k!=[]:\n\t\tk,d = zip(*sorted(zip(k,d)))\n\t\tk = list(k)\n\t\td = list(d)\n\t\tsum1 = 0\n\t\tsum2 = earlier_count\n\t\tfor i in range(len(d)):\n\t\t\tif final>=sum1+d[i]:\n\t\t\t\tsum1 = sum1 + d[i]\n\t\t\t\tif (k[i]==2):\n\t\t\t\t\tsum2 = sum2 + ((2*d[i])+1)\n\t\t\t\telse:\n\t\t\t\t\tsum2 = sum2 + ((2*d[i]))\n\t\t\telse:\n\t\t\t\t# print('yes',2*(final-sum1))\n\t\t\t\tsum2 = sum2 + (2*(final-sum1))\n\t\t\t\tsum1 = sum1 + (final-sum1)\n\t\t\t\tbreak\n\t\t\t# print(i,sum2,final-sum1)\n\t\tprint(sum2)\n\telse:\n\t\tif s[0]=='L':\n\t\t\tprint(max(0,2*final-1))\t\t\n\t\telse:\n\t\t\tprint(earlier_count)\n\n"
        },
        {
            "language": 3,
            "solution": "import sys\n\nsys.setrecursionlimit(10**5)\nint1 = lambda x: int(x)-1\np2D = lambda x: print(*x, sep=\"\\n\")\ndef II(): return int(sys.stdin.buffer.readline())\ndef MI(): return map(int, sys.stdin.buffer.readline().split())\ndef LI(): return list(map(int, sys.stdin.buffer.readline().split()))\ndef LLI(rows_number): return [LI() for _ in range(rows_number)]\ndef BI(): return sys.stdin.buffer.readline().rstrip()\ndef SI(): return sys.stdin.buffer.readline().rstrip().decode()\n\ndef RLE(s):\n    cc=[]\n    ww=[]\n    pc=s[0]\n    w=0\n    for c in s:\n        if c==pc:w+=1\n        else:\n            cc.append(pc)\n            ww.append(w)\n            w=1\n            pc=c\n    cc.append(pc)\n    ww.append(w)\n    return cc,ww\n\nfor _ in range(II()):\n    n,k=MI()\n    s=\"L\"+SI()+\"L\"\n    cc,aa=RLE(s)\n    if cc.count(\"W\")<2:\n        a=s.count(\"W\")\n        print(max(0,min(k+a,n)*2-1))\n        continue\n\n    ans=0\n    bb=[]\n    for i,a in enumerate(aa[1:-1]):\n        if i&1:bb.append(a)\n        else:ans+=2*a-1\n    bb.sort()\n    # print(bb)\n    for b in bb:\n        if b>k:break\n        ans+=2*b+1\n        k-=b\n    ans+=2*k\n    ans=min(ans,n*2-1)\n    print(ans)\n"
        },
        {
            "language": 3,
            "solution": "for t in range(int(input())):\n    n, k = map(int, input().split())\n    a = input()\n    b = [0] * n\n    s = 0\n    c = 0\n    w = a.count('W')\n    if k >= (n - w):\n        print(2 * n - 1)\n    elif w == 0:\n        print(max(0, 2 * k - 1))\n    else:\n        f = a.find('W')\n        for i in range(f, n):\n            if a[i] == 'W':\n                s += 1\n                if i > 0 and a[i - 1] == 'W':\n                    s += 1\n                b[c] += 1\n                c = 0\n            else:\n                c += 1\n        for j in range(1, n):\n            if k >= j * b[j]:\n                s += b[j] * (2 * j + 1)\n                k -= j * b[j]\n            else:\n                m = k // j\n                r = k % j\n                s += m * (2 * j + 1) + 2 * r\n                k = 0\n                break\n        s += 2 * k\n        print(s)\n"
        },
        {
            "language": 3,
            "solution": "def solve(record, length, changes):\n    if record == 'L' * length:\n        return changes * 2 - 1 if changes > 0 else 0\n    state = 'N'\n    loss_runs = []\n    win_runs = []\n    counter = 0\n    bonus = 0\n    score = 0\n    for i in record:\n        if state == 'N':\n            if i == 'L':\n                bonus += 1\n            else:\n                state = 'W'\n                counter += 1\n        else:\n            if state == 'W':\n                if i == 'W':\n                    counter += 1\n                else:\n                    win_runs.append(counter)\n                    counter = 1\n                    state = 'L'\n            else:\n                if i == 'L':\n                    counter += 1\n                else:\n                    loss_runs.append(counter)\n                    counter = 1\n                    state = 'W'\n    if state == 'W':\n        win_runs.append(counter)\n    else:\n        bonus += counter\n\n    for i in win_runs:\n        score += 2*i-1\n\n    loss_runs = sorted(loss_runs)\n    for i in loss_runs:\n        if changes >= i:\n            score += 2*i+1\n            changes -= i\n        else:\n            score += 2*changes\n            changes = 0\n    if changes != 0:\n        score += min(bonus*2, changes*2)\n    return score\n\n\n\n\nt = int(input())\nfor _ in range(t):\n    l, c = [int(i) for i in input().split()]\n    arr = input()\n    print(solve(arr, l, c))\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class TP {\n\n    // constants\n    static final int MOD = (int) (1e9 + 7);\n    static final int IMAX = 0x7fffffff;\n    static final int IMIN = 0x80000000;\n    static final long LMAX = 0x7fffffffffffffffL;\n    static final long LMIN = -0x8000000000000000L;\n    public static PrintWriter out;\n    public static FastReader in;\n\n    public static void main(String[] args) throws IOException {\n        long s = System.currentTimeMillis();\n        in = new FastReader();\n        out = new PrintWriter(System.out);\n//        out = new PrintWriter(new BufferedWriter(new FileWriter(\"whereami.out\")));\n        pre();\n        int t = 1;\n        t = ni();\n        while (t-- > 0)\n            solve();\n        out.flush();\n        tr(System.currentTimeMillis() - s + \"ms\");\n    }\n\n    private static void pre() {\n\n    }\n\n    private static void solve() {\n        int n = ni(), k = ni();\n        char[] s = ns().toCharArray();\n\n        int w = 0;\n        boolean W = false;\n        int ans = 0;\n\n\n        int cur = 0;\n        LinkedList<Integer> v = new LinkedList<>();\n\n        for (char c : s) {\n            if (c == 'W') {\n                if (cur != 0) {\n                    v.add(cur);\n                    cur = 0;\n                }\n                w++;\n                ans++;\n                if (W) ans++;\n                W = true;\n            } else {\n                W = false;\n                if (w != 0) {\n                    cur++;\n                }\n            }\n        }\n        if (w == 0) {\n            out.println(max(2 * k - 1, 0));\n            return;\n        }\n        k = min(k, n - w);\n        ans += 2 * k;\n        Collections.sort(v);\n        for (int x : v) {\n            if (x <= k) {\n                // cout << \"YO\";\n                ans++;\n                k -= x;\n            }\n        }\n        out.println(ans);\n    }\n\n\n    //input\n    private static int ni() {\n        return in.nextInt();\n    }\n\n    private static String ns() {\n        return in.next();\n    }\n\n    private static int[] na(int n) {\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) a[i] = ni();\n        return a;\n    }\n\n    private static long[] nal(int n) {\n        long[] a = new long[n];\n        for (int i = 0; i < n; i++) a[i] = nl();\n        return a;\n    }\n\n    private static long nl() {\n        return in.nextLong();\n    }\n\n    private float nf() {\n        return (float) in.nextDouble();\n    }\n\n    private static double nd() {\n        return in.nextDouble();\n    }\n\n    private static void print(int[] a) {\n        for (int x : a) out.print(x + \" \");\n        out.println();\n    }\n\n    private static void print(long[] a) {\n        for (long x : a) out.print(x + \" \");\n        out.println();\n    }\n\n    // array util\n    static void reverse(int[] a) {\n        for (int i = 0, n = a.length, half = n / 2; i < half; ++i) {\n            int swap = a[i];\n            a[i] = a[n - i - 1];\n            a[n - i - 1] = swap;\n        }\n    }\n\n    static void reverse(long[] a) {\n        for (int i = 0, n = a.length, half = n / 2; i < half; ++i) {\n            long swap = a[i];\n            a[i] = a[n - i - 1];\n            a[n - i - 1] = swap;\n        }\n    }\n\n    static void reverse(char[] a) {\n        for (int i = 0, n = a.length, half = n / 2; i < half; ++i) {\n            char swap = a[i];\n            a[i] = a[n - i - 1];\n            a[n - i - 1] = swap;\n        }\n    }\n\n    static int[] copy(int[] a) {\n        int[] ans = new int[a.length];\n        for (int i = 0; i < a.length; ++i) ans[i] = a[i];\n        return ans;\n    }\n\n    static long[] copy(long[] a) {\n        long[] ans = new long[a.length];\n        for (int i = 0; i < a.length; ++i) ans[i] = a[i];\n        return ans;\n    }\n\n    static char[] copy(char[] a) {\n        char[] ans = new char[a.length];\n        for (int i = 0; i < a.length; ++i) ans[i] = a[i];\n        return ans;\n    }\n\n\n    // math util\n\n    static int min(int... x) {\n        if (x.length == 1) return x[0];\n        if (x.length == 2) return Math.min(x[0], x[1]);\n        if (x.length == 3) return Math.min(x[0], Math.min(x[1], x[2]));\n        int min = x[0];\n        for (int i = 1; i < x.length; ++i) if (x[i] < min) min = x[i];\n        return min;\n    }\n\n\n    static long min(long... x) {\n        if (x.length == 1) return x[0];\n        if (x.length == 2) return Math.min(x[0], x[1]);\n        if (x.length == 3) return Math.min(x[0], Math.min(x[1], x[2]));\n        long min = x[0];\n        for (int i = 1; i < x.length; ++i) if (x[i] < min) min = x[i];\n        return min;\n    }\n\n\n    static int max(int... x) {\n        if (x.length == 1) return x[0];\n        if (x.length == 2) return Math.max(x[0], x[1]);\n        if (x.length == 3) return Math.max(x[0], Math.max(x[1], x[2]));\n        return Arrays.stream(x).max().getAsInt();\n    }\n\n    static long max(long... x) {\n        if (x.length == 1) return x[0];\n        if (x.length == 2) return Math.max(x[0], x[1]);\n        if (x.length == 3) return Math.max(x[0], Math.max(x[1], x[2]));\n        long max = x[0];\n        for (int i = 1; i < x.length; ++i) if (x[i] > max) max = x[i];\n        return max;\n    }\n\n    static int pow(int a, int b) {\n        if (a == 0) return 0;\n        int ans = 1;\n        while (b > 0) {\n            if ((b & 1) > 0) ans *= a;\n            a *= a;\n            b >>= 1;\n        }\n        return ans;\n    }\n\n    static long pow(long a, int b) {\n        if (a == 0) return 0;\n        long ans = 1;\n        while (b > 0) {\n            if ((b & 1) > 0) ans *= a;\n            a *= a;\n            b >>= 1;\n        }\n        return ans;\n    }\n\n    static int power(int x, int y, int p) {\n        int res = 1;\n        x = x % p;\n        while (y > 0) {\n            if (y % 2 == 1)\n                res = (res * x) % p;\n            y = y >> 1;\n            x = (x * x) % p;\n        }\n        return res;\n    }\n\n    static int modInverse(int n, int p) {\n        return power(n, p - 2, p);\n    }\n\n    static int nCrModPFermat(int n, int r, int p) {\n        if (n < r)\n            return 0;\n        if (r == 0)\n            return 1;\n        int[] fac = new int[n + 1];\n        fac[0] = 1;\n        for (int i = 1; i <= n; i++)\n            fac[i] = fac[i - 1] * i % p;\n        return (fac[n] * modInverse(fac[r], p) % p * modInverse(fac[n - r], p) % p) % p;\n    }\n\n    static boolean isPrime(long n) {\n        for (long i = 2; i * i <= n; i++) if (n % i == 0) return false;\n        return true;\n    }\n\n    public static long gcd(long a, long b) {\n        while (b != 0) {\n            a %= b;\n            long t = a;\n            a = b;\n            b = t;\n        }\n        return a;\n    }\n\n    private static boolean sorted(int[] a) {\n        for (int i = 0; i < a.length - 1; i++) {\n            if (a[i] > a[i + 1]) return false;\n        }\n        return true;\n    }\n\n    private static boolean sorted(long[] a) {\n        for (int i = 0; i < a.length - 1; i++) {\n            if (a[i] > a[i + 1]) return false;\n        }\n        return true;\n    }\n\n    private static boolean sorted(char[] a) {\n        for (int i = 0; i < a.length - 1; i++) {\n            if (a[i] > a[i + 1]) return false;\n        }\n        return true;\n    }\n\n    public static int lowerBound(int[] a, int v) {\n        int low = -1, high = a.length;\n        while (high - low > 1) {\n            int h = high + low >>> 1;\n            if (a[h] >= v) {\n                high = h;\n            } else {\n                low = h;\n            }\n        }\n        return high;\n    }\n\n    public static int[] facs(int n, int[] primes) {\n        int[] ret = new int[9];\n        int rp = 0;\n        for (int p : primes) {\n            if (p * p > n) break;\n            int i;\n            i = 0;\n            while (n % p == 0) {\n                n /= p;\n                i++;\n            }\n            if (i > 0) ret[rp++] = p;\n        }\n        if (n != 1) ret[rp++] = n;\n        return Arrays.copyOf(ret, rp);\n    }\n\n    public static int[] sieveEratosthenes(int n) {\n        if (n <= 32) {\n            int[] primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31};\n            for (int i = 0; i < primes.length; i++) {\n                if (n < primes[i]) {\n                    return Arrays.copyOf(primes, i);\n                }\n            }\n            return primes;\n        }\n\n        int u = n + 32;\n        double lu = Math.log(u);\n        int[] ret = new int[(int) (u / lu + u / lu / lu * 1.5)];\n        ret[0] = 2;\n        int pos = 1;\n\n        int[] isnp = new int[(n + 1) / 32 / 2 + 1];\n        int sup = (n + 1) / 32 / 2 + 1;\n\n        int[] tprimes = {3, 5, 7, 11, 13, 17, 19, 23, 29, 31};\n        for (int tp : tprimes) {\n            ret[pos++] = tp;\n            int[] ptn = new int[tp];\n            for (int i = (tp - 3) / 2; i < tp << 5; i += tp) ptn[i >> 5] |= 1 << (i & 31);\n            for (int j = 0; j < sup; j += tp) {\n                for (int i = 0; i < tp && i + j < sup; i++) {\n                    isnp[j + i] |= ptn[i];\n                }\n            }\n        }\n\n        // 3,5,7\n        // 2x+3=n\n        int[] magic = {\n                0, 1, 23, 2, 29, 24, 19, 3, 30, 27, 25, 11, 20, 8, 4, 13, 31, 22, 28, 18, 26, 10, 7, 12, 21,\n                17, 9, 6, 16, 5, 15, 14\n        };\n        int h = n / 2;\n        for (int i = 0; i < sup; i++) {\n            for (int j = ~isnp[i]; j != 0; j &= j - 1) {\n                int pp = i << 5 | magic[(j & -j) * 0x076be629 >>> 27];\n                int p = 2 * pp + 3;\n                if (p > n) break;\n                ret[pos++] = p;\n                if ((long) p * p > n) continue;\n                for (int q = (p * p - 3) / 2; q <= h; q += p) isnp[q >> 5] |= 1 << q;\n            }\n        }\n\n        return Arrays.copyOf(ret, pos);\n    }\n\n    private static int[][] uniqCount(int[] a) {\n        int n = a.length;\n        int p = 0;\n        int[][] b = new int[n][];\n        for (int i = 0; i < n; i++) {\n            if (i == 0 || a[i] != a[i - 1]) b[p++] = new int[]{a[i], 0};\n            b[p - 1][1]++;\n        }\n        return Arrays.copyOf(b, p);\n    }\n\n    private static long lcm(long a, long b) {\n        return a * b / gcd(a, b);\n    }\n\n    public static int[][] enumPrimesAndLPF(int n) {\n        int[] lpf = new int[n + 1];\n        double lu = Math.log(n + 32);\n\n        int tot = 0;\n        int[] primes = new int[(int) ((n + 32) / lu + (n + 32) / lu / lu * 1.5)];\n\n        for (int i = 2; i <= n; i++) {\n            lpf[i] = i;\n        }\n\n        for (int p = 2, tmp; p <= n; p++) {\n            if (lpf[p] == p) {\n                primes[tot++] = p;\n            }\n            for (int i = 0; i < tot && primes[i] <= lpf[p] && (tmp = primes[i] * p) <= n; i++) {\n                lpf[tmp] = primes[i];\n            }\n        }\n\n        return new int[][]{Arrays.copyOf(primes, tot), lpf};\n    }\n\n    public static int[] enumPrimes(int n) {\n        int[] lpf = new int[n + 1];\n        double lu = Math.log(n + 32);\n\n        int tot = 0;\n        int[] primes = new int[(int) ((n + 32) / lu + (n + 32) / lu / lu * 1.5)];\n\n        for (int i = 2; i <= n; i++) {\n            lpf[i] = i;\n        }\n\n        for (int p = 2, tmp; p <= n; p++) {\n            if (lpf[p] == p) {\n                primes[tot++] = p;\n            }\n            for (int i = 0; i < tot && primes[i] <= lpf[p] && (tmp = primes[i] * p) <= n; i++) {\n                lpf[tmp] = primes[i];\n            }\n        }\n\n        return Arrays.copyOf(primes, tot);\n    }\n\n    static boolean isPrime(int n) {\n        for (int i = 2; i * i <= n; i++) if (n % i == 0) return false;\n        return true;\n    }\n\n    //debug\n    private static final boolean oj = System.getProperty(\"ONLINE_JUDGE\") != null;\n\n    private static void tr(Object... o) {\n        if (!oj) System.out.println(Arrays.deepToString(o));\n    }\n\n    //reader\n    static class FastReader {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public FastReader() throws FileNotFoundException {\n            br = new BufferedReader(new InputStreamReader(System.in));\n//            br = new BufferedReader(new FileReader(\"whereami.in\"));\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n    }\n\n}"
        },
        {
            "language": 4,
            "solution": "//package codeforce.globalround.y2020.r11;\n\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.List;\nimport java.util.Scanner;\n\nimport static java.util.Comparator.reverseOrder;\n\npublic class B_ChessCheater {\n\n  public static void main(String[] args) {\n    try (Scanner sc = new Scanner(System.in)) {\n      int t = sc.nextInt();\n      for (int ii = 0; ii < t; ii++) {\n        int n = sc.nextInt();\n        int k = sc.nextInt();\n        String s = sc.next();\n        List<Integer> continuousL = new ArrayList<>();\n        int cnt = 0;\n        long ans = 0;\n        boolean previousW = false;\n\n        //firstL\n\n        int index1 = s.indexOf('W');\n        if (index1 == -1) {\n          //all L\n          // LLLL\n          System.out.println(Math.max(0, 2 * k - 1));\n          continue;\n        }\n\n        int index2 = s.lastIndexOf('W');\n        int lastL = s.length() - index2 - 1;\n\n        for (int i = index1; i <= index2; i++) {\n          if (s.charAt(i) == 'W') {\n            if (cnt != 0)\n              continuousL.add(cnt);\n            cnt = 0;\n            ans++;\n            if (previousW)\n              ans++;\n            previousW = true;\n          } else {\n            cnt++;\n            previousW = false;\n          }\n        }\n        if( k == 0) {\n          System.out.println(ans);\n          continue;\n        }\n        Collections.sort(continuousL);\n        //  System.out.println(Arrays.toString(continuousL.toArray()));\n        for (int x : continuousL) {\n          if (x == 1) {\n            ans += 3;\n            k--;\n          } else if (x > 1 && x <= k) {\n            ans += (2 * x + 1);\n            k -= x;\n          } else if (x > k) {\n            ans += (2 * k);\n            k = 0;\n            break;\n          }\n          if (k <= 0)\n            break;\n        }\n\n        //use first and last\n        ans += (2 * Math.min(k, index1));\n        k -= Math.min(k, index1);\n        ans += (2 * Math.min(k, lastL));\n\n        System.out.println(ans);\n      } //sum of +ve \n      // sum of -ve\n      //if both are same, print no.\n      //start with positive if they are \n    }\n  }\n}\n/**\n * my targets are those which are L and where W has L before\n * <p>\n * WLLW -> 1 0 1\n * WWW -> 1 2 2\n * +3\n * <p>\n * WLL -> 1 0 0\n * WWL -> 1 2 0\n * +2\n * <p>\n * LLW-> 0 0 1\n * LWW -> 0 1 2\n * +2\n * <p>\n * WLLL\n * <p>\n * 2\n * <p>\n * WLLWLWLLLWLW\n * <p>\n * 2, 1, 1\n * <p>\n * <p>\n * <p>\n * 3 , 3\n * 7 + 4\n * Len(L) * 2 + 1\n * <p>\n * <p>\n * WWWWWWWWWWLWWWW\n **/"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long int power(long long int b, long long int e) {\n  if (e == 0) return 1;\n  if (e & 1) return b * power(b * b, e / 2);\n  return power(b * b, e / 2);\n}\nlong long int gcd(long long int a, long long int b) {\n  if (a == 0) return b;\n  if (b == 0) return a;\n  if (a == b) return a;\n  if (a > b) return gcd(a - b, b);\n  return gcd(a, b - a);\n}\nbool compare(const pair<long long int, long long int>& i,\n             const pair<long long int, long long int>& j) {\n  return i.first < j.first;\n}\nvoid solve() {\n  long long int n, sum = 0, k, ans = 0, l1 = 0, a = 0, flag = 0, f = 1;\n  cin >> n >> k;\n  string s;\n  cin >> s;\n  vector<long long int> v;\n  for (long long int i = 0; i < n; i++) {\n    if (f == 1) {\n      if (s[i] == 'L')\n        l1++;\n      else {\n        f = 2;\n        flag = 1;\n      }\n    } else if (flag == 0) {\n      if (s[i] == 'W') {\n        flag = 1;\n        v.push_back(a);\n        a = 0;\n      } else\n        a++;\n    } else {\n      f++;\n      if (s[i] == 'L') {\n        a++;\n        flag = 0;\n      }\n    }\n  }\n  if (s[0] == 'W') ans++;\n  for (long long int i = 1; i < n; i++) {\n    if (s[i] == 'W' && s[i - 1] == 'L')\n      ans++;\n    else if (s[i] == 'W' && s[i - 1] == 'W') {\n      ans += 2;\n    }\n  }\n  for (long long int i = 0; i < v.size(); i++) {\n  }\n  sort(v.begin(), v.end());\n  for (long long int i = 0; i < v.size(); i++) {\n    if (k >= v[i]) {\n      ans += 2 * v[i] + 1;\n      k -= v[i];\n    } else {\n      ans += 2 * k;\n      cout << ans << \"\\n\";\n      return;\n    }\n  }\n  if (ans == 0) {\n    if (l1 < k)\n      cout << 2 * l1 - 1 << \"\\n\";\n    else {\n      if (k)\n        cout << 2 * k - 1 << \"\\n\";\n      else\n        cout << 0 << \"\\n\";\n    }\n    return;\n  }\n  if (l1 + a < k) {\n    ans += 2 * (l1 + a);\n  } else\n    ans += 2 * k;\n  cout << ans << \"\\n\";\n}\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  long long int t = 1;\n  cin >> t;\n  for (long long int i = 0; i < t; i++) {\n    solve();\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid solve() {\n  int n, k;\n  cin >> n >> k;\n  string s;\n  cin >> s;\n  int cur = 0;\n  vector<int> v;\n  int c = s[0] == 'L';\n  int ans = s[0] == 'W';\n  for (int i = 1; i < s.size(); i++) {\n    if (s[i] == 'W') {\n      ans += 1 + (s[i - 1] == 'W');\n    } else\n      c++;\n  }\n  if (c == n) {\n    cout << max(0, k * 2 - 1) << endl;\n    return;\n  }\n  for (auto i : s) {\n    if (i == 'L')\n      cur++;\n    else {\n      v.push_back(cur);\n      cur = 0;\n    }\n  }\n  if (v.size()) {\n    cur += v[0];\n    swap(v[0], v[v.size() - 1]);\n    v.pop_back();\n  }\n  sort((v).begin(), (v).end());\n  int ind = 0;\n  int d = 0;\n  while (ind < v.size() && d < k) {\n    if (v[ind] == 0) {\n      ind++;\n      continue;\n    } else {\n      if (v[ind] == 1)\n        ans += 3;\n      else\n        ans += 2;\n      v[ind]--;\n      d++;\n    }\n  }\n  ans += (min(k - d, cur) * 2);\n  cout << ans << endl;\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  int t = 1;\n  cin >> t;\n  while (t--) {\n    solve();\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nusing LL = long long int;\nusing uLL = unsigned long long int;\nusing uint = unsigned int;\nusing ld = long double;\ninline bool compare(pair<int, int> a, pair<int, int> b) {\n  if (a.first == b.first) {\n    return a.second < b.second;\n  }\n  return a.first > b.first;\n}\nint main() {\n  cin.tie(NULL);\n  ios_base::sync_with_stdio(0);\n  int t;\n  cin >> t;\n  while (t--) {\n    int n, k;\n    cin >> n >> k;\n    string s;\n    cin >> s;\n    int res = (s[0] == 'W');\n    for (int i = 1; i < n; i++) {\n      if (s[i] == 'W') {\n        if (s[i - 1] == 'W') {\n          res += 2;\n        } else {\n          res += 1;\n        }\n      }\n    }\n    vector<int> next_w(n);\n    int pos = 100000000;\n    for (int i = n - 1; i >= 0; i--) {\n      next_w[i] = pos;\n      if (s[i] == 'W') pos = i;\n    }\n    if (pos == 100000000) {\n      cout << max(k * 2 - 1, 0) << '\\n';\n      continue;\n    }\n    vector<pair<int, int> > wektor;\n    for (int i = 0; i < n; i++) {\n      if (s[i] == 'W' && next_w[i] != i + 1 && i != n - 1) {\n        wektor.push_back({next_w[i] - 1 - i, i});\n      }\n    }\n    sort(wektor.begin(), wektor.end());\n    for (auto x : wektor) {\n      int j = x.second + 1;\n      while (k > 0 && j < n && s[j] == 'L') {\n        k--;\n        res += 2;\n        j++;\n      }\n      if (j < n && s[j] == 'W') {\n        res++;\n      }\n      if (k == 0) break;\n    }\n    if (pos != 100000000) {\n      int i = pos - 1;\n      while (k > 0 && i >= 0) {\n        k--;\n        res += 2;\n        i--;\n      }\n    }\n    cout << res << '\\n';\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "ts = int(input())\nfor t in range(ts):\n    n,k = [int(i) for i in input().split(\" \")]\n    l = input()\n    c = 0\n    wc = 0\n    d = {}\n    be = 0\n    head = 0\n    tail = n\n\n    for i in l:\n        if i==\"L\":\n            head +=1\n            be += 1\n        else:\n            break\n    for i in range(n-1,-1,-1):\n        if l[i]==\"L\":\n            tail -=1\n            be += 1\n            #print(tail)\n        else:\n            break\n    for i in range(head,tail):\n        if l[i]==\"W\":\n            if i==0:\n                wc +=1\n            elif l[i-1]==\"W\":\n                wc +=2\n            else:\n                wc +=1\n            if c>0:\n                if c in d.keys():\n                    d[c] += 1\n                else:\n                    d[c] = 1\n                c=0\n        else:\n            c +=1\n    ks = sorted(list(d.keys()))\n    ki = 0\n    klen = len(ks)\n    while k>0 and ki<klen:\n        ky = ks[ki]\n        dval = d[ky]\n        if k//ky >= dval:\n            wc += (1+2*ky)*dval\n            k -= ky*dval\n        else:\n            wc += (1+2*ky)*(k//ky)+2*(k%ky)\n            k = 0\n\n        ki +=1\n    if k>0:\n        if tail==0:\n            wc += 2 * min(k, be)-1\n        else:\n            wc += 2 * min(k, be)\n\n    print(wc)\n\n\n\n\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class tr0 {\n\tstatic PrintWriter out;\n\tstatic StringBuilder sb;\n\tstatic int mod = (int) 1e9 + 7;\n\tstatic long inf = (long) 1e16;\n\tstatic int n, m;\n\tstatic ArrayList<Integer>[] ad;\n\tstatic long[][] memo;\n\tstatic boolean f;\n\tstatic boolean vis[];\n\tstatic int[] px, Q[];\n\tstatic HashMap<Integer, Integer> hm;\n\tstatic String s;\n\n\tpublic static void main(String[] args) throws Exception {\n\t\tScanner sc = new Scanner(System.in);\n\t\tout = new PrintWriter(System.out);\n\t\tint t = sc.nextInt();\n\t\twhile (t-- > 0) {\n\t\t\tint n = sc.nextInt();\n\t\t\tint k = sc.nextInt();\n\t\t\tString s = sc.nextLine();\n\t\t\tlong ans = 0;\n\t\t\tArrayList<Integer> a = new ArrayList<>();\n\t\t\tint f = 0;\n\t\t\tint l = 0;\n\t\t\tint len = 0;\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tif (s.charAt(i) == 'L')\n\t\t\t\t\tlen++;\n\t\t\t\telse {\n\t\t\t\t\tans++;\n\t\t\t\t\tif (i != 0 && s.charAt(i - 1) == 'W')\n\t\t\t\t\t\tans++;\n\t\t\t\t\tif (len != 0)\n\t\t\t\t\t\ta.add(len);\n\t\t\t\t\tlen = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (len != 0)\n\t\t\t\ta.add(len);\n\t\t\tif (s.charAt(0) == 'L') {\n\t\t\t\tf = a.get(0);\n\t\t\t\ta.remove(0);\n\t\t\t}\n\t\t\tif (a.size() > 0 && s.charAt(n - 1) == 'L') {\n\t\t\t\tl = a.get(a.size() - 1);\n\t\t\t\ta.remove(a.size() - 1);\n\t\t\t}\n\t\t\tCollections.sort(a);\n\t\t\tboolean flag = true;\n\t\t\t// System.out.println(ans + \" \" + k);\n\t\t\tfor (int i = 0; i < a.size(); i++) {\n\t\t\t\t// System.out.println(k);\n\t\t\t\tif (a.get(i) > k) {\n\t\t\t\t\tans += k * 2;\n\t\t\t\t\tflag = false;\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\tk -= a.get(i);\n\t\t\t\t\tans++;\n\t\t\t\t\tans += a.get(i) * 2;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (f == n) {\n\t\t\t\tif (k >= 1) {\n\t\t\t\t\tans = 1 + (k - 1) * 2;\n\t\t\t\t}\n\t\t\t} else if (flag) {\n\t\t\t\tif (k >= f) {\n\t\t\t\t\tans += f * 2;\n\t\t\t\t\tk -= f;\n\t\t\t\t\tans += Math.min(k, l) * 2;\n\t\t\t\t} else\n\t\t\t\t\tans += k * 2;\n\t\t\t}\n\t\t\tSystem.out.println(Math.max(0, ans));\n\t\t}\n\t\tout.close();\n\t}\n\n\tstatic class Scanner {\n\t\tStringTokenizer st;\n\t\tBufferedReader br;\n\n\t\tpublic Scanner(InputStream system) {\n\t\t\tbr = new BufferedReader(new InputStreamReader(system));\n\t\t}\n\n\t\tpublic Scanner(String file) throws Exception {\n\t\t\tbr = new BufferedReader(new FileReader(file));\n\t\t}\n\n\t\tpublic String next() throws IOException {\n\t\t\twhile (st == null || !st.hasMoreTokens())\n\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tpublic String nextLine() throws IOException {\n\t\t\treturn br.readLine();\n\t\t}\n\n\t\tpublic int nextInt() throws IOException {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tpublic double nextDouble() throws IOException {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tpublic char nextChar() throws IOException {\n\t\t\treturn next().charAt(0);\n\t\t}\n\n\t\tpublic Long nextLong() throws IOException {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tpublic int[] nextArrInt(int n) throws IOException {\n\t\t\tint[] a = new int[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\ta[i] = nextInt();\n\t\t\treturn a;\n\t\t}\n\n\t\tpublic long[] nextArrLong(int n) throws IOException {\n\t\t\tlong[] a = new long[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\ta[i] = nextLong();\n\t\t\treturn a;\n\t\t}\n\n\t\tpublic boolean ready() throws IOException {\n\t\t\treturn br.ready();\n\t\t}\n\n\t\tpublic void waitForInput() throws InterruptedException {\n\t\t\tThread.sleep(3000);\n\t\t}\n\t}\n}"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor _ in range(t):\n    n, k = map(int, input().split())\n    a = list(input())\n    m = a.count('L')\n    d = a.count('W')\n    if m <= k:\n        print(2 * (n - 1) + 1)\n        continue\n    if d == 0:\n        print(max((2 * (k - 1) + 1), 0))\n    else:\n        for i in range(n):\n            if a[i]=='W':\n                b=i\n                break\n        a.reverse()\n        for  i in  range(n):\n            if a[i]=='W':\n                c=i\n                break\n        j=n-c\n        x=c\n        c=j\n        a.reverse()\n        l=[]\n        s=0\n        for i in range(b,c):\n            if a[i]=='L':\n                s=s+1\n            else:\n                if s==0:\n                    pass\n                else:\n                    l.append(s)\n                    s=0\n \n        l.sort()\n        ans=0\n        for i in range(len(l)):\n            if k>=l[i]:\n                k=k-l[i]\n                ans=ans+(2*l[i])+1\n            else:\n                ans=ans+(2*k)\n                k=0\n                break\n        if k==0:\n            pass\n        else:\n            z=min(k,b+x)\n            ans=ans+(2*z)\n        if a[0] == 'W':\n            ans = ans + 1\n        for i in range(1,n):\n            if a[i] == 'W' and a[i-1]=='W':\n                ans=ans+2\n            elif a[i]=='W' and a[i-1]=='L':\n                ans=ans+1\n        print(ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long int inf = 1e18;\nconst long long int mod = 1e9 + 7;\nconst long long int MOD = 998244353;\ntemplate <class c>\nstruct rge {\n  c b, e;\n};\ntemplate <class c>\nrge<c> range(c i, c j) {\n  return rge<c>{i, j};\n}\ntemplate <class c>\nauto dud(c *x) -> decltype(cerr << *x, 0);\ntemplate <class c>\nchar dud(...);\nstruct debug {\n  template <class c>\n  debug &operator<<(const c &) {\n    return *this;\n  }\n};\nvector<char *> tokenizer(const char *args) {\n  char *token = new char[111];\n  strcpy(token, args);\n  token = strtok(token, \", \");\n  vector<char *> v({token});\n  while ((token = strtok(NULL, \", \"))) v.push_back(token);\n  return reverse(v.begin(), v.end()), v;\n}\n#pragma clang diagnostic push\n#pragma clang diagnostic ignored \"-Wunused-parameter\"\nvoid debugg(vector<char *> args) { cerr << \"\\b\\b \"; }\n#pragma clang diagnostic pop\ntemplate <typename Head, typename... Tail>\nvoid debugg(vector<char *> args, Head H, Tail... T) {\n  debug() << \" [\" << args.back() << \": \" << H << \"] \";\n  args.pop_back();\n  debugg(args, T...);\n}\ntemplate <typename T>\nT power(T a, T b) {\n  if (b == 0) return 1;\n  if (b == 1)\n    return a;\n  else {\n    T res = (power(a, b / 2));\n    if (b % 2) {\n      return (res * res * a);\n    } else {\n      return res * res;\n    }\n  }\n}\ntemplate <typename T>\nT power(T a, T b, T modulo) {\n  if (b == 0) return 1;\n  if (b == 1)\n    return a;\n  else {\n    T res = (power(a, b / 2, modulo) % modulo);\n    if (b % 2) {\n      return ((((res % modulo) * (res % modulo)) % modulo) * (a % modulo)) %\n             modulo;\n    } else {\n      return ((res % modulo) * (res % modulo)) % modulo;\n    }\n  }\n}\ntemplate <typename T>\nT gcd(T a, T b) {\n  if (b == 0) {\n    return a;\n  }\n  return gcd(b, a % b);\n}\nvoid factorial(vector<long long int> &fact, long long n) {\n  fact.resize(n + 1, 1);\n  fact[0] = 1;\n  fact[1] = 1;\n  for (int i = 2; i <= n; ++i) {\n    fact[i] = ((fact[i - 1] % mod) * (i % mod)) % mod;\n  }\n}\nlong long mod_inv(long long a) {\n  return (power<long long>(a, mod - 2, mod)) % mod;\n}\nlong long ncr(long long n, long long r, vector<long long int> &fact) {\n  if (r > n or n < 0 or r < 0) return 0LL;\n  return (((fact[n] % mod) * (mod_inv(fact[n - r]) % mod)) % mod *\n          (mod_inv(fact[r]) % mod)) %\n         mod;\n}\ntemplate <typename T>\nbool asc(pair<T, T> &a, pair<T, T> &b) {\n  if (a.first == b.first) {\n    return a.second < b.second;\n  }\n  return a.first > b.first;\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  int t;\n  cin >> t;\n  while (t--) {\n    long long n, k;\n    cin >> n >> k;\n    string s;\n    cin >> s;\n    long long sum = 0;\n    vector<pair<long long, pair<long long, long long>>> v;\n    long long z = -2;\n    long long p = -1;\n    for (int i = 0; i < ((long long)(s).size());) {\n      long long j = i;\n      if (z == -2 and s[i] == 'W') z = i;\n      if (s[i] == 'W') p = i;\n      if (s[i] == 'L') {\n        while (i < ((long long)(s).size()) and s[i] == 'L') {\n          i++;\n        }\n        if (j != 0 and i != n)\n          v.emplace_back(\n              make_pair(i - j, pair<long long, long long>{j, i - 1}));\n      } else {\n        i++;\n      }\n    }\n    {};\n    sort((v).begin(), (v).end());\n    {};\n    for (int i = 0; i < ((long long)(v).size()) and k > 0; ++i) {\n      long long x = v[i].first;\n      long long a = v[i].second.first;\n      long long b = v[i].second.second;\n      long long j = b;\n      {};\n      while (b + 1 < n and j >= a and k > 0 and s[j] == 'L') {\n        s[j] = 'W';\n        j--;\n        k--;\n      }\n      j = a;\n      while (a - 1 >= 0 and j <= b and k > 0 and s[j] == 'L') {\n        s[j] = 'W';\n        j++;\n        k--;\n      }\n    }\n    {};\n    {};\n    p++;\n    while (k > 0 and p < n and p >= 0 and s[p] == 'L') {\n      s[p] = 'W';\n      k--;\n      p++;\n    }\n    z--;\n    while (k > 0 and z >= 0 and z < n and s[z] == 'L') {\n      s[z] = 'W';\n      k--;\n      z--;\n    }\n    sum = 0;\n    {};\n    for (int i = 0; i < ((long long)(s).size()); ++i) {\n      if (s[i] == 'L') {\n        continue;\n      }\n      if (i - 1 >= 0 and s[i] == 'W' and s[i - 1] == 'W') {\n        sum += 2;\n      } else {\n        sum += 1;\n      }\n    }\n    cout << ((sum)) << \"\\n\";\n    ;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "\ndef solve():\n\n\n  n,k = map(int,input().split())\n  s = list(input())\n  # dp = defaultdict(int)\n  i = 0\n  cnt = 0\n  la = []\n  for i in range(n):\n      if s[i] == 'W':\n          la.append(i)\n\n      else:\n          cnt+=1\n\n  if la == []:\n      for i in range(n):\n          if k == 0:\n              break\n\n          s[i] = 'W'\n          k-=1\n  elif k>=cnt:\n      s = list('W'*n)\n\n  else:\n      ha = []\n      for j in range(len(la)-1):\n          ha.append((la[j+1] - la[j],la[j],la[j+1]))\n      ha.sort()\n\n\n      for i in range(len(ha)):\n          a,b,c = ha[i]\n          # print(b,c)\n          for j in range(b+1,c):\n              if k == 0:\n                  break\n\n              s[j] = 'W'\n              k-=1\n\n\n\n      a,b = la[0],la[-1]\n      for i in range(b+1,n):\n          if k == 0:\n              break\n          s[i] = 'W'\n          k-=1\n\n      for i in range(a-1,-1,-1):\n          if k == 0:\n              break\n          s[i] = 'W'\n          k-=1\n\n  ans = 0\n\n  for i in range(n):\n      if i-1>=0 and s[i] == 'W' and s[i-1] == 'W':\n          ans+=2\n\n      elif s[i] == 'W':\n          ans+=1\n\n  print(ans)\n\n\n\n\n\n\n\n\n\n\n\nt = int(input())\nfor _ in range(t):\n  solve()\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint T, N, K;\nstring stat;\nvector<int> v;\nvoid process() {\n  int l = 0, r = 0, ans = 0, W_count = 0;\n  bool L_Flag = false, W_Flag = false;\n  v.clear();\n  for (int i = 0; i < N; i++) {\n    if (stat[i] == 'W') {\n      if (W_Flag)\n        ans += 2;\n      else {\n        ans += 1;\n        W_Flag = true;\n      }\n    } else {\n      W_Flag = false;\n    }\n  }\n  if (stat[0] == 'W') W_count++;\n  for (int i = 1; i < N; i++) {\n    if (stat[i] == 'W') W_count++;\n    if (stat[i - 1] == 'W' && stat[i] == 'L') {\n      l = i;\n      L_Flag = true;\n    } else if (L_Flag) {\n      if (stat[i] == 'W') {\n        v.emplace_back(i - l);\n        L_Flag = false;\n      }\n    }\n  }\n  int L_count = N - W_count;\n  if (K >= L_count) {\n    cout << 2 * N - 1 << \"\\n\";\n    return;\n  }\n  if (W_count == 0) {\n    cout << std::max(2 * K - 1, 0) << \"\\n\";\n    return;\n  }\n  sort(v.begin(), v.end());\n  const int v_size = v.size();\n  int ptr = 0;\n  while (ptr < v_size && v[ptr] <= K) {\n    ans += 2 * v[ptr] + 1;\n    K -= v[ptr];\n    ptr++;\n  }\n  if (K > 0) ans += 2 * K;\n  cout << ans << \"\\n\";\n}\nvoid cf_input() {\n  cin >> T;\n  for (int t = 0; t < T; t++) {\n    cin >> N >> K;\n    cin >> stat;\n    process();\n  }\n}\nint main() {\n  std::ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  cf_input();\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid solve() {\n  int n, k;\n  cin >> n >> k;\n  string s;\n  cin >> s;\n  vector<int> blocks;\n  for (int i = 0; i < n; ++i) {\n    bool good_start = (i > 0);\n    if (s[i] == 'W') {\n      continue;\n    }\n    int len = 0;\n    while (i < n && s[i] == 'L') {\n      len++;\n      i++;\n    }\n    if (good_start && i != n) {\n      blocks.push_back(len);\n    }\n  }\n  sort(blocks.begin(), blocks.end());\n  int answer = 0;\n  int remaining = 0;\n  for (int i = 0; i < n; ++i) {\n    if (s[i] == 'W') {\n      answer++;\n    } else {\n      remaining++;\n    }\n    if (s[i] == 'W' && i > 0 && s[i - 1] == 'W') answer++;\n  }\n  if (remaining == n && k > 0) {\n    answer--;\n  }\n  for (int x : blocks) {\n    if (k >= x) {\n      k -= x;\n      answer += 2 * x + 1;\n      remaining -= x;\n    } else {\n      break;\n    }\n  }\n  answer += 2 * min(k, remaining);\n  cout << answer << endl;\n}\nint main(int argc, char const *argv[]) {\n  int T;\n  cin >> T;\n  for (int t = 0; t < T; t++) solve();\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.StringTokenizer;\n\npublic class ChessCheater {\n    public static void main(String[] args) {\n        FastReader input=new FastReader();\n        int t=input.nextInt();\n        while(t-->0)\n        {\n            int n=input.nextInt();\n            int k=input.nextInt();\n            String s=input.next();\n            ArrayList<Integer> list[]=new ArrayList[n];\n            int flag=0;\n            int l=-1,r=-1;\n            int c=0;\n            for(int i=1;i<n-1;i++)\n            {\n                if(s.charAt(i)=='L' && s.charAt(i-1)=='W')\n                {\n                    l=i;\n                }\n                if(s.charAt(i)=='L' && s.charAt(i+1)=='W')\n                {\n                    r=i;\n                    if(l!=-1)\n                    {\n                        ArrayList<Integer> li=new ArrayList<>();\n                        li.add(l);\n                        li.add(r);\n                        list[c]=li;\n                        c++;\n                    }\n                }\n            }\n            char ch[]=s.toCharArray();\n            mergeSort(list,0,c-1);\n            for(int i=0;i<c;i++)\n            {\n                int d=list[i].get(1)-list[i].get(0)+1;\n                if(d<=k)\n                {\n                    for(int j=list[i].get(0);j<=list[i].get(1);j++)\n                    {\n                        ch[j]='W';\n                    }\n                    k=k-d;\n                }\n                else\n                {\n                    int k1=k/2;\n                    int k2=k-k1;\n                    for(int j=list[i].get(0);j<list[i].get(0)+k1;j++)\n                    {\n                        ch[j]='W';\n                    }\n                    for(int j=list[i].get(1);j>list[i].get(1)-k2;j--)\n                    {\n                        ch[j]='W';\n                    }\n                    k=0;\n                    break;\n                }\n            }\n            if(k>0)\n            {\n                int index=-1;\n                for(int i=0;i<n;i++)\n                {\n                    if(ch[i]=='W')\n                    {\n                        index=i;\n                        break;\n                    }\n                }\n                if(index==-1)\n                {\n                    index=n;\n                }\n                for(int i=index-1;i>=0;i--)\n                {\n                    ch[i]='W';\n                    k--;\n                    if(k<=0)\n                    {\n                        break;\n                    }\n                }\n                if(k>0)\n                {\n                    index=-1;\n                    for(int i=n-1;i>=0;i--)\n                    {\n                        if(ch[i]=='W')\n                        {\n                            index=i;\n                            break;\n                        }\n                    }\n                    for(int i=index+1;i<n;i++)\n                    {\n                        ch[i]='W';\n                        k--;\n                        if(k<=0)\n                        {\n                            break;\n                        }\n                    }\n                }\n\n            }\n            int sum=0;\n            for(int i=0;i<n;i++)\n            {\n                if(i==0)\n                {\n                    if(ch[i]=='W')\n                    {\n                        sum+=1;\n                    }\n                }\n                else\n                {\n                    if(ch[i]=='W' && ch[i-1]=='W')\n                    {\n                        sum+=2;\n                    }\n                    else if(ch[i]=='W' && ch[i-1]!='W')\n                    {\n                        sum+=1;\n                    }\n                }\n            }\n            System.out.println(sum);\n        }\n    }\n    public static void mergeSort(ArrayList<Integer> a[], int p, int r)\n    {\n        if(p<r)\n        {\n            int q=(p+r)/2;\n            mergeSort(a,p,q);\n            mergeSort(a,q+1,r);\n            merge(a,p,q,r);\n        }\n    }\n    public static void merge(ArrayList<Integer> a[],int p,int q,int r)\n    {\n        int n1=q-p+1;\n        ArrayList<Integer> L[]=new ArrayList[n1];\n        int n2=r-q;\n        ArrayList<Integer> R[]=new ArrayList[n2];\n        for(int i=p;i<=q;i++)\n        {\n            L[i-p]=a[i];\n        }\n        for(int i=q+1;i<=r;i++)\n        {\n            R[i-q-1]=a[i];\n        }\n        int x=0,y=0;\n        int k=p;\n        while(x<n1 && y<n2)\n        {\n            int dl=L[x].get(1)-L[x].get(0)+1;\n            int dr=R[y].get(1)-R[y].get(0)+1;\n            if(dl<=dr)\n            {\n                a[k]=L[x];\n                x++;\n            }\n            else\n            {\n                a[k]=R[y];\n                y++;\n            }\n            k++;\n        }\n        while(x<n1)\n        {\n            a[k]=L[x];\n            x++;\n            k++;\n        }\n        while(y<n2)\n        {\n            a[k]=R[y];\n            k++;\n            y++;\n        }\n\n    }\n    static class FastReader {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public FastReader() {\n            br = new BufferedReader(new\n                    InputStreamReader(System.in));\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine() {\n            String str = \"\";\n            try {\n                str = br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "# ------------------- fast io --------------------\nimport os\nimport sys\nfrom io import BytesIO, IOBase\n \nBUFSIZE = 8192\n \nclass FastIO(IOBase):\n    newlines = 0\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n \n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n \n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n \n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n \n \nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n \n \nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n# ------------------- fast io --------------------\nfor j in range(int(input())):\n    n,k=map(int,input().split())\n    vals=[k for k in input()]\n    init=0\n    for s in range(n):\n        if vals[s]==\"W\":\n            if s>0 and vals[s-1]==\"W\":\n                init+=2\n            else:\n                init+=1\n    ans=[];chain=[];storef=[];storel=[]\n    for s in range(n):\n        if vals[s]==\"L\":\n            chain.append(s)\n        else:\n            if len(chain)>0:\n                if chain[0]==0:\n                    storef=chain.copy()\n                elif chain[-1]==n-1:\n                    storel=chain.copy()\n                else:\n                    ans.append((len(chain),chain.copy()))\n            chain.clear()\n    if len(chain)>0:\n        if chain[0]==0:\n            storef=chain.copy()\n        elif chain[-1]==n-1:\n            storel=chain.copy()\n        else:\n            ans.append((len(chain),chain.copy()))\n    ans.sort(key=lambda x: x[0],reverse=True)\n    while k>0 and len(ans)>0:\n        v0=ans.pop()[1]\n        if k>=len(v0):\n            k-=len(v0);init+=2*len(v0)+1\n        else:\n            init+=2*k;k=0\n    if len(storel)>0 and k>0:\n        if k>=len(storel):\n            k-=len(storel);init+=2*len(storel)\n        else:\n            init+=2*k;k=0\n    if len(storef)>0 and k>0:\n        if k>=len(storef):\n            if storef[-1]==n-1:\n                k-=len(storef);init+=1+2*(len(storef)-1)\n            else:\n                k-=len(storef);init+=2*len(storef)\n        else:\n            if storef[-1]==n-1:\n                init+=1+2*(k-1);k=0\n            else:\n                init+=2*(k);k=0\n    print(init)"
        },
        {
            "language": 3,
            "solution": "import sys\nimport bisect as bi\nimport collections as cc\nI=lambda:list(map(int,input().split()))\nfor tc in range(int(input())):\n\tn,k=I()\n\ts=list(input())\n\tif s.count('W')==0:\n\t\tnow=min(k,n)\n\t\tprint(max(0,1+(2*(now-1))))\n\t\tcontinue\n\ti=0\n\tgap=[]\n\tfor i in range(n):\n\t\tif s[i]=='W':\n\t\t\tgap.append(i)\n\tne=[]\n\tfor i in range(len(gap)-1):\n\t\tne.append([gap[i],gap[i+1],gap[i+1]-gap[i]-1])\n\tne.sort(key=lambda x:x[2])\n\tfor i in ne:\n\t\tnow=i[0]+1\n\t\twhile now<i[1] and k:\n\t\t\t#print(\"agg\",now,k,i)\n\t\t\ts[now]='W'\n\t\t\tnow+=1\n\t\t\tk-=1\n\t\tif not k:\n\t\t\tbreak\n\ttemp=[]\n\tif s[0]!='W':\n\t\ttemp.append([-1,gap[0],gap[0]-(-1)-1])\n\tif s[-1]!='W':\n\t\ttemp.append([gap[-1],n,n-gap[-1]-1])\n\ttemp.sort(key=lambda x:x[2])\n\tfor i in temp:\n\t\tif i[0]==-1:\n\t\t\tnow=i[1]-1\n\t\t\twhile now>=0 and k:\n\t\t\t\tk-=1\n\t\t\t\ts[now]='W'\n\t\t\t\tnow-=1\n\t\telse:\t\n\t\t\tnow=i[0]+1\n\t\t\twhile now<i[1] and k:\n\t\t\t\ts[now]='W'\n\t\t\t\tk-=1\n\t\t\t\tnow+=1\n\t\tif not k:\n\t\t\tbreak\n\tf=0\n\tcnt=0\n\tans=0\n\t#print(gap)\n\t#print(ne)\n\t#print(s)\n\tfor i in range(n):\n\t\tif not f and s[i]=='W':\n\t\t\tf=1\n\t\t\tans+=1\n\t\telif f and s[i]=='W':\n\t\t\tans+=2\n\t\telse:\n\t\t\tf=0\n\tprint(ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <class T>\nbool ckmin(T& a, const T& b) {\n  return a > b ? a = b, true : false;\n}\ntemplate <class T>\nbool ckmax(T& a, const T& b) {\n  return a < b ? a = b, true : false;\n}\ntemplate <typename T>\ntrue_type const_iterator_check(typename T::const_iterator*);\ntemplate <typename T>\nfalse_type const_iterator_check(...);\ntemplate <typename T>\nstruct IsC : decltype(const_iterator_check<T>(nullptr)) {};\ntemplate <>\nstruct IsC<string> : false_type {};\ntemplate <typename C>\ntypename enable_if<IsC<C>::value, ostream&>::type operator<<(ostream&,\n                                                             const C&);\ntemplate <typename T1, typename T2>\nostream& operator<<(ostream&, const pair<T1, T2>&);\ntemplate <typename... T>\nusing TS = tuple_size<tuple<T...>>;\ntemplate <size_t idx, typename... T>\ntypename enable_if<TS<T...>::value == idx + 1, ostream&>::type operator<<(\n    ostream& o, const tuple<T...>& t) {\n  return o << \", \" << get<idx>(t) << ')';\n}\ntemplate <size_t idx, typename... T>\ntypename enable_if<0 < idx && idx + 1 < TS<T...>::value, ostream&>::type\noperator<<(ostream& o, const tuple<T...>& t) {\n  return operator<<<idx + 1>(o << \", \" << get<idx>(t), t);\n}\ntemplate <size_t idx = 0, typename... T>\ntypename enable_if<1 < TS<T...>::value && !idx, ostream&>::type operator<<(\n    ostream& o, const tuple<T...>& t) {\n  return operator<<<idx + 1>(o << '(' << get<idx>(t), t);\n}\ntemplate <typename T>\nostream& operator<<(ostream& o, const tuple<T>& t) {\n  return o << get<0>(t);\n}\ntemplate <typename T1, typename T2>\nostream& operator<<(ostream& o, const pair<T1, T2>& p) {\n  return o << make_tuple(p.first, p.second);\n}\ntemplate <typename C>\ntypename enable_if<IsC<C>::value, ostream&>::type operator<<(ostream& o,\n                                                             const C& c) {\n  o << '[';\n  for (auto it = c.cbegin(); it != c.cend(); ++it)\n    o << *it << (next(it) != c.cend() ? \", \" : \"\");\n  return o << ']';\n}\ntemplate <typename T>\nvoid tprint(vector<vector<T>>& v, size_t width = 0, ostream& o = cerr) {\n  if (!0) return;\n  for (const auto& vv : v) {\n    for (const auto& i : vv) o << setw(width) << i;\n    o << '\\n';\n  }\n}\nvoid solve() {\n  int n, k;\n  string s;\n  cin >> n >> k >> s;\n  int lCnt = 0;\n  for (char c : s)\n    if (c == 'L') lCnt++;\n  if (lCnt == n) {\n    cout << max(0, 2 * (k - 1) + 1) << '\\n';\n    return;\n  }\n  int start = 0;\n  while (s[start] == 'L') start++;\n  int end = n - 1;\n  while (s[end] == 'L') end--;\n  vector<pair<int, int>> cnts;\n  for (int i = start; i <= end;) {\n    while (s[i] == 'W') i++;\n    int cnt = 0;\n    while (i + cnt <= end && s[i + cnt] == 'L') cnt++;\n    if (cnt) cnts.emplace_back(cnt, i);\n    i += cnt;\n  }\n  sort((cnts).begin(), (cnts).end());\n  for (auto [amt, ind] : cnts) {\n    for (auto i = (ind); (i) < (ind + min(amt, k)); ++(i)) s[i] = 'W';\n    k -= min(amt, k);\n  }\n  int k2 = k;\n  for (auto i = (end + 1); (i) < (min(n, end + 1 + k2)); ++(i)) {\n    k--;\n    s[i] = 'W';\n  }\n  for (auto i = (0); (i) < ((min(k, start))); ++(i)) s[start - 1 - i] = 'W';\n  long long score = 0;\n  for (int i = 0; i < n;) {\n    if (s[i] == 'L') {\n      i++;\n    } else {\n      score++;\n      i++;\n      while (i < n && s[i] == 'W') {\n        score += 2;\n        i++;\n      }\n    }\n  }\n  cout << score << '\\n';\n}\nint main() {\n  cin.tie(0);\n  ios_base::sync_with_stdio(0);\n  int tc = 1;\n  cin >> tc;\n  for (auto i = (1); (i) < (tc + 1); ++(i)) {\n    solve();\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n \npublic class File {\n\tpublic static class FastScanner {\n\t\tBufferedReader br;\n\t\tStringTokenizer st;\n\t\t\n\t\tpublic FastScanner() {\n\t\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t\t}\n\t\t\n\t\tString next() {\n\t\t\twhile (st == null || !st.hasMoreElements()) {\n\t\t\t\ttry {\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\t}\n\t\t\t\tcatch (IOException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\treturn st.nextToken();\n\t\t}\n\t\t\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\t\t\n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\t}\n\t\t\n\tpublic static void main(String[] args) {\n\t\tFastScanner sc = new FastScanner();\n\t\tPrintWriter out = new PrintWriter(new BufferedOutputStream(System.out));\n\t\tint t=sc.nextInt();\n\t\twhile(t>0)\n\t\t{\n\t\t    int n=sc.nextInt();\n\t\t    int k=sc.nextInt();\n\t\t    String s=sc.next();\n\t\t    char arr[]=s.toCharArray();\n\t\t    List<List<Integer>> diff=new ArrayList<>();\n\t\t    List<Integer> temp=new ArrayList<>();\n\t\t    int zeros=0,wins=0,start=-1,sum=0;\n\t\t    for(int i=0;i<n;i++)\n\t\t    {\n\t\t        if(arr[i]=='L'){\n\t\t            zeros++;\n\t\t            if(start!=-1)\n\t\t            temp.add(i);\n\t\t        }\n\t\t        else if(start==-1)\n\t\t        {\n\t\t            start=i;\n\t\t            wins++;\n\t\t            sum+=1;\n\t\t        }\n\t\t        else\n\t\t        {\n\t\t            diff.add(new ArrayList<>(temp));\n\t\t            temp.clear();\n\t\t            start=i;\n\t\t            wins++;\n\t\t            if(arr[i-1]=='W')sum+=2;\n\t\t            else sum+=1;\n\t\t        }\n\t\t    }\n\t\t    if(zeros<=k)\n\t\t    {\n\t\t        out.println((n-1)*2+1);\n\t\t    }\n\t\t    else if(wins==1)\n\t\t    {\n\t\t        if(n-1>=k)out.println(2*k+1);\n\t\t        else out.println((n-1)*2+1);\n\t\t    }\n\t\t    else if(wins==0&&k!=0)\n\t\t    {\n\t\t        out.println(2*(k-1)+1);\n\t\t    }\n\t\t    else\n\t\t    {\n\t\t        Collections.sort(diff,new Comparator<List<Integer>>(){\n\t\t            @Override\n\t\t            public int compare(List<Integer> l1,List<Integer> l2)\n\t\t            {\n\t\t                return l1.size()-l2.size();\n\t\t            }\n\t\t        }\n\t\t        );\n\t\t        int visited=-1;\n\t\t        for(int i=0;i<diff.size()&&k>0;i++)\n\t\t        {\n\t\t            for(int j=0;j<diff.get(i).size()&&k>0;j++)\n\t\t            {\n\t\t                arr[diff.get(i).get(j)]='W';\n\t\t                sum+=2;\n\t\t                k--;\n\t\t                if(k>=0&&j==diff.get(i).size()-1)sum+=1;\n\t\t                if(diff.get(i).get(j)+1==s.lastIndexOf('W'))visited=1;\n\t\t            }\n\t\t        }\n\t\t        if(k==0)out.println(sum);\n\t\t        else\n\t\t        {\n\t\t            int st=s.indexOf('W');\n\t\t            st--;\n\t\t            while(k>0&&st>=0)\n\t\t            {\n\t\t                arr[st]='W';\n\t\t                sum+=2;\n\t\t                st--;\n\t\t                k--;\n\t\t            }\n\t\t            int ed=s.lastIndexOf('W');\n\t\t            ed++;\n\t\t            while(k>0&&ed<n)\n\t\t            {\n\t\t                arr[ed]='W';\n\t\t                sum+=2;\n\t\t                ed++;\n\t\t                k--;\n\t\t            }\n\t\t            out.println(sum);\n\t\t        }\n\t\t        \n\t\t    }\n\t\t    t--;\n\t\t}\n\t\tout.close();\n\t}\n\t\n\t\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class Main {\n    public static void main(String args[]) throws IOException\n    {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n        long t=Long.parseLong(br.readLine());\n\n        for(int p=0;p<t;p++) {\n\n            String s = br.readLine();\n            String[] s1 = s.split(\" \");\n\n            int n = Integer.parseInt(s1[0]);\n            int k = Integer.parseInt(s1[1]);\n\n            s = br.readLine();\n\n            int[] arr = new int[n];\n            boolean start = false;\n            int gap=0,count=0,w=0,score=0,prev=0;\n\n            for(int i=0;i<n;i++){\n\n                if(i==0 && (int)s.charAt(i)==87)\n                    score++;\n                else if(i!=0 && prev==87 && (int)s.charAt(i)==87){\n                    score += 2;\n                }else if(i!=0 && prev==76 && (int)s.charAt(i)==87)\n                    score++;\n\n                if((int)s.charAt(i)==87) {\n                    w++;\n                    prev=87;\n                }else\n                    prev=76;\n\n                if(!start && (int)s.charAt(i)==87){\n                    start=true;\n                }else if(start && (int)s.charAt(i)==76){\n                    gap++;\n                }else if(start && (int)s.charAt(i)==87){\n//                    start=false;\n                    arr[count++]=gap;\n                    gap=0;\n                }\n            }\n\n            Arrays.sort(arr);\n\n            int l = n-w;\n\n            for(int i=0;i<n;i++){\n                if(arr[i]==0)\n                    continue;\n\n                if(arr[i]<=k){\n                    score+= 2*arr[i]+1;\n                    k-=arr[i];\n                    l-=arr[i];\n                }else if(arr[i]>k){\n                    score+= 2*k;\n                    l-=k;\n                    k=0;\n                    break;\n                }\n            }\n\n            if(k>0){\n                if(w==0 && k>0){\n                    l--;k--;\n                    score++;\n                }\n                if(k>=l){\n                    score+=2*l;\n                }else {\n                    score+=2*k;\n                }\n            }\n\n            System.out.println(score);\n        }\n    }\n}\n\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n,k=map(int,input().split())\n    s=input()\n    L=s.count('L')\n    W=s.count('W')\n    if L<=k:\n        print(2*(n-1)+1)\n        continue\n    if L==n and k!=0:\n        print((k-1)*2+1)\n        continue\n    count=0\n    p=0\n    if s[0]=='W':\n        count+=1\n        p=1\n    for i in range(1,n):\n        if s[i]=='W' and p:\n            count+=2\n        elif s[i]=='W':\n            count+=1\n            p=1\n        else:\n            p=0\n            continue\n    if k==0:\n        print(count)\n        continue\n    temp=s[::-1]\n    t=s\n    for i in range(n):\n        if temp[i]=='L':\n            continue\n        else:\n            break\n    temp=temp[i:]\n    temp=temp[::-1]\n    #print(temp)\n    s=temp\n    m=i\n    #print(m,s,t)\n    \n    l=[]\n    p=0\n    c=0\n    for i in range(1,len(s)):\n        if s[i-1]=='W' and s[i]=='L':\n            c+=1\n            p=1\n        elif s[i-1]=='L' and s[i]=='L' and p:\n            c+=1\n        elif s[i-1]=='L' and s[i]=='W':\n            p=0\n            if c!=0:\n                l.append(c)\n            c=0\n        else:\n            continue\n    if c!=0:\n        l.append(c)\n    l.sort()\n    #print(count)\n    #print(count,t)\n    for i in l:\n        if k<=0:\n                break\n        if k>=i:\n            k-=i\n            count+=(2*i+1)\n        else:\n            break\n    if len(l) and k<=max(l):\n        count+=(k*2)\n        print(count)\n    else:\n        if m>k:\n            count=count+(k*2)\n            k=0\n            print(count)\n        else:\n            count+=(m*2)\n            k-=m\n            for i in range(n):\n                if t[i]=='W':\n                    break\n            if i>k:\n                print(count+(k)*2)\n            else:\n                print(count+(k-i)*2)\n            \n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <class A, class B>\nostream &operator<<(ostream &out, const pair<A, B> &a) {\n  return out << \"(\" << a.first << \",\" << a.second << \")\";\n}\ntemplate <class A>\nostream &operator<<(ostream &out, const vector<A> &a) {\n  for (const A &it : a) out << it << \" \";\n  return out;\n}\ntemplate <class A, class B>\nistream &operator>>(istream &in, pair<A, B> &a) {\n  return in >> a.first >> a.second;\n}\ntemplate <class A>\nistream &operator>>(istream &in, vector<A> &a) {\n  for (A &i : a) in >> i;\n  return in;\n}\nifstream cinn(\"in.txt\");\nofstream coutt(\"out.txt\");\nlong long poww(const long long &a, long long b,\n               const long long &m = 1000000007) {\n  if (b == 0) return 1;\n  long long first = poww(a, b / 2, m);\n  first = first * first % m;\n  if (b & 1) first = first * a % m;\n  return first;\n}\nlong long gcd(long long a, long long b) {\n  if (b == 0) return a;\n  return gcd(b, a % b);\n}\nlong long _sum(long long n) { return (n * (n + 1)) / 2; }\nbool isPalindrome(string str) {\n  long long l = 0;\n  long long h = str.length() - 1;\n  while (h > l) {\n    if (str[l++] != str[h--]) {\n      return false;\n    }\n  }\n  return true;\n}\nlong long fact(long long n) {\n  if (n == 0) return 1;\n  return n * fact(n - 1);\n}\nlong long distSq(pair<long long, long long> p, pair<long long, long long> q) {\n  return (p.first - q.first) * (p.first - q.first) +\n         (p.second - q.second) * (p.second - q.second);\n}\nsigned main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  long long t, n, c, h, b, m, k, f, f2, t2, t3, i, j, ans, mnt, mxt, r, j1, j2;\n  cin >> t;\n  while (t--) {\n    cin >> n >> k;\n    string s;\n    cin >> s;\n    long long w = 0, ws = 0, l = 0;\n    vector<long long> loss;\n    for (i = 0; i < (long long)s.length(); i++) {\n      if (s[i] == 'W') {\n        w++;\n        if (i == 0 || s[i - 1] == 'L') ws++;\n      }\n      if (s[i] == 'L') {\n        l++;\n        if (i == 0 || s[i - 1] == 'W') loss.push_back(0);\n        loss.back()++;\n      }\n    }\n    if (k >= l) {\n      cout << 2 * n - 1 << '\\n';\n      continue;\n    }\n    if (w == 0) {\n      if (k == 0)\n        cout << 0 << '\\n';\n      else\n        cout << 2 * k - 1 << '\\n';\n      continue;\n    }\n    w += k;\n    if (s[0] == 'L') loss[0] = 1e15;\n    if (s[n - 1] == 'L') loss.back() = 1e15;\n    sort((loss).begin(), (loss).end());\n    for (i = 0; i < loss.size(); i++) {\n      if (k < loss[i]) break;\n      k -= loss[i];\n      ws--;\n    }\n    cout << 2 * w - ws << '\\n';\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedOutputStream;\nimport java.io.Closeable;\nimport java.io.DataInputStream;\nimport java.io.Flushable;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStream;\nimport java.io.PrintStream;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.InputMismatchException;\nimport java.util.function.Function;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n\tstatic class TaskAdapter implements Runnable {\n\t\t@Override\n\t\tpublic void run() {\n\t\t\tlong startTime = System.currentTimeMillis();\n\t\t\tInputStream inputStream = System.in;\n\t\t\tOutputStream outputStream = System.out;\n\t\t\tFastReader in = new FastReader(inputStream);\n\t\t\tOutput out = new Output(outputStream);\n\t\t\tBChessCheater solver = new BChessCheater();\n\t\t\tint testCount = in.nextInt();\n\t\t\tfor(int i = 1; i<=testCount; i++)\n\t\t\t\tsolver.solve(i, in, out);\n\t\t\tout.close();\n\t\t\tSystem.err.println(System.currentTimeMillis()-startTime+\"ms\");\n\t\t}\n\t}\n\n\tpublic static void main(String[] args) throws Exception {\n\t\tThread thread = new Thread(null, new TaskAdapter(), \"\", 1<<28);\n\t\tthread.start();\n\t\tthread.join();\n\t}\n\n\tstatic class BChessCheater {\n\t\tpublic BChessCheater() {\n\t\t}\n\n\t\tpublic void solve(int kase, InputReader in, Output pw) {\n\t\t\tint n = in.nextInt(), k = in.nextInt();\n\t\t\tboolean[] arr = in.nextBooleanChar(o -> o=='W');\n\t\t\tint ans = 0;\n\t\t\tfor(int i = 0; i<n; i++) {\n\t\t\t\tif(arr[i]) {\n\t\t\t\t\tans++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tArrayList<Integer> al = new ArrayList<>();\n\t\t\tint start = 0, end = 0;\n\t\t\t{\n\t\t\t\tint i = 0;\n\t\t\t\tfor(; i<n&&!arr[i]; i++) ;\n\t\t\t\tstart = i;\n\t\t\t\twhile(i<n) {\n\t\t\t\t\tint s = i++;\n\t\t\t\t\tfor(; i<n&&!arr[i]; i++) ;\n\t\t\t\t\tif(i==n) {\n\t\t\t\t\t\tend = n-s-1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tal.add(i-s-1);\n\t\t\t\t}\n\t\t\t}\n\t\t\tal.sort(null);\n\t\t\tfor(int i: al) {\n\t\t\t\tif(k==0&&i!=0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}else if(k>=i) {\n\t\t\t\t\tk -= i;\n\t\t\t\t\tans += (i<<1)+1;\n\t\t\t\t}else {\n\t\t\t\t\tans += k<<1;\n\t\t\t\t\tk = 0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(k>0) {\n\t\t\t\tans += Math.min(k, start+end)<<1;\n\t\t\t\tif(start==n) {\n\t\t\t\t\tans--;\n\t\t\t\t}\n\t\t\t}\n//\t\t\tUtilities.Debug.dbg(al);\n//\t\t\tUtilities.Debug.dbg(start, end);\n\t\t\tpw.println(ans);\n\t\t}\n\n\t}\n\n\tstatic class FastReader implements InputReader {\n\t\tfinal private int BUFFER_SIZE = 1<<16;\n\t\tprivate DataInputStream din;\n\t\tprivate byte[] buffer;\n\t\tprivate int bufferPointer;\n\t\tprivate int bytesRead;\n\n\t\tpublic FastReader(InputStream is) {\n\t\t\tdin = new DataInputStream(is);\n\t\t\tbuffer = new byte[BUFFER_SIZE];\n\t\t\tbufferPointer = bytesRead = 0;\n\t\t}\n\n\t\tpublic String next() {\n\t\t\tStringBuilder ret = new StringBuilder(64);\n\t\t\tbyte c = skip();\n\t\t\twhile(c!=-1&&!isSpaceChar(c)) {\n\t\t\t\tret.appendCodePoint(c);\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\treturn ret.toString();\n\t\t}\n\n\t\tpublic int nextInt() {\n\t\t\tint ret = 0;\n\t\t\tbyte c = skipToDigit();\n\t\t\tboolean neg = (c=='-');\n\t\t\tif(neg) {\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tdo {\n\t\t\t\tret = ret*10+c-'0';\n\t\t\t} while((c = read())>='0'&&c<='9');\n\t\t\tif(neg) {\n\t\t\t\treturn -ret;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\n\t\tprivate boolean isSpaceChar(byte b) {\n\t\t\treturn b==' '||b=='\\r'||b=='\\n'||b=='\\t'||b=='\\f';\n\t\t}\n\n\t\tprivate byte skip() {\n\t\t\tbyte ret;\n\t\t\twhile(isSpaceChar((ret = read()))) ;\n\t\t\treturn ret;\n\t\t}\n\n\t\tprivate boolean isDigit(byte b) {\n\t\t\treturn b>='0'&&b<='9';\n\t\t}\n\n\t\tprivate byte skipToDigit() {\n\t\t\tbyte ret;\n\t\t\twhile(!isDigit(ret = read())&&ret!='-') ;\n\t\t\treturn ret;\n\t\t}\n\n\t\tprivate void fillBuffer() {\n\t\t\ttry {\n\t\t\t\tbytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE);\n\t\t\t}catch(IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t\tthrow new InputMismatchException();\n\t\t\t}\n\t\t\tif(bytesRead==-1) {\n\t\t\t\tbuffer[0] = -1;\n\t\t\t}\n\t\t}\n\n\t\tprivate byte read() {\n\t\t\tif(bytesRead==-1) {\n\t\t\t\tthrow new InputMismatchException();\n\t\t\t}else if(bufferPointer==bytesRead) {\n\t\t\t\tfillBuffer();\n\t\t\t}\n\t\t\treturn buffer[bufferPointer++];\n\t\t}\n\n\t}\n\n\tstatic class Output implements Closeable, Flushable {\n\t\tpublic StringBuilder sb;\n\t\tpublic OutputStream os;\n\t\tpublic int BUFFER_SIZE;\n\t\tpublic String lineSeparator;\n\n\t\tpublic Output(OutputStream os) {\n\t\t\tthis(os, 1<<16);\n\t\t}\n\n\t\tpublic Output(OutputStream os, int bs) {\n\t\t\tBUFFER_SIZE = bs;\n\t\t\tsb = new StringBuilder(BUFFER_SIZE);\n\t\t\tthis.os = new BufferedOutputStream(os, 1<<17);\n\t\t\tlineSeparator = System.lineSeparator();\n\t\t}\n\n\t\tpublic void println(int i) {\n\t\t\tprintln(String.valueOf(i));\n\t\t}\n\n\t\tpublic void println(String s) {\n\t\t\tsb.append(s);\n\t\t\tprintln();\n\t\t}\n\n\t\tpublic void println() {\n\t\t\tsb.append(lineSeparator);\n\t\t}\n\n\t\tprivate void flushToBuffer() {\n\t\t\ttry {\n\t\t\t\tos.write(sb.toString().getBytes());\n\t\t\t}catch(IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\tsb = new StringBuilder(BUFFER_SIZE);\n\t\t}\n\n\t\tpublic void flush() {\n\t\t\ttry {\n\t\t\t\tflushToBuffer();\n\t\t\t\tos.flush();\n\t\t\t}catch(IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\n\t\tpublic void close() {\n\t\t\tflush();\n\t\t\ttry {\n\t\t\t\tos.close();\n\t\t\t}catch(IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\n\t}\n\n\tstatic interface InputReader {\n\t\tString next();\n\n\t\tint nextInt();\n\n\t\tdefault boolean[] nextBooleanChar(Function<Character, Boolean> f) {\n\t\t\tString s = next();\n\t\t\tboolean[] ret = new boolean[s.length()];\n\t\t\tfor(int i = 0; i<s.length(); i++) {\n\t\t\t\tret[i] = f.apply(s.charAt(i));\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\n\t}\n\n\tstatic class Utilities {\n\t\tpublic static class Debug {\n\t\t\tpublic static final boolean LOCAL = System.getProperty(\"ONLINE_JUDGE\")==null;\n\n\t\t\tprivate static <T> String ts(T t) {\n\t\t\t\tif(t==null) {\n\t\t\t\t\treturn \"null\";\n\t\t\t\t}\n\t\t\t\ttry {\n\t\t\t\t\treturn ts((Iterable) t);\n\t\t\t\t}catch(ClassCastException e) {\n\t\t\t\t\tif(t instanceof int[]) {\n\t\t\t\t\t\tString s = Arrays.toString((int[]) t);\n\t\t\t\t\t\treturn \"{\"+s.substring(1, s.length()-1)+\"}\";\n\t\t\t\t\t}else if(t instanceof long[]) {\n\t\t\t\t\t\tString s = Arrays.toString((long[]) t);\n\t\t\t\t\t\treturn \"{\"+s.substring(1, s.length()-1)+\"}\";\n\t\t\t\t\t}else if(t instanceof char[]) {\n\t\t\t\t\t\tString s = Arrays.toString((char[]) t);\n\t\t\t\t\t\treturn \"{\"+s.substring(1, s.length()-1)+\"}\";\n\t\t\t\t\t}else if(t instanceof double[]) {\n\t\t\t\t\t\tString s = Arrays.toString((double[]) t);\n\t\t\t\t\t\treturn \"{\"+s.substring(1, s.length()-1)+\"}\";\n\t\t\t\t\t}else if(t instanceof boolean[]) {\n\t\t\t\t\t\tString s = Arrays.toString((boolean[]) t);\n\t\t\t\t\t\treturn \"{\"+s.substring(1, s.length()-1)+\"}\";\n\t\t\t\t\t}\n\t\t\t\t\ttry {\n\t\t\t\t\t\treturn ts((Object[]) t);\n\t\t\t\t\t}catch(ClassCastException e1) {\n\t\t\t\t\t\treturn t.toString();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tprivate static <T> String ts(T[] arr) {\n\t\t\t\tStringBuilder ret = new StringBuilder();\n\t\t\t\tret.append(\"{\");\n\t\t\t\tboolean first = true;\n\t\t\t\tfor(T t: arr) {\n\t\t\t\t\tif(!first) {\n\t\t\t\t\t\tret.append(\", \");\n\t\t\t\t\t}\n\t\t\t\t\tfirst = false;\n\t\t\t\t\tret.append(ts(t));\n\t\t\t\t}\n\t\t\t\tret.append(\"}\");\n\t\t\t\treturn ret.toString();\n\t\t\t}\n\n\t\t\tprivate static <T> String ts(Iterable<T> iter) {\n\t\t\t\tStringBuilder ret = new StringBuilder();\n\t\t\t\tret.append(\"{\");\n\t\t\t\tboolean first = true;\n\t\t\t\tfor(T t: iter) {\n\t\t\t\t\tif(!first) {\n\t\t\t\t\t\tret.append(\", \");\n\t\t\t\t\t}\n\t\t\t\t\tfirst = false;\n\t\t\t\t\tret.append(ts(t));\n\t\t\t\t}\n\t\t\t\tret.append(\"}\");\n\t\t\t\treturn ret.toString();\n\t\t\t}\n\n\t\t\tpublic static void dbg(Object... o) {\n\t\t\t\tif(LOCAL) {\n\t\t\t\t\tSystem.err.print(\"Line #\"+Thread.currentThread().getStackTrace()[2].getLineNumber()+\": [\");\n\t\t\t\t\tfor(int i = 0; i<o.length; i++) {\n\t\t\t\t\t\tif(i!=0) {\n\t\t\t\t\t\t\tSystem.err.print(\", \");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tSystem.err.print(ts(o[i]));\n\t\t\t\t\t}\n\t\t\t\t\tSystem.err.println(\"]\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t}\n}\n\n"
        },
        {
            "language": 4,
            "solution": "// package com.company;\nimport java.lang.reflect.Array;\nimport java.util.*;\nimport java.lang.*;\nimport java.io.*;\n//****Use Integer Wrapper Class for Arrays.sort()****\npublic class FL2 {\n    static PrintWriter out=new PrintWriter(new OutputStreamWriter(System.out));\n    public static void main(String[] Args)throws Exception{\n        FastReader scan=new FastReader(System.in);\n        int t=1;\n        t=scan.nextInt();\n        while(t-->0){\n            int n=scan.nextInt();\n            int k=scan.nextInt();\n            String s=scan.next();\n            StringBuilder ss=new StringBuilder(s);\n            char prev='L';\n            ArrayList<Integer> wi=new ArrayList<>();\n            for(int i=0;i<n;i++){\n                char ch=s.charAt(i);\n                if(ch!=prev){\n                    wi.add(i);\n                }\n                prev=ch;\n            }\n            pair[] pairs=new pair[(wi.size()-1)/2];\n            int pi=0;\n            for(int i=2;i<wi.size();i+=2){\n                pairs[pi]=new pair(wi.get(i-1),wi.get(i));\n                pi++;\n            }\n            Arrays.sort(pairs);\n            for(int i=0;i<pairs.length&&k>0;i++){\n                pair cur=pairs[i];\n                for(int j=cur.li;j<cur.wi&&k>0;j++){\n                    ss.setCharAt(j,'W');\n                    k--;\n                }\n            }\n            if(k>0){\n                if(wi.size()>0&&wi.size()%2==0){\n                    int li=wi.get(wi.size()-1);\n                    for(int j=li;j<n&&k>0;j++){\n                        ss.setCharAt(j,'W');\n                        k--;\n                    }\n                }\n            }\n            if(k>0){\n                int fi=n;\n                if(wi.size()>0){\n                    fi=wi.get(0);\n                }\n                for(int j=fi-1;j>=0&&k>0;j--){\n                    ss.setCharAt(j,'W');\n                    k--;\n                }\n            }\n            int ans=0;\n            if(ss.charAt(0)=='W'){\n                ans=1;\n            }\n            for(int i=1;i<n;i++){\n                if(ss.charAt(i)=='W'){\n                    ans++;\n                    if(ss.charAt(i-1)=='W'){\n                        ans++;\n                    }\n                }\n            }\n            out.println(ans);\n        }\n        out.flush();\n        out.close();\n    }\n    static class pair implements Comparable<pair>{\n        int li;\n        int wi;\n        pair(int li,int wi){\n            this.li=li;\n            this.wi=wi;\n        }\n\n        @Override\n        public int compareTo(pair o) {\n            int l1=this.wi-this.li;\n            int l2=o.wi-o.li;\n            return l1-l2;\n        }\n    }\n    static class FastReader {\n\n        byte[] buf = new byte[2048];\n        int index, total;\n        InputStream in;\n\n        FastReader(InputStream is) {\n            in = is;\n        }\n\n        int scan() throws IOException {\n            if (index >= total) {\n                index = 0;\n                total = in.read(buf);\n                if (total <= 0) {\n                    return -1;\n                }\n            }\n            return buf[index++];\n        }\n\n        String next() throws IOException {\n            int c;\n            for (c = scan(); c <= 32; c = scan()) ;\n            StringBuilder sb = new StringBuilder();\n            for (; c > 32; c = scan()) {\n                sb.append((char) c);\n            }\n            return sb.toString();\n        }\n\n        int nextInt() throws IOException {\n            int c, val = 0;\n            for (c = scan(); c <= 32; c = scan()) ;\n            boolean neg = c == '-';\n            if (c == '-' || c == '+') {\n                c = scan();\n            }\n            for (; c >= '0' && c <= '9'; c = scan()) {\n                val = (val << 3) + (val << 1) + (c & 15);\n            }\n            return neg ? -val : val;\n        }\n        long nextLong() throws IOException {\n            int c;\n            long val = 0;\n            for (c = scan(); c <= 32; c = scan()) ;\n            boolean neg = c == '-';\n            if (c == '-' || c == '+') {\n                c = scan();\n            }\n            for (; c >= '0' && c <= '9'; c = scan()) {\n                val = (val << 3) + (val << 1) + (c & 15);\n            }\n            return neg ? -val : val;\n        }\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.awt.image.BandedSampleModel;\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.lang.reflect.Array;\nimport java.util.Scanner;\npublic class C {\n\n    public static int binarySearch(long[] arr,long n)\n    {\n        //#aaRJae\n        //This is a basic  binary search code(return -1 if not found)\n        //returns index of number\n        // binary search has infinite variation so beware\n        //To make search for number just greater than the value \"n\" decomment comment just below \"1&&3\"\n        //return -1 if value greater than last integer\n        //To make search for number just less than the value \"n\" decomment comment just below \"2&&3\"\n        //returns -1 if value less than last integer\n        int len =arr.length;\n        int l = 0;\n        int r = len-1;\n        int mid;\n        //3\n        int ans =-1;\n\n\n        while(r>=l)  //\"=\" lagana hai bhai\n        {\n            mid = l+(r-l)/2;  //never (l+r)/2 kyunki integer overflow\n            if(arr[mid]==n)\n            {\n                //3\n                ans =mid;\n                return mid;\n\n            }\n            if(arr[mid]>n)\n            {\n                r =mid-1;\n                //1\n                //ans = mid;\n            }\n            else\n            {\n                l =mid+1;\n                //2\n                ans = mid;\n            }\n        }\n        //3 make return -1 commented\n        return ans;\n        //return -1;\n    }\n\n\n    public static void main(String args[])\n    {\n        Scanner sc=new Scanner(System.in);\n        int cases = sc.nextInt();\n\n        for(int i=0;i<cases;i++)\n        {\n            //int n = sc.nextInt();\n            int n = sc.nextInt();\n            long k=sc.nextLong();\n            String s=sc.next();\n            ArrayList<Integer> list=new ArrayList<>();\n            int ind=-1;\n            for(int j=0;j<n;j++)\n            {\n                if(ind==-1&&(s.charAt(j)+\"\").equals(\"W\"))\n                {\n                    ind=j;\n                }\n                else\n                if((s.charAt(j)+\"\").equals(\"W\"))\n                {\n                    if(j==ind+1)\n                    {\n                        ind++;\n                    }\n                    else\n                    {\n                        list.add(j-ind-1);\n                        ind=j;\n                    }\n                }\n            }\n\n            Collections.sort(list);\n            long arr[]=new long[list.size()];\n            for(int j=0;j<list.size();j++)\n            {\n                arr[j]=list.get(j);\n            }\n\n            for(int j=1;j<list.size();j++)\n            {\n                arr[j]=arr[j]+arr[j-1];\n            }\n\n            int p=0;\n            //StringBuilder f=new StringBuilder();\n            if((s.charAt(0)+\"\").equals(\"W\")){\n                p=1;}\n            for(int j=1;j<n;j++)\n            {\n                if((s.charAt(j)+\"\").equals(\"W\"))\n                {\n                    if((s.charAt(j-1)+\"\").equals(\"W\"))\n                    {\n                        p= p+2;\n                    }\n                    else\n                    {\n                        p=p+1;\n                    }\n                }\n            }\n            long ans=0;\n            if(p==0)\n            {\n                ans=2*k-1;\n            }\n            else\n            {\n                ans=p+2*k;\n                ans=ans+binarySearch(arr,k)+1;\n            }\n\n            if(ans<0)\n            {\n                ans=0;\n            }\n            ans=Math.min(ans,2*n-1);\n            System.out.println(ans);\n        }\n\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "# n, k = list(map(int, input().split()))\n# s = list(input())\n#     k = 7\n#     n = len(s)\nfor _ in range(int(input())):\n    n, k = list(map(int, input().split()))\n    s = list(input())\n\n\n    o = -1\n\n\n    def score(s):\n        if (s[0] == 'W'):\n            ans = 1\n            x = 1\n        else:\n            ans = 0\n            x = 0\n\n        for i in range(1, len(s)):\n            if (s[i] == 'W' and x == 1):\n                ans += 2\n            elif (s[i] == 'W' and x == 0):\n                x = 1\n                ans += 1\n            else:\n                x = 0\n        return ans\n\n\n    for i in range(n):\n        if (s[i] == 'W'):\n            o = i\n            break\n\n    o1 = -2\n    for i in range(n - 1, -1, -1):\n        if (s[i] == 'W'):\n            o1 = i\n            break\n    if (k == 0):\n        print(score(s))\n    elif (o == -1 or o1 == o):\n        print(2 * min(k + (o1 == o), n) - 1)\n    else:\n        r = []\n        st = o + 1\n        for j in range(o + 1, o1 + 1):\n            if (s[j] == 'W'):\n                r.append([st, j])\n                st = j + 1\n        r = sorted(r, key=lambda x: x[1] - x[0])\n        for j in r:\n            for d in range(j[0], j[1]):\n                if (k > 0):\n                    k -= 1\n                    s[d] = 'W'\n                else:\n                    break\n        #         print('ada',k)\n        for d in range(o - 1, -1, -1):\n            if (k > 0):\n                k -= 1\n                s[d] = 'W'\n            else:\n                break\n\n        for d in range(o1 + 1, len(s)):\n            if (k > 0):\n                k -= 1\n                s[d] = 'W'\n            else:\n                break\n        #         print(s)\n        print(score(s))\n    #         print(s.count('W'))\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "def main():\n\tt = int(input())\n\tfor _ in range(t):\n\t\t(n, k) = (int(x) for x in input().split())\n\t\ts = input()\n\t\tprint(solver(s, n, k))\n\n\ndef solver(s, n, k):\n\tcur_score = getCurScore(s)\n\t#print(cur_score)\n\tlcount = s.count('L')\n\tif lcount <= k:\n\t\treturn 2 * n - 1\n\telif lcount == n:\n\t\treturn max(2 * k - 1, 0)\n\t\t\n\tllist = []\n\ti = s.find('W')\n\tcur = 0\n\tfor c in s[i:]:\n\t\tif c == 'L':\n\t\t\tcur += 1\n\t\telse:\n\t\t\tif cur != 0:\n\t\t\t\tllist.append(cur)\n\t\t\t\tcur = 0\n\t#print(llist)\n\tllist.sort()\n\tpoint_increase = 0\n\tfor x in llist:\n\t\tif x <= k:\n\t\t\tpoint_increase += (2 * x + 1)\n\t\t\tk -= x\n\t\telse:\n\t\t\tpoint_increase += (2 * k)\n\t\t\treturn cur_score + point_increase\n\tpoint_increase += (2 * k)\n\treturn cur_score + point_increase\n\t# while i != len(s):\n\t# \twhile s[i] == 'W':\n\t# \tfirstL = i\n\t# \twhile s[i] == 'L':\n\n\t# for c in s:\n\t# \tif c == 'W':\n\t# \t\tif cur != 0:\n\t# \t\t\tconsecutives.append(cur)\n\t# \t\t\tcur = 0\n\t# \telse:\n\t# \t\tcur += 1\n\t# last = cur\n\t#print(consecutives)\n\ndef getCurScore(s):\n\tscore = 0\n\tif s[0] == 'W':\n\t\tscore += 1\n\tfor i in range(1, len(s)):\n\t\tif s[i] == 'W':\n\t\t\tif s[i - 1] == 'W':\n\t\t\t\tscore += 2\n\t\t\telse:\n\t\t\t\tscore += 1\n\treturn score\n\n\n\n\n#print(solver('WLWLL', 5, 2))\n#print(solver('LLLWWL', 6, 5))\n#print(solver('LLWLWLWWWLWLLWLWWWLWLLWLLWLLLLWLLWWWLWWL', 40, 7))\n\nmain()\n\n\n#x = 'WWWLWWLL'\n#print(x.find('L'))"
        },
        {
            "language": 3,
            "solution": "# region smaller_fastio\nfrom sys import stdin, stdout\nfrom os import path\n\nif (path.exists('input.txt')):\n    # ------------------Sublime--------------------------------------#\n    stdin = open('input.txt', 'r');\n    stdout = open('output.txt', 'w');\n\n\n    def I():\n        return (int(input()))\n\n\n    def In():\n        return (map(int, input().split()))\nelse:\n    # ------------------PYPY FAst I/o--------------------------------#\n    def I():\n        return (int(stdin.readline()))\n\n\n    def In():\n        return (map(int, stdin.readline().split()))\n\n\n    def S():\n        return (stdin.readline().rstrip())\n\n\n    def Sn():\n        return (stdin.readline().split(' '))\n\n\n# endregion\n\n\ndef f(n, k, s):\n    wins = loss = 0\n    win_streak = 0\n    lose_streaks = []\n    for i in range(n):\n        if s[i] == 'W':\n            wins += 1\n            if i == 0 or s[i - 1] == 'L':\n                win_streak += 1\n        else:\n            loss += 1\n            if i == 0 or s[i - 1] == 'W':\n                lose_streaks.append(0)\n            lose_streaks[-1] += 1\n    if k >= loss:\n        return 2 * n - 1\n    if wins == 0:\n        if k == 0:\n            return 0\n        return 2 * k - 1\n\n    if s[0] == 'L':\n        lose_streaks[0] = 1e9\n    if s[-1] == 'L':\n        lose_streaks[-1] = 1e9\n    wins += k\n    lose_streaks.sort()\n    for i in lose_streaks:\n        if i > k:\n            break\n        k -= i\n        win_streak -= 1\n    return 2 * wins - win_streak\n\n\ndef func():\n    st = ''\n    t = I()\n    for _ in range(t):\n        n, k = In()\n        s = input()\n        st = '\\n'.join((st, str(f(n, k, s))))\n    print(st.lstrip())\n\n\nif __name__ == '__main__':\n    func()\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class Test20201019 {\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));\n\n        int t = Integer.parseInt(br.readLine());\n        int[] result = new int[t];\n        for (int i = 0; i < t; i++) {\n            String[] strs = br.readLine().split(\" \");\n            int n = Integer.parseInt(strs[0]);\n            int k = Integer.parseInt(strs[1]);\n            String s = br.readLine();\n            result[i] = process(n, k, s);\n        }\n\n        for (int i : result) {\n            bw.write(String.valueOf(i));\n            bw.newLine();\n        }\n\n        bw.flush();\n        bw.close();\n    }\n\n    private static int process(int n, int k, String s){\n        List<Integer> queue = new LinkedList<Integer>();\n        int cur = k+5;\n        int score = 0;\n        for (int i = 0; i < n; i++) {\n            if(s.charAt(i) == 'L') {\n                cur++;\n            } else {\n                score += cur > 0 ? 1:2;\n                if(cur > 0) {\n                    queue.add(cur);\n                }\n                cur = 0;\n            }\n        }\n\n        if(cur == k+5+n) {\n            return Math.max(0,2*Math.min(k,n)-1);\n        }\n\n        Collections.sort(queue);\n        for (Integer integer : queue) {\n            if (k >= integer) {\n                score = score + 2 * integer;\n                score++;\n                k = k - integer;\n            }\n        }\n\n        score += 2*k;\n        score = Math.min(score,2*n-1);\n        return score;\n    }\n}\n\t       \t\t\t    \t \t    \t\t   \t"
        },
        {
            "language": 3,
            "solution": "import sys\n\nt=int(input())\nwhile t>0:\n\tt-=1\n\tinput=sys.stdin.readline()\n\tn,k = map(int, input.split())\n\ts=sys.stdin.readline()\n\tno_los= 0 \n\tno_win = 0\n\tfor i in range(len(s)):\n\t\tif s[i] == 'L':\n\t\t\tno_los+=1\n\t\telse:\n\t\t\tno_win+=1\n\tif no_los<=k:\n\t\tprint(2*n -1)\n\telif no_los == n:\n\t\tif k==0:\n\t\t\tprint(0)\n\t\telse:\n\t\t\tprint(2*k -1)\n\telse:\n\t\tinitial_score = 0\n\t\tif s[0] ==\"W\":\n\t\t\tinitial_score+=1\n\t\tfor i in range(1, n):\n\t\t\tif s[i] == \"W\" and s[i-1] == 'W':\n\t\t\t\tinitial_score+=2\n\t\t\telif s[i] == \"W\":\n\t\t\t\tinitial_score+=1\n\t\t# print(initial_score)\n\t\tmid_los_ar = []\n\t\ti=0\n\t\twhile s[i]=='L':\n\t\t\ti+=1\n\t\twhile s[i]=='W':\n\t\t\ti+=1\n\t\tj=n-1\n\t\twhile s[j] == 'L':\n\t\t\tj-=1\n\t\twhile s[j] == 'W':\n\t\t\tj-=1\n\t\tcur = -1\n\t\tvalue = 0\n\t\tfor m in range(i, j+1):\n\t\t\tif s[m] == 'W':\n\t\t\t\tif value!=0:\n\t\t\t\t\tmid_los_ar.append(value)\n\t\t\t\t\tvalue=0\n\t\t\telse:\n\t\t\t\tvalue+=1\n\t\tif value!=0:\n\t\t\tmid_los_ar.append(value)\n\t\tmid_los_ar.sort()\n\t\t# print(mid_los_ar)\n\t\tinitial_score+= (2*k)\n\t\trem = 0\n\t\ttotal = 0\n\t\tfor i in range(len(mid_los_ar)):\n\t\t\ttotal +=mid_los_ar[i]\n\t\t\tif total <= k:\n\t\t\t\trem+=1\n\t\t\telse:\n\t\t\t\tbreak\n\t\tinitial_score+=rem\n\t\tprint(initial_score)\n\n"
        },
        {
            "language": 3,
            "solution": "from sys import stdin\n\nt = int(stdin.readline())\nfor i in range(t):\n    n, k = tuple(int(x) for x in stdin.readline().split())\n    line = 'L' * (k+1) + stdin.readline()[:-1] + 'L' * (k+1)\n    score = 0\n    flag = False\n    for char in line:\n        if char == 'W':\n            if flag:\n                score += 2\n            else:\n                score += 1\n                flag = True\n        else:\n            flag = False\n            \n    seq = sorted(len(x) for x in line.split('W'))\n\n    if len(seq) == 1:\n        if k == 0:\n            print(0)\n        else:\n            print(2*k-1)\n        continue\n    for item in seq:\n        if item == 0:\n            continue\n        if k - item >= 0:\n            k -= item\n            score += 2 * (item-1) + 3\n        elif k > 0:\n            score += 2 * k\n            break\n        else:\n            break\n    print(min(score, 2*n-1))\n    \n"
        },
        {
            "language": 4,
            "solution": "//package Codeforces.GlobalRound11;\n\nimport java.io.*;\nimport java.util.*;\n\npublic class B {\n    public static void main(String[] args) throws IOException {\n        Soumit sc = new Soumit();\n\n        int t = sc.nextInt();\n\n        StringBuilder sb = new StringBuilder();\n        while (t-->0)\n        {\n            int n = sc.nextInt();\n            int k = sc.nextInt();\n\n            char[] s = sc.next().toCharArray();\n\n            ArrayList<Integer> list = new ArrayList<>();\n\n            int count = 1;\n            for(int i=1;i<n;i++)\n            {\n                if(s[i]==s[i-1])\n                {\n                    count++;\n                }\n                else\n                {\n                    list.add(count);\n                    count = 1;\n                }\n            }\n\n            list.add(count);\n\n            PriorityQueue<Integer> heap = new PriorityQueue<>();\n            int se = 0;\n            if(s[0]=='W')\n            {\n                for(int i=1;i<list.size();i+=2)\n                {\n                    if(i!=list.size()-1)\n                        heap.add(list.get(i));\n                    else se += list.get(i);\n                }\n            }\n            else\n            {\n                if(list.size()>0) se += list.get(0);\n                for(int i=2;i<list.size();i+=2)\n                {\n                    if(i!=list.size()-1)\n                        heap.add(list.get(i));\n                    else se += list.get(i);\n                }\n            }\n\n            if(list.size()==1 && s[0] == 'L' && k>0)\n            {\n                long points = 1;\n                points += 2*(k-1);\n                sb.append(points).append(\"\\n\");\n                continue;\n            }\n\n            long points = 0;\n            if(s[0]=='W') points = 1;\n            for(int i=1;i<n;i++)\n            {\n                if(s[i] == 'W' && s[i]==s[i-1])\n                {\n                    points += 2;\n                }\n                else if(s[i]=='W')\n                {\n                    points += 1;\n                }\n            }\n\n            //System.out.println(\"test: \"+points+\" \"+se);\n         //   System.out.println(list);\n          //  System.out.println(heap);\n            while(!heap.isEmpty())\n            {\n                int sm = heap.peek();\n                if(sm>k)\n                {\n                    se += sm;\n                    break;\n                }\n                else\n                {\n                    k -= sm;\n                    heap.remove();\n                    points += (sm*2) +1 ;\n                }\n            }\n\n           // System.out.println(\"testeswre \"+points+\" \"+k+\" \"+se);\n            points += Math.min(k, se) *2 ;\n\n            sb.append(points).append(\"\\n\");\n        }\n\n        System.out.println(sb);\n        sc.close();\n    }\n\n    static class Soumit {\n        final private int BUFFER_SIZE = 1 << 18;\n        final private DataInputStream din;\n        final private byte[] buffer;\n        private PrintWriter pw;\n        private int bufferPointer, bytesRead;\n        StringTokenizer st;\n\n        public Soumit() {\n            din = new DataInputStream(System.in);\n            buffer = new byte[BUFFER_SIZE];\n            bufferPointer = bytesRead = 0;\n        }\n\n        public Soumit(String file_name) throws IOException {\n            din = new DataInputStream(new FileInputStream(file_name));\n            buffer = new byte[BUFFER_SIZE];\n            bufferPointer = bytesRead = 0;\n        }\n\n        public void streamOutput(String file) throws IOException {\n            FileWriter fw = new FileWriter(file);\n            BufferedWriter bw = new BufferedWriter(fw);\n            pw = new PrintWriter(bw);\n        }\n\n        public void println(String a) {\n            pw.println(a);\n        }\n\n        public void print(String a) {\n            pw.print(a);\n        }\n\n        public String readLine() throws IOException {\n            byte[] buf = new byte[100064]; // line length\n            int cnt = 0, c;\n            while ((c = read()) != -1) {\n                if (c == '\\n')\n                    break;\n                buf[cnt++] = (byte) c;\n            }\n            return new String(buf, 0, cnt);\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        public int[] nextIntArray(int n) throws IOException {\n            int[] arr = new int[n];\n            for (int i = 0; i < n; i++) {\n                arr[i] = nextInt();\n            }\n\n            return arr;\n        }\n\n        public long[] nextLongArray(int n) throws IOException {\n            long[] arr = new long[n];\n            for (int i = 0; i < n; i++) {\n                arr[i] = nextLong();\n            }\n\n            return arr;\n        }\n\n        public double[] nextDoubleArray(int n) throws IOException {\n            double[] arr = new double[n];\n            for (int i = 0; i < n; i++) {\n                arr[i] = nextDouble();\n            }\n\n            return arr;\n        }\n\n        public int nextInt() throws IOException {\n            int ret = 0;\n            byte c = read();\n            while (c <= ' ')\n                c = read();\n            boolean neg = (c == '-');\n            if (neg)\n                c = read();\n            do {\n                ret = ret * 10 + c - '0';\n            } while ((c = read()) >= '0' && c <= '9');\n\n            if (neg)\n                return -ret;\n            return ret;\n        }\n\n        public long nextLong() throws IOException {\n            long ret = 0;\n            byte c = read();\n            while (c <= ' ')\n                c = read();\n            boolean neg = (c == '-');\n            if (neg)\n                c = read();\n            do {\n                ret = ret * 10 + c - '0';\n            }\n            while ((c = read()) >= '0' && c <= '9');\n            if (neg)\n                return -ret;\n            return ret;\n        }\n\n        public double nextDouble() throws IOException {\n            double ret = 0, div = 1;\n            byte c = read();\n            while (c <= ' ')\n                c = read();\n            boolean neg = (c == '-');\n            if (neg)\n                c = read();\n\n            do {\n                ret = ret * 10 + c - '0';\n            }\n            while ((c = read()) >= '0' && c <= '9');\n\n            if (c == '.') {\n                while ((c = read()) >= '0' && c <= '9') {\n                    ret += (c - '0') / (div *= 10);\n                }\n            }\n\n            if (neg)\n                return -ret;\n            return ret;\n        }\n\n        private void fillBuffer() throws IOException {\n            bytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE);\n            if (bytesRead == -1)\n                buffer[0] = -1;\n        }\n\n        private byte read() throws IOException {\n            if (bufferPointer == bytesRead)\n                fillBuffer();\n            return buffer[bufferPointer++];\n        }\n\n        public void close() throws IOException {\n            /*if (din == null)\n                return;*/\n            if (din != null) din.close();\n            if (pw != null) pw.close();\n        }\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\n#pragma comment(linker, \"/stack:200000000\")\n#pragma GCC optimize(\"unroll-loops\")\nusing namespace std;\ntemplate <typename A>\nostream &operator<<(ostream &cout, vector<A> const &v);\ntemplate <typename A, typename B>\nostream &operator<<(ostream &cout, pair<A, B> const &p) {\n  return cout << \"(\" << p.first << \", \" << p.second << \")\";\n}\ntemplate <typename A>\nostream &operator<<(ostream &cout, vector<A> const &v) {\n  cout << \"[\";\n  for (int i = 0; i < v.size(); i++) {\n    if (i) cout << \", \";\n    cout << v[i];\n  }\n  return cout << \"]\";\n}\ntemplate <typename A, typename B>\nistream &operator>>(istream &cin, pair<A, B> &p) {\n  cin >> p.first;\n  return cin >> p.second;\n}\nconst long long MAXN = 1e5 + 7;\nvoid check() {\n  long long n, k;\n  cin >> n >> k;\n  k = min(n, k);\n  string s;\n  cin >> s;\n  vector<long long> a, b;\n  long long cur = 0, len = 0;\n  for (int i = 0; i < n; i++) {\n    long long x = (s[i] == 'W');\n    if (x != cur) {\n      if (cur == 0)\n        a.push_back(len);\n      else\n        b.push_back(len);\n      cur = x;\n      len = 0;\n    }\n    len++;\n  }\n  if (cur == 0)\n    a.push_back(len);\n  else {\n    b.push_back(len);\n    a.push_back(0);\n  }\n  long long cz = 0;\n  for (long long &x : a) cz += x;\n  if (cz <= k) {\n    cout << 2 * n - 1 << \"\\n\";\n    return;\n  }\n  if (b.empty()) {\n    cout << max(0LL, 2 * k - 1) << \"\\n\";\n    return;\n  }\n  long long ans = 0;\n  for (long long &x : b) ans += 2 * x - 1;\n  a.pop_back();\n  reverse(a.begin(), a.end());\n  a.pop_back();\n  sort(a.begin(), a.end());\n  ans += 2 * k;\n  for (long long &x : a) {\n    if (x <= k)\n      ans++, k -= x;\n    else\n      break;\n  }\n  cout << ans << \"\\n\";\n}\nint32_t main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  int t = 1;\n  cin >> t;\n  for (int i = 1; i <= t; i++) {\n    check();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class B {\n    public static void main(String[] args){\n        Scanner sc = new Scanner(System.in);\n        PrintWriter out = new PrintWriter(System.out);\n        int test = sc.nextInt();\n        for(int t=0;t<test;t++){\n            int n = sc.nextInt();\n            int k = sc.nextInt();\n            String outcome = sc.next();\n            int startL = 0;\n            int endL = 0;\n            int temp = 0;\n            int ans =0;\n            List<Integer> midL = new ArrayList<>();\n            for(int i =0;i<n;i++){\n                // if(outcome.charAt(i)=='L')l++;\n                if(outcome.charAt(i)=='W'){\n                    if(i!=0 && outcome.charAt(i-1)=='W')ans+=(long)2;\n                    else ans+=(long)1;\n                }\n            }\n            boolean startW = false;\n            for(int i =0;i<n;i++){\n                if(!startW){\n                    if(outcome.charAt(i)=='L')startL++;\n                    else{\n                        startW = true;\n                    }\n                }\n                else{\n                    if(outcome.charAt(i)=='L'){\n                        temp++;\n                    }\n                    else if(outcome.charAt(i)=='W'){\n                        if(temp!=0){\n                            midL.add(temp);\n                            temp=0;\n                        }\n                    }\n                }\n            }\n            // out.println(ans);\n            if(temp!=0)endL =temp;\n            Collections.sort(midL);\n            int i =0;\n            while(k>0){\n                if(i<midL.size()){\n                    if(k<midL.get(i))ans--;\n                    ans += (long)Math.min(k,midL.get(i))*2;\n                    k = k - midL.get(i);\n                    ans++; \n                    \n                    i++;\n                    \n                }\n                else if(startL>0){\n                    if(startW){\n                        // if(k<startL){\n                        //     ans--;\n                        // }\n                        // out.println(ans);\n                        ans += (long)Math.min(k,startL)*2;\n                    // ans++;\n                    k = k - startL;\n                    startL=0;\n                    }\n                    else{\n                        // out.println(ans);\n                        ans+= (long)Math.min(k,startL)*2;\n                        ans--;\n                        break;\n                    }\n                    \n                    // break;\n                }\n                else{\n                    // out.println(ans);\n                    ans += (long)Math.min(k,endL)*2;\n                    break;\n                }\n            }\n            // int l = 0;\n            // // int w = 0;\n            // long ans = 0;\n            // for(int i =0;i<n;i++){\n            //     if(outcome.charAt(i)=='L')l++;\n            //     if(outcome.charAt(i)=='W'){\n            //         if(i!=0 && outcome.charAt(i-1)=='W')ans+=(long)2;\n            //         else ans+=(long)1;\n            //     }\n            // }\n            // if(k>l)ans += (long)2*l;\n            // else{\n            //     if(ans==0)ans--;\n            //     ans += (long)2*k;\n                \n            // }\n            // out.println(startL);\n            // out.println(endL);\n            out.println(ans);\n\n        }\n        out.close();\n        sc.close();\n\n    }\n}"
        },
        {
            "language": 3,
            "solution": "I=input\nfor _ in[0]*int(I()):\n n,k=map(int,I().split());s=I();a=sorted(map(len,s.strip('L').split('W')));r=k\n while a and a[0]<=r:r-=a.pop(0)\n print((2*min(n,s.count('W')+k)-len(a)or 1)-1)"
        },
        {
            "language": 3,
            "solution": "import sys\nreader = (s.rstrip() for s in sys.stdin)\ninput = reader.__next__\nfrom collections import defaultdict\n\ndef gift():\n    for _ in range(t):\n        n,k = list(map(int,input().split())) \n        array = input() \n        dic = defaultdict(lambda:0)\n        dicLis = []\n        curr = 0\n        win = 0\n        score = 0\n        for i in range(n):\n            if array[i]==\"W\":\n                if win>0:\n                    score+=2\n                else:\n                    score+=1\n                win += 1\n                dicLis.append(curr)\n                curr=0\n            else:\n                win = 0\n                curr+=1\n        dicLis.append(curr)\n\n        for i in range(1,len(dicLis)-1):\n            if dicLis[i]:\n                dic[dicLis[i]]+=1\n        itemRino = sorted(list(dic.items()))\n\n        for ele in itemRino:\n            gap, count = ele\n            while count:\n                \n                if k>=gap:\n                    score += gap*2+1\n                else:\n                    score += k*2\n                count-=1\n                k -= gap\n                #print(gap,k,score)\n                if  k<=0:\n                    break\n            if k<=0:\n                break\n        if k>0:\n            if len(dicLis)>1 and dicLis[-1]>0:\n                score += 2*(min(k,dicLis[-1]))\n                k-=dicLis[-1]\n        if k>0:\n            if len(dicLis)>1:\n                score += 2*(min(k,dicLis[0]))\n                k-=dicLis[0]\n            else:\n                score += 2*(min(k,dicLis[0]))-1\n        yield score\n\n            \nif __name__ == '__main__':\n    t= int(input())\n    ans = gift()\n    print(*ans,sep='\\n')\n            \n\n\n#\"{} {} {}\".format(maxele,minele,minele)\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class Chess_Cheater {\n\n\tstatic class FastReader {\n\t\tBufferedReader br;\n\t\tStringTokenizer st;\n\n\t\tpublic FastReader() {\n\t\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t\t}\n\n\t\tString next() {\n\t\t\twhile (st == null || !st.hasMoreElements()) {\n\t\t\t\ttry {\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tdouble nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tString nextLine() {\n\t\t\tString str = \"\";\n\t\t\ttry {\n\t\t\t\tstr = br.readLine();\n\t\t\t} catch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\treturn str;\n\t\t}\n\n\t}\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tFastReader t = new FastReader();\n\t\tPrintWriter o = new PrintWriter(System.out);\n\t\tint test = t.nextInt();\n\n\t\twhile (test-- > 0) {\n\t\t\tint n = t.nextInt();\n\t\t\tint k = t.nextInt();\n\t\t\tchar[] ch = t.next().toCharArray();\n\t\t\tint sum = 0;\n\t\t\tint i = 0;\n\t\t\tint j = n - 1;\n\t\t\tint p = 0;\n\t\t\tList<Pair> list = new ArrayList<>();\n\n\t\t\twhile (i < n && ch[i] == 'L') {\n\t\t\t\t++i;\n\t\t\t}\n\n\t\t\twhile (j >= 0 && ch[j] == 'L') {\n\t\t\t\t--j;\n\t\t\t}\n\n\t\t\tp = i;\n\t\t\tint count = 0;\n\n\t\t\twhile (i <= j) {\n\t\t\t\tif (ch[i] == 'W') {\n\t\t\t\t\tif (count != 0) {\n\t\t\t\t\t\tlist.add(new Pair(i - count, count));\n\n\t\t\t\t\t\tcount = 0;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t++i;\n\t\t\t}\n\n\t\t\tCollections.sort(list, (Pair x, Pair y) -> x.count - y.count);\n\n\t\t\ti = 0;\n\n\t\t\twhile (k > 0) {\n\t\t\t\tif (i >= list.size())\n\t\t\t\t\tbreak;\n\n\t\t\t\tint idx = list.get(i).idx;\n\t\t\t\tcount = list.get(i).count;\n\n\t\t\t\twhile (k > 0 && count > 0) {\n\t\t\t\t\tch[idx] = 'W';\n\t\t\t\t\t++idx;\n\t\t\t\t\t--count;\n\t\t\t\t\t--k;\n\t\t\t\t}\n\n\t\t\t\t++i;\n\t\t\t}\n\n\t\t\t++j;\n\n\t\t\twhile (k > 0 && j < n) {\n\t\t\t\tch[j++] = 'W';\n\t\t\t\t--k;\n\t\t\t}\n\n\t\t\t--p;\n\n\t\t\twhile (k > 0 && p >= 0) {\n\t\t\t\tch[p--] = 'W';\n\t\t\t\t--k;\n\t\t\t}\n\n\t\t\tif (ch[0] == 'W')\n\t\t\t\tsum += 1;\n\n\t\t\tfor (i = 1; i < n; ++i) {\n\t\t\t\tif (ch[i] == 'W') {\n\t\t\t\t\tif (ch[i - 1] == 'W')\n\t\t\t\t\t\tsum += 2;\n\t\t\t\t\telse\n\t\t\t\t\t\t++sum;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\to.println(sum);\n\t\t}\n\n\t\to.flush();\n\t\to.close();\n\t}\n}\n\nclass Pair {\n\tint idx;\n\tint count;\n\n\tPair(int idx, int count) {\n\t\tthis.idx = idx;\n\t\tthis.count = count;\n\t}\n}"
        },
        {
            "language": 3,
            "solution": "#include <CodeforcesSolutions.h>\n#include <ONLINE_JUDGE <solution.cf(contestID = \"1427\",questionID = \"A\",method = \"GET\")>.h>\n\"\"\"\n    Author : thekushalghosh\n    Team   : CodeDiggers\n \n    I prefer Python language over the C++ language :p :D\n        \n    Visit my website : thekushalghosh.github.io\n\"\"\"\nimport sys,math,cmath,time,collections\nstart_time = time.time()\n##########################################################################\n################# ---- THE ACTUAL CODE STARTS BELOW ---- #################\n\ndef solve():\n    n,k = invr()\n    s = list(insr())\n    ww = 0\n    if \"W\" not in s:\n        if k == 0:\n            c = 0\n        else:\n            c = (2 * min(k,len(s))) - 1\n    elif s.count(\"W\") == 1:\n        if k == 0:\n            c = 1\n        else:\n            c = (2 * min(k + 1,len(s))) - 1\n    else:\n        q = s.index(\"W\")\n        s.reverse()\n        w = s.index(\"W\")\n        s.reverse()\n        c = 0\n        qw = []\n        for i in range(q,len(s) - w):\n            if s[i] == \"L\":\n                c = c + 1\n            elif c > 0:\n                qw.append(c)\n                c = 0\n        qw.sort(reverse = True)\n        ww = 0\n        while qw and k > 0:\n            qq = qw.pop()\n            if k >= qq:\n                k = k - qq\n                ww = ww + (qq * 2) + 1\n            else:\n                ww = ww + (k * 2)\n                k = 0\n        ww = ww + (k * 2)\n        c = 0\n        for i in range(len(s)):\n            if s[i] == \"W\":\n                if i != 0 and s[i - 1] == \"W\":\n                    c = c + 2\n                else:\n                    c = c + 1\n    print(min((2 * len(s)) - 1,c + ww))\n \n################## ---- THE ACTUAL CODE ENDS ABOVE ---- ##################\n##########################################################################\n \ndef main():\n    global tt\n    if not ONLINE_JUDGE:\n        sys.stdin = open(\"input.txt\",\"r\")\n        sys.stdout = open(\"output.txt\",\"w\")\n    t = 1\n    t = inp()\n    for tt in range(1,t + 1):\n        solve()\n    if not ONLINE_JUDGE:\n        print(\"Time Elapsed :\",time.time() - start_time,\"seconds\")\n        sys.stdout.close()\n \n#---------------------- USER DEFINED INPUT FUNCTIONS ----------------------#\ndef inp():\n    return(int(input()))\ndef inlt():\n    return(list(map(int,input().split())))\ndef insr():\n    return(input().strip())\ndef invr():\n    return(map(int,input().split()))\n \n#------------------ USER DEFINED PROGRAMMING FUNCTIONS ------------------#\ndef counter(a):\n    q = [0] * max(a)\n    for i in range(len(a)):\n        q[a[i] - 1] = q[a[i] - 1] + 1\n    return(q)\n \ndef counter_elements(a):\n    q = dict()\n    for i in range(len(a)):\n        if a[i] not in q:\n            q[a[i]] = 0\n        q[a[i]] = q[a[i]] + 1\n    return(q)\n \ndef string_counter(a):\n    q = [0] * 26\n    for i in range(len(a)):\n        q[ord(a[i]) - 97] = q[ord(a[i]) - 97] + 1\n    return(q)\n\ndef factorial(n,m = 1000000007):\n    q = 1\n    for i in range(n):\n        q = (q * (i + 1)) % m\n    return(q)\n \ndef factors(n):\n    q = []\n    for i in range(1,int(n ** 0.5) + 1):\n        if n % i == 0: q.append(i); q.append(n // i)\n    return(list(sorted(list(set(q)))))\n \ndef prime_factors(n):\n    q = []\n    while n % 2 == 0: q.append(2); n = n // 2\n    for i in range(3,int(n ** 0.5) + 1,2):\n        while n % i == 0: q.append(i); n = n // i\n    if n > 2: q.append(n)\n    return(list(sorted(q)))\n \ndef transpose(a):\n    n,m = len(a),len(a[0])\n    b = [[0] * n for i in range(m)]\n    for i in range(m): \n        for j in range(n): \n            b[i][j] = a[j][i]\n    return(b)\n\ndef power_two(x):\n    return (x and (not(x & (x - 1))))\n\ndef ceil(a, b):\n    return -(-a // b)\n\ndef seive(n):\n    a = [1]\n    prime = [True for i in range(n+1)] \n    p = 2\n    while (p * p <= n): \n        if (prime[p] == True): \n            for i in range(p ** 2,n + 1, p): \n                prime[i] = False\n        p = p + 1\n    for p in range(2,n + 1): \n        if prime[p]: \n            a.append(p)\n    return(a)\n#-----------------------------------------------------------------------#\nONLINE_JUDGE = __debug__\nif ONLINE_JUDGE:\n    #import io,os\n    #input = io.BytesIO(os.read(0,os.fstat(0).st_size)).readline\n    input = sys.stdin.readline\n    \n    \n    \n    \nmain()"
        },
        {
            "language": 4,
            "solution": "\n\n    import java.util.*;\n    import java.lang.*;\n    import java.io.*;   \n    import java.math.*;\n    public class Prac{     \n        static class InputReader { \n            private final InputStream stream;\n            private final byte[] buf = new byte[8192];\n            private int curChar, snumChars;\n            public InputReader(InputStream st) {\n                this.stream = st;\n            } \n            public int read() {\n                if (snumChars == -1)\n                    throw new InputMismatchException();\n                if (curChar >= snumChars) {\n                    curChar = 0;\n                    try {\n                        snumChars = stream.read(buf);\n                    } \n                    catch (IOException e) {\n                        throw new InputMismatchException();\n                    }\n                    if (snumChars <= 0)\n                        return -1;\n                }\n                return buf[curChar++];\n            }\n            public int ni() {\n                int c = read();\n                while (isSpaceChar(c)) {\n                    c = read();\n                }\n                int sgn = 1;\n                if (c == '-') {\n                    sgn = -1;\n                    c = read();\n                }\n                int res = 0;\n                do {\n                    res *= 10;\n                    res += c - '0';\n                    c = read();\n                } while (!isSpaceChar(c));\n                return res * sgn;\n            } \n            public long nl() {\n                int c = read();\n                while (isSpaceChar(c)) {\n                c = read();\n                }\n                int sgn = 1;\n                if (c == '-') {\n                    sgn = -1;\n                    c = read();\n                }\n                long res = 0;\n                do {\n                    res *= 10;\n                    res += c - '0';\n                    c = read();\n                } while (!isSpaceChar(c));\n                return res * sgn;\n            } \n            public int[] nia(int n) {\n                int a[] = new int[n];\n                for (int i = 0; i < n; i++) {\n                    a[i] = ni();\n                }\n                return a;\n            } \n            public int[] nia1(int n) {\n                int a[] = new int[n+1];\n                for (int i = 1; i <=n; i++) {\n                    a[i] = ni();\n                }\n                return a;\n            } \n            public long[] nla(int n) {\n                long a[] = new long[n];\n                for (int i = 0; i < n; i++) {\n                    a[i] = nl();\n                }\n                return a;\n            } \n            public long[] nla1(int n) {\n                long a[] = new long[n+1];\n                for (int i = 1; i <= n; i++) {\n                    a[i] = nl();\n                }\n                return a;\n            } \n            public Long[] nLa(int n) {\n                Long a[] = new Long[n];\n                for (int i = 0; i < n; i++) {\n                    a[i] = nl();\n                }\n                return a;\n            } \n            public Long[] nLa1(int n) {\n                Long a[] = new Long[n+1];\n                for (int i = 1; i <= n; i++) {\n                    a[i] = nl();\n                }\n                return a;\n            } \n            public Integer[] nIa(int n) {\n                Integer a[] = new Integer[n];\n                for (int i = 0; i < n; i++) {\n                    a[i] = ni();\n                }\n                return a;\n            } \n            public Integer[] nIa1(int n) {\n                Integer a[] = new Integer[n+1];\n                for (int i = 1; i <= n; i++) {\n                    a[i] = ni();\n                }\n                return a;\n            } \n            public String rs() {\n                int c = read();\n                while (isSpaceChar(c)) {\n                    c = read();\n                }\n                StringBuilder res = new StringBuilder();\n                do {\n                    res.appendCodePoint(c);\n                        c = read();\n                } while (!isSpaceChar(c));\n                return res.toString();\n            }\n            public String nextLine() {\n                int c = read();\n                while (isSpaceChar(c))\n                    c = read();\n                StringBuilder res = new StringBuilder();\n                do {\n                    res.appendCodePoint(c);\n                    c = read();\n                } while (!isEndOfLine(c));\n                return res.toString();\n            } \n            public boolean isSpaceChar(int c) {\n                return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n            }\n\n            private boolean isEndOfLine(int c) {\n                return c == '\\n' || c == '\\r' || c == -1;\n            } \n        }\n        public static class Key {\n            private final int x, y;\n            public Key(int x, int y) {\n                this.x = x; this.y = y;\n            }\n            @Override\n            public boolean equals(Object o) {\n                if (this == o) return true;\n                if (!(o instanceof Key)) return false;\n                Key key = (Key) o;\n                return x == key.x && y == key.y;\n            }   \n            @Override\n            public int hashCode() {\n                int result = x;\n                result = 31 * result + y;\n                return result;\n            }\n        }\n        static class Pair{\n                int x,y;\n                Pair(int a,int b){\n                        x=a;y=b;\n                }\n    //            @Override\n    //            public int compareTo(Pair p) {\n    //                    if(x==p.x) return y-p.y;\n    //                    return x-p.x;\n    //            }\n        }\n        static void shuffleArray(int temp[]){\n            int n = temp.length;\n            Random rnd = new Random();\n            for(int i=0; i<n; ++i){\n                int tmp = temp[i];\n                int randomPos = i + rnd.nextInt(n-i);\n                temp[i] = temp[randomPos];\n                temp[randomPos] = tmp;\n            }   \n        }\n        static long gcd(long a,long b){ return b==0?a:gcd(b,a%b);}\n        static long lcm(long a,long b){return (a/gcd(a,b))*b;}\n        static PrintWriter ww = new PrintWriter(System.out);\n        static long mod=998244353L,mod1=1000000007;\n        //static int r[]={0,1,0,-1}, c[]={1,0,-1,0};\n        static long modInverse(long a, long m){\n            long num=m;\n            long x=1;\n            long power=a%mod;\n            while(num>0){\n                  if(num%2==1){\n                      x=(x*power)%mod;\n                }\n                num>>=1;\n                power=(power*power)%mod;         \n            }\n            return x;\n        }\n        static long fact[]=new long[1000005];\n        public static void findFact(){\n            fact[0]=1;\n            for(int i=1;i<=1000000;i++){\n                fact[i]=(i*fact[i-1])%mod;\n            }\n        } \n        static long ncrWithMod(int n,int r){\n            if(n<r)return 0L;\n\n            return (fact[n]*modInverse((fact[r]*fact[n-r])%mod,mod-2))%mod;\n        }\n        public static void main(String [] args){\n            InputReader sc=new InputReader(System.in); \n            int tt = sc.ni();\n            while(tt -- > 0){\n                int n = sc.ni();\n                int k = sc.ni();\n                String s = sc.nextLine();\n                char arr[] = s.toCharArray();\n                char arr1[] = s.toCharArray();\n                ArrayList<Integer> a = new ArrayList<>();\n                int count = 0;\n                int sum = 0 , last = 0;\n                PriorityQueue<Pair> pqp=new PriorityQueue<>((Pair p1,Pair p2)->(p1.x!=p2.x)?Integer.compare(p1.x,p2.x):Integer.compare(p1.y,p2.y));\n                int i = 0 , j = n - 1;\n                for(; i < n ; i ++){\n                    if(arr[i] == 'W')break;\n                }\n                for(; j >= 0 ; j --){\n                    if(arr[j] == 'W')break;\n                }\n                //a.add(i);\n                for(int l = i ; l <= j ; l ++){\n                    if(arr[l] == 'W'){\n                        a.add(l);\n                    }\n                }\n                if(a.size() == 0){\n                    for(int l = 0 ; l < n&& k > 0 ; l ++){\n                        arr[l] = 'W';\n                        k--;\n                    }\n                    k = 0;\n                }\n                for(int l = 0 ; l < a.size() - 1 ; l++){\n                    int x = a.get(l + 1) - a.get(l) - 1;\n                    if(x == 0)continue;\n                    int y = a.get(l) + 1;\n                    pqp.add(new Pair(x , y));\n                }\n                while(!pqp.isEmpty()){\n                    Pair p = pqp.poll();\n                    for(int l = p.y ; l < p.x + p.y && k > 0 ; l ++ ){\n                        arr[l] = 'W';\n                        k--;\n                    }\n                }\n                if(k > 0){\n                    for(int l = a.get(0) - 1 ; l >= 0 && k > 0 ; l--){\n                        arr[l] = 'W';\n                        k--;\n                    }\n                    for(int l = a.get(a.size() - 1) + 1 ; l < n && k > 0 ; l ++){\n                        arr[l] = 'W';\n                        k--;\n                    }\n                }\n                boolean f = false;\n                for(i = 0; i < n ; i ++){\n                    if(arr[i] == 'W'){\n                        if(f)sum += 2;\n                        else{\n                            sum ++;\n                            f = true;\n                        }\n                    }\n                    else{\n                        f = false;\n                    }\n                }\n                ww.println(sum);\n//                for(int i = 0 ; i < n ; i ++){\n//                    if(arr[i] == 'L'){\n//                        continue;\n//                    }\n//                    else{\n//                        pqp.add(new Pair(i - last , last));\n//                        last = i + 1;\n//                    }\n//                }\n//                \n//                for(int i = 1 ; i< n && k > 0 ; i ++){\n//                    if(arr[i - 1] == 'W' && arr[i] == 'L'){\n//                        arr[i] = 'W';\n//                        k--;\n//                    }\n//                }\n//                for(int i = n - 2 ; i >= 0 && k > 0; i --){\n//                    if(arr[i + 1] == 'W' && arr[i] == 'L'){\n//                        arr[i] = 'W';\n//                        k--;\n//                    }\n//                }\n//                for(int i = 0 ; i < n && k > 0; i ++){\n//                    if(arr[i] == 'L'){\n//                        arr[i] = 'W';\n//                        k--;\n//                    }\n//                }\n//                //int sum = 0;\n//                boolean f = false;\n//                for(int i = 0 ; i < n ; i ++){\n//                    if(arr[i] == 'W'){\n//                        if(f)sum += 2;\n//                        else{\n//                            sum++;\n//                            f = true;\n//                        }\n//                    }\n//                    else f = false;\n//                }\n//                ww.println(sum);\n//                for(int i = 0 ; i < n ; i ++){\n//                    if(arr[i] == 'W'){\n//                        a.add(count);\n//                        count = 0;\n//                        if(i > 0){\n//                            if(arr[i-1] == 'W')sum += 2;\n//                            else sum++;\n//                        }\n//                        else{\n//                            sum++;\n//                        }\n//                    }\n//                    else{\n//                        count++;\n//                    }\n//                }\n//                if(count > 0)a.add(count - 1);\n//                Collections.sort(a);\n//                for(int i : a){\n//                    if(i == 0)continue;\n//                    if(i <= k){\n//                        sum += 2*i + 1;\n//                        k -= i;\n//                    }\n//                    else{\n//                        sum += 2*k;\n//                        k = 0;\n//                    }\n//                    if(k <= 0)break;\n//                }\n//                ww.println(sum);\n            }\n            ww.close();\n        }\n    }\n    "
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class Codeforces\n{\n    public static void main(String args[])throws Exception\n    {\n        BufferedReader bu=new BufferedReader(new InputStreamReader(System.in));\n        StringBuilder sb=new StringBuilder();\n        int t=Integer.parseInt(bu.readLine());\n        while(t-->0)\n        {\n            String s[]=bu.readLine().split(\" \");\n            int n=Integer.parseInt(s[0]),k=Integer.parseInt(s[1]);\n            char c[]=bu.readLine().toCharArray();\n            int i,l=0;\n            for(i=0;i<n;i++)\n            if(c[i]=='L') l++;\n\n            if(k>=l)\n            {\n                l=2*n-1;\n                sb.append(l+\"\\n\");\n                continue;\n            }\n            if(l==n)\n            {\n                sb.append(Math.max(0,2*k-1)+\"\\n\");\n                continue;\n            }\n\n            while(k>0)\n            {\n                boolean move=false;\n                for(i=1;i<n-1;i++)\n                if(k>0 && c[i]=='L' && c[i-1]=='W' && c[i+1]=='W')\n                {\n                    c[i]='W';\n                    k--;\n                    move=true;\n                }\n                if(!move) break;\n            }\n\n            for(i=0;i<n;i++)\n            if(c[i]=='W') break;\n            l=0;\n            ArrayList<Type> gap=new ArrayList<>();\n            for(;i<n;i++)\n            if(c[i]=='W')\n            {\n                if(l>0) gap.add(new Type(l,i-l,i-1));\n                l=0;\n            }\n            else l++;\n\n            Collections.sort(gap, new Comparator<Type>() {\n                @Override\n                public int compare(Type o1, Type o2) {\n                    if(o1.l>o2.l) return 1;\n                    else if(o1.l==o2.l) return o1.x<=o2.x?1:-1;\n                    else return -1;\n                }});\n\n            int ans=0,j; i=0;\n            while(k!=0 && i<gap.size())\n            {\n                if(k>=gap.get(i).l)\n                {\n                    k-=gap.get(i).l;\n                    for(j=gap.get(i).x;j<=gap.get(i).y;j++)\n                    c[j]='W';\n                }\n                else\n                {\n                    for(j=gap.get(i).x;j<=gap.get(i).y;j++)\n                    if(k==0) break;\n                    else\n                    {\n                        c[j]='W';\n                        k--;\n                    }\n                }\n                i++;\n            }\n            if(k!=0)\n            {\n                for(i=n-1;i>=0;i--)\n                if(c[i]=='W') break;\n                i++;\n                for(;i<n;i++)\n                if(k==0) break;\n                else {c[i]='W'; k--;}\n\n                for(i=0;i<n;i++)\n                if(c[i]=='W') break;\n                i--;\n                for(;i>=0;i--)\n                if(k==0) break;\n                else {c[i]='W'; k--;}\n            }\n\n            for(i=0;i<n;i++)\n            {\n                if(i==0 && c[i]=='W') ans++;\n                if(i>0 && c[i]=='W')\n                {\n                    if(c[i-1]=='W') ans+=2;\n                    else ans++;\n                }\n            }\n            sb.append(ans+\"\\n\");\n        }\n        System.out.print(sb);\n    }\n\n    static class Type\n    {\n        int l,x,y;\n        Type(int a,int b,int c)\n        {\n            l=a;\n            x=b;\n            y=c;\n        }\n    }\n}"
        },
        {
            "language": 1,
            "solution": "from collections import Counter, defaultdict, deque\nimport bisect\nfrom sys import stdin, stdout\nfrom itertools import repeat\nimport math\n\n# sys.stdin = open('input')\n\ndef mod(x, y, mod):\n    re = 1\n    now = x\n    while y:\n        if y&1:\n            re *= now\n            re %= mod\n        y >>= 1\n        now = (now*now)%mod\n    return re\n\ndef inp(force_list=False):\n    re = map(int, raw_input().split())\n    if len(re) == 1 and not force_list:\n        return re[0]\n    return re\n\ndef inst():\n    return raw_input().strip()\n\ndef gcd(x, y):\n   while(y):\n       x, y = y, x % y\n   return x\n\nMOD = int(1e9+7)\n\ndef query(ty, num):\n    if ty==0:\n        print 'A %d' % num\n    else:\n        print 'B %d' % num\n    stdout.flush()\n    return inp()\n\ndef my_main():\n    T = inp()\n    ans = []\n    for _ in range(T):\n        n, k = inp()\n        st = inst()\n        ll = []\n        sc = 0\n        l, r = 0, 0\n        for i in range(n):\n            if st[i]=='L':\n                l += 1\n            else:\n                break\n        for i in range(n-1, -1, -1):\n            if st[i]=='L':\n                r += 1\n            else:\n                break\n        if l==n:\n            if k:\n                ans.append(str(min(k, l)*2-1))\n            else:\n                ans.append('0')\n            continue\n        tmp = 0\n        for i in range(l, n-r):\n            if st[i] == 'W':\n                if i>0 and st[i-1]=='W':\n                    sc += 2\n                else:\n                    sc += 1\n                if tmp:\n                    ll.append(tmp)\n                tmp = 0\n            else:\n                tmp += 1\n        ll.sort()\n        for i in ll:\n            if k>=i:\n                sc += i*2+1\n                k -= i\n            else:\n                sc += k*2\n                k = 0\n        if k and l:\n            sc += min(k, l)*2\n            k -= min(k, l)\n        if k and r:\n            sc += min(k, r)*2\n            k -= min(k, r)\n        ans.append(str(sc))\n    print '\\n'.join(ans)\n\n\n\n\n\n\n\n\nmy_main()\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int T, N, K;\n  cin >> T;\n  while (T--) {\n    cin >> N >> K;\n    string s;\n    cin >> s;\n    int i = 0, ws = 0, wstreaks = 0;\n    vector<int> scount(s.size());\n    while (i < s.size() && s[i] == 'L') ++i;\n    while (i < s.size()) {\n      while (i < s.size() && s[i] == 'W') ++i, ++ws;\n      ++wstreaks;\n      int lstreak = 0;\n      while (i < s.size() && s[i] == 'L') ++i, ++lstreak;\n      if (i != s.size()) ++scount[lstreak];\n    }\n    for (int i = 1; i < scount.size(); ++i) {\n      int count = min(scount[i], K / i);\n      K -= count * i;\n      wstreaks -= count;\n      ws += count * i;\n    }\n    ws += min(K, (int)s.size() - ws);\n    if (wstreaks == 0 && ws) wstreaks = 1;\n    int score = 2 * ws - wstreaks;\n    cout << score << '\\n';\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\nimport java.math.*;\n\npublic class B {\n\tpublic static void main(String[] args) throws IOException {\n\n\t\t/**/\n\t\tScanner sc = new Scanner(new BufferedReader(new InputStreamReader(System.in)));\n\t\t/*/\n\t\tScanner sc = new Scanner(new BufferedReader(new InputStreamReader(new FileInputStream(\"src/b.in\"))));\n\t\t/**/\n\t\t\n\t\tint t = sc.nextInt();\n\t\tfor (int z = 0; z < t; ++z) {\n\t\t\tint n = sc.nextInt();\n\t\t\tint k = sc.nextInt();\n\t\t\tString s = sc.next();\n\t\t\t\n\t\t\tint cs = 0;\n\t\t\tint los = 0;\n\t\t\tfor (int i = 0; i < n; ++i) {\n\t\t\t\tif (s.charAt(i)=='W') {\n\t\t\t\t\t++cs;\n\t\t\t\t\tif (i>0&&s.charAt(i-1)=='W')\n\t\t\t\t\t\t++cs;\n\t\t\t\t} else {\n\t\t\t\t\t++los;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (k==0) {\n\t\t\t\tSystem.out.println(cs);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (cs==0) {\n\t\t\t\tSystem.out.println(k*2-1);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (k>=los) {\n\t\t\t\tSystem.out.println(n*2-1);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tint bet = -10000000;\n\t\t\tPriorityQueue<Integer> pq = new PriorityQueue<>();\n\t\t\tfor (int i = 0; i < n; ++i) {\n\t\t\t\tif (s.charAt(i)=='W') {\n\t\t\t\t\tif (bet>0)\n\t\t\t\t\t\tpq.add(bet);\n\t\t\t\t\tbet = 0;\n\t\t\t\t} else {\n\t\t\t\t\t++bet;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcs += 2*k;\n\t\t\twhile (!pq.isEmpty()) {\n\t\t\t\tint np = pq.poll();\n\t\t\t\tif (np>k)\n\t\t\t\t\tbreak;\n\t\t\t\tk-=np;\n\t\t\t\t++cs;\n\t\t\t}\n\t\t\tSystem.out.println(cs);\n\t\t}\n\t}\n}"
        },
        {
            "language": 3,
            "solution": "import array\nT=int(input())\nfor Tid in range(T):\n    n,k=map(int,input().split())\n    a=input()\n    def c1():\n        sum=0\n        tmp=k\n        for i in range(n):\n            if a[i]=='W':\n                sum+=2\n            else:\n                if tmp!=0:\n                    tmp,sum=tmp-1,sum+2\n        #print('ANS=%d' % sum)\n        return sum\n    def c2():\n        sum,la=0,-(1<<30)\n        b=[]\n        for i in range(n):\n            if a[i]=='W':\n                if i==0 or a[i-1]=='L':\n                    sum+=1\n                if i!=0 and a[i-1]=='L' and la>0:\n                    b.append(la)\n                la=0\n            else:\n                la=la+1\n        tmp=k\n        b=sorted(b)\n        #print(b,tmp)\n        for i in range(len(b)):\n            if tmp>=b[i]:\n                tmp-=b[i]\n                sum-=1\n        return max(sum,1)\n    print(max(c1()-c2(),0))"
        },
        {
            "language": 3,
            "solution": "import sys,io,os\nz=io.BytesIO(os.read(0,os.fstat(0).st_size)).readline\n#z=sys.stdin.readline\no=[]\nfor _ in range(int(z())):\n    n,k=map(int,z().split())\n    s=z().strip()\n    b=c=p=r=0\n    l=[]\n    for i in s:\n        if i%2:\n            if b:\n                if c:l.append(c);c=0\n            else:b=1\n            r+=1+(i==p)\n        elif b:c+=1\n        p=i\n    l.sort(reverse=True)\n    while l:\n        v=l.pop()\n        if k>=v:\n            k-=v\n            r+=2*v+1\n        else:\n            break\n    if r==0:r=-1\n    r+=2*k\n    o.append(str(min(max(r,0),2*n-1)))\nprint('\\n'.join(o))"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(NULL);\n  ;\n  int t, n, k, cnt;\n  string boi;\n  cin >> t;\n  while (t--) {\n    cin >> n >> k;\n    cin >> boi;\n    cnt = 0;\n    for (int i = 0; i < n; i++) cnt += (boi[i] == 'W');\n    if (cnt == 0) {\n      cout << max(2 * k - 1, 0) << '\\n';\n      continue;\n    }\n    if (n == 1 and k == 1 and boi == \"L\") {\n      cout << \"1\\n\";\n      continue;\n    }\n    if (n == 1 and boi == \"L\") {\n      cout << \"0\\n\";\n      continue;\n    }\n    vector<int> zero;\n    int temp = 1, sum = 0, anfang = 0, schluss = 0;\n    if (boi[0] == 'L') {\n      for (int i = 0; i < n; i++)\n        if (boi[i] == 'L')\n          anfang++;\n        else\n          break;\n    }\n    if (boi[n - 1] == 'L') {\n      for (int i = n - 1; i >= 0; i--)\n        if (boi[i] == 'L')\n          schluss++;\n        else\n          break;\n    }\n    if (boi[anfang] == 'W') sum++;\n    for (int i = 1 + anfang; i < n - schluss; i++) {\n      if (boi[i] == boi[i - 1] and boi[i] == 'L') {\n        temp++;\n      } else if (boi[i] == 'W' and boi[i - 1] == 'L') {\n        zero.push_back(temp);\n        temp = 1;\n      }\n      if (boi[i] == 'W') {\n        sum++;\n        if (i != 0 and boi[i - 1] == 'W') sum++;\n      }\n    }\n    for (int i = 0; i < zero.size(); i++) {\n      zero[i] = 2 * zero[i] + 1;\n    }\n    if (anfang > schluss) swap(anfang, schluss);\n    sort(zero.begin(), zero.end());\n    bool a = false, s = false;\n    for (auto it : zero) {\n      if (k == 0) break;\n      if (k >= it / 2) {\n        k -= it / 2;\n        sum += it;\n      } else {\n        sum += 2 * k;\n        k = 0;\n      }\n    }\n    if (!a) {\n      if (k >= anfang) {\n        k -= anfang;\n        sum += 2 * anfang;\n      } else {\n        sum += 2 * k;\n        k = 0;\n      }\n      a = true;\n    }\n    if (!s) {\n      if (k >= schluss) {\n        k -= schluss;\n        sum += 2 * schluss;\n      } else {\n        sum += 2 * k;\n        k = 0;\n      }\n      s = true;\n    }\n    cout << sum << '\\n';\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "#! /usr/bin/python3\n\nimport os\nimport sys\nfrom io import BytesIO, IOBase\n\n\ndef main():\n   for _ in range(int(input())):\n        n, k = map(int, input().split())\n        s = input()\n        ind = []\n        ans = 0\n        for i in range(n):\n            if s[i] == 'W':\n                ind.append(i)\n                if i > 0 and s[i-1] == 'W':\n                    ans += 1\n                ans += 1\n        if k == 0:\n            print(ans)\n        elif len(ind) == 0:\n            print(min(n, k) * 2 - 1)\n        else:\n            gaps = []\n            for i in range(len(ind) - 1):\n                gaps.append(ind[i+1] - ind[i] - 1)\n            gaps.sort()\n            k = min(k, n - len(ind))\n            ans += 2 * k\n            for i in gaps:\n                if i > 0:\n                    if k >= i:\n                        ans += 1\n                        k -= i\n                    else:\n                        break\n            print(ans)\n    \n\n\n# region fastio\n\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\n# endregion\n\nif __name__ == \"__main__\":\n    main()\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput=lambda: sys.stdin.readline().rstrip(\"\\r\\n\") #FOR READING STRING/TEXT INPUTS.\n \nt=int(input())\nfor _ in range(t):\n    n,k=[int(x) for x in input().split()]\n    s=list(input())\n    \n    \n    startGroup=[]\n    endGroup=[]\n    LGroups=[]\n    currLGroup=[]\n    isStart=False\n    isEnd=False\n    for i in range(n):\n        if i==0:\n            isStart=True\n        if s[i]=='W':\n            if len(currLGroup)>0:\n                if isStart:\n                    startGroup=currLGroup\n                else:\n                    LGroups.append(currLGroup)\n            isStart=False\n            currLGroup=[]\n        else:\n            currLGroup.append(i)\n    if len(currLGroup)>0:\n        endGroup=currLGroup\n    \n    finalLCount=max(s.count('L')-k,0)\n#    print('finalLCount:{}'.format(finalLCount))##\n#    print('startG:{} endG:{}'.format(startGroup,endGroup))\n    s2=['W']*n\n    if finalLCount>0:\n        for i in startGroup:\n            s2[i]='L'\n            finalLCount-=1\n            if finalLCount==0:\n                break\n    if finalLCount>0:\n        for j in range(len(endGroup)-1,-1,-1):\n            s2[endGroup[j]]='L'\n            finalLCount-=1\n            if finalLCount==0:\n                break\n    if finalLCount>0:\n        LGroups.sort(key=lambda x:len(x),reverse=True)\n        for g in LGroups:\n            for i in g:\n                s2[i]='L'\n                finalLCount-=1\n                if finalLCount==0:\n                    break\n            if finalLCount==0:\n                break\n    \n#    print(s2) ####\n    ans=0\n    for i in range(n):\n        if s2[i]=='W':\n            ans+=1\n            if i>0 and s2[i-1]=='W':\n                ans+=1\n    print(ans)"
        },
        {
            "language": 3,
            "solution": "import os\nimport sys\nfrom io import BytesIO, IOBase\n \nfrom types import GeneratorType\nBUFSIZE = 8192\nclass FastIO(IOBase):\n    newlines = 0\n \n    def __init__(self, file):\n        import os\n        self.os = os\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n \n    def read(self):\n        while True:\n            b = self.os.read(self._fd, max(self.os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n \n    def readline(self):\n        while self.newlines == 0:\n            b = self.os.read(self._fd, max(self.os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n \n    def flush(self):\n        if self.writable:\n            self.os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n \n \nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n \n \nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n \nimport time\nstart_time = time.time()\n\nimport collections as col\nimport math\nfrom functools import reduce\n\ndef getInts():\n    return [int(s) for s in input().split()]\n\ndef getInt():\n    return int(input())\n\ndef getStrs():\n    return [s for s in input().split()]\n\ndef getStr():\n    return input()\n\ndef listStr():\n    return list(input())\n\n\n\n\"\"\"\nmax number of wins is sum (2*len-1) where len = len of set of Ws\nif we add a W between two Ls, we gain one\nif we add a W between W and L or between L and W, we gain two\nif we add a W between W and W, we gain three\n\nMore generally, we want to target the shortest gaps between Ws and fill them up\nBUT we can create \nSo greedily we want to find WLW, then WL, then just L\nWWLLLLLWWLWLL\n\"\"\"\n\ndef solve():\n    N, K = getInts()\n    S = listStr()\n    if N == 1:\n        if K == 1 or S[0] == 'W':\n            return 1\n        return 0\n    gaps = []\n    curr = 0\n    wins = 0\n    for j in range(N):\n        if S[j] == 'L':\n            curr += 1\n        elif curr > 0:\n            gaps.append(curr)\n            curr = 0\n        if S[j] == 'W':\n            wins += 1\n            if j > 0 and S[j-1] == 'W':\n                wins += 1\n    if K == 0:\n        return wins\n    if S[j] == 'L':\n        gaps.append(curr)\n    #print(gaps)\n    pref = 0\n    suff = 0\n    #print(\"Win\",wins)\n    if not gaps:\n        return wins\n    if len(gaps) == 1:\n        if S[0] == 'W' and S[-1] == 'W':\n            pass\n        else:\n            if S[0] == 'W' or S[-1] == 'W':\n                change = min(K,gaps[0])\n                wins += 2*change\n                return wins\n            return 2*K-1\n    if S[0] == 'L':\n        pref = gaps[0]\n        gaps = gaps[1:]\n    if S[-1] == 'L':\n        suff = gaps[-1]\n        gaps = gaps[:-1]\n    gaps.sort(reverse=True)\n    while K and gaps:\n        x = gaps.pop()\n        change = min(K,x)\n        if change < x:\n            wins += 2*change\n        else:\n            wins += 2*change + 1\n        K -= change\n    if K:\n        change = min(K,pref+suff)\n        wins += 2*change\n        K -= change\n    return wins\n    \nfor _ in range(getInt()):    \n    print(solve())\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n\ta,b = map(int,input().split())\n\ts = input()\n\tif s==\"L\"*a:\n\t\tif b:\n\t\t\tprint(b*2-1)\n\t\telse:print(0)\n\telif s==\"W\"*a:\n\t\tprint(a*2-1)\n\telse:\n\t\tans =0\n\t\tfst,lst = -1,-1\n\t\tif s[0]==\"W\":\n\t\t\tans+=1\n\t\t\tfst =0\n\t\t\tlst =0\n\t\tfor i in range(1,a):\n\t\t\tif s[i]==\"W\":\n\t\t\t\tif fst ==-1:\n\t\t\t\t\tfst =i\n\t\t\t\tif s[i-1]==\"W\":\n\t\t\t\t\tans+=1\n\t\t\t\tans+=1\n\t\t\t\tlst = i\n\t\tif b==0:\n\t\t\tprint(ans)\n\t\t\tcontinue\n\t\tk = s[fst:lst+1].split(\"W\")\n\t\tk.sort()\n\t\tfor i in k:\n\t\t\tif len(i):\n\t\t\t\tif b>=len(i):\n\t\t\t\t\tans+=len(i)*2 +1\n\t\t\t\t\tb-=len(i)\n\t\t\t\telse:\n\t\t\t\t\tans+=b*2\n\t\t\t\t\tb=0\n\t\t\tif b==0:\n\t\t\t\tbreak\n\t\tans+=min(b,fst+a-lst-1)*2\n\t\tprint(ans)"
        },
        {
            "language": 4,
            "solution": "import java.util.Collections;\nimport java.util.Scanner;\nimport java.util.Vector;\n\npublic class ExamA {\n\tpublic static final int X = 10;\n\tpublic static void main(String[] args) {\n\t\tScanner scan = new Scanner(System.in);\n\t\tint t = scan.nextInt();\n\t\tscan.nextLine();\n\t\tint [] r = new int[t];\n\t\tfor(int m =0;m<t;m++) {\n\t\t\tint n = scan.nextInt();\n\t\t\tint k = scan.nextInt();\n\t\t\tscan.nextLine();\n\t\t\tchar[] s = scan.nextLine().toCharArray();\n\t\t\tVector v = new Vector<>();\n\t\t\tint tmp = k+X;\n\t\t\tint score = 0;\n\t\t\tfor(int i=0;i<n;i++) {\n\t\t\t\tif(s[i] == 'W') {\n\t\t\t\t\tscore += tmp>0?1:2;\n\t\t\t\t\tif (tmp >0) {\n\t\t\t\t\t\tv.add(tmp);\n\t\t\t\t\t}\n\t\t\t\t\ttmp = 0;\n\t\t\t\t}else {\n\t\t\t\t\ttmp++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (tmp == k+n+X) {\n\t\t\t\tint p = 2*(k<n?k:n)-1;\n\t\t\t\tint q = p>0?p:0;\n\t\t\t\tr[m] = q;\n\t\t\t}else {\n\t\t\t\tCollections.sort(v);\n\t\t\t\tfor (int i=0;i<v.size();i++) {\n\t\t\t\t\tint vi = (int)(v.get(i));\n\t\t\t\t\tif (k >= vi) {\n\t\t\t\t\t\tscore += 2*vi;\n\t\t\t\t\t\tscore ++;\n\t\t\t\t\t\tk -= vi;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tscore += 2*k;\n\t\t\t\tscore = score<(2*n-1)?score:(2*n-1);\n\t\t\t\tr[m] = score;\n\t\t\t}\n\t\t}\n\t\tscan.close();\n\t\tfor(int m =0;m<t;m++) {\n\t\t\tSystem.out.println(r[m]);\n\t\t}\n\t}\n}\n\t\t\t\t \t \t\t \t \t \t \t\t  \t \t      \t\t"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstruct custom_hash {\n  static uint64_t splitmix64(uint64_t x) {\n    x += 0x9e3779b97f4a7c15;\n    x = (x ^ (x >> 30)) * 0xbf58476d1ce4e5b9;\n    x = (x ^ (x >> 27)) * 0x94d049bb133111eb;\n    return x ^ (x >> 31);\n  }\n  size_t operator()(uint64_t x) const {\n    static const uint64_t FIXED_RANDOM =\n        chrono::steady_clock::now().time_since_epoch().count();\n    return splitmix64(x + FIXED_RANDOM);\n  }\n};\nconst long long MOD = 1e9 + 7;\nconst long long INF = 1e9 + 8;\nconst double pi = 3.14159265359;\nlong long binpow(long long a, long long b, long long m) {\n  a %= m;\n  long long res = 1;\n  while (b > 0) {\n    if (b & 1) res = res * a % m;\n    a = a * a % m;\n    b >>= 1;\n  }\n  return res;\n}\nlong long inverse(long long x) { return binpow(x, MOD - 2, MOD); }\nvoid solve() {\n  long long n, k;\n  cin >> n >> k;\n  string s;\n  cin >> s;\n  long long ans = 0;\n  vector<long long> a, b;\n  for (long long i = 0; i < n; i++) {\n    if (s[i] == 'W') {\n      a.push_back(i);\n      ans += 1 + (i > 0 && s[i - 1] == s[i]);\n    }\n  }\n  long long loss = 0;\n  while (s.size() > 0 && s.back() == 'L') {\n    s.pop_back();\n    loss++;\n  }\n  reverse((s).begin(), (s).end());\n  while (s.size() > 0 && s.back() == 'L') {\n    s.pop_back();\n    loss++;\n  }\n  if (a.empty()) {\n    cout << max(0LL, 2 * k - 1) << endl;\n    return;\n  }\n  for (long long i = 0; i + 1 < a.size(); i++) {\n    if (a[i + 1] - a[i] > 1) b.push_back(a[i + 1] - a[i] - 1);\n  }\n  sort((b).begin(), (b).end());\n  for (auto i : b) {\n    if (i <= k)\n      ans += 2 * i + 1, k -= i;\n    else\n      ans += 2 * k, k -= k;\n  }\n  ans += 2 * min(k, loss);\n  cout << ans << endl;\n}\nsigned main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0), cout.tie(0);\n  long long t;\n  cin >> t;\n  while (t--) solve();\n  cerr << \"Time elapsed : \" << 1.0 * clock() / CLOCKS_PER_SEC << \" sec \\n \";\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid NITRO() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n}\nconst long long N = 1e+5 + 1111;\nconst long long MOD = 1e7;\nconst long long INF = 1e+9 + 12345678;\nvoid SOLVE() {\n  int n, k, lose = 0, l = -1, s = 0;\n  string word;\n  cin >> n >> k >> word;\n  vector<int> v;\n  for (int i = 0; i < n; i++) {\n    if (word[i] == 'W') {\n      s += 2;\n      if (l != -1) v.push_back(i - l);\n      l = -1;\n    } else {\n      lose++;\n      if (word[i - 1] == 'W') {\n        l = i;\n      }\n    }\n  }\n  if (lose == n) {\n    if (k == 0)\n      cout << 0 << '\\n';\n    else\n      cout << k * 2 - 1 << '\\n';\n  } else if (k >= lose) {\n    cout << n * 2 - 1 << '\\n';\n  } else {\n    s += k * 2;\n    sort(v.begin(), v.end());\n    reverse(v.begin(), v.end());\n    while (!v.empty()) {\n      if (v.back() <= k) {\n        k -= v.back();\n        v.pop_back();\n      } else\n        break;\n    }\n    cout << s - v.size() - 1 << '\\n';\n  }\n}\nint main() {\n  NITRO();\n  int times = 1;\n  cin >> times;\n  for (int i = 1; i <= times; i++) {\n    SOLVE();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "/*\n\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2877\u28ef\u28bf\u28ff\u28f7\u28fb\u28af\u28ff\u287d\u28fb\u28bf\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28c7\u2838\u28ff\u28ff\u28c6\u2839\u28ff\u28ff\u28be\u28df\u28ef\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28fd\u28fb\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\n\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28fb\u28fd\u287f\u28ff\u28ce\u2819\u28ff\u28de\u28f7\u284c\u28bb\u28df\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28f7\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2844\u2839\u28ff\u28ff\u2846\u283b\u28ff\u28df\u28ef\u287f\u28fd\u287f\u28ff\u28ff\u28ff\u28ff\u28fd\u2877\u28ef\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\n\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28df\u28f7\u28ff\u28ff\u28ff\u2840\u2839\u28df\u28fe\u28df\u28c6\u2839\u28ef\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2847\u28a0\u2858\u28ff\u28ff\u2844\u2809\u28bf\u28ff\u28fd\u2877\u28ff\u28fb\u28ff\u28ff\u28ff\u28ff\u285d\u28f7\u28ef\u28bf\u28ff\u28ff\u28ff\u28ff\n\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ef\u28bf\u28fe\u28bf\u28ff\u2844\u2884\u2818\u28bf\u28de\u287f\u28e7\u2848\u28b7\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2847\u28b8\u28e7\u2818\u28ff\u28f7\u2808\u28e6\u2819\u28bf\u28fd\u28f7\u28fb\u28fd\u28ff\u28ff\u28ff\u28ff\u28cc\u28bf\u28ef\u28bf\u28ff\u28ff\u28ff\n\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28df\u28ef\u28ff\u28bf\u28ff\u2846\u28b8\u2877\u2848\u28bb\u287d\u28f7\u2877\u2844\u283b\u28fd\u28ff\u28ff\u287f\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28f7\u28ff\u28ff\u28ff\u28ff\u28cf\u28b0\u28ef\u28b7\u2808\u28ff\u2846\u28b9\u28b7\u284c\u283b\u287e\u288b\u28f1\u28ef\u28ff\u28ff\u28ff\u28ff\u2846\u28bb\u287f\u28ff\u28ff\u28ff\n\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u284e\u28ff\u28be\u287f\u28ff\u2846\u28b8\u28fd\u28bb\u28c4\u2839\u28f7\u28df\u28ff\u28c4\u2839\u28df\u28ff\u28ff\u28df\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28fd\u28ff\u28ff\u28ff\u2847\u28b8\u28ef\u28df\u28e7\u2818\u28f7\u2808\u286f\u281b\u2880\u2850\u28be\u28df\u28f7\u28fb\u28ff\u28ff\u28ff\u287f\u284c\u28bf\u28fb\u28ff\u28ff\n\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28e7\u28b8\u287f\u28df\u28ff\u2847\u28b8\u28ef\u28df\u28ee\u28a7\u2848\u28bf\u28de\u287f\u28e6\u2818\u280f\u28f9\u28ff\u28fd\u28bf\u28ff\u28ff\u28ff\u28ff\u28ef\u28ff\u28ff\u28ff\u2847\u28b8\u28ff\u28ff\u28fe\u2846\u2839\u2880\u28e0\u28fe\u28df\u28f7\u2848\u28bf\u28de\u28ef\u28bf\u28ff\u28ff\u28ff\u28b7\u2818\u28ef\u28ff\u28ff\n\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2848\u28ff\u28bf\u28fd\u2847\u2818\u281b\u281b\u281b\u2813\u2813\u2808\u281b\u281b\u281f\u2807\u2880\u28bf\u28fb\u28ff\u28ef\u28bf\u28ff\u28ff\u28ff\u28f7\u28bf\u28ff\u28ff\u2801\u28fe\u28ff\u28ff\u28ff\u28e7\u2844\u2807\u28f9\u28ff\u28fe\u28ef\u28ff\u2844\u283b\u28fd\u28ef\u28bf\u28fb\u28ff\u28ff\u2847\u28b9\u28fe\u28ff\n\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2847\u28b9\u28ff\u287d\u2847\u28b8\u28ff\u28ff\u28ff\u28ff\u28ff\u28de\u28c6\u2830\u28f6\u28f6\u2844\u2880\u28bb\u287f\u28ef\u28ff\u287d\u28ff\u28ff\u28ff\u28af\u28df\u287f\u2880\u28ff\u28ff\u28ff\u28ff\u28ff\u28e7\u2810\u28f8\u28ff\u28ff\u28f7\u28ff\u28ff\u28c6\u2839\u28ef\u28ff\u28fb\u28ff\u28ff\u28ff\u2880\u28ff\u28bf\n\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2818\u28ef\u287f\u2847\u28b8\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28e7\u2848\u28bf\u28f3\u2818\u2844\u283b\u28ff\u28be\u28fd\u28df\u287f\u28ff\u28af\u28ff\u2847\u28b8\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2840\u28be\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28c6\u2839\u28fe\u28f7\u28fb\u28ff\u287f\u2847\u28b8\u28ff\n\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2847\u28b9\u28ff\u2807\u28b8\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28f7\u28c4\u283b\u2847\u28b9\u28c6\u2839\u28df\u28fe\u28fd\u28fb\u28df\u28ff\u28fd\u2801\u28fe\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28c7\u28ff\u28ff\u283f\u281b\u281b\u2809\u2819\u280b\u2880\u2801\u2898\u28ef\u28ff\u28ff\u28e7\u2818\u28ff\n\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2848\u28ff\u2843\u28bc\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28e6\u2859\u280c\u28ff\u28c6\u2818\u28ff\u28de\u287f\u28de\u287f\u285e\u28a0\u28ff\u28ff\u28ff\u28ff\u28ff\u287f\u281b\u2809\u2801\u2880\u28c0\u28e0\u28e4\u28e4\u28f6\u28f6\u28f6\u2846\u28bb\u28fd\u28de\u287f\u28f7\u2808\u28ff\n\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u287f\u2803\u2818\u2801\u2809\u2809\u2809\u2809\u2809\u2809\u2809\u2809\u2809\u2819\u281b\u281b\u28bf\u28c4\u28bb\u28ff\u28e7\u2818\u28af\u28df\u287f\u28fd\u2801\u28fe\u28ff\u28ff\u28ff\u28ff\u28ff\u2843\u2880\u2880\u2818\u281b\u283f\u28bf\u28fb\u28df\u28ef\u28fd\u28fb\u28f5\u2840\u28bf\u28ef\u28df\u28ff\u2880\u28ff\n\u28ff\u28ff\u28ff\u28df\u28ff\u28ff\u28ff\u28ff\u28f6\u28f6\u2846\u2880\u28ff\u28fe\u28ff\u28fe\u28f7\u28ff\u28f6\u283f\u281a\u2809\u2880\u2880\u28e4\u28ff\u28f7\u28ff\u28ff\u28f7\u2848\u28bf\u28fb\u2883\u28fc\u28ff\u28ff\u28ff\u28ff\u28fb\u28ff\u28ff\u28ff\u2876\u28e6\u28e4\u28c4\u28c0\u2840\u2809\u281b\u281b\u2837\u28ef\u28f3\u2808\u28fe\u287d\u28fe\u2880\u28ff\n\u28ff\u28bf\u28ff\u28ff\u28fb\u28ff\u28ff\u28ff\u28ff\u28ff\u287f\u2810\u28ff\u28ff\u28ff\u28ff\u283f\u280b\u2801\u2880\u2880\u28e4\u28fe\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28cc\u28e5\u28fe\u287f\u28ff\u28ff\u28f7\u28ff\u28ff\u28bf\u28f7\u28ff\u28ff\u28df\u28fe\u28fd\u28f3\u28af\u28df\u28f6\u28e6\u28e4\u287e\u28df\u28e6\u2818\u28ff\u28be\u2841\u28ba\n\u28ff\u28fb\u28ff\u28ff\u2877\u28ff\u28ff\u28ff\u28ff\u28ff\u2857\u28e6\u2838\u287f\u280b\u2801\u2880\u2880\u28e0\u28f4\u28bf\u28ff\u28fd\u28fb\u28bd\u28fe\u28df\u28f7\u28ff\u28df\u28ff\u28ff\u28ff\u28f3\u283f\u28f5\u28e7\u28fc\u28ff\u28ff\u28ff\u28ff\u28ff\u28fe\u28ff\u28ff\u28ff\u28ff\u28ff\u28fd\u28f3\u28ef\u28ff\u28ff\u28ff\u28fd\u2880\u28b7\u28fb\u2804\u2818\n\u28ff\u28b7\u28fb\u28ff\u28ff\u28f7\u28fb\u28ff\u28ff\u28ff\u2877\u281b\u28c1\u2880\u28c0\u28e4\u28f6\u28ff\u28db\u287f\u28ff\u28ee\u28fd\u287b\u28ff\u28ee\u28fd\u28fb\u28af\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ef\u2880\u28b8\u28ff\u2880\u2846\n\u2838\u28df\u28ef\u28ff\u28ff\u28f7\u28bf\u28fd\u28ff\u28ff\u28f7\u28ff\u28f7\u28c6\u2839\u28ff\u28f6\u28ef\u283f\u28ff\u28f6\u28df\u28fb\u28bf\u28f7\u28fd\u28fb\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2880\u28ef\u28df\u2880\u2847\n\u28c7\u2839\u28df\u28fe\u28fb\u28ff\u28ff\u28be\u287d\u28ff\u28ff\u28ff\u28ff\u28ff\u28c6\u28b9\u28f6\u28ff\u28fb\u28f7\u28ef\u28df\u28ff\u28ff\u28fd\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u287f\u2880\u287f\u2847\u28b8\u2847\n\u28ff\u28c6\u2839\u28f7\u287b\u28fd\u28ff\u28ef\u28bf\u28fd\u28fb\u28ff\u28ff\u28ff\u28ff\u28c6\u28bb\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u281b\u28bb\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2807\u28b8\u28ff\u2807\u28fc\u2847\n\u2859\u283e\u28c6\u2839\u28ff\u28e6\u281b\u28ff\u28af\u28f7\u28bf\u287d\u28ff\u28ff\u28ff\u28ff\u28c6\u283b\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2803\u280e\u28b8\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u280f\u2880\u28ff\u28fe\u28e3\u287f\u2847\n\u28ff\u28f7\u284c\u28a6\u2819\u28ff\u28ff\u28cc\u283b\u28fd\u28af\u28ff\u28fd\u28fb\u28ff\u28ff\u28ff\u28e7\u2829\u28bb\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u284f\u28b0\u28a3\u2818\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u287f\u2803\u2880\u2880\u28bf\u28de\u28f7\u28bf\u2847\n\u28ff\u28fd\u28c6\u2839\u28e7\u2818\u28ff\u28ff\u2877\u28cc\u2819\u28b7\u28ef\u2877\u28df\u28ff\u28ff\u28ff\u28f7\u2840\u2879\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28f7\u28c8\u2803\u28f8\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u281f\u2880\u28f4\u2867\u2880\u2838\u28ff\u287d\u28ff\u2880\n\u28bb\u28fd\u28ff\u2844\u28bb\u28f7\u2848\u28bf\u28ff\u28ff\u28a7\u2880\u2819\u28bf\u28fb\u287e\u28fd\u28fb\u28ff\u28ff\u28c4\u280c\u28bf\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u281b\u2881\u28f0\u28fe\u28df\u287f\u2880\u2844\u28bf\u28df\u28ff\u2880\n\u2844\u28bf\u28ff\u28f7\u2880\u2839\u28df\u28c6\u283b\u28ff\u28ff\u28c6\u2880\u28c0\u2809\u283b\u28ff\u287d\u28ef\u28ff\u28ff\u28f7\u28c8\u28bb\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u287f\u280b\u2880\u28e0\u2818\u28ef\u28f7\u28ff\u285f\u2880\u2886\u2838\u28ff\u285f\u28b8\n\u28f7\u2848\u28bf\u28ff\u28c7\u28b1\u2858\u28bf\u28f7\u28ec\u28d9\u283f\u28e7\u2818\u28c6\u2880\u2808\u283b\u28f7\u28df\u28fe\u28bf\u28ff\u28c6\u2839\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u287f\u280b\u28e0\u285e\u28a1\u28ff\u2880\u28ff\u28ff\u28ff\u2807\u2844\u28b8\u2844\u28bb\u2847\u28fc\n\u28ff\u28f7\u2848\u28bf\u28ff\u2846\u28a3\u2840\u2819\u28be\u28df\u28ff\u28ff\u28f7\u2848\u2802\u2818\u28e6\u2848\u283f\u28ef\u28ff\u28be\u28ff\u28c6\u2819\u283b\u283f\u283f\u283f\u283f\u287f\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u283f\u281b\u288b\u28e0\u28fe\u285f\u28a0\u28ff\u28ff\u2880\u28ff\u28ff\u285f\u28a0\u28ff\u2888\u28e7\u2818\u28a0\u28ff\n\u28ff\u28ff\u28ff\u28c4\u283b\u28ff\u2844\u28b3\u2844\u2886\u2859\u283e\u28fd\u28ff\u28ff\u28c6\u2840\u28b9\u2877\u28c4\u2819\u28bf\u28ff\u287e\u28ff\u28c6\u2880\u2840\u2880\u2880\u2880\u2880\u2880\u2880\u2880\u2880\u2880\u2880\u2880\u2880\u28c0\u28e0\u28f4\u287f\u28ef\u280f\u28e0\u28ff\u28ff\u284f\u28b8\u28ff\u287f\u2881\u28ff\u28ff\u2880\u28ff\u2806\u28b8\u28ff\n\u28ff\u28ff\u28ff\u28ff\u28e6\u2859\u28ff\u28c6\u28bb\u284c\u28bf\u28f6\u28a4\u28c9\u28d9\u28ff\u28f7\u2840\u2819\u283d\u2837\u2804\u2839\u28ff\u28df\u28ff\u28c6\u2899\u28cb\u28e4\u28e4\u28e4\u28c4\u28c0\u2880\u2880\u2880\u2880\u28fe\u28ff\u28df\u2877\u28ef\u287f\u2883\u28fc\u28ff\u28ff\u28ff\u2807\u28fc\u285f\u28e1\u28ff\u28ff\u28ff\u2880\u287f\u28a0\u2808\u28ff\n\u28ff\u28ff\u28ff\u28ff\u28ff\u28f7\u28ee\u28ff\u28ff\u28ff\u284c\u2801\u28a4\u28e4\u28e4\u28e4\u28ec\u28ed\u28f4\u28f6\u28f6\u28f6\u28c6\u2808\u28bb\u28ff\u28ff\u28c6\u28bb\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28f7\u28f6\u28e4\u28cc\u28c9\u2858\u281b\u283b\u2836\u28ff\u28ff\u28ff\u28ff\u285f\u28f0\u28eb\u28f4\u28ff\u28ff\u28ff\u28ff\u2804\u28f7\u28ff\u28ff\u28ff\n*/\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.Scanner;\n\n public class Main{\n\t \n\t\n\t  public static void main (String[] args) {\n\t\t \n\t\t  Scanner s=new Scanner(System.in);\n\t\n\t\t  int t=s.nextInt();\n\t\t  for(int ie=0;ie<t;ie++) {\n\t\n\t\t\t  int n=s.nextInt();\n\t\t\t  int k=s.nextInt();\n\t\t\t  \n\t\t\t  char[] arr=s.next().toCharArray();\n\t\t\t  \n\t\t\t \n\t\t\t  ArrayList<pair> list=new ArrayList<>();\n\t\t\t  \n\t\t\t  int c=0;\n\t\t\t  int st=0;\n\t\t\t  int end=0;\n\t\t\t  int flag=0;\n\t\t\t  for(int i=0;i<n;i++) {\n\t\t\t\t  if(arr[i]=='L') {\n\t\t\t\t\t  if(flag==1) {\n\t\t\t\t\t\t  flag=0;\n\t\t\t\t\t\t  c++;\n\t\t\t\t\t\t  st=i;\n\t\t\t\t\t\t  end=i;\n\t\t\t\t\t  }else {\n\t\t\t\t\t  c++;\n\t\t\t\t\t  end++;\n\t\t\t\t\t  }\n\t\t\t\t  }else {\n\t\t\t\t\t  if(c>0 &&st!=0 )\n\t\t\t\t\t  list.add(new pair(c,st,end));\n\t\t\t\t\t  c=0;\n\t\t\t\t\t  flag=1;\n\t\t\t\t\t  \n\t\t\t\t\t  \n\t\t\t\t  }\n\t\t\t  }\n\t\t\t  if(c>0 &&end!=n-1) {\n\t\t\t\t  list.add(new pair(c,st,end));\n\t\t\t  }\n\t\t\t  Collections.sort(list,new comp());\n\t\t\t \n\t\t\t  int in=0;\n\t\t\t  while(k>0) {\n\t\t\t\t  if(in==list.size()) {\n\t\t\t\t\t  break;\n\t\t\t\t  }else {\n\t\t\t\t\t  for(int i=list.get(in).st;i<=list.get(in).end;i++) {\n\t\t\t\t\t\t  if(k==0) {\n\t\t\t\t\t\t\t  break;\n\t\t\t\t\t\t  }else {\n\t\t\t\t\t\t\t  arr[i]='W';\n\t\t\t\t\t\t\t  k--;\n\t\t\t\t\t\t  }\n\t\t\t\t\t  }\n\t\t\t\t\t  \n\t\t\t\t\t  in++;\n\t\t\t\t  }\n\t\t\t\t  \n\t\t\t\t  \n\t\t\t  }\n\t\t\t  \n\t\t\t  int g=n;\n\t\t\t  int l=-1;\n\t\t\t  for(int i=0;i<n;i++) {\n\t\t\t\t  if(arr[i]=='W') {\n\t\t\t\t\t  g=i;\n\t\t\t\t\t  break;\n\t\t\t\t  }\n\t\t\t  }\n\t\t\t  \n\t\t\t  for(int i=n-1;i>=0;i--) {\n\t\t\t\t  if(arr[i]=='W') {\n\t\t\t\t\t  l=i;\n\t\t\t\t\t  break;\n\t\t\t\t  }\n\t\t\t  }\n\t\t\t  \n\t\t\t  if(k>0) {\n\t\t\t\t  \n\t\t\t\t  for(int i=g-1;i>=0;i--) {\n\t\t\t\t\t  if(k==0) {\n\t\t\t\t\t\t  break;\n\t\t\t\t\t  }else {\n\t\t\t\t\t\t  arr[i]='W';\n\t\t\t\t\t\t  k--;\n\t\t\t\t\t  }\n\t\t\t\t\t\t  \n\t\t\t\t  }\n\t\t\t\t  \n\t\t\t  }\n\t\t\t  if(k>0) {\n\t\t\t\t  \n\t\t\t\t  for(int i=l+1;i<n;i++) {\n\t\t\t\t\t  if(k==0) {\n\t\t\t\t\t\t  break;\n\t\t\t\t\t  }else {\n\t\t\t\t\t\t  arr[i]='W';\n\t\t\t\t\t\t  k--;\n\t\t\t\t\t  }\n\t\t\t\t\t\t  \n\t\t\t\t  }\n\t\t\t\t  \n\t\t\t  }\n\t\t\t  \n\t\t\t  \n\t\t\t  \n\t\t\t \n\t\t\t  int[] pre=new int[n];\n\t\t\t  \n\t\t\t\t \n\t\t\t  if(arr[0]=='W') {\n\t\t\t\t  pre[0]=1;\n\t\t\t\t  \n\t\t\t  }\n\t\t\t  \n\t\t\t  for(int i=1;i<n;i++) {\n\t\t\t\t  if(arr[i]=='W') {\n\t\t\t\t\t  if(arr[i-1]=='W') {\n\t\t\t\t\t\t  pre[i]=pre[i-1]+2;\n\t\t\t\t\t  }else {\n\t\t\t\t\t\t  pre[i]=pre[i-1]+1;\n\t\t\t\t\t  }\n\t\t\t\t  }else {\n\t\t\t\t\t  pre[i]=pre[i-1];\n\t\t\t\t  }\n\t\t\t  }\n\t\t\t  \n\t\t\t  System.out.println(pre[n-1]);\n\t\t\t  \n\t\t\t  \n\t\t\t  \n\t\t\t  \n\t\t  }\n\t  }\n }\n class pair{\n\t \n\t int count;\n\t int st;\n\t int end;\n\t \n\t public pair(int count,int st,int end) {\n\t\t this.count=count;\n\t\t this.st=st;\n\t\t this.end=end;\n\t }\n }\n class comp implements Comparator<pair>{\n\t public int compare(pair h,pair j) {\n\t\t return h.count-j.count;\n\t }\n }\n "
        },
        {
            "language": 4,
            "solution": "\nimport java.util.*;\nimport java.io.*;\nimport java.lang.*;\n\npublic class cfpract {\n    static int mod=10000_00007;\n    public static void solve() throws Exception{\n        InputStreamReader ip=new InputStreamReader(System.in);\n        BufferedReader br = new BufferedReader(ip);\n        int t = Integer.parseInt(br.readLine());\n        StringBuilder asb=new StringBuilder();\n\n       while(t-->0){\n        // int n =Integer.parseInt(br.readLine());\n        String[] strs=(br.readLine()).trim().split(\" \");\n        int n=Integer.parseInt(strs[0]),k=Integer.parseInt(strs[1]);//,r=Integer.parseInt(strs[2]),s=Integer.parseInt(strs[3]);\n         String str=(br.readLine()).trim();\n        // int[] arr=new int[n];\n        // for(int i=0;i<n;i++){arr[i]=Integer.parseInt(strs[i]);}\n\n        ArrayList<int[]> list=new ArrayList<>();\n\n        int lct=0,wct=0;\n        int si=0;\n\n        int fo=0;  //filling order\n        for(int i=0;i<n;i++){\n            if(str.charAt(i)=='L'){\n                lct++;\n            }else if(lct>0){\n                wct++;\n                if(wct==2){fo=1;}\n                else{fo=-1; si=i-1; }  //T.C 3 1  LLW\n                list.add(new int[]{wct,lct,si,fo});\n                wct=1;  lct=0;  si=i+1;\n            }else{\n                si=i+1;\n                wct=1;\n            }\n        }\n\n        if(lct>0){\n            // if(wct==2){fo=1; si=n-1;}\n            // else{fo=-1;}\n            fo=1;\n            list.add(new int[]{wct,lct,si,fo});\n        }\n\n        Collections.sort(list,(a,b)->{\n            if(a[0]!=b[0])return b[0]-a[0];\n            return a[1]-b[1];\n        });\n\n        int i=0;\n        char[] fill=str.toCharArray();\n        while(k>0 && i<list.size()){\n            int[] arr=list.get(i);\n            int ci=arr[2];\n            while(k>0 && arr[1]>0){\n                fill[ci]='W';    arr[1]--; k--;\n                if(arr[3]==-1){ ci--; }else{ ci++; }\n                // if(arr[0]==2){  ans+=3; }\n            }\n            i++;\n        }\n\n        int ans=0;//fill[0]=='L'?0:1;\n        for(i=0;i<n;i++){\n            if(fill[i]=='W'){\n                ans+=1;\n                if(i>0 && fill[i-1]=='W'){ans++;}\n            }\n        }\n\n        asb.append(ans);  asb.append(\"\\n\");\n\n       }\n       System.out.println(asb);\n    }\n//******************************************************************************************************************** */\n    public static void main(String[] args) throws Exception{\n        solve();\n        // sec();\n     }\n\n     public static void solve2() throws Exception{\n        InputStreamReader ip=new InputStreamReader(System.in);\n        BufferedReader br = new BufferedReader(ip);\n        int t = Integer.parseInt(br.readLine());\n        StringBuilder asb=new StringBuilder();\n\n       while(t-->0){\n        // int n =Integer.parseInt(br.readLine());\n        // String[] strs=(br.readLine()).trim().split(\" \");\n        // int n=Integer.parseInt(strs[0]),l=Integer.parseInt(strs[1]),r=Integer.parseInt(strs[2]),s=Integer.parseInt(strs[3]);\n        //  String str=(br.readLine()).trim();\n        // int[] arr=new int[n];\n        // for(int i=0;i<n;i++){arr[i]=Integer.parseInt(strs[i]);}\n\n       }\n    }\n\n    //binexp\n    public static long binexp(long a,long b){\n        if(b==0)return 1;\n\n        long res=binexp(a, b/2);\n\n        if(b%2==1){\n            return (((res*res))*a);    //%mod;\n        }else return (res*res);\n    }\n    //gcd\n    public static long gcd(long a,long b){   //gcd using division method\n        if(b==0)return a;\n        else return gcd(b, a%b);\n    }\n\n\n    public static int isprime(int n){\n        for(int i=2;i<=Math.sqrt(n);i++){\n            if(n%i==0)return i;\n        }\n\n        return -1;\n    }\n\n\n    //sort\n     public static void sort(long[] arr) {\n\t\tint n = arr.length;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tint idx = (int) Math.random() * n;\n\t\t\tlong temp = arr[i];  arr[i] = arr[idx];  arr[idx] = temp;  //swap\n\t\t}\n\t\tArrays.sort(arr);\n\t}\n \n\tpublic static void sort(int[] arr) {\n\t\tint n = arr.length;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tint idx = (int) Math.random() * n;\n\t\t\tint temp = arr[i];  arr[i] = arr[idx]; arr[idx] = temp;  //swap\n\t\t}\n\t\tArrays.sort(arr);\n\t}\n    //1d print\n    public static void print(int[] dp) {\n\t\tfor (int val : dp) {\n\t\t\tSystem.out.print(val + \" \");\n\t\t}\n\t\tSystem.out.println();\n\t}\n \n\tpublic static void print(long[] dp) {\n\t\tfor (long val : dp) {\n\t\t\tSystem.out.print(val + \" \");\n\t\t}\n\t\tSystem.out.println();\n\t}  \n    //2d print\n\tpublic static void print(long[][] dp) {\n\t\tfor (long[] a : dp) {\n\t\t\tfor (long val : a) {\n\t\t\t\tSystem.out.print(val + \" \");\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t}\n \n\tpublic static void print(int[][] dp) {\n\t\tfor (int[] a : dp) {\n\t\t\tfor (int val : a) {\n\t\t\t\tSystem.out.print(val + \" \");\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t}\n \n\t\n}\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    int n, k;\n    cin >> n >> k;\n    string s;\n    cin >> s;\n    bool f = true;\n    for (int i = 0; i < s.size(); i++) {\n      if (s[i] == 'W') f = false;\n    }\n    if (f) {\n      cout << max(0, (k - 1) * 2 + 1) << endl;\n      continue;\n    }\n    vector<int> sp;\n    int start = 1e6;\n    int finish = -1;\n    int total = 0;\n    int l = 0;\n    for (int i = 0; i < s.size(); i++) {\n      if (s[i] == 'W') {\n        start = min(start, i);\n        finish = max(finish, i);\n        total++;\n        if (i && s[i - 1] == 'W') total++;\n      } else\n        l++;\n    }\n    k = min(l, k);\n    int cur = 0;\n    for (int i = start + 1; i <= finish; i++) {\n      if (s[i] == 'W') {\n        if (cur) sp.push_back(cur);\n        cur = 0;\n      } else {\n        cur++;\n      }\n    }\n    sort(sp.begin(), sp.end());\n    for (int i = 0; i < sp.size(); i++) {\n      if (k >= sp[i]) {\n        total += 2 * (sp[i]) + 1;\n        k -= sp[i];\n      }\n    }\n    total += k * 2;\n    cout << total << endl;\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int NN = 100100;\nchar s[NN];\nint n, k;\nvector<int> rec[NN];\nint main() {\n  int t;\n  scanf(\"%d\", &t);\n  while (t--) {\n    scanf(\"%d%d\", &n, &k);\n    scanf(\"%s\", s + 1);\n    int numw = 0;\n    for (int i = 1; i <= n; i++) {\n      rec[i].clear();\n      numw += (s[i] == 'W');\n    }\n    if (numw == 0) {\n      printf(\"%d\\n\", max(0, 2 * k - 1));\n      continue;\n    }\n    int last = 0;\n    for (int i = 1; i <= n; i++) {\n      if (s[i] == 'L' && (s[i - 1] == 'W')) {\n        last = i;\n      }\n      if (s[i] == 'L' && (s[i + 1] == 'W') && last) {\n        rec[i - last + 1].push_back(last);\n      }\n    }\n    for (int i = 1; i <= n; i++) {\n      if (k == 0) break;\n      int up = rec[i].size();\n      for (int j = 0; j < up; j++) {\n        if (k == 0) break;\n        int ll = rec[i][j];\n        for (int p = 0; p < i; p++) {\n          if (k == 0) break;\n          s[ll + p] = 'W';\n          k--;\n        }\n      }\n    }\n    if (k) {\n      for (int i = 1; i <= n; i++) {\n        if (s[i] == 'L' && s[i - 1] == 'W') {\n          s[i] = 'W';\n          k--;\n        }\n        if (k == 0) break;\n      }\n    }\n    if (k) {\n      for (int i = n; i >= 1; i--) {\n        if (s[i] == 'L' && s[i + 1] == 'W') {\n          s[i] = 'W';\n          k--;\n        }\n        if (k == 0) break;\n      }\n    }\n    int ans = 0;\n    for (int i = 1; i <= n; i++) {\n      if (s[i] == 'W') {\n        ans += 1;\n        ans += (s[i - 1] == 'W');\n      }\n    }\n    printf(\"%d\\n\", ans);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "for t in range(int(input())):\n    n,k = map(int,input().split())\n    h = input()\n    if k>= h.count(\"L\"):\n        print(2*n-1)\n    elif n==0:\n        print(0)\n    elif \"W\" not in h:\n        print(max(2*k-1,0))\n    else:\n        h = h.strip(\"L\")\n        n = len(h)\n        score = 0\n        prev = \"L\"\n        i = 0\n        l = []\n        while i<n:\n            if h[i] == \"W\":\n                if prev == \"L\":\n                    prev = \"W\"\n                    score += 1\n                else:\n                    score += 2\n            else:\n                if prev == \"W\":\n                    l.append(1)\n                    prev = \"L\"\n                else:\n                    l[-1] += 1\n            i += 1\n        l.sort()\n        while l and k>=l[0]:\n            temp = l.pop(0)\n            score += 2*temp + 1\n            k -= temp\n        score += 2*k\n        print(score)\n "
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor _ in range(t):\n    n, k = [int(i) for i in input().split()]\n    S = input()\n    consL0 = []\n    consL1 = [] # on edge\n    consL2 = [] # alone\n    startW = S[0] == \"W\"\n    c = 1 if S[0] == \"L\" else 0\n    ans = 1 if S[0] == \"W\" else 0\n    for i in range(1, n):\n        if S[i] == \"L\":\n            c += 1\n        else:\n            if c > 0:\n                if startW:\n                    consL0.append(c)\n                else:\n                    consL1.append(c)\n                c = 0\n            startW = True\n            ans += 1 if S[i-1] == \"L\" else 2\n    if c > 0:\n        if startW:\n            consL1.append(c)\n        else:\n            consL2.append(c)\n    if k > 0:\n        consL0.sort()\n        while(len(consL0) > 0 and k > 0):\n            l = consL0.pop(0)\n            if k >= l:\n                ans += 2 * l + 1\n                k -= l\n            else:\n                ans += 2 * k\n                k = 0\n                break\n    if k > 0:\n        consL1.sort()\n        while(len(consL1) > 0 and k > 0):\n            l = consL1.pop(0)\n            ans += 2 * min(k, l)\n            k -= min(k, l)\n    if k > 0 and len(consL2) > 0:\n        l = consL2[0]\n        ans += 2 * min(k, l) - 1\n    print(ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint gcd(int x, int y) {\n  if (!y) return x;\n  return gcd(y, x % y);\n}\nlong long proceed() {\n  long long n, k, m;\n  cin >> n >> k;\n  string s;\n  cin >> s;\n  long long i, p;\n  for (i = 0; i < n; ++i) {\n    if (s[i] == 'W') {\n      m = i;\n      break;\n    }\n  }\n  if (i == n) {\n    cout << max((long long)0, 1 + 2 * (min(n, k) - 1)) << endl;\n  } else {\n    long long j, indx, cnt = 0;\n    vector<pair<long long, long long>> v;\n    p = m;\n    for (j = i + 1; j < n; ++j) {\n      if (s[j] == 'L') {\n        if (s[j - 1] == 'W') indx = j;\n        ++cnt;\n      } else {\n        p = j;\n        if (cnt) v.push_back(make_pair(cnt, indx));\n        cnt = 0;\n      }\n    }\n    sort(v.begin(), v.end());\n    for (i = 0; i < v.size(); ++i) {\n      for (j = v[i].second; j < v[i].first + v[i].second && k > 0; ++j) {\n        s[j] = 'W';\n        --k;\n      }\n    }\n  next:\n    if (k) {\n      for (i = m - 1; i >= 0 && k > 0; --i) {\n        s[i] = 'W';\n        --k;\n      }\n    }\n    if (k) {\n      for (i = p + 1; i < n && k > 0; ++i) {\n        s[i] = 'W';\n        --k;\n      }\n    }\n    long long ans;\n    s[0] == 'W' ? ans = 1 : ans = 0;\n    for (i = 1; i < n; ++i) {\n      if (s[i] == 'W') {\n        s[i - 1] == 'W' ? ans += 2 : ++ans;\n      }\n    }\n    cout << ans << endl;\n  }\n  return 0;\n}\nint main() {\n  int t = 1, i = 0;\n  cin >> t;\n  while (t--) {\n    proceed();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class B {\n\t\n\tpublic static void main(String[] args) {\n\t\tFastScanner sc = new FastScanner();\n\t\tint yo = sc.nextInt();\n\t\twhile(yo-->0) {\n\t\t\tint n = sc.nextInt();\n\t\t\tint k = sc.nextInt();\n\t\t\tchar[] s = sc.next().toCharArray();\n\t\t\tboolean is = false;\n\t\t\tList<Integer> seg = new ArrayList<>();\n\t\t\tint values = 0;\n\t\t\tint curr = 0;\n\t\t\tint w = 0;\n\t\t\tfor(int i = 0; i < s.length; i++) {\n\t\t\t\tif(s[i] == 'W') {\n\t\t\t\t\tif(is) {\n\t\t\t\t\t\tif(curr != 0) seg.add(curr);\n\t\t\t\t\t\tcurr = 0;\n\t\t\t\t\t}\n\t\t\t\t\tw++;\n\t\t\t\t\tvalues++;\n\t\t\t\t\tif(i > 0 && s[i] == s[i-1]) {\n\t\t\t\t\t\tvalues++;\n\t\t\t\t\t}\n\t\t\t\t\tis = true;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif(is) {\n\t\t\t\t\t\tcurr++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif(w == 0) {\n\t\t\t\tSystem.out.println(Math.max(0, 2*k-1));\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\tk = Math.min(k, n-w);\n\t\t\tvalues += 2*k;\n\t\t\tCollections.sort(seg);\n\t\t\t\n\t\t\tfor(int e : seg) {\n\t\t\t\tif(e <= k) {\n\t\t\t\t\tvalues++;\n\t\t\t\t\tk -= e;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(values);\n\t\t\t\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\n\tstatic int mod = 1000000007;\n\t\n\tstatic long pow(int a, int b) {\n\t\tif(b == 0) {\n\t\t\treturn 1;\n\t\t}\n\t\tif(b == 1) {\n\t\t\treturn a;\n\t\t}\n\t\tif(b%2 == 0) {\n\t\t\tlong ans = pow(a,b/2);\n\t\t\treturn ans*ans;\n\t\t}\n\t\telse {\n\t\t\tlong ans = pow(a,(b-1)/2);\n\t\t\treturn a * ans * ans;\n\t\t}\n\t\t\n\t}\n\t\n\tstatic class FastScanner {\n\t\tBufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n\t\tStringTokenizer st=new StringTokenizer(\"\");\n\t\tString next() {\n\t\t\twhile (!st.hasMoreTokens())\n\t\t\t\ttry {\n\t\t\t\t\tst=new StringTokenizer(br.readLine());\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\t\t\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\t\tint[] readArray(int n) {\n\t\t\tint[] a=new int[n];\n\t\t\tfor (int i=0; i<n; i++) a[i]=nextInt();\n\t\t\treturn a;\n\t\t}\n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\t}\n\t\n\tstatic int gcd(int a, int b) {\n\t\treturn a%b == 0 ? b : gcd(b,a%b);\n\t}\n\t\n\tstatic boolean[] sieve(int n) {\n\t\t\n\t\tboolean isPrime[] = new boolean[n+1];\n\t\tfor(int i = 2; i <= n; i++) {\n\t\t\tif(isPrime[i]) continue;\n\t\t\tfor(int j = 2*i; j <= n; j+=i) {\n\t\t\t\tisPrime[j] = true;\n\t\t\t}\n\t\t\n\t\t}\n\t\treturn isPrime;\n\t\t\n\t}\n\t\n\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint score(string &s, int &n) {\n  int ans = 0;\n  for (int i = 0; i < n; i++) {\n    if (s[i] == 'W') {\n      if (!i || s[i - 1] != 'W') {\n        ans++;\n      } else {\n        ans += 2;\n      }\n    }\n  }\n  return ans;\n}\nvoid solve() {\n  int n, k;\n  cin >> n >> k;\n  string s;\n  cin >> s;\n  if (!k) {\n    cout << score(s, n) << \"\\n\";\n    return;\n  }\n  vector<int> pos;\n  for (int i = 0; i < n; i++) {\n    if (s[i] == 'W') {\n      pos.push_back(i);\n    }\n  }\n  if (pos.empty()) {\n    cout << min(2 * k - 1, 2 * n - 1) << \"\\n\";\n    return;\n  }\n  if ((int)pos.size() + k >= n) {\n    cout << 2 * n - 1 << \"\\n\";\n    return;\n  }\n  if (pos.size() == 1) {\n    cout << min(2 * (k + 1) - 1, 2 * n - 1) << \"\\n\";\n    return;\n  }\n  vector<vector<int> > v;\n  for (int i = 1; i < pos.size(); i++) {\n    if (pos[i] - pos[i - 1] > 1) {\n      vector<int> a = {pos[i] - pos[i - 1] - 1, pos[i - 1], pos[i]};\n      v.push_back(a);\n    }\n  }\n  sort(v.begin(), v.end());\n  for (int i = 0; i < v.size(); i++) {\n    if (k >= v[i][0]) {\n      k -= v[i][0];\n      for (int j = v[i][1] + 1; j < v[i][2]; j++) {\n        s[j] = 'W';\n      }\n    } else {\n      int j = v[i][1] + 1;\n      while (k--) {\n        s[j] = 'W';\n        j++;\n      }\n      cout << score(s, n) << \"\\n\";\n      return;\n    }\n  }\n  if (k) {\n    for (int i = pos.back() + 1; i < n; i++) {\n      if (k) {\n        s[i] = 'W';\n        k--;\n      } else {\n        cout << score(s, n) << \"\\n\";\n        return;\n      }\n    }\n  }\n  if (k) {\n    for (int i = pos.front() - 1; i >= 0; i--) {\n      if (k) {\n        s[i] = 'W';\n        k--;\n      } else {\n        cout << score(s, n) << \"\\n\";\n        return;\n      }\n    }\n  }\n  cout << score(s, n) << \"\\n\";\n  return;\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  int t = 1;\n  cin >> t;\n  while (t--) {\n    solve();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*; import java.util.*;\npublic class B {\n    \n    public static void main(String[] args) throws IOException {\n        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n        int T=Integer.parseInt(br.readLine());\n        StringBuilder sb=new StringBuilder();\n        for (int i = 0; i < T; i++) {\n            \n            StringTokenizer st=new StringTokenizer(br.readLine());\n            int N=Integer.parseInt(st.nextToken());\n            int K=Integer.parseInt(st.nextToken());\n            String s=br.readLine();\n            //Find first win\n            ArrayList<Integer> arl=new ArrayList<>();\n            \n            int j=0;\n            while(j<N && s.charAt(j)=='L'){\n                j++;\n            }\n            long cur=0;\n            if(j<N){\n                cur++;\n            }else if(K>0){\n                \n                sb.append(2*K-1).append(\"\\n\"); continue;\n            }else{\n                \n                sb.append(0).append(\"\\n\"); continue;\n            }\n            int prevw=j;\n            for (int k = j+1; k < N; k++) {//Compute current value\n                if(s.charAt(k)=='W'){\n                    \n                    cur++; \n                    if(s.charAt(k-1)=='W'){\n                        cur++;\n                    }else{\n                        arl.add(k-prevw-1);\n                    }\n                    prevw=k;\n                }\n            }\n            \n            int r=N-1-prevw;// j and r are the lengths of the side intervals\n            Collections.sort(arl);\n            boolean done=false;\n            int c;\n            for (int k = 0; k < arl.size(); k++) {\n                c=arl.get(k);\n                if(K>=c){\n                    K-=c; cur+=(2*c+1);\n                    if(K==0){\n                        done=true;\n                        sb.append(cur).append(\"\\n\"); break;\n                    }\n                }else{\n                    cur+=2*K; K=0;\n                    done=true;\n                    sb.append(cur).append(\"\\n\");\n                    break;\n                }\n            }\n            if(K>0){\n                done=true;\n                cur+=2*Math.min(K,j+r);\n                sb.append(cur).append(\"\\n\");\n            }else if(!done){//All wins\n                sb.append(cur).append(\"\\n\");\n            }\n            \n        }\n        System.out.println(sb.toString());\n        \n    }\n    //Special Cases: n=1, etc\n    //Bounds: Overflow, ?\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedOutputStream;\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.List;\nimport java.util.StringTokenizer;\n\npublic class B {\n    private static class Solver {\n        private void solve() throws Exception {\n            int cases = in.nextInt();\n            while (cases-- > 0) {\n                out.println(compute(in.nextInt(), in.nextInt(), in.next()));\n            }\n        }\n\n        private int compute(int n, int k, String s) {\n            int pre = -1;\n            int suf = n;\n\n            for (int i = 0; i < n; i++) {\n                if (s.charAt(i) == 'W') {\n                    pre = i;\n                    break;\n                }\n            }\n            if (pre == -1) {\n                return Math.max(0, k * 2 - 1);\n            }\n            for (int i = n - 1; i >= 0; i--) {\n                if (s.charAt(i) == 'W') {\n                    suf = i;\n                    break;\n                }\n            }\n            List<Integer> p = new ArrayList<>(n);\n            int snippet = 0;\n            int totalW = 0;\n            for (int i = pre; i <= suf; ) {\n                while (i <= suf && s.charAt(i) == 'W') {\n                    totalW++;\n                    i++;\n                }\n                int partLen = 0;\n                while (i <= suf && s.charAt(i) == 'L') {\n                    partLen++;\n                    i++;\n                }\n                if (partLen > 0) {\n                    p.add(partLen);\n                }\n            }\n            if (n - totalW <= k) {\n                return n * 2 - 1;\n            }\n\n            Collections.sort(p);\n\n            int totalPart = p.size() + 1;\n            int leftK = k;\n            for (int x : p) {\n                if (x <= leftK) {\n                    leftK -= x;\n                    totalW += x;\n                    totalPart--;\n                }\n            }\n            totalW += leftK;\n            return totalW * 2 - totalPart;\n        }\n    }\n\n    //--------------------------------------------------------\n    private static final MyScanner in = new MyScanner(System.in);\n    private static final PrintWriter out = new PrintWriter(new BufferedOutputStream(System.out));\n\n    public static void main(String[] args) throws Exception {\n        Solver solver = new Solver();\n        solver.solve();\n        out.close();\n    }\n\n    public static class MyScanner {\n        private final BufferedReader br;\n        private StringTokenizer st;\n\n        public MyScanner(InputStream in) {\n            br = new BufferedReader(new InputStreamReader(in));\n        }\n\n        String next() throws IOException {\n            while (st == null || !st.hasMoreElements()) {\n                st = new StringTokenizer(br.readLine());\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() throws IOException {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() throws IOException {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() throws IOException {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine() throws IOException {\n            return br.readLine();\n        }\n    }\n}"
        },
        {
            "language": 3,
            "solution": "\nt = int(input())\nfor test_case in range(t):\n    n, k = [int(x) for x in input().split()]\n\n    s = input()\n\n    res = 0\n\n    zapol = []\n    probeli = []\n    i = 0\n    torf = False\n    coins = 0\n\n    if n == 1:\n        if s[0] == 'W':\n            print()\n            print(1)\n            print()\n        else:\n            if k == 0:\n                print()\n                print(0)\n                print()\n            else:\n                print()\n                print(1)\n                print()\n\n        continue\n\n    while i < n:\n        if i == 0:\n            if s[i] == \"L\":\n                probeli.append([i])\n                torf = False\n            else:\n                zapol.append([i])\n                torf = True\n        if i == n - 1:\n            if s[i] == 'L':\n                if torf == False:\n                    probeli[-1].append(i)\n                else:\n                    probeli.append([i, i])\n                    zapol[-1].append(i - 1)\n            else:\n                if torf == True:\n                    zapol[-1].append(i)\n                else:\n                    zapol.append([i, i])\n                    probeli[-1].append(i - 1)\n        elif i > 0:\n            if torf == True and s[i] == 'L':\n                probeli.append([i])\n                zapol[-1].append(i - 1)\n                torf = False\n            elif torf == False and s[i] == 'W':\n                torf = True\n                zapol.append([i])\n                probeli[-1].append(i - 1)\n        if s[i] == 'W':\n            coins += 1\n\n            \n        i += 1\n    \n\n    probeli2 = []\n    if k >= n - coins:\n        print()\n        print(n*2 - 1)\n        print()\n        continue\n    for i in probeli:\n        probeli2.append(i)\n    probeli3 = []\n    if coins == 0:\n        print()\n        print(k*2 - 1 if k > 0 else 0)\n        print()\n        continue\n    kkk = 2\n    if probeli2[0][0] == 0:\n        kkk -= 1\n    if probeli[-1][1] == n - 1:\n        kkk -= 1\n    if len(probeli2) > 2:\n        if probeli2[0][0] == 0:\n            probeli2.pop(0)\n        if probeli2[-1][1] == n - 1:\n            probeli2.pop(-1)\n    elif len(probeli2) == 1 and kkk == 1:\n        print()\n        print((coins + k) * 2 - 1)\n        print()\n        continue\n    elif len(probeli2) == 2 and kkk == 0:\n        print()\n        print((coins + k) * 2 - 1)\n        print()\n        continue\n    elif len(probeli2) == 2 and kkk != 0:\n        if probeli2[0][0] == 0:\n            probeli2.pop(0)\n        if probeli2[-1][1] == n - 1:\n            probeli2.pop(-1)\n\n    \n    for i in range(len(probeli2)):\n        probeli3.append(probeli2[i][1] - probeli2[i][0] + 1)\n    probeli3.sort()\n    lenprob2 = len(probeli3)\n    k2 = k\n    for i in range(lenprob2):\n        if k >= probeli3[i]:\n            k -= probeli3[i]\n            lenprob2 -= 1\n        else:\n            break\n    \n    res = (coins + k2) * 2 - lenprob2 - 1\n\n    print()\n    print(res)\n    print()"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <class T>\nusing TMatrix = vector<vector<T>>;\ntemplate <class T>\nusing TVector = vector<T>;\nusing TString = string;\nvoid read(int& x) { scanf(\"%i\", &x); }\nvoid write(const int x) { printf(\"%i\", x); }\nvoid read(long long& x) { scanf(\"%lli\", &x); }\nvoid write(const long long& x) { printf(\"%lli\", x); }\nvoid read(double& x) { scanf(\"%lf\", &x); }\nvoid write(const double& x) { printf(\"%lf\", x); }\nvoid read(char& c, bool whiteSpaces = false) {\n  while (1) {\n    c = getchar();\n    if (whiteSpaces || !isspace(c)) {\n      break;\n    }\n  }\n}\nvoid write(const char c) { printf(\"%c\", c); }\nvoid read(TString& result, bool untilEol = false) {\n  result.clear();\n  char c;\n  if (!untilEol) {\n    while (1) {\n      c = getchar();\n      if (!isspace(c)) break;\n    }\n    result.push_back(c);\n  }\n  while (1) {\n    c = getchar();\n    if (c == '\\n' || (!untilEol && isspace(c))) break;\n    result.push_back(c);\n  }\n}\nvoid write(const TString& s) { printf(\"%s\", s.c_str()); }\nvoid writeYES(const bool condition) {\n  printf(\"%s\\n\", condition ? \"YES\" : \"NO\");\n}\nvoid writeYes(const bool condition) {\n  printf(\"%s\\n\", condition ? \"Yes\" : \"No\");\n}\ntemplate <class T>\nvoid writeIf(const bool condition, const T& forTrue, const T& forFalse) {\n  cout << (condition ? forTrue : forFalse) << endl;\n}\ntemplate <class T1, class T2>\nvoid read(pair<T1, T2>& x) {\n  read(x.first);\n  read(x.second);\n}\ntemplate <class T1, class T2>\nvoid write(pair<T1, T2>& x) {\n  write(x.first);\n  write(' ');\n  write(x.second);\n}\ntemplate <class T>\nvoid writeln(const T& x) {\n  write(x);\n  write('\\n');\n}\ntemplate <class T1, class T2>\nvoid read(T1& x1, T2& x2) {\n  read(x1);\n  read(x2);\n}\ntemplate <class T1, class T2, class T3>\nvoid read(T1& x1, T2& x2, T3& x3) {\n  read(x1);\n  read(x2);\n  read(x3);\n}\ntemplate <class T1, class T2, class T3, class T4>\nvoid read(T1& x1, T2& x2, T3& x3, T4& x4) {\n  read(x1);\n  read(x2);\n  read(x3);\n  read(x4);\n}\ntemplate <class T1, class T2, class T3, class T4, class T5>\nvoid read(T1& x1, T2& x2, T3& x3, T4& x4, T5& x5) {\n  read(x1);\n  read(x2);\n  read(x3);\n  read(x4);\n  read(x5);\n}\ntemplate <class T1, class T2, class T3, class T4, class T5, class T6>\nvoid read(T1& x1, T2& x2, T3& x3, T4& x4, T5& x5, T6& x6) {\n  read(x1);\n  read(x2);\n  read(x3);\n  read(x4);\n  read(x5);\n  read(x6);\n}\ntemplate <class T1, class T2, class T3, class T4, class T5, class T6, class T7>\nvoid read(T1& x1, T2& x2, T3& x3, T4& x4, T5& x5, T6& x6, T7& x7) {\n  read(x1);\n  read(x2);\n  read(x3);\n  read(x4);\n  read(x5);\n  read(x6);\n  read(x7);\n}\nnamespace NMatrix {\ntemplate <class T>\nvoid Read(TMatrix<T>& matrix, int n = -1, int m = -1) {\n  if (n == -1) {\n    read(n, m);\n  } else if (m == -1) {\n    m = n;\n  }\n  matrix.clear();\n  matrix.resize(n, TVector<T>(m));\n  for (int i = 0; i < n; i++) {\n    for (int j = 0; j < m; j++) {\n      read(matrix[i][j]);\n    }\n  }\n}\ntemplate <class T>\nvoid Write(const TMatrix<T>& v, const TString del = \" \") {\n  for (int i = 0; i < v.size(); i++) {\n    for (int j = 0; j < v[i].size(); j++) {\n      cout << v[i][j];\n      if (j < v[i].size() - 1) {\n        cout << del;\n      }\n    }\n    cout << endl;\n  }\n}\ntemplate <class T>\nT Sum(const TMatrix<T>& matrix) {\n  T result = 0;\n  for (const auto& row : matrix) {\n    for (const auto& elem : row) {\n      result += elem;\n    }\n  }\n  return result;\n}\ntemplate <class T>\nTMatrix<T> Sum(const TMatrix<T>& matrix1, const TMatrix<T>& matrix2) {\n  TMatrix<T> result(matrix1.size(), TVector<T>(matrix1[0].size()));\n  for (size_t i = 0; i < matrix1.size(); ++i) {\n    for (size_t j = 0; j < matrix1[i].size(); ++j) {\n      result[i][j] = matrix1[i][j] + matrix2[i][j];\n    }\n  }\n  return move(result);\n}\ntemplate <class T>\nTMatrix<T> Transpose(const TMatrix<T>& matrix) {\n  TMatrix<T> result(matrix[0].size(), TVector<T>(matrix.size()));\n  for (size_t i = 0; i < matrix.size(); ++i) {\n    for (size_t j = 0; j < matrix[i].size(); ++j) {\n      result[j][i] = matrix[i][j];\n    }\n  }\n  return move(result);\n}\n}  // namespace NMatrix\nnamespace NVector {\ntemplate <class T>\nvoid Read(TVector<T>& v, int length = -1) {\n  if (length == -1) {\n    read(length);\n  }\n  v.resize(length);\n  for (auto& elem : v) {\n    read(elem);\n  }\n}\ntemplate <class T>\nvoid Write(const TVector<T>& v, TString del = \" \", bool needEndl = true) {\n  for (int i = 0; i < v.size(); i++) {\n    cout << v[i];\n    if (i < v.size() - 1) {\n      cout << del;\n    }\n  }\n  if (needEndl) {\n    cout << endl;\n  }\n}\ntemplate <class T>\nTVector<T> Filter(const TVector<T>& v, std::function<bool(T)> filter) {\n  TVector<T> result;\n  for (const auto& elem : v) {\n    if (filter(elem)) {\n      result.push_back(elem);\n    }\n  }\n  return move(result);\n}\ntemplate <class T>\nT Max(const TVector<T>& v) {\n  return *max_element(v.begin(), v.end());\n}\ntemplate <class T>\nvoid Sort(TVector<T>& v) {\n  sort(v.begin(), v.end());\n}\ntemplate <class T>\nvoid SortR(TVector<T>& v) {\n  sort(v.begin(), v.end());\n  reverse(v.begin(), v.end());\n}\ntemplate <class T>\nvoid Reverse(TVector<T>& v) {\n  reverse(v.begin(), v.end());\n}\ntemplate <class T>\nT Min(const TVector<T>& v) {\n  return *min_element(v.begin(), v.end());\n}\ntemplate <class T>\nT Sum(const TVector<T>& v) {\n  T result = 0;\n  for (const auto& elem : v) {\n    result += elem;\n  }\n  return result;\n}\ntemplate <class T>\nT Mult(const TVector<T>& v) {\n  T result = 1;\n  for (const auto& elem : v) {\n    result *= elem;\n  }\n  return result;\n}\ntemplate <class T>\nTVector<int> FromInt(T number) {\n  TVector<int> v;\n  while (number) {\n    v.push_back(number % 10);\n    number /= 10;\n  }\n  reverse(v.begin(), v.end());\n  return move(v);\n}\ntemplate <class T>\nT ToInt(const TVector<int>& v) {\n  T ans = 0;\n  for (const auto e : v) {\n    ans = ans * 10 + e;\n  }\n  return ans;\n}\ntemplate <class T>\nT Mex(const TVector<T>& v) {\n  unordered_set<T> s(v.begin(), v.end());\n  T value;\n  for (value = 1; s.find(value) != s.end(); value += 1) {\n  }\n  return value;\n}\ntemplate <class T>\nbool Contains(const TVector<T>& v, const T& searchedElem) {\n  for (const auto& elem : v) {\n    if (elem == searchedElem) {\n      return true;\n    }\n  }\n  return false;\n}\n}  // namespace NVector\nnamespace NMath {\ntemplate <class T>\nT Gcd(T x, T y) {\n  while (x) {\n    y %= x;\n    swap(x, y);\n  }\n  return y;\n}\ntemplate <class T>\nT Lcm(T x, T y) {\n  return (x / Gcd(x, y)) * y;\n}\ntemplate <class T>\nT Gcd(const vector<T>& v) {\n  T ans = v.front();\n  for (const auto& elem : v) {\n    ans = Gcd(ans, elem);\n  }\n  return ans;\n}\ntemplate <class T>\nT Lcm(const vector<T>& v) {\n  T ans = v.front();\n  for (const auto& elem : v) {\n    ans = Lcm(ans, elem);\n  }\n  return ans;\n}\nint GcdEx(const int a, const int b, int& x, int& y) {\n  if (!a) {\n    x = 0;\n    y = 1;\n    return b;\n  }\n  int x1, y1;\n  int d = GcdEx(b % a, a, x1, y1);\n  x = y1 - (b / a) * x1;\n  y = x1;\n  return d;\n}\nint CalcInverseNumber(const int number, const int mod) {\n  int x, y;\n  int g = GcdEx(number, mod, x, y);\n  if (g != 1) {\n    return -1;\n  }\n  return x = (x % mod + mod) % mod;\n}\ntemplate <class T>\nT Factorial(T n) {\n  T result = 1;\n  while (n > 0) {\n    result *= n--;\n  }\n}\ntemplate <class T>\nT FactorialWithMod(T n, T mod) {\n  if (n >= mod) {\n    return 0;\n  }\n  T result = 1;\n  while (n > 0) {\n    result = (result * n) % mod;\n    --n;\n  }\n  return result;\n}\ntemplate <class T1, class T2>\nT1 BinPow(T1 value, T2 extent) {\n  T1 res = 1;\n  while (extent > 0) {\n    if (extent & 1) {\n      res *= value;\n    }\n    extent >>= 1;\n    value *= value;\n  }\n  return res;\n}\ntemplate <class T1, class T2>\nT1 BinPowWithMod(T1 value, T2 extent, T1 mod) {\n  T1 res = 1;\n  value %= mod;\n  while (extent > 0) {\n    if (extent & 1) {\n      res = (value * res) % mod;\n    }\n    extent >>= 1;\n    value = (value * value) % mod;\n  }\n  return res;\n}\ntemplate <class T>\nbool IsPrime(T value) {\n  for (T i = 2; i * i <= value; ++i) {\n    if (value % i == 0) {\n      return false;\n    }\n  }\n  return true;\n}\ntemplate <class T>\nT Min(const T& a, const T& b) {\n  return a < b ? a : b;\n}\ntemplate <class T>\nT Max(const T& a, const T& b) {\n  return a > b ? a : b;\n}\ntemplate <class T>\nT Abs(const T& value) {\n  return value >= 0 ? value : -value;\n}\nTVector<int> Factorize(int value) {\n  TVector<int> res;\n  for (int i = 2; i * i <= value; i++) {\n    while (value % i == 0) {\n      res.push_back(i);\n      value /= i;\n    }\n  }\n  if (value > 1) {\n    res.push_back(value);\n  }\n  return res;\n}\ntemplate <class T>\nTVector<int> ToKSystem(T value, const int numberOfSystem) {\n  TVector<int> result;\n  while (value > 0) {\n    result.push_back(value % numberOfSystem);\n    value /= numberOfSystem;\n  }\n  if (result.empty()) result.push_back(0);\n  reverse(result.begin(), result.end());\n  return result;\n}\ntemplate <class T>\nT FromKSystem(const TVector<int> value, const int numberOfSystem) {\n  T result = 0;\n  T mult = 1;\n  for (int i = value.size() - 1; i >= 0; --i) {\n    result += mult * value[i];\n    mult *= numberOfSystem;\n  }\n  return result;\n}\ndouble Log(const double a, const double b) { return log(b) / log(a); }\n}  // namespace NMath\nnamespace NString {\nTVector<TString> Split(const TString& value, const char delimiter = ' ',\n                       bool skipEmpty = false) {\n  TString current = \"\";\n  TVector<TString> result;\n  for (size_t i = 0; i <= value.size(); i++) {\n    if (i == value.size() || value[i] == delimiter) {\n      if (!skipEmpty || !current.empty()) {\n        result.push_back(current);\n        current.clear();\n      }\n    } else {\n      current.push_back(value[i]);\n    }\n  }\n  return move(result);\n}\nTString ToString(long long value) {\n  TString result;\n  bool isNegative = false;\n  if (value < 0) {\n    isNegative = true;\n    value = -value;\n  }\n  if (!value) {\n    result.push_back('0');\n  }\n  while (value > 0) {\n    result.push_back((value % 10) + '0');\n    value /= 10;\n  }\n  if (isNegative) {\n    result.push_back('-');\n  }\n  reverse(result.begin(), result.end());\n  return result;\n}\nTString ToString(const int value) { return ToString(1ll * value); }\nlong long ToLong(const TString& value) {\n  long long result = 0;\n  bool isNegative = false;\n  auto it = value.begin();\n  if (*it == '-') {\n    isNegative = true;\n    it++;\n  }\n  for (; it != value.end(); it++) {\n    result = result * 10 + (*it) - '0';\n  }\n  if (isNegative) {\n    result = -result;\n  }\n  return result;\n}\nint ToInt(const TString& value) { return static_cast<int>(ToLong(value)); }\nTString ToUpper(const TString& value) {\n  TString result = value;\n  for (auto& c : result) {\n    c = toupper(c);\n  }\n  return result;\n}\nTString ToLower(const TString& value) {\n  TString result = value;\n  for (auto& c : result) {\n    c = tolower(c);\n  }\n  return result;\n}\nbool StartsWith(const TString& first, const TString& second) {\n  if (second.size() > first.size()) return false;\n  return first.substr(0, second.size()) == second;\n}\nbool EndsWith(const TString& first, const TString& second) {\n  if (second.size() > first.size()) return false;\n  return first.substr(first.size() - second.size()) == second;\n}\n}  // namespace NString\nint solve();\nint main(int argc, char* argv[]) {\n  return solve();\n  return 0;\n}\nint solve() {\n  int t;\n  read(t);\n  while (t--) {\n    int n, k;\n    read(n, k);\n    TVector<char> v;\n    NVector::Read(v, n);\n    TVector<pair<int, int>> ps;\n    ps.reserve(n);\n    for (int i = 0; i < v.size(); i++) {\n      if (v[i] == 'L') {\n        if (ps.empty() || v[i - 1] == 'W') {\n          ps.push_back({1, i});\n        } else {\n          ps[ps.size() - 1].first++;\n        }\n      }\n    }\n    NVector::Sort(ps);\n    for (int i = 0; i < ps.size() && k; i++) {\n      if (ps[i].second == 0 || ps[i].second + ps[i].first == v.size()) {\n        continue;\n      }\n      for (int j = ps[i].second; k && j < ps[i].second + ps[i].first; j++) {\n        k--;\n        v[j] = 'W';\n      }\n    }\n    for (int i = 1; k && i < v.size(); i++) {\n      if (v[i] == 'L' && v[i - 1] == 'W') {\n        k--;\n        v[i] = 'W';\n      }\n    }\n    for (int i = v.size() - 2; k && i >= 0; i--) {\n      if (v[i] == 'L' && v[i + 1] == 'W') {\n        k--;\n        v[i] = 'W';\n      }\n    }\n    for (int i = v.size() - 1; k && i >= 0; i--) {\n      if (v[i] == 'L') {\n        k--;\n        v[i] = 'W';\n      }\n    }\n    int ans = (v[0] == 'W' ? 1 : 0);\n    for (int i = 1; i < v.size(); i++) {\n      if (v[i] == 'W') {\n        ans++;\n        if (v[i - 1] == 'W') {\n          ans++;\n        }\n      }\n    }\n    cout << ans << '\\n';\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class ChessCheater {\n    PrintWriter out;\n    StringTokenizer st;\n    BufferedReader br;\n    final int imax = Integer.MAX_VALUE, imin = Integer.MIN_VALUE;\n    final int mod = 1000000007;\n\n    void solve() throws Exception {\n        int t = 1;\n        t = ni();\n        for (int ii = 0; ii < t; ii++) {\n            int n= ni(), k= ni();\n            char[] a= ns().toCharArray();\n\n            if(k== 0) {\n                out.println(calcScore(a));\n                continue;\n            }\n\n            int win= 0;\n            for(char c: a) win+= c== 'W'? 1: 0;\n            if(win== 0) { a[0]= 'W'; k--; }\n\n            List<int[]> list = new ArrayList<>();\n            int lose= 0;\n            for(int i= 0;i<a.length;i++) {\n                char c= a[i];\n                if(c== 'L') lose++;\n                else {\n                    if(i-lose== 0 || lose== 0) { lose= 0; continue; }\n                    list.add(new int[]{i-lose, i, lose});\n                    lose= 0;\n                }\n            }\n\n            Collections.sort(list, (_a, _b)->(_a[2]- _b[2]));\n//            for(int[] i: list) print(i);\n            for(int i=0;i<list.size();i++) {\n                int[] val= list.get(i);\n                if(val[2]<= k) { fill(a, val); k-= val[2]; }\n            }\n\n            for(int i=0;k!= 0 && i<n-1;i++) {\n                if(a[i]== 'W' && a[i+1]!= 'W') {\n                    a[i+1]= 'W';\n                    k--;\n                }\n            }\n\n            for(int i=n-1;k!= 0 && i>=1;i--) {\n                if(a[i]== 'W' && a[i-1]!= 'W') {\n                    a[i-1]= 'W';\n                    k--;\n                }\n            }\n\n            out.println(calcScore(a));\n        }\n    }\n\n    private void fill(char[] arr, int[] a) {\n        for(int i= a[0];i<=a[1];i++)\n            arr[i]= 'W';\n    }\n\n    private int calcScore(char[] a) {\n        int score= a[0]=='W'? 1: 0;\n        for(int i=1;i<a.length;i++) {\n            if(a[i]== 'W' && a[i-1]!= 'W') score++;\n            else if(a[i]== 'W' && a[i-1]== 'W') score+=2;\n        }\n//        out.println(new String(a));\n        return score;\n    }\n\n    public static void main(String[] args) throws Exception {\n        new ChessCheater().run();\n    }\n\n    void run() throws Exception {\n        if (System.getProperty(\"ONLINE_JUDGE\") == null) {\n            File file = new File(\"C:\\\\college\\\\CodeForces\\\\inputf.txt\");\n            br = new BufferedReader(new FileReader(file));\n            out = new PrintWriter(\"C:\\\\college\\\\CodeForces\\\\outputf.txt\");\n        } else {\n            out = new PrintWriter(System.out);\n            br = new BufferedReader(new InputStreamReader(System.in));\n        }\n\n        long ss = System.currentTimeMillis();\n        st = new StringTokenizer(\"\");\n        while (true) {\n            solve();\n            String s = br.readLine();\n            if (s == null) break;\n            else st = new StringTokenizer(s);\n        }\n        //out.println(System.currentTimeMillis()-ss+\"ms\");\n        out.flush();\n    }\n\n    void read() throws Exception {\n        st = new StringTokenizer(br.readLine());\n    }\n\n    int ni() throws Exception {\n        if (!st.hasMoreTokens()) read();\n        return Integer.parseInt(st.nextToken());\n    }\n\n    char nc() throws Exception {\n        if (!st.hasMoreTokens()) read();\n        return st.nextToken().charAt(0);\n    }\n\n    long nl() throws Exception {\n        if (!st.hasMoreTokens()) read();\n        return Long.parseLong(st.nextToken());\n    }\n\n    int[] ni(int n) throws Exception {\n        int[] ret = new int[n];\n        for (int i = 0; i < n; i++) ret[i] = ni();\n        return ret;\n    }\n\n    long[] nl(int n) throws Exception {\n        long[] ret = new long[n];\n        for (int i = 0; i < n; i++) ret[i] = nl();\n        return ret;\n    }\n\n    double nd() throws Exception {\n        if (!st.hasMoreTokens()) read();\n        return Double.parseDouble(st.nextToken());\n    }\n\n    String ns() throws Exception {\n        String s = br.readLine();\n        return s.length() == 0 ? br.readLine() : s;\n    }\n\n    void print(int[] arr) {\n        for (int i : arr) out.print(i + \" \");\n        out.println();\n    }\n\n    void print(long[] arr) {\n        for (long i : arr) out.print(i + \" \");\n        out.println();\n    }\n\n    void print(int[][] arr) {\n        for (int[] i : arr) {\n            for (int j : i) out.print(j + \" \");\n            out.println();\n        }\n    }\n\n    void print(long[][] arr) {\n        for (long[] i : arr) {\n            for (long j : i) out.print(j + \" \");\n            out.println();\n        }\n    }\n\n    long add(long a, long b) {\n        if (a + b >= mod) return (a + b) - mod;\n        else return a + b >= 0 ? a + b : a + b + mod;\n    }\n\n    long mul(long a, long b) {\n        return (a * b) % mod;\n    }\n\n    void print(boolean b) {\n        if (b) out.println(\"YES\");\n        else out.println(\"NO\");\n    }\n\n    long binExp(long base, long power) {\n        long res = 1l;\n        while (power != 0) {\n            if ((power & 1) == 1) res = mul(res, base);\n            base = mul(base, base);\n            power >>= 1;\n        }\n        return res;\n    }\n\n    long gcd(long a, long b) {\n        if (b == 0) return a;\n        else return gcd(b, a % b);\n    }\n\n    // strictly smaller on left\n    void stack_l(int[] arr, int[] left) {\n        Stack<Integer> stack = new Stack<>();\n        for (int i = 0; i < arr.length; i++) {\n            while (!stack.isEmpty() && arr[stack.peek()] >= arr[i]) stack.pop();\n            if (stack.isEmpty()) left[i] = -1;\n            else left[i] = stack.peek();\n            stack.push(i);\n        }\n    }\n\n    // strictly smaller on right\n    void stack_r(int[] arr, int[] right) {\n        Stack<Integer> stack = new Stack<>();\n        for (int i = arr.length - 1; i >= 0; i--) {\n            while (!stack.isEmpty() && arr[stack.peek()] >= arr[i]) stack.pop();\n            if (stack.isEmpty()) right[i] = arr.length;\n            else right[i] = stack.peek();\n            stack.push(i);\n        }\n    }\n\n    private void sort(int[] arr) {\n        List<Integer> list = new ArrayList<>();\n        for (int i : arr) list.add(i);\n        Collections.sort(list);\n        for (int i = 0; i < arr.length; i++) arr[i] = list.get(i);\n    }\n}"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\nimport static java.lang.Math.*;\n \npublic class B {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint t = sc.nextInt();\n\t\twhile(t-->0) {\n\t\t\tint n = sc.nextInt();\n\t\t\tint k = sc.nextInt();\n\t\t\tchar[] a = sc.next().toCharArray();\n\t\t\t\n\t\t\tint score = 0;\n\t\t\tint[] runs = new int[n+1]; //array of gap sizes\n\t\t\tint last_win = -1;\n\t\t\tfor(int i = 0; i < n; i++) {\n\t\t\t\tif(a[i] == 'W') {\n\t\t\t\t\tif(last_win != -1 && last_win == i-1) {\n\t\t\t\t\t\tscore += 2;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tscore += 1;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif(last_win != -1 && last_win != i-1) {\n\t\t\t\t\t\truns[i-last_win-1]++; //gap size\n\t\t\t\t\t}\n\t\t\t\t\tlast_win = i;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif(last_win == -1) {\n\t\t\t\tSystem.out.println(max(0, 2*k-1));\n\t\t\t} else {\n\t\t\t\tscore += 2*k;\n\t\t\t\tint rem = k;\n\t\t\t\tfor(int i = 1; i <= n; i++) {\n\t\t\t\t\twhile(rem >= i && runs[i] > 0) {\n\t\t\t\t\t\truns[i]--;\n\t\t\t\t\t\trem -= i;\n\t\t\t\t\t\tscore++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tSystem.out.println(min(score, 2*n-1));\n\t\t\t}\n\t\t}\n\t}\n}"
        },
        {
            "language": 3,
            "solution": "def main():\n    n, k = map(int, input().split())\n    line = input()\n    was = False\n    prev = False\n    res = 0\n    before = 0\n    spare_sizes = []\n    sz = 0\n    for i in line:\n        if not was:\n            if i == \"L\":\n                before += 1\n            else:\n                was = True\n        if was:\n            if i == \"L\":\n                sz += 1\n            else:\n                if sz > 0:\n                    spare_sizes.append(sz)\n                    sz = 0\n        if i == \"W\":\n            if prev:\n                res += 2\n            else:\n                res += 1\n            prev = True\n        else:\n            prev = False\n    if was:\n        before += sz\n    if res == 0 and k > 0:\n        res -= 1\n    spare_sizes = sorted(spare_sizes)\n\n    for i in range(len(spare_sizes)):\n        if spare_sizes[i] > k:\n            res += 2*k\n            k = 0\n            break\n        else:\n            res += 2*(spare_sizes[i])\n            k -= spare_sizes[i]\n            res += 1\n        if k == 0:\n            break\n    res += 2*min(k, before)\n    print(res)\n\n\nif __name__ == '__main__':\n    t = int(input())\n    for i in range(t):\n        main()\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    int n, k;\n    cin >> n >> k;\n    int wins = 0, lose = 0, w_s = 0;\n    string s;\n    vector<int> l_s;\n    cin >> s;\n    for (int i = 0; i < n; i++) {\n      if (s[i] == 'W') {\n        wins++;\n        if (i == 0 || s[i - 1] == 'L') w_s++;\n      }\n      if (s[i] == 'L') {\n        lose++;\n        if (i == 0 || s[i - 1] == 'W') {\n          l_s.push_back(0);\n        }\n        l_s.back()++;\n      }\n    }\n    if (k >= lose) {\n      cout << 2 * n - 1 << \"\\n\";\n      continue;\n    }\n    if (wins == 0) {\n      if (k == 0)\n        cout << 0 << \"\\n\";\n      else\n        cout << 2 * k - 1 << \"\\n\";\n      continue;\n    }\n    if (s[0] == 'L') l_s[0] = 1e9;\n    if (s[n - 1] == 'L') l_s.back() = 1e9;\n    sort(l_s.begin(), l_s.end());\n    wins += k;\n    for (auto it : l_s) {\n      if (it > k) break;\n      k -= it;\n      w_s--;\n    }\n    cout << 2 * wins - w_s << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class B\n{\n    public static void main(String[] args) throws NumberFormatException, IOException\n    {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        int t = Integer.parseInt(br.readLine());\n        \n        while(t-- != 0)\n        {\n        \tStringTokenizer st = new StringTokenizer(br.readLine());\n            int n = Integer.parseInt(st.nextToken());   \n            int k = Integer.parseInt(st.nextToken());\n            String str = br.readLine();\n            if(str.indexOf('W')==-1)\n            {\n            \tif(k==0)\n            \t\tSystem.out.println(\"0\");\n            \telse\n            \t\tSystem.out.println(Math.min(n, k)*2-1);\n            \tcontinue;\n            }\n            List<Integer> list = new ArrayList<>();\n            \n            int indexl = 0;\n            int indexr = n-1;\n            \n           \n            char[] arr = str.toCharArray();\n            \n            int ans = 0;\n            for(int i = 0 ; i < n ; i++)\n            {\n            \tif(arr[i] == 'W')\n            \t{\n            \t\tindexl = i;\n            \t\tbreak;\n            \t}\n            }\n            for(int i = n-1 ; i >= 0 ; i--)\n            {\n            \tif(arr[i] == 'W')\n            \t{\n            \t\tindexr = i;\n            \t\tbreak;\n            \t}\n            }\n            int totalL = indexl+(n-indexr-1);\n      //      System.out.println(indexl+\" \"+indexr+\" \"+totalL);\n            boolean flag = false;\n            for(int i = 0 ; i < n ; i++)\n            {\n            \tif(arr[i] == 'W')\n            \t{\n            \t\tif(flag)\n            \t\t\tans = ans + 2;\n            \t\telse\n            \t\t{\n            \t\t\tans++;\n            \t\t\tflag = true;\n            \t\t}\n            \t}\n            \telse\n            \t{\n            \t\tflag = false;\n            \t}\n            }\n            \n            int count = 0;\n            while(indexl < indexr)\n            {\n            \tif(arr[indexl]=='L')\n            \t\tcount++;\n            \telse\n            \t{\n            \t\tif(count > 0)\n            \t\t{\n            \t\t\tlist.add(count);\n            \t\t\tcount = 0;\n            \t\t}\n            \t}\n            \tindexl++;\n            }\n            if(count > 0)\n            \tlist.add(count);\n            Collections.sort(list);\n            \n       //     System.out.println(list.size());\n            for(int i = 0 ; i < list.size(); i++)\n            {\n            \tif(k>=list.get(i))\n            \t{\n            \t\tans += (list.get(i)*2+1);\n            \t\tk -= list.get(i);\n            \t}\n            \telse\n            \t{\n            \t\tans += k*2;\n            \t\tk = 0;\n            \t\tbreak;\n            \t}\n            }\n            ans += Math.min(k, totalL)*2;\n            \n            System.out.println(ans);\n        }\n        \n    }\n    \n    \n}"
        },
        {
            "language": 3,
            "solution": "z,zz=input,lambda:list(map(int,z().split()))\nfast=lambda:stdin.readline().strip()\nzzz=lambda:[int(i) for i in stdin.readline().split()]\nszz,graph,mod,szzz=lambda:sorted(zz()),{},10**9+7,lambda:sorted(zzz())\n\nfrom string import *\nfrom re import *\nfrom collections import *\nfrom queue import *\nfrom sys import *\nfrom collections import *\nfrom math import *\nfrom heapq import *\nfrom itertools import *\nfrom bisect import *\nfrom collections import Counter as cc\nfrom math import factorial as f\nfrom bisect import bisect as bs\nfrom bisect import bisect_left as bsl\nfrom itertools import accumulate as ac\ndef lcd(xnum1,xnum2):return (xnum1*xnum2//gcd(xnum1,xnum2))\ndef prime(x):\n    p=ceil(x**.5)+1\n    for i in range(2,p):\n        if (x%i==0 and x!=2) or x==0:return 0\n    return 1\ndef dfs(u,visit,graph):\n    visit[u]=True\n    for i in graph[u]:\n        if not visit[i]:\n            dfs(i,visit,graph)\n\n###########################---Test-Case---#################################\n\"\"\"\n\n\n\n\"\"\"\n###########################---START-CODING---##############################\n\n\nnum=int(z())\nans=[]\nfor _ in range( num ):\n    n,k=zz()\n    \n    arr=sorted(map(len,fast().strip('L').split('W')))\n    m=len(arr)+k\n    while arr and arr[0]<=k:\n        k-=arr.pop(0)\n    ans.append((2*min(n,m-1)-len(arr)or 1)-1)\n        \n        \nfor _ in ans:print(_)                \n        \n        \n        \n\n    \n        \n        \n        \n            \n            \n            \n                \n\n    \n    \n        \n            \n        \n        \n        \n    \n    \n        \n    \n        \n    \n    \n    \n        \n        \n    \n    \n        \n        \n        \n        \n        \n        \n        \n\n    \n    \n\n    \n\n    \n        \n        \n        \n    \n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.math.BigInteger;\n\nimport java.util.*;\nimport javafx.util.Pair;\n\npublic class Main\n{\n\n    public static void main(String args[])\n    {\n        FastScanner input = new FastScanner();\n        int tc = input.nextInt();\n        work:  while (tc-- > 0) {\n          int n = input.nextInt();\n       int k = input.nextInt();\n       String s  = input.next();\n       ArrayList<Integer> important = new ArrayList<>();\n       int l =0;\n       \n        for (int i = 0; i <n; i++) {\n       if(s.charAt(i)=='L')\n           l++;\n       \n        }\n         k   = Math.min(k, l);\n        if(!s.contains(\"W\")&&k!=0)\n       {\n           System.out.println(2*Math.min(k,l )-1);\n           continue work;\n       }\n        long point = 0;\n        for (int i = 0; i < n; i++) {\n            if(s.charAt(i)=='W')\n            {\n                point++;\n                while(i+1<n&&s.charAt(i+1)=='W')\n                {\n                    point+=2;\n                    i++;\n                }\n            }\n        }\n        int c =0;\n        boolean check = false;\n        for (int i = 0; i < n; i++) {\n           if(s.charAt(i)=='W')\n           {\n               check = true;\n               if(c>0)\n                   important.add(c);\n               c=0;\n               \n           }\n           else if(check)\n           {\n               c++;\n           }\n               \n        }\n//            System.out.println(point);\n//        System.out.println(important);\n       Collections.sort(important);\n//            System.out.println(important);\n        for (int i = 0; i < important.size()&&k>0; i++) {\n            if(important.get(i)<=k)\n            {\n                point+=((important.get(i)*2)+1);\n                k-=important.get(i);\n            }\n            \n        }\n        if(k>0)\n        {\n            point+=(k*2);\n        }\n        \n        System.out.println(point);   \n        }\n        \n    }\n\n    static class FastScanner\n    {\n\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        StringTokenizer st = new StringTokenizer(\"\");\n\n        String next()\n        {\n            while (!st.hasMoreTokens()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt()\n        {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong()\n        {\n\n            return Long.parseLong(next());\n        }\n\n        double nextDouble()\n        {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine() throws IOException\n        {\n            return br.readLine();\n        }\n    }\n\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\nfrom sys import stdin,stdout\ndef II(): # to take integer input\n    return int(stdin.readline())\ndef IP(): # to take tuple as input\n    return map(int,stdin.readline().split())\n\ndef solve():\n    n,k=IP()\n    s=input()\n    cnt=s.count('W')\n    if k==0:\n        ans=0\n        last='L'\n        for ele in s:\n            if ele=='W' and last=='W':\n                ans+=2\n            elif ele=='W' and last=='L':\n                ans+=1\n            last=ele\n        print(ans)\n        return\n    else:\n        if cnt==0:\n            print(1+2*(k-1))\n            return\n        else:\n            new=[0]*n\n            first,last=2*n,-1\n            for i in range(n):\n                new[i]=s[i]\n                if s[i]=='W':\n                    first=min(first,i)\n                    last=max(last,i)\n            pq=[]\n            if first!=last:\n                llast=first\n                for i in range(first+1,last+1,1):\n                    if s[i]=='W':\n                        pq.append([i-llast-1,llast])\n                        llast=i\n                pq.sort()\n                i=0\n                nn=len(pq)\n                #print(pq)\n                while k>0 and i<nn:\n                    lenn,strt=pq[i]\n                    end=(strt+lenn+1)\n                    for j in range(strt+1,end):\n                        if k>0:\n                            new[j]='W'\n                            k-=1\n                        else:\n                            break\n                    i+=1\n            if k>0:\n                if s[last-1]=='W':\n                    for i in range(last+1,n):\n                        if k>0:\n                            new[i]='W'\n                            k-=1\n                        else:\n                            break\n                    for i in range(first-1,-1,-1):\n                        if k>0:\n                            new[i]='W'\n                            k-=1\n                        else:\n                            break\n                else:\n                    for i in range(first-1,-1,-1):\n                        if k>0:\n                            new[i]='W'\n                            k-=1\n                        else:\n                            break\n                    for i in range(last+1,n):\n                        if k>0:\n                            new[i]='W'\n                            k-=1\n                        else:\n                            break\n\n            ans=0\n            last='L'\n            for ele in new:\n                if ele=='W' and last=='W':\n                    ans+=2\n                elif ele=='W' and last=='L':\n                    ans+=1\n                last=ele\n            print(ans)\n            return\n\nt=II()\nfor i in range(t):\n    solve()\n\n    #######\n   #\n  #\n #######   #     #  # ####   # #     #\n       #  # #   #  # #   #  # # #   #\n      #  ####  #  # ####   ####  # #\n######  #   # #### #    # #   #   #\n\n# ``````\u00b60````1\u00b61_```````````````````````````````````````\n# ```````\u00b6\u00b6\u00b60_`_\u00b6\u00b6\u00b60011100\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6001_````````````````````\n# ````````\u00b6\u00b6\u00b6\u00b6\u00b600\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b60_````````````````\n# `````1_``\u00b6\u00b600\u00b60000000000000000000000\u00b6\u00b6\u00b6\u00b60_`````````````\n# `````_\u00b6\u00b6_`0\u00b6000000000000000000000000000\u00b6\u00b6\u00b6\u00b6\u00b61``````````\n# ```````\u00b6\u00b6\u00b600\u00b600000000000000000000000000000\u00b6\u00b6\u00b6_`````````\n# ````````_\u00b6\u00b600000000000000000000\u00b6\u00b600000000000\u00b6\u00b6`````````\n# `````_0011\u00b6\u00b6\u00b6\u00b6\u00b6000000000000\u00b6\u00b600\u00b6\u00b60\u00b6\u00b600000000\u00b6\u00b6_````````\n# ```````_\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b600000000000\u00b6\u00b6\u00b6\u00b60\u00b6\u00b6\u00b6\u00b6\u00b600000000\u00b6\u00b61````````\n# ``````````1\u00b6\u00b6\u00b6\u00b6\u00b6000000\u00b6\u00b60\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b60000000\u00b6\u00b6\u00b6````````\n# ```````````\u00b6\u00b6\u00b60\u00b6000\u00b600\u00b60\u00b6\u00b6`_____`__1\u00b60\u00b6\u00b600\u00b600\u00b6\u00b6````````\n# ```````````\u00b6\u00b6\u00b6\u00b6\u00b600\u00b600\u00b610\u00b60``_1111_`_\u00b6\u00b60000\u00b60\u00b6\u00b6\u00b6````````\n# ``````````1\u00b6\u00b6\u00b6\u00b6\u00b600\u00b60\u00b6\u00b6_\u00b6\u00b61`_\u00b6_1_0_`1\u00b6\u00b6_0\u00b60\u00b6\u00b60\u00b6\u00b6````````\n# ````````1\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b60\u00b6\u00b60\u00b60_0\u00b6``100111``_\u00b61_0\u00b60\u00b6\u00b6_1\u00b6````````\n# ```````1\u00b6\u00b6\u00b6\u00b600\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6010\u00b6``1111111_0\u00b611\u00b6\u00b6\u00b6\u00b6\u00b6_10````````\n# ```````0\u00b6\u00b6\u00b6\u00b6__10\u00b6\u00b6\u00b6\u00b6\u00b6100\u00b6\u00b6\u00b60111110\u00b6\u00b6\u00b61__\u00b6\u00b6\u00b6\u00b6`__````````\n# ```````\u00b6\u00b6\u00b6\u00b60`__0\u00b6\u00b60\u00b6\u00b6_\u00b6\u00b6\u00b6_11````_0\u00b6\u00b60`_1\u00b6\u00b6\u00b6\u00b6```````````\n# ```````\u00b6\u00b6\u00b600`__0\u00b6\u00b6_00`_0_``````````1_``\u00b60\u00b6\u00b6_```````````\n# ``````1\u00b61``\u00b6\u00b6``1\u00b6\u00b6_11``````````````````\u00b6`\u00b6\u00b6````````````\n# ``````1_``\u00b60_\u00b61`0\u00b6_`_``````````_``````1_`\u00b61````````````\n# ``````````_`1\u00b600\u00b6\u00b6_````_````__`1`````__`_\u00b6`````````````\n# ````````````\u00b61`0\u00b6\u00b6_`````````_11_`````_``_``````````````\n# `````````\u00b6\u00b6\u00b6\u00b6000\u00b6\u00b6_1```````_____```_1``````````````````\n# `````````\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b60_``````_````_1111__``````````````\n# `````````\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b601_`````_11____1111_```````````\n# `````````\u00b6\u00b60\u00b60\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b61101_______11\u00b6_```````````\n# ``````_\u00b6\u00b6\u00b60000000\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b60\u00b60\u00b6\u00b6\u00b61````````````\n# `````0\u00b6\u00b60000000\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b61`````````````\n# ````0\u00b60000000\u00b6\u00b60_````_011_10\u00b6110\u00b601_1\u00b6\u00b6\u00b60````_100\u00b6001_`\n# ```1\u00b60000000\u00b60_``__`````````_`````````0\u00b6_``_00\u00b6\u00b6010\u00b6001\n# ```\u00b6\u00b600000\u00b6\u00b61``_01``_11____``1_``_`````\u00b6\u00b60100\u00b61```_00\u00b61\n# ``1\u00b6\u00b600000\u00b6_``_\u00b6_`_101_``_`__````__````_0000001100\u00b6\u00b6\u00b60`\n# ``\u00b6\u00b6\u00b60000\u00b61_`_\u00b6``__0_``````_1````_1_````1\u00b6\u00b6\u00b60\u00b6\u00b6\u00b6\u00b6\u00b6\u00b60```\n# `_\u00b6\u00b6\u00b6\u00b600\u00b60___01_10\u00b6_``__````1`````11___`1\u00b6\u00b6\u00b601_````````\n# `1\u00b6\u00b6\u00b6\u00b6\u00b60\u00b60`__01\u00b6\u00b6\u00b60````1_```11``___1_1__11\u00b6000`````````\n# `1\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b61_1_01__`01```_1```_1__1_11___1_``00\u00b61````````\n# ``\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b60`__10__000````1____1____1___1_```10\u00b60_```````\n# ``0\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b61___0000000```11___1__`_0111_```000\u00b601```````\n# ```\u00b6\u00b6\u00b600000\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b601___1___00_1\u00b6\u00b6\u00b6`_``1\u00b6\u00b610\u00b6\u00b60```````\n# ```1010000\u00b6000\u00b6\u00b60100_11__1011000\u00b6\u00b60\u00b61_10\u00b6\u00b6\u00b6_0\u00b6\u00b600``````\n# 10\u00b6000000000\u00b60________0\u00b6000000\u00b6\u00b60000\u00b6\u00b6\u00b6\u00b6000_0\u00b60\u00b600`````\n# \u00b6\u00b6\u00b6\u00b6\u00b6\u00b60000\u00b6\u00b6\u00b6\u00b6_`___`_0\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b600000000000000_0\u00b600\u00b601````\n# \u00b6\u00b6\u00b6\u00b6\u00b60\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6_``_1\u00b6\u00b6\u00b600000000000000000000_0\u00b6000\u00b601```\n# 1__```1\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b600\u00b6\u00b6\u00b6\u00b600000000000000000000\u00b6_0\u00b60000\u00b60_``\n# ```````\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b600000000000000000000010\u00b600000\u00b6\u00b6_`\n# ```````0\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b600000000000000000000\u00b610\u00b6\u00b60\u00b6\u00b6\u00b6\u00b6\u00b60`\n# ````````\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b60\u00b6\u00b6\u00b600000000000000000000010\u00b6\u00b6\u00b60011```\n# ````````1\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b60\u00b6\u00b6\u00b60000000000000000000\u00b6100__1_`````\n# `````````\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6000000000000000000\u00b611``_1``````\n# `````````1\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b60\u00b6\u00b6\u00b600000000000000000\u00b611___1_`````\n# ``````````\u00b6\u00b6\u00b6\u00b6\u00b6\u00b60\u00b60\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b60000000000000000\u00b611__``1_````\n# ``````````\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b60\u00b6\u00b6\u00b60\u00b6\u00b6\u00b6\u00b6\u00b6000000000000000\u00b61__````__```\n# ``````````\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b60\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b60000000000000000__`````11``\n# `````````_\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6000\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6000000000000011_``_1\u00b6\u00b6\u00b60`\n# `````````_\u00b6\u00b6\u00b6\u00b6\u00b6\u00b60\u00b6\u00b6000000\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6000000000000100\u00b6\u00b6\u00b6\u00b60_`_\n# `````````1\u00b6\u00b6\u00b6\u00b6\u00b60\u00b6\u00b6\u00b6000000000\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6000000000\u00b600\u00b6\u00b601`````\n# `````````\u00b6\u00b6\u00b6\u00b6\u00b60\u00b60\u00b6\u00b6\u00b60000000000000\u00b60\u00b600000000011_``````_\n# ````````1\u00b6\u00b60\u00b6\u00b6\u00b60\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6000000000000000000000\u00b611___11111\n# ````````\u00b6\u00b6\u00b6\u00b60\u00b6\u00b6\u00b6\u00b6\u00b600\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6000000000000000000\u00b6011111111_\n# ```````_\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b60000000\u00b60\u00b600000000000000000\u00b601_1111111\n# ```````0\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6000000000000000000000000000\u00b601___`````\n# ```````\u00b6\u00b6\u00b6\u00b6\u00b6\u00b60\u00b6\u00b6\u00b6000000000000000000000000000\u00b601___1````\n# ``````_\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b600000000000000000000000000000011_111```\n# ``````0\u00b6\u00b60\u00b6\u00b6\u00b60\u00b6\u00b60000000000000000000000000000\u00b601`1_11_``\n# ``````\u00b6\u00b6\u00b6\u00b6\u00b6\u00b60\u00b6\u00b6\u00b60000000000000000000000000000001`_0_11_`\n# ``````\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b6\u00b600000000000000000000000000000\u00b601``_0_11`\n# ``````\u00b6\u00b6\u00b6\u00b60\u00b6\u00b6\u00b6\u00b600000000000000000000000000000001```_1_11\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\n\ndef cheatScore(s, n, k):\n    lose = 0\n    score = 0\n    start = 0\n    tmp = []\n    flag = 0\n    Alllose = 1\n    for c in s:\n        if c != 'W':\n            continue\n        else:\n            Alllose = 0\n            break\n    if Alllose:\n        return max(0, 2*min(n, k)-1)\n\n    for i in range(len(s)):\n        if i == 0:\n            if s[i] == 'L':\n                count = 1\n                flag = 1\n            else:\n                continue\n        if s[i] == 'L':\n            if s[i-1] == 'W':\n                count = 1\n            elif s[i-1] == 'L':\n                count += 1\n        else:\n            if s[i-1] == 'L':\n                tmp.append(count)\n            else:\n                continue\n    stEnd = 0\n    if flag:\n        stEnd += tmp.pop(0)\n    if s[-1] == 'L':\n        stEnd += count\n    tmp = sorted(tmp)\n    #print(s, stEnd, tmp)\n\n    for i in range(len(s)):\n        if i == 0:\n            if s[i] == 'W':\n                score += 1\n            else:\n                lose += 1\n            continue\n        if s[i] == 'W':\n            if s[i-1] == 'W':\n                score += 2\n            else:\n                score += 1\n        else:\n            lose += 1\n    score += 2 * min(lose, k)\n    bridge = 0\n    leave = 0\n    for gap in tmp:\n        if k >= gap:\n            bridge += 1\n            k -= gap\n        else:\n            leave += gap\n    score += bridge\n    return score\n\nwhile t:\n    t -= 1\n    n, k = list(map(int, input().strip().split()))\n    s = input()\n    maxScore = cheatScore(s, n, k)\n    print(maxScore)\n"
        },
        {
            "language": 3,
            "solution": "for __ in range(int(input())):\n    n, m = list(map(int, input().split()))\n    ar = list(input())\n    kek = []\n    ans = 0\n    if 'W' in ar:\n        i = ar.index('W')\n        flag = 0\n        cnt = 0\n        while i < n:\n            if ar[i] == 'L' and flag == 0:\n                flag = 1\n                cnt = 1\n            elif ar[i] == 'L':\n                cnt += 1\n            elif ar[i] == 'W' and flag == 1:\n                kek.append(cnt)\n                flag = 0\n            i += 1\n    else:\n        ans -= 1\n\n    kek.sort()\n    bebe = m\n    j = 0\n    while bebe > 0 and j < len(kek):\n        if bebe - kek[j] >= 0:\n            ans += kek[j] * 2 + 1\n        else:\n            break\n        bebe -= kek[j]\n        j += 1\n\n    ans += 2 * (bebe - max(0, m - ar.count('L')))\n\n    for i in range(n):\n        if i == 0:\n            if ar[i] == 'W':\n                ans += 1\n        else:\n            if ar[i] == ar[i - 1] == 'W':\n                ans += 2\n            elif ar[i] == 'W':\n                ans += 1\n\n    print(max(ans, 0))"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor _ in range(t):\n    n,k = map(int,input().split())\n    s = list(input())\n    w = 0\n    for x in s:\n        if x == 'W':\n            w += 1\n    if k >= n-w:\n        print(1 +(n-1)*2)\n    else:\n        a = -1\n        b = -3\n        for i in range(n):\n            if s[i] == 'W':\n                a = i\n                break\n\n        for i in range(n):\n            if s[n - i - 1] == 'W':\n                b = n - i - 1\n                break\n\n        prev = False #if prev is win\n        holes = {}\n        h = 0\n        for i in range(a,b+1):\n            if s[i] == 'W':\n                if h in holes:\n                    holes[h].append(i-1)\n                else:\n                    if h > 0:\n                        holes[h] = [i-1]\n                h = 0\n                if not prev:\n                    prev = True\n            else:\n                h += 1\n                if prev:\n                    prev = False\n\n        nums = {}\n        sorted_keys_holes = sorted(holes.keys())\n        for h in sorted_keys_holes:\n            if h > k:\n                break\n            else:\n                x = min(k // h, len(holes[h]))\n                nums[h] = []\n                for r in range(x):\n                    nums[h].append((holes[h][r] - h, holes[h][r]))\n                k -= x*h\n        for h in nums.keys():\n            for r in nums[h]:\n                i,j = r\n                for l in range(i,j+1):\n                    s[l] = 'W'\n        c = 0\n        prev = False\n        for i in range(a, b+1):\n            if s[i] =='W':\n                if prev:\n                    c += 2\n                else:\n                    c += 1\n                prev = True\n            else:\n                prev = False\n        if c > 0:\n            print(c + 2*k)\n        else:\n            if k > 0:\n                print(1+2*(k-1))\n            else:\n                print(0)\n                \n    \n    \n    \n\n            \n    \n    \n    "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 1e6 + 5;\nint t, n, K;\nchar ch[maxn];\nint main() {\n  cin >> t;\n  while (t--) {\n    cin >> n >> K >> ch + 1;\n    ch[0] = 'L';\n    int q = 0, res = 0;\n    for (int i = 1; i <= n; i++) {\n      res += (ch[i] == 'W') + (ch[i] == 'W' && ch[i - 1] == 'W');\n    }\n    vector<int> v;\n    int i = 1;\n    while (i <= n && ch[i] == 'L') i++;\n    if (i == n + 1) {\n      if (K)\n        cout << 2 * min(K, n) - 1 << \"\\n\";\n      else\n        cout << \"0\\n\";\n      continue;\n    }\n    q += i - 1;\n    for (int j; i <= n; i = j) {\n      j = i;\n      while (j <= n && ch[j] == 'W') j++;\n      int k = j;\n      while (j <= n && ch[j] == 'L') j++;\n      if (j <= n)\n        v.push_back(j - k);\n      else\n        q += j - k;\n    }\n    sort(v.begin(), v.end());\n    for (int i = 0; i < v.size() && K; i++) {\n      if (K >= v[i]) {\n        res += v[i] * 2 + 1;\n        K -= v[i];\n      } else {\n        res += K * 2;\n        K = 0;\n      }\n    }\n    if (K) {\n      res += 2 * min(q, K);\n    }\n    cout << res << \"\\n\";\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.*;\nimport java.io.*;\n\npublic class ChessCheater11B{\n\t\n\tstatic class FastReader {\n\n        BufferedReader br;\n        StringTokenizer st;\n\n        private FastReader() {\n            br = new BufferedReader(new InputStreamReader(System.in));\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n\t int[] nextIntArray(int n) {\n\t\t\tint[] a = new int[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\ta[i] = nextInt();\n\t\t\treturn a;\n\t}\n\n\tint[] nextIntArrayOne(int n) {\n\t\t\t\tint[] a = new int[n+1];\n\t\t\t\tfor (int i = 1; i < n+1; i++)\n\t\t\t\t\ta[i] = nextInt();\n\t\t\t\treturn a;\n\t}\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine() {\n            String str = \"\";\n            try {\n                str = br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n    }\n\n    public static void main(String[] args) {\n    \tFastReader s = new FastReader();\n    \tStringBuilder str = new StringBuilder();\n\n\t\tint t = s.nextInt();\n\t\t\n\t\twhile(t-- >0) {\n\t\t\tint n = s.nextInt(), k = s.nextInt();\n\t\t\tchar arr[]  = s.nextLine().toCharArray();\n\t\t\t\n\t\t\tint fw = 0;\n\t\t\tint lw = n - 1;\n\t\t\tboolean allL = true;\n\t\t\tfor(char c : arr) {\n\t\t\t\tif(c == 'W') allL = false;\n\t\t\t}\n\t\t\t\n\t\t\tif(allL) {\n\t\t\t\tif(k == 0) str.append(0+\"\\n\");\n\t\t\t\telse\n\t\t\t\tstr.append(2 * k - 1 +\"\\n\");\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\tfor(char c : arr) {\n\t\t\t\t\n\t\t\t\tif(c == 'W') \n\t\t\t\t break;\n\t\t\t\tfw++;\n\t\t\t}\n\t\t\t\n\t\t\tfor(int i = n - 1; i >= 0; i--) {\n\t\t\t\t\n\t\t\t\tif(arr[i] =='W') break;\n\t\t\t\tlw--;\n\t\t\t}\n\t\t\t\n\t\t\tArrayList<Integer> list = new ArrayList<>();\n\t\t\t\n\t\t\tlong ans = 0;\n\t\t\tboolean W = false;\n\t\t\tint count = 0;\n\t\t\t\n\t\t\tfor(int i = fw; i <= lw; i++) {\n\t\t\t\tif(arr[i] == 'W') {\n\t\t\t\t\tif(count > 0 ) list.add(count);\n\t\t\t\t\tcount = 0;\n\t\t\t\t\tif(W)  ans+=2;\n\t\t\t\t\telse ans++;\n\t\t\t\t\t\n\t\t\t\t\tW = true;\n\t\t\t\t}else {\n\t\t\t\t\t\n\t\t\t\t\tcount++;\n\t\t\t\t\t\n\t\t\t\t\tW = false;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tCollections.sort(list);\n\t\t\t\n\t\t\tint stop = 0;\n\t\t\t\n\t\t\tfor(int i = 0; i < list.size(); i++) {\n\t\t\t\tint cur = list.get(i);\n\t\t\t\t\n\t\t\t\tif(cur <= k) {\n\t\t\t\t\tstop++;\n\t\t\t\t\t\n\t\t\t\t\tans+= 2 * cur + 1;\n\t\t\t\t\t\n\t\t\t\t\tk -= cur;\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t}else break;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif(stop < list.size()) {\n\t\t\t\t\n\t\t\t\tans += 2 * k;\n\t\t\t\t\n\t\t\t\tk = 0;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\tint onRight = n - 1 - lw;\n\t\t\t\n\t\t\tint use = Math.min(k, onRight);\n\t\t\t\n\t\t\tans += 2 * use;\n\t\t\t\n\t\t\tk -= use;\n\t\t\t\n\t\t\tint onLeft = fw;\n\t\t\t\n\t\t\tuse = Math.min(k, onLeft);\n\t\t\t\n\t\t\tans += 2 * use;\n\t\t\t\n\t\t\tstr.append(ans+\"\\n\");\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t}\n\t\tSystem.out.println(str);\n     }\n\n\n\n\t\n\n}\n\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;import java.util.*;import java.math.*;\npublic class Main\n{\n\tstatic long mod=1000000007l;\n    static int max=Integer.MAX_VALUE,min=Integer.MIN_VALUE;\n    static long maxl=Long.MAX_VALUE,minl=Long.MIN_VALUE;\n    static BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n    static StringTokenizer st;\n    static StringBuilder sb;\n    \n    static public void main(String[] args)throws Exception\n    {\n    \tst=new StringTokenizer(br.readLine());\n    \tint t=i();\n    \tsb=new StringBuilder(1000000);\n    \to:\n    \twhile(t-->0)\n    \t{\n    \t\tint n=i();\n    \t\tint k=i();\n    \t\tString s=s();\n    \t\tchar ar[]=s.toCharArray();\n    \t\tif(k==0)\n    \t\t{\n    \t\t\tint p=-1;\n    \t\t\tint ss=0;\n    \t\t\tfor(int x:ar)\n    \t\t\t{\n    \t\t\t\tif(x=='W')\n    \t\t\t\t{\n    \t\t\t\t\tif(p==-1)ss++;\n    \t\t\t\t\telse ss+=2;\n    \t\t\t\t\tp=1;\n    \t\t\t\t}\n    \t\t\t\telse p=-1;\n    \t\t\t}\n    \t\t\tsl(ss);\n    \t\t\tcontinue o;\n    \t\t}\n    \t\tint i=s.indexOf('W');\n    \t\tif(i==-1)\n    \t\t{\n    \t\t\tsl(max(0,k*2-1));\n    \t\t}\n    \t\telse\n    \t\t{\n    \t\t\tPriorityQueue<int[]> pr=new PriorityQueue<>\n    \t\t\t(n,(a,b)->a[0]==b[0]?a[1]-b[1]:a[0]-b[0]);\n    \t\t\tint l=s.lastIndexOf('W');\n    \t\t\tif(l==i)\n    \t\t\t{\n    \t\t\t\tif(k>0)\n\t    \t\t\t{\n\t    \t\t\t\tfor(int x=i-1;x>=0;x--)\n\t    \t\t\t\t{\n\t    \t\t\t\t\tif(ar[x]=='L')\n\t    \t\t\t\t\t{\n\t\t    \t\t\t\t\tar[x]='W';\n\t\t    \t\t\t\t\tk--;\n\t\t    \t\t\t\t\tif(k==0)break;\n\t    \t\t\t\t\t}\n\t    \t\t\t\t}\n\t    \t\t\t}\n\t    \t\t\tif(k>0)\n\t    \t\t\t{\n\t    \t\t\t\tfor(int x=l+1;x<n;x++)\n\t    \t\t\t\t{\n\t    \t\t\t\t\tif(ar[x]=='L')\n\t    \t\t\t\t\t{\n\t\t    \t\t\t\t\tar[x]='W';\n\t\t    \t\t\t\t\tk--;\n\t\t    \t\t\t\t\tif(k==0)break;\n\t    \t\t\t\t\t}\n\t    \t\t\t\t}\n\t    \t\t\t}\n\t    \t\t\tint p=-1;\n\t    \t\t\tint ss=0;\n\t    \t\t\tfor(int x:ar)\n\t    \t\t\t{\n\t    \t\t\t\tif(x=='W')\n\t    \t\t\t\t{\n\t    \t\t\t\t\tif(p==-1)ss++;\n\t    \t\t\t\t\telse ss+=2;\n\t    \t\t\t\t\tp=1;\n\t    \t\t\t\t}\n\t    \t\t\t\telse p=-1;\n\t    \t\t\t}\n\t    \t\t\tsl(ss);\n    \t\t\t}\n    \t\t\t\n    \t\t\telse\n    \t\t\t{\n    \t\t\t\tint c=0;\n\t    \t\t\tfor(int x=i+1;x<=l;x++)\n\t    \t\t\t{\n\t    \t\t\t\tif(ar[x]=='L')c++;\n\t    \t\t\t\telse\n\t    \t\t\t\t{\n\t    \t\t\t\t\tif(c>0)\n\t    \t\t\t\t\t{\n\t\t    \t\t\t\t\tint aa[]=new int[2];\n\t\t    \t\t\t\t\taa[0]=c;\n\t\t    \t\t\t\t\taa[1]=x-1;\n\t\t    \t\t\t\t\tpr.add(aa);\n\t    \t\t\t\t\t}\n\t    \t\t\t\t\tc=0;\n\t    \t\t\t\t}\n\t    \t\t\t}\n\t    \t\t\too:\n\t    \t\t\twhile(pr.size()>0)\n\t    \t\t\t{\n\t    \t\t\t\tint e[]=pr.poll();\n\t    \t\t\t\tint en=e[1]-e[0];\n\t    \t\t\t\tfor(int x=e[1];x>en;x--)\n\t    \t\t\t\t{\n\t    \t\t\t\t\tar[x]='W';\n\t    \t\t\t\t\tk--;\n\t    \t\t\t\t\tif(k==0)break oo;\n\t    \t\t\t\t}\n\t    \t\t\t}\n\t    \t\t\tif(k>0)\n\t    \t\t\t{\n\t    \t\t\t\tfor(int x=i-1;x>=0;x--)\n\t    \t\t\t\t{\n\t    \t\t\t\t\tif(ar[x]=='L')\n\t    \t\t\t\t\t{\n\t\t    \t\t\t\t\tar[x]='W';\n\t\t    \t\t\t\t\tk--;\n\t\t    \t\t\t\t\tif(k==0)break;\n\t    \t\t\t\t\t}\n\t    \t\t\t\t}\n\t    \t\t\t}\n\t    \t\t\tif(k>0)\n\t    \t\t\t{\n\t    \t\t\t\tfor(int x=l+1;x<n;x++)\n\t    \t\t\t\t{\n\t    \t\t\t\t\tif(ar[x]=='L')\n\t    \t\t\t\t\t{\n\t\t    \t\t\t\t\tar[x]='W';\n\t\t    \t\t\t\t\tk--;\n\t\t    \t\t\t\t\tif(k==0)break;\n\t    \t\t\t\t\t}\n\t    \t\t\t\t}\n\t    \t\t\t}\n\t    \t\t\tint p=-1;\n\t    \t\t\tint ss=0;\n\t    \t\t\tfor(int x:ar)\n\t    \t\t\t{\n\t    \t\t\t\tif(x=='W')\n\t    \t\t\t\t{\n\t    \t\t\t\t\tif(p==-1)ss++;\n\t    \t\t\t\t\telse ss+=2;\n\t    \t\t\t\t\tp=1;\n\t    \t\t\t\t}\n\t    \t\t\t\telse p=-1;\n\t    \t\t\t}\n\t    \t\t\tsl(ss);\n    \t\t\t}\n    \t\t}\n    \t}\n    \tp(sb);\n    }\n    \n    static void s(String s){sb.append(s);}\n    static void s(int s){sb.append(s);}\n    static void s(long s){sb.append(s);}\n    static void s(char s){sb.append(s);}\n    static void s(double s){sb.append(s);}\n    static void ss(){sb.append(' ');}\n    static void sl(String s){sb.append(s);sb.append(\"\\n\");}\n    static void sl(int s){sb.append(s);sb.append(\"\\n\");}\n    static void sl(long s){sb.append(s);sb.append(\"\\n\");}\n    static void sl(char s){sb.append(s);sb.append(\"\\n\");}\n    static void sl(double s){sb.append(s);sb.append(\"\\n\");}\n    static void sl(){sb.append(\"\\n\");}\n    static int max(int a,int b){return a>b?a:b;}\n    static int min(int a,int b){return a<b?a:b;}\n    static int abs(int a){return Math.abs(a);}\n    static long max(long a,long b){return a>b?a:b;}\n    static long min(long a,long b){return a<b?a:b;}\n    static long abs(long a){return Math.abs(a);}\n    static int sq(int a){return (int)Math.sqrt(a);}\n    static long sq(long a){return (long)Math.sqrt(a);}\n    static int gcd(int a,int b){return b==0?a:gcd(b,a%b);}\n    static boolean pa(String s,int i,int j)\n    {\n    \twhile(i<j)if(s.charAt(i++)!=s.charAt(j--))return false;\n    \treturn true;\n    }\n    static int ncr(int n,int c,long m)\n    {\n        long a=1l;\n        for(int x=n-c+1;x<=n;x++)a=((a*x)%m);\n        long b=1l;\n        for(int x=2;x<=c;x++)b=((b*x)%m);\n        return (int)((a*(mul((int)b,m-2,m)%m))%m);\n    }\n    static boolean[] sieve(int n)\n    {\n        boolean bo[]=new boolean[n+1];\n        bo[0]=true;bo[1]=true;\n        for(int x=4;x<=n;x+=2)bo[x]=true;\n        for(int x=3;x*x<=n;x+=2)if(!bo[x])for(int y=x*x;y<=n;y+=x)bo[y]=true;\n        return bo;\n    }\n    static int[] fac(int n)\n    {\n        int bo[]=new int[n+1];\n        for(int x=1;x<=n;x++)for(int y=x;y<=n;y+=x)bo[y]++;\n        return bo;\n    }\n    static long mul(long a,long b,long m) \n    {\n        long r=1l;\n        a%=m;  \n        while(b>0)\n        {\n            if((b&1)==1)r=(r*a)%m; \n            b>>=1;\n            a=(a*a)%m;  \n        } \n        return r; \n    }\n    static int i()throws IOException\n    {\n        if(!st.hasMoreTokens())st=new StringTokenizer(br.readLine());\n        return Integer.parseInt(st.nextToken());\n    }\n    static long l()throws IOException\n    {\n        if(!st.hasMoreTokens())st=new StringTokenizer(br.readLine());\n        return Long.parseLong(st.nextToken());\n    }\n    static String s()throws IOException\n    {\n        if(!st.hasMoreTokens())st=new StringTokenizer(br.readLine());\n        return st.nextToken();\n    }\n    static double d()throws IOException\n    {\n        if(!st.hasMoreTokens())st=new StringTokenizer(br.readLine());\n        return Double.parseDouble(st.nextToken());\n    }\n    static void p(Object p){System.out.print(p);}\n    static void p(String p){System.out.print(p);}\n    static void p(int p){System.out.print(p);}\n    static void p(double p){System.out.print(p);}\n    static void p(long p){System.out.print(p);}\n    static void p(char p){System.out.print(p);}\n    static void p(boolean p){System.out.print(p);}\n    static void pl(Object p){System.out.println(p);}\n    static void pl(String p){System.out.println(p);}\n    static void pl(int p){System.out.println(p);}\n    static void pl(char p){System.out.println(p);}\n    static void pl(double p){System.out.println(p);}\n    static void pl(long p){System.out.println(p);}\n    static void pl(boolean p){System.out.println(p);}\n    static void pl(){System.out.println();}\n    static int[] ari(int n)throws IOException\n    {\n        int ar[]=new int[n];\n        if(!st.hasMoreTokens())st=new StringTokenizer(br.readLine());\n        for(int x=0;x<n;x++)ar[x]=Integer.parseInt(st.nextToken());\n        return ar;\n    }\n    static int[][] ari(int n,int m)throws IOException\n    {\n        int ar[][]=new int[n][m];\n        for(int x=0;x<n;x++)\n        {\n        \tif(!st.hasMoreTokens())st=new StringTokenizer(br.readLine());\n            for(int y=0;y<m;y++)ar[x][y]=Integer.parseInt(st.nextToken());\n        }\n        return ar;\n    }\n    static long[] arl(int n)throws IOException\n    {\n        long ar[]=new long[n];\n        if(!st.hasMoreTokens())st=new StringTokenizer(br.readLine());\n        for(int x=0;x<n;x++) ar[x]=Long.parseLong(st.nextToken());\n        return ar;\n    }\n    static long[][] arl(int n,int m)throws IOException\n    {\n        long ar[][]=new long[n][m];\n        for(int x=0;x<n;x++)\n        {\n        \tif(!st.hasMoreTokens())st=new StringTokenizer(br.readLine());\n            for(int y=0;y<m;y++)ar[x][y]=Long.parseLong(st.nextToken());\n        }\n        return ar;\n    }\n    static String[] ars(int n)throws IOException\n    {\n        String ar[]=new String[n];\n        if(!st.hasMoreTokens())st=new StringTokenizer(br.readLine());\n        for(int x=0;x<n;x++) ar[x]=st.nextToken();\n        return ar;\n    }\n    static double[] ard(int n)throws IOException\n    {\n        double ar[]=new double[n];\n        if(!st.hasMoreTokens())st=new StringTokenizer(br.readLine());\n        for(int x=0;x<n;x++)ar[x]=Double.parseDouble(st.nextToken());\n        return ar;\n    }\n    static double[][] ard(int n,int m)throws IOException\n    {\n        double ar[][]=new double[n][m];\n        for(int x=0;x<n;x++)\n        {\n        \tif(!st.hasMoreTokens())st=new StringTokenizer(br.readLine());\n            for(int y=0;y<m;y++)ar[x][y]=Double.parseDouble(st.nextToken());\n        }\n        return ar;\n    }\n    static char[] arc(int n)throws IOException\n    {\n        char ar[]=new char[n];\n        if(!st.hasMoreTokens())st=new StringTokenizer(br.readLine());\n        for(int x=0;x<n;x++)ar[x]=st.nextToken().charAt(0);\n        return ar;\n    }\n    static char[][] arc(int n,int m)throws IOException\n    {\n        char ar[][]=new char[n][m];\n        for(int x=0;x<n;x++)\n        {\n            String s=br.readLine();\n            for(int y=0;y<m;y++)ar[x][y]=s.charAt(y);\n        }\n        return ar;\n    }\n    static void p(int ar[])\n    {\n        StringBuilder sb=new StringBuilder(2*ar.length);\n        for(int a:ar)\n        {\n        \tsb.append(a);\n        \tsb.append(' ');\n        }\n        System.out.println(sb);\n    }\n    static void p(int ar[][])\n    {\n    \tStringBuilder sb=new StringBuilder(2*ar.length*ar[0].length);\n        for(int a[]:ar)\n        {\n            for(int aa:a)\n            {\n            \tsb.append(aa);\n            \tsb.append(' ');\n            }\n            sb.append(\"\\n\");\n        }\n        p(sb);\n    }\n    static void p(long ar[])\n    {\n        StringBuilder sb=new StringBuilder(2*ar.length);\n        for(long a:ar)\n        {\n        \tsb.append(a);\n        \tsb.append(' ');\n        }\n        System.out.println(sb);\n    }\n    static void p(long ar[][])\n    {\n    \tStringBuilder sb=new StringBuilder(2*ar.length*ar[0].length);\n        for(long a[]:ar)\n        {\n            for(long aa:a)\n            {\n            \tsb.append(aa);\n            \tsb.append(' ');\n            }\n            sb.append(\"\\n\");\n        }\n        p(sb);\n    }\n    static void p(String ar[])\n    {\n    \tint c=0;\n    \tfor(String s:ar)c+=s.length()+1;\n        StringBuilder sb=new StringBuilder(c);\n        for(String a:ar)\n        {\n        \tsb.append(a);\n        \tsb.append(' ');\n        }\n        System.out.println(sb);\n    }\n    static void p(double ar[])\n    {\n        StringBuilder sb=new StringBuilder(2*ar.length);\n        for(double a:ar)\n        {\n        \tsb.append(a);\n        \tsb.append(' ');\n        }\n        System.out.println(sb);\n    }\n    static void p(double ar[][])\n    {\n    \tStringBuilder sb=new StringBuilder(2*ar.length*ar[0].length);\n        for(double a[]:ar)\n        {\n            for(double aa:a)\n            {\n            \tsb.append(aa);\n            \tsb.append(' ');\n            }\n            sb.append(\"\\n\");\n        }\n        p(sb);\n    }\n    static void p(char ar[])\n    {\n        StringBuilder sb=new StringBuilder(2*ar.length);\n        for(char aa:ar)\n        {\n        \tsb.append(aa);\n        \tsb.append(' ');\n        }\n        System.out.println(sb);\n    }\n    static void p(char ar[][])\n    {\n        StringBuilder sb=new StringBuilder(2*ar.length*ar[0].length);\n        for(char a[]:ar)\n        {\n            for(char aa:a)\n            {\n            \tsb.append(aa);\n            \tsb.append(' ');\n            }\n            sb.append(\"\\n\");\n        }\n        p(sb);\n    }\n}"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nfor _ in range(t):\n    n,k=map(int,input().split())\n    s=list(input())\n    ind=[]\n    ans=0\n    for i in range(n):\n        if s[i]=='W':\n            ind.append(i)\n            if i-1>=0 and s[i-1]=='W':\n                ans+=1\n            ans+=1\n    if k==0:\n        print(ans)\n        \n    elif len(ind)==0:\n        print(min(k,n)*2-1)\n    else:\n        \n        gap=[]\n        for i in range(len(ind)-1):\n            gap.append(ind[i+1]-ind[i]-1)\n        gap.sort()\n        k=min(k,n-len(ind))\n        ans+=2*k\n        for i in gap:\n            if i>0:\n                if k>=i:\n                    ans+=1\n                    k-=i\n                else:\n                    break\n        print(ans)"
        },
        {
            "language": 3,
            "solution": "import os\nimport heapq\nimport sys, threading\nimport math\nimport operator\nfrom collections import defaultdict, deque\nfrom io import BytesIO, IOBase\n\nsys.setrecursionlimit(10 ** 5)\n# threading.stack_size(2**27)\n\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\n\ndef pw(a, b, md):\n    result = 1\n    while (b > 0):\n        if (b % 2 == 1):\n            result *= a\n            result %= md\n        a *= a\n        a %= md\n        b //= 2\n    return result % md\n\n\ndef inpt():\n    return [int(k) for k in input().split()]\n\n\ndef main():\n    for _ in range(int(input())):\n        n,k=inpt()\n        ar=list(input())\n        start=-1\n        prev=-1\n        temp=[]\n        for i in range(n):\n            if(ar[i]=='W'):\n                if(prev==-1):\n                    prev=i\n                    start=i\n                else:\n                    temp.append((i-prev-1,prev+1,i))\n                    prev=i\n        temp.sort()\n        for i in temp:\n            if(k==0):\n                break\n            p,l,r=i\n            for j in range(l,r):\n                ar[j]='W'\n                k-=1\n                if(k==0):\n                    break\n        if(k>0):\n            for i in range(prev+1,n):\n                ar[i]='W'\n                k-=1\n                if(k==0):\n                    break\n        if(k>0):\n            for i in range(start-1,-1,-1):\n                ar[i]='W'\n                k-=1\n                if(k==0):\n                    break\n        ans=0\n        for i in range(n):\n            if(ar[i]=='W'):\n                if(i==0 or ar[i-1]=='L'):\n                    ans+=1\n                else:\n                    ans+=2\n        print(ans)\n\n\n\n\n\n\n\n\n\n\n\n\n\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\nif __name__ == \"__main__\":\n    # main()\n    threading.Thread(target=main).start()"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.List;\nimport java.util.StringTokenizer;\n\npublic class B {\n    private static FastScanner fs = new FastScanner();\n    public static void main(String[] args) {\n\n        int t = fs.nextInt();\n        while(t-->0)\n        {\n            int n = fs.nextInt();\n            int k = fs.nextInt();\n            String str = fs.next();\n            long score =0;\n            boolean pWin = false;\n            long res =0;\n            for(int i=0;i<n;i++)\n            {\n                if(pWin==false && str.charAt(i)=='W') {\n                    score += 1;\n                    pWin = true;\n                }\n                else if(pWin== true && str.charAt(i)=='W') {\n                    score += 2;\n                }\n                else pWin = false;\n            }\n            List<Integer> gap = new ArrayList<>();\n\n            int prevI =-1;\n            int lastI =0;\n            boolean firstGap = false;\n            int FirstGap =0;\n             for(int i=0;i<n;i++)\n            {\n                if(str.charAt(i)=='W')\n                {\n                    gap.add(Math.abs(i-prevI)-1);\n                    if(!firstGap)\n                    {\n                        FirstGap = Math.abs(i-prevI)-1;\n                        firstGap = true;\n                    }\n                    prevI = i;\n                    lastI = i;\n\n                }\n\n            }\n            if(gap.size()==0)\n            {\n                if(k==0)\n                {\n                    System.out.println(score);\n                    continue;\n                }\n                if(k>n) res +=(2*n-1);\n                else res +=(2*k-1);\n                res +=score;\n                System.out.println(res);\n                continue;\n            }\n//            gap.add(n-lastI-1);\n\n            Collections.sort(gap);\n//            System.out.println(gap);\n            int gapSum =0;\n            for(int i:gap)\n            {\n                gapSum+=i;\n            }\n            gapSum+=(n-lastI-1);\n            if(gapSum<k)\n            {\n                k = gapSum;\n            }\n//            System.out.println(\"This is k \"+k);\n//            System.out.println(\"This is First Gap\"+FirstGap);\n            res +=(2*k);\n            int reqGap =-1;\n            int count =0;\n            for(int g:gap)\n            {\n                if(count==0 && g==FirstGap)\n                {\n                    count++;\n                    continue;\n                }\n                if(g<=k && g!=0)\n                {\n                    res++;\n                    k-=g;\n                }\n            }\n//            System.out.println(res);\n\n            res +=score;\n//            System.out.println(\"This is Score \"+score);\n            System.out.println(res);\n\n\n\n\n        }\n    }\n\n\n    static class FastScanner {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        StringTokenizer st = new StringTokenizer(\"\");\n\n        String next() {\n            while (!st.hasMoreTokens())\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        int[] readArray(int n) {\n            int[] a = new int[n];\n            for (int i = 0; i < n; i++) a[i] = nextInt();\n            return a;\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n        int  gcd(int a,int b)\n        {\n            while (b > 0)\n            {\n                int  temp = b;\n                b = a % b;\n                a = temp;\n            }\n            return a;\n        }\n        private int upper(int arr[],int key){\n            int low = 0;\n            int high = arr.length-1;\n            while(low < high){\n                int mid = low + (high - low+1)/2;\n                if(arr[mid] <= key){\n                    low = mid;\n                }\n                else{\n                    high = mid-1;\n                }\n            }\n            return low;\n        }\n        public int lower(int arr[],int key){\n            int low = 0;\n            int high = arr.length-1;\n            while(low < high){\n                int mid = low + (high - low)/2;\n                if(arr[mid] >= key){\n                    high = mid;\n                }\n                else{\n                    low = mid+1;\n                }\n            }\n            return low;\n        }\n    }\n}"
        },
        {
            "language": 3,
            "solution": "for j in range(int(input())):\n    n,k=map(int,input().split())\n    r=input()\n    a=[]\n    t=r[0]\n    s=1\n    for i in range(1,n):\n        if r[i]==t:\n            s+=1\n        else:\n            a.append([t,s])\n            t=r[i]\n            s=1\n    a.append([t,s])\n    b=[]\n    h=len(a)\n    s=0\n    m=0\n    t=0\n    if a[0][0]=='L':\n        s=1\n    if a[-1][0]=='L':\n        h-=1\n    for i in range(s,h):\n        if a[i][0]=='W':\n            m+=a[i][1]\n            t+=1\n        else:\n            b.append(a[i][1])\n    b.sort()\n    i=0\n    s=0\n    while i<len(b) and s+b[i]<=k:\n        t-=1\n        s+=b[i]\n        i+=1\n    m+=s\n    if i<len(b) and s<k:\n        m+=k-s\n    elif i==len(b) and s<k:\n        f=0\n        if a[0][0]=='L':\n            f+=a[0][1]\n        if a[-1][0]=='L':\n            f+=a[-1][1]\n        if m==0:\n            t=1\n        m+=min(k-s,f)\n    print(2*m-t)"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\nimport java.util.stream.Collectors;\n\npublic class B {\n\n    static class Seg {\n        int size, i, j, p;\n        Seg(int s, int ii, int jj, int pp) {\n            size = s;\n            i = ii;\n            j = jj;\n            p = pp;\n        }\n        public String toString() {\n            return String.format(\"%d %d %d\\n\", size, i, j);\n        }\n    }\n\n    public static void main(String[] args) throws Exception {\n\n        FastScanner sc = new FastScanner();\n        FastWriter writer = new FastWriter();\n        int t  = sc.nextInt();\n        while(t-- > 0) {\n            int n = sc.nextInt(), k = sc.nextInt();\n            char s[] = sc.next().toCharArray();\n            int ans = 0;\n\n            int lastW = -1, count = 0;\n            List<Seg> L = new ArrayList<Seg>();\n\n            for(int i = 0; i < n; i++) {\n                if(s[i] == 'W') {\n\n                    int p = lastW > -1 ? 0 : 2;\n                    if(count > 0)\n                        L.add(new Seg(count, lastW + 1, i-1, p));\n                    lastW = i;\n                    count = 0;\n                } else {\n                    count++;\n                }\n            }\n            if(count > 0) {\n                L.add(new Seg(count, lastW + 1, n-1, 2));\n            }\n//            println(L);\n            Collections.sort(L, (a, b) -> {\n               if(a.p == b.p)\n                   return a.size - b.size;\n               else\n                   return a.p - b.p;\n            });\n\n            for(Seg seg : L) {\n\n                int i = seg.i;\n                int j = seg.j;\n                if(k <= 0)\n                    break;\n                if(i == 0) {\n                    for(int x=j; x >= i; x--) {\n                        s[x] = 'W';\n                        k--;\n                        if(k <= 0)\n                            break;\n                    }\n                } else {\n                    for (int x = i; x <= j; x++) {\n                        s[x] = 'W';\n                        k--;\n                        if (k <= 0)\n                            break;\n                    }\n                }\n            }\n//            println(new String(s));\n\n            for(int i = 0; i < n; i++) {\n                if(i > 0 && s[i] == 'W' && s[i-1] == 'W')\n                    ans+=2;\n                else if(s[i] == 'W')\n                    ans++;\n            }\n            println(ans);\n        }\n    }\n\n    static final Random random = new Random();\n\n    static class FastScanner {\n        private InputStream sin = System.in;\n        private final byte[] buffer = new byte[1024];\n        private int ptr = 0;\n        private int buflen = 0;\n        public FastScanner(){}\n        public FastScanner(String filename) throws FileNotFoundException {\n            File file = new File(filename);\n            sin = new FileInputStream(file);\n        }\n        private boolean hasNextByte() {\n            if (ptr < buflen) {\n                return true;\n            }else{\n                ptr = 0;\n                try {\n                    buflen = sin.read(buffer);\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n                if (buflen <= 0) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        private int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}\n        private static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}\n        public boolean hasNext() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++; return hasNextByte();}\n        public String next() {\n            if (!hasNext()) throw new NoSuchElementException();\n            StringBuilder sb = new StringBuilder();\n            int b = readByte();\n            while(isPrintableChar(b)) {\n                sb.appendCodePoint(b);\n                b = readByte();\n            }\n            return sb.toString();\n        }\n        public long nextLong() {\n            if (!hasNext()) throw new NoSuchElementException();\n            long n = 0;\n            boolean minus = false;\n            int b = readByte();\n            if (b == '-') {\n                minus = true;\n                b = readByte();\n            }\n            if (b < '0' || '9' < b) {\n                throw new NumberFormatException();\n            }\n            while(true){\n                if ('0' <= b && b <= '9') {\n                    n *= 10;\n                    n += b - '0';\n                }else if(b == -1 || !isPrintableChar(b) || b == ':'){\n                    return minus ? -n : n;\n                }else{\n                    throw new NumberFormatException();\n                }\n                b = readByte();\n            }\n        }\n        public int nextInt() {\n            long nl = nextLong();\n            if (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) throw new NumberFormatException();\n            return (int) nl;\n        }\n        public double nextDouble() { return Double.parseDouble(next());}\n        public long[] nextLongArray(final int n){\n            final long[] a = new long[n];\n            for (int i = 0; i < n; i++)\n                a[i] = nextLong();\n            return a;\n        }\n        public int[] nextIntArray(final int n){\n            final int[] a = new int[n];\n            for (int i = 0; i < n; i++)\n                a[i] = nextInt();\n            return a;\n        }\n        public double[] nextDoubleArray(final int n){\n            final double[] a = new double[n];\n            for (int i = 0; i < n; i++)\n                a[i] = nextDouble();\n            return a;\n        }\n\n        public List<Integer>[] adjacencyList(int nodes, int edges) {\n            return adjacencyList(nodes, edges, false);\n        }\n        public List<Integer>[] adjacencyList(int nodes, int edges, boolean isDirected) {\n\n            List<Integer>[] adj = new ArrayList[nodes + 1];\n            Arrays.setAll(adj, (i) -> new ArrayList<>());\n            for (int i = 0; i < edges; i++) {\n                int a = nextInt(), b = nextInt();\n                adj[a].add(b);\n                if (!isDirected) adj[b].add(a);\n            }\n            return adj;\n        }\n    }\n\n    static class FastWriter {\n\n        BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(System.out));\n        void print(int n) throws Exception { writer.write(n + \"\"); }\n        void println(int n) throws Exception { writer.write(n + \"\\n\"); }\n\n        void print(long n) throws Exception { writer.write(n + \"\"); }\n        void println(long n) throws Exception { writer.write(n + \"\\n\"); }\n\n        void print(String s) throws Exception { writer.write(s); }\n        void println(String s) throws Exception { writer.write(s); writer.newLine(); }\n\n        void println(int ar[]) throws Exception { for(int e : ar) writer.write(e + \" \"); writer.newLine(); }\n        void println(long ar[]) throws Exception { for(long e : ar) writer.write(e + \" \"); writer.newLine(); }\n        void println(double ar[]) throws Exception { for(double e : ar) writer.write(e + \" \"); writer.newLine(); }\n        void close() throws Exception { writer.close(); }\n        <T> void println(List<T> L) throws Exception { for(T o : L) writer.write(o + \" \"); writer.newLine(); }\n    }\n\n    static int findDistance(List<Integer> G[], int nodes, int src, int dst) {\n\n        LinkedList<Integer> queue = new LinkedList<>();\n        int dist[] = new int[nodes + 1];\n        int ans = -1;\n        dist[src] = 0;\n        queue.add(src);\n        while(queue.size() > 0) {\n            int u = queue.poll();\n            if(u == dst) {\n                ans = dist[u];\n            }\n            for(int v : G[u]) {\n                if(dist[v] >= 0)\n                    continue;\n                queue.add(v);\n                dist[v] = dist[u] + 1;\n            }\n        }\n        return ans;\n    }\n\n    static void sort(List<Integer> A) {\n        shuffleList(A);\n        Collections.sort(A);\n    }\n\n    static void shuffleList(List<Integer> A) {\n        int n = A.size();\n        for(int i = 0; i < n; i++) {\n            int tmp = A.get(i);\n            int randomPos = i + random.nextInt(n-i);\n            A.set(i, A.get(randomPos));\n            A.set(randomPos, tmp);\n        }\n    }\n\n    static void sort(int A[]) {\n        shuffleArray(A);\n        Arrays.sort(A);\n    }\n    static void sort(long A[]) {\n        shuffleArray(A);\n        Arrays.sort(A);\n    }\n    static void sort(double A[]) {\n        shuffleArray(A);\n        Arrays.sort(A);\n    }\n    static <T> void sort(T[] A) {\n        shuffleArray(A);\n        Arrays.sort(A);\n    }\n    static <T> void shuffleArray(T[] A) {\n        int n = A.length;\n        for(int i = 0; i < n; i++) {\n            T tmp = A[i];\n            int randomPos = i + random.nextInt(n-i);\n            A[i] = A[randomPos];\n            A[randomPos] = tmp;\n        }\n    }\n    static void shuffleArray(int[] A) {\n        int n = A.length;\n        for(int i = 0; i < n; i++) {\n            int tmp = A[i];\n            int randomPos = i + random.nextInt(n-i);\n            A[i] = A[randomPos];\n            A[randomPos] = tmp;\n        }\n    }\n    static void shuffleArray(long[] A) {\n        int n = A.length;\n        for(int i = 0; i < n; i++) {\n            long tmp = A[i];\n            int randomPos = i + random.nextInt(n-i);\n            A[i] = A[randomPos];\n            A[randomPos] = tmp;\n        }\n    }\n    static void shuffleArray(double[] A) {\n        int n = A.length;\n        for(int i = 0; i < n; i++) {\n            double tmp = A[i];\n            int randomPos = i + random.nextInt(n-i);\n            A[i] = A[randomPos];\n            A[randomPos] = tmp;\n        }\n    }\n\n    static int[] subArray(int A[], int x, int y) {\n        int B[] = new int[y - x + 1];\n        for(int i = x; i <= y; i++)\n            B[i-x] = A[i];\n        return B;\n    }\n\n    static int[] toArray(List<Integer> L) {\n        return L.stream().mapToInt(x -> x).toArray();\n    }\n\n    static void println(int[] A) {\n        for(int e: A) System.out.print(e + \" \");\n        System.out.println();\n    }\n\n    static void println(long[] A) {\n        for(long e: A) System.out.print(e + \" \");\n        System.out.println();\n    }\n\n    static void println(List arr) {\n        for(Object e: arr) System.out.print(e + \" \");\n        System.out.println();\n    }\n\n    static void print(String s) {\n        System.out.print(s);\n    }\n    static void println(long n) {\n        System.out.println(n);\n    }\n\n    static void println(String s) {\n        System.out.println(s);\n    }\n\n    static List<Integer> toList(int ar[]) {\n        return Arrays.stream(ar).boxed().collect(Collectors.toList());\n    }\n\n    static List<Long> toList(long ar[]) {\n        return Arrays.stream(ar).boxed().collect(Collectors.toList());\n    }\n\n    static List<Double> toList(double ar[]) {\n        return Arrays.stream(ar).boxed().collect(Collectors.toList());\n    }\n\n    static long gcd(long a, long b) {\n        if(b == 0)\n            return a;\n        return gcd(b, a % b);\n    }\n\n    private static int abs(int a){  return (a>=0) ? a: -a;  }\n    private static int min(int... ins){ return Arrays.stream(ins).min().getAsInt(); }\n    private static int max(int... ins){ return Arrays.stream(ins).max().getAsInt(); }\n    private static int sum(int... ins){ return Arrays.stream(ins).sum(); }\n    private static long abs(long a){ return (a>=0) ? a: -a; }\n    private static long min(long... ins){ return Arrays.stream(ins).min().getAsLong(); }\n    private static long max(long... ins){ return Arrays.stream(ins).max().getAsLong(); }\n    private static long sum(long... ins){ return Arrays.stream(ins).sum(); }\n    private static double abs(double a){ return (a>=0) ? a: -a; }\n    private static double min(double... ins){ return Arrays.stream(ins).min().getAsDouble(); }\n    private static double max(double... ins){ return Arrays.stream(ins).max().getAsDouble(); }\n    private static double sum(double... ins){ return Arrays.stream(ins).sum(); }\n\n    private static class Pair implements Comparable<Pair> {\n        int x, y;\n        Pair(int x, int y) { this.x = x; this.y = y; }\n        Pair() {}\n\n        @Override\n        public int compareTo(Pair other) {\n            return x == other.x ? y - other.y : x - other.x;\n        }\n\n        @Override\n        public boolean equals(Object o) {\n            if (this == o) return true;\n            if (o == null || getClass() != o.getClass()) return false;\n            Pair pair = (Pair) o;\n            return x == pair.x &&\n                    y == pair.y;\n        }\n\n        @Override\n        public int hashCode() {\n            return Objects.hash(x, y);\n        }\n    }\n\n    static int pow(long n, int p, int mod) {\n        if(p == 0)\n            return 1;\n        long x = pow(n, p/2, mod);\n        x = x * x % mod;\n        return (int) ( p % 2 == 0 ? x : x * n % mod );\n    }\n\n    static long inv(int x, int m) {\n        return pow(x, m - 2, m);\n    }\n\n    static int lowerBound(int ar[], int L, int R, int val) {\n        if(val < ar[L] || val > ar[R])\n            return -1;\n        while(L <= R) {\n            int mid = (L + R) / 2;\n            if(ar[mid] >= val)\n                R = mid - 1;\n            else\n                L = mid + 1;\n        }\n        return ar[L] == val ? L : -1;\n    }\n\n    static int upperBound(int ar[], int L, int R, int val) {\n        if(val < ar[L] || val > ar[R])\n            return -1;\n        while(L <= R) {\n            int mid = (L + R) / 2;\n            if(ar[mid] > val)\n                R = mid - 1;\n            else\n                L = mid + 1;\n        }\n        return ar[R] == val ? R : -1;\n    }\n}\n\n"
        },
        {
            "language": 3,
            "solution": "from collections import deque\n\n\ndef solve():\n    n, k = map(int, input().split())\n    data = list(input())\n    data.append(\"E\")\n    pointer = 0\n    que = []\n    combo = 0\n    res = 0\n    which = 0\n    for i in range(n):\n        if i == 0:\n            if data[i] == \"W\":\n                which = 1\n            else:\n                which = -1\n            combo = 1\n        else:\n            if which < 0:\n                if data[i] == \"W\":\n                    if i>combo:\n                        que.append(combo)\n                    combo = 1\n                    which = 1\n                elif data[i] == \"L\":\n                    combo += 1\n            elif which > 0:\n                if data[i] == \"W\":\n                    combo += 1\n                else:\n                    res += 2*combo - 1\n                    combo = 1\n                    which = -1\n\n\n    if combo > 0 and which > 0:\n        res += 2*combo - 1\n\n    que.sort()\n    que = deque(que)\n    cheat = k\n    if res == 0:\n        print(min(2*n-1,max(2*k-1,0)))\n        return\n    while que and que[0] <= cheat:\n        v = que.popleft()\n        res += 2*v+1\n        cheat -= v\n    res += 2*cheat\n    ans = min(res, 2*n-1)\n    print(ans)\n    return\n\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        solve()\n    return\n\n\nif __name__ == \"__main__\":\n    main()\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int max_n = 100000;\nint n, k;\nchar s[max_n + 5];\nvoid solve(void);\nint main(void) {\n  int t;\n  scanf(\"%d\", &t);\n  while (t--) solve();\n  return 0;\n}\nvoid solve(void) {\n  scanf(\"%d%d\", &n, &k);\n  scanf(\"%s\", s);\n  int i, j, t, ans = 0;\n  int lcnt = 0;\n  for (i = 0; i < n; i++) {\n    if (s[i] == 'W') {\n      if (i > 0 && s[i - 1] == 'W')\n        ans += 2;\n      else\n        ans++;\n    } else\n      lcnt++;\n  }\n  if (lcnt == n) {\n    if (!k)\n      printf(\"0\\n\");\n    else\n      printf(\"%d\\n\", 2 * k - 1);\n    return;\n  }\n  i = 0;\n  vector<int> gap;\n  while (i < n) {\n    if (s[i] == 'L') {\n      i++;\n      continue;\n    }\n    j = i;\n    while (j < n && s[j] == 'W') j++;\n    t = j;\n    while (t < n && s[t] == 'L') t++;\n    if (t >= n) break;\n    gap.push_back(t - j);\n    i = t;\n  }\n  sort(gap.begin(), gap.end());\n  for (i = 0; k && i < (int)gap.size(); i++) {\n    if (gap[i] <= k) {\n      k -= gap[i];\n      lcnt -= gap[i];\n      ans += 2 * gap[i] + 1;\n    } else {\n      lcnt -= k;\n      ans += 2 * k;\n      k = 0;\n    }\n  }\n  if (k) {\n    ans += min(k, lcnt) * 2;\n  }\n  printf(\"%d\\n\", ans);\n}\n"
        },
        {
            "language": 3,
            "solution": "from sys  import stdin,stdout\nfrom collections  import *\nfrom math import ceil, floor , log, gcd\nst=lambda:list(stdin.readline().strip())\nli=lambda:list(map(int,stdin.readline().split()))\nmp=lambda:map(int,stdin.readline().split())\ninp=lambda:int(stdin.readline())\npr=lambda n: stdout.write(str(n)+\"\\n\")\n \nmod=1000000007\nINF=float('inf')\n\ndef solve():\n    n,k=mp()\n    s=st()\n    if s.count('W')==0:\n        print(max(0,2*k -1))\n        return\n    ans=0\n    W=0\n    cur=0\n    w=0\n    x=[]\n    for i in range(n):\n        if s[i]=='W':\n            if cur:\n                x.append(cur)\n                cur=0\n            ans+=1\n            w+=1\n            if W:\n                ans+=1\n            W=1\n        else:\n            W=0\n            if w:\n                cur+=1\n    k=min(k,n-w)\n    ans+= 2*k\n    x.sort()\n    for i in x:\n        if i<=k:\n            ans+=1\n            k-=i\n    pr(ans)\n            \n        \n            \n        \n    \n    \nfor _ in range(inp()):\n    solve()\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  int t;\n  cin >> t;\n  while (t--) {\n    int n, k;\n    cin >> n >> k;\n    string s;\n    cin >> s;\n    int cntl = 0;\n    for (int i = 0; i < n; i++) {\n      cntl += (s[i] == 'L');\n    }\n    if (k >= cntl) {\n      cout << 2 * n - 1 << \"\\n\";\n      continue;\n    }\n    if (cntl == n) {\n      cout << max(2 * k - 1, 0) << \"\\n\";\n      continue;\n    }\n    int basic = 0;\n    for (int i = 0; i < n; i++) {\n      if (s[i] == 'W') {\n        basic++;\n        if (i > 0 && s[i - 1] == 'W') basic++;\n      }\n    }\n    int cnt = -1;\n    vector<int> segs;\n    for (int i = 0; i < n; i++) {\n      if (s[i] == 'W') {\n        if (cnt > 0) segs.push_back(cnt);\n        cnt = 0;\n      } else {\n        if (cnt != -1) cnt++;\n      }\n    }\n    sort(segs.begin(), segs.end());\n    for (int l : segs) {\n      if (k >= l) {\n        basic += 2 * l + 1;\n        k -= l;\n      }\n    }\n    basic += 2 * k;\n    cout << basic << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  int t;\n  cin >> t;\n  while (t--) {\n    int n, k;\n    cin >> n >> k;\n    string s;\n    cin >> s;\n    int go = 0;\n    vector<pair<char, int>> cnt;\n    for (auto c : s) {\n      if (c == 'W') ++go;\n      if (cnt.empty() || cnt.back().first != c) cnt.push_back({c, 0});\n      ++cnt.back().second;\n    }\n    if (go == 0) {\n      cout << max(0, 2 * k - 1) << '\\n';\n      continue;\n    }\n    go += k;\n    go = min(go, n);\n    vector<int> have;\n    for (int i = 1; i + 1 < (int)cnt.size(); ++i) {\n      if (cnt[i - 1].first == 'W' && cnt[i].first == 'L' &&\n          cnt[i + 1].first == 'W') {\n        have.push_back(cnt[i].second);\n      }\n    }\n    sort(have.begin(), have.end());\n    int cmp = (int)have.size() + 1;\n    for (auto x : have) {\n      if (k >= x) {\n        k -= x;\n        --cmp;\n      }\n    }\n    cout << 2 * go - cmp << '\\n';\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nchar st[100003];\nint main() {\n  int t, n, k;\n  vector<int> vec;\n  scanf(\"%d\", &t);\n  while (t--) {\n    vec.clear();\n    scanf(\"%d %d\", &n, &k);\n    scanf(\"%s\", st + 1);\n    int cnt = 0, i, srt = 0, sum = 0;\n    for (i = 1; i <= n; i++) {\n      if (st[i] == 'W' && srt == 0) srt = i;\n      if (st[i] == 'W') {\n        sum++;\n        if (st[i - 1] == 'W') sum++;\n      }\n    }\n    if (k == 0) {\n      printf(\"%d\\n\", sum);\n      continue;\n    }\n    if (srt == 0) {\n      printf(\"%d\\n\", (k - 1) * 2 + 1);\n      continue;\n    }\n    for (i = srt + 1; i <= n; i++) {\n      if (st[i] == 'W') {\n        if (cnt) vec.push_back(cnt);\n        cnt = 0;\n      } else\n        cnt++;\n    }\n    sort(vec.begin(), vec.end());\n    for (int v : vec) {\n      int tar = min(v, k);\n      sum += tar * 2 + (tar == v);\n      k -= tar;\n    }\n    for (i = 1; k > 0 && i <= n; i++) {\n      if (st[i] == 'W') break;\n      k--;\n      sum += 2;\n    }\n    for (i = n; k > 0 && i >= 1; i--) {\n      if (st[i] == 'W') break;\n      k--;\n      sum += 2;\n    }\n    printf(\"%d\\n\", sum);\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput=sys.stdin.readline\nt=int(input())\nfor you in range(t):\n    l=input().split()\n    n=int(l[0])\n    k=int(l[1])\n    s=input()\n    lfi=[i for i in s]\n    ans=0\n    poss=1\n    for i in s:\n        if(i=='W'):\n            poss=0\n            break\n    if(poss):\n        print(max(2*k-1,0))\n        continue\n    if(s[0]=='W'):\n        ans+=1\n    for i in range(1,n):\n        if(s[i]=='W' and s[i-1]=='W'):\n            ans+=2\n        elif(s[i]=='W'):\n            ans+=1\n    l=[]\n    start=0\n    end=-1\n    done=0\n    ext1=0\n    #print(ans)\n    for i in range(n):\n        if(s[i]=='L'):\n            ext1+=1\n        else:\n            break\n    for i in range(ext1,n):\n        if(done):\n            if(s[i]=='W'):\n                l.append(end-start+1)\n                done=0\n            else:\n                end+=1\n        else:\n            if(s[i]=='L'):\n                start=i\n                end=i\n                done=1\n    ext=0\n    if(done):\n        ext=end-start+1\n    lfi=[]\n    for i in range(len(l)):\n        lfi.append(l[i])\n    lfi.sort()\n    z=len(lfi)\n    i=0\n    done1=0\n    done2=0\n    #print(ans)\n    while(i<z):\n        if(k==0):\n            break\n        if(k>=lfi[i]):\n            k-=lfi[i]\n            ans+=(2*lfi[i]+1)\n            i+=1\n        else:\n            ans+=(2*k)\n            k=0\n            break\n        #print(ans,k)\n    #print(lfi,ans)\n    #print(ext1,k)\n    ans+=2*min(ext,k)\n    k-=min(ext,k)\n    if(done1==0):\n        if(ext1 and k):\n            ans+=(2*min(ext1,k))\n    print(ans)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  int t;\n  cin >> t;\n  while (t--) {\n    int n, k;\n    cin >> n >> k;\n    string s;\n    cin >> s;\n    vector<pair<int, pair<int, int>>> v;\n    int b = -1, mn = 0, mx = n - 1;\n    bool ok = (s[0] == 'W');\n    for (int i = 0; i < n; i++) {\n      if (s[i] == 'W' && b == -1) {\n        ok = 1;\n        b = i;\n        mn = i;\n      } else if (s[i] == 'W') {\n        if (ok) {\n          b = i;\n          continue;\n        }\n        v.push_back(make_pair(i - b, make_pair(b, i)));\n        b = i;\n        ok = 1;\n      } else\n        ok = 0;\n    }\n    mx = b;\n    sort(v.begin(), v.end());\n    if (v.size() == 0) {\n      for (int i = mn; i >= 0; i--) {\n        if (!k) break;\n        if (s[i] == 'L') {\n          s[i] = 'W';\n          k--;\n        }\n      }\n      for (int i = 0; i < n; i++) {\n        if (!k) break;\n        if (s[i] == 'L') {\n          s[i] = 'W';\n          k--;\n        }\n      }\n    } else {\n      for (int i = 0; i < (int)v.size(); i++) {\n        for (int j = v[i].second.first + 1; j < v[i].second.second; j++) {\n          if (!k) break;\n          if (s[j] == 'L') {\n            k--;\n            s[j] = 'W';\n          }\n        }\n      }\n      if (k) {\n        for (int i = mn; i >= 0; i--) {\n          if (!k) break;\n          if (s[i] == 'L') {\n            s[i] = 'W';\n            k--;\n          }\n        }\n        for (int i = 0; i < n; i++) {\n          if (!k) break;\n          if (s[i] == 'L') {\n            s[i] = 'W';\n            k--;\n          }\n        }\n      }\n    }\n    long long ans = 0;\n    for (int i = 0; i < n; i++) {\n      if (s[i] == 'W') {\n        if (!i || s[i - 1] != s[i])\n          ans++;\n        else\n          ans += 2;\n      }\n    }\n    cout << ans << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class A\n{\n    static int n, k;\n    static int[] arr;\n    static char[] s;\n    public static void main(String[] args) throws IOException\n    {\n        Flash f = new Flash();\n        int T = f.ni();\n        for(int tc = 1; tc <= T; tc++){\n            n = f.ni(); k = f.ni(); s = f.ns().toCharArray(); \n            sop(fn());\n        }\n    }\n    \n    static int fn()\n    {\n        List<Integer> A = new ArrayList<>();\n        for(int i = 0; i < n; i++) if(s[i] == 'W') A.add(i);\n        List<int[]> p = new ArrayList<>();\n        for(int i = 1; i < A.size(); i++){\n            int l = A.get(i-1);\n            int r = A.get(i);\n            int d = r-l-1;\n            p.add(new int[]{l, r, d});\n        }\n        \n        Collections.sort(p, (a,b)->a[2]-b[2]);\n        for(int[] ran : p){\n            for(int i = ran[0]+1; i < ran[1] && k > 0; i++){\n                s[i] = 'W';\n                k -= 1;\n            }\n        }\n        \n        if(k > 0 && A.size() >= 1){\n            for(int i = A.get(0)-1; i >= 0 && k > 0; i--){\n                s[i] = 'W';\n                k -= 1;\n            }\n            \n            for(int i = A.get(A.size()-1)+1; i < n && k > 0; i++){\n                s[i] = 'W';\n                k -= 1;\n            }\n        }\n        \n        if(k > 0){\n            for(int i = 0; i < n && k > 0; i++){\n                if(s[i] == 'L'){\n                    s[i] = 'W';\n                    k -= 1;\n                }\n            }\n        }\n        \n        int ans = 0;\n        for(int i = 0; i < n; i++){\n            if(s[i] == 'W'){\n                if(i-1 >= 0 && s[i-1] == 'W') ans += 2;\n                else ans += 1;\n            }\n        }\n        \n        return ans;\n    }\n    \n    static void sort(int[] a){\n        List<Integer> A = new ArrayList<>();\n        for(int i : a) A.add(i);\n        Collections.sort(A);\n        for(int i = 0; i < A.size(); i++) a[i] = A.get(i);\n    }\n    \n    static int swap(int itself, int dummy){\n        return itself;\n    }\n    \n    static void sop(Object o){ System.out.println(o); }\n    \n    static void print(int[] a){\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < a.length; i++) sb.append(a[i] + \" \");\n        System.out.println(sb);\n    }\n    \n    static class Flash\n    {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        StringTokenizer st = new StringTokenizer(\"\");\n        \n        String next(){\n            while(!st.hasMoreTokens()){\n                try{\n                    st = new StringTokenizer(br.readLine());\n                }catch(IOException e){\n                    e.printStackTrace();\n                }\n            }\n            \n            return st.nextToken();\n        }\n        \n        String ns(){\n            String s = new String();\n            try{\n                s = br.readLine().trim();\n            }catch(IOException e){\n                e.printStackTrace();\n            }\n            \n            return s;\n        }\n        \n        int ni(){\n            return Integer.parseInt(next());\n        }\n        \n        int[] arr(int n){\n            int[] a = new int[n];\n            for(int i = 0; i < n; i++) a[i] = ni();\n            return a;\n        }\n\n        long nl(){\n            return Long.parseLong(next());\n        }\n        \n        double nd(){\n            return Double.parseDouble(next());\n        }\n    }\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.StringTokenizer;\n\npublic class Solution {\n    public static void main(String[] args) throws IOException {\n        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\n        int t = Integer.parseInt(reader.readLine());\n        StringBuilder ans = new StringBuilder();\n        while (t-->0) {\n            StringTokenizer sToken = new StringTokenizer(reader.readLine());\n            int n = Integer.parseInt(sToken.nextToken());\n            int k = Integer.parseInt(sToken.nextToken());\n            char[] arr = reader.readLine().toCharArray();\n            int first = -1, last = 0;\n            ArrayList<Integer> list = new ArrayList<>();\n            int result = 0;\n            for (int i=0; i<n; i++) {\n                if (arr[i]=='W') {\n                    result++;\n                    if (i>0 && arr[i-1]=='W') result++;\n                    if (last==0) {\n                        if (first==-1) first = 0;\n                    } else {\n                        if (first==-1) first = last;\n                        else list.add(last);\n                    }\n                    last = 0;\n                } else last++;\n            }\n            if (last==n) {\n                if (k==0) ans.append(\"0\\n\");\n                else ans.append(1+((k-1)*2)).append(\"\\n\");\n                continue;\n            }\n            Collections.sort(list);\n            int index = 0;\n            int[] res = new int[k+1];\n            res[0] = result;\n            for (int elem:list) {\n                if (index+elem>k) {\n                    res[k] = res[index]+((k-index)*2);\n                    index = k; break;\n                } else {\n                    res[index+elem] = res[index]+(elem*2)+1;\n                    index+=elem;\n                }\n            }\n            int answer = res[index];\n            if (index<k) {\n                int diff = k - index;\n                answer+=(Math.min(diff, first+last)*2);\n            }\n            ans.append(answer).append(\"\\n\");\n        }\n        System.out.println(ans);\n    }\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.*;\nimport java.util.stream.Stream;\n\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        solve(in, out);\n        out.close();\n    }\n\n    static String reverse(String s) {\n        return (new StringBuilder(s)).reverse().toString();\n    }\n\n    static void sieveOfEratosthenes(int n, int factors[]) \n    { \n        factors[1]=1;\n        for(int p = 2; p*p <=n; p++) \n        { \n            if(factors[p] == 0) \n            { \n                factors[p]=p;\n                for(int i = p*p; i <= n; i += p) \n                    factors[i] = p; \n            } \n        } \n    }\n\n    static void sort(int ar[]) {\n        int n = ar.length;\n        ArrayList<Integer> a = new ArrayList<>();\n        for (int i = 0; i < n; i++)\n            a.add(ar[i]);\n        Collections.sort(a);\n        for (int i = 0; i < n; i++)\n            ar[i] = a.get(i);\n    }\n\n    static void sort1(long ar[]) {\n        int n = ar.length;\n        ArrayList<Long> a = new ArrayList<>();\n        for (int i = 0; i < n; i++)\n            a.add(ar[i]);\n        Collections.sort(a);\n        for (int i = 0; i < n; i++)\n            ar[i] = a.get(i);\n    }\n\n    static long ncr(long n, long r, long mod) {\n        if (r == 0)\n            return 1;\n        long val = ncr(n - 1, r - 1, mod);\n        val = (n * val) % mod;\n        val = (val * modInverse(r, mod)) % mod;\n        return val;\n    }\n\n    public static void solve(InputReader sc, PrintWriter pw) {\n        int i, j = 0;\n        // int t = 1;  \n        int t = sc.nextInt();\n        u: while (t-- > 0) {\n            int n = sc.nextInt();\n            int k = sc.nextInt();\n            String s = sc.next();\n            int first = 0, last = 0;\n            for(i=0;i<n;i++){\n                if(s.charAt(i)=='W')\n                    break;\n                first++;\n            }\n            if(first!=n){\n                for(i=n-1;i>=0;i--){\n                    if(s.charAt(i)=='W')\n                        break;\n                    last++;\n                }\n            }\n            if(first!=n){\n                int curr = 0;\n                ArrayList<Integer> l = new ArrayList<>();\n                for(i=first;i<n-last;i++){\n                    if(s.charAt(i)=='W'){\n                        if(curr>0){\n                            l.add(curr);\n                            curr = 0;\n                        }\n                    }\n                    else{\n                        curr++;\n                    }\n                }\n                if(curr>0){\n                    l.add(curr);\n                }\n                Collections.sort(l);\n                int val = 0;\n                for(i=0;i<n;i++){\n                    if(s.charAt(i)=='W'){\n                        if(i>0&&s.charAt(i-1)=='W'){\n                            val+=2;\n                        }\n                        else{\n                            val++;\n                        }\n                    }\n                }\n                for(i=0;i<l.size();i++){\n                    if(l.get(i)<=k){\n                        val+=2*l.get(i)+1;\n                        k-=l.get(i);\n                    }\n                    else{\n                        val+=2*k;\n                        k=0;\n                    }\n                }\n                if(k>0){\n                    // if(first<=k){\n                    //     val+=2*first;\n                    //     k-=first;\n                    //     if(last<=k){\n                    //         val+=2*last;\n                    //         k-=last;\n                    //     }\n                    //     else{\n                    //         val+=2*k;\n                    //     }\n                    // }\n                    val+=2*Math.min(k,first+last);\n                }\n                pw.println(val);\n            }\n            else{\n                pw.println(Math.max(2*k-1,0));\n            }\n        }\n    }\n\n    static int bpm(ArrayList<Integer> adj[], int n){\n        int pair[] = new int[2*n+1];\n        int dist[] = new int[n+1];\n        int match = 0;\n        while(bfs(pair,dist,n,adj)){\n            for(int v = 1; v <= n; v++){\n                if(pair[v]==0 && dfs(v,pair,dist,n,adj)){\n                    match++;\n                }\n            }\n        }\n        return match;\n    }\n\n    static boolean bfs(int pair[], int dist[], int n, ArrayList<Integer> adj[]){\n        Deque<Integer> q = new LinkedList<>();\n        for(int i=1;i<=n;i++){\n            if(pair[i]==0){\n                dist[i] = 0;\n                q.offerLast(i);\n            }\n            else{\n                dist[i] = Integer.MAX_VALUE;\n            }\n        }\n        dist[0] = Integer.MAX_VALUE;\n        while(q.size()>0){\n            int v = q.pollFirst();\n            if(dist[v]<dist[0]){\n                for(int a:adj[v]){\n                    if(dist[pair[a]]==Integer.MAX_VALUE){\n                        dist[pair[a]] = dist[v] + 1;\n                        q.offerLast(pair[a]);\n                    }\n                }\n            }\n        }\n        return dist[0]!=Integer.MAX_VALUE;\n    }\n\n    static boolean dfs(int v, int pair[], int dist[], int n, ArrayList<Integer> adj[]){\n        if(v==0)\n            return true;\n        for(int a:adj[v]){\n            if(dist[pair[a]]==dist[v]+1){\n                if(dfs(pair[a],pair,dist,n,adj)){\n                    pair[a] = v;\n                    pair[v] = a;\n                    return true;\n                }\n            }\n        }\n        dist[v] = Integer.MAX_VALUE;\n        return false;\n    }\n\n    static class Pair implements Comparable<Pair> {\n        int a;\n        int b;\n        int c;\n        \n        Pair(int a, int b, int c) {\n            this.a = a;\n            this.b = b;\n            this.c = c;\n        }\n \n        public int compareTo(Pair p) {\n            // if(a!=p.a)\n            //     return a-p.a;\n            return c-p.c;\n        }\n    }\n\n    static boolean isPrime(long n) {\n        if (n <= 1)\n            return false;\n        if (n <= 3)\n            return true;\n        if (n % 2 == 0 || n % 3 == 0)\n            return false;\n        for (int i = 5; i * i <= n; i = i + 6)\n            if (n % i == 0 || n % (i + 2) == 0)\n                return false;\n        return true;\n    }\n\n    static long gcd(long a, long b) {\n        if (b == 0)\n            return a;\n        return gcd(b, a % b);\n    }\n\n    static long fast_pow(long base, long n, long M) {\n        if (n == 0)\n            return 1;\n        if (n == 1)\n            return base % M;\n        long halfn = fast_pow(base, n / 2, M);\n        if (n % 2 == 0)\n            return (halfn * halfn) % M;\n        else\n            return (((halfn * halfn) % M) * base) % M;\n    }\n\n    static long modInverse(long n, long M) {\n        return fast_pow(n, M - 2, M);\n    }\n\n    static class InputReader {\n        public BufferedReader reader;\n        public StringTokenizer tokenizer;\n\n        public InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\n            tokenizer = null;\n        }\n\n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n    }\n}\n\n"
        },
        {
            "language": 4,
            "solution": "import java.util.ArrayList;\nimport java.util.List;\nimport java.util.PriorityQueue;\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int t = sc.nextInt();\n\n        while(t>0) {\n            t--;\n\n            int n = sc.nextInt();\n            int k = sc.nextInt();\n            String s = sc.next();\n\n            int maxScore = 1+2*(n-1);\n\n            List<NodeNum> list = new ArrayList<>();\n            char prev = 'W';\n            int start=0;\n            int end=0;\n            for(int i=0;i<=s.length();i++) {\n                if(i==s.length()) {\n                    if(prev=='W') {\n                        continue;\n                    }\n                    end = i-1;\n                    NodeNum one = new NodeNum();\n                    one.num = end-start+1;\n                    one.score = 1+2*(one.num-1);\n                    one.extraScore = 0;\n\n                    if(start!=0) {\n                        one.extraScore++;\n                        one.score++;\n                    }\n                    if(end!=s.length()-1) {\n                        one.extraScore++;\n                        one.score++;\n                    }\n                    list.add(one);\n                    break;\n                }\n\n                if(s.charAt(i)=='W' && prev=='L') {\n                    prev = 'W';\n\n                    end = i-1;\n                    NodeNum one = new NodeNum();\n                    one.num = end-start+1;\n                    one.score = 1+2*(one.num-1);\n                    one.extraScore = 0;\n\n                    if(start!=0) {\n                        one.extraScore++;\n                        one.score++;\n                    }\n                    if(end!=s.length()-1) {\n                        one.extraScore++;\n                        one.score++;\n                    }\n                    list.add(one);\n                    continue;\n                }\n\n                if(s.charAt(i)=='W' && prev=='W') {\n                    prev = 'W';\n                    continue;\n                }\n\n                if(s.charAt(i)=='L' && prev=='W') {\n                    prev = 'L';\n                    start = i;\n                    continue;\n                }\n\n                if(s.charAt(i)=='L' && prev=='L') {\n                    prev = 'L';\n                    continue;\n                }\n            }\n\n            PriorityQueue<NodeNum> queue = new PriorityQueue<>((o1,o2)-> {\n                if(o1.extraScore!=o2.extraScore) {\n                    return Integer.compare(o2.extraScore, o1.extraScore);\n                }\n                if(o1.num!=o2.num) {\n                    return Integer.compare(o1.num, o2.num);\n                } else {\n                    return Integer.compare(o2.score, o1.score);\n                }\n            });\n\n            for(int i=0;i<list.size();i++) {\n                queue.add(list.get(i));\n            }\n\n            int res = 0;\n            while(k!=0 && !queue.isEmpty()) {\n                NodeNum one = queue.poll();\n                if(one.num<=k) {\n                    k -= one.num;\n                    continue;\n                }\n\n                if((1+2*(one.num-1)) == one.score) {\n                    res = one.score - (1+2*(k-1));\n                } else {\n                    res = one.score - 2*k;\n                }\n                k=0;\n            }\n\n            maxScore-=res;\n            while(!queue.isEmpty()) {\n                NodeNum one = queue.poll();\n                maxScore-=one.score;\n            }\n\n            System.out.println(maxScore);\n        }\n    }\n}\n\nclass NodeNum {\n    int num;\n    int score;\n    int extraScore;\n}\n\n  \t  \t    \t\t\t   \t\t \t      \t\t\t"
        },
        {
            "language": 3,
            "solution": "import math\n\nT = int(input())\n\n#lets = 'abcdefghijklmnopqrstuvwxyz'\n#key = {lets[i]:i for i in range(26)}\n\nfor t in range(T):\n  #n = int(input())\n  n,k = map(int,input().split())\n  #a = list(map(int,input().split()))\n  a = list(input())\n  d = False\n\n  gaps = []\n  l = 0\n  st = (a[0]!='W')\n  for i in range(n):\n    if a[i] == 'L':\n      l+=1\n    elif l!=0 and not st:\n      gaps.append(l)\n      l = 0\n    elif l!=0:\n      st = 0\n      l = 0\n  \n  #print(gaps)\n  \n  k1= k\n  gaps.sort()\n  lg = len(gaps)\n  for i in range(lg):\n    k-=gaps[i]\n    if k>=0:\n      lg-=1\n    else:\n      break\n\n  \n  \n  #print(gaps)\n  ans = 2*(min(a.count('W')+k1,n))\n  ans -= lg+1\n  #print(ans)\n\n  \"\"\"if k>0:\n    ans += 2*k\"\"\"\n  \n  #print(gaps,lg)\n  print(max(ans,0))"
        },
        {
            "language": 3,
            "solution": "# cook your dish here\nimport math\nimport os\nimport random\nimport re\nimport sys\ndef maxpts(str1,k):\n    w=0\n    losses=[]\n    ans=0\n    W=False\n    cur=0\n    for c in str1:\n        if c=='W':\n            if cur:\n                losses.append(cur)\n                cur=0\n            w+=1\n            ans+=1\n            if W:\n                ans+=1\n            W=True\n        else:\n            W=False\n            if w:\n                cur+=1\n                \n    if w==0:\n        print(max(2*k-1,0))\n        return\n\n    \n    \n    n=len(str1)\n    if k>=n-w:\n        print(n*2-1)\n        return\n    ans+=2*k\n    losses.sort()\n   \n    for l1 in losses:\n        if k>=l1:\n            ans+=1\n            k=k-l1\n        else:\n            break\n    print(ans)\n            \n            \n            \n        \n    \n\nif __name__=='__main__':\n    n=int(input())\n    for i in range(n):\n        n1,k=map(int,input().rstrip().split())\n        str1=input()\n        maxpts(str1,k)"
        },
        {
            "language": 3,
            "solution": "for x in range(int(input())):\n    n, k = map(int, input().split())\n    string = list(input())\n    lose = []\n    count = 0\n    score, first, last = 0, 0, 0\n    for i in range(n-1):\n        if string[i] == string[i+1]:\n            count += 1 \n            if i == n-2:\n                if string[i] == 'L':\n                    lose.append(count+1)\n                if string[i] == 'W':\n                    score = score+(count)*2+1 \n                break\n        else:\n            if string[i] == 'W':\n                score = score+(count)*2+1\n                count = 0\n                if i == n-2:\n                    lose.append(1)\n            else:\n                lose.append(count+1)\n                count = 0\n                if i == n-2:\n                    score += 1\n    if n == 1:\n        if string[0] == 'W':\n            score = 1 \n        else:\n            last = 1\n    else:\n        if string[-1] == 'L' and lose:\n            last = lose.pop()\n        if string[0] == 'L' and lose:\n            first = lose.pop(0)\n    lose = sorted(lose)\n    for i in lose:\n        if k-i < 0:\n            score = score+(k*2)\n            k = 0\n            break\n        else:\n            k -= i\n            score = score+(i*2)+1\n    if k >= last and score > 0:\n        score = score+(last*2)\n        k -= last\n    elif last > k and score > 0:\n        score = score+(k*2)\n        k = 0\n    elif last > 0 and k >= last:\n        score = score+last*2-1\n        k -= last\n    elif k > 0 and last > k:\n        score = score+k*2-1\n        k = 0\n    if k >= first and score > 0:\n        score = score+(first*2)\n        k -= first\n    elif first > k and score > 0:\n        score = score+(k*2)\n        k = 0\n    print(score)\n\n\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.BufferedReader;\nimport java.io.PrintWriter;\nimport java.io.InputStreamReader;\npublic class Main{\n\tpublic static void main(String args[]) throws Exception{\n\t  BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n\t  PrintWriter   out = new PrintWriter(System.out);\n\t  Scanner sc = new Scanner(System.in);\n\t  \n\t  int t = Integer.parseInt(in.readLine());\n\t  for(int q=0;q<t;q++) {\n\t\tint n,k;\n\t\tString[] s = in.readLine().split(\" \");\n\t\tn = Integer.parseInt(s[0]);\n\t\tk = Integer.parseInt(s[1]);\n\t\tString st = in.readLine();\n\t\tint i=0,j=n-1;\n\t\tfor(i =0;i<n;i++) {\n\t\t  if(st.charAt(i) =='W') break;\n\t\t}\n\t\tfor(j =n-1;j>=0;j--) {\n\t\t  if(st.charAt(j) =='W') break;\n\t\t}\n\t\tint restantes = i+(n-j-1);\n\t\tStringBuilder str = new StringBuilder(\"\");\n\t\tfor(int c=i;c<=j;c++) {\n\t\t  str.append(st.charAt(c));\n\t\t}\n\t\tString st2 = str.toString();\n\t\tint loses = 0,wins = 0,loses2=0,wins2=0;\n\t\tArrayList<Integer> gaps = new ArrayList<>();\n\t\tint cont = 0;\n\t\tfor(i =0;i<n;i++) {\n\t\t  if(st.charAt(i)=='W') wins++;\n\t\t  else loses++;\n\t\t}\n\t\tfor(i =0;i<st2.length();i++) {\n\t\t  if(st2.charAt(i) == 'W') {\n\t\t\twins2++;\n\t\t\tif(cont > 0){\n\t\t\t  gaps.add(cont);\n\t\t\t  cont = 0;\n\t\t\t}\n\t\t  }\n\t\t  else if(st2.charAt(i) == 'L') {\n\t\t\tcont++;\n\t\t\tloses2++;\n\t\t  }\n\t\t}\n\t\tif(cont > 0) gaps.add(cont);\n\t\tif(k >= loses) {\n\t\t  System.out.println(2*n - 1);\n\t\t}\n\t\telse if(k >= loses2) {\n\t\t  int res = Math.max(0,(2*(st2.length())-1) + Math.min(loses, k-loses2)*2);\n\t\t  System.out.println(res);\n\t\t}\n\t\telse {\n//\t\t  System.out.println(gaps);\n//\t\t  System.out.println(st2);\n\t\t  Collections.sort(gaps);\n\t\t  int acum = k, x=gaps.size(),used = 0;\n\t\t  \n\t\t  for(i =0;i<x;i++) {\n\t\t\tif(gaps.get(i) > acum) break;\n\t\t\tacum -= gaps.get(i);\n\t\t\tused++;\n\t\t  }\n\t\t  int seg = x+1;\n\t\t  int res = Math.max(0, 2*(k+wins2) - seg + used);\n\t\t  System.out.println(res);\n\t\t}\n\t\t\n\t  }\n\t}  \n}\n"
        },
        {
            "language": 3,
            "solution": "\nt = int(input())\nfor i in range(t):\n    n, k= map(int, input().split())\n    s = input()\n    w =0\n    l = 0\n    otv = 0\n    d=[]\n    for j in range(n):\n        if w == 1 and s[j] == 'L':\n            l +=1\n        if s[j] =='W':\n            otv +=1\n            if j!=0:\n                if s[j-1]=='W':\n                    otv+=1\n            w = 1\n            if l !=0:\n                d.append(l)\n                l=0\n    d.sort()\n    j = 0\n    while j<len(d) and k >=d[j]:\n        otv+=2*d[j]+1\n        k -=d[j]\n        j+=1\n    otv += 2*k\n    if w ==0:\n        otv = 2*k - 1\n    if otv > 2*n -1:\n        otv = 2*n -1\n    if otv < 0:\n        otv = 0\n    print(otv)"
        },
        {
            "language": 3,
            "solution": "import sys as _sys\n\n\nWIN = 'W'\nLOSE = 'L'\n\n\ndef main():\n    t = int(input())\n    for i_t in range(t):\n        n, k = _read_ints()\n        s = _read_line()\n        result = find_max_score_after_changing(s, k)\n        print(result)\n\n\ndef _read_line():\n    result = _sys.stdin.readline()\n    assert result[-1] == \"\\n\"\n    return result[:-1]\n\n\ndef _read_ints():\n    return map(int, _read_line().split())\n\n\ndef find_max_score_after_changing(games_results, changes_n):\n    if len(games_results) == 0:\n        return 0\n    \n    if len(games_results) == 1:\n        if games_results[0] == WIN:\n            result = 1\n        elif changes_n > 0:\n            result = 1\n        else:\n            result = 0\n        return result\n    \n    lose_n = games_results.count(LOSE)\n    changes_n = min(changes_n, lose_n)\n    \n    if lose_n == len(games_results):\n        if changes_n == 0:\n            result = 0\n        else:\n            result = 2 * changes_n - 1\n        return result\n    \n    curr_score = 1 if games_results[0] == WIN else 0\n    for i in range(1, len(games_results)):\n        if games_results[i] == WIN:\n            if games_results[i-1] == WIN:\n                curr_score += 2\n            else:\n                curr_score += 1\n    \n    empty_spaces = games_results.replace(WIN, ' ').split()\n    if games_results[0] == LOSE:\n        empty_spaces = empty_spaces[1:]\n    if games_results[-1] == LOSE:\n        empty_spaces = empty_spaces[:-1]\n    \n    distances_between_islands = sorted(map(len, empty_spaces))\n    changes_lost = 0\n    islands_united = 0\n    for distance in distances_between_islands:\n        if distance <= changes_n:\n            changes_lost += distance\n            changes_n -= distance\n            islands_united += 1\n        else:\n            changes_lost += changes_n\n            changes_n = 0\n            break\n    \n    curr_score += (changes_lost + changes_n) * 2\n    curr_score += islands_united\n    \n    return curr_score\n\n\nif __name__ == '__main__':\n    main()\n"
        },
        {
            "language": 3,
            "solution": "from math import inf\nfor _ in range(int(input())):\n    n, k = map(int,input().split())\n    l = [1 if i == 'W' else 0 for i in list(input())]\n    s = sum(l)\n    if s + k >= n:\n        print((2 * n) - 1)\n        continue\n    elif s == 1:\n        print((2 * min(n - 1, k)) + 1)\n        continue\n    elif s == 0:\n        print(max(2 * k - 1, 0))\n        continue\n\n    ind = []\n    prev = -inf\n    for i in range(n):\n        if l[i] == 1:\n            ind.append(i - prev - 1)\n            prev = i\n    if ind:\n        ind.sort()\n    for d in ind:\n        if d <= k:\n            s += 2 * d + 1\n            k -= d\n    if k > 0:\n        s += 2 * k\n\n    print(s)\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\n\nfor t_ in range(t):\n\n    n,k = map(int,input().split())\n    s = input()\n\n    gaps = [len(x) for x in s.split('W') if len(x)>0]\n    runs = [len(x) for x in s.split('L') if len(x)>0]\n\n    # trim ends\n    ends = 0\n    if s[0]=='L':\n        ends+=gaps[0]\n        del gaps[0]\n    if s[-1]=='L' and len(gaps)>0:\n        ends+=gaps[-1]\n        del gaps[-1]\n\n    gaps.sort()\n\n\n    i=0\n    while k>0 and i<len(gaps):\n        if gaps[i]<=k:\n            k-=gaps[i]\n            gaps[i] = 0\n            i+=1\n        else:\n            gaps[i]-=k\n            k=0\n        \n    new_gaps = [g for g in gaps if g>0]\n\n            \n    if k>0 and ends>0:\n        if ends>=k:\n            ends-=k\n        else:\n            ends=0\n\n    score = (n-sum(new_gaps)-ends)*2 - (len(new_gaps)+1)\n    score = max(score,0)\n    print(score)\n\n"
        },
        {
            "language": 4,
            "solution": "// Utilities\nimport java.io.*;\nimport java.util.*;\n\npublic class Main {\n\tstatic int T;\n\tstatic int N, K;\n\tstatic char[] ch;\n\tstatic ArrayList<Integer> gap;\n\tstatic int cntL, extraL;\n\tstatic int res;\n\t\n\tpublic static void main(String[] args) throws IOException {\n\t\tT = in.iscan();\n\t\twhile (T-- > 0) {\n\t\t\tN = in.iscan(); K = in.iscan();\n\t\t\tch = in.sscan().toCharArray();\n\t\t\tgap = new ArrayList<Integer>();\n\t\t\tres = 0; cntL = 0; extraL = 0;\n\t\t\tboolean flag = false;\n\t\t\tfor (int i = 0; i < N; i++) {\n\t\t\t\tif (ch[i] == 'W') {\n\t\t\t\t\tflag = true;\n\t\t\t\t\tif (cntL > 0) {\n\t\t\t\t\t\tgap.add(cntL);\n\t\t\t\t\t\tcntL = 0;\n\t\t\t\t\t}\n\t\t\t\t\tif (i > 0 && ch[i-1] == 'W') res += 2;\n\t\t\t\t\telse res++;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (flag) cntL++;\n\t\t\t\t\telse extraL++;\n\t\t\t\t}\n\t\t\t}\n\t\t\textraL += cntL;\n\t\t\tCollections.sort(gap);\n\t\t\tfor (int xx : gap) {\n\t\t\t\tif (K >= xx) {\n\t\t\t\t\tres += (xx-1) * 2 + 3;\n\t\t\t\t\tK -= xx;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tres += K * 2;\n\t\t\t\t\tK = 0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (K > 0 && extraL > 0) {\n\t\t\t\tif (flag) {\n\t\t\t\t\tres += Math.min(K, extraL) * 2;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tK--; extraL--;\n\t\t\t\t\tres++;\n\t\t\t\t\tres += Math.min(K, extraL) * 2;\n\t\t\t\t}\n\t\t\t}\n\t\t\tout.println(res);\n\t\t}\n\t\tout.close();\n\t} \n\t\n\tstatic INPUT in = new INPUT(System.in);\n\tstatic PrintWriter out = new PrintWriter(System.out);\n\tprivate static class INPUT {\n\n\t\tprivate InputStream stream;\n\t\tprivate byte[] buf = new byte[1024];\n\t\tprivate int curChar, numChars;\n\n\t\tpublic INPUT (InputStream stream) {\n\t\t\tthis.stream = stream;\n\t\t}\n\n\t\tpublic INPUT (String file) throws IOException {\n\t\t\tthis.stream = new FileInputStream (file);\n\t\t}\n\n\t\tpublic int cscan () throws IOException {\n\t\t\tif (curChar >= numChars) {\n\t\t\t\tcurChar = 0;\n\t\t\t\tnumChars = stream.read (buf);\n\t\t\t}\n\t\t\t\n\t\t\tif (numChars == -1)\n\t\t\t\treturn numChars;\n\n\t\t\treturn buf[curChar++];\n\t\t}\n\n\t\tpublic int iscan () throws IOException {\n\t\t\tint c = cscan (), sgn = 1;\n\t\t\t\n\t\t\twhile (space (c))\n\t\t\t\tc = cscan ();\n\n\t\t\tif (c == '-') {\n\t\t\t\tsgn = -1;\n\t\t\t\tc = cscan ();\n\t\t\t}\n\n\t\t\tint res = 0;\n\n\t\t\tdo {\n\t\t\t\tres = (res << 1) + (res << 3);\n\t\t\t\tres += c - '0';\n\t\t\t\tc = cscan ();\n\t\t\t}\n\t\t\twhile (!space (c));\n\n\t\t\treturn res * sgn;\n\t\t}\n\n\t\tpublic String sscan () throws IOException {\n\t\t\tint c = cscan ();\n\t\t\t\n\t\t\twhile (space (c))\n\t\t\t\tc = cscan ();\n\n\t\t\tStringBuilder res = new StringBuilder ();\n\n\t\t\tdo {\n\t\t\t\tres.appendCodePoint (c);\n\t\t\t\tc = cscan ();\n\t\t\t}\n\t\t\twhile (!space (c));\n\n\t\t\treturn res.toString ();\n\t\t}\n\n\t\tpublic double dscan () throws IOException {\n\t\t\tint c = cscan (), sgn = 1;\n\t\t\t\n\t\t\twhile (space (c))\n\t\t\t\tc = cscan ();\n\n\t\t\tif (c == '-') {\n\t\t\t\tsgn = -1;\n\t\t\t\tc = cscan ();\n\t\t\t}\n\n\t\t\tdouble res = 0;\n\n\t\t\twhile (!space (c) && c != '.') {\n\t\t\t\tif (c == 'e' || c == 'E')\n\t\t\t\t\treturn res * UTILITIES.fast_pow (10, iscan ());\n\t\t\t\t\n\t\t\t\tres *= 10;\n\t\t\t\tres += c - '0';\n\t\t\t\tc = cscan ();\n\t\t\t}\n\n\t\t\tif (c == '.') {\n\t\t\t\tc = cscan ();\n\t\t\t\tdouble m = 1;\n\n\t\t\t\twhile (!space (c)) {\n\t\t\t\t\tif (c == 'e' || c == 'E')\n\t\t\t\t\t\treturn res * UTILITIES.fast_pow (10, iscan ());\n\n\t\t\t\t\tm /= 10;\n\t\t\t\t\tres += (c - '0') * m;\n\t\t\t\t\tc = cscan ();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn res * sgn;\n\t\t}\n\n\t\tpublic long lscan () throws IOException {\n\t\t\tint c = cscan (), sgn = 1;\n\t\t\t\n\t\t\twhile (space (c))\n\t\t\t\tc = cscan ();\n\n\t\t\tif (c == '-') {\n\t\t\t\tsgn = -1;\n\t\t\t\tc = cscan ();\n\t\t\t}\n\n\t\t\tlong res = 0;\n\n\t\t\tdo {\n\t\t\t\tres = (res << 1) + (res << 3);\n\t\t\t\tres += c - '0';\n\t\t\t\tc = cscan ();\n\t\t\t}\n\t\t\twhile (!space (c));\n\n\t\t\treturn res * sgn;\n\t\t}\n\n\t\tpublic boolean space (int c) {\n\t\t\treturn c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n\t\t}\n\t}\n\n\tpublic static class UTILITIES {\n\n\t\tstatic final double EPS = 10e-6;\n\n\t\tpublic static int lower_bound (int[] arr, int x) {\n\t\t\tint low = 0, high = arr.length, mid = -1;\n\n\t\t\twhile (low < high) {\n\t\t\t\tmid = (low + high) / 2;\n\n\t\t\t\tif (arr[mid] >= x)\n\t\t\t\t\thigh = mid;\n\t\t\t\telse\n\t\t\t\t\tlow = mid + 1;\n\t\t\t}\n\n\t\t\treturn low;\n\t\t}\n\n\t\tpublic static int upper_bound (int[] arr, int x) {\n\t\t\tint low = 0, high = arr.length, mid = -1;\n\n\t\t\twhile (low < high) {\n\t\t\t\tmid = (low + high) / 2;\n\n\t\t\t\tif (arr[mid] > x)\n\t\t\t\t\thigh = mid;\n\t\t\t\telse\n\t\t\t\t\tlow = mid + 1;\n\t\t\t}\n\n\t\t\treturn low;\n\t\t}\n\n\t\tpublic static int gcd (int a, int b) {\n\t\t\treturn b == 0 ? a : gcd (b, a % b);\n\t\t}\n\n\t\tpublic static int lcm (int a, int b) {\n\t\t\treturn a * b / gcd (a, b);\n\t\t}\n\n\t\tpublic static long fast_pow_mod (long b, long x, int mod) {\n\t\t\tif (x == 0) return 1;\n\t\t\tif (x == 1) return b;\n\t\t\tif (x % 2 == 0) return fast_pow_mod (b * b % mod, x / 2, mod) % mod;\n\n\t\t\treturn b * fast_pow_mod (b * b % mod, x / 2, mod) % mod;\n\t\t}\n\n\t\tpublic static int fast_pow (int b, int x) {\n\t\t\tif (x == 0) return 1;\n\t\t\tif (x == 1) return b;\n\t\t\tif (x % 2 == 0) return fast_pow (b * b, x / 2);\n\n\t\t\treturn b * fast_pow (b * b, x / 2);\n\t\t}\n\n\t\tpublic static long choose (long n, long k) {\n\t\t\tk = Math.min (k, n - k);\n\t\t\tlong val = 1;\n\n\t\t\tfor (int i = 0; i < k; ++i)\n\t\t\t\tval = val * (n - i) / (i + 1);\n\n\t\t\treturn val;\n\t\t}\n\n\t\tpublic static long permute (int n, int k) {\n\t\t\tif (n < k) return 0;\n\t\t\tlong val = 1;\n\n\t\t\tfor (int i = 0; i < k; ++i)\n\t\t\t\tval = (val * (n - i));\n\n\t\t\treturn val;\n\t\t}\n\t}\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\nimport static java.lang.Math.*;\npublic class B extends Object {\n    public static final String ANSI_RED = \"\\u001B[31m\";\n    public static final String ANSI_RESET = \"\\u001B[0m\";\n    static long startTime;\n    static long endTime;\n    static boolean [] prime ;\n    static int M=(int)1e9+7;\n    static long MM=M*M;\n    static int MAX=Integer.MAX_VALUE;\n    static int MIN=Integer.MIN_VALUE;\n    static int SIZE = (int)1e9*2;\n    static class FastReader{\n        BufferedReader br;\n        StringTokenizer st;\n        public FastReader()\n        {\n            br = new BufferedReader(new\n                    InputStreamReader(System.in));\n        }\n        String next()\n        {\n            while (st == null || !st.hasMoreElements())\n            {\n                try\n                {\n                    st = new StringTokenizer(br.readLine());\n                }\n                catch (IOException e)\n                {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n        int nextInt()\n        {\n            return Integer.parseInt(next());\n        }\n        long nextLong()\n        {\n            return Long.parseLong(next());\n        }\n        double nextDouble()\n        {\n            return Double.parseDouble(next());\n        }\n        String nextLine()\n        {\n            String str = \"\";\n            try\n            {\n                str = br.readLine();\n            }\n            catch (IOException e)\n            {\n                e.printStackTrace();\n            }\n            return str;\n        }\n    }\n    public static void revArray(int [] arr){\n        int n =arr.length;\n        for (int i = 0; i < n/2; i++) {\n            int temp=arr[i];\n            arr[i]=arr[n-i-1];\n            arr[n-i-1]=temp;\n        }\n    }\n    public static void revArray(long [] arr){\n        int n =arr.length;\n        for (int i = 0; i < n/2; i++) {\n            long temp=arr[i];\n            arr[i]=arr[n-i-1];\n            arr[n-i-1]=temp;\n        }\n    }\n    public static void revArray(Long [] arr){\n        int n =arr.length;\n        for (int i = 0; i < n/2; i++) {\n            Long temp=arr[i];\n            arr[i]=arr[n-i-1];\n            arr[n-i-1]=temp;\n        }\n    }\n    public static void revArray(Integer [] arr){\n        int n =arr.length;\n        for (int i = 0; i < n/2; i++) {\n            Integer temp=arr[i];\n            arr[i]=arr[n-i-1];\n            arr[n-i-1]=temp;\n        }\n    }\n    static void printArray(int[] arr)\n    {\n        int n = arr.length;\n        for (int i = 0; i < n; ++i)\n            System.out.print(arr[i] + \" \");\n        System.out.println();\n    }\n    static void printArray(long[] arr)\n    {\n        int n = arr.length;\n        for (int i = 0; i < n; ++i)\n            System.out.print(arr[i] + \" \");\n        System.out.println();\n    }\n    static void printArray(Integer[] arr)\n    {\n        int n = arr.length;\n        for (int i = 0; i < n; ++i)\n            System.out.print(arr[i] + \" \");\n        System.out.println();\n    }\n    static void printArray(Long[] arr)\n    {\n        int n = arr.length;\n        for (int i = 0; i < n; ++i)\n            System.out.print(arr[i] + \" \");\n        System.out.println();\n    }\n    static void yes(){\n        System.out.println(\"YES\");\n    }\n    static void no(){System.out.println(\"NO\");}\n    public static int lowerBound\n            (Integer[] array, int length, int value) {\n// Returns the index of the value or\n// if there is no value, returns the closest to the left.\n        int low=-1; // arr[low]<=tar\n        int hi=length;//arr[hi]>tar\n        while (low+1<hi){ // while pointers are not neighboring(low+1!=hi)\n            int mid=(low+hi)/2;\n            if(array[mid]<=value){\n                low=mid;\n            }\n            else {\n                hi=mid;\n            }\n        }\n        return low;// if no such element, returns -1.\n    }\n    public static int upperBound(Integer[] array, int length, int value){\n// returns the index of the value or\n// if the value does not exist, returns the closest to the right\n        int low=-1; // arr[low]<tar\n        int hi=length;// arr[hi]>=tar\n        while (low+1<hi){// Eventually, pointers should be adjacent.\n            int mid=(low+hi)>>1;\n            if(array[mid]>=value){\n                hi=mid;\n            }\n            else low=mid;\n        }\n        return hi;\n    }\n    public static int binarySearch(Integer [] arr, int length, int value){\n// returns the index of the targeted value or -1 if there is no value.\n        int low=0;\n        int hi=length-1;\n        int ans=-1;\n        while (low<=hi){\n            int mid=(low+hi)>>1;\n            if(arr[mid]>value){\n                hi=mid-1;\n            }\n            else if(arr[mid]<value){\n                low=mid+1;\n            }\n            else {\n                ans=mid;\n                break;\n            }\n        }\n        return ans;\n    }\n    public static int gcd(int a, int b){\n        if (b == 0)\n            return a;\n        else return gcd(b, a % b);\n    }\n    public static long lcm(int a , int b){\n        return a/gcd(a,b)*b;\n    }\n    public static int countDivs(int n ){\n        int cn=0;\n        int sqr = (int)Math.sqrt(n);\n        for (int i = 1; i<=sqr ; ++i) {\n            if(n%i==0){\n                ++cn;\n            }\n        }\n        cn*=2;\n        if(sqr*sqr==n) cn--;\n        return cn;\n    }\n    static void prime(int x) {\n//sieve algorithm. nlog(log(n)).\n        prime=new boolean[ (x+1)];\n        Arrays.fill(prime,true);\n        prime[0] = prime[1] = false;\n        for (int i = 2; i * i <= x ; i++)\n            if (prime[i])\n                for (int j = i * i; j <= x; j += i)\n                    prime[j] = false;\n    }\n    static int[] sum;\n    static void cumulitiveSum( int [] arr){\n        sum = new int[arr.length];\n        sum[0]=arr[0];\n        for (int i = 1; i <arr.length; i++) {\n            sum[i]=arr[i]+sum[i-1];\n        }\n    }\n    static boolean isEven(long x ){\n        return x % 2 == 0;\n    }\n    static boolean isPrime(long x ){\n        boolean flag = true;\n        int sqr = (int)Math.sqrt(x);\n        if(x<2) return false;\n        for (int i = 2; i <=sqr; i++) {\n            if(x%i==0){\n                flag=false;\n                break;\n            }\n        }\n        return flag;\n    }\n    static long factorial( long x) {\n        long total = 1;\n        for (int i = 2; i <= x; i++)\n            total = (total*i)%M;\n        return total;\n    }\n    static long power(long x, long n) {\n        if (n == 0) {\n            return 1;\n        }\n        long pow = power(x, n / 2L);\n        if ((n & 1) == 1) {\n            return (x * (pow) * (pow));\n        }\n        return (pow * pow);\n    }\n    static void decimalToRadix(){\n        int num= sc.nextInt(),radix= sc.nextInt();\n        StringBuilder s = new StringBuilder();\n        while (num>0){\n            int x=num%radix;\n            if(x>9){\n                s.append((char)('A'+x-10));\n            }\n            else s.append(x);\n            num/=radix;\n        }\n        System.out.println(s.reverse());\n    }\n    static void radixToDecimal(){\n        String num= sc.next();\n        int radix= sc.nextInt();\n        int n =num.length();\n        long ans=0;\n        for (int i = 0; i < n; i++) {\n            int number =num.charAt(i)-'0';\n            if(!(number>=0 && number<=9)){\n                number+='0'+10-'A';\n            }\n            ans+=number*power(radix,n-1-i);\n        }\n        System.out.println(ans);\n    }\n    static void remAndNumber(){\n        int number= sc.nextInt(),radix= sc.nextInt();\n        while (number>0) {\n            System.out.println(\"Remainder: \" + number%radix +\" Number: \" + number );\n            number /= radix;\n        }\n    }\n    static void dg (String ss){\n        System.out.println(ANSI_RED + ss + ANSI_RESET);\n    }\n    public static void main(String [] args) throws FileNotFoundException {\n        startTime = System.currentTimeMillis();\n        int T = sc.nextInt();while (T--!=0)\n        {\n            solve();\n        }\n        endTime = System.currentTimeMillis();\n        long duration= endTime-startTime;\n// System.out.println(duration);\n    }\n    // static Scanner sc = new Scanner(System.in);\n    static FastReader sc = new FastReader();\n    // dg(String.valueOf());\n    public static int swap(int... args) {\n        return args[0];\n    }\n    public static void solve() throws FileNotFoundException {\n//////////////////////////////////////////////////////////////////////\n        int n =sc.nextInt(),k=sc.nextInt();\n        int kk=k;\n        int k1=k;\n        String ss;\n        ss=sc.next();\n        StringBuilder s = new StringBuilder(ss);\n        long won=0,lose=0;\n        int w=0,l=0;\n        for (int i = 0; i < s.length(); i++) {\n            if(s.charAt(i)=='W') w++;\n            else l++;\n        }\n        if(w==0&&k!=0){\n            won++;\n            k--;\n            won+=2*k;\n            System.out.println(won);\n            return;\n        }\n        if(l==0){\n            won++;\n            w--;\n            won+=2*w;\n            System.out.println(won);\n            return;\n        }\n        boolean isw=false,isl=false;\n        ArrayList<Integer> lis = new ArrayList<>();\n        ArrayList<Integer> lis1 = new ArrayList<>();\n        int cn=0;\n        if(s.charAt(0)=='W')won++;\n        for (int i = 1; i < n; i++) {\n            if(s.charAt(i)=='W'){\n                if(s.charAt(i-1)=='W')won+=2;\n                else won++;\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            if(s.charAt(i)=='W'){\n                isw=true;\n                if(isl){\n                    isl=false;\n                    lis.add(cn);\n                    cn=0;\n                }\n            }\n            if(isw&&s.charAt(i)=='L'){\n                isl=true;\n                cn++;\n\n            }\n        }\n        int ch=0;\n        isw=false;isl=false;\n        for (int i = 0; i < n; i++) {\n            if(s.charAt(i)=='W'){\n                isw=true;\n                if(isl){\n                    isl=false;\n                    lis1.add(cn);\n                     cn=0;\n                }\n            }\n            if(s.charAt(i)=='L'){\n                isl=true;\n                cn++;\n\n            }\n        }\n        if(cn!=0)\n        lis1.add(cn);\n        Collections.sort(lis);\n        Collections.sort(lis1);\n        for (int i = 0; i < lis.size(); i++) {\n            if(k>=lis.get(i)){\n              won+=2*lis.get(i)+1;\n              ch+=lis.get(i);\n                k-=lis.get(i);\n            }\n        }\n        l-=ch;\n        k=min(k,l);\n        won+=2*k;\n        System.out.println(won);\n///////////////////////////////////////////////////////////////////////\n    }\n}"
        },
        {
            "language": 3,
            "solution": "# from collections import defaultdict, Counter, deque\n# from heapq import heappop, heappush, heapify\n# from functools import lru_cache, reduce\n# import bisect\n# from itertools import permutations, combinations, combinations_with_replacement\n\n\nt = int(input())\narr = []\nfor _ in range(t):\n    n, k = tuple(map(int, input().split()))\n    arr.append( (n,k,input() ) )\n\n# Cases: All L's, All W's, mix of L's and W's\n\nfor n,k,string in arr:\n    # O(n)\n    # each L -> W adds at most 3, 2 in general tho [exceptions are left end and right end]\n    numL = 0\n    Lchain = string.split('W')\n    Lchain = list(map(lambda x: len(x),Lchain))\n    Wchain = string.split('L')\n    Wchain = list(map(lambda x: len(x),Wchain))\n\n    # Handles k >= number of L's or all W's\n    if k >= sum(Lchain):\n        print( 2*len(string)-1 )\n        continue\n\n    # Handles all L's\n    if len(Lchain) == 1:\n        print( max(0,2*k-1) )\n        continue\n\n\n    res = 0\n    # sum of all W's\n    for i in Wchain:\n        if i != 0:\n            res += 2*i - 1\n\n    # further increase res\n    # front, back = Lchain[0],Lchain[-1]\n    Lchain = [Lchain[i] for i in range(len(Lchain)) if i != 0 and i != len(Lchain)-1]\n    Lchain.sort()\n    # print(n,k,\"initial\",res)\n\n    for i in Lchain:\n        if i == 0:\n            pass\n        elif k >= i:\n            res += 2*i + 1\n            k -= i\n        else:\n            res += 2*k\n            k = 0\n            break\n    \n    res += 2*k\n\n    print(res)\n\n\n\n# Test cases\n'''\n10\n5 2\nWLWLL\n6 5\nLLLWWL\n7 1\nLWLWLWL\n15 5\nWWWLLLWWWLLLWWW\n40 7\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLLWLLWWWLWWL\n1 0\nL\n1 1\nL\n6 1\nWLLWLW\n5 2\nWWWWW\n5 2\nLLLLL\n'''\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.Comparator;\nimport java.util.PriorityQueue;\nimport java.util.StringTokenizer;\n\npublic class Task2 {\n\n    public static void main(String[] args) throws IOException {\n        new Task2().solve();\n    }\n\n    private void solve() throws IOException {\n        BufferedReader f = new BufferedReader(new InputStreamReader(System.in));\n        PrintWriter out = new PrintWriter(System.out);\n\n        int t = Integer.parseInt(f.readLine());\n        for (int t1 = 0; t1 < t; t1++) {\n            StringTokenizer tokenizer = new StringTokenizer(f.readLine());\n            int n = Integer.parseInt(tokenizer.nextToken());\n            int k = Integer.parseInt(tokenizer.nextToken());\n            char[] seq = f.readLine().toCharArray();\n            int index = 0;\n\n            int lastW = -1;\n            PriorityQueue<int[]> pq = new PriorityQueue<int[]>(new ArrayComparator());\n            for (int i = 0; i < n; i++) {\n                if (seq[i] == 'W') {\n                    if (lastW != -1 && lastW != i - 1) {\n                        int[] ar = {i, i - lastW - 1};\n                        pq.add(ar);\n                    }\n                    lastW = i;\n                }\n            }\n\n            while (!pq.isEmpty() && pq.peek()[1] <= k) {\n                int[] dist = pq.remove();\n                for (int i = dist[0] - 1; dist[0] - i <= dist[1]; i--) {\n                    seq[i] = 'W';\n                    k--;\n                }\n            }\n\n            boolean containsW = false;\n\n            int res = 0;\n            int bad = 0;\n            for (int i = 0; i < n; i++) {\n                if (seq[i] == 'W') {\n                    containsW = true;\n                    res++;\n                    if (i != 0 && seq[i - 1] == 'W') res++;\n                } else {\n                    bad++;\n                }\n            }\n            if (containsW) {\n                res += Math.min(bad, k) * 2;\n            } else {\n                if (k != 0) {\n                    res += Math.min(bad, k) * 2;\n                    res--;\n                }\n            }\n\n\n            out.println(res);\n        }\n\n        out.close();\n    }\n\n    private static class ArrayComparator implements Comparator<int[]> {\n\n        @Override\n        public int compare(int[] o1, int[] o2) {\n            return Integer.compare(o1[1], o2[1]);\n        }\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nbool sortbysec(const pair<int, int> &a, const pair<int, int> &b) {\n  return (a.second < b.second);\n}\nconst double pi = acos(-1.0);\nlong long int calcScore(int n) {\n  if (n == 0) return 0;\n  return 2 * (n)-1;\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  int t;\n  cin >> t;\n  while (t--) {\n    int n, k;\n    string s;\n    cin >> n >> k >> s;\n    int winning_streak = 0;\n    int win = 0, losses = 0;\n    vector<int> losing_streak;\n    for (int i = 0; i < n; i += 1) {\n      if (s[i] == 'W') {\n        win++;\n        if (i == 0 || s[i - 1] == 'L') winning_streak++;\n      }\n      if (s[i] == 'L') {\n        losses++;\n        if (i == 0 || s[i - 1] == 'W') losing_streak.push_back(0);\n        losing_streak.back()++;\n      }\n    }\n    if (k >= losses) {\n      cout << 2 * n - 1 << endl;\n      continue;\n    }\n    if (win == 0) {\n      cout << max(0, 2 * k - 1) << endl;\n      continue;\n    }\n    win += k;\n    if (s[0] == 'L') losing_streak[0] = 1e8;\n    if (s[n - 1] == 'L') losing_streak.back() = 1e8;\n    sort(losing_streak.begin(), losing_streak.end());\n    for (auto ls : losing_streak) {\n      if (ls > k) break;\n      k -= ls;\n      winning_streak--;\n    }\n    cout << 2 * win - winning_streak;\n    cout << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "\n\n\ndef reverse(li,i,k):\n    i-=1\n    t=0\n    while(k>0 and i>=0):\n        if(li[i]=='L'):\n            li[i]='W'\n            t+=1\n        else:\n            return t\n        i-=1\n        k-=1\n    return t\ndef process():\n    n,k=list(map(int,input().split()))\n    li=list(input())\n    # print(li)\n    if(n==1 and k==1):\n        print(1)\n        return\n    if(n==1 and k==0):\n        if(li[0]=='W'):\n            print(1)\n        else:\n            print(0)\n        return\n\n    last_win=0 if li[0]=='W'else -1\n    flag = 1 if li[0] == 'W' else 0\n    between_wins=[]\n    for i in range(1,n):\n        if(flag==1 and li[i]=='W'):\n            last_win+=1\n        elif(li[i]=='L'):\n            flag=0\n        elif(li[i]=='W'):\n            flag=1\n            if(last_win!=-1):\n                between_wins.append((last_win+1,i-1))\n            last_win = i\n    between_wins.sort(key=lambda x:x[1]-x[0]+1)\n    temp=[]\n    if(li[0]=='L'):\n        ans=0\n        flag=0\n        for i in range(n):\n            if(li[i]=='W'):\n                ans=i\n                flag=1\n                break\n        if(flag):\n            temp.append((ans-1,0))\n    if(li[-1]=='L'):\n        ans=n-1\n        flag=0\n        for i in reversed(range(n)):\n            if(li[i]=='W'):\n                flag=1\n                ans=i+1\n                break\n        if(flag):\n            temp.append((ans,n-1))\n    temp.sort(key=lambda x:abs(x[1]-x[0])+1)\n    between_wins.extend(temp)\n    # print(between_wins)\n    for i in between_wins:\n        if(i[1]>=i[0]):\n            for j in range(i[0],i[1]+1):\n                if(k>0):\n                    k-=1\n                    li[j]='W'\n                else:\n                    break\n        else:\n            for j in reversed(range(i[1],i[0]+1)):\n                if (k > 0):\n                    k -= 1\n                    li[j] = 'W'\n                else:\n                    break\n\n    # print(between_wins)\n    if(between_wins==[]):\n        for i in range(min(n,k)):\n            li[i]='W'\n    points=1 if li[0]=='W' else 0\n    for i in range(1,n):\n        if(li[i]=='W' and li[i-1]=='W'):\n            points+=2\n        elif(li[i]=='W'):\n            points+=1\n    # print(li)\n    print(points)\n\n\n\n\n\n\ntests=int(input())\nfor i in range(tests):\n    process()"
        },
        {
            "language": 4,
            "solution": "/*\n *\n * @Author  Ajudiya_13(Bhargav Girdharbhai Ajudiya)\n * Dhirubhai Ambani Institute of Information And Communication Technology\n *\n */\n\n\nimport java.util.*;\nimport java.io.*;\nimport java.lang.*;\n\npublic class Code105\n{\n\n    public static void main(String[] args)\n    {\n        InputReader in = new InputReader(System.in);\n        PrintWriter pw = new PrintWriter(System.out);\n\n        int test_case = in.nextInt();\n        for(int t=0;t<test_case;t++)\n        {\n            int n = in.nextInt();\n            int k = in.nextInt();\n            char[] s = in.nextLine().toCharArray();\n            int wins = 0;\n            int winningStreaks = 0;\n            int gapSize = 0;\n\n            ArrayList<Integer> gaps = new ArrayList<>();\n            boolean isGap = true;\n            boolean isWinningStreak = false;\n            for(int i=0;i<n;i++){\n                if(s[i]=='W') {\n                    wins++;\n                    isWinningStreak = true;\n                    if(isGap){\n                        if(gapSize!=0)\n                            gaps.add(gapSize);\n                        gapSize = 0;\n                        isGap = false;\n                    }\n                }\n                else{\n                    if(isWinningStreak){\n                        winningStreaks++;\n                        isWinningStreak = false;\n                    }\n                    isGap = true;\n                    if(isGap){\n                        gapSize++;\n                    }\n                }\n            }\n\n            if(isWinningStreak){\n                winningStreaks++;\n            }\n            if(wins==0){\n                if(k==0)\n                    pw.println(0);\n                else\n                    pw.println(2*k-1);\n                continue;\n            }\n            if(wins + k >=n){\n                pw.println(2*n - 1);\n            }else{\n                if(s[0] == 'L'){\n                    gaps.remove(0);\n                }\n                Collections.sort(gaps);\n                int sum = 0;\n                int count = 0;\n                for(int v : gaps){\n                    sum += v;\n                    if(sum<=k)\n                        count++;\n                }\n                pw.println(2*(k+wins) - winningStreaks + count);\n            }\n\n\n        }\n        pw.flush();\n        pw.close();\n    }\n\n    static class InputReader\n    {\n\n        private final InputStream stream;\n        private final byte[] buf = new byte[8192];\n        private int curChar, snumChars;\n        private SpaceCharFilter filter;\n\n        public InputReader(InputStream stream)\n        {\n            this.stream = stream;\n        }\n\n        public int snext()\n        {\n            if (snumChars == -1)\n                throw new InputMismatchException();\n            if (curChar >= snumChars)\n            {\n                curChar = 0;\n                try\n                {\n                    snumChars = stream.read(buf);\n                }\n                catch (IOException e)\n                {\n                    throw new InputMismatchException();\n                }\n                if (snumChars <= 0)\n                    return -1;\n            }\n            return buf[curChar++];\n        }\n\n        public int nextInt()\n        {\n            int c = snext();\n            while (isSpaceChar(c))\n            {\n                c = snext();\n            }\n            int sgn = 1;\n            if (c == '-')\n            {\n                sgn = -1;\n                c = snext();\n            }\n            int res = 0;\n            do\n            {\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = snext();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public long nextLong()\n        {\n            int c = snext();\n            while (isSpaceChar(c))\n            {\n                c = snext();\n            }\n            int sgn = 1;\n            if (c == '-')\n            {\n                sgn = -1;\n                c = snext();\n            }\n            long res = 0;\n            do\n            {\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = snext();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public int[] nextIntArray(int n)\n        {\n            int a[] = new int[n];\n            for (int i = 0; i < n; i++)\n            {\n                a[i] = nextInt();\n            }\n            return a;\n        }\n\n        public String readString()\n        {\n            int c = snext();\n            while (isSpaceChar(c))\n            {\n                c = snext();\n            }\n            StringBuilder res = new StringBuilder();\n            do\n            {\n                res.appendCodePoint(c);\n                c = snext();\n            } while (!isSpaceChar(c));\n            return res.toString();\n        }\n\n        public String nextLine()\n        {\n            int c = snext();\n            while (isSpaceChar(c))\n                c = snext();\n            StringBuilder res = new StringBuilder();\n            do\n            {\n                res.appendCodePoint(c);\n                c = snext();\n            } while (!isEndOfLine(c));\n            return res.toString();\n        }\n\n        public boolean isSpaceChar(int c)\n        {\n            if (filter != null)\n                return filter.isSpaceChar(c);\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        private boolean isEndOfLine(int c)\n        {\n            return c == '\\n' || c == '\\r' || c == -1;\n        }\n\n        public interface SpaceCharFilter\n        {\n            public boolean isSpaceChar(int ch);\n        }\n    }\n\n    public static long mod = 1000000007;\n    public static int d;\n    public static int p;\n    public static int q;\n\n    public static int[] suffle(int[] a,Random gen)\n    {\n        int n = a.length;\n        for(int i=0;i<n;i++)\n        {\n            int ind = gen.nextInt(n-i)+i;\n            int temp = a[ind];\n            a[ind] = a[i];\n            a[i] = temp;\n        }\n        return a;\n    }\n\n    public static void swap(int a, int b){\n        int temp = a;\n        a = b;\n        b = temp;\n    }\n\n    public static HashSet<Integer> primeFactorization(int n)\n    {\n        HashSet<Integer> a =new HashSet<Integer>();\n        for(int i=2;i*i<=n;i++)\n        {\n            while(n%i==0)\n            {\n                a.add(i);\n                n/=i;\n            }\n        }\n        if(n!=1)\n            a.add(n);\n        return a;\n    }\n\n    public static void sieve(boolean[] isPrime,int n)\n    {\n        for(int i=1;i<n;i++)\n            isPrime[i] = true;\n\n        isPrime[0] = false;\n        isPrime[1] = false;\n\n        for(int i=2;i*i<n;i++)\n        {\n            if(isPrime[i] == true)\n            {\n                for(int j=(2*i);j<n;j+=i)\n                    isPrime[j] = false;\n            }\n        }\n    }\n\n    public static int GCD(int a,int b)\n    {\n        if(b==0)\n            return a;\n        else\n            return GCD(b,a%b);\n    }\n\n    public static long GCD(long a,long b)\n    {\n        if(b==0)\n            return a;\n        else\n            return GCD(b,a%b);\n    }\n\n    public static void extendedEuclid(int A,int B)\n    {\n        if(B==0)\n        {\n            d = A;\n            p = 1 ;\n            q = 0;\n        }\n        else\n        {\n            extendedEuclid(B, A%B);\n            int temp = p;\n            p = q;\n            q = temp - (A/B)*q;\n        }\n    }\n\n    public static long LCM(long a,long b)\n    {\n        return (a*b)/GCD(a,b);\n    }\n\n    public static int LCM(int a,int b)\n    {\n        return (a*b)/GCD(a,b);\n    }\n\n    public static int binaryExponentiation(int x,int n)\n    {\n        int result=1;\n        while(n>0)\n        {\n            if(n % 2 ==1)\n                result=result * x;\n            x=x*x;\n            n=n/2;\n        }\n        return result;\n    }\n\n    public static long binaryExponentiation(long x,long n)\n    {\n        long result=1;\n        while(n>0)\n        {\n            if(n % 2 ==1)\n                result=result * x;\n            x=x*x;\n            n=n/2;\n        }\n        return result;\n    }\n\n    public static int modularExponentiation(int x,int n,int M)\n    {\n        int result=1;\n        while(n>0)\n        {\n            if(n % 2 ==1)\n                result=(result * x)%M;\n            x=(x*x)%M;\n            n=n/2;\n        }\n        return result;\n    }\n\n    public static long modularExponentiation(long x,long n,long M)\n    {\n        long result=1;\n        while(n>0)\n        {\n            if(n % 2 ==1)\n                result=(result * x)%M;\n            x=(x*x)%M;\n            n=n/2;\n        }\n        return result;\n    }\n\n    public static int modInverse(int A,int M)\n    {\n        return modularExponentiation(A,M-2,M);\n    }\n\n    public static long modInverse(long A,long M)\n    {\n        return modularExponentiation(A,M-2,M);\n    }\n\n    public static boolean isPrime(int n)\n    {\n\n        if (n <= 1)  return false;\n        if (n <= 3)  return true;\n\n        if (n%2 == 0 || n%3 == 0)\n            return false;\n\n        for (int i=5; i*i<=n; i=i+6)\n        {\n            if (n%i == 0 || n%(i+2) == 0)\n                return false;\n        }\n\n        return true;\n    }\n\n    static class pair implements Comparable<pair>\n    {\n        Integer x, y;\n        pair(int x,int y)\n        {\n            this.x=x;\n            this.y=y;\n        }\n\n        public int compareTo(pair o) {\n            int result = -x.compareTo(o.x);\n            if(result==0)\n                result = y.compareTo(o.y);\n\n            return result;\n        }\n\n        public String toString()\n        {\n            return x+\" \"+y;\n        }\n\n        public boolean equals(Object o)\n        {\n            if (o instanceof pair)\n            {\n                pair p = (pair)o;\n                return (Math.abs(p.x-x)==0 && Math.abs(p.y-y)==0);\n            }\n            return false;\n        }\n\n        public int hashCode()\n        {\n            return new Long(x).hashCode()*31 + new Long(y).hashCode();\n        }\n    }\n}"
        },
        {
            "language": 3,
            "solution": "'''\n    Auther: ghoshashis545 Ashis Ghosh\n    College: jalpaiguri Govt Enggineering College\n\n'''\nfrom os import path\nimport sys\nfrom heapq import heappush,heappop\nfrom functools import cmp_to_key as ctk\nfrom collections import deque,defaultdict as dd\nfrom bisect import bisect,bisect_left,bisect_right,insort,insort_left,insort_right\nfrom itertools import permutations\nfrom datetime import datetime\nfrom math import ceil,sqrt,log,gcd\ndef ii():return int(input())\ndef si():return input().rstrip()\ndef mi():return map(int,input().split())\ndef li():return list(mi())\nabc='abcdefghijklmnopqrstuvwxyz'\n# mod=1000000007\nmod=998244353\ninf = float(\"inf\")\nvow=['a','e','i','o','u']\ndx,dy=[-1,1,0,0],[0,0,1,-1]\n\ndef bo(i):\n    return ord(i)-ord('a')\n\n\n\n\n    \ndef solve():\n\n    \n    for _ in range(ii()):\n\n        n,k = mi()\n        s = si()\n\n        a = []\n        c = 0\n        ans = 0\n\n        if s[0] == 'W':\n            a.append(0)\n            ans += 1\n        else:\n            c += 1\n\n        for i in range(1,n):\n            if s[i] == 'W':\n\n                if c > 0:\n                    a.append(c)\n                c = 0\n                if s[i-1] == 'W':\n                    ans += 2\n                else:\n                    ans += 1\n            else:\n                c += 1\n        \n        a.append(c)\n\n        if len(a) >= 2:\n\n            b = a[1:]\n            b.pop()\n            b.sort()\n\n            for i in b:\n                if i > k:\n                    ans += 2*k\n                    k = 0\n                    break\n                else:\n                    ans += 2*i\n                    ans += 1\n                    k -= i\n\n        if(ans == 0):\n            ans -= 1\n        x = min(k,a[0])\n        ans += 2*x\n        k -= x\n        x = min(k,a[-1])\n        ans += 2*x\n\n        if n == 1:\n            ans = min(ans,1)\n        print(max(ans,0))\n\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n        \nif __name__ ==\"__main__\":\n\n    \n    if path.exists('input.txt'):\n        sys.stdin=open('input.txt', 'r')\n        sys.stdout=open('output.txt','w')\n    else:\n        input=sys.stdin.readline\n    solve()"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAX = numeric_limits<int>::max();\nconst int MIN = numeric_limits<int>::min();\nconst long long mod = 1e9 + 7;\nconst int N = 100010;\nvoid FastRead() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n}\ninline char Nowchar() {\n  static char buf[1 << 20], *p1 = buf, *p2 = buf;\n  bool flag =\n      (p1 == p2) && (p2 = (p1 = buf) + fread(buf, 1, 1 << 20, stdin), p1 == p2);\n  return flag ? EOF : *p1++;\n}\ninline int Read() {\n  int x = 0, f = 1;\n  static char c = Nowchar();\n  for (; c > '9' || c < '0'; c = Nowchar()) {\n    if (c == '-') f = -1;\n  }\n  for (; c <= '9' && c >= '0'; c = Nowchar()) {\n    x = (x << 3) + (x << 1) + c - 48;\n  }\n  return x * f;\n}\nvoid Test() { return; }\nvoid Solve() {\n  int t;\n  cin >> t;\n  while (t--) {\n    int n, k;\n    cin >> n >> k;\n    vector<int> a;\n    string s;\n    cin >> s;\n    int lwp = -2;\n    int ans = 0, cnt = 0;\n    for (int i = 0; i < n; i++) {\n      if (s[i] == 'W') {\n        if (lwp != i - 1 && lwp >= 0) {\n          a.push_back(i - lwp - 1);\n        }\n        ans += (lwp == i - 1) + 1;\n        lwp = i;\n        cnt++;\n      }\n    }\n    k = min(n - cnt, k);\n    ans += 2 * k;\n    if (lwp < 0) {\n      if (k > 0) {\n        ans--;\n      }\n    } else {\n      sort(a.begin(), a.end());\n      for (auto x : a) {\n        if (k >= x) {\n          ans++;\n          k -= x;\n        }\n      }\n    }\n    cout << ans << endl;\n  }\n}\nint main(int argc, char** argv) {\n  Solve();\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor _ in range(t):\n    n,k=list(map(int,input().split()))\n    s=list(input())\n    mode=0\n    ls=[]\n    count=0\n    for i in range(n):\n        if(s[i]=='W'):\n            if(mode==1):\n                if(count!=0):\n                    ls.append(count)\n            mode=1\n            count=0\n        else:\n            count+=1\n    ls.sort()\n    sum=0\n    prev='L'\n    for i in range(n):\n        if(s[i]=='W'):\n            if(prev=='W'):\n                sum+=2\n            else:\n                sum+=1\n        prev=s[i]\n    for x in ls:\n        if(x<=k):\n            k-=x\n            sum+=2*x+1\n        else:\n            sum+=2*k\n            k=0\n    count=0\n    for i in range(n):\n        if(s[i]=='L'):\n            count+=1\n        else:\n            break\n    for i in reversed(range(n)):\n        if(s[i]=='L'):\n            count+=1\n        else:\n            break\n    if(count==2*n):\n        sum+=max(2*min(k,n)-1,0)\n    else:\n        sum+=2*min(k,count)\n    \n    # print(ls)\n    print(sum)"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.math.*;\nimport java.security.*;\nimport java.text.*;\nimport java.util.*;\nimport java.util.concurrent.*;\nimport java.util.regex.*;\nimport java.util.Arrays;\nimport java.util.ArrayList;\nimport java.lang.Math; \nimport java.util.Arrays;\nimport java.util.Comparator;\n \n \n \npublic class Main \n{ \n    static class FastReader \n    { \n        BufferedReader br; \n        StringTokenizer st; \n  \n        public FastReader() \n        { \n            br = new BufferedReader(new\n                     InputStreamReader(System.in)); \n        } \n  \n        String next() \n        { \n            while (st == null || !st.hasMoreElements()) \n            { \n                try\n                { \n                    st = new StringTokenizer(br.readLine()); \n                } \n                catch (IOException  e) \n                { \n                    e.printStackTrace(); \n                } \n            } \n            return st.nextToken(); \n        } \n  \n        int nextInt() \n        { \n            return Integer.parseInt(next()); \n        } \n  \n        long nextLong() \n        { \n            return Long.parseLong(next()); \n        } \n  \n        double nextDouble() \n        { \n            return Double.parseDouble(next()); \n        } \n        \n  \n        String nextLine() \n        { \n            String str = \"\"; \n            try\n            { \n                str = br.readLine(); \n            } \n            catch (IOException e) \n            { \n                e.printStackTrace(); \n            } \n            return str; \n        } \n\n        \n    } \n\n   \n\n    static int binarySearch(int a[] ,int k,int l,int h){\n        \n        while(l<=h){\n         int mid = (l+h)/2;\n         if(a[mid]==k) return mid;\n         else if(a[mid]>k) h=mid-1;\n         else if(a[mid]<k) l=mid+1;\n        }\n        \n        return -1;\n    }\n\n    static int binarySearch(ArrayList<Integer> a ,int k,int l,int h){\n        \n        while(l<=h){\n         int mid = (l+h)/2;\n         if(a.get(mid)==k) return mid;\n         else if(a.get(mid)>k) h=mid-1;\n         else if(a.get(mid)<k) l=mid+1;\n        }\n        \n        return -1;\n    }\n\n    static String reverse(String input)  \n    { \n        char[] a = input.toCharArray(); \n        int l, r = 0; \n        r = a.length - 1; \n  \n        for (l = 0; l < r; l++, r--) \n        { \n            // Swap values of l and r  \n            char temp = a[l]; \n            a[l] = a[r]; \n            a[r] = temp; \n        } \n        return String.valueOf(a); \n    } \n\n   \n    \n    static int gcd(int a, int b) \n    { \n        // Everything divides 0  \n        if (a == 0) \n          return b; \n        if (b == 0) \n          return a; \n       if (a == b) \n            return a; \n       if (a > b) \n            return gcd(a-b, b); \n        return gcd(a, b-a); \n    } \n\n    static int lcm(int a, int b) \n    { \n        return (a*b)/gcd(a, b); \n    } \n\n    static int solve(int A, int B) \n    { \n    int count = 0; \n    for (int i = 0; i < 21; i++) { \n        if (((A >> i) & 1) != ((B >> i) & 1)) { \n            count++; \n        } \n     } \n  \n      return count;\n    } \n\n    static long nCr(int n, int r) \n    { \n    return fact(n) / (fact(r) * \n    fact(n - r)); \n    } \n        \n        \n    static long fact(int n) \n    { \n    long res = 1; \n    for (int i = 2; i <= n; i++) \n    res = res * i; \n    return res; \n    } \n        \n    public static long count(long k) {\n    return k * (k - 1) / 2;\n    }\n\n    static boolean isPrime(int n) { \n            // if(n==1) return false; \n    if(n==2) return true;\n    if (n%2==0) return false; \n    \n    int l = (int)Math.sqrt(n);\n    for(int i=3;i<=l;i+=2) { \n        if(n%i==0) \n        return false; \n    } \n    return true; \n    }\n\n    static int negMod(int n){\n    int a = (n % 1000000007 + 1000000007) % 1000000007;\n    return a;\n    }\n        \n\n    public static int sum(long x) {\n    int sum = 0;\n    while (x > 0) {\n    sum += x % 10;\n    x /= 10;\n    }\n    return sum;\n    }\n    \n\n    public static int max(int x, int y, int z)\n    {\n        return (int)Math.max(Math.max(x, y), z);\n    }\n    \n    \n    public static int min(int x, int y, int z)\n    {\n        return (int)Math.min(Math.min(x, y), z);\n    }\n    \n    \n\n   static  void  bipartite(int n,int c,int color[]){\n     visited[n] = 1;\n     color[n] = c;\n     \n     Iterator<Integer> i = adj.get(n).listIterator(); \n        while (i.hasNext()) \n        { \n            int a = i.next(); \n            if (visited[a]==0) \n            bipartite(a,c^1,color); \n        } \n   }\n   \n    static double distance(int x,int y,int r1,int r2){\n        double ans = Math.sqrt((x-r1)*(x-r1) + (y-r2)*(y-r2));\n        return ans;\n    }  \n    \n        static int divisors(int n) \n    { \n        int count = 0;\n        for (int i=1; i<=Math.sqrt(n); i++) \n        { \n            if (n%i==0) \n            { \n                \n                if (n/i == i) \n                    count += 1; \n       \n                else // Otherwise print both \n                    count +=2; \n            } \n        } \n        return count;\n    } \n    \n    static ArrayList<ArrayList<Integer>> adj = new  ArrayList<ArrayList<Integer>>();\n    static int visited[] = new int[100002];\n\n    static void addEdge(int u, int v) \n        { \n        adj.get(u).add(v); \n        adj.get(v).add(u); \n        } \n\n    static void dfs(int a){\n            visited[a] = 1;\n            \n            Iterator<Integer> i = adj.get(a).listIterator(); \n            \n             while (i.hasNext()) \n             { \n                 int n = i.next(); \n                 if (visited[n]==0) {\n                     \n                     dfs(n); \n                 }\n                    \n             }\n             \n    }\n    \n    static boolean dfscycle(int node , int parent){\n           visited[node] = 1;\n           \n          \n           Iterator<Integer> i = adj.get(node).listIterator(); \n            \n             while (i.hasNext()) \n             { \n                 int n = i.next(); \n                 if (visited[n]==0) {\n                     \n                    if(dfscycle(n,node) == true) return true;\n                 }\n                 else if(n!=parent) return true;\n                 \n             }\n\n         return false;\n    }\n\n    static int mod=1000003;\n    static long m=1073741824;\n    \n    \n    \n    public static void main(String[] args) throws Exception \n    {   \n        \n        OutputStream outputStream = System.out;\n        FastReader sc = new FastReader();\n        PrintWriter w = new PrintWriter(outputStream);\n        // Scanner sc = new Scanner(new File(\"input.txt\"));\n        // PrintWriter out = new PrintWriter(new File(\"output.txt\"));\n\n        int i,j=0;\n         \n        int t = sc.nextInt();\n        \n        while(t>0){\n        int n = sc.nextInt();\n        int k = sc.nextInt();\n        String s = sc.next();\n        ArrayList<Integer> gaps = new ArrayList();\n        int win = 0, loss = 0,lossStreak = 0,score = 0;\n        int prevwin = 0;\n        boolean winocc = false;\n\n        for(i=0;i<n;i++){\n          if(s.charAt(i)=='L' && winocc == false) {\n              loss++;\n          }\n          else if(s.charAt(i)=='L' ){\n              lossStreak++;\n              loss++;\n              prevwin = 0;\n          }\n          else if(s.charAt(i)=='W'){\n              win++;\n              winocc = true;\n              if(lossStreak>0) {gaps.add(lossStreak); lossStreak=0;}\n              if(prevwin == 0) score +=1;\n              else score+=2;\n\n              prevwin = 1;\n              \n          }\n        }\n       \n        \n        if(win + k >=n) w.println(2*n - 1);\n        else{\n            if(!winocc && k > 0)\n            {\n               score = score + 1;\n               k = k-1;\n               loss = loss-1;\n            }\n           Collections.sort(gaps);\n           int l = gaps.size();\n           i=0;\n           while(i < l && gaps.get(i) <= k)\n           {  \n              \n              score = score +2*gaps.get(i)+1;\n              k = k - gaps.get(i);\n              loss = loss-gaps.get(i);\n              \n              i++;\n           }\n\n           score += 2*Math.min(loss,k);\n           w.println(score);\n        }\n\n       \n        t--;\n        }\n        w.close();\n    }\n    \n    \n   \n     \n           \n}\n        \n        \n    \n\n       \n\n\n\n\n// System.out.println();\n\n        \n    \n    \n\n"
        },
        {
            "language": 3,
            "solution": "# B. \u0428\u0430\u0445\u043c\u0430\u0442\u043d\u044b\u0439 \u043c\u043e\u0448\u0435\u043d\u043d\u0438\u043a https://codeforces.com/contest/1427/problem/B\n\nimport sys\n# sys.stdin = open('20201010-b.txt', encoding='utf-8')\ninput = sys.stdin.readline\n\nfor _ in range(int(input())):\n    n, k = map(int, input().split())\n    a = input().rstrip()\n\n    c = a.count('L')\n    k = min(k, c)\n    # \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0447\u043a\u043e\u0432 \u043d\u0430 \u0434\u0430\u043d\u043d\u044b\u0439 \u043c\u043e\u043c\u0435\u043d\u0442\n    out = sum(\n        2 if (i > 0 and a[i-1] == 'W') else 1\n        for i, v in enumerate(a)\n        if v == 'W'\n    ) \n    if k == 0:\n        print(out)\n        continue\n\n    # \u0435\u0441\u043b\u0438 \u043d\u0435\u0442 \u043f\u043e\u0431\u0435\u0434\n    if out == 0:\n        out -= 1\n    out += k * 2\n    # \u0435\u0441\u043b\u0438 \u0433\u0434\u0435-\u0442\u043e \u0437\u0430\u043f\u043e\u043b\u043d\u044f\u0442\u0441\u044f \u043f\u0440\u043e\u043c\u0435\u0436\u0443\u0442\u043a\u0438 \u043c\u0435\u0436\u0434\u0443 W \u0442\u043e \u043f\u043b\u044e\u0441 1 \u043e\u0447\u043a\u043e\n    # \u0431\u0435\u0437 \u043d\u0430\u0447\u0430\u043b\u0430 \u0438 \u043a\u043e\u043d\u0446\u0430 \u0441\u0442\u0440\u043e\u043a\u0438\n    temp = sorted(len(v) for v in a.split('W')[1:-1] if v)\n    for v in temp:\n        if v <= k:\n            out += 1\n            k -= v\n        else:\n            break\n\n    print(out)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long mod = 1000000007;\nconst long long N = 1000005;\nvoid solve() {\n  long long n, k;\n  cin >> n >> k;\n  string s;\n  cin >> s;\n  long long ans = 0;\n  for (long long i = 0; i < n; i++) {\n    if (s[i] == 'W') ans++;\n  }\n  ans = min(ans + k, n);\n  ans = ans * 2;\n  long long streak = 0;\n  vector<long long> v;\n  long long x = -1;\n  long long y = -1;\n  for (long long i = 0; i < n; i++)\n    if (s[i] == 'W') {\n      x = i;\n      break;\n    }\n  for (long long i = n - 1; i >= 0; i--)\n    if (s[i] == 'W') {\n      y = i;\n      break;\n    }\n  if (x == -1 || y == -1) {\n    k = min(k, n);\n    cout << max(2 * k - 1, 0LL) << \"\\n\";\n    return;\n  }\n  for (long long i = x; i < y + 1; i++) {\n    if (s[i] == 'W') continue;\n    long long cnt = 0;\n    while (i < n && s[i] == 'L') {\n      cnt++;\n      i++;\n    }\n    v.push_back(cnt);\n  }\n  for (long long i = 0; i < n; i++) {\n    if (s[i] == 'L') continue;\n    streak++;\n    long long cnt = 0;\n    while (i < n && s[i] == 'W') {\n      i++;\n    }\n  }\n  sort((v).begin(), (v).end());\n  long long sum = 0;\n  long long cc = 0;\n  for (auto i : v) {\n    if (k >= i) {\n      k -= i;\n      cc++;\n    } else\n      break;\n  }\n  cout << max(ans - max(1LL, streak - cc), 0LL) << \"\\n\";\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  int t;\n  cin >> t;\n  while (t--) solve();\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys,math\nN=int(input())\nfor i in range(N):\n    n,c=list(map(int,sys.stdin.readline().strip().split()))\n    g_arr=list(sys.stdin.readline().strip())\n    l_arr=[]\n    l,r=-1,-1\n    g_arr.append('W')\n    for i in range(n+1):\n        if g_arr[i]=='L' and l==-1:\n            l=i\n        if g_arr[i]=='W'and l>-1:\n            r=i-1\n            l_arr.append((l,r))\n            l,r=-1,-1\n    g_arr.pop()\n    l_arr.sort(key=lambda a:a[1]-a[0] if (a[0]>0 and a[1]<n-1) else math.inf)\n    # print(l_arr)\n    for i in l_arr:\n        if i[0]==0:\n            j=i[1]\n            while j>=i[0] and c>0:\n                g_arr[j]='W'\n                c-=1\n                j-=1\n        else:\n            j=i[0]\n            while j<=i[1] and c>0:\n                g_arr[j]='W'\n                c-=1\n                j+=1\n        if c==0:\n            break\n    # print(g_arr)\n    pts,w_pt=0,1\n    for i in range(n):\n        if g_arr[i]=='W':\n            pts+=w_pt\n            if w_pt==1:\n                w_pt=2\n        else:\n            if w_pt==2:\n                w_pt=1\n    print(pts)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nbool static cmp(long long int a, long long int b) { return a > b; }\nint main() {\n  int test;\n  cin >> test;\n  while (test--) {\n    long long int n, l;\n    cin >> n >> l;\n    string ip;\n    cin >> ip;\n    long long int sum = 0;\n    long long int lose = 0;\n    vector<long long int> w;\n    for (int i = 0; i < n; i++)\n      if (ip[i] == 'L')\n        ++lose;\n      else\n        w.push_back(i);\n    if (l >= lose) {\n      sum = 1 + 2 * (n - 1);\n      cout << sum << endl;\n      continue;\n    } else if (lose == n && l) {\n      sum = 1 + 2 * (l - 1);\n      cout << sum << endl;\n      continue;\n    }\n    sum = ip[0] == 'W' ? 1 : 0;\n    for (int i = 1; i < n; i++) {\n      if (ip[i] == 'W') {\n        if (ip[i - 1] == 'W')\n          sum += 2;\n        else\n          sum += 1;\n      }\n    }\n    if (l == 0) {\n      cout << sum << endl;\n      continue;\n    }\n    long long int start = 0;\n    vector<long long int> gp;\n    if (w[0] != 0) start = w[0];\n    if (w[w.size() - 1] != n - 1) start += n - w[w.size() - 1];\n    for (int i = 1; i < w.size(); i++) {\n      long long int gap = w[i] - w[i - 1] - 1;\n      if (gap == 0) continue;\n      gp.push_back(gap);\n    }\n    sort(gp.begin(), gp.end());\n    int i = 0;\n    while (l > 0 && i < gp.size()) {\n      if (l >= gp[i]) {\n        l -= gp[i];\n        sum += 2 * gp[i] + 1;\n      } else {\n        sum += 2 * l;\n        l = 0;\n      }\n      ++i;\n    }\n    if (l > 0 && start > 0) {\n      int g = min(l, start);\n      sum += 2 * g;\n    }\n    cout << sum;\n    cout << endl;\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n, k = map(int, input().split())\n    s = input()\n    if s.count('W') == n:\n        print(2 * n - 1)\n    elif s.count('L') == n:\n        print(max(2 * k - 1, 0))\n    else:\n        score = 0\n        if s[0] == 'W':\n            score += 1\n        for i in range(1, n):\n            if s[i] == s[i - 1] == 'W':\n                score += 2\n            elif s[i] == 'W':\n                score += 1\n        # print(\"score\", score)\n\n        left = 0\n        right = n - 1\n        while left < n and s[left] == 'L':\n            left += 1\n        while right >= 0 and s[right] == 'L':\n            right -= 1\n        left_dist = left\n        right_dist = n - right - 1\n        s = s[left + 1: right]\n        s = s.split('W')\n        # print(s)\n        s = [len(line) for line in s if line]\n        s.sort(reverse=True)\n        while s and s[-1] <= k:\n            score += s[-1] * 2 + 1\n            k -= s[-1]\n            s.pop()\n        score += k * 2\n\n        print(min(score, 2 * n - 1))\n\n\n\n\n\n\n\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nbool comp(pair<int, int> a, pair<int, int> b) {\n  int diff1 = a.second - a.first + 1, diff2 = b.second - b.first + 1;\n  if (diff1 < diff2) {\n    return 1;\n  } else if (diff1 == diff2) {\n    return a.second > b.second;\n  }\n  return 0;\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  ;\n  int t;\n  cin >> t;\n  while (t--) {\n    int n, k;\n    cin >> n >> k;\n    string s;\n    cin >> s;\n    int first = 0, last = 0;\n    for (int i = 0; i < n; i++) {\n      if (s[i] == 'W') {\n        break;\n      }\n      first++;\n    }\n    for (int i = n - 1; i >= 0; i--) {\n      if (s[i] == 'W') {\n        break;\n      }\n      last++;\n    }\n    int start = first + 1, end;\n    vector<pair<int, int>> v;\n    for (int i = first + 1; i < n - last; i++) {\n      if (s[i] == 'W') {\n        v.push_back({start, i - 1});\n        start = i + 1;\n      }\n    }\n    sort(v.begin(), v.end(), comp);\n    for (auto it : v) {\n      if (k == 0) {\n        break;\n      }\n      for (int i = it.first; i <= it.second and k > 0; i++) {\n        s[i] = 'W';\n        k--;\n      }\n    }\n    for (int i = n - last; i < n and k > 0; i++) {\n      s[i] = 'W';\n      k--;\n    }\n    for (int i = first - 1; i >= 0 and k > 0; i--) {\n      s[i] = 'W';\n      k--;\n    }\n    int ans = (s[0] == 'W');\n    for (int i = 1; i < n; i++) {\n      if (s[i] == 'L') {\n        continue;\n      }\n      if (s[i] == 'W') {\n        ans++;\n      }\n      if (s[i - 1] == 'W') {\n        ans++;\n      }\n    }\n    cout << ans << '\\n';\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    int n, k;\n    cin >> n >> k;\n    char arr[n];\n    int score = 0;\n    char last = 'O';\n    int gapLen = 0;\n    int startGap = 0;\n    int endGap = 0;\n    vector<int> gaps;\n    for (int i = 0; i < n; i++) {\n      cin >> arr[k];\n      if (arr[k] == 'W' && last == 'W')\n        score += 2;\n      else if (arr[k] == 'W' && last == 'L' && score > 0) {\n        score++;\n        gaps.push_back(gapLen);\n        gapLen = 0;\n      } else if (arr[k] == 'W' && last == 'L' && score == 0) {\n        score++;\n        startGap = gapLen;\n        gapLen = 0;\n      } else if (arr[k] == 'W' && last == 'O')\n        score++;\n      else if (arr[k] == 'L')\n        gapLen++;\n      last = arr[k];\n    }\n    endGap = gapLen;\n    sort(gaps.begin(), gaps.end());\n    for (int i = 0; i < gaps.size(); i++) {\n      if (k > gaps[i]) {\n        k -= gaps[i];\n        score += 3 + 2 * (gaps[i] - 1);\n      } else if (k == gaps[i]) {\n        score += 3 + 2 * (gaps[i] - 1);\n        k = 0;\n        break;\n      } else {\n        score += 2 * k;\n        k = 0;\n        break;\n      }\n    }\n    if (k > 0 && score != 0) {\n      int restGap = startGap + endGap;\n      if (k >= restGap) {\n        score += 2 * restGap;\n      } else {\n        score += 2 * k;\n      }\n    } else if (k > 0 && score == 0) {\n      score += 1 + 2 * (k - 1);\n    }\n    cout << score << endl;\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e5 + 2;\nint n, t, k, res;\nchar a[N];\npriority_queue<int, vector<int>, greater<int> > pq;\nvoid inp() {\n  scanf(\"%d %d\", &n, &k);\n  scanf(\"%s\", a + 1);\n}\nvoid proc() {\n  res = 0;\n  int cnt = 0, dem1 = 0, dem2 = 0;\n  for (int i = (1), _y = (n); i <= _y; ++i) {\n    if (a[i] != 'L') {\n      if (!res)\n        dem1 = cnt;\n      else {\n        if (cnt) pq.push(cnt);\n      }\n      cnt = 0;\n      ++res;\n      if (a[i - 1] == 'W') ++res;\n    } else\n      ++cnt;\n  }\n  if (a[n] == 'L') dem2 = cnt;\n  while (!pq.empty() && k) {\n    if (pq.top() > k)\n      res += 2 * k, k = 0;\n    else\n      k -= pq.top(), res += 2 * pq.top() + 1;\n    pq.pop();\n  }\n  while (!pq.empty()) pq.pop();\n  if (dem1 > dem2) swap(dem1, dem2);\n  if (dem2 == n) {\n    res = (min(dem2, k) - 1) * 2 + 1;\n    res = max(res, 0);\n    printf(\"%d\\n\", res);\n    return;\n  }\n  if (dem2) {\n    if (k >= dem2) {\n      k -= dem2 - 1, res += 2 * (dem2 - 1);\n      dem2 = 1;\n    } else {\n      res += (k - 1) * 2;\n      dem2 -= k - 1, k = 1;\n    }\n    if (dem1) {\n      if (k >= dem1) {\n        k -= dem1 - 1, res += 2 * (dem1 - 1);\n        dem1 = 1;\n      } else {\n        res += (k - 1) * 2;\n        dem1 -= k - 1, k = 1;\n      }\n    }\n  }\n  if (dem1 && k) --k, res += 2;\n  if (dem2 && k) --k, res += 2;\n  printf(\"%d\\n\", res);\n}\nint main() {\n  scanf(\"%d\", &t);\n  for (int i = (1), _y = (t); i <= _y; ++i) {\n    inp();\n    proc();\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "def find_consecutive_lose_rounds(match_log):\n    lose_sections_length=[]\n    start_winning=False\n    length=0\n    original_point=0\n\n    for i in range(len(match_log)):\n        char=match_log[i]     \n        if char==\"L\":\n            length+=1\n            start_winning=False            \n        else:\n            if start_winning:\n                original_point+=2\n            else:\n                original_point+=1 \n                if length>0:\n                    lose_sections_length.append(length)              \n            start_winning=True\n            length=0\n    return lose_sections_length,original_point\n\n\ndef remove_head_tail_losing_streak(match_log):\n    head_length=0\n    tail_length=0\n    head_tail_length=0\n    is_full_loses=False\n    for i in range(len(match_log)):\n        if match_log[i]==\"W\":\n            match_log=match_log[i:]\n            head_length=i\n            break\n        if i == len(match_log)-1:\n            is_full_loses=True\n            return match_log,head_tail_length,is_full_loses\n    for j in range(len(match_log)-1,-1,-1):\n        if match_log[j]==\"W\":\n            tail_length=len(match_log)-j-1\n            match_log=match_log[:j+1]           \n            break\n    head_tail_length=head_length+tail_length\n    return match_log,head_tail_length,is_full_loses\n        \n    \n    \ndef find_optimal_cheat_points(head_tail_length,lose_sections_length,cheat_times):\n    cheat_points=0\n    lose_sections_length=sorted(lose_sections_length)\n    for lose_section_length in lose_sections_length:\n        if cheat_times<lose_section_length:\n            cheat_points+=cheat_times*2\n            cheat_times=0\n            return cheat_points\n        cheat_points+=((lose_section_length-1)*2+3)\n        cheat_times-=lose_section_length\n    if cheat_times>0:\n        cheat_points+=min(cheat_times,head_tail_length)*2\n    return cheat_points        \n\ndef catch_all_lose_exception(match_log,cheat_times):\n    if cheat_times==0:\n        return 0\n    return (min(len(match_log),cheat_times)-1)*2+1\n\ntest_amount=int(input())\nfor i in range(test_amount):\n    rounds,cheat_times=tuple(map(int,input().split()))\n    match_log=input()\n    head_tail_length=0\n    match_log,head_tail_length,is_full_loses=remove_head_tail_losing_streak(match_log)\n    if is_full_loses:\n        print(catch_all_lose_exception(match_log,cheat_times))\n    else:\n        lose_sections_length,original_points=find_consecutive_lose_rounds(match_log)\n        print(find_optimal_cheat_points(head_tail_length,lose_sections_length,cheat_times)+original_points)\n        \n    \n    "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long a, b, c[300200], d[300200], n, m, k, r, l, t, q;\nlong long ans, ans2, ans3, sum, sum2, mx = -1e18, mn = 1e18;\nstring second, s1, ss;\nbool ch, ch2, ch3, ch4;\nint was[200200];\nset<int> st;\nvector<int> vv;\npair<int, int> p[300200];\nvector<pair<int, int> > v[200200];\nmap<string, int> ma;\ndouble bo[200][200], g;\nconst int inf = 1e9, mod = 1e9 + 7, N = 1e6 + 7;\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  cin >> t;\n  while (t--) {\n    cin >> n >> k;\n    cin >> second;\n    ans = 0;\n    q = -1;\n    for (int i = 0; i < second.size(); i++) {\n      if (second[i] == 'W') {\n        if (q != -1) {\n          v[i - q - 1].push_back(make_pair(q, i));\n          st.insert(i - q - 1);\n          if (q + 1 == i) {\n            ans += 2;\n          } else\n            ans++;\n        } else\n          ans++;\n        q = i;\n      }\n    }\n    if (q != -1) q = 0;\n    for (int i = 1; i <= k; i++) {\n      for (int j = 0; j < v[i].size(); j++) {\n        if (i <= k) {\n          for (int l = v[i][j].first + 1; l < v[i][j].second; l++) {\n            second[l] = 'W';\n          }\n          k -= i;\n          ans += i * 2 + 1;\n        } else\n          break;\n      }\n    }\n    for (int i = 0; i < n; i++) {\n      if (second[i] == 'L') {\n        if (k >= 1) {\n          if (q != -1)\n            ans += 2;\n          else\n            ans++, q = 1;\n          k--;\n        } else\n          break;\n      }\n    }\n    cout << ans << '\\n';\n    for (auto it : st) {\n      v[it].clear();\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "def recal(l, n, k):\n    result = 0\n    cur = []\n    last_lose = 0\n    dex = 0\n    have_win = False\n    for i in l:\n        if i == 'W':\n            if last_lose == 0:\n                if have_win:\n                    result += 2\n                else:\n                    result += 1\n                    have_win = True\n            else:\n                result += 1\n                cur += [last_lose]\n                last_lose = 0\n        else:\n            if have_win:\n                last_lose += 1\n            else:\n                dex += 1\n\n    if last_lose:\n        dex += last_lose\n    #print(result)\n    #print(cur)\n    #print(dex)\n    cur.sort(reverse = True)\n    #print(cur)\n    while cur and k >= cur[-1]:\n        result += (cur[-1] * 2 + 1)\n        k -= cur[-1]\n        cur.pop()\n        #print('HERE')\n    #print(k)\n    if cur:\n        dex += sum(cur)\n    if k != 0:\n        if have_win:\n            result += min(dex, k) * 2\n        else:\n            result += min(dex, k) * 2 - 1\n    print(result)\n    #print()\n\nt = int(input())\nwhile t > 0:\n\n    n, k = map(int, input().split())\n    l = input()\n    recal(l, n, k)\n\n    t -= 1\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class Main {\n\n    static class Node {\n        int start ,end ,score;\n        Node (int start) { this.start = start; }\n        void setEnd (int end) {\n            this.end = end;\n            this.score = 2*(end - start + 1) - 1;\n        }\n    }\n    static int optimalScore (char[] arr ,int k) {\n        int computedScore = 0 ,s = 0 ,e = arr.length - 1 ,left = 0;\n        while (s <= e && arr[s] == 'L') {\n            left++;\n            s++;\n        }\n        while (e >= s && arr[e] == 'L') {\n            left++;\n            e--;\n        }\n        if (left == arr.length)\n            return (k > 0) ? (2*k - 1) : 0;\n        int[] pref = new int[k];\n        for (int i = s; i <= e; i++) {\n            if (arr[i] == 'W') {\n                Node component = new Node(i);\n                while (i < e && arr[i + 1] == 'W')\n                    i++;\n                component.setEnd(i);\n                computedScore += component.score;\n            }\n            else {\n                int j = i;\n                while (arr[i + 1] == 'L')\n                    i++;\n                if (k > (i - j))   pref[i - j]++;\n                else    left += i - j + 1;\n            }\n        }\n        if (k == 0)\n            return computedScore;\n        for (int i = 0; i < pref.length; i++) {\n            if (pref[i] == 0)   continue;\n            if (k >= pref[i] * (i + 1)) {\n                computedScore += pref[i] * (2*(i + 1) + 1);\n                k -= pref[i] * (i + 1);\n            }\n            else {\n                if (k < (i + 1))\n                    computedScore += 2*k;\n                else {\n                    int mod = k % (i + 1);\n                    int n = (k - mod)/(i + 1);\n                    computedScore += n * (2*(i + 1) + 1) + 2*mod;\n                }\n                return computedScore;\n            }\n        }\n        return (k == 0) ? computedScore : computedScore + Math.min(k ,left) * 2;\n    }\n\n    public static void main(String[] args) {\n        Scanner input = new Scanner(System.in);\n        int t = input.nextInt();\n        for (int i = 0; i < t; i++) {\n            int n = input.nextInt();\n            char[] arr = new char[n];\n            int k = input.nextInt();\n            String str = input.next();\n            for (int j = 0; j < n; j++)\n                arr[j] = str.charAt(j);\n            System.out.println(optimalScore(arr ,k));\n        }\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ndouble start_moment = 0;\ndouble get_runtime() { return 1.0 * clock() / CLOCKS_PER_SEC; }\nvoid reset_timer() { start_moment = get_runtime(); }\ndouble timer_time() { return get_runtime() - start_moment; }\nvoid runtime() { cout << fixed << setprecision(5) << get_runtime() << '\\n'; }\ntemplate <class T>\nvoid read(vector<T> &a, long long n) {\n  T x;\n  a.clear();\n  for (long long i = 0; i < n; i++) {\n    cin >> x;\n    a.push_back(x);\n  }\n}\ntemplate <class T>\nvoid write(vector<T> &a) {\n  for (T x : a) cout << x << ' ';\n  cout << '\\n';\n}\nint n, k;\nstring second;\nint main() {\n  ios_base::sync_with_stdio(0);\n  int T;\n  cin >> T;\n  while (T--) {\n    cin >> n >> k;\n    cin >> second;\n    int p1 = 0;\n    int p2 = n - 1;\n    while (p1 < second.size() && second[p1] == 'L') p1++;\n    while (p2 >= 0 && second[p2] == 'L') p2--;\n    if (p1 == second.size()) {\n      for (int i = 0; i < k; i++) {\n        second[i] = 'W';\n      }\n      int res = 0;\n      for (int i = 0; i < n; i++) {\n        if (second[i] == 'W') {\n          if (i && second[i - 1] == 'W') {\n            res += 2;\n          } else {\n            res += 1;\n          }\n        }\n      }\n      cout << res << '\\n';\n      continue;\n    }\n    int cur = 0;\n    int pos = n;\n    vector<pair<int, int> > v;\n    for (int i = p1; i <= p2; i++) {\n      if (second[i] == 'L') {\n        cur++;\n        pos = min(pos, i);\n      } else {\n        v.push_back(make_pair(cur, pos));\n        cur = 0;\n        pos = n;\n      }\n    }\n    sort(v.begin(), v.end());\n    for (int i = 0; i < v.size(); i++) {\n      if (k > 0) {\n        int can = min(k, v[i].first);\n        for (int j = 0; j < can; j++) {\n          second[v[i].second + j] = 'W';\n        }\n        k -= can;\n      }\n    }\n    for (int i = p2; i < n; i++) {\n      if (k && second[i] == 'L') {\n        k--;\n        second[i] = 'W';\n      }\n    }\n    for (int i = p1; i >= 0; i--) {\n      if (k && second[i] == 'L') {\n        k--;\n        second[i] = 'W';\n      }\n    }\n    int res = 0;\n    for (int i = 0; i < n; i++) {\n      if (second[i] == 'W') {\n        if (i && second[i - 1] == 'W') {\n          res += 2;\n        } else {\n          res += 1;\n        }\n      }\n    }\n    cout << res << '\\n';\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <typename T>\nvoid chmin(T &x, const T &y) {\n  if (x > y) x = y;\n}\ntemplate <typename T>\nvoid chmax(T &x, const T &y) {\n  if (x < y) x = y;\n}\nint read() {\n  char c;\n  while ((c = getchar()) < '-')\n    ;\n  if (c == '-') {\n    int x = (c = getchar()) - '0';\n    while ((c = getchar()) >= '0') x = x * 10 + c - '0';\n    return -x;\n  }\n  int x = c - '0';\n  while ((c = getchar()) >= '0') x = x * 10 + c - '0';\n  return x;\n}\nconst int N = 1e5 + 5;\nchar s[N];\nint qw[N], len[N];\nint main() {\n  int tt;\n  cin >> tt;\n  while (tt--) {\n    int n = read(), k = read();\n    scanf(\"%s\", s + 1);\n    int cw = 0;\n    for (int i = 1; i <= n; ++i)\n      if (s[i] == 'W') qw[++cw] = i;\n    if (cw == 0 || k >= qw[cw] - qw[1] - (cw - 1)) {\n      cw = min(cw + k, n);\n      printf(\"%d\\n\", cw ? cw * 2 - 1 : 0);\n    } else {\n      for (int i = 1; i <= cw - 1; ++i) len[i] = qw[i + 1] - qw[i] - 1;\n      sort(len + 1, len + cw);\n      int s = 0, ans = 0;\n      for (int i = 1; i <= cw - 1; ++i)\n        if (s + len[i] <= k) {\n          s += len[i];\n          ++ans;\n        }\n      printf(\"%d\\n\", cw + k * 2 + ans);\n    }\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class codeforces \n{\n    public static void main (String[] args) \n    {\n        FastReader scn = new FastReader();\n        int t = scn.nextInt();\n        // int t = 1;\n        \n        while(t > 0)\n        {\n            int n = scn.nextInt();\n            int k = scn.nextInt();\n\n            String s = scn.nextLine();\n\n            int wins = 0;\n            int loses = 0;\n            for(int i=0; i<n; i++)\n            {\n                if(s.charAt(i) == 'W') wins++;\n                else loses++;\n            }  \n\n            int ans = 0;\n\n            if(k >= loses)\n            {\n                ans = 1 + (2 * (n - 1));\n            }\n            else\n            {\n                if(wins == 0)\n                {\n                    if(k == 0) System.out.println(0);\n                    else System.out.println(2 * k - 1);\n                    \n                    t--;\n                    continue;\n                }\n\n                int newwins = wins + k;\n                int winningstreaks = 0;\n                for(int i=0; i<n; i++)\n                {\n                    if(i == 0)\n                    {\n                        if(s.charAt(i) == 'W') winningstreaks++;\n                    }\n                    else\n                    {\n                        if(s.charAt(i) == 'W' && s.charAt(i - 1) == 'L') winningstreaks++;\n                    }\n                }\n\n                ArrayList<Integer> gaps = new ArrayList<>();\n                int temp = 0;\n                for(int i=0; i<n; i++)\n                {\n                    if(i == 0)\n                    {\n                        if(s.charAt(i) == 'L') temp++;\n                    }\n                    else \n                    {\n                        if(s.charAt(i) == 'L') temp++;\n                        else\n                        {\n                            if(temp == 0) continue;\n\n                            gaps.add(temp);\n                            temp = 0;\n                        }\n                    }\n                }\n\n                if(s.charAt(0) == 'L') gaps.set(0 , Integer.MAX_VALUE);\n                    \n                Collections.sort(gaps);\n            \n            \n                    temp = k;\n                    int idx = 0;\n                    int gapsfilled = 0;\n                    while(temp > 0)\n                    {\n                        if(idx >= gaps.size())\n                        {\n                            break;\n                        } \n                        int cgap = gaps.get(idx);\n                        idx++;\n\n                        if(cgap > temp)\n                        {\n                            break;\n                        }\n                        else\n                        {\n                            gapsfilled++;\n                            temp -= cgap;\n                        }\n                    }\n\n                    ans = 2 * newwins - winningstreaks + gapsfilled;\n                }\n            \n\n            System.out.println(ans);\n            t--;\n        }\n    }\n\n    public static class FastReader \n    { \n        BufferedReader br; \n        StringTokenizer st; \n  \n        public FastReader() \n        { \n            br = new BufferedReader(new\n                     InputStreamReader(System.in)); \n        } \n  \n        String next() \n        { \n            while (st == null || !st.hasMoreElements()) \n            { \n                try\n                { \n                    st = new StringTokenizer(br.readLine()); \n                } \n                catch (IOException  e) \n                { \n                    e.printStackTrace(); \n                } \n            } \n            return st.nextToken(); \n        } \n  \n        int nextInt() \n        { \n            return Integer.parseInt(next()); \n        } \n  \n        long nextLong() \n        { \n            return Long.parseLong(next()); \n        } \n  \n        double nextDouble() \n        { \n            return Double.parseDouble(next()); \n        } \n  \n        String nextLine() \n        { \n            String str = \"\"; \n            try\n            { \n                str = br.readLine(); \n            } \n            catch (IOException e) \n            { \n                e.printStackTrace(); \n            } \n            return str; \n        } \n    }\n}"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.*;\n\npublic class Test {\n\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        int t = in.nextInt();\n        while (t-- > 0) {\n            int n = in.nextInt();\n            int k = in.nextInt();\n            String s = in.next();\n            int L = 0, W = 0, score = 0;\n            List<Integer> l = new ArrayList<>();\n\n            for (int i = 0; i < n; i++) {\n                if (s.charAt(i) == 'L') {\n                    L++;\n                    W = 0;\n                } else {\n                    W++;\n                    if (W == 1) {\n                        score++;\n                    } else {\n                        score += 2;\n                    }\n                    if (L != 0) {\n                        if (L != i) {\n                            l.add(L);\n                        }\n                        L = 0;\n                    }\n                }\n            }\n\n            Collections.sort(l);\n\n            for (int i = 0; i < l.size(); i++) {\n                if (l.get(i) <= k) {\n                    score += l.get(i) * 2 + 1;\n                    k -= l.get(i);\n                } else {\n                    break;\n                }\n            }\n\n            if (score == 0 && k!=0) {\n                score = 2 * k - 1;\n            } else {\n                score += 2 * k;\n            }\n            if (score > (2 * n - 1)) {\n                score = 2 * n - 1;\n            }\n            System.out.println(score);\n\n        }\n\n    }\n\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nbool comparison(const pair<int, int> &a, const pair<int, int> &b) {\n  return a.second < b.second;\n}\nconst long long mod = 1000000007;\nconst int max = 1e6 + 5, inf = 1e9 + 7;\ndouble PI = 3.1415926536;\nint c[100010], s[100010];\nlong long MAX(long long a, long long b) { return a > b ? a : b; }\nlong long int dp[100000 + 7];\nvoid solve() {\n  int N, K;\n  cin >> N >> K;\n  string S;\n  cin >> S;\n  int winning_streaks_cnt = 0;\n  int wins = 0;\n  int losses = 0;\n  vector<int> losing_streaks;\n  for (int i = 0; i < N; i++) {\n    if (S[i] == 'W') {\n      wins++;\n      if (i == 0 or S[i - 1] == 'L') winning_streaks_cnt++;\n    }\n    if (S[i] == 'L') {\n      losses++;\n      if (i == 0 or S[i - 1] == 'W') losing_streaks.push_back(0);\n      losing_streaks.back()++;\n    }\n  }\n  if (K >= losses) {\n    cout << 2 * N - 1 << \"\\n\";\n    return;\n  }\n  if (wins == 0) {\n    if (K == 0)\n      cout << 0 << \"\\n\";\n    else\n      cout << 2 * K - 1 << \"\\n\";\n    return;\n  }\n  if (S[0] == 'L') losing_streaks[0] = 1e8;\n  if (S[N - 1] == 'L') losing_streaks.back() = 1e8;\n  sort(losing_streaks.begin(), losing_streaks.end());\n  wins += K;\n  for (int ls : losing_streaks) {\n    if (ls > K) break;\n    K -= ls;\n    winning_streaks_cnt--;\n  }\n  cout << 2 * wins - winning_streaks_cnt << \"\\n\";\n}\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  int t = 1;\n  cin >> t;\n  while (t--) {\n    solve();\n    cout << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class B {\n    static class Scan {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public Scan() {\n            br = new BufferedReader(new InputStreamReader(System.in));\n        }\n\n        public Scan(String f) {\n            try {\n                br = new BufferedReader(new FileReader(f));\n            } catch (Exception ignored) {\n            }\n        }\n\n        public String next() {\n            if (st == null || !st.hasMoreElements())\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (Exception ignored) {\n                }\n            return st.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        public double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        public String nextLine() {\n            try {\n                return br.readLine();\n            } catch (Exception ignored) {\n                return \"\";\n            }\n        }\n    }\n    public static void main(String[] args) {\n        Scan scan = new Scan();\n        int T = scan.nextInt();\n        for(int t = 0; t < T; t++){\n            int n = scan.nextInt();\n            int k = scan.nextInt();\n            char[] chars = scan.next().toCharArray();\n            int[] arr = new int[n];\n            int lastW = -1;\n            int fW = -1;\n            int numW = 0;\n            PriorityQueue<Integer> pq = new PriorityQueue<>(n+5);\n            int score = 0;\n            for(int i = 0; i < n; i++) {\n                arr[i] = chars[i] == 'L' ? 0:1;\n                numW+=arr[i];\n                if(lastW < 0){\n                    if(arr[i] == 1){\n                        lastW = i;\n                        fW=i;\n                        score=1;\n                    }\n                } else {\n                    if(arr[i] == 1){\n                        pq.add(i-lastW-1);\n                        lastW=i;\n                        if(arr[i-1]==1){\n                            score+=2;\n                        } else score++;\n                    }\n                }\n            }\n            while(!pq.isEmpty() && k>0){\n                int i = pq.poll();\n                if (i<=k && i!=0){\n                    k-=i;\n                    numW+=i;\n                    score+=2*i+1;\n                }\n                if (i>k){\n                    pq.add(i);\n                    break;\n                }\n            }\n            if(numW==0){\n                score=Math.max(2*k-1,0);\n            } else {\n                score+=2*Math.min(n-numW,k);\n            }\n            System.out.println(score);\n        }\n    }\n}"
        },
        {
            "language": 3,
            "solution": "for nt in range(int(input())):\n\tn,k = map(int,input().split())\n\tf = input()\n\tif \"W\" not in f:\n\t\tif k!=0:\n\t\t\tprint (1 + 2*(k-1))\n\t\telse:\n\t\t\tprint (0)\n\t\tcontinue\n\tif f.count(\"L\")<=k:\n\t\tprint (1 + 2*(n-1))\n\t\tcontinue\n\n\ts = f.split(\"W\")\n\tstart, end = s[0], s[-1]\n\ts.pop()\n\ts.pop(0)\n\ts.sort()\n\tans = 0\n\tfor i in s:\n\t\tif len(i)==0:\n\t\t\tcontinue\n\t\tif len(i)<=k:\n\t\t\tans += 2*len(i)+1\n\t\t\tk -= len(i)\n\t\telse:\n\t\t\tans += 2*k\n\t\t\tk = 0\n\tans += k*2\n\n\n\t# print (s, ans)\n\tfor i in range(n):\n\t\tif f[i]==\"W\":\n\t\t\tif i==0 or f[i-1]==\"L\":\n\t\t\t\tans += 1\n\t\t\telse:\n\t\t\t\tans += 2\n\n\tprint (ans)\n\n\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "test_cases=int(input())\nfor test_case in range(test_cases):\n    n,k = list(map(int, input().split()))\n    s = input()\n    countl=1\n    countw=1\n    score=0\n    l=[]\n    w=[]\n    lstart=0\n    if len(s)==1 and k>0:\n        score=1\n    else:\n        for i in range(n-1):\n            if s[i]=='L':\n                if s[i+1]==\"L\":\n                    countl+=1\n                else:\n                    if lstart==0 and w==[]:\n                        lstart=countl\n                        countl=1\n                    else:\n                        l.append(countl)\n                        countl=1\n            else:\n                if s[i+1]==\"W\":\n                    countw+=1\n                else:\n                    w.append(countw)\n                    countw=1\n\n        l.sort()\n        if s[-1]!='W':\n            l.append((countl,'l'))\n            # print(countl)\n        else:\n            w.append(countw)\n        for i in w:\n            score+=(2*i)-1\n        if lstart!=0:\n            l.append((lstart,'s'))\n        # print(score)\n        if w==[]:\n            score=(2*min(l[0][0],k))-1\n            if score<0:\n                score=0\n        else:\n            for i in l:\n                if type(i)==tuple:\n                    x=i[0]\n                    if x<=k:\n                        score+=((2*x))\n                        # print(x,k)\n                        k=k-x\n                    else:\n                        score+=(2*min(x,k))\n                        # print(x,k)\n                        break\n\n                else:\n                    if i<=k:\n                        score+=((2*i)+1)\n                        # print(i,k)\n                        k=k-i\n                    else:\n                        score+=(2*k)\n                        # print(i,k)\n                        break\n\n    print(score)\n\n\n\n\n"
        },
        {
            "language": 1,
            "solution": "for _ in range(input()):\n    n, k = map(int, raw_input().split())\n    s = raw_input()\n    if 'W' in s:\n        L = s.index('W')\n        R = s.rindex('W')\n    else:\n        L, R = 0, 0\n    s = list(s)\n    cur = 0\n    arr = []\n    for i in range(L, R + 1):\n        if s[i] == 'L':\n            cur += 1\n        else:\n            if cur > 0:\n                arr.append([cur, i - 1])\n                cur = 0\n    arr.sort()\n    arr.reverse()\n    while k and arr:\n        s[arr[-1][1]] = 'W'\n        arr[-1][0] -= 1\n        arr[-1][1] -= 1\n        if arr[-1][0] == 0:\n            arr.pop()\n        k -= 1\n    for i in range(n - 2, -1, -1):\n        if k and s[i] == 'L' and s[i + 1] == 'W':\n            s[i] = 'W'\n            k -= 1\n    for i in range(n):\n        if k and s[i] == 'L':\n            s[i] = 'W'\n            k -= 1\n    ans = 0\n    flag = 0\n    for i in s:\n        if i == 'W':\n            if flag:\n                ans += 2\n            else:\n                ans += 1\n                flag = 1\n        else:\n            flag = 0\n    print ans\n\n\n# LLWLWLWWWLWLLWLWWWLWLLWLLWLLLLWLLWWWLWWL"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    int n, k;\n    cin >> n >> k;\n    string s;\n    cin >> s;\n    vector<pair<int, int> > pontes;\n    bool lastW = false;\n    int tam = 0;\n    for (int i = 0; i < n; i++) {\n      if (s[i] == 'W' && !lastW) {\n        lastW = true;\n      } else if (s[i] == 'W' && lastW) {\n        pontes.push_back(make_pair(tam, i));\n        tam = 0;\n      }\n      if (s[i] == 'L' && lastW) {\n        tam++;\n      }\n    }\n    sort(pontes.begin(), pontes.end());\n    long long ans = 0;\n    for (int i = 0; i < pontes.size(); i++) {\n      if (pontes[i].first <= k) {\n        k -= pontes[i].first;\n        for (int j = pontes[i].second - pontes[i].first; j < pontes[i].second;\n             j++) {\n          s[j] = 'W';\n        }\n      } else {\n        break;\n      }\n    }\n    if (k > 0) {\n      for (int i = 1; i < n; i++) {\n        if (k <= 0) {\n          break;\n        }\n        if (s[i - 1] == 'W' && s[i] != 'W') {\n          s[i] = 'W';\n          k--;\n        }\n      }\n    }\n    if (k > 0) {\n      for (int i = n - 2; i >= 0; i--) {\n        if (k <= 0) {\n          break;\n        }\n        if (s[i + 1] == 'W' && s[i] != 'W') {\n          s[i] = 'W';\n          k--;\n        }\n      }\n    }\n    if (k > 0) {\n      for (int i = 0; i < n; i++) {\n        if (k <= 0) break;\n        if (s[i] == 'L') {\n          s[i] = 'W';\n          k--;\n        }\n      }\n    }\n    ans = 0;\n    bool hasW = false;\n    for (int i = 0; i < n; i++) {\n      if (s[i] == 'W' && !hasW) {\n        ans += 1;\n        hasW = true;\n      } else if (s[i] == 'W' && hasW) {\n        ans += 2;\n      }\n      if (s[i] == 'L') {\n        hasW = false;\n      }\n    }\n    cout << ans << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "import os\nimport sys\nfrom atexit import register\nfrom io import BytesIO\nsys.stdin = BytesIO(os.read(0, os.fstat(0).st_size))\nsys.stdout = BytesIO()\nregister(lambda: os.write(1, sys.stdout.getvalue()))\ninput = lambda: sys.stdin.readline().rstrip('\\r\\n')\nfor _ in range(int(input())):\n    n,k = map(int,input().split())\n    \n    ik = k\n    sg = input().strip()\n    gaps = []\n    l = len(sg)\n    wins = 0\n    win_streaks = 0\n    i = 0\n    lcnt = 0\n    temp = 0\n    while i < l:\n        if sg[i] == 'W':\n            break\n        i += 1\n        temp += 1\n    filled_gaps = 0\n    while i < l:\n        if sg[i] == 'W':\n            win_streaks += 1\n            while i < l and sg[i] == 'W':\n                wins += 1\n                i += 1\n        if i < l and sg[i] == 'L':\n            lcnt = 0\n            while i < l and sg[i] == 'L':\n                lcnt += 1\n                i += 1\n            else:\n                if i < l and sg[i] == 'W':\n                    gaps.append(lcnt)\n                else:\n                    temp += lcnt\n    \n    gaps.sort()\n    gap_l = len(gaps)\n    j = 0\n    while  k > 0 and j < gap_l:\n        if gaps[j]  <= k:\n            k -= gaps[j]\n            filled_gaps += 1\n        j += 1\n    if k > 0 and temp > 0 and wins == 0:\n        win_streaks += 1\n    \n    score = 2*(min(wins + ik , l)) - win_streaks + filled_gaps\n    print(score)"
        },
        {
            "language": 3,
            "solution": "import io\nimport os\nimport sys\nimport math\n\n# sys.stdin = open('input.txt', 'r')\n# sys.stdout = open('output.txt', 'w')\n\ninput = sys.stdin.readline\n\n\nT = int(input())\nfor t in range(T):\n\tN, K = map(int, input().split())\n\tS = input().strip()\n\tloss = win = 0\n\n\tstrikes = []\n\tgaps = []\n\tcurrent_win = 0\n\tcurrent_loss = 0\n\tfor i, s in enumerate(S):\n\t\tif s == 'W':\n\t\t\tcurrent_win += 1\n\t\t\twin += 1\n\t\t\tif current_loss:\n\t\t\t\tif len(strikes):\n\t\t\t\t\tgaps.append(current_loss)\n\t\t\t\tcurrent_loss = 0\n\t\telse:\n\t\t\tcurrent_loss += 1\n\t\t\tloss += 1\n\t\t\tif current_win:\n\t\t\t\tstrikes.append(current_win)\n\t\t\t\tcurrent_win = 0\n\tif current_win:\n\t\tstrikes.append(current_win)\n\tif K >= loss:\n\t\tprint(N*2 - 1)\n\t\tcontinue\n\tif win == 0:\n\t\tprint(max(K*2 - 1, 0))\n\t\tcontinue\n\n\tgaps.sort()\n\tans = 2 * (win + K) - len(strikes) \n\tfixed_gaps = 0\n\tfor gap in gaps:\n\t\tif gap <= K:\n\t\t\tfixed_gaps += 1\n\t\t\tK -= gap\n\t\telse:\n\t\t\tbreak\n\tans += fixed_gaps\n\tprint(ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid solve() {\n  long long n;\n  cin >> n;\n  long long k;\n  cin >> k;\n  string s;\n  cin >> s;\n  while (s[0] == 'L') s.erase(s.begin());\n  while (s[s.size() - 1] == 'L') s.erase(s.end() - 1);\n  long long m = s.size();\n  if (m == 0) {\n    cout << max(2 * min(n, k) - 1, k - k) << \"\\n\";\n    return;\n  }\n  int flag = 0, ans = 0, count = 0;\n  vector<long long> v;\n  for (int i = 0; i < m; i++) {\n    if (s[i] == 'W') {\n      if (flag == 0) {\n        ans++;\n        v.push_back(count);\n        count = 0;\n      } else\n        ans += 2;\n      flag = 1;\n    } else {\n      flag = 0;\n      count++;\n    }\n  }\n  sort(v.begin(), v.end());\n  int i = 1;\n  while (k > 0 && i < v.size()) {\n    if (k >= v[i])\n      ans += v[i] * 2 + 1;\n    else {\n      ans += k * 2;\n      k = 0;\n      break;\n    }\n    k -= v[i];\n    i++;\n  }\n  if (k > 0) {\n    ans += min(k, n - m) * 2;\n  }\n  cout << ans << \"\\n\";\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  ;\n  int tt = 1;\n  cin >> tt;\n  while (tt--) {\n    solve();\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys, math\nimport io, os\n#data = io.BytesIO(os.read(0,os.fstat(0).st_size)).readline\nfrom bisect import bisect_left as bl, bisect_right as br, insort\nfrom heapq import heapify, heappush, heappop\nfrom collections import defaultdict as dd, deque, Counter\n#from itertools import permutations,combinations\ndef data(): return sys.stdin.readline().strip()\ndef mdata(): return list(map(int, data().split()))\ndef outl(var) : sys.stdout.write(' '.join(map(str, var))+'\\n')\ndef out(var) : sys.stdout.write(str(var)+'\\n')\n#from decimal import Decimal\n#from fractions import Fraction\n#sys.setrecursionlimit(100000)\nINF = float('inf')\nmod=10**9+7\n\n\nfor t in range(int(data())):\n    n,k=mdata()\n    s=data()\n    l=[]\n    ind=-1\n    ans=0\n    a=0\n    for i in range(n):\n        if s[i]=='W':\n            l.append([i-ind-1,ind+1])\n            ind=i\n            ans+=1\n            if i>0 and s[i-1]=='W':\n                ans+=1\n    l.append([n-ind-1,ind+1])\n    a=l.pop(0)\n    b=[0,0]\n    if l:\n        b=l.pop()\n    l.sort(key=lambda x:x[0])\n    l=l[::-1]\n    for i in range(len(l)-1,-1,-1):\n        if l[i][0]>0:\n            if l[i][0]<=k:\n                ans+=2*l[i][0]+1\n                k-=l[i][0]\n                if l[i][1]==0:\n                    ans-=1\n                if l[i][1]+l[i][0]==n:\n                    ans-=1\n            else:\n                break\n        l.pop()\n    l.append(a)\n    l.append(b)\n    for i in l:\n        if i[0]>0:\n            if i[0]<=k:\n                ans+=2*i[0]+1\n                k-=i[0]\n                if i[1]==0:\n                    ans-=1\n                if i[1]+i[0]==n:\n                    ans-=1\n            elif k:\n                ans+=2*k\n                if (i[1]==0 or s[i[1]-1]!='W'):\n                    if i[1]+i[0]==n:\n                        ans-=1\n                    elif s[i[1]+i[0]]!='W':\n                        ans-=1\n                break\n    out(ans)\n"
        },
        {
            "language": 4,
            "solution": "import java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main{\n\t\n\tstatic int d[] = new  int[1000009];\n\tpublic static void main(String[] args) {\n\t\t    \n\t\t    Scanner scanner = new Scanner(System.in);\n\t\t    int t = scanner.nextInt();\n\t\t    for(int ii=0;ii<t;ii++){\n\t\t        int ld=0;\n\t\t        int n = scanner.nextInt();\n\t\t        int k = scanner.nextInt();\n\t\t        char s[] = scanner.next().toCharArray();\n\t\t        int l = -1,r=0,ans=0;\n\t\t        int pre=0;\n\t\t        for (int i=0; i<n; i++){ \n\t\t            if (s[i] == 'W' && l == -1){\n\t\t                l = i;   //LLLLLW\u578b\n\t\t            }\n\t\t            if (s[i] == 'W'){  \n\t\t            \tr = i;\n\t\t                if (i >0&&s[i - 1] == 'W')\n\t\t                    ans += 2;  //\n\t\t                else\n\t\t                    ans++;\n\t\t            }\n\t\t        }\n\t\t        if(l == -1){\n\t\t            if (n == 1) {   \n\t\t                if (k!=0){\n\t\t                \tSystem.out.println(\"1\");\n\t\t                }\n\t\t                else{\n\t\t                    System.out.println(\"0\");\n\t\t                }\n\t\t            }else{\n\t\t                int  op=0;\n\t\t                ans=Math.max(op,(Math.min(n, k)-1)*2+1);\n\t\t                System.out.println(ans);\n\t\t            }\n\t\t            continue;\n\t\t        }\n\t\t        for(int i=l; i<=r; i++){\n\t\t            int pos=i;\n\t\t            if (s[pos] == 'L'){   \n\t\t                while (s[pos] == 'L')\n\t\t                    pos++;\n\t\t                d[++ld]=pos-i;\n\n\t\t                i=pos-1;\n\t\t            }\n\t\t        }\n\t\t        Arrays.sort(d, 1, 1+ld);\n\t\t        for (int i=1; i<=ld; i++){\n\t\t            if (k>=d[i]){\n\t\t                ans=ans+((d[i]*2)+1);\n\t\t                k-=d[i];\n\t\t            }else{\n\t\t                if(k!=0){\n\t\t                    ans=ans+(k*2);\n\t\t                    k=0;\n\t\t                }\n\t\t                break;\n\t\t            }\n\t\t        }\n\t\t        int re=Math.min(k,n-r-1+l);\n\t\t        System.out.println(ans+re*2);\n\n\t\t        //\u57fa\u7840\u7684+ \u8d21\u732e\u7684\n\n\t\t    }\n\t}\n}\n\n\n\n/**\npublic class T1019 {\n\n\tprivate static ArrayList <Integer>tmpArr = new ArrayList<>();\n\t\n\tpublic static void main(String[] args) {\n\t\tint [] com = {1,2,3,4,5,6,7,8};\n\n\t\tint k = 4;\t\n\t\tif(k > com.length || com.length <= 0){\n\t\t\treturn ;\n\t\t}\n\t\tcombine(0 ,k ,com);\n\n\t}\n\n\tpublic static void combine(int index,int k,int []arr) {\n\t\tif(k == 1){\n\t\t\tfor (int i = index; i < arr.length; i++) {\n\t\t\t\ttmpArr.add(arr[i]);\n\t\t\t\tSystem.out.println(tmpArr.toString());\n\t\t\t\ttmpArr.remove((Object)arr[i]);\n\t\t\t}\n\n\t\t}else if(k > 1){\n\t\t\tfor (int i = index; i <= arr.length -k; i++) {\n\t\t\t\ttmpArr.add(arr[i]);\n\t\t\t\tcombine(i + 1,k - 1, arr);\n\t\t\t\ttmpArr.remove((Object)arr[i]);\n\t\t\t}\n\t\t}else{\n\t\t\treturn ; \n\t\t}\n\t}\n\n}\n\n**/\n\t\t\t  \t\t  \t\t\t\t\t \t \t \t\t   \t\t\t\t\t"
        },
        {
            "language": 3,
            "solution": "import sys\nreadline = sys.stdin.readline\n\nT = int(readline())\nAns = [None]*T\n\nfor qu in range(T):\n    N, K = map(int, readline().split())\n    S = [1 if s == 'W' else 0 for s in readline().strip()]\n    if all(s == 0 for s in S):\n        Ans[qu] = max(0, 2*K-1)\n        continue\n    \n    ans = 0\n    ctr = 0\n    st = []\n    L = []\n    res = 0\n    hh = False\n    for i in range(N):\n        s = S[i]\n        if s == 1:\n            if i == 0 or S[i-1] == 0:\n                ans += 1\n            else:\n                ans += 2\n            if ctr:\n                st.append(ctr)\n                ctr = 0\n            hh = True\n        else:\n            if hh:    \n                ctr += 1\n            else:\n                res += 1\n    res += ctr\n    st.sort()\n    J = []\n    for s in st:\n        J.extend([2]*(s-1) + [3])\n    J.extend([2]*res)\n    Ans[qu] = ans + sum(J[:min(len(J), K)])\nprint('\\n'.join(map(str, Ans)))\n    "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long power(long long x, long long y, long long p) {\n  long long res = 1;\n  x = x % p;\n  if (x == 0) return 0;\n  while (y > 0) {\n    if (y & 1) res = (res * x) % p;\n    y = y >> 1;\n    x = (x * x) % p;\n  }\n  return res;\n}\nbool cust(pair<long long, pair<long long, long long>> a,\n          pair<long long, pair<long long, long long>>& b) {\n  return a.first > b.first;\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  int t;\n  cin >> t;\n  while (t--) {\n    long long n, k;\n    cin >> n >> k;\n    string s;\n    cin >> s;\n    int win = 0;\n    long long ans = 0;\n    multiset<long long> m;\n    for (int i = 1; i < n; i++) {\n      if (s[i - 1] == 'W') {\n        long long c = 0;\n        while (i < n && s[i] == 'L') {\n          c++;\n          i++;\n        }\n        if (c > 0 && i != n) m.insert(c);\n      }\n    }\n    long long los = 0;\n    for (int i = 0; i < n; i++) {\n      if (s[i] == 'L') los++;\n    }\n    if (los <= k) {\n      cout << 2 * n - 1 << endl;\n      continue;\n    }\n    for (int i = 0; i < n; i++) {\n      if (s[i] == 'W') {\n        win = 1;\n        ans++;\n        i++;\n        while (i < n && s[i] == 'W') {\n          ans += 2;\n          i++;\n        }\n      }\n    }\n    for (auto j = m.begin(); j != m.end(); j++) {\n      if (*j <= k) {\n        k -= *j;\n        los -= *j;\n        ans += ((*j) * 2 + 1);\n      } else {\n        ans += (2 * k);\n        k = 0;\n        break;\n      }\n    }\n    if (k > 0) {\n      if (win == 0) ans--;\n      ans += min(k, los) * 2;\n    }\n    cout << ans << endl;\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\npublic class global implements Runnable \n{\n\tprivate boolean console=false;\n\n\tpublic void solve() \n\t{\n\t\tint i; int n=in.ni(); int k=in.ni();\n\t\tchar a[]=in.ns().toCharArray();\n\t\tint gap[][]=new int[n][2];\n\t\tfor(i=0;i<n;i++)\n\t\t\tArrays.fill(gap[i], Integer.MAX_VALUE); \n\t\tint ind=0;\n\t\tfor(i=1;i<n;i++)\n\t\t{\n\t\t\tif(a[i]=='L'&&a[i-1]=='W')\n\t\t\t{\n\t\t\t\tint st=i; \n\t\t\t\twhile(i<n&&a[i]=='L')\n\t\t\t\t\ti++;\n\t\t\t\tif(i==n)\n\t\t\t\t\tbreak;\n\t\t\t\tgap[ind][0]=i-st; gap[ind][1]=st;\n\t\t\t\tind++;\n\t\t\t}\n\t\t}\n\t\tArrays.sort(gap,(d,q)-> d[0]-q[0]);\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tif(gap[i][0]==Integer.MAX_VALUE)\n\t\t\t\tbreak;\n\t\t\tind=gap[i][1];\n\t\t\twhile(ind<n&&a[ind]=='L'&&k>0)\n\t\t\t{\n\t\t\t\ta[ind]='W'; k--; ind++;\n\t\t\t}\n\t\t}\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tif(a[i]=='W')\n\t\t\t{\n\t\t\t\ti--;\n\t\t\t\twhile(i>=0&&k>0)\n\t\t\t\t{\n\t\t\t\t\ta[i]='W'; i--; k--;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tfor(i=n-1;i>=0;i--)\n\t\t{\n\t\t\tif(a[i]=='W')\n\t\t\t{\n\t\t\t\ti++;\n\t\t\t\twhile(i<n&&k>0)\n\t\t\t\t{\n\t\t\t\t\ta[i]='W'; i++; k--;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tif(k==0)\n\t\t\t\tbreak;\n\t\t\tif(a[i]=='L')\n\t\t\t{\n\t\t\t\ta[i]='W'; k--;\n\t\t\t}\n\t\t}\n\t\tint ans=0;\n\t\tfor(i=0;i<n;i++)\n\t\t{\n\t\t\tif(a[i]=='W')\n\t\t\t{\n\t\t\t\tans+=1; i++;\n\t\t\t\twhile(i<n&&a[i]=='W')\n\t\t\t\t{\n\t\t\t\t\tans+=2; i++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tout.println(ans);\n\t}\n\t@Override\n\tpublic void run() {\n\t\ttry {  init();  } \n\t\tcatch (FileNotFoundException e) {  e.printStackTrace();   }\n\n\t\tint t= in.ni();\n\n\t\twhile (t-->0) {\n\t\t\tsolve();\n\t\t\tout.flush(); }\n\t}\n\tprivate FastInput in;    private PrintWriter out;\n\tpublic static void main(String[] args) throws Exception {\t new global().run();\t }\n\n\tprivate void init() throws FileNotFoundException {\n\t\tInputStream inputStream = System.in; \t OutputStream outputStream = System.out;\n\t\ttry {  if (!console && System.getProperty(\"user.name\").equals(\"sachan\")) {\n\t\t\toutputStream = new FileOutputStream(\"/home/sachan/Desktop/output.txt\");\n\t\t\tinputStream = new FileInputStream(\"/home/sachan/Desktop/input.txt\");   \t}\n\t\t}\tcatch (Exception ignored) {\t}\n\t\tout = new PrintWriter(outputStream); \t in = new FastInput(inputStream);\n\t}\n\tstatic class FastInput { InputStream obj;\n\tpublic FastInput(InputStream obj) {\tthis.obj = obj;\t}\n\tbyte inbuffer[] = new byte[1024];  int lenbuffer = 0, ptrbuffer = 0;\n\tint readByte() { if (lenbuffer == -1) throw new InputMismatchException();\n\tif (ptrbuffer >= lenbuffer) { ptrbuffer = 0;\n\ttry { lenbuffer = obj.read(inbuffer);  }\n\tcatch (IOException e) { throw new InputMismatchException(); } }    \n\tif (lenbuffer <= 0) return -1;return inbuffer[ptrbuffer++]; }\n\n\tString ns() { int b = skip();StringBuilder sb = new StringBuilder();\n\twhile (!(isSpaceChar(b)))\t  { sb.appendCodePoint(b);b = readByte(); }return sb.toString();}\n\n\tint ni() { int num = 0, b;boolean minus = false;\n\twhile ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-')) ;\n\tif (b == '-') { minus = true;b = readByte(); }\n\twhile (true) { if (b >= '0' && b <= '9') { num = num * 10 + (b - '0'); } else {\n\t\treturn minus ? -num : num; }b = readByte(); }}\n\n\tlong nl() { long num = 0;int b;boolean minus = false;\n\twhile ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-')) ;\n\tif (b == '-') { minus = true;b = readByte(); }\n\twhile (true) { if (b >= '0' && b <= '9') { num = num * 10L + (b - '0'); } else {\n\t\treturn minus ? -num : num; }b = readByte(); } }\n\n\tboolean isSpaceChar(int c) { return (!(c >= 33 && c <= 126)); }\n\tint skip() { int b;while ((b = readByte()) != -1 && isSpaceChar(b)) ;return b; }\n\tfloat nf() {return Float.parseFloat(ns());}\n\tdouble nd() {return Double.parseDouble(ns());}\n\tchar nc() {return (char) skip();}\n\t}\n}\nclass cmp implements Comparator<int []> \n{\n\t@Override\n\tpublic int compare(int[] s1, int[] s2) \n\t{\n\t\tif (s1[0] > s2[0])\n\t\t\treturn 1;\n\t\telse if (s1[0] < s2[0])\n\t\t\treturn -1;\n\t\telse \n\t\t{\n\t\t\tif(s1[1]>s2[1])\n\t\t\t\treturn 1;\n\t\t\telse if(s1[1]<s2[1])\n\t\t\t\treturn -1;\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(s1[2]>s2[2])\n\t\t\t\t\treturn 1;\n\t\t\t\telse\n\t\t\t\t\treturn -1;\n\t\t\t}\n\t\t} \n\t} \n} \n"
        },
        {
            "language": 1,
            "solution": "\nfor _ in range(int(input())):\n    n,k = map(int,raw_input().split())\n    ik = k\n    sg = raw_input().strip()\n    gaps = []\n    l = len(sg)\n    wins = 0\n    win_streaks = 0\n    i = 0\n    lcnt = 0\n    temp = 0\n    while i < l:\n        if sg[i] == 'W':\n            break\n        i += 1\n        temp += 1\n    filled_gaps = 0\n    while i < l:\n        if sg[i] == 'W':\n            win_streaks += 1\n            while i < l and sg[i] == 'W':\n                wins += 1\n                i += 1\n        if i < l and sg[i] == 'L':\n            lcnt = 0\n            while i < l and sg[i] == 'L':\n                lcnt += 1\n                i += 1\n            else:\n                if i < l and sg[i] == 'W':\n                    gaps.append(lcnt)\n                else:\n                    temp += lcnt\n    \n    gaps.sort()\n    gap_l = len(gaps)\n    j = 0\n    while  k > 0 and j < gap_l:\n        if gaps[j]  <= k:\n            k -= gaps[j]\n            filled_gaps += 1\n        j += 1\n    if k > 0 and temp > 0 and wins == 0:\n        win_streaks += 1\n    \n    score = 2*(min(wins + ik , l)) - win_streaks + filled_gaps\n    print(score)"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nfor _ in range(t):\n    n,k=map(int,input().split())\n    s=input()\n    l=list(s)\n    i=0\n    temp=[]\n    while(i<n):\n        if(l[i]=='W' and i+1<n and l[i+1]=='W'):\n            i+=1\n        elif(l[i]=='W'):\n            j=i+1\n            while(j<n and l[j]=='L'):\n                j+=1\n            if(j!=n):\n                temp.append([j-i-1,i+1,j])\n            i=j\n        else:\n            i+=1\n    temp.sort()\n    for i in range(len(temp)):\n        cur=temp[i]\n        for j in range(cur[1],cur[2]):\n            if(k==0):\n                break\n            l[j]='W'\n            k-=1\n        if(k==0):\n            break\n    i=0\n    while(i<n):\n        if(k>0):\n            if(l[i]=='W'):\n                cur=i+1\n                while(k>0 and cur<n and l[cur]=='L'):\n                    l[cur]='W'\n                    cur+=1\n                    k-=1\n                i=cur\n            else:\n                i+=1\n        else:\n            break\n    i=n-1\n    while(i>=0):\n        if(k>0):\n            if(l[i]=='W'):\n                cur=i-1\n                while(k>0 and cur>=0 and l[cur]=='L'):\n                    l[cur]='W'\n                    cur-=1\n                    k-=1\n                i=cur\n            else:\n                i-=1\n        else:\n            break\n    for i in range(n):\n        if(k>0):\n            if(l[i]=='L'):\n                l[i]='W'\n                k-=1\n        else:\n            break\n    c=0\n    if(l[0]=='W'):\n        c+=1\n    for i in range(1,n):\n        if(l[i-1]=='W' and l[i]=='W'):\n            c+=2\n        elif(l[i]=='W'):\n            c+=1\n    print(c)"
        },
        {
            "language": 1,
            "solution": "#   Author: yumtam\n#   Created at: 2020-10-10 23:28\n\nfrom __future__ import division, print_function\n_interactive = False\n\nfrom itertools import groupby\n\ndef main():\n    for _ in range(int(input())):\n        n, k = input_as_list()\n        s = input()\n\n        lcnt = s.count('L')\n        k = min(k, lcnt)\n\n        pts = 0\n        prev = ''\n        for c in s:\n            if prev == 'W' and c == 'W':\n                pts += 2\n            elif c == 'W':\n                pts += 1\n            prev = c\n\n        ls = []\n        for key, it in groupby(s):\n            l = len(list(it))\n            ls.append((key, l))\n\n        if len(ls) == 1 and ls[0][0] == 'L':\n            pts = max(0, 2*k-1)\n            print(pts)\n            continue\n\n        sts = []\n        first = False\n        for key, l in ls:\n            if key == 'W':\n                first = True\n            if first and key == 'L':\n                sts.append(l)\n            last = key\n\n        if first and last == 'L':\n            sts.pop()\n\n        sts.sort()\n\n        pts += 2*k\n        for v in sts:\n            if k >= v:\n                pts += 1\n                k -= v\n\n        print(pts)\n\n\n# Constants\nINF = float('inf')\nMOD = 10**9+7\n\n# Python3 equivalent names\nimport os, sys, itertools\nif sys.version_info[0] < 3:\n    input = raw_input\n    range = xrange\n\n    filter = itertools.ifilter\n    map = itertools.imap\n    zip = itertools.izip\n\n# print-flush in interactive problems\nif _interactive:\n    flush = sys.stdout.flush\n    def printf(*args, **kwargs):\n        print(*args, **kwargs)\n        flush()\n\n# Debug print, only works on local machine\nLOCAL = \"LOCAL_\" in os.environ\ndebug_print = (print) if LOCAL else (lambda *x, **y: None)\n\n# Fast IO\nif (not LOCAL) and (not _interactive):\n    from io import BytesIO\n    from atexit import register\n    sys.stdin = BytesIO(os.read(0, os.fstat(0).st_size))\n    sys.stdout = BytesIO()\n    register(lambda: os.write(1, sys.stdout.getvalue()))\n    input = lambda: sys.stdin.readline().rstrip('\\r\\n')\n\n# Some utility functions(Input, N-dimensional lists, ...)\ndef input_as_list():\n    return [int(x) for x in input().split()]\n\ndef input_with_offset(o):\n    return [int(x)+o for x in input().split()]\n\ndef input_as_matrix(n, m):\n    return [input_as_list() for _ in range(n)]\n\ndef array_of(f, *dim):\n    return [array_of(f, *dim[1:]) for _ in range(dim[0])] if dim else f()\n\n# Start of external code templates...\n# End of external code templates.\n\nmain()\n"
        },
        {
            "language": 3,
            "solution": "T = int(input())\n\nfor t in range(T):\n    N, K = [int(_) for _ in input().split()]\n    initK = K\n    s = input()\n\n    nb_l = len([c for c in s if c == 'L'])\n\n    current_score = 0\n    current_nb = 0\n    current_c = None\n    loss_group_sizes = []\n    has_won = False\n    for c in s:\n        if c == current_c:\n            current_nb += 1\n            if c == 'W':\n                current_score += 2\n            continue\n        if current_c == 'L' and has_won:\n            loss_group_sizes.append(current_nb)\n        current_nb = 1\n        current_c = c\n        if c == 'W':\n            current_score += 1\n            has_won = True\n\n    loss_group_sizes = sorted(loss_group_sizes)\n    i = 0\n    # print('init score', current_score)\n\n    while K > 0 and i < len(loss_group_sizes):\n        if K >= loss_group_sizes[i]:\n            current_score += 2*loss_group_sizes[i] + 1\n            K -= loss_group_sizes[i]\n        else:\n            break\n        i += 1\n    # print('after groups', current_score, 'left', K)\n    left_l = nb_l - (initK - K)\n\n    if 'W' in s:\n        current_score += 2 * (min(K, left_l))\n    else:\n        current_score += max(0, 2 * (min(K, left_l)) - 1)\n    print(current_score)\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class B{\n\n    static class Pair implements Comparable<Pair>{\n        int idx, dist;\n        public Pair(int idx, int dist){\n            this.idx=idx;\n            this.dist=dist;\n        }\n        @Override\n        public int compareTo(Pair p){\n            return this.dist-p.dist;\n        }\n    }\n\n    public static void main(String[] args){\n        FastReader sc=new FastReader();\n        int t=sc.nextInt();\n        while(t-->0){\n            int n=sc.nextInt(), k=sc.nextInt();\n            char[] games=sc.nextLine().toCharArray();\n            int score=0;\n            ArrayList<Pair> distances=new ArrayList<>();\n            int prev=-1;\n            for(int i=0; i<n; ++i){\n               if(games[i]=='W'){\n                if(prev==-1){\n                    prev=i;\n                    continue;\n                }\n                else{\n                    distances.add(new Pair(prev, i-prev-1));\n                    prev=i;\n                }\n               }\n            }\n            Collections.sort(distances);\n            for(int i=0; i<distances.size(); ++i){\n                if(k==0) break;\n                Pair p=distances.get(i);\n                int idx=p.idx;\n                int dist=p.dist;\n                for(int j=1; j<=dist; ++j){\n                    if(k==0) break;\n                    games[idx+j]='W';\n                    k--;\n                }\n            }\n            if(k!=0){\n                int lastIdx=-1;\n                int firstIdx=-1;\n                for(int i=n-1; i>=0; --i){\n                    if(games[i]=='W'){\n                        lastIdx=i;\n                        break;\n                    }\n                }\n                if(lastIdx==-1){\n                    score+=1+(k-1)*2;\n                    System.out.println(score);\n                    continue;\n                }\n                else{\n                    for(int i=lastIdx+1; i<n; ++i){\n                        if(k==0) break;\n                        games[i]='W';\n                        k--;\n                    }\n                    for(int i=0; i<n; ++i){\n                        if(games[i]=='W'){\n                            firstIdx=i;\n                            break;\n                        }\n                    }\n                    if(k!=0){\n                        for(int i=firstIdx-1; i>=0; --i){\n                            if(k==0) break;\n                            games[i]='W';\n                            k--;\n                        }\n                    }\n                }\n            }\n            //calculate score\n            char prevCh='L';\n            for(int i=0; i<n; ++i){\n                if(prevCh=='W' && games[i]=='W') score+=2;\n                else if(games[i]=='W') score+=1;\n                prevCh=games[i];\n            }\n            System.out.println(score);\n\n        }\n    }\n\n    static class FastReader{\n            BufferedReader br; StringTokenizer st;\n            public FastReader(){\n                br = new BufferedReader(new InputStreamReader(System.in));\n            }\n            String next(){\n                while (st == null || !st.hasMoreElements()) {\n                    try {\n                        st = new StringTokenizer(br.readLine());\n                    } catch (IOException e) {\n                        e.printStackTrace();\n                    }\n                }\n                return st.nextToken();\n            }\n            int nextInt() {\n                return Integer.parseInt(next());\n            }\n            long nextLong() {\n                return Long.parseLong(next());\n            }\n            double nextDouble() {\n                return Double.parseDouble(next());\n            }\n            String nextLine() {\n                String str = \"\";\n                try {\n                    str = br.readLine();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n                return str;\n            }\n        }\n}\n\n"
        },
        {
            "language": 3,
            "solution": "import sys\ndef input():\n    return sys.stdin.readline().rstrip()\n\ndef getMax(n):\n    if n <= 1:\n        return n\n    else :\n        return ((n*2)-1)\n\ndef getPresentScore(len_arr):\n    countZero = 0\n    for l in len_arr:\n        if l == 0:\n            countZero += 1\n\n    return (len(len_arr) - 1 + countZero)\n\nt = int(input())\nfor i in range(t):\n    [n,k] = list(map(int,input().split()))\n    str_inp = input()\n    str_inp = 'a'+str_inp+'a'\n    len_arr = list(map(lambda x: len(x),str_inp.split('W')))\n    w_count = len(len_arr) - 1\n    l_count = n - w_count\n    presentScore = getPresentScore(len_arr) \n    if l_count <= k:\n        print(getMax(n))\n        continue\n    elif w_count == 0:\n        print(getMax(k))\n    elif w_count == 1:\n        print((presentScore+(k*2)))\n    else :\n        poss_seg = list(len_arr[1:-1])\n        bonus = 0\n        poss_seg.sort()\n        k_copy = k\n        for seg in poss_seg:\n            if seg == 0:\n                continue\n            elif seg <= k:\n                bonus += 1\n                k -= seg\n            else :\n                break\n        print((presentScore + (k_copy*2) + bonus))\n\n    \n"
        },
        {
            "language": 3,
            "solution": "def solve(n, k, s):\n    gaps = []\n    first_w_index = -1\n    last_w_index = -1\n    score = 0\n    win_streak = 0\n\n    for i in range(n):\n        if s[i] == 'W':\n            win_streak += 1\n            if first_w_index == -1:\n                first_w_index = i\n            elif i - last_w_index - 1 > 0:\n                gaps.append(i-last_w_index-1)\n            last_w_index = i\n        else:\n            if win_streak > 0:\n                score += 2 * win_streak - 1\n                win_streak = 0\n\n    if win_streak > 0:\n        score += 2*win_streak-1\n\n    gaps.sort()\n    for i, g in enumerate(gaps):\n        if g <= k:\n            score += 2*g+1\n            k -= g\n        elif k > 0:\n            score += 2*k\n            k = 0\n            break\n\n    # k > 0 here means in-between gaps are all filled.\n    # This includes the case of no in-between gaps.\n    if k > 0:\n        # last_w_index >= first_w_index\n        if first_w_index == -1:\n            # no win at all, then the optimal is to have k consecutive wins\n            score += 2*k-1\n        else:\n            # the optimal here is to append wins at the begining and ending gaps.\n            score += 2 * min(k, first_w_index + n-last_w_index-1)\n\n    return score\n\n\nT = int(input())\nfor _ in range(T):\n    n, k = map(int, input().split())\n    s = input()\n    print(solve(n, k, s))\n"
        },
        {
            "language": 3,
            "solution": "cases = int(input())\nfor t in range(cases):\n    n,k = list(map(int, input().split()))\n    s = input()\n    fw = s.find('W')\n    lw = s.rfind('W')\n    s = list(s)\n    ls = []\n    for i in range(fw+1,n):\n        if s[i]=='L' and s[i-1]=='W':\n            st = i\n        elif s[i]=='W' and s[i-1]=='L':\n            ls.append([i-st,st,i])\n    ls = sorted(ls)\n    f = 0\n    c = 0\n    for l,i,j in ls:\n        for m in range(i,j):\n            if c<k:\n                s[m]='W'\n                c+=1\n            else:\n                f = 1\n                break\n        if f==1:\n            break\n    if f==0:\n        for i in range(lw+1,n):\n            if c<k:\n                s[i]='W'\n                c+=1\n            else:\n                f=1\n                break\n    if f==0:\n        for i in range(fw-1,-1,-1):\n            if c<k:\n                s[i]='W'\n                c+=1\n            else:\n                f=1\n                break\n    out = 0\n    for i in range(n):\n        if i==0 and s[i]=='W':\n            out += 1\n        elif i>0 and s[i]=='W' and s[i-1]=='L':\n            out += 1\n        elif i>0 and s[i]=='W' and s[i-1]=='W':\n            out += 2\n    print(out)\n\n"
        },
        {
            "language": 3,
            "solution": "z,zz=input,lambda:list(map(int,z().split()))\nzzz=lambda:[int(i) for i in stdin.readline().split()]\nszz,graph,mod,szzz=lambda:sorted(zz()),{},10**9+7,lambda:sorted(zzz())\nfrom string import *\nfrom re import *\nfrom collections import *\nfrom queue import *\nfrom sys import *\nfrom collections import *\nfrom math import *\nfrom heapq import *\nfrom itertools import *\nfrom bisect import *\nfrom collections import Counter as cc\nfrom math import factorial as f\nfrom bisect import bisect as bs\nfrom bisect import bisect_left as bsl\nfrom itertools import accumulate as ac\ndef lcd(xnum1,xnum2):return (xnum1*xnum2//gcd(xnum1,xnum2))\ndef prime(x):\n    p=ceil(x**.5)+1\n    for i in range(2,p):\n        if (x%i==0 and x!=2) or x==0:return 0\n    return 1\ndef dfs(u,visit,graph):\n    visit[u]=True\n    for i in graph[u]:\n        if not visit[i]:\n            dfs(i,visit,graph)\n\n###########################---Test-Case---#################################\n\"\"\"\n\n\n\n\"\"\"\n###########################---START-CODING---##############################\n\n\nnum=int(z())\nans=[]\nfor _ in range( num ):\n    n,k=zz()\n    \n    arr=sorted(map(len,z().strip('L').split('W')))\n    m=len(arr)+k\n    while arr and arr[0]<=k:\n        k-=arr.pop(0)\n    ans.append((2*min(n,m-1)-len(arr)or 1)-1)\n        \n        \nfor _ in ans:print(_)            \n            \n            \n                \n\n    \n    \n        \n            \n        \n        \n        \n    \n    \n        \n    \n        \n    \n    \n    \n        \n        \n    \n    \n        \n        \n        \n        \n        \n        \n        \n\n    \n    \n\n    \n\n    \n        \n        \n        \n    \n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios::sync_with_stdio(0);\n  int i, j, k, n, t;\n  cin >> t;\n  while (t--) {\n    cin >> n >> k;\n    string s, r;\n    cin >> s;\n    r = s;\n    vector<pair<int, int> > a;\n    int p = 0, q = 0;\n    for (i = 0; i < n; ++i) {\n      if (s[i] == 'W') continue;\n      j = i;\n      while (j < n and s[i] == s[j]) j++;\n      if (i == 0)\n        p = j - i;\n      else if (j == n)\n        q = j - i;\n      else\n        a.push_back({i, j - 1});\n      i = j - 1;\n    }\n    sort(a.begin(), a.end(), [&](pair<int, int> x, pair<int, int> y) {\n      return x.second - x.first < y.second - y.first;\n    });\n    if (q != 0) a.push_back({n - q, n - 1});\n    for (auto x : a) {\n      j = x.first;\n      while (k and j <= x.second) {\n        s[j++] = 'W';\n        k--;\n      }\n    }\n    if (p != 0) {\n      j = p - 1;\n      while (j >= 0 and k) {\n        s[j--] = 'W';\n        k--;\n      }\n    }\n    int ans = 0;\n    int prev = 0;\n    for (i = 0; i < n; ++i) {\n      if (s[i] == 'W') {\n        ans += prev + 1;\n        prev = 1;\n      } else\n        prev = 0;\n    }\n    cout << ans << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\nimport math\nfrom collections import defaultdict,deque\n\ninput = sys.stdin.readline\ndef inar():\n    return [int(el) for el in input().split()]\ndef main():\n    t=int(input())\n    for _ in range(t):\n        n,k=inar()\n        arr=list(input().strip())\n        ans=0\n        ind=[]\n        for i in range(n):\n            if arr[i]==\"W\":\n                ind.append(i)\n        tup=[]\n        for i in range(1,len(ind)):\n            el1=ind[i-1]\n            el2=ind[i]\n            t=el2-el1-1\n            tup.append([t,el1,el2])\n        tup.sort()\n        # print(tup)\n        for i in range(len(tup)):\n            start=tup[i][1]\n            end=tup[i][2]\n            for j in range(start+1,end):\n                if k==0:\n                    break\n                if arr[j]==\"L\":\n                    k-=1\n                    arr[j]=\"W\"\n            if k==0:\n                break\n        if k>0:\n            if len(ind)==0:\n                for i in range(n):\n                    if k == 0:\n                        break\n                    if arr[i] == \"L\":\n                        k -= 1\n                        arr[i] = \"W\"\n            else:\n\n\n                for i in range(ind[0]-1,-1,-1):\n                    if k==0:\n                        break\n                    if arr[i]==\"L\":\n                        k-=1\n                        arr[i]=\"W\"\n                for i in range(ind[-1]+1,n):\n                    if k==0:\n                        break\n                    if arr[i]==\"L\":\n                        k-=1\n                        arr[i]=\"W\"\n\n\n        temp=0\n        for i in range(n):\n            if arr[i]==\"W\":\n                ans+=temp+1\n                if temp==0:\n                    temp=1\n            else:\n                temp=0\n        print(ans)\n\n\n\n\nif __name__ == '__main__':\n    main()\n\n\n\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class tr0 {\n\tstatic PrintWriter out;\n\tstatic StringBuilder sb;\n\tstatic int mod = (int) 1e9 + 7;\n\tstatic long inf = (long) 1e16;\n\tstatic int n, m;\n\tstatic ArrayList<Integer>[] ad;\n\tstatic long[][] memo;\n\tstatic boolean f;\n\tstatic boolean vis[];\n\tstatic int[] px, Q[];\n\tstatic HashMap<Integer, Integer> hm;\n\tstatic String s;\n\n\tpublic static void main(String[] args) throws Exception {\n\t\tScanner sc = new Scanner(System.in);\n\t\tout = new PrintWriter(System.out);\n\t\tint t = sc.nextInt();\n\t\twhile (t-- > 0) {\n\t\t\tint n = sc.nextInt();\n\t\t\tint k = sc.nextInt();\n\t\t\tString s = sc.nextLine();\n\t\t\tlong ans = 0;\n\t\t\tArrayList<Integer> a = new ArrayList<>();\n\t\t\tint f = 0;\n\t\t\tint l = 0;\n\t\t\tint len = 0;\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tif (s.charAt(i) == 'L')\n\t\t\t\t\tlen++;\n\t\t\t\telse {\n\t\t\t\t\tans++;\n\t\t\t\t\tif (i != 0 && s.charAt(i - 1) == 'W')\n\t\t\t\t\t\tans++;\n\t\t\t\t\tif (len != 0)\n\t\t\t\t\t\ta.add(len);\n\t\t\t\t\tlen = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (len != 0)\n\t\t\t\ta.add(len);\n\t\t\tif (s.charAt(0) == 'L') {\n\t\t\t\tf = a.get(0);\n\t\t\t\ta.remove(0);\n\t\t\t}\n\t\t\tif (a.size() > 0 && s.charAt(n - 1) == 'L') {\n\t\t\t\tl = a.get(a.size() - 1);\n\t\t\t\ta.remove(a.size() - 1);\n\t\t\t}\n\t\t\tCollections.sort(a);\n\t\t\tboolean flag = true;\n\t\t\t// System.out.println(ans + \" \" + k);\n\t\t\tfor (int i = 0; i < a.size(); i++) {\n\t\t\t\t// System.out.println(k);\n\t\t\t\tif (a.get(i) > k) {\n\t\t\t\t\tans += k * 2;\n\t\t\t\t\tflag = false;\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\tk -= a.get(i);\n\t\t\t\t\tans++;\n\t\t\t\t\tans += a.get(i) * 2;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (f == n) {\n\t\t\t\tif (k >= 1) {\n\t\t\t\t\tans = 1 + (k - 1) * 2;\n\t\t\t\t}\n\t\t\t} else if (flag) {\n\t\t\t\tif (k >= f) {\n\t\t\t\t\tans += f * 2;\n\t\t\t\t\tk -= f;\n\t\t\t\t\tans += Math.min(k, l) * 2;\n\t\t\t\t} else\n\t\t\t\t\tans += k * 2;\n\t\t\t}\n\t\t\tout.println(Math.max(0, ans));\n\t\t}\n\t\tout.close();\n\t}\n\n\tstatic class Scanner {\n\t\tStringTokenizer st;\n\t\tBufferedReader br;\n\n\t\tpublic Scanner(InputStream system) {\n\t\t\tbr = new BufferedReader(new InputStreamReader(system));\n\t\t}\n\n\t\tpublic Scanner(String file) throws Exception {\n\t\t\tbr = new BufferedReader(new FileReader(file));\n\t\t}\n\n\t\tpublic String next() throws IOException {\n\t\t\twhile (st == null || !st.hasMoreTokens())\n\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tpublic String nextLine() throws IOException {\n\t\t\treturn br.readLine();\n\t\t}\n\n\t\tpublic int nextInt() throws IOException {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tpublic double nextDouble() throws IOException {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tpublic char nextChar() throws IOException {\n\t\t\treturn next().charAt(0);\n\t\t}\n\n\t\tpublic Long nextLong() throws IOException {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tpublic int[] nextArrInt(int n) throws IOException {\n\t\t\tint[] a = new int[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\ta[i] = nextInt();\n\t\t\treturn a;\n\t\t}\n\n\t\tpublic long[] nextArrLong(int n) throws IOException {\n\t\t\tlong[] a = new long[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\ta[i] = nextLong();\n\t\t\treturn a;\n\t\t}\n\n\t\tpublic boolean ready() throws IOException {\n\t\t\treturn br.ready();\n\t\t}\n\n\t\tpublic void waitForInput() throws InterruptedException {\n\t\t\tThread.sleep(3000);\n\t\t}\n\t}\n}"
        },
        {
            "language": 3,
            "solution": "l=[]\nfrom collections import Counter\nfor _ in range(int(input())):\n    n,k=map(int,input().split())\n    a=list(input())\n    d=dict(Counter(a))\n    if \"L\" not in d:\n        d[\"L\"]=0\n    if \"K\" not in d:\n        d[\"K\"]=0\n    if d[\"L\"]<=k:\n        l.append(1+(n-1)*2)\n    elif d[\"L\"]==n and k!=0:\n        l.append(1+2*(k-1))\n    elif d[\"L\"]==n and k==0:\n        l.append(0)\n    else:\n        s=[]\n        count=0\n        for i in range(n):\n            if a[i]==\"L\":\n                count=count+1\n            else:\n                if i!=0:\n                    if a[i-1]==\"L\":\n                        s.append(count)\n                        count=0\n        if a[0]==\"L\":\n            s=s[1:]\n        s.sort()\n        sum=0\n        i=0\n        flag=1\n        while k>0 and i<len(s):\n            k=k-(s[i])\n            if k<0:\n                k=k+s[i]\n                break\n            else:\n                sum=sum+2*s[i]+1\n            i=i+1\n        if k!=0:\n            sum=sum+2*k\n        s=[]\n        count=0\n        for i in range(n):\n            if a[i]==\"W\":\n                count=count+1\n            else:\n                if i!=0:\n                    if a[i-1]==\"W\":\n                        s.append(count)\n                        count=0\n        if a[-1]==\"W\":\n            s.append(count)\n        s1=0\n        for i in s:\n            s1=s1+(2*i)-1\n        l.append(sum+s1)\nfor i in l:\n    print(i)\n\n\n\n\n"
        },
        {
            "language": 4,
            "solution": "function fun(gameStr,count) {\n    var numL = 0;\n    var numW = 0;\n    var WArr = [];\n    var spaceArr = [];\n    var minInd = 0;\n    var maxInd = 0;\n    var currentScore = 0;\n\n    //\u5168L\n    if(gameStr.indexOf(\"W\")===-1){\n        if(count===0){\n            return 0;\n        }\n        if(count>gameStr.length){\n            return gameStr.length*2-1;\n        }else {\n            return count*2-1;\n        }\n    }\n\n    for(var i=0;i<=gameStr.length;i++){\n        if(gameStr[i]===\"W\"){\n            numW++;\n        }else if(gameStr[i]!==\"W\" && numW!==0){\n            WArr.push(numW);\n            numW = 0;\n        }\n    }\n\n    // \u8ba1\u7b97\u5f53\u524d\u5206\u6570\n    for(var i=0;i<WArr.length;i++){\n        if(WArr[i] === 1){\n            currentScore = currentScore+1;\n        }else {\n            currentScore = currentScore + WArr[i]*2-1;\n        }\n    }\n\n    for(var i=0;i<gameStr.length;i++){\n        if(gameStr[i]===\"W\"){\n            minInd = i;\n            break;\n        }\n    }\n    for(var i=gameStr.length;i>0;i--){\n        if(gameStr[i]===\"W\"){\n            maxInd = i;\n            break;\n        }\n    }\n\n    for(var i=minInd;i<=maxInd;i++){\n        if(gameStr[i]===\"L\"){\n            numL++;\n        }else if(gameStr[i]!==\"L\" && numL!==0){\n            spaceArr.push(numL);\n            numL = 0;\n        }\n    }\n\n    spaceArr.sort((a,b)=>a-b);\n\n    var score = 0;\n    for(var j=0;j<spaceArr.length;j++){\n        if(spaceArr[j]<=count && count!==0){\n            score = score+2*spaceArr[j]+1;\n            count = count-spaceArr[j];\n        }else if(spaceArr[j]>count && count!==0) {\n            score = score+2*count;\n            count = 0;\n        }\n    }\n    if(count>0){\n        score = score+2*count;\n    }\n    score = score+currentScore;\n\n    if(score>=gameStr.length*2-1){\n        return gameStr.length*2-1;\n    }else {\n        return score;\n    }\n}\n\nvar line1 = readline();\nfor(var i=0;i<line1;i++){\n    var line2 = readline().split(\" \");\n    var gameStr = readline();\n    line2 = line2.map(Number);\n    var count = line2[1];\n    print(fun(gameStr,count));\n}\n  \t\t\t    \t \t \t\t\t\t\t\t\t\t \t \t \t  \t"
        },
        {
            "language": 3,
            "solution": "\"\"\"\n    Author - Satwik Tiwari .\n    27th Sept , 2020  - Sunday\n\"\"\"\n\n#===============================================================================================\n#importing some useful libraries.\n\n\nfrom __future__ import division, print_function\nfrom fractions import Fraction\nimport sys\nimport os\nfrom io import BytesIO, IOBase\n\n\n# from itertools import *\nfrom heapq import *\n# from math import gcd, factorial,floor,ceil\n\nfrom copy import deepcopy\nfrom collections import deque\n\n\n# from collections import Counter as counter  # Counter(list)  return a dict with {key: count}\n# from itertools import combinations as comb # if a = [1,2,3] then print(list(comb(a,2))) -----> [(1, 2), (1, 3), (2, 3)]\n# from itertools import permutations as permutate\n\n\nfrom bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom bisect import bisect\n\n#==============================================================================================\n#fast I/O region\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\ndef print(*args, **kwargs):\n    \"\"\"Prints the values to a stream, or to sys.stdout by default.\"\"\"\n    sep, file = kwargs.pop(\"sep\", \" \"), kwargs.pop(\"file\", sys.stdout)\n    at_start = True\n    for x in args:\n        if not at_start:\n            file.write(sep)\n        file.write(str(x))\n        at_start = False\n    file.write(kwargs.pop(\"end\", \"\\n\"))\n    if kwargs.pop(\"flush\", False):\n        file.flush()\n\n\nif sys.version_info[0] < 3:\n    sys.stdin, sys.stdout = FastIO(sys.stdin), FastIO(sys.stdout)\nelse:\n    sys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\n\n# inp = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\n#===============================================================================================\n### START ITERATE RECURSION ###\nfrom types import GeneratorType\ndef iterative(f, stack=[]):\n  def wrapped_func(*args, **kwargs):\n    if stack: return f(*args, **kwargs)\n    to = f(*args, **kwargs)\n    while True:\n      if type(to) is GeneratorType:\n        stack.append(to)\n        to = next(to)\n        continue\n      stack.pop()\n      if not stack: break\n      to = stack[-1].send(to)\n    return to\n  return wrapped_func\n#### END ITERATE RECURSION ####\n\n#===============================================================================================\n#some shortcuts\n\nmod = 10**9+7\ndef inp(): return sys.stdin.readline().rstrip(\"\\r\\n\") #for fast input\ndef out(var): sys.stdout.write(str(var))  #for fast output, always take string\ndef lis(): return list(map(int, inp().split()))\ndef stringlis(): return list(map(str, inp().split()))\ndef sep(): return map(int, inp().split())\ndef strsep(): return map(str, inp().split())\n# def graph(vertex): return [[] for i in range(0,vertex+1)]\ndef zerolist(n): return [0]*n\ndef nextline(): out(\"\\n\")  #as stdout.write always print sring.\ndef testcase(t):\n    for pp in range(t):\n        solve(pp)\ndef printlist(a) :\n    for p in range(0,len(a)):\n        out(str(a[p]) + ' ')\ndef google(p):\n    print('Case #'+str(p)+': ',end='')\ndef lcm(a,b): return (a*b)//gcd(a,b)\ndef power(x, y, p) :\n    res = 1     # Initialize result\n    x = x % p  # Update x if it is more , than or equal to p\n    if (x == 0) :\n        return 0\n    while (y > 0) :\n        if ((y & 1) == 1) : # If y is odd, multiply, x with result\n            res = (res * x) % p\n\n        y = y >> 1      # y = y/2\n        x = (x * x) % p\n    return res\ndef ncr(n,r): return factorial(n) // (factorial(r) * factorial(max(n - r, 1)))\ndef isPrime(n) :\n    if (n <= 1) : return False\n    if (n <= 3) : return True\n    if (n % 2 == 0 or n % 3 == 0) : return False\n    i = 5\n    while(i * i <= n) :\n        if (n % i == 0 or n % (i + 2) == 0) :\n            return False\n        i = i + 6\n    return True\n\n#===============================================================================================\n# code here ;))\n\ndef solve(case):\n    n,k = sep()\n    a = list(inp())\n\n    ll = []\n    temp = -1\n    j = 0\n    while(j<n):\n        if(a[j] == 'L'):\n            curr = 0\n            i = j\n            while(i<n and a[i] == 'L'):\n                curr+=1\n                i+=1\n            if(i!=n):\n                if(j!=0):\n                    # print(j,'===')\n                    ll.append(curr)\n            else:\n                temp = curr\n            j = i+1\n        else:\n            j+=1\n\n    # print(ll,len(ll))\n\n    if(a.count('L') <= k):\n        print(2*n-1)\n        return\n\n    if(a.count('L') == n):\n        print(2*k-1 if k>0 else 0)\n        return\n\n    # print('hello')\n    ll = sorted(ll)\n    ans = 0\n    for i in range(len(ll)):\n        # print(k)\n        if(k>=ll[i]):\n            ans+=2*ll[i]+1\n            k-=ll[i]\n        else:\n            ans+=2*k\n            # k -=ll[i]\n            k = 0\n            break\n        # if(k<0):\n        #     k = 0\n        #     break\n\n    if(temp!=-1):\n        # print('here')\n        ans+=2*min(k,temp);k-=min(k,temp)\n    ans+=2*k\n    f = False\n    for i in range(n):\n        if(a[i] == 'L'):\n            f = False\n        else:\n            if(f):\n                ans +=2\n            else:\n                f = True\n                ans+=1\n\n    print(ans)\n\n\n\n\n\n\n# testcase(1)\ntestcase(int(inp()))\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.BufferedReader;\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.StringTokenizer;\n\npublic class B {\n\n   private static final String INPUT_FILE_PATH = \"\";\n\n   void solve() {\n      int t = in.nextInt();\n      while (t-- > 0) {\n         int n = in.nextInt(), k = in.nextInt();\n         String s = in.nextToken();\n         ArrayList<Streak> streaks = new ArrayList();\n         for (int i = 0; i < n; ) {\n            if (s.charAt(i) == 'L') {\n               i++;\n               continue;\n            }\n            int j = i + 1;\n            while (j < n && s.charAt(j) == 'L') j++;\n            if (j < n && j != i + 1) streaks.add(new Streak(i + 1, j - i - 1));\n            i = j;\n         }\n\n         char[] pick = s.toCharArray();\n         Collections.sort(streaks);\n         for (Streak streak : streaks) {\n            if (streak.length <= k) {\n               k -= streak.length;\n               for (int i = streak.start; i < streak.start + streak.length; i++) pick[i] = 'W';\n            }\n         }\n         boolean seenW = false;\n         int firstWIndex = n;\n         for (int i = 0; i < n; i++) {\n            if (pick[i] == 'W') {\n               seenW = true;\n               firstWIndex = Math.min(firstWIndex, i);\n               continue;\n            }\n            if (seenW && k > 0) {\n               pick[i] = 'W';\n               k--;\n            }\n         }\n         for (int i = firstWIndex - 1; i >= 0; i--) {\n            if (pick[i] == 'L' && k > 0) {\n               pick[i] = 'W';\n               k--;\n            }\n         }\n\n         int ans = 0;\n         for (int i = 0; i < n; i++) {\n            if (pick[i] == 'W') {\n               ans++;\n               if (i > 0 && pick[i - 1] == 'W') ans++;\n            }\n         }\n         out.println(ans);\n      }\n   }\n\n   class Streak implements Comparable<Streak> {\n      int start, length;\n      Streak(int start, int length) {\n         this.start = start;\n         this.length = length;\n      }\n\n      @Override\n      public int compareTo(Streak streak) {\n         return Integer.compare(this.length, streak.length);\n      }\n   }\n\n   private final InputReader in;\n   private final PrintWriter out;\n\n   private B(InputReader in, PrintWriter out) {\n      this.in = in;\n      this.out = out;\n   }\n\n   private static class InputReader {\n      private BufferedReader br;\n      private StringTokenizer st;\n\n      public InputReader(InputStream inputStream) {\n         this.br = new BufferedReader(new InputStreamReader(inputStream), 32768);\n         this.st = null;\n      }\n\n      public String nextToken() {\n         while (st == null || !st.hasMoreTokens()) {\n            try {\n               st = new StringTokenizer(br.readLine());\n            } catch (IOException e) {\n               throw new RuntimeException(e);\n            }\n         }\n         return st.nextToken();\n      }\n\n      public int nextInt() {\n         return Integer.parseInt(nextToken());\n      }\n\n      public long nextLong() {\n         return Long.parseLong(nextToken());\n      }\n\n      public double nextDouble() {\n         return Double.parseDouble(nextToken());\n      }\n   }\n\n   public static void main(String[] args) throws Exception {\n      InputStream inputStream = INPUT_FILE_PATH.isEmpty()\n         ? System.in\n         : new FileInputStream(new File(INPUT_FILE_PATH));\n      OutputStream outputStream = System.out;\n\n      InputReader inputReader = new InputReader(inputStream);\n      PrintWriter printWriter = new PrintWriter(outputStream);\n\n      new B(inputReader, printWriter).solve();\n\n      printWriter.close();\n   }\n\n}\n"
        },
        {
            "language": 1,
            "solution": "import os\nimport sys\nfrom atexit import register\nfrom io import BytesIO\nsys.stdin = BytesIO(os.read(0, os.fstat(0).st_size))\nsys.stdout = BytesIO()\nregister(lambda: os.write(1, sys.stdout.getvalue()))\ninput = lambda: sys.stdin.readline().rstrip('\\r\\n')\nraw_input = lambda: sys.stdin.readline().rstrip('\\r\\n')\n\nfor _ in xrange(int(input())):\n    n,k = (int(x) for x in input().split())\n    s = list(input())\n    if k > 0:\n        cnt = 0\n        lst = []\n        fromm = None\n        win = False\n        for i,c in enumerate(s):\n            if c == 'L':\n                if cnt == 0:\n                    fromm = i\n                cnt += 1\n            else:\n                win = True\n                if cnt > 0:\n                    lst.append((cnt, fromm, i))\n                    # fromm = i\n                    cnt = 0\n            \n        # to_last = None\n        # print(lst)\n        if win:\n            if cnt:\n                to_last = n\n                fromm_last = n-1 - cnt\n\n            if s[0] == 'L':\n                mid = sorted(lst[1:])\n            else:\n                mid = sorted(lst)\n            \n            cnt_k = 0\n            for val,fromm, to in mid:\n                for i in xrange(fromm, to):\n                    s[i] = 'W'\n                    cnt_k += 1\n                    if cnt_k == k:\n                        break\n                if cnt_k == k:\n                    break\n            # print(s,cnt_k)\n            if cnt_k < k:\n                if s[0] == 'L':\n                    val, fromm, to = lst[0]\n                    for i in xrange(to-1, -1, -1):\n                        s[i] = 'W'\n                        cnt_k += 1\n                        if cnt_k >= k:\n                            break\n                if cnt_k < k and cnt:\n                    \n                    for i in xrange(fromm_last, to_last):\n                        s[i] = 'W'\n                        cnt_k += 1\n                        if cnt_k > k:\n                            break\n        else:\n            for i in xrange(min(k,n)):\n                s[i] = 'W'\n    score = 0\n    prev = 'L'\n    for i in xrange(n):\n        if s[i] == 'W':\n            if prev == 'W':\n                score += 2\n            else:\n                score += 1\n            prev = 'W'\n        else:\n            prev = 'L'\n    print(score)\n    # print(s,score,cnt_k)\n    "
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n,k = map(int,input().split())\n    l = list(input())\n    cont,edge = [],[]\n    last = True\n    wCnt,lCnt,ans=0,0,0\n    for i in range(n):\n        if l[i]==\"L\":\n            if wCnt>0:\n                ans+=wCnt*2-1\n                wCnt=0\n            lCnt+=1\n        else:\n            if i==lCnt and i:edge.append(lCnt)\n            elif lCnt>0:cont.append(lCnt)\n            wCnt+=1\n            lCnt=0\n    if lCnt:edge.append(lCnt)\n    if wCnt:ans+=wCnt*2-1\n\n    cont.sort()\n    edge.sort()\n\n    if ans==0:\n        lCnt = min(k,lCnt)\n        print(max(lCnt*2-1,0))\n        continue\n\n    for i in cont:\n        if k==0:break\n        if k>i:\n            ans+=2*i+1\n            k-=i\n        elif k<i:\n            ans+=2*k\n            k=0\n        else:\n            ans+=2*i+1\n            k=0\n\n    for i in edge:\n        if k==0:break\n        if k>=i:\n            ans+=i*2\n            k-=i\n        else:\n            ans+=k*2\n            k=0\n\n    print(ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  int t;\n  cin >> t;\n  while (t--) {\n    int n, k;\n    cin >> n >> k;\n    int ans = 0;\n    string s;\n    cin >> s;\n    vector<pair<char, int>> v;\n    for (int i = 0, ThxDem = n; i < ThxDem; ++i) {\n      if (!int(v.size()) || v.back().first != s[i])\n        v.push_back({s[i], 1});\n      else\n        v.back().second++;\n    }\n    vector<pair<int, int>> rem;\n    for (int i = 1, ThxDem = int(v.size()) - 1; i < ThxDem; ++i) {\n      if (v[i].first == 'L') rem.push_back({v[i].second, i});\n    }\n    sort(rem.begin(), rem.end());\n    for (int i = 0, ThxDem = int(rem.size()); i < ThxDem; ++i) {\n      if (rem[i].first <= k) {\n        v[rem[i].second].first = 'W';\n        k -= rem[i].first;\n      } else {\n        int now = k;\n        v[rem[i].second].second -= k;\n        pair<char, int> noww = {'W', k};\n        int off = rem[i].second != int(v.size()) - 1;\n        v.insert(v.begin() + rem[i].second + off, noww);\n        k = 0;\n        break;\n      }\n    }\n    if (v[0].first == 'L') {\n      if (v[0].second <= k)\n        v[0].first = 'W', k -= v[0].second;\n      else if (k) {\n        int now = k;\n        v[0].second -= k;\n        pair<char, int> noww = {'W', k};\n        v.insert(v.begin() + 1, noww);\n        k = 0;\n      }\n    }\n    int xx = int(v.size()) - 1;\n    if (v[xx].first == 'L') {\n      if (v[xx].second <= k)\n        v[xx].first = 'W';\n      else if (k) {\n        int now = k;\n        v[xx].second -= k;\n        pair<char, int> noww = {'W', k};\n        v.insert(v.begin() + xx, noww);\n      }\n    }\n    char pre = 'L';\n    for (int i = 0, ThxDem = int(v.size()); i < ThxDem; ++i) {\n      if (v[i].first == 'L')\n        pre = v[i].first;\n      else {\n        if (pre == 'L')\n          ans += 2 * v[i].second - 1;\n        else\n          ans += 2 * v[i].second;\n        pre = v[i].first;\n      }\n    }\n    cout << ans << \"\\n\";\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n,k=map(int, input().split())\n    s=input()\n    w=s.count('W')\n    if s.count('L')<=k:\n        ans=2*n-1\n        print(ans)\n    elif k==0 and w==0:\n        print(0)\n        \n    else:\n        i=0\n        \n        c1=s.find('W')\n        c2=s.rfind('W')\n        if c1==-1:\n            ans=2*k-1\n        else:\n            l=[]\n            s=s[c1+1:c2]\n            #print(s)\n            i=0\n            c=0\n            while i<len(s):\n                \n                if s[i]=='L':\n                    c=1\n                    j=i+1\n                    while j<len(s) and s[j]=='L':\n                        c+=1\n                        j+=1\n                    l.append(c)\n                    i=j\n                else:\n                    i+=1\n            l.sort()\n            #print(l)\n            i=0\n            streak=len(l)+1\n            #print(streak)\n            k0=k\n            while i<len(l) and k>0:\n                if l[i]<=k:\n                    k-=l[i]\n                    streak-=1\n                i+=1\n            #print(streak)\n            if streak==0:\n                ans=2*(w+k0)-1\n            else:\n                ans=2*(w+k0)-streak\n        #print(w,k)\n        print(ans)\n                    \n            \n            "
        },
        {
            "language": 3,
            "solution": "import os\nimport sys\nfrom io import BytesIO, IOBase\n# region fastio\nBUFSIZE = 8192\nclass FastIO(IOBase):\n    newlines = 0\n \n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n \n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n \n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n \n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n \n \nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n \n \nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n \n# ------------------------------\n \ndef RL(): return map(int, sys.stdin.readline().rstrip().split())\ndef RLL(): return list(map(int, sys.stdin.readline().rstrip().split()))\ndef N(): return int(input())\ndef print_list(l):\n    print(' '.join(map(str,l)))\n# import sys\n# sys.setrecursionlimit(5010)\n# from heapq import *\n# from collections import deque as dq\n# from math import ceil,floor,sqrt,pow\n# import bisect as bs\n# from collections import Counter\n# from collections import defaultdict as dc \n\nfor _ in range(N()):\n    n,k = RL()\n    s = input().strip()\n    if 'W' not in s:\n        print(max(0,k*2-1))\n    else:\n        t = s.find('W')\n        l = []\n        w = []\n        now = 0\n        ww = 0\n        for i in range(t,n):\n            if s[i]=='W':\n                if now>0:\n                    l.append(now)\n                    now = 0\n                ww+=1\n            else:\n                if ww>0:\n                    w.append(ww)\n                    ww = 0\n                now+=1\n        if ww>0:\n            w.append(ww)\n        res = 0\n        for i in w:\n            res+=i*2-1\n        tail = now\n        l.sort()\n        # print(l,w,res)\n        for i in l:\n            if i>k:\n                res+=2*k \n                k = 0\n                break\n            else:\n                k-=i \n                res+=2*i+1\n        # print(k,tail,t)\n        res+=min(k,tail)*2\n        k = max(0,k-tail)\n        res+=min(t,k)*2\n        print(res)\n"
        },
        {
            "language": 3,
            "solution": "def print_arr(arr):\n    for i, ch in enumerate(arr):\n        if i == len(arr) - 1:\n            print(ch)\n        else:\n            print(ch, end=' ')\n    if not arr:\n        print()\n\n\ndef run(arr):\n    s = sum(arr)\n    if s == 0:\n        print('NO')\n    elif s < 0:\n        arr.sort()\n        print('YES')\n        print_arr(arr)\n    else:\n        arr.sort(reverse=True)\n        print('YES')\n        print_arr(arr)\n\n\ndef chess(s, k):\n    l_count = s.count('L')\n    if l_count <= k:\n        return len(s)*2 - 1\n    interval_count = 1\n    intervals = []\n    start = 0\n    wins = s.count('W') + k\n    for i in range(len(s)):\n        if s[i] == 'W':\n            start = i\n            break\n    is_winning = True\n    curr_lose_size = 0\n    for i in range(start, len(s)):\n        if is_winning and s[i] == 'L':\n            is_winning = False\n            curr_lose_size += 1\n        elif not is_winning and s[i] == 'L':\n            curr_lose_size += 1\n        elif not is_winning and s[i] == 'W':\n            is_winning = True\n            interval_count += 1\n            intervals.append(curr_lose_size)\n            curr_lose_size = 0\n    intervals.sort()\n    for i in intervals:\n        k -= i\n        if k >= 0:\n            interval_count -= 1\n        else:\n            break\n    return wins*2 - interval_count if wins > 0 else 0\n\n\nn = int(input())\nfor _ in range(n):\n    k = int(input().split()[1])\n    s = input()\n    s = list(s)\n    print(chess(s, k))\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n \n\npublic final class Codechef {\n\t\n\tpublic static void main(String[] args){\n\t\tScanner sc=new Scanner(System.in);\n\t\tFastReader re=new FastReader();\n\t\tPrintWriter writer=new PrintWriter(System.out);\n\t\tint t=sc.nextInt();\n\t\twhile(t-->0) {\n\t\t\tint n=sc.nextInt(), k=sc.nextInt();\n\t\t\tString s=sc.next();\n\t\t\tArrayList<Integer> a=new ArrayList<>();\n\t\t\tint ans=0;\n\t\t\tif(s.charAt(0)=='W') ans++;\n\t\t\tfor(int i=1;i<s.length();i++) {\n\t\t\t\tif(s.charAt(i-1)=='W' && s.charAt(i)=='W') ans+=2;\n\t\t\t\telse if(s.charAt(i)=='W') ans++;\n\t\t\t}\n\t\t\tint tmp=0, l=0;\n\t\t\tint z=0;\n\t\t\tfor(int i=0;i<n;i++)\n\t\t\t\tif(s.charAt(i)=='W') {\n\t\t\t\t\tz=i;\n\t\t\t\t\tbreak;\n\t\t\t\t}else {\n\t\t\t\t\tl++;\n\t\t\t\t\tz++;\t\n\t\t\t\t}\n\t\t\t\n\t\t\tfor(int i=z;i<n;i++) {\n\t\t\t\tif(s.charAt(i)=='L') {\n\t\t\t\t\ttmp++;\n\t\t\t\t\tl++;\n\t\t\t\t}\n\t\t\t\telse if(tmp!=0) {\n\t\t\t\t\ta.add(tmp);\n\t\t\t\t\ttmp=0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tCollections.sort(a);\n\t\t\tif(k>=l) ans=(n-1)*2+1;\n\t\t\telse if(l==n) ans=(k-1)*2+1;\n\t\t\telse {\n\t\t\t\tfor(int i=0;i<a.size();) {\n\t\t\t\t\tif(a.get(i)<=k) {\n\t\t\t\t\t\tans+=a.get(i)*2+1;\n\t\t\t\t\t\tk-=a.get(i);\n\t\t\t\t\t\ta.remove(0);\n\t\t\t\t\t}else {\n\t\t\t\t\t\tans+=k*2;\n\t\t\t\t\t\tk=0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n//\t\t\t\tSystem.out.println(ans);\n\t\t\t\tans+=2*k;\n\t\t\t}\n\t\t\tSystem.out.println(Math.max(0, ans));\n\t\t}\n\t\twriter.flush();\n\t\twriter.close();\n  }\n    \n  static class FastReader \n    { \n        BufferedReader br; \n        StringTokenizer st; \n  \n        public FastReader() \n        { \n            br = new BufferedReader(new\n                     InputStreamReader(System.in)); \n        } \n  \n        String next() \n        { \n            while (st == null || !st.hasMoreElements()) \n            { \n                try\n                { \n                    st = new StringTokenizer(br.readLine()); \n                } \n                catch (IOException  e) \n                { \n                    e.printStackTrace(); \n                } \n            } \n            return st.nextToken(); \n        } \n  \n        int nextInt() \n        { \n            return Integer.parseInt(next()); \n        } \n  \n        long nextLong() \n        { \n            return Long.parseLong(next()); \n        } \n  \n        double nextDouble() \n        { \n            return Double.parseDouble(next()); \n        } \n  \n        String nextLine() \n        { \n            String str = \"\"; \n            try\n            { \n                str = br.readLine(); \n            } \n            catch (IOException e) \n            { \n                e.printStackTrace(); \n            } \n            return str; \n        } \n    }\n   \n}"
        },
        {
            "language": 3,
            "solution": "for bleh in range(int(input())):\n    a=list(map(int,input().strip().split(\" \")))[1]\n    b=input()\n    w=b.count(\"W\")\n    if w==0:\n        if a>0:\n            print(2*a-1)\n        else:\n            print(0)\n    else:\n        w=0\n        wt=False\n        \n        lcout=0\n        if b[0]==\"L\":\n            lcout=-1\n        c=[]\n        d=[]\n        for i in b:\n            if i==\"W\":\n                if wt:\n                    w+=2\n                else:\n                    if lcout>0:\n                        if lcout%2==1:\n                            d.append(lcout)\n                        else:\n                            c.append(lcout)\n                        lcout=0\n                    wt=True\n                    w+=1\n            else:\n                if wt:\n                    wt=False\n                lcout+=2\n        if lcout>0:\n            d.append(lcout-1)\n        c.sort()\n        d.sort()\n        for j in c:\n            if j//2>a:\n                w+=2*a\n                a=0\n                break\n            else:\n                w+=j+1\n                a-=(j//2)\n        for j in d:\n            if (j//2+j%2)>a:\n                w+=2*a\n                break\n            else:\n                w+=j+1\n                a-=(j//2+j%2)\n                \n    \n        print(w)"
        },
        {
            "language": 3,
            "solution": "def solve(n, k, games):\n    W, L = \"W\", \"L\"\n    \n    if n == 1:\n        if games[0] == L and k == 0:\n            return 0\n        return 1\n    \n    gl = []\n    wins = 0\n    scores = 0\n    if games[0] == W:\n        scores += 1\n        wins += 1\n    else:\n        gl.append(1)\n    for i in range(1, n):\n        if games[i] == W:\n            wins += 1\n            if games[i-1] == W:\n                scores += 2\n            else:\n                scores += 1\n        else:\n            if games[i-1] == W:\n                gl.append(1)\n            else:\n                gl[-1] += 1\n    \n    m = wins + k\n    if m >= n:\n        return 2*n-1\n    if k == 0:\n        return scores\n    if wins == 0:\n        return 2*k-1\n    \n    if games[0] == L:\n        gl.pop(0)\n    if games[-1] == L:\n        gl.pop()\n    \n    a = 0\n    gl.sort()\n    c = 0\n    for i in range(len(gl)):\n        c += gl[i]\n        if c <= k:\n            a += 1\n        else:\n            break\n    return scores + a + 2*k\n\n\nt = int(input())\nfor i in range(t):\n    n, k = map(int, input().split())\n    games = input()\n    print(solve(n, k, games))\n\n\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n, k = map(int, input().split())\n    s = input()\n    ans = 0\n    init = s.count('L')\n\n    for i in range(1, n):\n        if s[i] == \"W\" and s[i - 1] == \"W\":\n            ans += 2\n        elif s[i] == \"W\":\n            ans += 1\n    if s[0] == 'W':\n        ans += 1\n\n    if k == 0:\n        print(ans)\n        continue\n\n    final = []\n    tmp = s.find('W')\n    count = 0\n    for i in range(tmp + 1, n):\n        if s[i] == 'L':\n            count += 1\n        else:\n            final.append(count)\n            count = 0\n    tmp3 = []\n    for i in final:\n        if i != 0:\n            tmp3.append(i)\n    final = tmp3[:]\n    final.sort()\n    i = 0\n    while k > 0 and i < len(final):\n        if final[i] <= k:\n            k -= final[i]\n            ans += 2 * final[i]\n            ans += 1\n        else:\n            ans += 2 * k\n            k = 0\n        i += 1\n    if 'W' not in s:\n        if k<=n:\n            ans += 2 * k - 1\n        else:\n            ans += 2 * n - 1\n    else:\n        ans += 2 * min(k, (init - sum(final)))\n    print(ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nusing pqboro = priority_queue<long long, vector<long long>, less<long long>>;\nusing pqchoto =\n    priority_queue<long long, vector<long long>, greater<long long>>;\ntemplate <typename T>\nstring toString(T Number) {\n  stringstream ss;\n  ss << Number;\n  return ss.str();\n}\ntemplate <typename T>\nlong long toll(T str) {\n  stringstream ss;\n  ss << str;\n  long long num;\n  ss >> num;\n  return num;\n}\nconst int N = 2e5 + 7;\nconst int M = 1e9 + 7;\nconst long long inf = 0x7f7f7f7f7f7f7f7f;\nvoid run_for_testcase() {\n  long long n, m, i, j, k, x;\n  cin >> n >> k;\n  string s;\n  cin >> s;\n  vector<long long> a;\n  long long tot = 0;\n  long long cnt = 0;\n  i = 0;\n  for (i = 0; i < n; i++) {\n    if (s[i] == 'W') {\n      break;\n    }\n  }\n  for (; i < n; i++) {\n    if (s[i] == 'L') {\n      ++cnt;\n      j = i + 1;\n      for (; j < n; j++) {\n        if (s[j] == 'W') {\n          a.emplace_back(cnt);\n          cnt = 0;\n          break;\n        }\n        ++cnt;\n      }\n      i = j - 1;\n    } else {\n      ++tot;\n      j = i + 1;\n      for (; j < n; j++) {\n        if (s[j] == 'L') {\n          break;\n        }\n        tot += 2;\n      }\n      i = j - 1;\n    }\n  }\n  if (tot == 0) {\n    cout << max(0LL, 2 * k - 1) << endl;\n    return;\n  }\n  sort(a.begin(), a.end());\n  for (i = 0; i < a.size(); i++) {\n    if (a[i] <= k) {\n      k -= a[i];\n      tot += (1 + (a[i] * 2));\n    } else {\n      tot += (k * 2);\n      cout << tot << endl;\n      return;\n    }\n  }\n  if (k > 0) {\n    if (s.front() == 'L') {\n      cnt = 0;\n      for (i = 0; i < n; i++) {\n        if (s[i] == 'L') {\n          ++cnt;\n        } else\n          break;\n      }\n      if (k > cnt) {\n        tot += (cnt * 2);\n        k -= cnt;\n      } else {\n        tot += (k * 2);\n        cout << tot << endl;\n        return;\n      }\n    }\n  }\n  if (k > 0) {\n    if (s.back() == 'L') {\n      cnt = 0;\n      for (i = n - 1; i >= 0; i--) {\n        if (s[i] == 'L')\n          ++cnt;\n        else\n          break;\n      }\n      tot += (min(k, cnt) * 2);\n    }\n  }\n  cout << tot << endl;\n}\nint main() {\n  int tc;\n  cin >> tc;\n  while (tc--) run_for_testcase();\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <class c>\nstruct rge {\n  c b, e;\n};\ntemplate <class c>\nrge<c> range(c i, c j) {\n  return rge<c>{i, j};\n}\ntemplate <class c>\nauto dud(c* x) -> decltype(cerr << *x, 0);\ntemplate <class c>\nchar dud(...);\nstruct debug {\n  template <class c>\n  debug& operator<<(const c&) {\n    return *this;\n  }\n};\nconst long long Mod = 1e9 + 7;\nconst long long inf = 1e18;\nsigned main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  long long t;\n  cin >> t;\n  while (t--) {\n    long long n, k;\n    cin >> n >> k;\n    string s;\n    cin >> s;\n    s += '#';\n    bool ok = false;\n    long long front = 0, back = 0;\n    vector<long long> l;\n    long long ans = 0;\n    long long cntL = 0, cntW = 0;\n    for (long long i = 0; i <= n; i++) {\n      if (s[i] == 'W')\n        cntW++;\n      else {\n        if (cntW) {\n          long long x = 1 + (max(0ll, cntW - 1) * 2);\n          ans += x;\n          cntW = 0;\n        }\n      }\n    }\n    debug() << \"\\033[0;33mLine(\" << 118 << \")\\033[0m\"\n            << \"\\033[1;36m->\"\n            << \"\\033[0m\"\n            << \"\\033[94m [\"\n            << \"ans\"\n               \": \"\n            << (ans) << \"]\\033[0m\";\n    for (long long i = 0; i <= n; i++) {\n      if (s[i] == 'L')\n        cntL++;\n      else {\n        if (!ok) {\n          front = cntL;\n        } else if (s[i] == '#') {\n          back = cntL;\n        } else if (ok) {\n          l.push_back(cntL);\n        }\n        cntL = 0;\n        ok = true;\n      }\n    }\n    debug() << \"\\033[0;33mLine(\" << 134 << \")\\033[0m\"\n            << \"\\033[1;36m->\"\n            << \"\\033[0m\"\n            << \"\\033[94m [\"\n            << \"front\"\n               \": \"\n            << (front)\n            << \"]\\033[0m\"\n               \"\\033[94m [\"\n            << \"back\"\n               \": \"\n            << (back) << \"]\\033[0m\";\n    debug() << \"\\033[0;33mLine(\" << 135 << \")\\033[0m\"\n            << \"\\033[1;36m->\"\n            << \"\\033[0m\"\n            << \"\\033[94m [\"\n            << \"l\"\n               \": \"\n            << (l) << \"]\\033[0m\";\n    sort(l.begin(), l.end());\n    for (long long i = 0; i < (long long)l.size(); i++) {\n      if (l[i] == 0) continue;\n      if (k <= 0) break;\n      if (k < l[i]) break;\n      long long x = min(k, l[i]);\n      ans += (x * 2) + 1;\n      l[i] -= x;\n      k -= x;\n    }\n    debug() << \"\\033[0;33mLine(\" << 146 << \")\\033[0m\"\n            << \"\\033[1;36m->\"\n            << \"\\033[0m\"\n            << \"\\033[94m [\"\n            << \"ans\"\n               \": \"\n            << (ans)\n            << \"]\\033[0m\"\n               \"\\033[94m [\"\n            << \"k\"\n               \": \"\n            << (k) << \"]\\033[0m\";\n    for (long long i = 0; i < (long long)l.size(); i++) {\n      if (k <= 0) break;\n      long long x = min(k, l[i]);\n      ans += (x + x);\n      k -= x;\n    }\n    long long x = min(k, front + back);\n    if (x) {\n      if (ans > 0) {\n        ans += (x * 2);\n      } else {\n        ans += 2 * x - 1;\n      }\n    }\n    cout << ans << '\\n';\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "def main():\n    t = int(input())\n    for _ in range(t):\n        n, k = map(int, input().split())\n        l = list(input())   # not s!!\n        segments = []\n        previous_w = -1\n        first_w = n; last_w = -1\n        for c, el in enumerate(l):\n            if el == \"W\":\n                if previous_w != -1 and c != previous_w + 1:\n                    segments.append((c - previous_w - 1, previous_w, c))\n                previous_w = c\n                first_w = min(first_w, c)\n                last_w = max(last_w, c)\n        segments.sort()\n        z = 0\n        while z < len(segments):\n            current_segment = segments[z]\n            z += 1\n            for i in range(min(k, current_segment[0])):\n                l[current_segment[1] + i + 1] = \"W\"\n            k -= current_segment[0]\n            if k <= 0:\n                break\n        if k > 0:\n            for j in range(min(first_w, k)):\n                l[first_w - j - 1] = \"W\"\n        k -= first_w\n        if k > 0 and first_w != n:\n            for x in range(min(n - last_w - 1, k)):\n                l[last_w + x + 1] = \"W\"\n        #print(l, first_w, last_w, segments, k)\n        total = 0; dub = False\n        for c, el in enumerate(l):\n            if el == \"W\":\n                total += 1 + dub\n            dub = el == \"W\"\n        print(total)\nmain()"
        },
        {
            "language": 3,
            "solution": "import sys,os,io\ninput = sys.stdin.readline\n#input = io.BytesIO(os.read(0,os.fstat(0).st_size)).readline\nT = int(input())\nans = [0]*T\nfor t in range(T):\n  N, K = map(int, input().split())\n  S = input().split()[0]\n  ans[t] = 0\n  for i,s in enumerate(S):\n    if i==0:\n      if s=='W':\n        ans[t] += 1\n    elif s=='W':\n      ans[t] += 1\n      if S[i-1]=='W':\n        ans[t] += 1\n  if 'W' in S:\n    ans[t] += min(S.count('L'),K)*2\n  else:\n    ans[t] += max(min(S.count('L'),K)*2-1,0)\n  # cnt = 0\n  # lis = []\n  # for n in range(N):\n  #   if S[n]=='L':\n  #     cnt += 1\n  #   elif cnt>0:\n  #     cnt = 0\n  #     if len(lis) or S[0]=='L':\n  #       lis.append(cnt)\n  T = S.split('W')\n  lis = []\n  for r in T[1:-1]:\n    if len(r)>0:\n      lis.append(len(r))\n  if len(lis):\n    # if cnt>0 and (len(lis) or S[0]=='L'):\n    # lis.append(cnt)\n    lis.sort()\n    for l in lis:\n      if K>=l:\n        ans[t] += 1\n        K -= l\nprint(*ans, sep='\\n')"
        },
        {
            "language": 3,
            "solution": "from bisect import *\nfrom collections import *\nfrom math import *\nfrom heapq import *\nfrom typing import List\nfrom itertools import *\nfrom operator import *\nfrom functools import *\n\n#------------------------------------------------------------------------\nimport os\nimport sys\nfrom io import BytesIO, IOBase\n# region fastio\n \nBUFSIZE = 8192\n \nclass FastIO(IOBase):\n    newlines = 0\n \n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n \n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n \n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n \n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n \n \nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n \n \nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n#------------------------------------------------------------------------\ndef RL(): return map(int, sys.stdin.readline().rstrip().split())\ndef RLL(): return list(map(int, sys.stdin.readline().rstrip().split()))\ndef N(): return int(input())\n#------------------------------------------------------------------------\n\n@lru_cache(None)\ndef fact(x):\n    if x<2:\n        return 1\n    return fact(x-1)*x\n\n@lru_cache(None)\ndef per(i,j):\n    return fact(i)//fact(i-j)\n\n@lru_cache(None)\ndef com(i,j):\n    return per(i,j)//fact(j)\n\ndef linc(f,t,l,r):\n    while l<r:\n        mid=(l+r)//2\n        if t>f(mid):\n            l=mid+1\n        else:\n            r=mid\n    return l\n\ndef rinc(f,t,l,r):\n    while l<r:\n        mid=(l+r+1)//2\n        if t<f(mid):\n            r=mid-1\n        else:\n            l=mid\n    return l\n\ndef ldec(f,t,l,r):\n    while l<r:\n        mid=(l+r)//2\n        if t<f(mid):\n            l=mid+1\n        else:\n            r=mid\n    return l\n\ndef rdec(f,t,l,r):\n    while l<r:\n        mid=(l+r+1)//2\n        if t>f(mid):\n            r=mid-1\n        else:\n            l=mid\n    return l\n\ndef isprime(n):\n    for i in range(2,int(n**0.5)+1):\n        if n%i==0:\n            return False\n    return True\n\ndef binfun(x):\n    c=1\n    res=0\n    for w in arr:\n        res+=w\n        if res>x:\n            res=w\n        c+=1\n    return c\n\ndef lowbit(n):\n    return n&-n\n\nclass BIT:\n    def __init__(self,arr):\n        self.arr=arr\n        self.n=len(arr)-1\n        \n    def update(self,x,v):\n        while x<=self.n:\n            self.arr[x]+=v\n            x+=x&-x\n\n    def query(self,x):\n        ans=0\n        while x:\n            ans+=self.arr[x]\n            x&=x-1\n        return ans\n\nclass smt:\n    def __init__(self,l,r,arr):\n        self.l=l\n        self.r=r\n        self.value=(1<<31)-1 if l<r else arr[l]\n        mid=(l+r)//2\n        if(l<r):\n            self.left=smt(l,mid,arr)\n            self.right=smt(mid+1,r,arr)\n            self.value&=self.left.value&self.right.value\n        #print(l,r,self.value)\n    def setvalue(self,x,val):\n        if(self.l==self.r):\n            self.value=val\n            return\n        mid=(self.l+self.r)//2\n        if(x<=mid):\n            self.left.setvalue(x,val)\n        else:\n            self.right.setvalue(x,val)\n        self.value=self.left.value&self.right.value\n    def ask(self,l,r):\n        if(l<=self.l and r>=self.r):\n            return self.value\n        val=(1<<31)-1\n        mid=(self.l+self.r)//2\n        if(l<=mid):\n            val&=self.left.ask(l,r)\n        if(r>mid):\n            val&=self.right.ask(l,r)\n        return val\n\nclass UFS:\n    def __init__(self,n):\n        self.parent=[i for i in range(n)]\n        self.ranks=[0]*n\n\n    def find(self,x):\n        if x!=self.parent[x]:\n            self.parent[x]=self.find(self.parent[x])\n        return self.parent[x]\n\n    def union(self,u,v):\n        pu,pv=self.find(u),self.find(v)\n        if pu==pv:\n            return False\n        if self.ranks[pu]>=self.ranks[pv]:\n            self.parent[pv]=pu\n            if self.ranks[pv]==self.ranks[pu]:\n                self.ranks[pu]+=1\n        else:\n            self.parent[pu]=pv\n\ndef Prime(n):\n    c=0\n    prime=[]\n    flag=[0]*(n+1)\n    for i in range(2,n+1):\n        if not flag[i]:\n            prime.append(i)\n            c+=1\n        for j in range(c):\n            if i*prime[j]>n: break\n            flag[i*prime[j]]=prime[j]\n            if i%prime[j]==0: break\n    return prime\n\ndef dij(s,graph):\n    d={}\n    d[s]=0\n    heap=[(0,s)]\n    seen=set()\n    while heap:\n        dis,u=heappop(heap)\n        if u in seen:\n            continue\n        for v in graph[u]:\n            if v not in d or d[v]>d[u]+graph[u][v]:\n                d[v]=d[u]+graph[u][v]\n                heappush(heap,(d[v],v))\n    return d\n\n'''\nimport time\ns=time.time()\nfor i in range(2000):\n    print(0)\ne=time.time()\nprint(e-s)\n'''\n\nt=N()\nfor i in range(t):\n    n,k=RL()\n    s=input()\n    ans=0\n    for i in range(n):\n        if s[i]=='W':\n            if i==0:\n                ans+=1\n            else:\n                ans+=1+(s[i-1]=='W')\n    if ans==0:\n        ans=2*k-1 if k else 0\n    else:\n        arr=[]\n        for ch,g in groupby(s):\n            l=len(list(g))\n            arr.append((ch,l))\n        res=0\n        c=Counter()\n        for i,(ch,l) in enumerate(arr):\n            if ch=='L':\n                if i==0 or i==len(arr)-1:\n                    res+=l\n                else:\n                    c[l]+=1\n        for m in sorted(c.keys()):\n            if k<=m*c[m]:\n                x,y=divmod(k,m)\n                ans+=x*(2*m+1)+2*y\n                k=0\n                break\n            else:\n                k-=m*c[m]\n                ans+=c[m]*(2*m+1)\n        if k:\n            if res:\n                ans+=min(res,k)*2\n                k=0\n    print(ans)\n\n\n\n'''\nn,m=RL()\narr=[]\nfor i in range(n):\n    arr.append(input())\nrow=[0]*n\ncol=[0]*m\nfor i in range(n):\n    for j in range(m):\n        if arr[i][j]=='*':\n            row[i]+=1\n            col[j]+=1\nans=0\n#print(row,col)\nfor i in range(n):\n    for j in range(m):\n        if arr[i][j]=='*':\n            ans+=(row[i]-1)*(col[j]-1)\nprint(ans)\n'''\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MOD = 1e9 + 7;\nvoid solve() {\n  long long int n, k;\n  cin >> n >> k;\n  string s;\n  cin >> s;\n  long long int idx = 0;\n  while ((s[idx] == 'L') && (idx < n)) {\n    idx++;\n  }\n  if (idx == n) {\n    cout << max(0LL, 2 * min(n, k) - 1) << \"\\n\";\n    return;\n  }\n  long long int loss = 0;\n  long long int win = 0;\n  long long int ans = 0;\n  vector<long long int> cnt;\n  for (long long int i = idx; i < n; i++) {\n    if (s[i] == 'L') {\n      loss++;\n      win = 0;\n    } else {\n      if (loss > 0) {\n        cnt.push_back(loss);\n        loss = 0;\n      }\n      if (win == 0) {\n        ans += 1;\n      } else {\n        ans += 2;\n      }\n      win++;\n    }\n  }\n  long long int cntsi = cnt.size();\n  sort(cnt.begin(), cnt.end());\n  for (long long int i = 0; i < cntsi; i++) {\n    if (k < cnt[i]) {\n      ans += k * 2;\n      k = 0;\n    } else {\n      ans += cnt[i] * 2 + 1;\n      k = k - cnt[i];\n    }\n    if (k == 0) {\n      break;\n    }\n  }\n  if (k > 0) {\n    ans = min(ans + k * 2, 2 * n - 1);\n  }\n  cout << ans << \"\\n\";\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  int t;\n  cin >> t;\n  while (t--) {\n    solve();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class B {\n    public static void main(String[] args) throws IOException{\n        BufferedReader f = new BufferedReader(new InputStreamReader(System.in));\n        PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));\n        int t = Integer.parseInt(f.readLine());\n        while(t-->0){\n            StringTokenizer st = new StringTokenizer(f.readLine());\n            int n = Integer.parseInt(st.nextToken());\n            int k = Integer.parseInt(st.nextToken());\n            String str = f.readLine();\n            int curls = 0;\n            boolean onl = false;\n            boolean reachw = false;\n            ArrayList<Integer> seqs = new ArrayList<Integer>();\n            int ends = 0;\n            for(int i = 0; i < n; i++){\n                if(str.charAt(i) == 'W' && !reachw){\n                    reachw = true;\n                    ends+=i;\n                }\n                if(str.charAt(i) == 'L' && reachw && !onl){\n                    onl = true;\n                    curls++;\n                }else if(str.charAt(i) == 'L' && reachw && onl){\n                    curls++;\n                }else if(str.charAt(i) == 'W' && reachw && onl){\n                    onl = false;\n                    seqs.add(curls);\n                    curls = 0;\n                }\n            }\n            ends+=curls;\n            Collections.sort(seqs);\n            long ans = 0;\n            for(int i = 0; i < n; i++){\n                if(i == 0 && str.charAt(i) == 'W') ans++;\n                else if(str.charAt(i) == 'W' && str.charAt(i-1) == 'L') ans++;\n                else if(str.charAt(i) == 'W' && str.charAt(i-1) == 'W') ans+=2;\n            }\n            for(int i = 0; i < seqs.size(); i++){\n                if(k >= seqs.get(i)){\n                    ans+=(2*seqs.get(i)+1);\n                    k-=seqs.get(i);\n                }else{\n                    ans+=(2*k);\n                    k = 0;\n                    break;\n                }\n            }\n            if(!reachw){\n                ans = Math.max(0, (2*k)-1);\n            }\n            else if(k > 0){\n                ans+=(2*Math.min(ends,k));\n            }\n            out.println(ans);\n\n\n        }\n\n        out.close();\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\nimport static java.lang.Math.max;\nimport static java.lang.Math.min;\n\npublic class T1 {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int t = sc.nextInt();\n        while(t-->0) {\n            int n = sc.nextInt();\n            int k = sc.nextInt();\n            char[] a = sc.next().toCharArray();\n\n            int score = 0;\n            int[] runs = new int[n+1];\n            int last_win = -1;\n            for(int i = 0; i < n; i++) {\n                if(a[i] == 'W') {\n                    if(last_win != -1 && last_win == i-1) {\n                        score += 2;\n                    } else {\n                        score += 1;\n                    }\n\n                    if(last_win != -1 && last_win != i-1) {\n                        runs[i-last_win-1]++;\n                    }\n                    last_win = i;\n                }\n            }\n\n            if(last_win == -1) {\n                System.out.println(max(0, 2*k-1));\n            } else {\n                score += 2*k;\n                int rem = k;\n                for(int i = 1; i <= n; i++) {\n                    while(rem >= i && runs[i] > 0) {\n                        runs[i]--;\n                        rem -= i;\n                        score++;\n                    }\n                }\n\n                System.out.println(min(score, 2*n-1));\n            }\n        }\n    }\n\n}\n"
        },
        {
            "language": 1,
            "solution": "from __future__ import division\nfrom sys import stdin, stdout\n# from fractions import gcd\n# from math import *\n# from operator import mul\n# from functools import reduce\n# from copy import copy\nfrom collections import deque, defaultdict, Counter\n\nrstr = lambda: stdin.readline().strip()\nrstrs = lambda: [str(x) for x in stdin.readline().split()]\nrint = lambda: int(stdin.readline())\nrints = lambda: [int(x) for x in stdin.readline().split()]\nrstr_2d = lambda n: [rstr() for _ in range(n)]\nrint_2d = lambda n: [rint() for _ in range(n)]\nrints_2d = lambda n: [rints() for _ in range(n)]\npr = lambda args, sep: stdout.write(sep.join(map(str, args)) + '\\n')\nout = []\n\nfor _ in range(int(input())):\n    n, k = rints()\n    s, ans, intervals = list(rstr()), 0, []\n    if 'W' not in s:\n        if k:\n            out.append(1 + 2 * (k - 1))\n        else:\n            out.append(0)\n    else:\n        lst = s.index('W')\n        for i in range(lst + 1, n):\n            if s[i] == 'W':\n                if s[i - 1] == 'L':\n                    intervals.append([lst, i])\n                    lst = i\n                else:\n                    lst = i\n\n        intervals.sort(key=lambda x: x[1] - x[0])\n        for i in intervals:\n            if not k:\n                break\n            for j in range(i[0] + 1, i[1]):\n                if not k:\n                    break\n\n                s[j] = 'W'\n                k -= 1\n\n        for i in range(n):\n            if s[i] == 'W':\n                for j in range(i - 1, -1, -1):\n                    if not k:\n                        break\n                    k -= 1\n                    s[j] = 'W'\n                break\n\n        for i in range(n - 1, -1, -1):\n            if s[i] == 'W':\n                for j in range(i + 1, n):\n                    if not k:\n                        break\n                    k -= 1\n                    s[j] = 'W'\n                break\n\n        for i in range(n):\n            if s[i] == 'W':\n                if (i == 0 or s[i - 1] != 'W'):\n                    ans += 1\n                else:\n                    ans += 2\n\n        out.append(ans)\n\npr(out, '\\n')\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class A {\n    FastScanner in;\n    PrintWriter out;\n\n    void solve() {\n        int tc = in.nextInt();\n        for (int t = 0; t < tc; t++) {\n            int n = in.nextInt();\n            int k = in.nextInt();\n            char[] s = in.next().toCharArray();\n            int first = 0;\n            while (first != n && s[first] != 'W') {\n                first++;\n            }\n            int rfirst = first;\n            List<Segment> segs = new ArrayList<>();\n            while (first != n) {\n                int next = first + 1;\n                while (next != n && s[next] == 'L') {\n                    next++;\n                }\n                if (next != first + 1 && next != n) {\n                    segs.add(new Segment(first + 1, next - 1));\n                }\n                first = next;\n            }\n            Collections.sort(segs);\n            for (Segment seg : segs) {\n                for (int pos = seg.from; pos <= seg.to; pos++) {\n                    if (k > 0) {\n                        s[pos] = 'W';\n                        k--;\n                    }\n                }\n            }\n            for (int i = rfirst - 1; i >= 0; i--) {\n                if (s[i] == 'L' && k > 0) {\n                    k--;\n                    s[i] = 'W';\n                }\n            }\n            for (int i = 0; i < n; i++) {\n                if (s[i] == 'L' && k > 0) {\n                    k--;\n                    s[i] = 'W';\n                }\n            }\n            int res = 0;\n            for (int i = 0; i < n; i++) {\n                if (s[i] == 'W') {\n                    res++;\n                    if (i > 0 && s[i - 1] == 'W') {\n                        res++;\n                    }\n                }\n            }\n            out.println(res);\n        }\n    }\n\n    class Segment implements Comparable<Segment> {\n        int from, to;\n        int len;\n\n        public Segment(int from, int to) {\n            this.from = from;\n            this.to = to;\n            len = to - from;\n        }\n\n        @Override\n        public int compareTo(Segment o) {\n            return Integer.compare(len, o.len);\n        }\n    }\n\n    void run() {\n        try {\n            in = new FastScanner(new File(\"A.in\"));\n            out = new PrintWriter(new File(\"A.out\"));\n\n            solve();\n\n            out.close();\n        } catch (FileNotFoundException e) {\n            e.printStackTrace();\n        }\n    }\n\n    void runIO() {\n\n        in = new FastScanner(System.in);\n        out = new PrintWriter(System.out);\n\n        solve();\n\n        out.close();\n    }\n\n    class FastScanner {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public FastScanner(File f) {\n            try {\n                br = new BufferedReader(new FileReader(f));\n            } catch (FileNotFoundException e) {\n                e.printStackTrace();\n            }\n        }\n\n        public FastScanner(InputStream f) {\n            br = new BufferedReader(new InputStreamReader(f));\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreTokens()) {\n                String s = null;\n                try {\n                    s = br.readLine();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n                if (s == null)\n                    return null;\n                st = new StringTokenizer(s);\n            }\n            return st.nextToken();\n        }\n\n        boolean hasMoreTokens() {\n            while (st == null || !st.hasMoreTokens()) {\n                String s = null;\n                try {\n                    s = br.readLine();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n                if (s == null)\n                    return false;\n                st = new StringTokenizer(s);\n            }\n            return true;\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n    }\n\n    public static void main(String[] args) {\n        new A().runIO();\n    }\n}"
        },
        {
            "language": 3,
            "solution": "for i in range(int(input())):\n    n, k = map(int, input().split())\n    s = input()\n    wins = s.count('W') + k\n    if wins >= n:\n        print(2 * n - 1)\n    elif wins == k:\n        print(max(2 * k - 1, 0))\n    else:\n        streaks = int(s[0] == 'W') + s.count('LW')\n        gaps = s.strip('L').replace('W', ' ').strip().split()\n        for g in sorted(map(len, gaps)):\n            if g > k:\n                break\n            k -= g\n            streaks -= 1\n        print(wins * 2 - streaks)\n"
        },
        {
            "language": 4,
            "solution": "/*\nCodeforces\nProblem 1427B\n*/\n\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.List;\n\npublic class ChessCheater {\n\t\n\tpublic static void main(String[] args) throws IOException {\n\t\tFastIO in = new FastIO(System.in);\n\t\t\n\t\tint t = in.nextInt();\n\t\twhile (t-- > 0)\n        {\n            long n = in.nextLong();\n            long k = in.nextLong();\n \n            String s = in.next().trim();\n \n            long countOfWins = 0;\n            long countOfWinStreaks = 0;\n \n            for (int i = 0; i < s.length(); ++i)\n            {\n                if (s.charAt(i) == 'W') countOfWins++;\n \n                if (i == 0) {\n                    if (s.charAt(i) == 'W') countOfWinStreaks++;\n                } else {\n                    if (s.charAt(i) == 'W' && s.charAt(i-1) != 'W') {\n                        countOfWinStreaks++;\n                    }\n                }\n            }\n \n            if ((k + countOfWins) >= n) {\n                System.out.println(2*n-1);\n            } else if (countOfWins == 0) {\n                if (k == 0) System.out.println(0);\n                else System.out.println(2*k-1);\n            }\n            else {\n                List<Integer> grips = new ArrayList<>();\n \n \n                for (int i = 0; i < n; )\n                {\n                    if (s.charAt(i) == 'L') {\n                        int j = i;\n                        while (j < n && s.charAt(j) == 'L') {\n                            j++;\n                        }\n                        grips.add(j - i);\n                        i = j;\n                    } else {\n                        i++;\n                    }\n                }\n \n                if (s.charAt(0) == 'L') grips.set(0, Integer.MAX_VALUE);\n                if (s.charAt((int)(n-1)) == 'L') grips.set(grips.size() - 1, Integer.MAX_VALUE);\n \n                Collections.sort(grips);\n \n                int countOfFillGrips = 0;\n \n                long local = k;\n                for (int grip : grips)\n                {\n                    if (grip > local) break;\n                    local -= grip;\n                    countOfWinStreaks--;\n                }\n \n                System.out.println(2 * (k + countOfWins) - countOfWinStreaks);\n            }\n        }\n\t\t\n\t\tin.close();\n\t}\n\t\n\tpublic static class Gap implements Comparable<Gap> {\n\t\tint length;\n\t\tboolean begin;\n\t\tboolean end;\n\t\t\n\t\tpublic Gap(int length, boolean begin, boolean end) {\n\t\t\tthis.length = length;\n\t\t\tthis.begin = begin;\n\t\t\tthis.end = end;\n\t\t}\n\n\t\t@Override\n\t\tpublic int compareTo(Gap o) {\n\t\t\tif (length != o.length) return length - o.length;\n\t\t\telse return begin || end ? 1 : -1;\n\t\t}\n\t\t\n\t\t@Override\n\t\tpublic String toString() {\n\t\t\treturn length + \" \" + begin + \" \" + end;\n\t\t}\n\t}\n\t\n\tpublic static class FastIO {\n\t\tprivate InputStream dis;\n\t\tprivate byte[] buffer = new byte[1 << 17];\n\t\tprivate int pointer = 0;\n\t\n\t\tpublic FastIO(String fileName) throws IOException {\n\t\t\tdis = new FileInputStream(fileName);\n\t\t}\n\t\n\t\tpublic FastIO(InputStream is) throws IOException {\n\t\t\tdis = is;\n\t\t}\n\t\n\t\tpublic int nextInt() throws IOException {\n\t\t\tint ret = 0;\n\t\t\tbyte b;\n\t\t\t\n\t\t\tdo {\n\t\t\t\tb = nextByte();\n\t\t\t} while (b <= ' ');\n\t\t\t\n\t\t\tboolean negative = false;\n\t\t\tif (b == '-') {\n\t\t\t\tnegative = true;\n\t\t\t\tb = nextByte();\n\t\t\t}\n\t\t\t\n\t\t\twhile (b >= '0' && b <= '9') {\n\t\t\t\tret = 10 * ret + b - '0';\n\t\t\t\tb = nextByte();\n\t\t\t}\n\t\n\t\t\treturn (negative) ? -ret : ret;\n\t\t}\n\t\n\t\tpublic long nextLong() throws IOException {\n\t\t\tlong ret = 0;\n\t\t\tbyte b;\n\t\t\t\n\t\t\tdo {\n\t\t\t\tb = nextByte();\n\t\t\t} while (b <= ' ');\n\t\t\t\n\t\t\tboolean negative = false;\n\t\t\tif (b == '-') {\n\t\t\t\tnegative = true;\n\t\t\t\tb = nextByte();\n\t\t\t}\n\t\t\t\n\t\t\twhile (b >= '0' && b <= '9') {\n\t\t\t\tret = 10 * ret + b - '0';\n\t\t\t\tb = nextByte();\n\t\t\t}\n\t\t\t\n\t\t\treturn (negative) ? -ret : ret;\n\t\t}\n\t\n\t\tpublic byte nextByte() throws IOException {\n\t\t\tif (pointer == buffer.length) {\n\t\t\t\tdis.read(buffer, 0, buffer.length);\n\t\t\t\tpointer = 0;\n\t\t\t}\n\t\t\treturn buffer[pointer++];\n\t\t}\n\t\n\t\tpublic String next() throws IOException {\n\t\t\tStringBuffer ret = new StringBuffer();\n\t\t\tbyte b;\n\t\t\t\n\t\t\tdo {\n\t\t\t\tb = nextByte();\n\t\t\t} while (b <= ' ');\n\t\t\t\n\t\t\twhile (b > ' ') {\n\t\t\t\tret.appendCodePoint(b);\n\t\t\t\tb = nextByte();\n\t\t\t}\n\t\n\t\t\treturn ret.toString();\n\t\t}\n\t\n\t\tpublic void close() throws IOException {\n\t\t\tdis.close();\n\t\t}\n\t}\n}"
        },
        {
            "language": 3,
            "solution": "nums = int(input().strip())\nfor  _ in range(nums):\n    n,k = map(int,input().strip().split())\n    s = input().strip()\n    lw,rw = s.find(\"W\"),s.rfind(\"W\")\n    res = cur_num = 0\n    if lw==rw:\n        if lw==-1:\n            res = 2*k-1\n        else:\n            res = 2*k+1\n        res = min(2*len(s)-1,res)\n    else:\n        part = []\n        for i in range(lw,rw+1):\n            if s[i]==\"W\":\n                if i>lw and s[i-1]==\"L\":\n                    part.append(cur_num)\n                    cur_num = 0\n                if i>lw and s[i-1]==\"W\":\n                    res+=2\n                else:\n                    res+=1\n            else:\n                cur_num+=1\n        if k>=(sum(part)+lw+len(s)-rw-1):\n            res = 2*len(s)-1\n        else:\n            part.sort()\n            for i in range(len(part)):\n                if k>=part[i]:\n                    res+=2*part[i]+1\n                    k-=part[i]\n                else:\n                    break\n            res+=2*k\n    print(max(res,0))"
        },
        {
            "language": 3,
            "solution": "from sys import stdin\n\ntt = int(stdin.readline())\n\nfor loop in range(tt):\n\n    n,k = map(int,stdin.readline().split())\n    s = list(stdin.readline()[:-1])\n\n    end = 0\n    if \"W\" not in s:\n        print (max(0,2*k-1))\n        continue\n\n    while s[-1] == \"L\":\n        end += 1\n        del s[-1]\n    s.reverse()\n    while s[-1] == \"L\":\n        end += 1\n        del s[-1]\n\n    q = []\n    now = []\n    for i in range(len(s)):\n        if s[i] == \"L\":\n            now.append(i)\n        else:\n            for j in now:\n                q.append((len(now) , j))\n            now = []\n\n    q.sort()\n    for num,ind in q:\n        if k <= 0:\n            break\n        s[ind] = \"W\"\n        k -= 1\n    ans = min(end,k)*2\n    for i in range(len(s)):\n        if s[i] == \"W\":\n            if i != 0 and s[i-1] == \"W\":\n                ans += 2\n            else:\n                ans += 1\n    print (ans)\n    "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nchar a[100010];\nint main() {\n  int tc;\n  scanf(\"%d\", &tc);\n  while (tc--) {\n    int n, k;\n    priority_queue<int, vector<int>, greater<int> > pq;\n    scanf(\"%d %d\", &n, &k);\n    scanf(\"\\n%s\", a);\n    int cnt = 0, p = 0, ch = 0, i = 0;\n    while (a[i] == 'L') {\n      i++;\n    }\n    ch = i;\n    for (; i < n; i++) {\n      if (a[i] == 'W' && p != 0) {\n        cnt += 1;\n        pq.push(p);\n        p = 0;\n      } else if (a[i] == 'W')\n        cnt += i == ch ? 1 : 2;\n      else\n        p++;\n    }\n    if (a[n - 1] == 'L') ch += p;\n    while (!pq.empty() && k > 0) {\n      int c = pq.top();\n      pq.pop();\n      if (k >= c) {\n        cnt += 2 * c + 1;\n        k -= c;\n      } else {\n        cnt += 2 * k;\n        k = 0;\n      }\n    }\n    if (ch == n && k > 0)\n      cnt += 2 * (k > ch ? ch : k) - 1;\n    else if (k > 0)\n      cnt += 2 * (k > ch ? ch : k);\n    printf(\"%d\\n\", cnt);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "def cc(l):\n    f = 0\n    ans = 0\n    for x in l:\n        if x=='W' and f==1:\n            ans += 2\n        elif x=='W':\n            ans += 1\n            f = 1\n        else:\n            f = 0\n    return ans\n            \nfor _ in range(input()):\n    n,k = map(int,raw_input().split())\n    a = raw_input()\n    l =[]\n    c = 0\n    f = 0\n    for i in range(n):\n        if a[i]=='L':\n            c+=1\n        else:\n            \n            if f==0:\n                start = c\n                f = 1\n            else:\n                l.append(c)\n            c = 0\n    end = c\n    ans = cc(a)\n    l.sort()\n    for x in l:\n        if x==0:\n            continue\n        if x<=k:\n            ans += 2*x + 1\n            k-=x\n        else:\n            ans += 2*k\n            k= 0\n    if k!=0:\n        if a.count('W')==0:\n            p = min(k,n)\n            ans += 2*(p-1)+1\n        else:\n            ans += 2*(min(start + end, k))\n    print ans\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long double PI = 3.141592653589793;\nconst long long mod = 1e9 + 7;\nint CASE = 1;\nconst int mxn = 1e5 + 1;\nconst long long infll = 1e18;\nconst int infi = 1e9;\nbool prime(long long n) {\n  if (n <= 1) return false;\n  if (n == 2 or n == 3) return true;\n  if (n % 2 == 0 or n % 3 == 0) return false;\n  for (long long i = 5; i * i <= n; i += 6)\n    if (n % i == 0 || n % (i + 2) == 0) return false;\n  return true;\n}\nlong long __gcd(long long a, long long b) { return !b ? a : __gcd(b, a % b); }\nlong long power(long long a, long long b) {\n  long long x = a, res = 1, p = b;\n  while (p > 0) {\n    if (p & 1) res *= x;\n    x *= x;\n    p >>= 1;\n  }\n  return res;\n}\nvoid solve() {\n  int n, m;\n  cin >> n >> m;\n  string s;\n  cin >> s;\n  vector<pair<int, int> > pos;\n  char pre = 'L';\n  if (s.find('W') == -1) {\n    cout << m * 2 - 1 * (m > 0) << '\\n';\n    return;\n  }\n  for (long long i = 0; i < n; i++) {\n    if (s[i] == 'W') {\n      if (pre == 'L') {\n        pre = 'W';\n        pos.push_back(make_pair(i, i));\n      } else {\n        pos.back().second++;\n      }\n    } else {\n      pre = 'L';\n    }\n  }\n  vector<pair<int, int> > v;\n  for (int i = 0; i < pos.size() - 1; i++) {\n    v.push_back(\n        make_pair(pos[i].second + 1, pos[i + 1].first - pos[i].second - 1));\n  }\n  sort(v.begin(), v.end(),\n       [](pair<int, int> a, pair<int, int> b) { return a.second < b.second; });\n  for (auto x : v) {\n    if (m >= x.second) {\n      for (int i = x.first; s[i] == 'L'; i++) s[i] = 'W', m--;\n    } else {\n      for (int i = x.first; m > 0; i++, m--) s[i] = 'W';\n    }\n  }\n  int index = s.find('W') - 1;\n  while (index >= 0 && s[index] == 'L' && m > 0) {\n    s[index] = 'W';\n    m--;\n    index--;\n  }\n  index = s.find_last_of('W') + 1;\n  while (index < n && s[index] == 'L' && m > 0) {\n    s[index] = 'W';\n    m--;\n    index++;\n  }\n  int ans = 0;\n  pre = 'C';\n  for (int i = 0; i < n; i++) {\n    if (s[i] == 'L')\n      pre = 'L';\n    else {\n      if (pre == 'W')\n        ans += 2;\n      else\n        ans++, pre = 'W';\n    }\n  }\n  cout << ans << '\\n';\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  int T;\n  cin >> T;\n  while (T--) {\n    solve();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "# from bisect import bisect_left\nTC = int(input())\n\nfor tc in range(TC):\n    N, K = map(int, input().split())\n    S = list(input())\n    w = 0\n    l = []\n    rw = 0\n    rl = 0\n    start = 0\n    for s in S:\n        if s == 'W':\n            if rl > 0:\n                if w > 0:\n                    l.append(rl)\n                else:\n                    start = rl\n                rl = 0\n            if rw > 0:\n                rw += 2\n            else:\n                rw = 1\n        else:\n            if rw > 0:\n                w += rw\n                rw = 0\n            rl += 1\n\n    if rl > 0:\n        start += rl\n\n    if rw > 0:\n        w += rw\n\n    l.sort()\n\n    # print('w', w)\n\n    for lc in l:\n        if K >= lc:\n            w += 2 * lc + 1\n            K -= lc\n        else:\n            w += 2 * K\n            K = 0\n            break\n\n    # print('w2', w)\n\n    if K > start:\n        if w > 0:\n            w += start * 2\n        else:\n            w = start * 2 - 1\n    else:\n        if w > 0:\n            w += K * 2\n        elif K > 0:\n            w = K * 2 - 1\n\n    print(w)\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Collections;\n\npublic class ChessCheater {\n    public static void main(String[] args) throws Exception {\n        BufferedReader buffer = new BufferedReader(new InputStreamReader(System.in));\n        StringBuilder sb = new StringBuilder();\n        int t = Integer.parseInt(buffer.readLine());\n        while (t-- > 0) {\n            String[] inp = buffer.readLine().split(\" \");\n            int n = Integer.parseInt(inp[0]), k = Integer.parseInt(inp[1]);\n            char[] matches = buffer.readLine().toCharArray();\n            ArrayList<Integer> arrayList = new ArrayList<>();\n            int loss, win = 0, winStreak = 0;\n            for (int i = 0; i < n; i++) {\n                if (matches[i] == 'W') {\n                    win++;\n                    if (i == 0 || matches[i - 1] == 'L')\n                        winStreak++;\n                } else {\n                    if (i == 0 || matches[i - 1] == 'W') arrayList.add(0);\n\n                    arrayList.set(arrayList.size() - 1, arrayList.get(arrayList.size() - 1) + 1);\n                }\n            }\n            loss = n - win;\n            if (loss <= k) {\n                sb.append(2 * n - 1).append(\"\\n\");\n                continue;\n            }\n            if (win == 0) {\n                if (k == 0)\n                    sb.append(0 + \"\\n\");\n                else\n                    sb.append(2 * k - 1).append(\"\\n\");\n                continue;\n            }\n            if (matches[n - 1] == 'L')\n                arrayList.set(arrayList.size() - 1, Integer.MAX_VALUE);\n            if (matches[0] == 'L')\n                arrayList.set(0, Integer.MAX_VALUE);\n            Collections.sort(arrayList);\n            win += k;\n            int score;\n            for (int gap : arrayList) {\n                if (gap > k) break;\n                winStreak--;\n                k -= gap;\n            }\n            score = 2 * win - winStreak;\n            sb.append(score + \"\\n\");\n        }\n        System.out.println(sb);\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class GFG {  \n\tpublic static void main(String args[])\n\t{\n\t\t Scanner take=new Scanner(System.in);\n\t\t int t=take.nextInt();\n\t\t int i,j;\n\t\t while(t--!=0)\n\t\t {\n\t\t\t int n=take.nextInt();\n\t\t\t int k=take.nextInt();\n\t\t\t char a[]=take.next().toCharArray();\n\t\t\t int ans=0;\n\t\t\t if(a[0]=='W') ans++;\n\t\t\t for(i=1;i<n;i++)\n\t\t\t {\n\t\t\t\t if(a[i]=='W')\n\t\t\t\t {\n\t\t\t\t\t if(a[i-1]=='W') ans+=2;\n\t\t\t\t\t else ans++;\n\t\t\t\t }\n\t\t\t }\n\t\t\t if(ans==0) \n\t\t\t {\t if(k!=0)\n\t\t\t\t System.out.println(Math.min(n, k)*2-1);\n\t\t\t \t else System.out.println(ans); \n\t\t\t \t continue;\n\t\t\t }\n\t\t\t ArrayList<Integer> al=new ArrayList<>();\n\t\t\t al.clear();\n\t\t\t int c=0;\n\t\t\t if(a[0]=='L') c++;\n\t\t\t for(i=1;i<n;i++)\n\t\t\t {\n\t\t\t\t if(a[i]=='L') c++;\n\t\t\t\t else \n\t\t\t\t {\t if(c!=0)\n\t\t\t\t \t{\n\t\t\t\t\t al.add(c);\n\t\t\t\t\t c=0;\n\t\t\t\t \t}\n\t\t\t\t }\n\t\t\t }\n\t\t\t if(c!=0)\n\t\t\t al.add(c);\n\t\t\t int f=0,last=0;\n\t\t\t if(a[0]=='L') {\n\t\t\t\t f=al.get(0);\n\t\t\t\t al.remove(0);\n\t\t\t }\n\t\t\t if(a[n-1]=='L')\n\t\t\t {\n\t\t\t\t last=al.get(al.size()-1);\n\t\t\t\t al.remove(al.size()-1);\n\t\t\t }\n\t\t\t Collections.sort(al);\n\t\t\t for(i=0;i<al.size();i++)\n\t\t\t {\n\t\t\t\t if(al.get(i)<=k)\n\t\t\t\t {\t\n\t\t\t\t\t ans+=((2*al.get(i))+1);\n\t\t\t\t\t k-=al.get(i);\n\t\t\t\t }\n\t\t\t\t else break;\n\t\t\t }\n\t\t\t if(i!=al.size())\n\t\t\t { al.add(i,al.get(i)+f+last);\n\t\t\t ans+=(2*Math.min(al.get(i),k));\n\t\t\t System.out.println(ans);\n\t\t\t }\n\t\t\t else {\n\t\t\t\tSystem.out.println(ans+(2*Math.min(k,f+last)));\n\t\t\t}\n\t\t }\n\t\t \n\t}\n}\n\n\t  \n\n\t\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst bool TEST = false;\nconst long double PI = 3.1415926535897932384626433832795;\nconst int inf = 2147483647;\nconst long long infll = 9223372036854775807;\nconst int mod = 1000000007;\nlong long max(int a, long long b) { return max((long long)a, b); }\nlong long min(int a, long long b) { return min((long long)a, b); }\nlong long min(long long a, int b) { return min(a, (long long)b); }\nlong long max(long long a, int b) { return max(a, (long long)b); }\nlong long dx[] = {0, 0, 1, -1};\nlong long dy[] = {1, -1, 0, 0};\nlong long dxk[] = {0, 0, 1, -1, 1, 1, -1, -1};\nlong long dyk[] = {1, -1, 0, 0, 1, -1, 1, -1};\nbool isint(double d) { return (d == floor(d)); }\nlong long gcd(long long a, long long b) { return b ? gcd(b, a % b) : a; }\nlong long lcm(long long a, long long b) { return a * b / gcd(a, b); }\nlong long ipow(long long a, long long b) {\n  if (a == 1 || b == 0) return 1;\n  long long r = 1;\n  for (long long i = 1; i <= b; i++) r *= a;\n  return r;\n}\nlong long power(long long a, long long b) {\n  if (a == 1 || b == 0) return 1;\n  long long c = power(a, b / 2);\n  long long res = (c * c) % mod;\n  ;\n  if (b % 2) res = (res * (a % mod)) % mod;\n  return res;\n}\nbool isPrime(int n) {\n  if (n == 1) return false;\n  for (int i = 2; i <= sqrt(n); i++)\n    if (n % i == 0) return false;\n  return true;\n}\nstring toBase(int n, int b) {\n  string oval = \"\";\n  while (n >= 1) {\n    if (n % b < 10)\n      oval += to_string(n % b);\n    else\n      oval += 'A' + (n % b - 10);\n    n /= b;\n  }\n  reverse(oval.begin(), oval.end());\n  return oval;\n}\nvoid Solve() {\n  int n, k;\n  cin >> n >> k;\n  string s;\n  cin >> s;\n  vector<int> fasele;\n  int l = -1;\n  for (long long i = 0; i <= s.length() - 1; i++) {\n    if (s[i] == 'W') {\n      if (i - l > 1 && l != -1) fasele.push_back(i - l - 1);\n      l = i;\n    }\n  }\n  long long score = s[0] == 'W';\n  for (long long i = 1; i <= s.length() - 1; i++) {\n    if (s[i] == 'W') {\n      if (s[i - 1] == 'W')\n        score += 2;\n      else\n        score += 1;\n    }\n  }\n  sort(fasele.begin(), fasele.end());\n  for (long long i = 0; i <= (int)fasele.size() - 1; i++)\n    if (fasele[i] <= k) {\n      k -= fasele[i];\n      score += fasele[i] * 2 + 1;\n    } else if (k > 0) {\n      score += k * 2;\n      k = 0;\n    } else\n      break;\n  if (k > 0) {\n    int first = -1, last = -1;\n    for (long long i = 0; i <= s.length() - 1; i++)\n      if (s[i] == 'W') {\n        first = i;\n        break;\n      }\n    for (long long i = s.length() - 1; i >= 0; i--)\n      if (s[i] == 'W') {\n        last = i;\n        break;\n      }\n    if (first != -1) {\n      score += min(k, (s.length() - last - 1)) * 2;\n      k -= s.length() - last - 1;\n      if (k > 0) score += min(k, first) * 2;\n    } else {\n      score += k * 2 - 1;\n    }\n  }\n  cout << score << '\\n';\n}\nint main() {\n  if (!TEST) {\n    ios::sync_with_stdio(false);\n    cin.tie(0);\n    cout.tie(0);\n  }\n  int t;\n  cin >> t;\n  while (t--) Solve();\n  if (TEST) {\n    cout << '\\n';\n    system(\"pause\");\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n, m = map(int, input().split())\n    s = ' ' + input()\n    q = s.count('L')\n    if q <= m:\n        print(max(0, 2 * n - 1))\n    elif q == len(s) - 1:\n        print(max(0, 2 * m - 1))\n    else:\n        x = 0\n        y = 0\n        C = []\n        for i in range(1, len(s)):\n            if s[i - 1] == 'W' and s[i] == 'L':\n                x = 1\n            elif s[i - 1] == 'L' and s[i] == 'L' and x != 0:\n                x += 1\n            elif s[i] == 'L':\n                y += 1\n            elif s[i - 1] == 'L' and s[i] == 'W':\n                if x != 0:\n                    C.append(x)\n                x = 0\n        if x != 0:\n            y += int(x)\n        #print(C, y)\n        C.sort()\n        Ans = 0\n        #print(C)\n        for i in range(len(C)):\n            if m >= C[i]:\n                Ans += C[i] * 2 + 1\n                m -= C[i]\n        #print(Ans)\n        Ans += m * 2\n        #print(Ans)\n        for i in range(1, len(s)):\n            if s[i] == 'W':\n                if s[i - 1] == 'W':\n                    Ans += 2\n                else:\n                    Ans += 1\n        print(Ans)\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nbool local = false;\nusing namespace std;\ntemplate <class T>\nvoid print(T v) {\n  cout << ((int)(v).size()) << \"\\n\";\n  for (auto x : v) cout << x << ' ';\n  cout << \"\\n\";\n};\ntemplate <class T>\nvoid print1(T v) {\n  cout << ((int)(v).size()) << \"\\n\";\n  for (auto x : v) cout << x + 1 << ' ';\n  cout << \"\\n\";\n};\ntemplate <class T1, class T2>\nostream &operator<<(ostream &o, pair<T1, T2> x) {\n  return o << x.first << ' ' << x.second;\n}\ntemplate <class T1, class T2>\nistream &operator>>(istream &o, pair<T1, T2> &x) {\n  return o >> x.first >> x.second;\n}\ntemplate <class T>\nostream &operator<<(ostream &o, vector<T> &x) {\n  for (auto &el : x) o << el << ' ';\n  return o;\n}\ntemplate <class T>\nistream &operator>>(istream &o, vector<T> &x) {\n  for (auto &el : x) o >> el;\n  return o;\n}\ntemplate <class T1, class T2>\npair<T1, T2> operator+(pair<T1, T2> a, pair<T1, T2> b) {\n  a.first += b.first;\n  a.second += b.second;\n  return a;\n}\ntemplate <class T1, class T2>\npair<T1, T2> operator-(pair<T1, T2> a, pair<T1, T2> b) {\n  a.first -= b.first;\n  a.second -= b.second;\n  return a;\n}\ntemplate <class T1, class T2>\nvoid operator+=(pair<T1, T2> &a, pair<T1, T2> b) {\n  a.first += b.first;\n  a.second += b.second;\n}\ntemplate <class T1, class T2>\nvoid operator-=(pair<T1, T2> &a, pair<T1, T2> b) {\n  a.first -= b.first;\n  a.second -= b.second;\n}\nint nint() {\n  int x;\n  cin >> x;\n  return x;\n}\ndouble getTime() { return clock() / (double)CLOCKS_PER_SEC; };\nmt19937 rnd(0);\nint rand(int n) { return rnd() % n; }\nint rand(int l, int r) { return rnd() % (r - l + 1) + l; }\nconst int mod = 1000000000 + 7;\nvoid initIO() {\n  if (local) {\n    freopen(\"input.txt\", \"r\", stdin);\n    srand((int)time(0));\n    rnd.seed((int)time(0));\n  } else {\n    {\n      ios::sync_with_stdio(0);\n      cin.tie(0);\n      cout.tie(0);\n    };\n  }\n}\nvoid solve();\nvoid precalc();\nint TID;\nsigned main() {\n  initIO();\n  int tc = 1;\n  cin >> tc;\n  precalc();\n  for (int tt = 0; tt < (tc); tt++) {\n    TID = tt;\n    solve();\n  }\n  if (local)\n    cout << \"\\n\"\n         << \"time = \" << getTime() << \"\\n\";\n}\nvoid precalc() {}\nint n;\nint m;\nvoid solve() {\n  cin >> n >> m;\n  string s;\n  cin >> s;\n  vector<pair<int, int> > v;\n  for (int i = 0; i < (n - 1); i++)\n    if (s[i] == 'W' && s[i + 1] == 'L') {\n      int l = i + 1;\n      int r = i + 1;\n      while (r < n && s[r] == 'L') r++;\n      if (r < n) v.emplace_back(make_pair(l, r - 1));\n    }\n  sort(v.begin(), v.end(), [](pair<int, int> a, pair<int, int> b) {\n    return a.second - a.first < b.second - b.first;\n  });\n  for (pair<int, int> o : v) {\n    int l = o.first;\n    int r = o.second;\n    if (m >= r - l + 1) {\n      for (int i = l; i <= r; i++) s[i] = 'W';\n      m -= r - l + 1;\n    }\n  }\n  for (int i = 1; i < n; i++)\n    if (s[i] == 'L' && s[i - 1] == 'W' && m) {\n      m--;\n      s[i] = 'W';\n    }\n  for (int i = (n - 1) - 1; i >= 0; i--)\n    if (s[i] == 'L' && s[i + 1] == 'W' && m) {\n      m--;\n      s[i] = 'W';\n    }\n  for (int i = 0; i < (((int)(s).size())); i++)\n    if (s[i] == 'L' && m) {\n      m--;\n      s[i] = 'W';\n    };\n  ;\n  int ans = 0;\n  for (int i = 0; i < (((int)(s).size())); i++) {\n    if (s[i] == 'W') ans += 1 + (s[i - 1] == 'W');\n  }\n  cout << ans << \"\\n\";\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class practice{\n\tpublic static void main(String[]args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint t=sc.nextInt();\n\t\twhile(t-->0) {\n\t\t\tint n=sc.nextInt();\n\t\t\tint k=sc.nextInt();\n\t\t\tString s=sc.next();\n\t\t\tint ans=0;\n\t\t\tint loss=0;\n\t\t\tfor(int i=0;i<n;i++) {\n\t\t\t\tif(s.charAt(i)=='W') {\n\t\t\t\t\t++ans;\n\t\t\t\t\tif(i>0 && s.charAt(i-1)=='W')\n\t\t\t\t\t\t++ans;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t++loss;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(k==0) {\n\t\t\t\tSystem.out.println(ans);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(ans==0) {\n\t\t\t\tSystem.out.println(2*k-1);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(k>=loss) {\n\t\t\t\tSystem.out.println(2*n-1);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tint tmp=Integer.MIN_VALUE;\n\t\t\tPriorityQueue<Integer>pq=new PriorityQueue<>();\n\t\t\tfor(int i=0;i<n;i++) {\n\t\t\t\tif(s.charAt(i)=='W') {\n\t\t\t\t\tif(tmp>0) {\n\t\t\t\t\t\tpq.add(tmp);\n\t\t\t\t\t}\n\t\t\t\t\ttmp=0;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t++tmp;\n\t\t\t\t}\n\t\t\t}\n\t\t\tans+=2*k;\n\t\t\twhile(!pq.isEmpty()) {\n\t\t\t\tint op = pq.poll();\n\t\t\t\tif(op>k)\n\t\t\t\t\tbreak;\n\t\t\t\tk-=op;\n\t\t\t\t++ans;\n\t\t\t}\n\t\t\tSystem.out.println(ans);\n\t\t}\n\t}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    int n, k;\n    string s;\n    cin >> n >> k >> s;\n    int ans = 0;\n    list<pair<int, int>> a;\n    int i = 0;\n    while (i < n) {\n      int l = 0, w = 0, f1 = 0, f2 = 0;\n      while (i < n && s[i] == 'L') f1 |= (i == 0), f2 |= (i == n - 1), ++i, ++l;\n      while (i < n && s[i] == 'W') ++i, ++w;\n      int y = f1 + f2;\n      if (l) a.push_back(make_pair(y, l));\n      if (w) ans += 2 * w - 1;\n    }\n    a.sort();\n    while (k && a.size()) {\n      int y = a.front().first;\n      int l = a.front().second;\n      int m = min(l, k);\n      if (y == 0 && m == l) ans += 2 * m + 1;\n      if (y == 0 && m < l) ans += 2 * m;\n      if (y == 1) ans += 2 * m;\n      if (y == 2) ans += 2 * m - 1;\n      k -= m;\n      a.pop_front();\n    }\n    cout << ans << \"\\n\";\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.AbstractCollection;\nimport java.util.PriorityQueue;\nimport java.util.StringTokenizer;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        Scanner in = new Scanner(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        BChessCheater solver = new BChessCheater();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class BChessCheater {\n        int n;\n        int k;\n        char[] arr;\n\n        public void readInput(Scanner sc) {\n            n = sc.nextInt();\n            k = sc.nextInt();\n            arr = sc.next().toCharArray();\n        }\n\n        public void solve(int testNumber, Scanner sc, PrintWriter pw) {\n            int tc = sc.nextInt();\n            while (tc-- > 0) {\n                readInput(sc);\n                int idx = -1;\n                PriorityQueue<Integer> pq = new PriorityQueue<>();\n                for (int i = 0; i < n; i++) {\n                    if (arr[i] == 'W') {\n                        if (idx != -1 && i - idx > 1)\n                            pq.add(i - idx - 1);\n                        idx = i;\n                    }\n                }\n                int win = 0;\n                for (int i = 0; i < n; i++)\n                    if (arr[i] == 'W')\n                        win++;\n                win = Math.min(n, win + k);\n                while (!pq.isEmpty() && k > 0) {\n                    int cur = pq.poll();\n                    if (k < cur) {\n                        pq.add(cur);\n                        break;\n                    }\n                    k -= cur;\n                }\n                pw.println(Math.max(2 * win - (pq.size() + 1), 0));\n            }\n        }\n\n    }\n\n    static class Scanner {\n        StringTokenizer st;\n        BufferedReader br;\n\n        public Scanner(InputStream s) {\n            br = new BufferedReader(new InputStreamReader(s));\n        }\n\n        public String next() {\n            try {\n                while (st == null || !st.hasMoreTokens())\n                    st = new StringTokenizer(br.readLine());\n                return st.nextToken();\n            } catch (Exception e) {\n                throw new RuntimeException(e);\n            }\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.math.BigInteger;\nimport java.util.*;\nimport java.util.concurrent.TimeUnit;\n\npublic class b1429 implements Runnable{\n\t\n    public static void main(String[] args) {\n    \ttry{\n            new Thread(null, new b1429(), \"process\", 1<<26).start();\n        }\n        catch(Exception e){\n            System.out.println(e);\n        }\n    }\n\tpublic void run() {\n\t\tFastReader scan = new FastReader();\n        PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));\n\t\t//PrintWriter out = new PrintWriter(\"file.out\");\n\t\tTask solver = new Task();\n\t\tint t = scan.nextInt();\n\t\t//int t = 1;\n\t\tfor(int i = 1; i <= t; i++) solver.solve(i, scan, out);\n\t\tout.close();\n\t}\n\n\tstatic class Task {\n\t\tstatic final int oo = Integer.MAX_VALUE;\n\t\tstatic final long OO = Long.MAX_VALUE;\n\n\t\tpublic void solve(int testNumber, FastReader sc, PrintWriter out) {\n\t\t\tint N = sc.nextInt();\n\t\t\tint K = sc.nextInt();\n\t\t\t\n\t\t\tStringBuilder s = new StringBuilder(sc.nextLine());\n\t\t\t\n\t\t\tif(check(s)) {\n\t\t\t\tfor(int i = 0; i < N && K > 0; i++, K--) {\n\t\t\t\t\ts.replace(i, i+1, \"W\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tPriorityQueue<tup> pq = new PriorityQueue<>(new tup());\n\t\t\t\t\n\t\t\t\tint begin = 0;\n\t\t\t\tfor(int i = 0; i < N; i++) {\n\t\t\t\t\tif(s.charAt(i) == 'W') {\n\t\t\t\t\t\tbegin = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tint end = N;\n\t\t\t\tfor(int i = begin; i < N; i++) {\n\t\t\t\t\tint j = i;\n\t\t\t\t\twhile(j < N && s.charAt(j) == 'L') {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif(j != N && j != i) {\n\t\t\t\t\t\tpq.add(new tup(i, j - i));\n\t\t\t\t\t\ti = j-1;\n\t\t\t\t\t} else if(j != i){\n\t\t\t\t\t\tend = i;\n\t\t\t\t\t\ti = j-1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t//dbg(pq);\n\t\t\t\t\n\t\t\t\twhile(pq.size() > 0 && K > 0) {\n\t\t\t\t\ttup t = pq.poll();\n\t\t\t\t\tfor(int i = t.a; K > 0 && i < t.a + t.b; K--, i++) {\n\t\t\t\t\t\ts.replace(i, i+1, \"W\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\tfor(int i = end; i < N && K > 0; i++, K--) {\n\t\t\t\t\ts.replace(i, i+1, \"W\");\n\t\t\t\t}\n\t\t\t\tfor(int i = begin-1; i >= 0 && K > 0; i--, K--) {\n\t\t\t\t\ts.replace(i, i+1, \"W\");\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t\t\t\t\n\t\t\tlong count = 0;\n\t\t\tfor(int j = 0; j < N; j++) {\n\t\t\t\tif(s.charAt(j) == 'W') {\n\t\t\t\t\tif(j != 0 && s.charAt(j-1) == 'W') {\n\t\t\t\t\t\tcount+=2;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tout.println(count);\n\t\t\t\n\t\t}\n\t\t\n\t\tpublic static boolean check(StringBuilder s) {\n\t\t\tfor(char each: s.toString().toCharArray()) {\n\t\t\t\tif(each == 'W')\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\t\n\t}\n\tstatic long modInverse(long N, long MOD) {\n\t\treturn binpow(N, MOD - 2, MOD);\n\t}\n\tstatic long modDivide(long a, long b, long MOD) {\n\t\ta %= MOD;\n\t\treturn (binpow(b, MOD-2, MOD) * a) % MOD;\n\t}\n\tstatic long binpow(long a, long b, long m) {\n\t\ta %= m;\n\t\tlong res = 1;\n\t\twhile (b > 0) {\n\t\t\tif ((b & 1) == 1)\n\t\t\t\tres = res * a % m;\n\t\t\ta = a * a % m;\n\t\t\tb >>= 1;\n\t\t}\n\t\treturn res;\n\t}\n\tstatic int[] reverse(int a[]) \n    { \n        int[] b = new int[a.length]; \n        for (int i = 0, j = a.length; i < a.length; i++, j--) { \n            b[j - 1] = a[i]; \n        } \n        \n        return b;\n    }\n\tstatic long[] reverse(long a[]) \n    { \n        long[] b = new long[a.length]; \n        for (int i = 0, j = a.length; i < a.length; i++, j--) { \n            b[j - 1] = a[i]; \n        } \n        \n        return b;\n    }\n\t\n\tstatic void shuffle(Object[] a) {\n\t\tRandom get = new Random();\n\t\tfor (int i = 0; i < a.length; i++) {\n\t\t\tint r = get.nextInt(a.length);\n\t\t\tObject temp = a[i];\n\t\t\ta[i] = a[r];\n\t\t\ta[r] = temp;\n\t\t}\n\t}\n\t\n\tstatic void sort(Object[] x){\n\t\tshuffle(x);\n\t\tArrays.sort(x);\n\t}\n\t\n\tstatic class tup implements Comparable<tup>, Comparator<tup>{\n\t\tint a, b;\n\t\ttup(int a,int b){\n\t\t\tthis.a=a;\n\t\t\tthis.b=b;\n\t\t}\n\t\tpublic tup() {\n\t\t}\n\t\t@Override\n\t\tpublic int compareTo(tup o){\n\t\t\treturn Integer.compare(b,o.b);\n\t\t}\n\t\t@Override\n\t\tpublic int compare(tup o1, tup o2) {\n\t\t\treturn Integer.compare(o1.b, o2.b);\n\t\t}\n\t\t\n\t\t@Override\n\t    public int hashCode() {\n\t\t\treturn Objects.hash(a, b);\n\t    }\n \n\t    @Override\n\t    public boolean equals(Object obj) {\n\t    \tif (this == obj)\n                return true;\n\t    \tif (obj == null)\n                return false;\n\t    \tif (getClass() != obj.getClass())\n                return false;\n\t    \ttup other = (tup) obj;\n\t    \treturn a==other.a && b==other.b;\n\t    }\n\t    \n\t    @Override\n\t    public String toString() {\n\t    \treturn a + \" \" + b;\n\t    }\n\t}\n\n\tstatic class FastReader {\n\t\tBufferedReader br;\n\t\tStringTokenizer st;\n\n\t\tpublic FastReader() {\n\t\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t\t}\n\n\t\tpublic FastReader(String s) throws FileNotFoundException {\n\t\t\tbr = new BufferedReader(new FileReader(new File(s)));\n\t\t}\n\n\t\tString next() {\n\t\t\twhile (st == null || !st.hasMoreElements()) {\n\t\t\t\ttry {\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tdouble nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tString nextLine() {\n\t\t\tString str = \"\";\n\t\t\ttry {\n\t\t\t\tstr = br.readLine();\n\t\t\t} catch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\treturn str;\n\t\t}\n\t\t\n\t\tint[] readArray(int size) {\n\t\t\tint[] a = new int[size];\n\t\t\tfor(int i = 0; i < size; i++) {\n\t\t\t\ta[i] = nextInt();\n\t\t\t}\n\t\t\treturn a;\n\t\t}\n\t\t\n\t\tlong[] readLongArray(int size) {\n\t\t\tlong[] a = new long[size];\n\t\t\tfor(int i = 0; i < size; i++) {\n\t\t\t\ta[i] = nextLong();\n\t\t\t}\n\t\t\treturn a;\n\t\t}\n\t}\n\t\n\tstatic void dbg(int[] arr) {\n\t\tSystem.out.println(Arrays.toString(arr));\n\t}\n\tstatic void dbg(long[] arr) {\n\t\tSystem.out.println(Arrays.toString(arr));\n\t}\n\tstatic void dbg(boolean[] arr) {\n\t\tSystem.out.println(Arrays.toString(arr));\n\t}\n\n\tstatic void dbg(Object... args) {\n        for (Object arg : args)\n            System.out.print(arg + \" \");\n        System.out.println();\n    }\n}"
        },
        {
            "language": 3,
            "solution": "''' ===============================\n\t-- @uthor : Kaleab Asfaw\n\t-- Handle : kaleabasfaw2010\n\t-- Bio    : High-School Student\n\t==============================='''\n\n# Fast IO\nimport sys\nimport os\nfrom io import BytesIO, IOBase\nBUFSIZE = 8192\nclass FastIO(IOBase):\n\tnewlines = 0\n\tdef __init__(self, file): self._fd = file.fileno(); self.buffer = BytesIO(); self.writable = \"x\" in file.mode or \"r\" not in file.mode; self.write = self.buffer.write if self.writable else None\n\tdef read(self):\n\t\twhile True:\n\t\t\tb = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n\t\t\tif not b: break\n\t\t\tptr = self.buffer.tell(); self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n\t\tself.newlines = 0; return self.buffer.read()\n\tdef readline(self):\n\t\twhile self.newlines == 0:\n\t\t\tb = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE)); self.newlines = b.count(b\"\\n\") + (not b); ptr = self.buffer.tell(); self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n\t\tself.newlines -= 1; return self.buffer.readline()\n\tdef flush(self):\n\t\tif self.writable: os.write(self._fd, self.buffer.getvalue()); self.buffer.truncate(0), self.buffer.seek(0)\nclass IOWrapper(IOBase):\n\tdef __init__(self, file): self.buffer = FastIO(file); self.flush = self.buffer.flush; self.writable = self.buffer.writable; self.write = lambda s: self.buffer.write(s.encode(\"ascii\")); self.read = lambda: self.buffer.read().decode(\"ascii\"); self.readline = lambda: self.buffer.readline().decode(\"ascii\")\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout); input = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n# Others\n# from math import floor, ceil, gcd\n# from decimal import Decimal as d\nmod = 10**9+7\ndef lcm(x, y): return (x * y) / (gcd(x, y))\ndef fact(x, mod=mod):\n\tans = 1\n\tfor i in range(1, x+1): ans = (ans * i) % mod\n\treturn ans\ndef arr2D(n, m, default=0):\n\tlst = []\n\tfor i in range(n): temp = [default] * m; lst.append(temp)\n\treturn lst\ndef sortDictV(x): return {k: v for k, v in sorted(x.items(), key = lambda item : item[1])}\n\ndef solve(n, k, lst):\n\tlCnt = lst.count(\"L\")\n\twCnt = \"W\" in lst\n\tprescore = 0\n\tfor i in range(n):\n\t\tif lst[i] == \"W\":\n\t\t\tif i != 0 and lst[i-1] == \"W\": prescore += 2\n\t\t\telse: prescore += 1\n\t# print(\"Prescore\", prescore)\n\t\n\t# got = False\n\t# cnt = 0\n\t# cnt1 = 0\n\t# ind = -1\n\t# for i in range(n):\n\t# \tif not got and lst[i] == \"L\":\n\t# \t\tcnt1 += 1\n\t# \tif got and lst[i] == \"L\":\n\t# \t\tcnt += 1\n\t# \tif lst[i] == \"W\":\n\t# \t\tgot = True\n\t# \tif got and lst[i] == \"L\" and ind == -1:\n\t# \t\tind = i\n\t# print(\"cnt\", cnt, cnt1)\n\t# minn = min(cnt, k)\n\t# prescore += (2 * minn)\n\t# cnt -= minn\n\t# k -= minn\n\n\t# print(\"score:\", prescore, ind)\n\n\t# for i in range(ind, n):\n\t# \tif i != n-1 and lst[i] == \"L\" and lst[i+1] == \"W\" and minn > 0:\n\t# \t\tprescore += 1\n\t# \t\tprint(\"minn\", i, prescore, minn)\n\n\t# \tif lst[i] == \"L\":\n\t# \t\tminn -= 1\n\t# print(\"score1:\", prescore)\n\t# if k > 0:\n\t# \tprescore += 2 * (min(k, cnt1-1)) + 1\n\t# \tif wCnt:\n\t# \t\tprescore += 1\n\t# return prescore\n\n\tans = []\n\tgot = False\n\tcnt = 0\n\tfor i in range(n):\n\t\tif got:\n\t\t\tif lst[i] == \"L\":\n\t\t\t\tcnt += 1\n\t\t\telse:\n\t\t\t\tans.append(cnt)\n\t\t\t\tcnt = 0\n\t\tif lst[i] == \"W\":\n\t\t\tgot = True\n\n\tans = sorted(ans)\n\tind  = 0\n\tans += [1]\n\tfor i in range(len(ans)+1):\n\t\tif ans[i] != 0:\n\t\t\tind = i\n\t\t\tbreak\n\tans = ans[ind:][:-1]\n\t# print(ans)\n\n\ti = 0\n\twhile i < len(ans) and k >= ans[i]:\n\t\tprescore += ans[i] * 2 + 1\n\t\tk -= ans[i]\n\t\tlCnt -= ans[i]\n\t\ti += 1\n\t\t# print(\"Asdas\", i, len(ans), k)\n\tind1 = i\n\tind2 = 0\n\tans1 = []\n\tgot = False\n\tcnt1 = 0\n\tfor i in range(n):\n\t\tif got:\n\t\t\tif lst[i] == \"L\":\n\t\t\t\tcnt1 += 1\n\t\t\telif cnt1 != 0:\n\t\t\t\tans1.append(cnt1)\n\t\t\t\tcnt1 = 0\n\t\t\tif len(ans1) == ind1:\n\t\t\t\t# print(\"sada\", ans, ind1)\n\t\t\t\tind2 = i\n\t\t\t\tbreak\n\t\tif lst[i] == \"W\":\n\t\t\tgot = True\n\tind3 = ind2\n\tfor i in range(ind2, n):\n\t\tif lst[i] == \"L\":\n\t\t\tind3 = i\n\t\t\tbreak\n\n\tcntAft = 0\n\tif wCnt:\n\t\tfor i in range(ind3, n):\n\t\t\tif lst[i] == \"L\":\n\t\t\t\tcntAft += 1\n\t# print(\"ind2\", ind2, ind1)\n\n\n\t# print(\"Score1\", prescore)\n\n\n\t# cntAft = 0\n\t# if wCnt:\n\t# \tfor i in range(n-1, -1, -1):\n\t# \t\tif lst[i] == \"W\": break\n\t# \t\telse:\n\t# \t\t\tcntAft += 1\n\n\tcntBef = lCnt - cntAft\n\t# print(\"Score2\", prescore, lCnt, cntAft, cntBef)\n\n\tif k > 0:\n\t\tprescore += 2 * min(cntAft, k)\n\t\tk -= min(cntAft, k)\n\t\t# print(\"kk\", k)\n\t\tif k > 0:\n\t\t\tprescore += 2*min(k-1, cntBef-1) + 1 \n\t\t\tif wCnt:\n\t\t\t\tprescore += 1\n\t# print(\"Score3\", prescore, lCnt, k)\n\treturn prescore\n\n\n\nfor _ in range(int(input())): # Multicase\n\tn, k = list(map(int, input().split()))\n\tlst = input()\n\tprint(solve(n, k, list(lst)))\n\t# print()\n\n# get somebody break ur heart, I just want that"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAX_game = 100000;\nint a[100000 + 10];\nint mid[100000 + 10];\nchar s[100000 + 10];\nint main() {\n  int T;\n  scanf(\"%d\", &T);\n  while (T--) {\n    memset(a, 0, sizeof(a));\n    memset(mid, 0, sizeof(mid));\n    int n, k;\n    scanf(\"%d%d\", &n, &k);\n    scanf(\"%s\", s);\n    int p = 1, tot = 1;\n    for (int i = 0; i < n; i++) {\n      if (i == n - 1) {\n        a[p] = tot;\n        continue;\n      }\n      if (s[i] == s[i + 1])\n        tot++;\n      else {\n        a[p] = tot;\n        tot = 1;\n        p++;\n      }\n    }\n    if (p == 1 && s[0] == 'L') {\n      int cnt = min(k, n);\n      cout << max(cnt * 2 - 1, 0) << endl;\n      continue;\n    }\n    int ans = 0, t = 0, sum = 0;\n    if (s[0] == 'W') {\n      for (int i = 1; i <= p; i++) {\n        if (i % 2)\n          ans += a[i] * 2 - 1;\n        else {\n          mid[++t] = a[i];\n          sum += a[i];\n        }\n      }\n    } else {\n      for (int i = 1; i <= p; i++) {\n        if (i % 2 == 0)\n          ans += a[i] * 2 - 1;\n        else\n          sum += a[i];\n        if (i >= 3 && i % 2) mid[++t] = a[i];\n      }\n    }\n    if (s[n - 1] == 'L' && p != 1) t--;\n    if (k >= sum) {\n      cout << 2 * n - 1 << endl;\n      continue;\n    }\n    sort(mid + 1, mid + (t + 1));\n    for (int i = 1; i <= t && k >= mid[i]; i++) {\n      ans += 2 * mid[i] + 1;\n      k -= mid[i];\n      sum -= mid[i];\n    }\n    if (k > 0 && sum > k) ans += k * 2;\n    cout << ans << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "#!/usr/bin/env python\nimport os\nimport sys\nfrom io import BytesIO, IOBase\n\n\ndef main():\n    for _ in range(int(input())):\n        n,k = map(int,input().split())\n        kCpy = k\n        s = input()\n        WCnt = 0\n        LCnt = 0\n        LSegment = []\n        cnt = 0\n        for elem in s:\n            if elem == \"W\":\n                LSegment.append(cnt)\n                cnt = 0\n                WCnt += 1\n            else:\n                cnt += 1\n                LCnt += 1\n        if not LSegment:\n            print(max(2 * k - 1,0))\n        else:\n            WBreaker = sorted(LSegment[1:])\n            if LCnt <= k:\n                print(2 * n - 1)\n            else:\n                broken = 0\n                for elem in WBreaker:\n                    if k >= elem:\n                        k -= elem\n                        broken += 1\n                    else:\n                        break\n                print(max(2 * (WCnt + kCpy) - len(WBreaker) + broken - 1,0))\n\n\n# region fastio\n\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\n# endregion\n\nif __name__ == \"__main__\":\n    main()"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nchar a[130000];\nstruct gg {\n  int x, y, z;\n} b[130000];\nint cmp(gg p, gg q) { return p.z < q.z; }\nvoid solve() {\n  int n, m;\n  cin >> n >> m;\n  cin >> a;\n  int l = 0;\n  int p = 0, q = 0, o = 0;\n  for (int i = 0; i < n; i++)\n    if (a[i] == 'W') {\n      p = i;\n      o = i;\n      break;\n    }\n  for (int i = 0; i < n; i++) {\n    if (a[i] == 'W') {\n      q = i;\n      b[l].x = p;\n      b[l].z = q - p - 1;\n      b[l++].y = q;\n      p = q;\n    }\n  }\n  sort(b, b + l, cmp);\n  for (int i = 0; i < l && m > 0; i++) {\n    int gg = b[i].x, hh = b[i].y;\n    for (int j = gg + 1; j < hh && m > 0; j++)\n      if (a[j] == 'L') {\n        a[j] = 'W';\n        m--;\n      }\n  }\n  for (int i = o; i >= 0 && m > 0; i--)\n    if (a[i] == 'L') {\n      a[i] = 'W';\n      m--;\n    }\n  for (int i = q; i < n && m > 0; i++)\n    if (a[i] == 'L') {\n      a[i] = 'W';\n      m--;\n    }\n  int s = 0;\n  for (int i = 0; i < n; i++)\n    if (a[i] == 'W') {\n      if (i == 0 || a[i - 1] != 'W')\n        s++;\n      else\n        s += 2;\n    }\n  printf(\"%d\\n\", s);\n}\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    solve();\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "# -*- coding: utf-8 -*-\n\nt = int(input().replace('\\n', ''))\n\nfor i in range(t):\n    line1 = list(map(int, input().replace('\\n', '').split(' ')))\n    n = line1[0]\n    k = line1[1]\n    s = list(input().replace('\\n', ''))\n    wins, losses, gap_wins = 0, 0, 0\n    losses_gaps_len = []\n    for i in range(n):\n        if s[i] == 'W':\n            if i==0 or s[i-1]=='L':\n                gap_wins += 1\n            wins += 1\n\n        else:\n            losses += 1\n            if i==0 or s[i-1]=='W':\n                losses_gaps_len.append(0)\n            losses_gaps_len[-1]+=1\n\n    if k > losses:\n        print(2*n-1)\n        continue\n\n    if wins==0:\n        if k==0:\n            print(0)\n        else:\n            print(2*k-1)\n        continue\n\n    inf = float('inf')\n    if s[0] == 'L':\n        losses_gaps_len[0] = inf\n    if s[n-1] == 'L':\n        losses_gaps_len[-1] = inf\n\n    sorted_losses_gaps_len = sorted(losses_gaps_len)\n    wins += k\n    for i in range(len(sorted_losses_gaps_len)):\n        if sorted_losses_gaps_len[i] > k:\n            break\n        else:\n            gap_wins -= 1\n            k -= sorted_losses_gaps_len[i]\n\n    print(2*wins - gap_wins)\n\n \t\t   \t \t  \t\t\t\t\t \t \t\t\t\t \t \t\t \t\t"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.List;\nimport java.util.StringTokenizer;\n\npublic class Solution1427B {\n  public static void main(String[] args) {\n    InputReader in = new InputReader(System.in);\n    PrintWriter out = new PrintWriter(System.out);\n    Solver1427B solver = new Solver1427B();\n    int n = in.nextInt();\n    for (int i = 0; i < n; i++) {\n      solver.solve(i, in, out);\n    }\n    out.close();\n  }\n\n  static class Solver1427B {\n    public void solve(int testNumber, InputReader in, PrintWriter out) {\n      //out.println(\"start\");\n      int n = in.nextInt(), k = in.nextInt();\n      String s = in.next();\n      List<Integer> list = new ArrayList<>();\n      boolean hasWin = false;\n      int lc = 0;\n      int res = 0;\n      int firstlc = 0;\n      int lastlc = 0;\n      for (int i = 0; i < s.length(); i++) {\n        char c = s.charAt(i);\n        if (c == 'L') {\n          lc++;\n        } else if (c == 'W') {\n          if (lc > 0) {\n            if (hasWin) {\n              list.add(lc);\n              //out.println(\"lc: \" + lc);\n            } else {\n              firstlc = lc;\n            }\n          }\n          lc = 0;\n          hasWin = true;\n          if (i > 0 && s.charAt(i - 1) == 'W') {\n            res += 2;\n          } else {\n            res++;\n          }\n        }\n      }\n\n      if (k == 0) {\n        out.println(res);\n        return;\n      }\n\n      if (hasWin) {\n        lastlc = lc;\n      } else {\n        out.println(k * 2 - 1);\n        return;\n      }\n\n      //out.println(\"firstlc: \" + firstlc);\n      //out.println(\"lastlc: \" + lastlc);\n\n      Collections.sort(list);\n      int i = 0;\n      for (i = 0; i < list.size(); i++) {\n        int tmp = list.get(i);\n        if (k >= tmp) {\n          res += (tmp * 2 + 1);\n          k -= tmp;\n        } else {\n          break;\n        }\n      }\n\n      if (i < list.size()) {\n        res += 2 * k;\n      } else {\n        res += 2 * Math.min(k, firstlc + lastlc);\n      }\n      out.println(res);\n    }\n  }\n\n  static class InputReader {\n    public BufferedReader reader;\n    public StringTokenizer tokenizer;\n\n    public InputReader(InputStream stream) {\n      reader = new BufferedReader(new InputStreamReader(stream), 32768);\n      tokenizer = null;\n    }\n\n    public String next() {\n      while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n        try {\n          tokenizer = new StringTokenizer(reader.readLine());\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      }\n      return tokenizer.nextToken();\n    }\n\n    public int nextInt() {\n      return Integer.parseInt(next());\n    }\n  }\n}"
        },
        {
            "language": 3,
            "solution": "import io\nimport os\nimport sys\nimport math\ninput = sys.stdin.readline\nmod = 10**9 + 7\n \nt = int(input())\n\nfor i in range(t):\n    x,y = list(map(int, input().split()))\n    arr = list(input().rstrip())\n    \n    c = 0\n    w = 0\n    seg = []\n    score = 0\n    left = 0\n    \n    for i in range(len(arr)):\n        if arr[i]=='W':\n            if i>0 and arr[i-1]=='W':\n                score += 2\n            else:\n                score += 1\n            \n            if c!=0 and w!=0:\n                seg.append(c)\n            c = 0\n            w += 1\n            \n        else:\n            c += 1\n            left += 1\n     \n    seg.sort()\n    ans = 0\n    \n    for el in seg:\n        if y>=el and left>=el:\n            score += el*2 + 1\n            y -= el\n            left -= el\n            \n    #print(score, y, left)\n    kg = min(y, left)\n    \n    if arr.count('W') == 0:\n        print(max(0,kg*2 - 1))\n        \n    else:\n        print(max(0,score + 2*kg))"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    int n, k, temp;\n    cin >> n >> k;\n    temp = k;\n    string s;\n    cin >> s;\n    int ans = 0;\n    if (s[0] == 'W') ans++;\n    for (int i = 1; i < n; i++) {\n      if (s[i] == 'W' && s[i - 1] == 'W')\n        ans += 2;\n      else if (s[i] == 'W')\n        ans++;\n    }\n    int cnt = 0, flag = 0;\n    vector<int> v;\n    for (int i = 0; i < n; i++) {\n      if (s[i] == 'W') {\n        if (cnt && flag) v.push_back(cnt);\n        cnt = 0;\n        flag = 1;\n      } else {\n        cnt++;\n      }\n    }\n    sort(v.begin(), v.end());\n    for (int i = 0; i < v.size(); i++) {\n      if (k >= v[i]) {\n        ans += (2 * v[i] + 1);\n        k -= v[i];\n      } else {\n        ans += (2 * k);\n        k = 0;\n        break;\n      }\n    }\n    if (k > 0) {\n      for (int i = 0; i < n; i++) {\n        if (k == 0 || s[i] == 'W') break;\n        s[i] = 'W';\n        ans += 2;\n        k--;\n      }\n      for (int i = n - 1; i >= 0; i--) {\n        if (k == 0 || s[i] == 'W') break;\n        ans += 2;\n        k--;\n      }\n    }\n    if (flag == 0 && temp != 0) ans--;\n    cout << ans << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\nimport java.util.TreeMap;\n\npublic class GlobalRound11ProbB {\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tScanner scn = new Scanner(System.in);\n\t\tint t = scn.nextInt();\n\t\twhile (t > 0) {\n\t\t\tint n = scn.nextInt();\n\t\t\tint k = scn.nextInt();\n\t\t\tString s = scn.next();\n\t\t\tSystem.out.println(solve(n, k, s));\n\t\t\tt--;\n\t\t}\n\t}\n\n\tpublic static int solve(int n, int k, String s) {\n\t\tif (n == k) {\n\t\t\treturn 2 * n - 1;\n\t\t}\n\t\tint sum = 0;\n\t\tint[] score = new int[s.length()];\n\t\tint win = 0;\n\t\tif (s.charAt(0) == 'W') {\n\t\t\tscore[0] = 1;\n\t\t\tsum++;\n\t\t\twin++;\n\t\t}\n\t\tfor (int i = 1; i < s.length(); ++i) {\n\t\t\tchar c = s.charAt(i);\n\t\t\tif (c == 'W') {\n\t\t\t\twin++;\n\t\t\t\tif (s.charAt(i - 1) == 'W') {\n\t\t\t\t\tscore[i] = 2;\n\t\t\t\t\tsum = sum + 2;\n\t\t\t\t} else {\n\t\t\t\t\tscore[i] = 1;\n\t\t\t\t\tsum++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tint los = n - win;\n\t\tif (k >= los) {\n\t\t\treturn 2 * n - 1;\n\t\t}\n\n\t\tif (win == 0) {\n\t\t\treturn Math.max(0, 2 * k - 1);\n\t\t}\n\n\t\tint[] lSeq = new int[s.length()];\n\t\tint idx = s.length() - 1;\n\t\twhile (idx > -1 && s.charAt(idx) != 'W') {\n\t\t\tidx--;\n\t\t}\n\t\tint lastPos = idx;\n\t\tidx = 0;\n\t\twhile (idx < s.length() && s.charAt(idx) != 'W') {\n\t\t\tidx++;\n\t\t}\n\t\tint firstPos = idx;\n//\n//\t\tfor (int i = 1; i < s.length() - 1 && k > 0; ++i) {\n//\t\t\tif (score[i] == 0) {\n//\t\t\t\tif (score[i - 1] > 0 && score[i + 1] == 1) {\n//\t\t\t\t\tscore[i] = 2;\n//\t\t\t\t\tscore[i + 1] = 2;\n//\t\t\t\t\tsum += 3;\n//\t\t\t\t\tk--;\n//\t\t\t\t}\n//\t\t\t}\n//\t\t}\n\t\tTreeMap<Integer, Integer> map = new TreeMap<>();\n\t\tfor (int i = lastPos; i >= firstPos; --i) {\n\t\t\tchar c = s.charAt(i);\n\t\t\tif (c == 'L') {\n\t\t\t\tlSeq[i] = 1 + lSeq[i + 1];\n\t\t\t\tmap.put(lSeq[i], map.getOrDefault(lSeq[i], 0) + 1);\n\t\t\t\tmap.put(lSeq[i] - 1, map.getOrDefault(lSeq[i] - 1, 0) - 1);\n\t\t\t}\n\t\t}\n\n\t\tif (map.containsKey(0)) {\n\t\t\tmap.remove(0);\n\t\t}\n\n\t\tfor (int x : map.keySet()) {\n\t\t\tint gap = x;\n\t\t\tint f = map.get(x);\n\t\t\tint spaces = x * f;\n\t\t\tif (k >= spaces) {\n\t\t\t\tint o = gap * 2 + 1;\n\t\t\t\to = o * f;\n\t\t\t\tsum += o;\n\t\t\t\tk -= spaces;\n\t\t\t\twin += spaces;\n\t\t\t} else {\n\t\t\t\tint t = k;\n\t\t\t\tt = t / gap;\n\t\t\t\tspaces = t * gap;\n\t\t\t\tk -= spaces;\n\t\t\t\tint o = gap * 2 + 1;\n\t\t\t\to = o * t;\n\t\t\t\tsum += o;\n\t\t\t\twin += spaces;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tfor (int i = 0; i < firstPos && firstPos != s.length() && k > 0; ++i) {\n\t\t\tsum += 2;\n\t\t\tk--;\n\t\t}\n\n\t\tfor (int i = lastPos + 1; i < s.length() && k > 0 && lastPos != -1; ++i) {\n\t\t\tsum += 2;\n\t\t\tk--;\n\t\t}\n\n\t\tif (k > 0) {\n\t\t\tsum = sum + (k * 2);\n\n\t\t}\n\t\treturn sum;\n\n\t}\n\n}\n"
        },
        {
            "language": 3,
            "solution": "\nfrom collections import Counter as C\n# from operator import itemgetter\n# from math import ceil,sqrt,gcd,factorial,comb\n# from collections import deque\n# from collections import defaultdict as dd\n# d=dd(lambda:0)\n# from sys import stdin\n# stdin.readline\n\ndef mp():return map(int,input().split())\ndef it():return int(input())\n\nfor _ in range(it()):\n\tn,k=mp()\n\tl=list(input())\n\tc=C(l)\n\tans=0\n\tif c['L']<=k:\n\t\tans=2*n-1\n\t\tprint(ans)\n\telif \"W\" not in l:\n\t\tprint(max((min(k,n)*2)-1,0))\n\telse:\n\t\tsm=c['W']\n\t\tv=[]\n\t\tindx=l.index(\"W\")\n\t\tfor i in range(indx+1,n):\n\t\t\tif l[i]=='W':\n\t\t\t\tv.append(i-indx-1)\n\t\t\t\tindx=i\n\t\tv.sort()\n\t\tfor i in v:\n\t\t\tif k>=i:\n\t\t\t\tsm+=(2*i+1)\n\t\t\t\tk-=i\n\t\tif k>0:\n\t\t\tsm+=(2*k)\n\t\tprint(sm)\n\n"
        },
        {
            "language": 3,
            "solution": "import sys, os, io\ndef rs(): return sys.stdin.readline().rstrip()\ndef ri(): return int(sys.stdin.readline())\ndef ria(): return list(map(int, sys.stdin.readline().split()))\ndef ws(s): sys.stdout.write(s + '\\n')\ndef wi(n): sys.stdout.write(str(n) + '\\n')\ndef wia(a): sys.stdout.write(' '.join([str(x) for x in a]) + '\\n')\nimport math,datetime,functools,itertools,operator,bisect,fractions,statistics\nfrom collections import deque,defaultdict,OrderedDict,Counter\nfrom fractions import Fraction\nfrom decimal import Decimal\nfrom sys import stdout\n\ndef main():\n    starttime=datetime.datetime.now()\n    if(os.path.exists('input.txt')):\n        sys.stdin = open(\"input.txt\",\"r\")\n        sys.stdout = open(\"output.txt\",\"w\")\n    \n    for _ in range(ri()):\n        n,k=ria()\n        s=rs()\n        consgaps=[]\n        conswins=[]\n        currconsgaps=0\n        currconswins=0\n        prevscore=0\n        for i in range(n):\n            if s[i]=='W':\n                if i-1>=0 and s[i-1]=='W':\n                    prevscore+=2\n                else:\n                    prevscore+=1\n        L,R=0,n-1\n        for i in range(n):\n            if s[i]=='W':\n                L=i\n                break\n        for i in range(n-1,-1,-1):\n            if s[i]=='W':\n                R=i\n                break\n        ps=s\n        s=s[L:R+1]\n        # print(s)\n        if k==0:\n            print(prevscore)\n        elif prevscore==0:\n            print(2*(min(n,k))-1)\n        else:\n            ngapsleftovers=(L+n-1-R)\n            for i in range(len(s)):\n                if s[i]=='W':\n                    if currconsgaps>0:\n                        consgaps.append(currconsgaps)\n                    currconswins+=1\n                    currconsgaps=0\n                else:\n                    if currconswins>0:\n                        conswins.append(currconswins)\n                    currconswins=0\n                    currconsgaps+=1\n            if currconsgaps>0:\n                consgaps.append(currconsgaps)\n            if currconswins>0:\n                conswins.append(currconswins)\n            \n            # print(consgaps)\n            z=sorted(consgaps)\n            # print(z)\n            newscore=prevscore\n            for i in z:\n                if k-i<0:\n                    newscore+=2*k\n                    k=0\n                    break\n                else:\n                    newscore+=2*i+1\n                    k-=i\n                    \n            if k>0:\n                newscore+=2*min(ngapsleftovers,k)        \n            \n            print(newscore)\n                \n        \n            \n        \n        \n            \n     \n        \n        \n            \n        \n        \n                \n            \n        \n        \n        \n                \n            \n        \n\n            \n             \n        \n            \n        \n        \n        \n                \n        \n            \n        \n        \n        \n        \n                \n        \n        \n            \n        \n        \n        \n        \n                \n        \n    #<--Solving Area Ends\n    endtime=datetime.datetime.now()\n    time=(endtime-starttime).total_seconds()*1000\n    if(os.path.exists('input.txt')):\n        print(\"Time:\",time,\"ms\")  \n    \n                \nclass FastReader(io.IOBase):\n    newlines = 0\n\n    def __init__(self, fd, chunk_size=1024 * 8):\n        self._fd = fd\n        self._chunk_size = chunk_size\n        self.buffer = io.BytesIO()\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, self._chunk_size))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self, size=-1):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, self._chunk_size if size == -1 else size))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n\nclass FastWriter(io.IOBase):\n\n    def __init__(self, fd):\n        self._fd = fd\n        self.buffer = io.BytesIO()\n        self.write = self.buffer.write\n\n    def flush(self):\n        os.write(self._fd, self.buffer.getvalue())\n        self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass FastStdin(io.IOBase):\n    def __init__(self, fd=0):\n        self.buffer = FastReader(fd)\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\nclass FastStdout(io.IOBase):\n    def __init__(self, fd=1):\n        self.buffer = FastWriter(fd)\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.flush = self.buffer.flush\n\n\nif __name__ == '__main__':\n    sys.stdin = FastStdin()\n    sys.stdout = FastStdout()\n    main()\n    "
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n,k=map(int,input().split())\n    l=sorted(map(len,input().strip('L').split('W')))\n    m=len(l)-1+k\n    while l and l[0]<=k:k-=l.pop(0)\n    print((2*min(n,m)-len(l) or 1)-1)\n    "
        },
        {
            "language": 3,
            "solution": "t=int(input())\nfor i in range(0,t):\n    n,m=list(map(int,input().split()))\n    z=input()\n    a=[z[j] for j in range(0,n)]\n    s=0\n    cw=0\n    q=0\n    b=[]\n    d=[]\n    for j in range(0,n):\n        if(a[j]=='W'):\n            cw=cw+1\n            b.append(j)\n            if(q==1):\n                s=s+2\n            if(q==0):\n                s=s+1\n            q=1\n        else:\n            q=0\n    g=n-cw\n    if(m==0):\n        print(s)\n        continue\n    if(cw==0):\n        print(2*m-1)\n        continue\n    elif(g<=m):\n        s=1+2*(n-1)\n    elif(g>m):\n        le=len(b)\n        for j in range(1,le):\n            c=b[j]-b[j-1]-1\n            if(c>0):\n                d.append(c) \n        d.sort()\n        le=len(d)\n        for j in range(0,le):\n            if(d[j]<=m):\n                s=s+2*(d[j])+1\n                m=m-(d[j])\n            else:\n                break\n        s=s+2*(m)\n    print(s)"
        },
        {
            "language": 3,
            "solution": "t = int(input())\n\nfor ii in range(t):\n\tn, k = map(int, input().split())\n\n\ts = input()\n\n\ta = [0]*n\n\n\tfor i in range(n):\n\t\t\n\t\tif s[i] == \"W\":\n\t\t\tif i == 0:\n\t\t\t\ta[i] = 1\n\t\t\telif a[i-1] != 0:\n\t\t\t\ta[i] = 2\n\t\t\telse:\n\t\t\t\ta[i] = 1\n\n\tstretch = []\n\n\textras = []\n\n\tcount = 0\n\tindex = None\n\tfor i in range(n):\n\t\tif a[i] == 0:\n\t\t\tif index == None:\n\t\t\t\tindex = i\n\t\t\tcount+=1\n\n\t\telse:\n\t\t\tif index is not None:\n\t\t\t\tif index == 0:\n\t\t\t\t\textras.append((count, index))\n\t\t\t\telse:\n\t\t\t\t\tstretch.append((count, index))\n\t\t\tcount = 0\n\t\t\tindex = None\n\n\tif a[-1] == 0:\n\t\textras.append((count, index))\n\n\tstretch.sort()\n\textras.sort()\n\n\tcnt = 0\n\tind = 0\n\n\t# print(stretch)\n\n\twhile (cnt < k and ind<len(stretch)):\n\t\tinti = stretch[ind][1]\n\n\t\twhile (cnt<k and inti<n):\n\t\t\tif a[inti] == 0:\n\t\t\t\ta[inti] = 1\n\t\t\t\tinti+=1\n\t\t\t\tcnt+=1\n\n\t\t\telse:\n\t\t\t\tbreak\n\n\t\tind+=1\n\n\t# print(extras)\n\tind = 0\n\twhile (cnt < k and ind<len(extras)):\n\t\tinti = extras[ind][1]\n\n\t\tif inti != 0:\n\n\t\t\twhile (cnt<k and inti<n):\n\t\t\t\tif a[inti] == 0:\n\t\t\t\t\ta[inti] = 1\n\t\t\t\t\tinti+=1\n\t\t\t\t\tcnt+=1\n\n\t\t\t\telse:\n\t\t\t\t\tbreak\n\t\telse:\n\t\t\twhile (inti < n and a[inti] == 0):\n\t\t\t\tinti+=1\n\n\t\t\tif inti == n:\n\t\t\t\tinti = n-1\n\n\t\t\tif a[inti] != 0:\n\t\t\t\tinti -= 1\n\n\n\t\t\twhile (cnt<k and inti>-1):\n\t\t\t\tif a[inti] == 0:\n\t\t\t\t\ta[inti] = 1\n\t\t\t\t\tinti-=1\n\t\t\t\t\tcnt+=1\n\n\t\t\t\telse:\n\t\t\t\t\tbreak\n\n\t\tind+=1\n\n\tfor i in range(n):\n\t\tif a[i] != 0:\n\t\t\tif i == 0:\n\t\t\t\tpass\n\t\t\telif a[i-1] != 0:\n\t\t\t\ta[i] = 2\n\n\tprint(sum(a))"
        },
        {
            "language": 3,
            "solution": "naborov = int(input())\n\nks = []\nsets = []\nfor _ in range(naborov):\n    ks.append(int(input().split()[1]))\n    sets.append(input())\n\nimport collections as clc\n\ndef count(ss):\n    col = clc.Counter()\n    if s[0] == 'W':\n        res = 1\n        prev = 0\n        first = 0\n    else:\n        res = 0\n        prev = None\n\n    for i in range(1, len(ss)):\n        if ss[i] == 'W':\n            if ss[i-1] == 'W':\n                res += 2\n            else:\n                res += 1\n            if prev == None:\n                first = i\n            elif prev < i - 1:\n                col[i-1-prev] += 1\n            prev = i\n    last = i-prev\n    return (res, col, first, last)\n        \ndef treat(ss, k):\n    col = clc.Counter(ss)\n    if col['L'] <= k:\n        return (len(ss)*2-1)\n    elif col['W'] == 0:\n        return (max(0, 2*k-1))\n    res, col, first, last = count(s)\n    \n    for d in sorted(col.keys()):\n        if d*col[d] <= k:\n            k -= d*col[d]\n            res += (d*2+1)*col[d]\n        else:\n            t, k  = divmod(k, d)\n            res += (d*2+1)*t\n            break\n    res += k*2\n    return(res)\n\n    \nfor s, k in zip(sets, ks):\n    print(treat(s, k))"
        },
        {
            "language": 3,
            "solution": "def score(s):\n    rv=0\n    for z in range(len(s)):\n        if s[z]=='W':\n            if z==0:\n                rv+=1\n            else:\n                if s[z-1]=='W':\n                    rv+=2\n                else:\n                    rv+=1\n    return rv\nfor _ in range(int(input())):\n    n,k=map(int,input().split())\n    s=list(input())\n    cl=s.count('L')\n    if k==0:\n        print(score(s))\n    elif k>=cl:\n        print((n-1)*2+1)\n    elif cl==n:\n        print((k-1)*2+1)\n    else:\n        iidx=-1\n        eidx=-1\n        for z in range(n):\n            if s[z]=='W':\n                iidx=z\n                break\n        for z in range(n-1,-1,-1):\n            if s[z]=='W':\n                eidx=z\n                break\n        if iidx==eidx:\n            print((k*2)+1)\n        else:\n            count=0\n            ans=[]\n            for z in range(iidx,eidx+1):\n                if s[z]=='L':\n                    count+=1\n                else:\n                    if count:\n                        ans.append((count,z-count))\n                        count=0\n            if count:\n                ans.append((count,eidx+1-count));\n            ans.sort()\n            for z in ans:\n                if not k:\n                    break\n                mini=min(k,z[0])\n                k-=mini\n                for x in range(mini):\n                    s[x+z[1]]='W'\n            while k and eidx+1<n:\n                s[eidx+1]='W'\n                eidx+=1\n                k-=1\n            while k and iidx-1>-1:\n                s[iidx-1]='W'\n                iidx-=1\n                k-=1\n            print(score(s))\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n,k = map(int,input().split())\n    s = list(input().strip())\n    from collections import defaultdict\n    mp = defaultdict(list)\n    i = 0\n    while i<n and s[i]==\"L\":\n        i+=1\n    cnt = 0\n    lst = i\n    while i<n:\n        if s[i]==\"L\":\n            cnt+=1\n        else:\n            if cnt:\n                mp[cnt].append(lst)\n            cnt = 0\n            lst = i+1\n        i+=1\n    for i in sorted(mp.keys()):\n        for idx in mp[i]:\n            j = idx\n            while j< n and s[j]==\"L\" and k>0:\n                s[j] = \"W\"\n                j+=1\n                k-=1\n                if k<=0:\n                    break\n            if k<=0:\n                break\n        if k<=0:\n            break\n\n    i =0\n    mp2 = []\n    # while i<n and s[i]==\"L\":\n    #     i+=1\n    cnt = 0\n    res = 0\n    while i<n:\n        if s[i]==\"W\":\n            cnt+=1\n        else:\n            if cnt:\n                res+= 1+ 2*(cnt-1)\n                mp2.append(cnt)\n            cnt = 0\n        i+=1\n\n    if cnt:\n        res+=1+2*(cnt-1)\n        mp2.append(cnt)\n    # print(mp2)\n    if \"W\" in s:\n        res += max(0,2*min(s.count(\"L\"),k))\n        pass\n    else:\n        res += max(0,2*min(s.count(\"L\"),k)-1)\n        pass\n    # print(\"\".join(s))\n    print(res)\n"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nfor i in range(t):\n    n,k=map(int,input().split())\n    s=[]\n    w=input()\n    for j in w:\n        s.append(j)\n    p=k\n    res=[]\n    j=0\n    while(j<n):\n        if s[j]==\"W\":\n            res.append(j)\n        j+=1\n    if len(res)==0:\n        j=0\n        while(j<n):\n            if p==0:\n                break\n            s[j]=\"W\"\n            p+=-1\n            j+=1\n    elif len(res)==1:\n        j=res[0]-1\n        while(j>=0):\n            if p==0:\n                break\n            s[j]=\"W\"\n            p+=-1\n            j+=-1\n        j=res[0]+1\n        while(j<n):\n            if p==0:\n                break\n            s[j]=\"W\"\n            p+=-1\n            j+=1\n    else:\n        req=[]\n        j=1\n        while(j<len(res)):\n            req.append([res[j]-res[j-1],res[j-1],res[j]])\n            j+=1\n        req.sort()\n        l=0\n        while(l<len(req)):\n            if p==0:\n                break\n            j=req[l][1]+1\n            while(j<req[l][2]):\n                if p==0:\n                    break\n                s[j]=\"W\"\n                p+=-1\n                j+=1\n            l+=1\n\n        j = res[0] - 1\n        while (j >= 0):\n            if p == 0:\n                break\n            s[j] = \"W\"\n            p += -1\n            j += -1\n        j = res[-1] + 1\n        while (j < n):\n            if p == 0:\n                break\n            s[j] = \"W\"\n            p += -1\n            j += 1\n\n    j=1\n    ans=0\n    if s[0]==\"W\":\n        ans=1\n    while(j<n):\n        if s[j]==\"W\" and s[j]==s[j-1]:\n            ans+=2\n        elif s[j]==\"W\":\n            ans+=1\n        j+=1\n    print(ans)\n\n\n\n\n\n\n\n\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long double EPS = 10e-9;\nconst int INF = 1e9 + 5;\nconst long long INFLL = (long long)INF * (long long)INF;\nconst long long MOD = 1e9 + 7;\nconst long double PI = 3.14159265358979323846;\nstruct HASH {\n  size_t operator()(const pair<int, int> &x) const {\n    return hash<long long>()(((long long)x.first) ^\n                             (((long long)x.second) << 32));\n  }\n};\nvoid __print(int x) { cerr << x; }\nvoid __print(long x) { cerr << x; }\nvoid __print(long long x) { cerr << x; }\nvoid __print(unsigned x) { cerr << x; }\nvoid __print(unsigned long x) { cerr << x; }\nvoid __print(unsigned long long x) { cerr << x; }\nvoid __print(float x) { cerr << x; }\nvoid __print(double x) { cerr << x; }\nvoid __print(long double x) { cerr << x; }\nvoid __print(char x) { cerr << '\\'' << x << '\\''; }\nvoid __print(const char *x) { cerr << '\\\"' << x << '\\\"'; }\nvoid __print(const string &x) { cerr << '\\\"' << x << '\\\"'; }\nvoid __print(bool x) { cerr << (x ? \"true\" : \"false\"); }\ntemplate <typename T, typename V>\nvoid __print(const pair<T, V> &x) {\n  cerr << '{';\n  __print(x.first);\n  cerr << ',';\n  __print(x.second);\n  cerr << '}';\n}\ntemplate <typename T>\nvoid __print(const T &x) {\n  int f = 0;\n  cerr << '[';\n  for (auto &i : x) cerr << (f++ ? \",\" : \"\"), __print(i);\n  cerr << \"]\";\n}\nvoid _print() { cerr << \"\\n\"; }\ntemplate <typename T, typename... V>\nvoid _print(T t, V... v) {\n  __print(t);\n  if (sizeof...(v)) cerr << \", \";\n  _print(v...);\n}\nstruct Offset {\n  set<long long> s;\n  long long delta;\n  long long getMinimum() { return (*s.begin()) + delta; }\n  long long getMaximum() { return (*s.rbegin()) + delta; }\n  void increase(long long x) { delta += x; }\n  void add(long long x) { s.insert(x - delta); }\n  void remove(long long x) { s.erase(x - delta); }\n  bool contains(long long x) { return s.count(x - delta) != 0; }\n};\nlong long solve(int n, int k, string s) {\n  int wins = 0, losses = 0;\n  vector<pair<int, int>> w, l;\n  for (int i = 0; i < n; i++) {\n    if (s[i] == 'W') {\n      wins++;\n      if (losses) {\n        l.push_back(make_pair(i - losses, losses));\n        losses = 0;\n      }\n    } else {\n      losses++;\n      if (wins) {\n        w.push_back(make_pair(i - wins, wins));\n        wins = 0;\n      }\n    }\n  }\n  if (losses) {\n  }\n  if (wins) {\n    w.push_back(make_pair(n - wins, wins));\n  }\n  sort(l.begin(), l.end(), [](const pair<int, int> l, const pair<int, int> r) {\n    return l.second < r.second;\n  });\n  int score = 0;\n  int first_pos = -1;\n  for (int i = 0; i < l.size(); i++) {\n    if (l[i].first == 0) {\n      first_pos = i;\n      continue;\n    }\n    if (l[i].second <= k) {\n      for (int j = l[i].first; j < l[i].first + l[i].second; j++) {\n        s[j] = 'W';\n      }\n      k -= l[i].second;\n    } else {\n      for (int j = l[i].first; j < l[i].first + k; j++) {\n        s[j] = 'W';\n      }\n      k = 0;\n      break;\n    }\n  }\n  if (k > 0 && losses) {\n    int pos = n - losses;\n    int c = k;\n    for (int j = pos; j < min(pos + c, n); j++) {\n      s[j] = 'W';\n      k--;\n    }\n  }\n  if (k > 0 && first_pos != -1) {\n    for (int j = l[first_pos].second; j >= max(0, l[first_pos].second - k);\n         j--) {\n      s[j] = 'W';\n    }\n  }\n  if (s[0] == 'W') {\n    score++;\n  }\n  for (int i = 1; i < n; i++) {\n    if (s[i - 1] == 'W' && s[i] == 'W') {\n      score += 2;\n    } else if (s[i] == 'W') {\n      score += 1;\n    }\n  }\n  return score;\n}\nlong long brute(int n, int k, string s) {\n  vector<int> z;\n  for (int i = 0; i < n; i++) {\n    if (s[i] == 'L') {\n      z.push_back(i);\n    }\n  }\n  int ans = -1;\n  for (int mask = 0; mask < (1 << z.size()); mask++) {\n    if (__builtin_popcount(mask) <= k) {\n      string cop = s;\n      for (int i = 0; i < z.size(); i++) {\n        if (mask & (1 << i)) {\n          cop[z[i]] = 'W';\n        }\n      }\n      int score = 0;\n      if (cop[0] == 'W') {\n        score++;\n      }\n      for (int i = 1; i < n; i++) {\n        if (cop[i - 1] == 'W' && cop[i] == 'W') {\n          score += 2;\n        } else if (cop[i] == 'W') {\n          score += 1;\n        }\n      }\n      ans = max(ans, score);\n    }\n  }\n  return ans;\n}\nlong long rand(long long a, long long b) { return a + rand() % (b - a + 1); }\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  int t;\n  cin >> t;\n  while (t--) {\n    int n, k;\n    cin >> n >> k;\n    string s;\n    cin >> s;\n    cout << solve(n, k, s) << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "import itertools\nimport math\nimport sys\nfrom collections import defaultdict\n\n \ndef stdinWrapper():\n    data = '''9\n5 2\nWLWLL\n6 5\nLLLWWL\n7 1\nLWLWLWL\n15 5\nWWWLLLWWWLLLWWW\n40 7\nLLWLWLWWWLWLLWLWWWLWLLWLLWLLLLWLLWWWLWWL\n1 0\nL\n1 1\nL\n6 1\nWLLWLW\n5 2\nLWLWL\n'''\n   \n    \n    for line in data.split('\\n'):\n        yield line\n \nif '--debug' not in sys.argv:\n    def stdinWrapper():\n        while True:\n            yield sys.stdin.readline()\n \ninputs = stdinWrapper()\n \ndef inputWrapper():\n    return next(inputs)\n \ndef getType(_type):\n    return _type(inputWrapper())\n \ndef getArray(_type):\n    return [_type(x) for x in inputWrapper().split()]\n \n\n\ndef tuplerize(method):\n    def wrap(*args, **kwargs):\n        res = method(*args, **kwargs)\n        if not isinstance(res, (tuple, list)):\n            res = (res, )\n\n        return res\n    return wrap\n\n    \n''' Solution '''\n@tuplerize\ndef solve(k, games):\n    wins = 0\n    loses = 0\n    win_streaks = 0\n    gaps = []\n\n    for i in range(len(games)):\n        if games[i] == 'W':\n            wins += 1\n            if i == 0 or games[i-1] == 'L':\n                win_streaks += 1\n        else:\n            loses += 1\n            if i == 0 or games[i-1] == 'W':\n                gaps.append(0)\n\n            gaps[-1] += 1\n\n    if k >= loses:\n        return 2 * (len(games)) - 1\n\n    if wins == 0:\n        if k == 0:\n            return 0\n\n        return 2 * k - 1\n\n    if games[0] == 'L':\n        gaps[0] = float('inf')\n\n    if games[-1] == 'L':\n        gaps[-1] = float('inf')\n\n    \n\n    gaps = sorted(gaps)\n    wins += k\n    for gap in gaps:\n        if gap > k:\n            break\n\n        k -= gap\n        win_streaks -= 1\n\n\n    return 2 * wins - win_streaks\n\nt = getType(int)\nfor _ in range(t):\n    n, k = getArray(int)\n    games = input()\n    res = solve(k, games)\n    print(*res)\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n,k=map(int,input().split())\n    s=input()\n    s=list(s)\n    cw=0\n    w=[]\n    idx=-1\n    cl=0\n    fw=-1\n    lw=-1\n    ans = 0\n    for i in range(n):\n        if(s[i]=='W'):\n            if(i>0 and s[i-1]=='W'):\n                ans+=2\n            else:\n                ans+=1\n            if(fw==-1):\n                fw=i\n            lw=i\n            cw+=1\n            if(idx!=-1):\n                if(i-idx-1):\n                    w.append(i-idx-1)\n            idx=i\n        else:\n            cl+=1\n    w.sort()\n    for i in w:\n        if(k==0):\n            break\n        if(i<=k):\n            k-=i\n            ans+=2*(i-1)+3\n        else:\n            ans+=2*(k)\n            k -= k\n      \n    if(k>0):\n        if(k>=cl):\n            ans=1+(n-1)*2\n        else:\n            if(cw==0):\n                if(k>=n):\n                    ans = 1 + (n - 1) * 2\n                    k=0\n                else:\n                    ans=1+(k-1)*2\n                    k=0\n            else:\n                for i in range(lw+1,n):\n                    if(k==0):\n                        break\n                    ans+=2\n                    k-=1\n                if(k>0):\n                    for i in range(fw-1,-1,-1):\n                        if(k==0):\n                            break\n                        ans+=2\n                        k-=1\n    print(ans)\n\n\n\n\n\n\n\n\n"
        },
        {
            "language": 3,
            "solution": "import os\nimport sys\nfrom io import BytesIO, IOBase\nimport math\n\ndef main():\n    pass\n\nBUFSIZE = 8192\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\n\ndef binary(n):\n    return (bin(n).replace(\"0b\", \"\"))\n\n\ndef decimal(s):\n    return (int(s, 2))\n\n\ndef pow2(n):\n    p = 0\n    while (n > 1):\n        n //= 2\n        p += 1\n    return (p)\n\n\ndef primeFactors(n):\n    l=[]\n    while n % 2 == 0:\n        l.append(2)\n        n = n / 2\n    for i in range(3, int(math.sqrt(n)) + 1, 2):\n        while n % i == 0:\n            l.append(i)\n            n = n / i\n    if n > 2:\n        l.append(int(n))\n    return (l)\n\n\ndef isPrime(n):\n    if (n == 1):\n        return (False)\n    else:\n        root = int(n ** 0.5)\n        root += 1\n        for i in range(2, root):\n            if (n % i == 0):\n                return (False)\n        return (True)\n\ndef maxPrimeFactors(n):\n    maxPrime = -1\n    while n % 2 == 0:\n        maxPrime = 2\n        n >>= 1\n    for i in range(3, int(math.sqrt(n)) + 1, 2):\n        while n % i == 0:\n            maxPrime = i\n            n = n / i\n    if n > 2:\n        maxPrime = n\n    return int(maxPrime)\ndef countcon(s,i):\n    c=0\n    ch=s[i]\n    for i in range(i,len(s)):\n        if(s[i]==ch):\n            c+=1\n        else:\n            break\n    #print(\"HELLO\",i,c)\n    return(c)\nfor xyz in range(0,int(input())):\n    n,k=map(int,input().split())\n    s=input()\n    #print(xyz,n,k,s,flush=True)\n    if(k>=s.count(\"L\")):\n        print(2*n-1)\n    elif(s.count(\"W\")==0):\n        print(max(0,2*k-1))\n    else:\n        gaps=[]\n        streaks=0\n        i=s.index(\"W\")\n        #print(i)\n        while(i<n):\n            if(s[i]==\"W\"):\n                c=countcon(s,i)\n                streaks+=1\n                i+=c\n            else:\n                c=countcon(s,i)\n                gaps.append(c)\n                i+=c\n        if(s[-1]==\"L\"):\n            gaps.pop()\n        gaps.sort()\n        #print(s,k)\n        #print(\"gaps\",gaps)\n        #print(streaks)\n        gf=0\n        ans=2*s.count(\"W\")-streaks\n        t=k\n        #print(gaps)\n        for i in range(0,len(gaps)):\n            if(gaps[i]>k):\n                break\n            else:\n                gf+=1\n                k-=gaps[i]\n        ans+=gf\n        ans+=t*2\n        print(ans)\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvector<pair<int, int> > gaps;\nint main() {\n  ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);\n  int t;\n  cin >> t;\n  while (t--) {\n    gaps.clear();\n    int n, k, first = -1, ff = -1, l = -1;\n    string s;\n    cin >> n >> k >> s;\n    for (int i = 0; i < s.size(); i++) {\n      if (ff == -1 && i + 1 < s.size() && s[i] == 'L' && s[i + 1] == 'W')\n        ff = i + 1;\n      if (i > 0 && s[i] == 'W' && s[i - 1] == 'L' && first != -1)\n        gaps.push_back(make_pair(i - first, first));\n      if (i + 1 < s.size() && s[i] == 'W' && s[i + 1] == 'L') first = i;\n      if (s[i] == 'W') l = i;\n    }\n    sort(gaps.begin(), gaps.end());\n    for (int i = 0; i < gaps.size(); i++) {\n      int f = gaps[i].first, second = gaps[i].second;\n      for (int j = second + 1; j < f + second; j++) {\n        if (k > 0) {\n          s[j] = 'W';\n          k--;\n        } else\n          break;\n      }\n      if (k == 0) break;\n    }\n    if (k > 0) {\n      for (int i = l + 1; i < s.size(); i++) {\n        s[i] = 'W';\n        k--;\n        if (k == 0) break;\n      }\n      if (k > 0) {\n        for (int i = ff - 1; i >= 0; i--) {\n          s[i] = 'W';\n          k--;\n          if (k == 0) break;\n        }\n      }\n    }\n    int ans = 0;\n    for (int i = 0; i < s.size(); i++) {\n      if (s[i] == 'W') {\n        ans++;\n        if (i != 0 && s[i - 1] == 'W') ans++;\n      }\n    }\n    cout << ans << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    int n, k;\n    cin >> n >> k;\n    string s;\n    cin >> s;\n    int winning_streaks_cnt = 0;\n    int wins = 0;\n    int losses = 0;\n    vector<int> losing_streaks;\n    for (int i = 0; i < n; i++) {\n      if (s[i] == 'W') {\n        wins++;\n        if (i == 0 or s[i - 1] == 'L') winning_streaks_cnt++;\n      }\n      if (s[i] == 'L') {\n        losses++;\n        if (i == 0 or s[i - 1] == 'W') losing_streaks.push_back(0);\n        losing_streaks.back()++;\n      }\n    }\n    if (k >= losses) {\n      cout << 2 * n - 1 << endl;\n      continue;\n    }\n    if (wins == 0) {\n      if (2 * k - 1 > 0) {\n        cout << 2 * k - 1 << endl;\n        continue;\n      }\n    }\n    if (s[0] == 'L') losing_streaks[0] = 1e8;\n    if (s[n - 1] == 'L') losing_streaks.back() = 1e8;\n    sort(losing_streaks.begin(), losing_streaks.end());\n    wins += k;\n    for (int i = 0; i < losing_streaks.size(); i++) {\n      if (losing_streaks[i] > k) break;\n      k -= losing_streaks[i];\n      winning_streaks_cnt--;\n    }\n    cout << 2 * wins - winning_streaks_cnt << endl;\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 100007;\nint T, n, k;\nchar c[N];\nint f[N][3], z[N], cnt, cntw, cntz;\nint main() {\n  scanf(\"%d\", &T);\n  while (T--) {\n    memset(f, 0, sizeof(f));\n    memset(z, 0, sizeof(z));\n    cnt = 0, cntw = 0, cntz = 0;\n    scanf(\"%d %d\", &n, &k);\n    cin >> c;\n    for (int i = 0; i <= n - 1; i++) {\n      if (c[i] == 'W' && !i) f[++cnt][1] = i;\n      if (c[i] == 'W' && c[i - 1] == 'L') f[++cnt][1] = i;\n      if (c[i] == 'W' && c[i + 1] == 'L') f[cnt][2] = i;\n      if (c[i] == 'W') cntw++;\n    }\n    if (!cnt) {\n      if (k == 0) {\n        printf(\"0\\n\");\n        continue;\n      }\n      if (k <= n) {\n        printf(\"%d\\n\", k * 2 - 1);\n        continue;\n      }\n      if (k > n) {\n        printf(\"%d\\n\", n * 2 - 1);\n        continue;\n      }\n    }\n    if (cntw + k >= n) {\n      printf(\"%d\\n\", n * 2 - 1);\n      continue;\n    }\n    for (int i = 2; i <= cnt; i++) z[i - 1] = f[i][1] - f[i - 1][2] - 1;\n    sort(z + 1, z + cnt);\n    for (int i = 1; i <= cnt - 1; i++) cntz += z[i];\n    if (k >= cntz) {\n      printf(\"%d\\n\", (cntw + k) * 2 - 1);\n      continue;\n    }\n    int ans = cntw * 2 - cnt;\n    for (int i = 1; i <= cnt - 1; i++)\n      if (k >= z[i]) {\n        k -= z[i];\n        ans += (z[i] * 2 + 1);\n      } else {\n        ans += (k * 2);\n        break;\n      }\n    printf(\"%d\\n\", ans);\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput=sys.stdin.readline\nt=int(input())\nfor _ in range(t):\n    n,k=map(int,input().split())\n    s=input()\n    streaks=[]\n    firstwin=-1\n    for i in range(n):\n        if s[i]=='W':\n            firstwin=i\n            break\n    if firstwin==-1:\n        print(max(0,min(2*n-1,2*k-1)))\n        continue\n    ans=0\n    curr=0\n    for i in range(firstwin,n):\n        if s[i]=='W':\n            if i>0 and s[i-1]=='W':\n                ans+=2\n            else:\n                ans+=1\n            if curr>0:\n                streaks.append(curr)\n                curr=0\n        else:\n            curr+=1\n    streaks.sort()\n    m=len(streaks)\n    pointer=-1\n    while pointer+1<m and k>=streaks[pointer+1]:\n        ans+=streaks[pointer+1]*2+1\n        k-=streaks[pointer+1]\n        pointer+=1\n    ans+=2*k\n    print(min(ans,2*n-1))"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\nimport static java.util.Collections.*;\nimport static java.lang.Math.*;\nimport java.util.stream.*;\nimport static java.util.Arrays.*;\nimport java.lang.reflect.Array;\n\n@SuppressWarnings(\"unchecked\")\npublic class B_Chess_Cheater {\n    public static PrintWriter out;\n    public static InputReader in;\n    public static long MOD = 1_000_000_007;\n    \n    public static void main(String[] args)throws IOException {\n        in = new InputReader(System.in);\n        out = new PrintWriter(System.out);\n        \n        int cases = in.nextInt();\n        \n        tloop:\n        for(int t = 0; t < cases; t++){\n            int n = in.nextInt();\n            int k = in.nextInt();\n            char[] arr = in.next().toCharArray();\n            ArrayList<Integer> gaps = new ArrayList<>();\n            ArrayList<Integer> ends = new ArrayList<>();\n            int ans = 0; int ln = 0;\n            int ct = 0;\n            int wct = 0;\n            for(int i=0;i<n;i++){\n                if(arr[i]=='W'){\n                    wct++;\n                    ln++;\n                    if(i==n-1){\n                        ans+=(ln+ln-1);\n                    }\n                    if(ct!=0) gaps.add(ct);\n                    ct=0;\n                }\n                else{\n                    ct++;\n                    if(ln!=0){\n                        ans+=(ln+ln-1); ln = 0;\n                    }\n                    if(i==n-1){\n                        gaps.add(ct);\n                    }\n                }\n            }\n            if(wct==0){\n                int v = min(k,n);\n                out.println(v==0 ? 0 : v+v-1);\n                continue;\n            }\n            if(arr[0]=='L'){\n                ends.add(gaps.get(0)); gaps.remove(0);\n            }\n            if(arr[n-1]=='L' && n>1){\n                ends.add(gaps.get(gaps.size()-1)); gaps.remove(gaps.size()-1);\n            }\n            sort(gaps);\n            for(int gap : gaps){\n                if(gap<=k){\n                    k-=gap; ans+=(2*gap); ans++;\n                }\n                else{\n                    ans+=(2*k); k=0; break;\n                }\n            }\n            for(int gap : ends){\n                if(gap<=k){\n                    k-=gap; ans+=(2*gap);\n                }\n                else{\n                    ans+=(2*k); k=0; break;\n                }\n            }\n            out.println(ans);\n        }\n        \n        out.close();\n    }\n    static void debug(Object... objs){\n        for(Object obj : objs){\n            out.print(obj+\", \");\n        }\n        out.println();\n    }\n    static void fill(Object obj, Object v){\n        int ln = Array.getLength(obj);\n        for(int i=0; i<ln; i++){\n            Object elem = Array.get(obj, i);\n            if(elem!=null && elem.getClass().isArray()) fill(elem, v);\n            else Array.set(obj, i, v);\n        }\n    }\n    static class InputReader {\n        public BufferedReader reader;\n        public StringTokenizer tokenizer;\n        \n        public InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\n            tokenizer = null;\n        }\n\n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        public int[] nextArrI(int n) {\n            int[] a=new int[n];\n            for(int i=0; i<n; i++) a[i]=nextInt();\n            return a;\n        }\n        \n        public long[] nextArrL(int n) {\n            long[] a=new long[n];\n            for (int i=0; i<n; i++) a[i]=nextLong();\n            return a;\n        }\n    }\n\n}"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n, k = map(int, input().split())\n    s = input()\n    cntW = s.count('W')\n    cntL = s.count('L')\n    cnt = 0\n    point = 0\n    gap = []\n    prevIndex = -1\n    firstIndex = -1\n    for i in range(n):\n        if s[i] == 'W':\n            cnt += 1\n            if prevIndex == -1:\n                prevIndex = i\n                firstIndex = i\n            elif i - prevIndex > 1:\n                gap.append(i - prevIndex - 1)\n            prevIndex = i\n        elif cnt > 0:\n            point += cnt * 2 - 1\n            cnt = 0\n    if s[-1] == 'W':\n        point += cnt * 2 - 1\n\n    gap.sort()\n    j = 0\n    while j < len(gap) and k > 0:\n        if gap[j] <= k:\n            point += 2 * gap[j] + 1\n            k -= gap[j]\n            cntL -= gap[j]\n            j += 1\n        else:\n            point += 2 * k\n            k = 0\n\n    if j == len(gap) and k > 0:\n        point += min(cntL, k) * 2\n\n    if cntW == 0:\n        point = min(cntL, k) * 2 - 1\n\n    print(max(point, 0))\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;import java.io.*;import java.math.*;\npublic class ChessCheater\n{\n    static final Random random=new Random();\n    \n    static void ruffleSort(int[] a) {\n        int n = a.length; \n        for (int i=0; i<n; i++) {\n            int oi=random.nextInt(n), temp=a[oi];\n            a[oi]=a[i]; a[i]=temp;\n        }\n        ArrayList<Integer> lst = new ArrayList<>();\n        for(int i : a)\n            lst.add(i);\n        Collections.sort(lst);\n        for(int i = 0; i < n; i++)\n            a[i] = lst.get(i);\n    }\n\n    static void ruffleSort(long[] a) {\n        int n = a.length; \n        for (int i=0; i<n; i++) {\n            int oi=random.nextInt(n);\n            long temp=a[oi];\n            a[oi]=a[i]; a[i]=temp;\n        }\n        ArrayList<Long> lst = new ArrayList<>();\n        for(long i : a)\n            lst.add(i);\n        Collections.sort(lst);\n        for(int i = 0; i < n; i++)\n            a[i] = lst.get(i);\n    }\n \n    public static void process()throws IOException\n    {\n        int n = ni(), k = ni();\n        char[] ch = nln().toCharArray();\n        int w = 0, winstreak = 0, l = 0;\n        ArrayList<Integer> loss = new ArrayList<>();\n        int c = 0;\n        int first = -1, last = -1;\n        for(int i = 0; i < n; i++){\n            if(ch[i] == 'W'){\n                if(first == -1)\n                    first = i;\n                last = i;\n            }\n        }\n        l = l + Math.max(0, first);\n        if(last != -1)\n            l = l+n-last-1;\n        //pn(l);\n        if(first == -1){\n            pn(Math.max(2*Math.min(k,n)-1,0));\n            return;\n        }\n        for(int i = first; i <= last; i++){\n            if(ch[i] == 'L'){\n                c++;\n                if(i == last)\n                    loss.add(c);\n                continue;\n            }\n            w++;\n            if(c != 0)\n                loss.add(c);\n            c = 0;\n        }\n        int f = 0;\n        for(int i = 0; i < n; i++){\n            if(ch[i] == 'W'){\n                f = 1;\n                if(i == n-1)\n                    winstreak++;\n                continue;\n            }\n            if(f == 1)\n                winstreak++;\n            f = 0;\n        }\n        Collections.sort(loss);\n        int len = loss.size();\n        int diff = 0;\n        for(int i = 0; i < len; i++){\n            if(loss.get(i) <= k){\n                w = w+loss.get(i);\n                diff++;\n                k = k-loss.get(i);\n            }\n            else{\n                w = w+k;\n                k = 0;\n                break;\n            }\n        }\n        winstreak = winstreak-diff;\n        w = w+Math.min(k,l);\n        long ans = 2*w - winstreak;\n        pn(ans);\n    }\n   \n    static AnotherReader sc;\n    static PrintWriter out;\n    public static void main(String[]args)throws IOException\n    {\n        boolean oj = System.getProperty(\"ONLINE_JUDGE\") != null;\n        if(oj){sc=new AnotherReader();out=new PrintWriter(System.out);}\n        else{sc=new AnotherReader(100);out=new PrintWriter(\"output.txt\");}\n        long s = System.currentTimeMillis();\n        int t=1;\n        t=ni();\n        //int k = t;\n        while(t-->0) {/*p(\"Case #\"+ (k-t) + \": \")*/;process();}\n        out.flush();\n        System.err.println(System.currentTimeMillis()-s+\"ms\");\n        out.close();\n    }\n\n    static long power(long k, long c, long mod){\n        long y = 1;\n        while(c > 0){\n            if(c%2 == 1)\n                y = y * k % mod;\n            c = c/2;\n            k = k * k % mod;\n        }\n        return y;\n    }\n\n \n    static void pn(Object o){out.println(o);}\n    static void p(Object o){out.print(o);}\n    static void pni(Object o){out.println(o);out.flush();}\n    static int ni()throws IOException{return sc.nextInt();}\n    static long nl()throws IOException{return sc.nextLong();}\n    static double nd()throws IOException{return sc.nextDouble();}\n    static String nln()throws IOException{return sc.nextLine();}\n    static int[] nai(int N)throws IOException{int[]A=new int[N];for(int i=0;i!=N;i++){A[i]=ni();}return A;}\n    static long[] nal(int N)throws IOException{long[]A=new long[N];for(int i=0;i!=N;i++){A[i]=nl();}return A;}\n    static long gcd(long a, long b)throws IOException{return (b==0)?a:gcd(b,a%b);}\n    static int gcd(int a, int b)throws IOException{return (b==0)?a:gcd(b,a%b);}\n    static int bit(long n)throws IOException{return (n==0)?0:(1+bit(n&(n-1)));}\n    \n/////////////////////////////////////////////////////////////////////////////////////////////////////////\n \n    static class AnotherReader{BufferedReader br; StringTokenizer st;\n    AnotherReader()throws FileNotFoundException{\n    br=new BufferedReader(new InputStreamReader(System.in));}\n    AnotherReader(int a)throws FileNotFoundException{\n    br = new BufferedReader(new FileReader(\"input.txt\"));}\n    String next()throws IOException{\n    while (st == null || !st.hasMoreElements()) {try{\n    st = new StringTokenizer(br.readLine());}\n    catch (IOException  e){ e.printStackTrace(); }}\n    return st.nextToken(); } int nextInt() throws IOException{\n    return Integer.parseInt(next());}\n    long nextLong() throws IOException\n    {return Long.parseLong(next());}\n    double nextDouble()throws IOException { return Double.parseDouble(next()); }\n    String nextLine() throws IOException{ String str = \"\"; try{\n    str = br.readLine();} catch (IOException e){\n    e.printStackTrace();} return str;}}\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n}"
        },
        {
            "language": 3,
            "solution": "for test in range(int(input())):\n\t#pocet = int(input())\n\t[n, k] = list(map(int, input().split(\" \")))\n\ts = input()\n\tw = False\n\tl = 0\n\tsl = []\n\tpg = False\n\tres = 0\n\tz = 0\n\tko = 0\n\tfor r in s:\n\t\tif r == \"W\":\n\t\t\tif pg:\n\t\t\t\tres += 2\n\t\t\telse: \n\t\t\t\tres += 1\n\t\t\tpg = True\n\t\t\tif w:\n\t\t\t\tsl.append(l)\n\t\t\t\tl = 0\n\t\t\telse:\n\t\t\t\tw = True\n\t\telse:\n\t\t\tif w:\n\t\t\t\tl += 1\n\t\t\t\tpg = False\n\t\t\t\t#print(l)\n\t\t\telse:\n\t\t\t\tz += 1\n\t\t\t\t#print(\"z\")\n\tif len(sl)>0:\n\t\tsl.sort()\n\t\tc = 0\n\t\tj = 0\n\t\twhile (j<len(sl)) and (c+sl[j] <= k):\n\t\t\tc += sl[j]\n\t\t\tif sl[j] >0:\n\t\t\t\tres += sl[j]*2+1\n\t\t\tj += 1\n\t\tif j==len(sl):\n\t\t\tres = res + min(k-c, z+l)*2 \n\t\telse:\n\t\t\tres = res + (k-c)*2\n\telif w:\n\t\tres = res + min((k), z+l)*2\n\telif k>0:\n\t\tres = res + min((k), z)*2 - 1\n\tprint(res)\t"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.lang.*;\n// StringBuilder uses java.lang\n \n \npublic class mC {\n    \n    \n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        StringBuilder st = new StringBuilder();\n        int t = sc.nextInt();\n        \n        for (int test = 0; test < t; test++) {\n            int n = sc.nextInt();\n            int k = sc.nextInt();\n            String s = sc.next();\n            ArrayList<Integer> gap = new ArrayList<>();\n            int initialScore = 0;\n            int beforeW = 0;\n            boolean hasBegun = false;\n            int lastW = 0;\n            int loses = 0;\n            if (s.substring(0,1).equals(\"W\")) {\n                initialScore+=1;\n                hasBegun = true;\n                \n            } else {\n                loses+=1;\n                beforeW++;\n                lastW++;\n            }\n            \n            for (int i=1;i<n;i++) {\n                if (s.substring(i,i+1).equals(\"W\")) {\n                    if (lastW==0) {\n                        initialScore+=2;\n                    } else {\n                        initialScore+=1;\n                        if (hasBegun==false) {\n                            hasBegun=true;\n                            lastW=0;\n                        } else {\n                            gap.add(lastW);\n                            lastW=0;\n                        }\n                    }\n                    \n                } else {\n                    loses++;\n                    if (hasBegun==false) {\n                        beforeW++;\n                        lastW++;\n                    } else {\n                        lastW++;\n                    }\n                }\n            }\n            Collections.sort(gap);\n            if (k==0) {\n                st.append(initialScore+\"\\n\");\n            } else if (k+beforeW+lastW>=loses) {\n                st.append(Math.min(2*(n-loses+k)-1,2*(n)-1)+\"\\n\");\n\n            } else {\n                for (int j=0;j<gap.size();j++) {\n                    int u = gap.get(j);\n                    if (k>=u) {\n                        initialScore+=2*u+1;\n                        k-=u;\n                    } else {\n                        initialScore+=2*k;\n                        k=0;\n                    }\n                }\n                st.append(initialScore+\"\\n\");\n            }\n\n        }\n        \n        System.out.print(st.toString());\n        \n    }\n    \n    public static int findNthInArray(int[] arr,int val,int start,int o) {\n        if (o==0) {\n            return start-1;\n        } else if (arr[start] == val) {\n            return findNthInArray(arr,val,start+1,o-1);\n        } else {\n            return findNthInArray(arr,val,start+1,o);\n        }\n    }\n    public static ArrayList<Integer> dfs(int at,ArrayList<Integer> went,ArrayList<ArrayList<Integer>> connect) {\n        for (int i=0;i<connect.get(at).size();i++) {\n            if (!(went.contains(connect.get(at).get(i)))) {\n                went.add(connect.get(at).get(i));\n                went=dfs(connect.get(at).get(i),went,connect);\n            }\n        }\n        return went;\n    } public static int[] bfs (int at, int[] went, ArrayList<ArrayList<Integer>> queue, int numNodes, ArrayList<ArrayList<Integer>> connect) {\n        if (went[at]==0) {\n            went[at]=queue.get(numNodes).get(1);\n            for (int i=0;i<connect.get(at).size();i++) {\n                if (went[connect.get(at).get(i)]==0) {\n                    ArrayList<Integer> temp = new ArrayList<>();\n                    temp.add(connect.get(at).get(i));\n                    temp.add(queue.get(numNodes).get(1)+1);\n                    queue.add(temp);\n                }\n            }\n            \n        }\n        if (queue.size()==numNodes+1) {\n            return went;\n        } else {\n            return bfs(queue.get(numNodes+1).get(0),went, queue, numNodes+1, connect);\n        }\n    }\n    public static long fastPow(long base,long exp,long mod) {\n        if (exp==0) {\n            return 1;\n        } else {\n            if (exp % 2 == 1) {\n                long z = fastPow(base,(exp-1)/2,mod);\n                return ((((z*base) % mod) * z) % mod);\n            } else {\n                long z = fastPow(base,exp/2,mod);\n                return ((z*z) % mod);\n            }\n        }\n    }\n    public static long fastPow(long base,long exp) {\n        if (exp==0) {\n            return 1;\n        } else {\n            if (exp % 2 == 1) {\n                long z = fastPow(base,(exp-1)/2);\n                return ((((z*base)) * z));\n            } else {\n                long z = fastPow(base,exp/2);\n                return ((z*z));\n            }\n        }\n    }\n    public static int firstLarger(int val,ArrayList<Integer> ok,int left,int right) {\n        if (ok.get(right)<=val) {\n            return -1;\n        }\n        if (left==right) {\n            return left;\n        } else if (left+1==right) {\n            if (val<ok.get(left)) {\n                return left;\n            } else {\n                return right;\n            }\n        } else {\n            int mid = (left+right)/2;\n            if (ok.get(mid)>val) {\n                return firstLarger(val,ok,left,mid);\n            } else {\n                return firstLarger(val,ok,mid+1,right);\n            }\n        }\n    }\n}"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.math.*;\nimport java.io.*; \n public class B{\nstatic int[] dx={-1,1,0,0};\nstatic int[] dy={0,0,1,-1};\n    static FastReader scan=new FastReader();\n   public static PrintWriter out = new PrintWriter (new BufferedOutputStream(System.out));\n  static ArrayList<Pair>es;\n  static LinkedList<Integer>edges[];\n   static boolean prime[];\n   static void sieve(int n) \n    { \n        \n        prime = new boolean[n+1]; \n        for(int i=0;i<n;i++) \n            prime[i] = true; \n          \n        for(int p = 2; p*p <=n; p++) \n        { \n           \n            if(prime[p] == true) \n            { \n                \n                for(int i = p*p; i <= n; i += p) \n                    prime[i] = false; \n            } \n        } \n          \n        \n    }      \n     public static int lowerBound(long[] array, int length, long value) {\n        int low = 0;\n        int high = length;\n        while (low < high) {\n            final int mid = (low + high) / 2;\n            //checks if the value is less than middle element of the array\n            if (value <= array[mid]) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return low;\n    }\n    public static int upperBound(long[] array, int length, long value) {\n        int low = 0;\n        int high = length;\n        while (low < high) {\n            final int mid = low+(high-low) / 2;\n            if ( array[mid]>value) {\n                high = mid ;\n            } else {\n                low = mid+1;\n            }\n        }\n        return low;\n    }\nstatic long mod(long x,long y)\n    {\n        if(x<0)\n            x=x+(-x/y+1)*y;\n        return x%y;\n    }    \n     static boolean isPowerOfTwo(long n) \n    { \n        if (n == 0) \n            return false; \n  \n        while (n != 1) { \n            if (n % 2 != 0) \n                return false; \n            n = n / 2; \n        } \n        return true; \n    } \n\n  \n   \nstatic boolean isprime(long x)\n           {\n            for(long i=2;i*i<=x;i++)\n                if(x%i==0)\n                    return false;\n                return true;\n           }\n\n\nstatic int dist(int x1,int y1,int x2,int y2){\nreturn Math.abs(x1-x2)+Math.abs(y1-y2);\n}\n\n\n    static long cuberoot(long x)\n    {\n        long lo = 0, hi = 1000005;\n        while(lo<hi)\n        {\n            long m = (lo+hi+1)/2;\n            if(m*m*m>x)\n                hi = m-1;\n            else\n                lo = m;\n        }\n        return lo;\n    }\n     public static int log2(int N) \n    { \n  \n        // calculate log2 N indirectly \n        // using log() method \n        int result = (int)(Math.log(N) / Math.log(2)); \n  \n        return result; \n    } \n  \n    \n   \n       static long gcd(long a, long b) {\n    if(a!=0&&b!=0)\n        while((a%=b)!=0&&(b%=a)!=0);\n    return a^b;\n}\n    static long LCM(long a,long b){\n    return (Math.abs(a*b))/gcd(a,b);\n   }\n   public static class comp1 implements Comparator<Pair>{  \npublic int compare(Pair o1,Pair o2){\n   if(o2.x==o1.x)\n    return (o2.y-o1.y)>0?1:-1;\nreturn (o2.x-o1.x)>0?1:-1;\n}\n  }\n     public static class comp2 implements Comparator<Pair>{  \npublic int compare(Pair o1,Pair o2){\n \nreturn (o2.ab-o1.ab)>0?1:-1;\n}\n  }\n static boolean can(int m,int s)\n {\n    return (s>=0&&s<=m*9);\n }\n   static boolean collinear(long x1, long y1, long x2,  \n                          long y2, long x3, long y3) \n{\n    long a = x1 * (y2 - y3) +  \n                x2 * (y3 - y1) +  \n                x3 * (y1 - y2); \n                if(a==0)\n                    return true;\n                return false;\n}\nstatic StringBuilder s;\nstatic int x,y,n,k,pos;\npublic static void main(String[] args)  throws Exception \n{\n    /*int xx=253;\n    for(int i=1;i*i<=xx;i++)\n    {\n        if(xx%i==0)\n        {\n            System.out.println(i);\n            System.out.println(xx/i);\n        }\n    }*/\n//java.util.Scanner scan=new java.util.Scanner(new File(\"mootube.in\"));\n //PrintWriter out = new PrintWriter (new FileWriter(\"mootube.out\"));\n//scan=new FastReader(\"equal.in\");\n//out = new PrintWriter (\"output.txt\");\n//System.out.println(3^2);\n//System.out.println(19%4);\n   //StringBuilder news=new StringBuilder(\"ab\");\n   //news.deleteCharAt(1);\n   //news.insert(0,'c');\n   //news.deleteCharAt(0);\n   //System.out.println(news);\n   //System.out.println(can(2,15));\n    //System.out.println(LCM(2,2));00\n  // System.out.println(31^15);\n //System.out.println(\"bbabbbabbbabbbabbbabbbabbbabbbabbbabbbab\".length());\nint tt=1;\ntt=scan.nextInt();\n//System.out.println(calc(91));\n//sieve(21000);\n  outer:while(tt-->0)\n {\n    int n=scan.nextInt(),k=scan.nextInt();\n    StringBuilder s=new StringBuilder(scan.next());\n    ArrayList<Pair>arr=new ArrayList<Pair>();\n    for(int i=0;i<n;i++)\n    {\n      if(s.charAt(i)=='W')\n      {\n        if(arr.size()==0)\n        {\n            arr.add(new Pair(-10,i));\n        }\n        else arr.add(new Pair(i-arr.get(arr.size()-1).y-1,i));\n      }\n    }\n    Collections.sort(arr);\n   // for(int i=0;i<arr.size();i++)\n    //{\n     //   out.println(arr.get(i).x+\" \"+arr.get(i).y); \n    //}\n  //  5 2\n//WLWLL\n//\n    int res=0;\n    for(int i=0;i<arr.size();i++)\n    {\n        if(arr.get(i).x>0)\n        {\n            if(arr.get(i).x<=k){\n          //  res+=(arr.get(i).x*2);\n            k-=arr.get(i).x;\n           // out.println(\"FUCK\");\n            int l=arr.get(i).y;\n            while(l>=arr.get(i).y-arr.get(i).x)\n            {\n                s.setCharAt(l,'W');\n                l--;\n            }\n        }\n        else \n        {\n            int l=arr.get(i).y;\n            //out.println(\"FUCK\");\n            while(l>=arr.get(i).y-k)\n            {\n                s.setCharAt(l,'W');\n                l--;\n            }\n            //res+=(k*2);\n            k=0;\n        }\n        }\n    }\n  //  out.println(s);\n    for(int i=n-1;i>=0;i--)\n    {\n        if(s.charAt(i)=='W')\n        {\n            if(n-i-1<=k)\n            {\n              //  res+=((n-i-1)*2);\n                int l=n-1;\n                while(l>=i)\n                {\n                    s.setCharAt(l,'W');\n                    l--;\n                }\n                k-=(n-i-1);\n            }\n            else {\n             // out.println(k);\n                int l=i;\n            int tmp=l;\n            ///k=0;\n           // System.out.println(l+\" \"+(tmp+k));\n            while(l<=tmp+k){\n                s.setCharAt(l,'W');\n                l++;\n            }\n            k=0;\n        }\n            break;\n\n        }\n    }\n    //out.println(s);\n   // out.println(k);\n    int mio=0;\n    while(mio<n&&s.charAt(mio)=='L')\n        mio++;\n    while(mio>0&&k>0)\n    {\n        mio--;\n        s.setCharAt(mio,'W');\n        k--;\n    }\n\n    for(int i=0;i<n;i++)\n    {\n        if(s.charAt(i)=='W')\n        {\n            if(i==0)\n                res++;\n            else \n            {\n                if(s.charAt(i-1)=='W')\n                    res+=2;\n                else res++;\n            }\n        }\n    }\n    \n//out.println(k);\n//   out.println(s);\n    out.println(res);\n\n    \n\n}\n\nout.close();\n}    \n\n\nstatic class dsu{\n    static int id[]=new int[101];\n    dsu()\n    {\n        for(int i=0;i<101;i++)\n            id[i]=i;\n    }\n    static int find(int x)\n    {\n        if(x==id[x])\n            return x;\n        return find(id[x]);\n    }\n    static void connect(int i,int j)\n    {\n        i=find(i);\n        j=find(j);\n        id[i]=j;\n    }\n    static boolean is(int i,int j)\n    {\n        return find(i)==find(j);\n    }\n}\nstatic long binexp(long a,long n,long mod)\n{\n    if(n==0)\n       return 1;\n    long res=binexp(a,n/2,mod)%mod;\n    res=res*res;\n    if(n%2==1)\n        return (res*a)%mod;\n    else \n        return res%mod;\n}\nstatic class special implements Comparable<special> {\n    char x;\n    int id;\n    special(char x,int id)\n    {\n        this.id=id;\n       this.x=x;\n    }\n    public int compareTo(special o)\n    {\n        return o.id-id;\n    }\n   \n}\nstatic long powMod(long base, long exp, long mod) {\n       if (base == 0 || base == 1) return base;\n       if (exp == 0) return 1;\n       if (exp == 1) return base % mod;\n       long R = powMod(base, exp/2, mod) % mod;\n       R *= R;\n       R %= mod;\n       if ((exp & 1) == 1) {\n           return base * R % mod;\n       }\n       else return R % mod;\n   }\n public static  long pow(long b, long e) {\n            long r = 1;\n            while (e > 0) {\n                if (e % 2 == 1) r = r * b ;\n                b = b * b;\n                e >>= 1;\n            }\n            return r;\n        }\n\nprivate static void sort(int[] arr) {\n        List<Integer> list = new ArrayList<>();\n        for (int object : arr) list.add(object);\n        Collections.sort(list);\n        for (int i = 0; i < list.size(); ++i) arr[i] = list.get(i);\n    }\n public static class FastReader {\n        BufferedReader br;\n        StringTokenizer root;\n        \n \n        public FastReader() {\n            br = new BufferedReader(new InputStreamReader(System.in));\n        }\n        FastReader(String filename)throws Exception\n        {\n\n            br=new BufferedReader(new FileReader(filename));\n        }\n \n        String next() {\n            while (root == null || !root.hasMoreTokens()) {\n                try {\n                    root = new StringTokenizer(br.readLine());\n                } catch (Exception addd) {\n                    addd.printStackTrace();\n                }\n            }\n            return root.nextToken();\n        }\n \n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n \n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n \n        long nextLong() {\n            return Long.parseLong(next());\n        }\n \n        String nextLine() {\n            String str = \"\";\n            try {\n                str = br.readLine();\n            } catch (Exception addd) {\n                addd.printStackTrace();\n            }\n            return str;\n        }\n         public int[] nextIntArray(int arraySize) {\n            int array[] = new int[arraySize];\n \n            for (int i = 0; i < arraySize; i++) {\n                array[i] = nextInt();\n            }\n \n            return array;\n        }\n}\npublic static class Pair implements Comparable<Pair>{\n         int x;\n         int y;\n         long ab;\n        \n        int z;\n        public Pair(){}\n        public Pair(int x1, int y1,int z) {\n            x=x1;\n            y=y1;\n            this.z=z;\n        }\n        public Pair(int x1, int y1) {\n            x=x1;\n            y=y1;\n            this.ab=x+y;\n        \n        }\n        @Override\n        public int hashCode() {\n            return (int)(x + 31 * y);\n        }\n        public String toString() {\n            return x + \" \" + y;\n        }\n        @Override\n        public boolean equals(Object o){\n            if (o == this) return true;\n            if (o.getClass() != getClass()) return false;\n            Pair t = (Pair)o;\n            return t.x == x && t.y == y;\n        }\n        public  int compareTo(Pair o)\n        {\n            return x-o.x;    \n        }\n}\n\n}\n\n\n\n\n\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios::sync_with_stdio(false), cin.tie(NULL), cout.tie(NULL);\n  long long TT;\n  cin >> TT;\n  for (long long hhh = 1; hhh <= TT; hhh++) {\n    long long n, k;\n    cin >> n >> k;\n    vector<long long> v;\n    string s;\n    cin >> s;\n    s = \"L\" + s + \"L\";\n    long long ans = 0;\n    long long add = 0;\n    long long fw = 0;\n    for (long long i = 1; i <= n; i++)\n      if (s[i] == 'W') {\n        fw = i;\n        break;\n      }\n    for (long long i = 1; i <= n; i++) {\n      if (s[i] == 'W' && s[i - 1] == 'W') ans += 2;\n      if (s[i] == 'W' && s[i - 1] != 'W') ans += 1;\n      if (s[i] == 'W' && i > fw) {\n        if (add > 0) v.push_back(add);\n        add = 0;\n      } else {\n        add++;\n      }\n      if (i == fw) {\n        add = 0;\n      }\n    }\n    if (v.size() > 0) sort(v.begin(), v.end());\n    long long first = 0;\n    long long last = 0;\n    long long i = 1;\n    while (i <= n && s[i] != 'W') {\n      first++;\n      i++;\n    }\n    i = n;\n    while (i >= 1 && s[i] != 'W') {\n      last++;\n      i--;\n    }\n    if (v.size() == 0 && first == 0 && last == 0) {\n      cout << ans << endl;\n      continue;\n    }\n    if (ans == 0) {\n      if (k > 0)\n        cout << 2 * k - 1 << endl;\n      else\n        cout << 0 << endl;\n      continue;\n    }\n    for (long long i = 0; i < v.size(); i++) {\n      if (k >= v[i]) {\n        ans += (v[i] * 2 + 1);\n        k = k - v[i];\n      } else {\n        ans += 2 * k;\n        k = 0;\n      }\n    }\n    if (k >= last) {\n      ans += 2 * last;\n      k = k - last;\n    } else {\n      ans += 2 * k;\n      k = 0;\n    }\n    if (k >= first) {\n      if (k > 0) ans += 2 * first;\n      k = k - first;\n    } else {\n      if (k > 0) ans += 2 * k;\n      k = 0;\n    }\n    cout << ans << endl;\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "import bisect\nimport collections\nimport copy\nimport functools\nimport heapq\nimport itertools\nimport math\nimport random\nimport re\nimport sys\nimport time\nimport string\nsys.setrecursionlimit(99999)\n           \nfor _ in range(int(input())):\n    n,k = map(int,input().split())\n    s = input().strip(\"L\")\n    cw = s.count(\"W\")+k\n    t = []\n    for key,value in itertools.groupby(s):\n        if key==\"L\":\n            t.append(len(list(value)))\n    t.sort()\n    while t and t[0]<=k:\n        k-=t.pop(0)\n    print(max(0,2*min(n,cw)-len(t)-1))"
        },
        {
            "language": 3,
            "solution": "def count(s):\n    wins = 0\n    l = 0\n    arr = []\n    prev = None\n\n    for e in s:\n        if e == \"L\":\n            if prev == \"W\" or l > 0:\n                l += 1\n        if e == \"W\":\n            wins += 1\n            if l > 0:\n                arr.append(l)\n                l = 0\n        prev = e\n    return wins, arr\n\nt = int(input())\n# t = 1\nfor _ in range(t):\n    # n, k = 5, 2\n    # s = \"WLWLL\"\n    # n = len(s)\n\n    n, k = [int(i) for i in input().split()]\n    s = [c for c in input()]\n\n    wins, arr = count(s)\n    streaks = len(arr)+1\n\n    if wins == 0:\n        print(max(2*min(n, k)-1, 0))\n    elif wins + k >= n:\n        print(2*n-1)\n    else:\n        kt = k\n        arr.sort(reverse=True)\n        while kt > 0 and len(arr) > 0:\n            kt -= arr.pop()\n            if kt >= 0:\n                streaks -= 1\n        print(2*(k+wins)-streaks)"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nans = []\nfor test in range(t):\n    n, k = [int(i) for i in input().split()]\n    a = input()\n    loses = sum([1 for i in a if i == 'L'])\n    if 'W' not in a:\n        ans.append(max(0, k * 2 - 1))\n    elif loses <= k:\n        ans.append(len(a) * 2 - 1)\n    else:\n        losing = False\n        left = a.find('W')\n        segs = []\n        cost = 0\n        for i in range(left, n):\n            if losing is True and a[i] == 'W':\n                segs.append(i - left)\n                left = i\n                losing = False\n            elif losing is False and a[i] == 'L':\n                cost += (i - left) * 2 - 1\n                left = i\n                losing = True\n        if a[-1] == 'W':\n            cost += (n - left) * 2 - 1\n        total = sum(segs)\n        if k > total:\n            ans.append(cost + 2 * total + len(segs) + (k - total) * 2)\n        else:\n            segs.sort()\n            cs = 0\n            left = 0\n            for i, seg in enumerate(segs):\n                if k >= cs + seg:\n                    cs += seg\n                    left = i + 1\n                else:\n                    break\n            ans.append(cost + 2 * cs + left + (k - cs) * 2)\nprint(*ans, sep='\\n')\n"
        },
        {
            "language": 3,
            "solution": "import sys, os\nfrom math import sqrt, gcd, ceil, log, floor\nfrom bisect import bisect, bisect_left\nfrom collections import defaultdict, Counter, deque\nfrom heapq import heapify, heappush, heappop\ninput = sys.stdin.readline\nread = lambda: list(map(int, input().strip().split()))\n# read_f = lambda file:  list(map(int, file.readline().strip().split()))\n\nMOD = 998244353\n\n# def f(arr, i, s, res):\n# \tif i == len(arr):return(res)\n# \tf(arr)\n\ndef main():\n\tans = []\n\tfor _ in range(int(input())):\n\t\tn, k = read(); t = input().strip()\n\t\t\n\t\ts = \"Z\"+t+\"Z\"\n\t\ts = s.split(\"W\")\n\t\ts.sort()\n\n\t\tscore = 0\n\n\t\tfor i in range(n):\n\t\t\tif t[i] == \"W\":\n\t\t\t\tif i > 0 and t[i-1] == \"W\":score += 2\n\t\t\t\telse:score += 1\n\t\tif k == 0:ans.append(str(score));continue\n\n\t\t# print(score)\n\n\t\tfor i in s:\n\t\t\tif not i:continue\n\t\t\tif i == \"Z\":continue\n\t\t\tif i[0] == \"Z\" and i[-1] == \"Z\":\n\t\t\t\tscore += 2*(min(k, len(i)-2)) - 1\n\t\t\t\tk -= min(k, len(i)-2)\n\t\t\t\t# print(i, \"1*********\")\n\n\t\t\telif not (i[0] == \"Z\" or i[-1] == \"Z\"):\n\t\t\t\tscore += 2*(min(k, len(i)))+[0, 1][k >= len(i)]\n\t\t\t\tk -= min(k, len(i))\n\t\t\t\t# print(i, \"2*********\")\n\t\t\telse:\n\t\t\t\tscore += 2*(min(k, len(i)-1))\n\t\t\t\tk -= min(k, len(i)-1)\n\t\t\t\t# print(i, \"3*********\")\n\n\t\t\tif k == 0:\n\t\t\t\tbreak\n\n\t\tans.append(str(score))\n\tprint(\"\\n\".join(ans))\n\n\n\n\n\n\n\nif __name__ == \"__main__\":\n\tmain()\n"
        },
        {
            "language": 3,
            "solution": "#!/usr/bin/env python\nimport os\nimport sys\nfrom io import BytesIO, IOBase\nimport threading \nfrom bisect import bisect_right\nfrom math import gcd,log\nfrom collections import Counter\nfrom pprint import pprint\n\ndef main():\n    # n=int(input())\n    n,m=map(int,input().split())\n    # arr=list(map(int,input().split()))\n    s=[c for c in input()]\n    start=0\n    end=0\n    a=[]\n    wc=s.count('W')\n    while end<n and start<n:\n        if s[start]=='L':\n            end=start\n            while end<n and s[end]=='L':\n                end+=1\n            if start!=0 and end!=n:\n                a.append((end-start,start) )\n            start=end-1\n        start+=1\n    a.sort(reverse=True)\n    # print(a)\n    while m and len(a):\n        l,st=a.pop()\n        # print(m,a)\n        for i in range(st,st+l):\n            m-=1\n            # print(s)\n            s[i]='W'\n            if not m:\n                break\n    ind=0\n    while ind<n and s[ind]=='L':\n        ind+=1\n    j=ind-1\n    while j>=0 and m:\n        s[j]='W'\n        j-=1\n        m-=1\n\n    end=n-1\n    while end>=0 and s[end]=='L':\n        # print(s[end],end)\n        end-=1\n    j=end+1\n    # print('M',m,j)\n    while j<n and m:\n        s[j]='W'\n        j+=1\n        m-=1\n\n\n    # print(s)\n    ans=0\n    if s[0]=='W':\n        ans+=1\n    for i in range(1,n):\n        if s[i]=='W':\n            if s[i-1]== 'W':\n                ans+=1\n            ans+=1\n    print(ans)\n    # print(a)\n\n\n\n\n    # print(ans)\n\n\n\n        \nBUFSIZE = 8192\n \n \nclass FastIO(IOBase):\n    newlines = 0\n \n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n \n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n \n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n \n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n \n \nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n \n \nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n \n# endregion\n \nif __name__ == \"__main__\":\n\n    for _ in range(int(input())):\n        main()\n\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,avx\")\nusing namespace std;\ntemplate <class T>\nT make_vec(T default_value) {\n  return default_value;\n}\ntemplate <class T, class Arg, class... Args>\nauto make_vec(T default_value, Arg size, Args... rest)\n    -> vector<decltype(make_vec(default_value, rest...))> {\n  auto level = make_vec(default_value, rest...);\n  return vector<decltype(level)>(size, level);\n}\ntemplate <class Xs>\nint sz(const Xs &xs) {\n  return static_cast<int>(xs.size());\n}\nusing i64 = int64_t;\nusing f80 = long double;\nusing Str = string;\ntemplate <class T = int>\nusing Vec = vector<T>;\ntemplate <class K = int, class H = hash<K>>\nusing US = unordered_set<K, H>;\ntemplate <class K, class V, class H = hash<K>>\nusing UM = unordered_map<K, V, H>;\ntemplate <class U = int, class V = U>\nusing P = pair<U, V>;\nusing G = Vec<Vec<int>>;\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    int n, k;\n    cin >> n >> k;\n    Str s;\n    cin >> s;\n    if (all_of(s.begin(), s.end(), [](char c) { return c == 'W'; })) {\n      cout << 2 * n - 1 << '\\n';\n      continue;\n    }\n    if (all_of(s.begin(), s.end(), [](char c) { return c == 'L'; })) {\n      cout << max(0, 2 * min(n, k) - 1) << '\\n';\n      continue;\n    }\n    Vec<int> blocks{0};\n    for (auto c : s) {\n      if (c == 'W') {\n        if (blocks.back() > 0) blocks.push_back(0);\n      } else {\n        blocks.back() += 1;\n      }\n    }\n    if (blocks.back() == 0) blocks.pop_back();\n    if (s.front() == 'L') blocks.front() |= 1 << 20;\n    if (s.back() == 'L') blocks.back() |= 1 << 20;\n    int score = 0;\n    for (int i = 0; i < n; ++i) score += s[i] == 'W';\n    for (int i = 0; i + 1 < n; ++i) score += s[i] == 'W' && s[i + 1] == 'W';\n    sort(blocks.begin(), blocks.end());\n    for (auto block : blocks) {\n      int size = block & ~(1 << 20);\n      bool flag = block >> 20;\n      if (k < size) {\n        score += 2 * k;\n        break;\n      }\n      score += 2 * size + 1 - flag;\n      k -= size;\n    }\n    cout << score << '\\n';\n  }\n}\nnamespace {\nauto fast_io = [] {\n  ios::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout << setprecision(8) << fixed;\n  cerr << boolalpha << setprecision(4) << fixed;\n  return 0;\n}();\n}\n"
        },
        {
            "language": 4,
            "solution": "//package com.test.demo.codeforces.gr11;\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.List;\nimport java.util.stream.Collectors;\n\npublic class GR11Task02 {\n    public static void main(String[] args) throws IOException {\n        //solve(5, \"LLLWWL\");\n\n        try (BufferedReader stream = new BufferedReader(new InputStreamReader(System.in))) {\n            int tests = readArr(stream.readLine(), 1)[0];\n\n            for (int i = 0; i < tests; i++) {\n                int[] arr = readArr(stream.readLine(), 2);\n                solve(arr[1], stream.readLine());\n\n            }\n        }\n    }\n\n    private static void solve(int k, String line) {\n        int prev = 0, sum = 0, curl = 0, firstl = 0;\n        List<Integer> l2 = new ArrayList<>();\n        boolean hasW = false;\n\n        for (char c : line.toCharArray()) {\n            if (c == 'L') {\n                curl++;\n                prev = 0;\n                continue;\n            }\n\n            sum += prev + 1;\n            if (curl != 0) {\n                if (hasW) l2.add(curl);\n                else firstl = curl;\n            }\n\n            hasW = true;\n            curl = 0;\n            prev = 1;\n        }\n\n        Collections.sort(l2);\n        for (int i = 0; i < l2.size() && k > 0; i++) {\n            if (k >= l2.get(i)) {\n                int v = l2.get(i);\n                sum += v*2 + 1;\n                k -= v;\n            } else {\n                int v = k;\n                sum += v*2;\n                k = 0;\n            }\n        }\n\n        int vv = Math.min(k, curl);\n        k -= vv;\n        if (vv > 0) sum += hasW ? 2*vv : ((vv - 1)*2 + 1);\n\n        vv = Math.min(k, firstl);\n        k -= vv;\n        if (vv > 0) sum += 2*vv;\n\n        System.out.println(sum);\n    }\n\n    private static int[] readArr(String line, int len) {\n        int[] res = new int[len];\n        int last = 0, pos = 0, min = 1;\n\n        for (char c : line.toCharArray()) {\n            if (c == ' ') {\n                res[pos++] = min*last;\n                last = 0;\n                min = 1;\n            } else if (c == '-') {\n                min = -1;\n            } else {\n                last = last*10 + c - '0';\n            }\n        }\n\n        res[pos] = min*last;\n        return res;\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "def solve():\n    n,k=map(int,input().split())\n    K=k\n    s=list(input())\n    if s.count('W')+k>n:\n        print(2*n-1)\n        return\n    if s.count('W')==0:\n        print(min(k,n)*2-1 if k!=0 else 0)\n        return\n    arr=[]\n    streak=0\n    i=0\n    while i<n:\n        j=i\n        while(j<n and s[j]==s[i]):\n            j+=1\n        if s[i]=='W':\n            streak+=1\n        else:\n            if 0<i and j<n:\n                arr.append(j-i)\n        i=j\n    arr.sort()\n    for c in arr:\n        if c>k:\n            break\n        streak-=1\n        k-=c\n    print(2*(K+s.count('W'))-streak)\n    return\n\nt=int(input())\n\nfor _ in range(t):\n    solve()"
        },
        {
            "language": 4,
            "solution": "// Don't place your source in a package\nimport java.util.*;\nimport java.lang.*;\nimport java.io.*;\nimport java.math.*; \n \n /*\n \n 6666666666666\t\t\t 6666666666666                     \n 6\t\t\t\t\t\t 6  \t\t\t\t\t\t\t\t\t\t\t   \t\t\t\n 6\t\t\t\t\t\t 6                                      \n 6\t\t\t\t\t\t 6                                      \n 6\t\t\t\t\t\t 6                                       \n 6                       6                                                 \n 6666666666666           6666666666666                     \n 6\t\t     6           6\t\t     6\n 6\t\t\t 6\t         6\t\t\t 6 \n 6\t\t\t 6           6\t\t\t 6\n 6\t\t     6\t         6\t\t     6\t\n 6666666666666           6666666666666\n \n\n */\n \n \n \n \n \n// Please name your class Main\npublic class Main {\n\t\n\t//static StreamTokenizer in = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));\n \n    /*static int read() throws IOException {\n        in.nextToken();\n        return (int) in.nval;\n    }\n    static String readString() throws IOException {\n        in.nextToken();\n        return in.sval;\n\t}*/\n\t\n\t\n\tstatic Scanner in = new Scanner(System.in);\n\t\n\tpublic static void main (String[] args) throws java.lang.Exception {\n\t    \n\t\t//InputReader in = new InputReader(System.in);\n\t\tPrintWriter out = new PrintWriter(System.out);\n\t\t\n \n\t\tint T=Int();\n\t\t\n\t\tfor(int t=0;t<T;t++){\n\t\t\tint N=Int();\n\t\t\tint k=Int();\n\t\t\tString s=Str();\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tSolution sol=new Solution();\n\t\t\tsol.solution(s,k);\n\t\t}\n \n\t\tout.flush();\n\t}\n \n\tpublic static int Int(){\n\t\treturn in.nextInt();\n\t}\n\tpublic static String Str(){\n\t\treturn in.next();\n\t}\n}\n \nclass Solution{\n\t//constant variable\n\tfinal int MAX=Integer.MAX_VALUE;\n\tfinal int MIN=Integer.MIN_VALUE;\n\t//Set<Integer>adjecent[];\n\t//////////////////////////////\n \n\t\n\t\n\tpublic void solution(String s,int k){\n\t\tint res=0;\n\t\tPriorityQueue<Integer> pq=new PriorityQueue<>();\n\t\tList<Integer>list=new ArrayList<>();\n\t\tfor(int i=0;i<s.length();i++){\n\t\t\tchar c=s.charAt(i);\n\t\t\tif(c=='W'){\n\t\t\t\tif(i==0)res++;\n\t\t\t\telse{\n\t\t\t\t\tif(s.charAt(i-1)=='W')res+=2;\n\t\t\t\t\telse res++;\n\t\t\t\t}\n\t\t\t\tlist.add(i);\n\t\t\t}\n\t\t}\n\t\t\n\t\tif(res==0){\n\t\t\tint fill=Math.min(s.length(),k);\n\t\t\tres=fill*2-1;\n\t\t\tmsg(Math.max(res,0)+\"\");\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t//msg(res+\"\");\n\t\t\n\t\tfor(int i=1;i<list.size();i++){\n\t\t\tif(list.get(i)-list.get(i-1)>1){\n\t\t\t\tint gap=list.get(i)-list.get(i-1)-1;\n\t\t\t\tpq.add(gap);\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\twhile(pq.size()>0&&k>0){\n\t\t\tint gap=pq.poll();\n\t\t\tif(k>=gap){\n\t\t\t\tk-=gap;\n\t\t\t\tres+=(gap*2+1);\n\t\t\t}else{\n\t\t\t\tres+=(k*2);\n\t\t\t\tk=0;\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\tif(k>0){\n\t\t\tint first=list.get(0)-0;\n\t\t\t//msg(\"first  \"+first);\n\t\t\tif(k>=first){\n\t\t\t\tres+=(first*2);\n\t\t\t\tk-=first;\n\t\t\t}else{\n\t\t\t\tres+=(k*2);\n\t\t\t\tk=0;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif(k>0){\n\t\t\tint last=(s.length()-1)-list.get(list.size()-1);\n\t\t\t//msg(\"last  \"+last);\n\t\t\tif(k>=last){\n\t\t\t\tres+=(last*2);\n\t\t\t\tk-=last;\n\t\t\t}else{\n\t\t\t\tres+=(k*2);\n\t\t\t\tk=0;\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\tmsg(res+\"\");\n\t\t\n\t}\n\t\n\n\n\t\n\t\n\t//  1001\n\t\n\t// 10010\n\t//100100\n \n\t\t\n\t\n \n\t\n\t\n \n\t\n\t\n\t\n \n\t\n\tpublic void swap(int A[],int l,int r){\n\t\tint t=A[l];\n\t\tA[l]=A[r];\n\t\tA[r]=t;\n\t}\n\t\n\t\n\tpublic long C(long fact[],int i,int j){ // C(20,3)=20!/(17!*3!)\n\t\t// take   a/b     where a=20!  b=17!*3!\n\t\tif(j>i)return 0;\n\t\tif(j==0)return 1;\n\t\tlong mod=998244353;\n\t\tlong a=fact[i];\n\t\tlong b=((fact[i-j]%mod)*(fact[j]%mod))%mod;\n\t\tBigInteger B= BigInteger.valueOf(b);\n\t\tlong binverse=B.modInverse(BigInteger.valueOf(mod)).longValue();\n\t\treturn ((a)*(binverse%mod))%mod;\n\t}\n\t\n\t \n\t\n\t//map operation\n\tpublic void put(Map<Integer,Integer>map,int i){\n\t\tif(!map.containsKey(i))map.put(i,0);\n\t\tmap.put(i,map.get(i)+1);\n\t}\n\t\n\tpublic void delete(Map<Integer,Integer>map,int i){\n\t\tmap.put(i,map.get(i)-1);\n\t\tif(map.get(i)==0)map.remove(i);\n\t}\n \n \n \n \n \n\t\n \n \n\t/*public void tarjan(int p,int r){\n\t\tif(cut)return;\n\t\tList<Integer>childs=adjecent[r];\n\t\tdis[r]=low[r]=time;\n\t\ttime++;\n\t\t\n\t\t//core for tarjan\n\t\tint son=0;\n\t\tfor(int c:childs){\n\t\t\tif(ban==c||c==p)continue;\n\t\t\tif(dis[c]==-1){\n\t\t\t\tson++;\n\t\t\t\ttarjan(r,c);\n\t\t\t\tlow[r]=Math.min(low[r],low[c]);\n\t\t\t\tif((r==root&&son>1)||(low[c]>=dis[r]&&r!=root)){\n\t\t\t\t\tcut=true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tif(c!=p){\n\t\t\t\t\tlow[r]=Math.min(low[r],dis[c]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t}*/\n\t\n\t\n \n\t\n\t//helper function I would use\n\tpublic void remove(Map<Integer,Integer>map,int i){\n\t\tmap.put(i,map.get(i)-1);\n\t\tif(map.get(i)==0)map.remove(i);\n\t}\n\t\n\t\n\t\n\tpublic void ascii(String s){\n\t\tfor(char c:s.toCharArray()){\n\t\t\tSystem.out.print((c-'a')+\" \");\n\t\t}\n\t\tmsg(\"\");\n\t}\n\t\n\tpublic int flip(int i){\n\t\tif(i==0)return 1;\n\t\telse return 0;\n\t}\n\t\n\tpublic boolean[] primes(int n){\n\t\tboolean A[]=new boolean[n+1];\n\t\tfor(int i=2;i<=n;i++){\n\t\t\tif(A[i]==false){\n\t\t\t\tfor(int j=i+i;j<=n;j+=i){\n\t\t\t\t\tA[j]=true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn A;\n\t}\n\t\n\tpublic void msg(String s){\n\t\tSystem.out.println(s);\n\t}\n\t\n\tpublic void msg1(String s){\n\t\tSystem.out.print(s);\n\t}\n\t\n\tpublic int[] kmpPre(String p){\n\t\tint pre[]=new int[p.length()];\n\t\tint l=0,r=1;\n\t\twhile(r<p.length()){\n\t\t\tif(p.charAt(l)==p.charAt(r)){\n\t\t\t\tpre[r]=l+1;\n\t\t\t\tl++;r++;\n\t\t\t}else{\n\t\t\t\tif(l==0)r++;\n\t\t\t\telse l=pre[l-1];\n\t\t\t}\n\t\t}\n\t\treturn pre;\n\t}\n\t\n\tpublic boolean isP(String s){\n\t\tint l=0,r=s.length()-1;\n\t\twhile(l<r){\n\t\t\tif(s.charAt(l)!=s.charAt(r))return false;\n\t\t\tl++;r--;\n\t\t}\n\t\treturn true;\n\t}\n\t\n\tpublic int find(int nums[],int x){//union find => find method\n\t\tif(nums[x]==x)return x;\n\t\tint root=find(nums,nums[x]);\n\t\tnums[x]=root;\n\t\treturn root;\n\t}\n\t\n \n\t\n\tpublic int get(int A[],int i){\n\t\tif(i<0||i>=A.length)return 0;\n\t\treturn A[i];\n\t}\n\tpublic int[] copy1(int A[]){\n\t\tint a[]=new int[A.length];\n\t\tfor(int i=0;i<a.length;i++)a[i]=A[i];\n\t\treturn a;\n\t}\n\t\n\t\n\tpublic void print1(int A[]){\n\t\tfor(long i:A)System.out.print(i+\" \");\n\t\tSystem.out.println();\n\t}\n\tpublic void print2(long A[][]){\n\t\tfor(int i=0;i<A.length;i++){\n\t\t\tfor(int j=0;j<A[0].length;j++){\n\t\t\t\tSystem.out.print(A[i][j]+\" \");\n\t\t\t}System.out.println();\n\t\t}\n\t}\n\t\n\tpublic int min(int a,int b){\n\t\treturn Math.min(a,b);\n\t}\n\t\n\t\n\tpublic int[][] matrixdp(int[][] grid) {\n        if(grid.length==0)return new int[][]{};\n        int res[][]=new int[grid.length][grid[0].length];\n        for(int i=0;i<grid.length;i++){\n            for(int j=0;j<grid[0].length;j++){\n                res[i][j]=grid[i][j]+get(res,i-1,j)+get(res,i,j-1)-get(res,i-1,j-1);\n            }\n        }\n        return res;\n    }\n    \n    public int get(int grid[][],int i,int j){\n        if(i<0||j<0||i>=grid.length||j>=grid[0].length)return 0;\n        return grid[i][j];\n    }\n\t\n\tpublic int[] suffixArray(String s){\n\t\tint n=s.length();\n\t\tSuffix A[]=new Suffix[n];\n\t\t\n\t\tfor(int i=0;i<n;i++){\n\t\t\tA[i]=new Suffix(i,s.charAt(i)-'a',0);\n\t\t}\n\t\t\n\t\tfor(int i=0;i<n;i++){\n\t\t\tif(i==n-1){\n\t\t\t\tA[i].next=-1;\n\t\t\t}else{\n\t\t\t\tA[i].next=A[i+1].rank;\n\t\t\t}\n\t\t}\n\t\tArrays.sort(A);\n\t\t\n\t\tfor(int len=4;len<A.length*2;len<<=1){\n\t\t\tint in[]=new int[A.length];\n\t\t\tint rank=0;\n\t\t\tint pre=A[0].rank;\n\t\t\tA[0].rank=rank;\n\t\t\tin[A[0].index]=0;\n\t\t\tfor(int i=1;i<A.length;i++){//rank for the first two letter\n\t\t\t\tif(A[i].rank==pre&&A[i].next==A[i-1].next){\n\t\t\t\t\tpre=A[i].rank;\n\t\t\t\t\tA[i].rank=rank;\n\t\t\t\t}else{\n\t\t\t\t\tpre=A[i].rank;\n\t\t\t\t\tA[i].rank=++rank;\n\t\t\t\t}\n\t\t\t\tin[A[i].index]=i;\n\t\t\t}\n\t\t\t\n\t\t\tfor(int i=0;i<A.length;i++){\n\t\t\t\tint next=A[i].index+len/2;\n\t\t\t\tif(next>=A.length){\n\t\t\t\t\tA[i].next=-1;\n\t\t\t\t}else{\n\t\t\t\t\tA[i].next=A[in[next]].rank;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\tArrays.sort(A);\n\t\t}\n\t\t\n\t\t\n\t\tint su[]=new int[A.length];\n\t\tfor(int i=0;i<su.length;i++){\n\t\t\tsu[i]=A[i].index;\n\t\t}\n\t\treturn su;\n\t}\n\t\n}\n \n//suffix array Struct\nclass Suffix implements Comparable<Suffix>{\n\tint index;\n\tint rank;\n\tint next;\n\tpublic Suffix(int i,int rank,int next){\n\t\tthis.index=i;\n\t\tthis.rank=rank;\n\t\tthis.next=next;\n\t}\n\t\n\t@Override\n\tpublic int compareTo(Suffix other) {\n\t\tif(this.rank==other.rank){\n\t\t\treturn this.next-other.next;\n\t\t}\n\t\treturn this.rank-other.rank;\n\t}\n\t\n\tpublic String toString(){\n\t\treturn this.index+\"   \"+this.rank+\"   \"+this.next+\"  \";\n\t}\n}\n \n \n \nclass Wrapper implements Comparable<Wrapper>{\n\tint spf;int cnt;\n\tpublic Wrapper(int spf,int cnt){\n\t\tthis.spf=spf;\n\t\tthis.cnt=cnt;\n\t}\n\t\t\n\t@Override\n\tpublic int compareTo(Wrapper other) {\n\t\treturn this.spf-other.spf;\n\t}\n}\n \n \n \n    class Node{//what the range would be for that particular node\n\t\tboolean state=false;\n        int l=0,r=0;\n\t\tint ll=0,rr=0;\n        public Node(boolean state){\n            this.state=state;\n        }\n    }\n\t\n\t\n\t\n\t\n\tclass Seg1{\n\t\t\tint A[];\n\t\t\tpublic Seg1(int A[]){\n\t\t\t\tthis.A=A;\n\t\t\t}\n\t\t\t\n\t\t\tpublic void update(int left,int right,int val,int s,int e,int id){\n\t\t\t\tif(left<0||right<0||left>right)return;\n\t\t\t\tif(left==s&&right==e){\n\t\t\t\t\t\n\t\t\t\t\tA[id]+=val;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tint mid=s+(e-s)/2; //[s,mid] [mid+1,e]\n\t\t\t\t\n\t\t\t\tif(left>=mid+1){\n\t\t\t\t\tupdate(left,right,val,mid+1,e,id*2+2);\n\t\t\t\t}else if(right<=mid){\n\t\t\t\t\tupdate(left,right,val,s,mid,id*2+1);\n\t\t\t\t}else{\n\t\t\t\t\tupdate(left,mid,val,s,mid,id*2+1);\n\t\t\t\t\tupdate(mid+1,right,val,mid+1,e,id*2+2);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tpublic int query(int i,int add,int s,int e,int id){\n\t\t\t\t\n\t\t\t\tif(s==e&&i==s){\n\t\t\t\t\treturn A[id]+add;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tint mid=s+(e-s)/2; //[s,mid] [mid+1,e]\n\t\t\t\t\n\t\t\t\tif(i>=mid+1){\n\t\t\t\t\treturn query(i,A[id]+add,mid+1,e,id*2+2);\n\t\t\t\t}else{\n\t\t\t\t\treturn query(i,A[id]+add,s,mid,id*2+1);\n\t\t\t\t}\n\t\t\t}\n\t}\n \n \n\t class MaxFlow{\n\t\t\n \n\t\t  public static List<Edge>[] createGraph(int nodes) {\n\t\t\tList<Edge>[] graph = new List[nodes];\n\t\t\tfor (int i = 0; i < nodes; i++)\n\t\t\t  graph[i] = new ArrayList<>();\n\t\t\treturn graph;\n\t\t  }\n \n\t\t  public static void addEdge(List<Edge>[] graph, int s, int t, int cap) {\n\t\t\tgraph[s].add(new Edge(t, graph[t].size(), cap));\n\t\t\tgraph[t].add(new Edge(s, graph[s].size() - 1, 0));\n\t\t  }\n \n\t\t  static boolean dinicBfs(List<Edge>[] graph, int src, int dest, int[] dist) {\n\t\t\tArrays.fill(dist, -1);\n\t\t\tdist[src] = 0;\n\t\t\tint[] Q = new int[graph.length];\n\t\t\tint sizeQ = 0;\n\t\t\tQ[sizeQ++] = src;\n\t\t\tfor (int i = 0; i < sizeQ; i++) {\n\t\t\t  int u = Q[i];\n\t\t\t  for (Edge e : graph[u]) {\n\t\t\t\tif (dist[e.t] < 0 && e.f < e.cap) {\n\t\t\t\t  dist[e.t] = dist[u] + 1;\n\t\t\t\t  Q[sizeQ++] = e.t;\n\t\t\t\t}\n\t\t\t  }\n\t\t\t}\n\t\t\treturn dist[dest] >= 0;\n\t\t  }\n \n\t\t  static int dinicDfs(List<Edge>[] graph, int[] ptr, int[] dist, int dest, int u, int f) {\n\t\t\tif (u == dest)\n\t\t\t  return f;\n\t\t\tfor (; ptr[u] < graph[u].size(); ++ptr[u]) {\n\t\t\t  Edge e = graph[u].get(ptr[u]);\n\t\t\t  if (dist[e.t] == dist[u] + 1 && e.f < e.cap) {\n\t\t\t\tint df = dinicDfs(graph, ptr, dist, dest, e.t, Math.min(f, e.cap - e.f));\n\t\t\t\tif (df > 0) {\n\t\t\t\t  e.f += df;\n\t\t\t\t  graph[e.t].get(e.rev).f -= df;\n\t\t\t\t  return df;\n\t\t\t\t}\n\t\t\t  }\n\t\t\t}\n\t\t\treturn 0;\n\t\t  }\n \n\t\t  public static int maxFlow(List<Edge>[] graph, int src, int dest) {\n\t\t\tint flow = 0;\n\t\t\tint[] dist = new int[graph.length];\n\t\t\twhile (dinicBfs(graph, src, dest, dist)) {\n\t\t\t  int[] ptr = new int[graph.length];\n\t\t\t  while (true) {\n\t\t\t\tint df = dinicDfs(graph, ptr, dist, dest, src, Integer.MAX_VALUE);\n\t\t\t\tif (df == 0)\n\t\t\t\t  break;\n\t\t\t\tflow += df;\n\t\t\t  }\n\t\t\t}\n\t\t\treturn flow;\n\t\t  }\n\t\t \n\t }\n\t \n\t \t class Edge {\n\t\t\tint t, rev, cap, f;\n \n\t\t\tpublic Edge(int t, int rev, int cap) {\n\t\t\t  this.t = t;\n\t\t\t  this.rev = rev;\n\t\t\t  this.cap = cap;\n\t\t\t}\n\t\t  }"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid test() {\n  int n, k;\n  cin >> n >> k;\n  string s;\n  cin >> s;\n  vector<int> gaps;\n  int gap = 0;\n  char prev = s[0];\n  bool w = false;\n  int ans = 0;\n  int start = 0;\n  if (prev == 'W') {\n    w = true;\n    ans++;\n    start = 0;\n  } else\n    start++;\n  for (int i = 1; i < n; i++) {\n    char cur = s[i];\n    if (!w) {\n      if (cur == 'W') {\n        w = true;\n      } else\n        start++;\n    } else {\n      if (cur == 'W') {\n        if (gap != 0) gaps.push_back(gap);\n        gap = 0;\n      } else {\n        gap++;\n      }\n    }\n    if (cur == 'W') {\n      if (prev == cur)\n        ans += 2;\n      else\n        ans++;\n    }\n    prev = cur;\n  }\n  if (w == false) {\n    if (k == 0) {\n      cout << 0 << endl;\n      return;\n    }\n    int res = 2 * min(k, n) - 1;\n    cout << res << endl;\n    return;\n  }\n  int end = gap;\n  sort(gaps.begin(), gaps.end());\n  for (int i = 0; i < gaps.size(); i++) {\n    int g = gaps[i];\n    if (g <= k) {\n      k -= g;\n      ans += 2 * g + 1;\n    } else {\n      ans += 2 * k;\n      k = 0;\n      break;\n    }\n  }\n  if (k > 0) {\n    int ori = k;\n    k -= end;\n    k = max(0, k);\n    ans += 2 * (ori - k);\n    if (k > 0) ans += 2 * min(start, k);\n  }\n  cout << ans << endl;\n}\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    test();\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "nums = int(input().strip())\nfor  _ in range(nums):\n    n,k = map(int,input().strip().split())\n    s = input().strip()\n    cur_score = 0\n    l_part = []\n    cur_num=0\n    l_count =w_count= 0\n    for i,v in enumerate(s):\n        if v==\"W\":\n            w_count+=1\n            if i>0 and s[i-1]==\"W\":\n                cur_score+=2\n                continue\n            elif i>0 and s[i-1]==\"L\":\n                l_part.append(cur_num)\n                cur_num=0\n            cur_score+=1\n        else:\n            cur_num+=1\n            l_count+=1\n    if cur_num:\n        l_part.append(cur_num)\n    if k>=l_count:\n        print(2*len(s)-1)\n    else:\n        if l_part:\n            start,end = 0,len(l_part)\n            if s[0]==\"L\":\n                start+=1\n            if s[-1]==\"L\":\n                end-=1\n            arr = sorted(l_part[start:end])\n            for i in range(len(arr)):\n                if k>=arr[i]:\n                    cur_score+=2*arr[i]+1\n                    k-=arr[i]\n                else:\n                    break\n            res = cur_score+k*2\n            if w_count==0:\n                res-=1\n            print(max(res,0))\n        else:\n            print(cur_score)"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor tt in range(t):\n    n, k = map(int, input().split())\n    s = input()\n    pre = False\n    cur = 0\n    mid = []\n    for i, c in enumerate(s):\n        if c == 'W':\n            if pre:\n                if cur:\n                    mid.append(cur)\n            else:\n                begin = cur\n            pre = True\n            cur = 0\n        else:\n            cur += 1\n    end = cur\n    # print(mid, begin, end)\n    if end == n:\n        ans = k * 2 - 1 if k else 0\n    else:\n        mid.sort()\n        ans = 0\n        for m in mid:\n            if not k:\n                break\n            if k < m:\n                ans += 2 * k\n                k = 0\n            else:\n                ans += 2 * m + 1\n                k -= m\n        # print('remain k:', k)\n        end = min(end, k)\n        ans += end * 2\n        k -= end\n        begin = min(begin, k)\n        ans += begin * 2\n        k -= begin\n        pre = False\n        # print('added: ', ans)\n        for i, c in enumerate(s):\n            if c == 'W':\n                ans += 2 if pre else 1\n                pre = True\n            else:\n                pre = False\n    print(ans)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long mod = 1e9 + 7;\nint dx1[4] = {-1, 0, 1, 0};\nint dy1[4] = {0, 1, 0, -1};\nint intialAnswer(string s) {\n  int ans = 0, n = s.length();\n  for (int i = 0; i < n; i++) {\n    if (s[i] == 'W') {\n      ans++;\n      i++;\n      while (i < n && s[i] == 'W') i++, ans += 2;\n    }\n  }\n  return ans;\n}\nvoid solve() {\n  int n, k;\n  cin >> n >> k;\n  string s;\n  cin >> s;\n  if (n == 1) {\n    if (s[0] == 'W' || k > 0)\n      cout << \"1\";\n    else\n      cout << \"0\";\n    return;\n  }\n  int lastW = s.find_last_of('W');\n  int firstW = s.find_first_of('W');\n  int startRemaining, lastRemaining;\n  if (lastW == -1) {\n    int mn = min(n, k);\n    int ans = 0;\n    if (mn > 0) {\n      ans = 1 + 2 * (mn - 1);\n    }\n    cout << ans;\n    return;\n  } else {\n    startRemaining = firstW;\n    lastRemaining = n - 1 - lastW;\n  }\n  vector<int> lengths;\n  for (int i = firstW + 1; i <= lastW; i++) {\n    int l = 0;\n    while (i < lastW && s[i] == 'L') i++, l++;\n    if (l != 0) lengths.push_back(l);\n  }\n  sort(lengths.begin(), lengths.end());\n  int ans = intialAnswer(s);\n  for (int x : lengths) {\n    if (x <= k) {\n      ans = ans + 2 * x + 1;\n      k -= x;\n    } else {\n      ans = ans + 2 * k;\n      k = 0;\n    }\n    if (k == 0) break;\n  }\n  if (k > 0) {\n    ans = ans + 2 * min(lastRemaining, k);\n    k -= min(lastRemaining, k);\n    if (k > 0) {\n      ans = ans + 2 * (min(startRemaining, k));\n    }\n  }\n  cout << ans;\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  int t = 1;\n  cin >> t;\n  while (t--) {\n    solve();\n    cout << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "def countStr(string, str_len):\n    l_len, l_sum = 0, 0\n    sw_idx, ew_idx = -1, -1\n    l_count = {}\n    l_flag, sw_flag = False, False\n    for i in range(str_len):\n        s = string[i]\n        if (sw_flag and s == 'L'):\n            l_flag = True\n            l_len += 1\n        elif (s == 'W'):\n            if l_flag:\n                l_sum += l_len\n                l_count[l_len] = l_count.get(l_len, 0) + 1\n                l_len = 0\n                l_flag = False\n            if not sw_flag:\n                sw_flag = True\n                sw_idx = i\n            ew_idx = i\n    return l_sum, l_count, sw_idx, ew_idx\n\n\ndef reslove(wl_str, n, k):\n    l_sum, l_count, sw_idx, ew_idx = countStr(wl_str, n)\n    L_left_len = sw_idx\n    L_right_len = n - ew_idx - 1\n    L_all_len = L_left_len + l_sum + L_right_len\n    if sw_idx < 0:\n        if k == 0 or n == 0:\n            return 0\n        w = k if n > k else n\n        return 2 * w - 1\n    if L_all_len <= k:\n        return 2 * n - 1\n    if l_sum < k:\n        w = n - L_all_len + k\n        return 2 * w - 1\n\n    lens = list(l_count.keys())\n    lens.sort()\n    w = n - L_all_len\n    bp = sum(l_count.values()) + 1\n\n    for len in lens:\n        len_ct = l_count[len]\n        l_ct = len * len_ct\n        if l_ct <= k:\n            bp -= len_ct\n            w += l_ct\n            k -= l_ct\n        else:\n            filled = k // len\n            bp -= filled\n            w += k\n            break\n    return w * 2 - bp\n\n\nt = int(input())\nfor i in range(t):\n    n, k = map(int, input().split())\n    wl_str = input()\n    print(reslove(wl_str, n, k))\n\n\t  \t\t\t\t\t\t\t \t  \t    \t \t \t\t  \t"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class ques2\n{\n\tpublic static void main(String[] args)throws Exception{ new ques2().run();} \n\tlong mod=1000000000+7;\n\t\n\tvoid solve() throws Exception\n\t{\n\t\tfor(int ii=ni();ii>0;ii--)\n\t\t{\n\t\t\tint N=ni();\n\t\t\tint K=ni();\n\t\t\tString s=ns();\n\t\t\tArrayList<Integer> al = new ArrayList<>();\n\t\t\tfor(int i=0;i<s.length();i++)\n\t\t\t{\n\t\t\t\tchar ch=s.charAt(i);\n\t\t\t\tif(ch=='W')\n\t\t\t\tal.add(i);\n\t\t\t}\n\t\t\tif(K>=N-al.size())\n\t\t\t    out.println(Math.max(0,(2*N)-1));\n\t\t\telse if(al.size()==0)\n\t\t\t\t  out.println(Math.max(0,(2*K)-1));\n\t\t\telse if(al.size()==1)\n\t\t\t{\n\t\t\t\tint ans=1;\n\t\t\t\tans+=(K*2);\n\t\t\t\tout.println(ans);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tint d[]=new int[al.size()-1];\n\t\t\t\tfor(int i=0;i<al.size()-1;i++)\n\t\t\t\t\td[i]=al.get(i+1)-al.get(i)-1;\n\t\t\t\tArrays.sort(d);\n\t\t\t\t int ar[]=new int[N];\n\t\t\t\t int in=0; ar[in]=1;\n\t\t\t\t for(int i=0;i<d.length;i++)\n\t\t\t\t {\n\t\t\t\t\t for(int j=1;j<=d[i];j++)\n\t\t\t\t\t\t in++;\n\t\t\t\t\t ar[++in]=1;\n\t\t\t\t }\n\t\t\t\t for(int i=0;i<N;i++)\n\t\t\t\t {\n\t\t\t\t\t if(K<=0)break;\n\t\t\t\t\t if(ar[i]==0)\n\t\t\t\t\t\t {ar[i]=1;K--;}\n\t\t\t\t }\n\t\t\t\t int ans=0;\n\t\t\t\t for(int i=0;i<N;i++)\n\t\t\t\t {\n\t\t\t\t\t if(i==0)\n\t\t\t\t\t\t {if(ar[i]==1)ans++;}\n\t\t\t\t\t else\n\t\t\t\t\t\t  {\n\t\t\t\t\t\t \tif(ar[i]==1&&ar[i-1]==1)ans+=2;\n\t\t\t\t\t\t \tif(ar[i]==1&&ar[i-1]==0)ans+=1;\n\t\t\t\t\t\t  }\n\t\t\t\t }\n\t\t\t\t out.println(ans);\n\t\t\t}\n\t\t}\n\t}\n\t\n\t/*IMPLEMENTATION BY AMAN KOTIYAL, FAST INPUT OUTPUT & METHODS BELOW*/\n\t\n\tprivate byte[] buf=new byte[1024];\n\tprivate int index;\n\tprivate InputStream in;\n\tprivate int total;\n\tprivate SpaceCharFilter filter;\n\tPrintWriter out;\n\t\n\tint gcd(int a, int b) \n\t{ \n\t\tif (a == 0) \n\t\t\treturn b; \n\t\treturn gcd(b%a, a); \n\t} \n\tlong gcd(long a, long b) \n\t{ \n\t\tif (a == 0) \n\t\t\treturn b; \n\t\treturn gcd(b%a, a); \n\t}\n\t/* for (1/a)%mod = ( a^(mod-2) )%mod  ----> use expo to calc -->(a^(mod-2)) */\n\tlong expo(long p,long q)  /*  (p^q)%mod   */\n\t{\n\t\tlong z = 1;\n\t\twhile (q>0) {\n\t\t\tif (q%2 == 1) {\n\t\t\t\tz = (z * p)%mod;\n\t\t\t}\n\t\t\tp = (p*p)%mod;\n\t\t\tq >>= 1;\n\t\t}\n\t\treturn z;\n\t}\n\tvoid run()throws Exception\n\t{\n\t\tin=System.in; out = new PrintWriter(System.out);\n\t\tsolve();\n\t\tout.flush();\n\t}\n\tprivate int scan()throws IOException\n\t{\n\t\tif(total<0)\n\t\t\tthrow new InputMismatchException();\n\t\tif(index>=total)\n\t\t{\n\t\t\tindex=0;\n\t\t\ttotal=in.read(buf);\n\t\t\tif(total<=0)\n\t\t\t\treturn -1;\n\t\t}\n\t\treturn buf[index++];\n\t}\n\tprivate int ni() throws IOException \n\t{\n\t\tint c = scan();\n\t\twhile (isSpaceChar(c))\n\t\t\tc = scan();\n\t\tint sgn = 1;\n\t\tif (c == '-') {\n\t\t\tsgn = -1;\n\t\t\tc = scan();\n\t\t}\n\t\tint res = 0;\n\t\tdo {\n\t\t\tif (c < '0' || c > '9')\n\t\t\t\tthrow new InputMismatchException();\n\t\t\tres *= 10;\n\t\t\tres += c - '0';\n\t\t\tc = scan();\n\t\t} while (!isSpaceChar(c));\n\t\treturn res * sgn;\n\t}\n\tprivate long nl() throws IOException \n\t{\n\t\tlong num = 0;\n\t\tint b;\n\t\tboolean minus = false;\n\t\twhile ((b = scan()) != -1 && !((b >= '0' && b <= '9') || b == '-'))\n\t\t\t;\n\t\tif (b == '-') {\n\t\t\tminus = true;\n\t\t\tb = scan();\n\t\t}\n\t\t\n\t\twhile (true) {\n\t\t\tif (b >= '0' && b <= '9') {\n\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t} else {\n\t\t\t\treturn minus ? -num : num;\n\t\t\t}\n\t\t\tb = scan();\n\t\t}\n\t}\n\tprivate double nd() throws IOException{\n\t\treturn Double.parseDouble(ns());\n\t}\n\tprivate String ns() throws IOException {\n\t\tint c = scan();\n\t\twhile (isSpaceChar(c))\n\t\t\tc = scan();\n\t\tStringBuilder res = new StringBuilder();\n\t\tdo {\n\t\t\tif (Character.isValidCodePoint(c))\n\t\t\t\tres.appendCodePoint(c);\n\t\t\tc = scan();\n\t\t} while (!isSpaceChar(c));\n\t\treturn res.toString();\n\t}\n\tprivate String nss() throws IOException\n\t{\n\t\tBufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n\t\treturn br.readLine();\n\t}\n\tprivate char nc() throws IOException \n\t{\n\t\tint c = scan();\n\t\twhile (isSpaceChar(c))\n\t\t\tc = scan();\n\t\treturn (char) c;\n\t}\n\tprivate boolean isWhiteSpace(int n)\n\t{\n\t\tif(n==' '||n=='\\n'||n=='\\r'||n=='\\t'||n==-1)\n\t\t\treturn true;\n\t\treturn false;\n\t}\n\tprivate boolean isSpaceChar(int c) {\n\t\tif (filter != null)\n\t\t\treturn filter.isSpaceChar(c);\n\t\treturn isWhiteSpace(c);\n\t}\n\tprivate interface SpaceCharFilter {\n\t\tpublic boolean isSpaceChar(int ch);\n\t}\n}"
        },
        {
            "language": 3,
            "solution": "import os\nimport sys\nfrom io import BytesIO, IOBase\nimport math\nfrom itertools import permutations\nfrom decimal import *\n\ngetcontext().prec = 25\nMOD = pow(10, 9) + 7\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\n# n, k = map(int, input().split(\" \"))\n# l = list(map(int, input().split(\" \")))\n\nfor _ in range(int(input())):\n    n, k = map(int, input().split(\" \"))\n    l = input()\n    if n == k:\n        print(2 * k - 1)\n    else:\n        t = 0\n        z = []\n        w = L = False\n        le = pre = 0\n        for i in range(n):\n            if l[i] == \"L\":\n                L = True\n                pre += 1\n            else:\n                break\n        start = max(1, pre)\n        if l[0]==\"W\":\n            t+=1\n        for i in range(start, n):\n            if l[i] == \"W\":\n                w=True\n                if le:\n                    z.append(le)\n                    le = 0\n                if l[i - 1] == \"W\":\n                    t += 2\n                else:\n                    t += 1\n            if l[i] == \"L\":\n                L = True\n                le += 1\n        extra = le\n        z.sort()\n        if k == 0 or not L:\n            print(t)\n        elif not extra and not z:\n            if not w:\n                print(2*(min(pre,k)) -1)\n            else:\n                print(2*(min(pre,k))+t)\n        elif not z:\n            t += 2 * (min(pre, k))\n            k = max(0, k - pre)\n            t += 2 * (min(k, extra))\n            print(t)\n        elif z:\n            for i in range(len(z)):\n                if z[i] <= k:\n                    k -= z[i]\n                    t += 2 * z[i] + 1\n                else:\n                    t += 2 * k\n                    k = 0\n                    break\n            if k:\n                t += 2 * (min(pre, k))\n                k = max(0, k - pre)\n                t += 2 * (min(k, extra))\n            print(t)\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.*;\n\npublic class ChessCheater {\n    public static void main(String[] args) throws IOException {\n        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\n        StringBuilder sb = new StringBuilder();\n\n        int cases = Integer.parseInt(reader.readLine());\n\n        String input;\n        int moves;\n        List<Integer> gaps;\n        int currentGap;\n\n        for (int n = 0; n < cases; n++ ) {\n\n            moves = Integer.parseInt(reader.readLine().split(\" \")[1]);\n            input = reader.readLine();\n            gaps = new ArrayList<>();\n            currentGap = 0;\n\n            int first = input.indexOf('W');\n            int last = input.lastIndexOf('W');\n            int endGaps = first + ((input.length() - 1) - last);\n\n            boolean consecutive = false;\n\n            int score = 0;\n\n            if (first == -1) { //no wins\n                int spaces = Math.min(input.length(), moves);\n\n                if (spaces == 0) {\n                    sb.append(0).append('\\n');\n                }\n                else if (spaces == 1) {\n                    sb.append(1).append('\\n');\n                } else {\n                    sb.append(spaces * 2 - 1).append('\\n');\n                }\n            } else {\n                for (int i = first; i < last + 1; i++) {\n\n                    if (consecutive && input.charAt(i) == 'W') {\n                        score += 2;\n                    } else if (input.charAt(i) == 'W') {\n                        consecutive = true;\n                        score++;\n                    }\n\n                    if (input.charAt(i) == 'L') {\n                        currentGap++;\n                        consecutive = false;\n                    } else if (currentGap != 0) {\n                        gaps.add(currentGap);\n                        currentGap = 0;\n                    }\n                }\n\n                if (currentGap != 0) {\n                    gaps.add(currentGap);\n                }\n\n                //Collections.sort(gaps, (a,b) -> Integer.compare(b,a));\n\n                Collections.sort(gaps);\n                for (int i = 0; i < gaps.size() && moves > 0; i++) {\n                    currentGap = gaps.get(i);\n\n                    if (moves >= currentGap) {\n                        score += currentGap * 2 + 1;\n                        moves -= currentGap;\n                    } else {\n                        endGaps += currentGap;\n                    }\n                }\n\n                int spaces = Math.min(moves, endGaps);\n                score += spaces * 2;\n\n                sb.append(score).append('\\n');\n\n\n/*                System.out.println(gaps.toString());\n                System.out.println(\"end spaces: \" + endGaps);\n                //System.out.println(\"score: \" + score);\n                System.out.println(\"moves: \" + moves);*/\n            }\n\n\n\n\n        }\n\n        System.out.println(sb.toString());\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\npublic class EdB {\n\tstatic long num = 998244353;\n\tpublic static void main(String[] args) throws Exception{\n\t\t\n\n\t\t// TODO Auto-generated method stub\n \t\tBufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n \t\tPrintWriter out = new PrintWriter(System.out);\n \t\tint t = Integer.parseInt(bf.readLine());\n \t\tfor(int i = 0;i<t;i++){\n//\t \t\tString input1 = bf.readLine().trim();\n//\t \t\tString input2 = bf.readLine().trim();\n\t \t\tStringTokenizer st = new StringTokenizer(bf.readLine());\n\t \t\tint n = Integer.parseInt(st.nextToken());\n\t \t\tint m = Integer.parseInt(st.nextToken());\n\t \t\tboolean isW = false;\n\t \t\tString input = bf.readLine().trim();\n\t \t\tint totalL = 0;\n\t \t\tfor(int j =0 ;j<n;j++){\n\t \t\t\tif (input.charAt(j) == 'L')\n\t \t\t\t\ttotalL++;\n\t \t\t\telse\n\t \t\t\t\tisW = true;\n\t \t\t\t\n\t \t\t}\n\t \t\tint currtotal = 0;\n\t \t\tchar prev = 'a';\n\t \t\tfor(int j = 0;j<n;j++){\n\t \t\t\tif (input.charAt(j) == 'W' && prev == 'W')\n\t \t\t\t\tcurrtotal+=2;\n\t \t\t\telse if (input.charAt(j) == 'W')\n\t \t\t\t\tcurrtotal+=1;\n\t \t\t\tprev = input.charAt(j);\n\t \t\t}\n\t \t\tint start = 0;\n\t \t\tint end = n-1;\n\t \t\twhile(start < n && input.charAt(start) == 'L')\n\t \t\t\tstart++;\n\t \t\twhile(end >=0 && input.charAt(end) == 'L')\n\t \t\t\tend--;\n\t \t\tPriorityQueue pq = new PriorityQueue<Integer>();\n\t \t\tint numberL = 0;\n\t \t\tfor(int j = start;j<=end;j++){\n\t \t\t\tif (input.charAt(j) == 'L')\n\t \t\t\t\tnumberL++;\n\t \t\t\telse if (numberL != 0){\n\t \t\t\t\tpq.add(numberL);\n\t \t\t\t\tnumberL = 0;\n\t \t\t\t}\n\t \t\t}\n\t \t\t\n\t \t\tint ans = 0;\n\t \t\tlong changes = m;\n\t \t\tint used = 0;\n\t \t\twhile(!pq.isEmpty() && changes-(int)(pq.peek()) >=0){\n\t \t\t\tans+=(2*(int)(pq.peek())+1);\n\t \t\t\tused+=((int)pq.peek());\n\t \t\t\tchanges-=(int)(pq.remove());\n\t \t\t}\n\t \t\tif (changes < totalL-used)\n\t \t\t\tans+=2*changes;\n\t \t\telse{\n\t \t\t\tans+=2*(totalL-used);\n\t \t\t}\n\t \t\tif (isW)\n\t \t\t\tout.println(currtotal+ans);\n\t \t\telse \n\t \t\t\tout.println(Math.max(0,  currtotal+ans-1));\n \t\t}\n \t\t\n \t\t\n \t\tout.println();\n\t \t\t\n \t\tout.close();\n \t\t\n \t\t\n \t\t\n \t}\n}\n \t\n \n//StringJoiner sj = new StringJoiner(\" \"); \n//sj.add(strings)\n//sj.toString() gives string of those stuff w spaces or whatever that sequence is\n\n \t\t\n \t\t\n \t\t\n \t\t\n\t\n\n\n"
        },
        {
            "language": 3,
            "solution": "# region fastio  # from https://codeforces.com/contest/1333/submission/75948789\nimport sys, io, os\n\nBUFSIZE = 8192\n\n\nclass FastIO(io.IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = io.BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(io.IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\ndef print(*args, **kwargs):\n    \"\"\"Prints the values to a stream, or to sys.stdout by default.\"\"\"\n    sep, file = kwargs.pop(\"sep\", \" \"), kwargs.pop(\"file\", sys.stdout)\n    at_start = True\n    for x in args:\n        if not at_start:\n            file.write(sep)\n        file.write(str(x))\n        at_start = False\n    file.write(kwargs.pop(\"end\", \"\\n\"))\n    if kwargs.pop(\"flush\", False):\n        file.flush()\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n#endregion\n\n\nfrom itertools import groupby\nT = int(input())\nfor _ in range(T):\n    N, K = map(int, input().split())\n    S = input()\n    L_lens = []\n    ans = 0\n    for wl, gr in groupby(S):\n        n = len(list(gr))\n        if wl == \"L\":\n            L_lens.append(n)\n        else:\n            ans += n*2-1\n    l_cnt = sum(L_lens)\n    if l_cnt == N:\n        ans = K * 2 - 1\n        if K == 0:\n            ans = 0\n        print(ans)\n        continue\n    k = min(K, l_cnt)\n    if S[0] == \"L\":\n        del L_lens[0]\n    if S[-1] == \"L\":\n        del L_lens[-1]\n    L_lens.sort()\n    ans += k * 2\n    for l_len in L_lens:\n        if k >= l_len:\n            ans += 1\n            k -= l_len\n    print(ans)\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n, k = map(int, input().split())\n    s = input()\n    score = 0\n    tmp = s.count('L')\n    for i in range(1, n):\n        if s[i] == \"W\" and s[i - 1] == \"W\":\n            score += 2\n        elif s[i] == \"W\":\n            score += 1\n    if s[0] == 'W':\n        score += 1\n    if k == 0:\n        print(score)\n        continue\n    res = []\n    idx = s.find('W')\n    count = 0\n    for i in range(idx + 1, n):\n        if s[i] == 'L':\n            count += 1\n        elif (s[i]==\"W\" and count!=0) or (i==n-1 and s[i]==\"L\"):\n            res.append(count)\n            count = 0\n        \n    \n    res.sort()\n    i = 0\n    while k > 0 and i < len(res):\n        if res[i] <= k:\n            k -= res[i]\n            score += 2 * res[i]\n            score += 1\n        else:\n            score += 2 * k\n            k = 0\n        i += 1\n    if 'W' in s:\n        score += 2 * min(k, (tmp - sum(res)))\n    else:\n        if k<=n:\n            score += 2 * k - 1\n        else:\n            score += 2 * n - 1\n    print(score)"
        },
        {
            "language": 3,
            "solution": "def testcase():\n\n    n, k = map(int, input().split())\n    s = list(input())\n\n    ans = 0\n    if s[0] == 'W':\n        ans += 1\n    for i in range(1, n):\n        if s[i] == 'W':\n            ans += 1\n            if s[i - 1] == 'W':\n                ans += 1\n\n    fw = 0\n    while fw < n and s[fw] == 'L':\n        fw += 1\n    lw = n - 1\n    while lw >= 0 and s[lw] == 'L':\n        lw -= 1\n\n    gaps = []\n    gap = 0\n    for i in range(fw, lw + 1):\n        if s[i] == 'L':\n            gap += 1\n        else:\n            if gap != 0:\n                gaps.append(gap)\n                gap = 0\n\n    gaps.sort()\n    for gap in gaps:\n        if k >= gap:\n            ans += 2 * gap + 1\n            k -= gap\n        else:\n            ans += 2 * k\n            k = 0\n            break\n\n    if k > 0 and lw != -1:\n        tl = n - lw - 1\n        ans += 2 * min(k, tl)\n        k = max(0, k - tl)\n    if k > 0:\n        sl = fw\n        ans += 2 * min(k, sl)\n    if fw == n:\n        if k == 0:\n            ans = 0\n        else:\n            ans = 2 * k - 1\n    print(ans)\n\n\n    return\n\nt = int(input())\nfor _ in range(t):\n    testcase()"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.*;\nimport java.io.*;\nimport java.math.BigInteger;\nimport java.text.DecimalFormat; \npublic class Mamo {\n    static long mod=1000000007;\n    static Reader in=new Reader();\n    static List<node >G[];\n\tstatic long a[]=new long[2000001];\n    static StringBuilder Sd=new StringBuilder(),Sl=new StringBuilder();\n    public static void main(String [] args) throws IOException {\n    \t//Dir by MohammedElkady\n    \tint t=in.nextInt();\n    \twhile(t-->0) {\n    int n=in.nextInt(),k=in.nextInt();\n    char[] S=in.s().toCharArray();\n    G=new List[n+1];\n    for (int i = 0; i < G.length; i++) {\n\t\tG[i]=new ArrayList();\n\t}\n    int x=0,xx=n-1;\n    while(x<n&&S[x]=='L') x++;\n    while(xx>=0&&S[xx]=='L') xx--;\n    for(int i=x;i<xx;) {\n    \tif(S[i]=='W') {i++;}\n    \telse {\n    \t\tint size=0,st=i;\n    \t\twhile(i<n&&S[i]=='L') {size++;\n    \t\ti++;\n    \t\t}\n    \t\tnode node=new node(st,i-1);\n    \t\tG[size].add(node);\n    \t\t//out.append(G[size].size()+\" \"+st+\" \"+i+\"\\n\");\n    \t}\n    }\n    for(int i=1;i<n+1&&k>0;i++) {\n    \t\n    \tfor(int u=0;u<G[i].size();u++) {\n    \t\tnode node=G[i].get(u);\n    \t\tint st=node.st,end=node.end;\n    \t\t//out.append(k+\" \"+st+\" \"+end+\"\\n\");\n    \t\tfor(;st<=end&&k>0;st++) {\n    \t\t\tS[st]='W';\n    \t\t\tk--;\n    \t\t}\n    \t\t\n    \t}\n    }\n    if(k>0) {\n    \txx++;\n    \tfor(;xx<n&&k>0;xx++)\n    \t\tif(S[xx]=='L') {k--;S[xx]='W';\t}\n    \tx--;\n    \tfor(;x>=0&&k>0;x--) {\n    \t\tif(S[x]=='L') {k--;S[x]='W';\t}\n    \t}\n    }\n    long ans=0L;\n    for(int i=0;i<n;i++) {\n    \tif(S[i]=='W') {\n    \t\tif(i==0||S[i]!=S[i-1]) {ans++;}\n    \t\telse {ans+=2;}\n    \t}\n    \t\n    }\n    out.append(ans+\"\\n\");\n    \t}\n out.close();\n    }\n    static long ans=0L;\n    static boolean v[];\n    static ArrayList<Integer>res;\n    static  Queue <Integer> pok=new LinkedList();\n    static  Stack <Integer>rem;\n    public static PrintWriter out = new PrintWriter(new BufferedOutputStream(System.out));\n    static long gcd(long g,long x){if(x<1)return g;else return gcd(x,g%x);}  \n    static class Reader \n    { \n        private InputStream mIs;private byte[] buf = new byte[1024];private int curChar,numChars;public Reader() { this(System.in); }public Reader(InputStream is) { mIs = is;} \n        public int read() {if (numChars == -1) throw new InputMismatchException();if (curChar >= numChars) {curChar = 0;try { numChars = mIs.read(buf);} catch (IOException e) { throw new InputMismatchException();}if (numChars <= 0) return -1; }return buf[curChar++];} \n        public String nextLine(){int c = read();while (isSpaceChar(c)) c = read();StringBuilder res = new StringBuilder();do {res.appendCodePoint(c);c = read();}while (!isEndOfLine(c));return res.toString() ;} \n        public String s(){int c = read();while (isSpaceChar(c)) c = read();StringBuilder res = new StringBuilder();do {res.appendCodePoint(c);c = read();}while (!isSpaceChar(c));return res.toString();} \n        public long l(){int c = read();while (isSpaceChar(c)) c = read();int sgn = 1;if (c == '-') { sgn = -1 ; c = read() ; }long res = 0; do{ if (c < '0' || c > '9') throw new InputMismatchException();res *= 10 ; res += c - '0' ; c = read();}while(!isSpaceChar(c));return res * sgn;} \n        public int nextInt(){int c = read() ;while (isSpaceChar(c)) c = read();int sgn = 1;if (c == '-') { sgn = -1 ; c = read() ; }int res = 0;do{if (c < '0' || c > '9') throw new InputMismatchException();res *= 10 ; res += c - '0' ; c = read() ;}while(!isSpaceChar(c));return res * sgn;} \n        public double d() throws IOException {return Double.parseDouble(s()) ;}\n        public boolean isSpaceChar(int c) { return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1; } \n        public boolean isEndOfLine(int c) { return c == '\\n' || c == '\\r' || c == -1; } \n        public int[] arr(int n){int[] ret = new int[n];for (int i = 0; i < n; i++) {ret[i] = nextInt();}return ret;}\n    }\n}\n\n\nclass node {\n\nint st,end;\nnode(int ll,int end){\nst=ll;\nthis.end=end;\n}\n\n}\nclass FastReader\n    {\n        BufferedReader br;\n        StringTokenizer st;\n \n        public FastReader()\n        {\n            br = new BufferedReader(new\n                     InputStreamReader(System.in));\n        }\n \n        String next()\n        {\n            while (st == null || !st.hasMoreElements())\n            {\n                try\n                {\n                    st = new StringTokenizer(br.readLine());\n                }\n                catch (IOException  e)\n                {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n \n        int nextInt()\n        {\n            return Integer.parseInt(next());\n        }\n \n        long nextLong()\n        {\n            return Long.parseLong(next());\n        }\n \n        double nextDouble()\n        {\n            return Double.parseDouble(next());\n        }\n \n        String nextLine()\n        {\n            String str = \"\";\n            try\n            {\n                str = br.readLine();\n            }\n            catch (IOException e)\n            {\n                e.printStackTrace();\n            }\n            return str;\n        }\n}\n \nclass Sorting{\n \n public static long[] bucketSort(long[] array, int bucketCount) {\n \n if (bucketCount <= 0) throw new IllegalArgumentException(\"Invalid bucket count\");\n \n if (array.length <= 1) return array; //trivially sorted\n \n \n \n long high = array[0];\n \n long low = array[0];\n \n for (int i = 1; i < array.length; i++) { //find the range of input elements\n \n if (array[i] > high) high = array[i];\n \n if (array[i] < low) low = array[i];\n \n }\n \n double interval = ((double)(high - low + 1))/bucketCount; //range of one bucket\n \n \n ArrayList<Long> buckets[] = new ArrayList[bucketCount];\n \n for (int i = 0; i < bucketCount; i++) { //initialize buckets\n \n buckets[i] = new ArrayList();\n \n }\n \n \n \n for (int i = 0; i < array.length; i++) { //partition the input array\n \n buckets[(int)((array[i] - low)/interval)].add(array[i]);\n \n }\n \n \n int pointer = 0;\n \n for (int i = 0; i < buckets.length; i++) {\n \n Collections.sort(buckets[i]); //mergeSort\n \n for (int j = 0; j < buckets[i].size(); j++) { //merge the buckets\n \n array[pointer] = buckets[i].get(j);\n \n pointer++;\n \n }\n \n}\n \nreturn array;\n \n}\n}"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor _ in range(t):\n    n,k = list(map(int, input().split()))\n    string = list(input())\n    # eliminate boarder\n    lis = []\n    i = 0\n    j = n-1\n    counter = 0\n    for _i_ in string:\n        if _i_ != 'W':\n            counter+=1\n            i+=1\n        else:\n            break\n    b1 = (counter , 0)\n    #print(b1)\n    counter = 0\n    for _i_ in reversed(string):\n        if _i_ != 'W':\n            counter+=1\n            j-=1\n        else:\n            break\n    b2 = (counter , j+1)\n\n    while i <= j:\n        counter = 0\n        if string[i] == 'L':\n            q = i\n            while string[i] == 'L':\n                counter+=1\n                i+=1\n            lis.append((counter , q))\n        else:\n            i+=1\n    lis.sort()\n    #lis.append(b1)\n    #lis.append(b2)\n    #print(lis)\n    for i in lis:\n        if k<=0:\n            break\n        count = i[0]\n        j = i[1]\n\n        for i in range(j , j+count):\n            string[i] = 'W'\n            k-=1\n            if k <= 0:\n                break\n    c, index = b1\n    for i in range(index + c - 1, index - 1, -1):\n        if k == 0:\n            break\n        else:\n            string[i] = 'W'\n            k-=1\n    c,index = b2\n    for i in range(index, index + c):\n        if k == 0:\n            break\n        else:\n            string[i] = 'W'\n            k -= 1\n\n    prev = 'L'\n    count = 0\n    for i in string:\n        if i == 'W' and prev == 'W':\n            count+=2\n        elif i == 'W':\n            count+=1\n        prev = i\n    print( count)"
        },
        {
            "language": 3,
            "solution": "t = int(input())\nfor _ in range(t):\n    n, k = map(int, input().split())\n    tmp = k\n    s = input()\n    k = max(0, n - s.count('W') - k)\n    l = [0]\n    for i in range(n):\n        if i > 0 and s[i - 1] == s[i] == 'W':\n            continue\n        if s[i] == 'W':\n            l.append(0)\n        else:\n            l[-1] += 1\n    if len(l) == 1:\n        if s[0] == 'W':\n            print(2 * n - 1)\n        else:\n            print(max(0, 2 * tmp - 1))\n        continue\n    p = l[0]\n    q = l[-1]\n    l = sorted(l[1:-1], reverse=True)\n    m = len(l)\n    s = 0\n    ans1, ans2, ans3, ans4 = 1000000000, 100000000000, 1000000000000, 1000000000000\n    for i in range(len(l)):\n        if s >= k:\n            ans1 = k * 2 + i\n            break\n        s += l[i]\n    else:\n        if s >= k:\n            ans1 = k * 2 + m\n    s = 0\n    for i in range(len(l)):\n        if s + p >= k:\n            ans2 = k * 2 + i\n            break\n        s += l[i]\n    else:\n        if s + p >= k:\n            ans2 = k * 2 + m\n    s = 0\n    for i in range(len(l)):\n        if s + q >= k:\n            ans3 = k * 2 + i\n            break\n        s += l[i]\n    else:\n        if s + q >= k:\n            ans3 = k * 2 + m\n    s = 0\n    for i in range(len(l)):\n        if s + p + q >= k:\n            ans4 = k * 2 + i\n            break\n        s += l[i]\n    else:\n        if s + p + q >= k:\n            ans4 = k * 2 + m\n    print(n * 2 - 1 - min(ans1, ans2, ans3, ans4))\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 1000 * 1000 + 10;\nconst long long INF = 1LL * 1000 * 1000 * 1000 * 1000 * 1000 * 1000 + 10;\nlong long arr[MAXN];\nvector<long long> l;\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  int tt;\n  cin >> tt;\n  while (tt--) {\n    long long n, k;\n    cin >> n >> k;\n    string s;\n    cin >> s;\n    l.clear();\n    bool mark = false;\n    long long first = 0, last = 0, pos = 0, ans = 0;\n    for (int i = 0; i < n; i++) {\n      if (s[i] == 'W') {\n        ans++;\n        if (s[i - 1] == 'W') ans++;\n        if (mark) {\n          if (pos != 0) {\n            l.push_back(pos);\n            pos = 0;\n          }\n        } else {\n          first = pos;\n          pos = 0;\n          mark = true;\n        }\n      } else\n        pos++;\n    }\n    last = pos;\n    if (!mark) {\n      cout << max(0LL, min(n, k) * 2 - 1) << endl;\n      continue;\n    }\n    sort(l.begin(), l.end());\n    int ind = 0;\n    while (k != 0 and ind != l.size()) {\n      if (l[ind] > k) {\n        ans += k * 2;\n        k = 0;\n      } else {\n        ans += l[ind] * 2 + 1;\n        k -= l[ind];\n      }\n      ind++;\n    }\n    if (k > 0) {\n      ans += min(k, last) * 2;\n      k -= last;\n      if (k > 0) ans += min(k, first) * 2;\n    }\n    cout << ans << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "# cook your dish here\nt=int(input())\nfor x in range(t):\n    n,k=input().split(' ')\n    n=int(n)\n    k=int(k)\n    \n    s=input()\n    count_=s.count('W')\n    calculate=0\n    prev=0\n    li=[]\n    pre=-1\n    for x in range(n):\n        if s[x]=='W':\n          if pre==-1:\n              pre=x\n              calculate=1\n          else:\n              li.append(x-pre-1)\n              if x-pre==1:\n                  calculate+=2\n              else:\n                  calculate+=1\n              pre=x\n    li.sort()\n    #print(li)\n    #print(calculate)\n    for x in li:\n      if x!=0:\n        if k>=x:\n            calculate+=2*x+1\n            k=k-x\n            count_+=x\n            #print(calculate)\n        elif k<x:\n            calculate+=2*k\n            count_+=k\n            #print(calculate)\n            k=0\n            break\n    #print('k',k)\n    #print('count',count_)\n    if calculate==0 and k>0:\n        calculate=-1\n    if k!=0:\n     if n-count_>=k:\n        calculate+=2*k\n        count_+=k\n     elif n-count_<k:\n        calculate+=2*(n-count_)\n        count_+=n-count_\n    print(calculate)\n    \n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid solve() {\n  int n, k;\n  cin >> n >> k;\n  string s;\n  cin >> s;\n  vector<int> v;\n  int cnt = 0, ans = 0, hoge = 0;\n  while (s[hoge] == 'L' && hoge < n) hoge++;\n  if (hoge == n) {\n    cout << max(2 * min(n, k) - 1, 0) << endl;\n    return;\n  }\n  for (int i = 0; i < n; i++) {\n    if (s[i] == 'W') {\n      if (i > hoge && cnt > 0) v.push_back(cnt);\n      cnt = 0;\n      ans++;\n      if (i && s[i - 1] == 'W') ans++;\n    } else\n      cnt++;\n  }\n  sort((v).begin(), (v).end());\n  for (int i = 0; i < v.size(); i++) {\n    if (!k) break;\n    if (v[i] <= k) {\n      k -= v[i];\n      ans += 2 * v[i] + 1;\n    } else {\n      ans += k * 2;\n      k = 0;\n    }\n  }\n  int tmp = min(hoge, k);\n  k -= tmp;\n  ans += tmp * 2;\n  tmp = min(cnt, k);\n  ans += tmp * 2;\n  cout << ans << endl;\n}\nint main() {\n  cin.tie(nullptr);\n  ios_base::sync_with_stdio(false);\n  int t = 1;\n  cin >> t;\n  while (t--) solve();\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "# coding=utf-8 \n# Created by TheMisfits \nfrom sys import stdin\n_input = stdin.readline\n_range, _dict, _int, _sorted, _list, _str = range, dict, int, sorted, list, str\nfrom collections import defaultdict\ndef solution():\n    for _ in _range(_int(_input())):\n        n, k = [_int(i) for i in _input().split()]\n        arr = _list(_input().rstrip('\\n'))\n        d = defaultdict(_int)\n        current_win = -1\n        ans = 0\n        l_lose = 0\n        for i in _range(n):\n            if current_win == -1 and arr[i] == 'L':\n                l_lose += 1\n            if arr[i] == 'W' and current_win < 0:\n                current_win = i\n            elif arr[i] == 'W' and i - current_win > 1:\n                d[i-current_win-1]+= 1\n                current_win = i\n            elif arr[i] == 'W':\n                current_win = i\n            if i == 0:\n                if arr[i] == 'W':\n                    ans += 1\n            else:\n                if arr[i-1] == 'W' and arr[i] == 'W':\n                    ans += 2\n                elif arr[i] == 'W':\n                    ans += 1\n        if current_win == -1:\n            if k > 0:\n                if k >= l_lose:\n                    ans += (l_lose - 1) * 2 + 1\n                else:\n                    ans += (k - 1) * 2 + 1\n            print(ans)\n            continue\n        r_lose = 0\n        for i in _range(n-1, -1, -1):\n            if arr[i] == 'L':\n                r_lose += 1\n            else:\n                break\n        for i in _sorted(d.keys()):\n            if k >= d[i]*i:\n                ans += d[i]*(i*2+1)\n                k -= d[i]*i\n            else:\n                ans += (k//i)*(i*2+1)\n                ans += (k%i)*2\n                k = 0\n                break\n        if k > 0:\n            if k >= l_lose:\n                ans += l_lose*2\n                k -= l_lose\n            else:\n                ans += k*2\n                k = 0\n        if k > 0:\n            if k >= r_lose:\n                ans += r_lose*2\n                k -= r_lose\n            else:\n                ans += k*2\n                k = 0\n        print(ans)\nsolution()"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int INF = 1e9 + 100;\nconst unsigned long long LINF = 1e18 + 100;\nconst int ITER = 300;\nconst double EPS = 1e-6;\nconst unsigned long long MOD = 1e9 + 7;\nconst unsigned long long MAXN = 1e6 + 100;\nint a[MAXN];\nint n;\nint count_ans(string& s) {\n  int ans = (s[0] == 'W');\n  for (int i = 1; i < n; ++i) {\n    if (s[i] == 'W') {\n      if (s[i - 1] == 'W')\n        ans += 2;\n      else\n        ++ans;\n    }\n  }\n  return ans;\n}\nbool cmp(pair<int, int> lhs, pair<int, int> rhs) {\n  return (lhs.second - lhs.first) < (rhs.second - rhs.first);\n}\nvoid solve() {\n  int k;\n  cin >> n >> k;\n  string s;\n  cin >> s;\n  vector<pair<int, int>> segs;\n  int l = find(s.begin(), s.end(), 'W') - s.begin();\n  int r = n - 1 - (find(s.rbegin(), s.rend(), 'W') - s.rbegin());\n  for (int i = l; i <= r; ++i) {\n    if (s[i] == 'W') continue;\n    int rr = i;\n    while (rr < r && s[rr] == 'L') ++rr;\n    segs.push_back({i, rr});\n    i = rr - 1;\n  }\n  sort(segs.begin(), segs.end(), cmp);\n  for (int i = 0; i < (int)segs.size() && k; ++i) {\n    for (int j = segs[i].first; j < segs[i].second && k; ++j) {\n      s[j] = 'W';\n      --k;\n    }\n  }\n  while (++r < n && s[r] == 'L' && k) {\n    --k;\n    s[r] = 'W';\n  }\n  while (--l >= 0 && s[l] == 'L' && k) {\n    --k;\n    s[l] = 'W';\n  }\n  cout << count_ans(s);\n}\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  int t = 1;\n  cin >> t;\n  for (int cs = 0; cs < t; ++cs) {\n    solve();\n    cout << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\nusing pii = pair<long long, long long>;\nconst long long INF = 2e18;\ntemplate <class A, class B>\nostream &operator<<(ostream &os, const pair<A, B> &p) {\n  os << \"(\" << p.first << \", \" << p.second << \")\";\n  return os;\n}\ntemplate <class A>\nostream &operator<<(ostream &os, const vector<A> &v) {\n  os << \"{\";\n  for (long long i = 0; i < (long long)v.size(); i++)\n    if (i == 0)\n      os << v[i];\n    else\n      os << \", \" << v[i];\n  os << \"}\";\n  return os;\n}\nvoid dprint(string s) { cout << \"\\n\"; }\ntemplate <class T, class... U>\nvoid dprint(string s, T t, U... u) {\n  long long w = s.find(',');\n  cout << \"[\" << s.substr(0, w) << \": \" << t << \"] \";\n  dprint(s.substr(w + 2, (long long)s.size() - w - 1), u...);\n}\nconst long long N = 1e6 + 5;\nvoid solve() {\n  long long n, k;\n  cin >> n >> k;\n  string s;\n  cin >> s;\n  long long sc = 0;\n  vector<long long> v;\n  if (s[0] == 'W') v.push_back(0);\n  for (long long i = 0; i < n;) {\n    char c = s[i];\n    long long cnt = 0;\n    while (s[i] == c and i < n) i++, cnt++;\n    if (c == 'W')\n      sc += 2 * (cnt - 1) + 1;\n    else\n      v.push_back(cnt);\n  }\n  if (s[n - 1] == 'W') v.push_back(0);\n  if (k == 0) {\n    cout << sc << \"\\n\";\n    return;\n  }\n  if ((long long)(v).size() == 1) {\n    if (s[0] == s[n - 1]) {\n      long long take = min(v[0], k);\n      sc += 2 * (take - 1) + 1;\n      cout << sc << \"\\n\";\n      return;\n    }\n  }\n  long long st = 0, end = 0;\n  st = v[0] + v[(long long)(v).size() - 1];\n  vector<long long> d;\n  for (long long i = 1; i < (long long)(v).size() - 1; i++) d.push_back(v[i]);\n  v = d;\n  sort((v).begin(), (v).end());\n  for (long long x : v) {\n    long long take = min(x, k);\n    k -= take, x -= take;\n    if (x == 0)\n      sc += 2 * (take) + 1;\n    else {\n      sc += 2 * take;\n      break;\n    }\n  }\n  long long take = min(st, k);\n  st -= take, k -= take;\n  sc += 2 * take;\n  cout << sc << \"\\n\";\n}\nint32_t main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  long long T;\n  cin >> T;\n  for (long long tc = 1; tc <= T; tc++) {\n    solve();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long M = 1e9 + 7;\nconst long long N = 1e3 + 10;\nconst long long IM = 1e18 + 37;\ninline void PP(long long n) { cout << n << \" \"; }\nvoid PV(vector<long long> v) {\n  for (long long i = 0; i < v.size(); i++) cout << v[i] << \" \";\n  cout << \"\\n\";\n}\nvoid PVV(vector<pair<long long, long long> > v) {\n  for (long long i = 0; i < v.size(); i++)\n    cout << v[i].first << \" \" << v[i].second << \"\\n\";\n}\nvoid PA(long long v[], long long n, long long x = 0) {\n  for (long long i = x; i < n + x; i++) cout << v[i] << ' ';\n  cout << \"\\n\";\n}\nvoid IN(long long a[], long long n, long long x = 0) {\n  for (long long i = x; i < n + x; i++) cin >> a[i];\n}\ninline void op() {}\nsigned main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  op();\n  long long t;\n  cin >> t;\n  while (t--) {\n    long long n, k;\n    cin >> n >> k;\n    string s;\n    cin >> s;\n    vector<long long> v;\n    bool f = 0;\n    long long x = 0, ans = 0;\n    vector<long long> b;\n    for (long long i = 0; i < n; i++) {\n      if (s[i] == 'W') {\n        if (f) {\n          if (x) v.push_back(x);\n          x = 0;\n        } else {\n          b.push_back(x);\n          x = 0;\n        }\n        f = 1;\n        if (i && s[i - 1] == 'W')\n          ans += 2;\n        else if (s[i] == 'W')\n          ans++;\n      } else\n        x++;\n    }\n    if (x) {\n      b.push_back(x);\n    }\n    sort(v.begin(), v.end());\n    for (auto it : v) {\n      long long x = it;\n      if (it <= k) {\n        ans += it + it + 1;\n        k = k - it;\n      } else {\n        ans += k + k;\n        k = 0;\n      }\n      if (k == 0) break;\n    }\n    if (k != 0 && b.size()) {\n      if (f == 0) {\n        long long x = min(n, k);\n        ans += x + x - 1;\n      } else {\n        for (auto it : b) {\n          long long x = min(it, k);\n          ans += x + x;\n          k = k - x;\n        }\n      }\n    }\n    cout << (ans) << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <typename T>\nusing min_heap = priority_queue<T, vector<T>, greater<T>>;\ntemplate <typename T>\nistream& operator>>(istream& is, vector<T>& vec) {\n  for (auto& v : vec) is >> v;\n  return is;\n}\ntemplate <typename T>\nostream& operator<<(ostream& os, const vector<T>& v) {\n  os << \"[ \";\n  for (int i = 0; i < v.size(); ++i) {\n    os << v[i];\n    if (i != v.size() - 1) os << \", \";\n  }\n  os << \" ]\\n\";\n  return os;\n}\ntemplate <typename T>\nostream& operator<<(ostream& os, const set<T>& v) {\n  os << \"[ \";\n  for (auto it : v) {\n    os << it;\n    if (it != *v.rbegin()) os << \", \";\n  }\n  os << \" ]\\n\";\n  return os;\n}\ntemplate <typename T>\nostream& operator<<(ostream& os, const multiset<T>& v) {\n  os << \"[ \";\n  for (auto it : v) os << it << \", \";\n  os << \" ]\\n\";\n  return os;\n}\ntemplate <typename T, typename S>\nostream& operator<<(ostream& os, const map<T, S>& v) {\n  os << \"{ \";\n  for (auto it : v) os << it.first << \" : \" << it.second << \", \";\n  os << \" }\\n\";\n  return os;\n}\ntemplate <typename T, typename S>\nostream& operator<<(ostream& os, const pair<T, S>& v) {\n  os << \"(\";\n  os << v.first << \", \" << v.second << \")\";\n  return os;\n}\ntemplate <typename T>\nostream& operator<<(ostream& os, priority_queue<T> p) {\n  os << \"[ \";\n  while (!p.empty()) {\n    os << p.top() << \" ,\";\n    p.pop();\n  }\n  os << \" ]\\n\";\n  return os;\n}\ninline long long pmod(long long i, long long n) { return (i % n + n) % n; }\nconst long long INF = 1e18;\nconst long long mod = 1e9 + 7;\nvoid solve() {\n  long long n, k;\n  cin >> n >> k;\n  string s;\n  cin >> s;\n  long long fw = -1, lw = -2;\n  for (long long(i) = (0); (i) <= (n - 1); ++(i))\n    if (s[i] == 'W') {\n      fw = i;\n      break;\n    }\n  for (long long(i) = (n - 1); (i) >= (0); --(i))\n    if (s[i] == 'W') {\n      lw = i;\n      break;\n    }\n  vector<pair<long long, long long>> cnt;\n  long long cur = 0, pos;\n  for (long long(i) = (fw); (i) <= (lw); ++(i)) {\n    if (s[i] == 'W') continue;\n    if (!cur) pos = i;\n    ++cur;\n    if (i + 1 <= lw && s[i + 1] == 'L') continue;\n    cnt.push_back({cur, pos});\n    cur = 0;\n  }\n  sort((cnt).begin(), (cnt).end());\n  for (auto&(e) : (cnt))\n    for (long long(i) = (e.second); (i) <= (e.first + e.second - 1); ++(i))\n      if (k) {\n        --k;\n        s[i] = 'W';\n      }\n  if (fw != -1)\n    for (long long(i) = (fw - 1); (i) >= (0); --(i))\n      if (k) {\n        s[i] = 'W';\n        --k;\n      }\n  if (lw != -2)\n    for (long long(i) = (lw + 1); (i) <= (n - 1); ++(i))\n      if (k) {\n        s[i] = 'W';\n        --k;\n      }\n  for (long long(i) = (0); (i) <= (n - 1); ++(i))\n    if (s[i] == 'L' && k) {\n      s[i] = 'W';\n      --k;\n    }\n  long long ans = (s[0] == 'W');\n  for (long long(i) = (1); (i) <= (n - 1); ++(i))\n    if (s[i] == 'W')\n      if (s[i - 1] == 'W')\n        ans += 2;\n      else\n        ++ans;\n  cout << ans;\n}\nint main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  int t = 1;\n  cin >> t;\n  for (int t1 = 1; t1 <= t; ++t1) {\n    solve();\n    cout << '\\n';\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.lang.reflect.Array;\nimport java.util.*;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        FastScanner in = new FastScanner();\n        int t = in.nextInt();\n        for(int tt = 0; tt < t; tt++){\n            int n = in.nextInt();\n            int k = in.nextInt();\n            char[] s = in.next().toCharArray();\n\n            ArrayList<Integer> blk = new ArrayList<>();\n\n            int cw = 0;\n            for(int i = 0; i < n; i++) {\n                if(s[i] == 'W') cw++;\n                if(i > 0 && s[i] == 'W' && s[i-1] == 'W') cw++;\n            }\n\n            for(int i = 0; i < s.length; i++){\n                if(s[i] == 'L'){\n                    int sz = 0;\n                    while(i < n && s[i] == 'L'){\n                        i++;\n                        sz++;\n                    }\n                    blk.add(sz);\n                }\n            }\n            if(blk.size() == 1 && blk.get(0) == n){\n                int put = Math.min(k, n);\n                System.out.println(Math.max(put*2 - 1, 0));\n                continue;\n            }\n\n            int left = (s[0] == 'L') ? blk.get(0) : 0;\n            int right = (s[n-1] == 'L') ? blk.get(blk.size() - 1) : 0;\n            if(left != 0) blk.remove(0);\n            if(right != 0) blk.remove(blk.size() - 1);\n            Collections.sort(blk);\n            for(int i = 0; i < blk.size(); i++){\n                if(k > 0){\n                    if(k >= blk.get(i)){\n                        cw += ((blk.get(i)) * 2 + 1);\n                        k -= blk.get(i);\n                    }\n                    else{\n                        cw += 2*k;\n                        k = 0;\n                    }\n                }\n            }\n            if(k > 0) {\n                if(right > 0){\n                    int put = Math.min(k, right);\n                    k -= put;\n                    cw += put*2;\n                }\n            }\n            if(k > 0){\n                if(left > 0){\n                    int put = Math.min(k, left);\n                    k -= put;\n                    cw += put*2;\n                }\n            }\n            System.out.println(cw);\n        }\n    }\n\n\n    static class FastScanner {\n        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n        StringTokenizer st=new StringTokenizer(\"\");\n        String next() {\n            while (!st.hasMoreTokens())\n                try {\n                    st=new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        int[] readArray(int n) {\n            int[] a=new int[n];\n            for (int i=0; i<n; i++) a[i]=nextInt();\n            return a;\n        }\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n    }\n\n}\n"
        },
        {
            "language": 3,
            "solution": "t = int(input())\n\nfor _ in range(t):\n    n, k = input().split()\n    n, k = int(n), int(k)\n\n    s = input()\n    ind = []\n\n    if ('W' not in s):\n        print(max(0, min(2*n-1, 2*k-1)))\n        continue\n\n    score = 0\n    prev = 'L'\n    ind = []\n\n    for i in range(len(s)):\n        if (s[i] == 'W') and (prev == 'W'):\n            score += 2\n            ind.append(i)\n        elif s[i] == 'W':\n            score += 1\n            ind.append(i)\n        prev = s[i]\n\n    gaps = []\n    for i in range(len(ind)-1):\n        if ind[i+1] - ind[i] > 1:\n            gaps.append(ind[i+1] - ind[i])\n\n    gaps = sorted(gaps)\n\n##    print(score)\n##    print(gaps)\n\n    j = 0\n    while (j < len(gaps)) and (k >= gaps[j] - 1):\n        k -= gaps[j] - 1\n        score += 2*gaps[j] - 1\n        j += 1\n\n##    print('k: ', k, 'score:', score)\n\n    print(min(2*n-1, score + 2*k))\n    \n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput=sys.stdin.readline\nt=int(input())\nfor i in range(t):\n    n,k=map(int,input().split())\n    state=input()\n    state=[i for i in state]\n    ans,prev=0,0\n    store=[]\n    if state[0]=='W':\n        rang=[-1]\n    else:\n        rang=[]\n    for i in range(len(state)):\n        if state[i]=='W':\n            if len(rang)==1:\n                if rang[0]==i-1:\n                    rang=[i]\n                else:\n                    store.append((i-rang[0]-1,rang[0]+1,i))\n                    rang=[i]\n            else:\n                rang=[i]\n    last=(rang[0] if rang else 0)\n    store.sort()\n    if k>0:\n        for i in store:\n            for j in range(i[1],i[2]):\n                state[j]='W'\n                k-=1\n                if k==0:\n                    break\n            if k==0:\n                break\n    if k>0:\n        for i in range(last+1,len(state)):\n            if state[i]=='L' :\n                state[i]='W'\n                k-=1\n            if k==0:\n                break\n    if k>0:\n        for i in range(len(state)-1,-1,-1):\n            if state[i]=='L' :\n                state[i]='W'\n                k-=1\n            if k==0:\n                break\n    if state[0]=='W':\n        ans=1\n    else:\n        ans=0\n    for i in range(1,len(state)):\n        if state[i]=='W':\n            if state[i-1]=='W':\n                ans+=2\n            else:\n                ans+=1\n    sys.stdout.write(str(ans)+'\\n')\n            \n            \n\n"
        },
        {
            "language": 3,
            "solution": "from sys import *\nfrom math import *\nfrom bisect import *\nt=int(stdin.readline())\nfor _ in range(t):\n    n,k=map(int,stdin.readline().split())\n    s=input()\n    c=[]\n    f=0\n    w=0\n    l=0\n    for i in range(n):\n        if s[i]==\"W\":\n            w+=1\n        else:\n            l+=1\n    for i in range(n):\n        if s[i]==\"W\" and f==0:\n            f=1\n            j=i\n        elif f==1 and s[i]==\"W\":\n            c.append(i-j-1)\n            j=i\n    d=[]\n    for i in range(len(c)):\n        if c[i]!=0:\n            d.append(c[i])\n    ans=0\n    d.sort()\n    for i in range(len(d)):\n        if d[i]<=k:\n            k-=d[i]\n            ans+=2*(d[i]-1)+3\n            l-=d[i]\n        else:\n            break\n    for i in range(n):\n        if s[i]==\"W\":\n            if i==0:\n                ans+=1\n            elif s[i-1]==\"L\":\n                ans+=1\n            else:\n                ans+=2\n    ans+=min(k,l)*2\n    if w==0 and k>0:\n        ans-=1\n    print(ans)\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class B {\n\n\tpublic static void main(String[] args) {\n\t\tFastScanner sc = new FastScanner();\n\t\tint t = sc.nextInt();\n\t\twhile(t -- > 0) {\n\t\t\tint n = sc.nextInt();\n\t\t\tint k = sc.nextInt();\n\t\t\tchar[] s = sc.next().toCharArray();\n\t\t\tint exts = 0;\n\t\t\tint p = 0;\n\t\t\twhile(p < n && s[p] == 'L') {\n\t\t\t\texts++; p++;\n\t\t\t}\n\t\t\tif(p == n) {\n\t\t\t\tif(k >= n) System.out.println(2*n-1);\n\t\t\t\telse System.out.println(Math.max(2*k-1, 0));\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tPriorityQueue<Integer> q = new PriorityQueue<>();\n\t\t\tint count = 0;\n\t\t\tint res = 0;\n\t\t\tfor(int i = p; i < n; i++) {\n\t\t\t\tif(s[i] == 'W') {\n\t\t\t\t\tq.add(count); count = 0;\n\t\t\t\t\tres++;\n\t\t\t\t\tif(i > 0 && s[i-1] == 'W') res++;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\texts += count;\n\t\t\twhile(k > 0 && !q.isEmpty()) {\n\t\t\t\tint c = q.poll();\n\t\t\t\tif(c == 0) continue;\n\t\t\t\tif(k >= c) {\n\t\t\t\t\tk -= c;\n\t\t\t\t\tres += c*2 + 1;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tres += k*2; \n\t\t\t\t\tk = 0; break;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(k > 0) {\n\t\t\t\tif(k >= exts) {\n\t\t\t\t\tres += 2*exts;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tres += 2*k;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(res);\n\t\t}\n\n\t}\n\t\n\tstatic class FastScanner {\n        public BufferedReader reader;\n        public StringTokenizer tokenizer;\n        public FastScanner() {\n            reader = new BufferedReader(new InputStreamReader(System.in), 32768);\n            tokenizer = null;\n        }\n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n        public long nextLong() {\n        \treturn Long.parseLong(next());\n        }\n        public double nextDouble() {\n        \treturn Double.parseDouble(next());\n        }\n        public String nextLine() {\n        \ttry {\n        \t\treturn reader.readLine();\n        \t} catch(IOException e) {\n        \t\tthrow new RuntimeException(e);\n        \t}\n        }\n    }\n\n}\n"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nfor _ in range(t):\n    n,k=map(int,input().split())\n    a=input()\n    if(k==0):\n        c=a.split('L')\n        ans=0\n        for i in range(len(c)):\n            if(len(c[i])>=1):\n                ans=ans+((len(c[i])-1)*2+1)\n        print(ans)\n        continue\n    c=a.split('W')\n \n    counter={}\n    for i in range(1,len(c)-1):\n        if(len(c[i])>0):\n            zz=len(c[i])\n            if(zz in counter):\n                counter[zz]+=1\n            else:\n                counter[zz]=1\n    ans=0\n    counter1=[]\n    #print(counter)\n    for i in counter:\n        counter1.append([i,counter[i]])\n    #print(counter1)\n    if(len(c)==1):\n        print(max((min(len(c[0]),k)-1)*2+1,0))\n        continue\n    counter=counter1\n    counter.sort()\n    #print(counter)\n    for i in range(len(counter)):\n        if(counter[i][0]*counter[i][1]<=k):\n            k-=counter[i][1]*counter[i][0]\n            ans+=((counter[i][0]-1)*2+3)*counter[i][1]\n            \n        else:\n            ans1=k//counter[i][0]\n            ans+=((counter[i][0]-1)*2+3)*ans1\n            ans1=k%counter[i][0]\n            k=0\n            ans+=ans1*2\n            break\n    #print(ans)\n    ramu=c[0].count('L')+c[-1].count('L')\n    \n    h=min(ramu,k)\n    ans+=h*2\n    c=a.split('L')\n    \n    for i in range(len(c)):\n        if(len(c[i])>=1):\n            ans=ans+((len(c[i])-1)*2+1)\n    print(ans)\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long n, k;\nstring s;\nvoid solve(long long n, long long k, string s) {\n  vector<long long> v;\n  long long win = 0;\n  for (long long i = 0; i < n; i++) {\n    if (s[i] == 'W') {\n      win++;\n    }\n  }\n  if (win == 0 and k != 0) {\n    cout << (2 * k) - 1 << endl;\n    return;\n  } else if (win == 0 and k == 0) {\n    cout << 0 << endl;\n    return;\n  }\n  win += k;\n  if (win >= n) {\n    cout << (2 * n) - 1 << endl;\n    return;\n  }\n  long long l = 0;\n  long long j = 0;\n  while (j < n) {\n    if (s[j] == 'L') {\n      l++;\n    } else {\n      v.push_back(l);\n      l = 0;\n    }\n    j++;\n  }\n  if (l != 0) {\n    v.push_back(l);\n  }\n  if (s[0] == 'L') {\n    v.erase(v.begin());\n  }\n  if (s[n - 1] == 'L') {\n    v.erase(v.begin() + v.size() - 1);\n  }\n  sort(v.begin(), v.end());\n  long long kk = 0;\n  long long i;\n  for (i = 0; i < v.size(); i++) {\n    if (kk + v[i] > k) {\n      break;\n    }\n    kk += v[i];\n  }\n  long long notchangedstreaks = v.size() - i;\n  cout << 2 * win - notchangedstreaks - 1 << endl;\n}\nint main() {\n  long long t;\n  cin >> t;\n  while (t--) {\n    cin >> n >> k;\n    cin >> s;\n    solve(n, k, s);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class Test \n{\n\tpublic static void main(String[] args) throws Exception\n\t{\n\t\t//System.out.println(\"Enter the number: \");\n\t\tScanner scan = new Scanner(System.in);\n\t\tint t = scan.nextInt();\n\t\twhile(t-->0)\n\t\t{\n\t\t\tint n = scan.nextInt();\n\t\t\tint k = scan.nextInt();\n\t\t\tscan.nextLine();\n\t\t\tString s = scan.nextLine();\n\t\t\tint currentScore = 0;\n\t\t\tint lossCount = 0;\n\t\t\tint wCount = 0;\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t{\n\t\t\t\tif(s.charAt(i) == 'W')\n\t\t\t\t{\n\t\t\t\t\twCount++;\n\t\t\t\t\tif(i == 0 || s.charAt(i - 1) != 'W')\n\t\t\t\t\t{\n\t\t\t\t\t\tcurrentScore++;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tcurrentScore = currentScore + 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tlossCount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(wCount >= n || k == 0)\n\t\t\t{\n\t\t\t\tSystem.out.println(currentScore);\n\t\t\t}\n\t\t\telse if(k >= n || lossCount <= k)\n\t\t\t{\n\t\t\t\tSystem.out.println((n * 2) - 1);\n\t\t\t}\n\t\t\telse if(currentScore == 0)\n\t\t\t{\n\t\t\t\tSystem.out.println((k * 2) - 1);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tPriorityQueue<Integer> lossStreak = new PriorityQueue<Integer>();\n\t\t\t\tint count = -1000000;\n\t\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\t{\n\t\t\t\t\tif(s.charAt(i) == 'L')\n\t\t\t\t\t{\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif(count > 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlossStreak.add(count);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcount = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcurrentScore = currentScore + (k * 2);\n\t\t\t\twhile(!lossStreak.isEmpty())\n\t\t\t\t{\n\t\t\t\t\tint temp = lossStreak.poll();\n\t\t\t\t\tif(temp > k)\n\t\t\t\t\t{\n\t\t\t\t\t\tbreak;\t\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tcurrentScore++;\n\t\t\t\t\t\tk = k - temp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tSystem.out.println(currentScore);\n\t\t\t}\n\t\t}\t\n\t}\n}\t\n\t\n\t"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n\tn,k = map(int,input().split())\n\tarr = list(input())\n\tind = []\n\tp = -1\n\tif arr[0]=='W':\n\t\tp = 0\n\tfor i in range(1,n):\n\t\tif arr[i]=='W' and arr[i-1]=='L':\n\t\t\tif p!=-1:\n\t\t\t\tind.append([i-p-1,[p,i]])\n\t\t\t\tp = i\n\t\t\telse:\n\t\t\t\tp = i\n\t\telif arr[i]==arr[i-1]=='W':\n\t\t\tp = i\n\tind.sort()\n\tfor i in ind:\n\t\tif k==0:\n\t\t\tbreak\n\t\telse:\n\t\t\tfor j in range(i[1][0]+1,i[1][1]):\n\t\t\t\tif k:\n\t\t\t\t\tarr[j] = 'W'\n\t\t\t\t\tk -= 1\n\t\t\t\telse:\n\t\t\t\t\tbreak\n\tif k:\n\t\tif arr[0]!='W':\n\t\t\tif 'W' in arr:\n\t\t\t\tfor i in range(arr.index('W')-1,-1,-1):\n\t\t\t\t\tif k:\n\t\t\t\t\t\tarr[i] = 'W'\n\t\t\t\t\t\tk -= 1\n\t\t\t\t\telse:\n\t\t\t\t\t\tbreak\n\tif k:\n\t\tif arr[-1]!='W':\n\t\t\tx = n\n\t\t\tfor i in range(n-1,-1,-1):\n\t\t\t\tif arr[i]=='W':\n\t\t\t\t\tx = i\n\t\t\t\t\tbreak\n\t\t\tfor i in range(x+1,n):\n\t\t\t\tif k:\n\t\t\t\t\tarr[i] = 'W'\n\t\t\t\t\tk -= 1\n\t\t\t\telse:\n\t\t\t\t\tbreak\n\tif k:\n\t\tfor i in range(n):\n\t\t\tif k:\n\t\t\t\tarr[i] = 'W'\n\t\t\t\tk -= 1\n\t\t\telse:\n\t\t\t\tbreak\n\t# if k:\n\t# \tfor i in range(1,n-1):\n\t# \t\tif k:\n\t# \t\t\tif arr[i]=='L' and (arr[i-1]=='W' or arr[i+1]=='W'):\n\t# \t\t\t\tarr[i] = 'W'\n\t# \t\t\t\tk -= 1 \n\t# \t\telse:\n\t# \t\t\tbreak\n\t# if k:\n\t# \tfor i in range(n):\n\t# \t\tif k:\n\t# \t\t\tif arr[i]=='L':\n\t# \t\t\t\tarr[i] = 'W'\n\t# \t\t\t\tk-=1\n\t# print(arr)\n\tans = int(arr[0]=='W')\n\tfor i in range(1,n):\n\t\tif arr[i]=='W':\n\t\t\tif arr[i-1]=='W':\n\t\t\t\tans += 2\n\t\t\telse:\n\t\t\t\tans += 1\n\n\tprint(ans)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint t, n, k, c[100010];\nchar s[100010];\nint main() {\n  scanf(\"%d\", &t);\n  while (t--) {\n    int cnt = 0, ans = 0, d = -1;\n    scanf(\"%d%d%s\", &n, &k, s);\n    for (int i = 0; i < n; i++) {\n      if (s[i] == 'W') cnt++;\n      if (s[i] == 'L') ans++;\n      if (s[i] == 'W' && (i == 0 || s[i - 1] == 'L')) c[++d] = ans, ans = 0;\n    }\n    if (d > 1) sort(c + 1, c + d + 1);\n    int i, p = k;\n    for (i = 1; i <= d && k >= c[i]; k -= c[i], i++)\n      ;\n    cout << max(0, 2 * min(n, cnt + p) - (max(0, d) - i + 2)) << '\\n';\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int inf = 1e9;\nconst long long inf64 = 1e18;\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  int t;\n  cin >> t;\n  while (t--) {\n    int n, k;\n    cin >> n >> k;\n    string s;\n    cin >> s;\n    int cw = 0;\n    vector<int> blocks1, blocks2;\n    int cur = 0;\n    for (int i = 0; i < n; i++) {\n      if (s[i] != 'W') continue;\n      int j = i;\n      while (j < n && s[j] == 'W') j++;\n      j--;\n      cur++;\n      i = j;\n    }\n    if (cur == 0) {\n      cout << max(0, 2 * k - 1) << \"\\n\";\n      continue;\n    }\n    for (int i = 0; i < n; i++) {\n      if (s[i] == 'W') {\n        cw++;\n        continue;\n      }\n      int j = i;\n      while (j < n && s[j] == 'L') j++;\n      j--;\n      int len = j - i + 1;\n      if (0 < i && j + 1 < n)\n        blocks2.push_back(len);\n      else\n        blocks1.push_back(len);\n      i = j;\n    }\n    sort(blocks2.begin(), blocks2.end());\n    cw = min(n, cw + k);\n    for (int x : blocks2) {\n      if (x > k) break;\n      k -= x;\n      cur--;\n    }\n    cout << 2 * cw - cur << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "T = int(input())\nfor case in range(T):\n\t#i = int(input())\n\t#\n\tm,n = [int(x) for x in input().split()]\n\ts = input()\n\t# lefts = 0\n\t# try:\n\t# \tstart = s.index(\"w\")\n\t# \tlefts += start\n\t# \ts = s[start:] \n\t# except:\n\t# \tpass\n\t# try:\n\t# \tend = s.index(\"w\")\n\t# \tlefts += len(s) - 1 0 end\n\t# \ts = s[:end+1] \n\t# except:\n\t# \tpass\n\n\t#ls = [int(x) for x in input().split()]\n\t#s = sum(ls)\n\t#print(\"----\")\n\tlsw = sorted([x for x in s.split(\"L\") if len(x)])\n\tpoints = 0\n\tfor e in lsw:\n\t\tpoints += len(e) * 2 - 1\n\t#print(\"p\",points,lsw)\n\tll = [x for x in s.split(\"W\") if len(x)]\n\t#print(ll)\n\tends = 0\n\tif s[0] == \"L\":\n\t\tends += len(ll.pop(0))\n\tif len(ll) and s[-1] == \"L\":\n\t\tends += len(ll.pop())\n\tls = sorted(ll)\n\t#print(n,ls,ends)\n\tc = 0\n\tfull = True\n\tfor e in ls:\n\t\tif n >= len(e):\n\t\t\tn -= len(e)\n\t\t\tc += len(e) * 2 + 1\n\t\telse:\n\t\t\tc += n * 2\n\t\t\tn = 0\n\t\t\tfull = False\n\t#print(\"no front back\",c,n,ends)\n\tif n != 0:\n\t\tc += min(n,ends) * 2\n\t\tif \"W\" not in s:\n\t\t\tc -= 1\n\t#print(\"front back\",c,n)\n\n\tprint(c+points)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nclass R {\n public:\n  long long s;\n  long long e;\n  long long val;\n  long long dir;\n};\nbool mycmp(R a, R b) {\n  if (a.val == b.val) {\n    return (a.e - a.s + 1) < (b.e - b.s + 1);\n  }\n  return a.val > b.val;\n}\nint main() {\n  long long t;\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cin >> t;\n  while (t--) {\n    long long n, k;\n    cin >> n >> k;\n    string s;\n    cin >> s;\n    long long cnt = 0;\n    for (int i = 0; i < n; i++) {\n      if (s[i] == 'L') {\n        cnt++;\n      }\n    }\n    if (cnt > k && cnt < n) {\n      vector<R> v;\n      long long idx = 0;\n      while (idx < n) {\n        if (s[idx] == 'L') {\n          R r;\n          r.s = idx;\n          r.e = idx;\n          while (idx + 1 < n && s[idx + 1] == 'L') {\n            r.e = idx + 1;\n            idx++;\n          }\n          r.dir = 1;\n          long long diff = r.e - r.s + 1;\n          if (r.s == 0) {\n            r.val = 0;\n          } else if (r.e == n - 1) {\n            r.val = 0;\n            r.dir = 0;\n          } else {\n            r.val = 1;\n          }\n          v.push_back(r);\n          idx++;\n        } else {\n          idx++;\n        }\n      }\n      sort(v.begin(), v.end(), mycmp);\n      while (k > 0) {\n        for (auto vv : v) {\n          if (vv.dir == 1) {\n            for (int i = vv.e; i >= vv.s && k > 0; i--) {\n              s[i] = 'W';\n              k--;\n            }\n          } else {\n            for (int i = vv.s; i <= vv.e && k > 0; i++) {\n              s[i] = 'W';\n              k--;\n            }\n          }\n        }\n      }\n    }\n    if (k > 0) {\n      for (int i = 0; i < n && k > 0; i++) {\n        if (s[i] == 'L') {\n          s[i] = 'W';\n          k--;\n        }\n      }\n    }\n    long long score = 0;\n    if (s[0] == 'W') {\n      score = 1;\n    }\n    for (int i = 1; i < n; i++) {\n      if (s[i - 1] == 'W' && s[i] == 'W') {\n        score += 2;\n      } else if (s[i] == 'W') {\n        score += 1;\n      }\n    }\n    cout << score << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.Scanner;\n\npublic class B {\n    public static void main(String[] args) throws IOException {\n//        Scanner scan = new Scanner(System.in);\n        BufferedReader br= new BufferedReader(new InputStreamReader(System.in));\n//        int t = scan.nextInt();\n        int t= Integer.parseInt(br.readLine());\n        while (t-->0)\n        {\n            String[] s0= br.readLine().split(\" \");\n            int n= Integer.parseInt(s0[0]);\n            int k= Integer.parseInt(s0[1]);\n            String s= br.readLine();\n//            int n= scan.nextInt();\n//            int k= scan.nextInt();\n//            String s= scan.next();\n            long ans=0;\n            int w=0,l=0, last=0,x=0;\n//            boolean[] check= new boolean[n];\n            int[] a= new int[n];\n            for (int i=0;i<n;i++){\n                if (s.charAt(i)=='W') {\n                    w++;\n//                    check[i]=true;\n                    ans++;\n                    if (i>0){\n                        if (s.charAt(i-1)=='W')\n                            ans++;\n                    }\n                }\n                else {\n                    l++;\n//                    check[i]=false;\n                }\n                a[i]= Integer.MAX_VALUE;\n            }\n            if (k>=l){\n                ans= 2*n-1;\n            } else if (w==0){\n                if (k>0){\n                    ans= 2*k-1;\n                }\n            } else {\n                for (int i=0;i<n;i++){\n                    if (s.charAt(i)=='W'){\n                        last=i;\n                        break;\n                    }\n                }\n                for (int i=last;i<n;i++){\n                    if (s.charAt(i)=='W'){\n                        int dif= i-last;\n                        if (dif>1){\n                            a[x++]= dif-1;\n                        }\n                        last=i;\n                    }\n                }\n//                System.out.println(ans+\" \"+a[0]);\n                Arrays.sort(a);\n                for (int i=0;i<x;i++){\n                    if (a[i]<=k){\n                        ans+= (a[i])*2+1;\n                        k-=a[i];\n                    } else if (k<a[i]){\n                        ans+= (k)*2;\n                        k=0;\n                    }\n                    if (k<=0)\n                        break;\n                }\n                if (k>0){\n                    ans+=k*2;\n                }\n            }\n            System.out.println(ans);\n        }\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  cin.tie(0);\n  ios::sync_with_stdio(0);\n  int t;\n  for (cin >> t; t--;) {\n    int n, k;\n    cin >> n >> k;\n    string s;\n    cin >> s;\n    int rem = k;\n    vector<pair<int, int>> dist;\n    int prev = -1;\n    for (int i = 0; i < n; i++) {\n      if (s.at(i) == 'W') {\n        if (prev != -1) {\n          pair<int, int> ins;\n          ins.first = i - prev - 1;\n          ins.second = prev + 1;\n          if (ins.first > 0) {\n            dist.push_back(ins);\n          }\n        }\n        prev = i;\n      }\n    }\n    sort(dist.begin(), dist.end());\n    for (pair<int, int> &v : dist) {\n      if (rem - v.first >= 0) {\n        rem -= v.first;\n        for (int i = v.second; i < v.second + v.first; i++) {\n          assert(i < n);\n          s.at(i) = 'W';\n        }\n      }\n    }\n    for (int i = 1; i < n; i++) {\n      if (rem > 0 and s.at(i) == 'L' and s.at(i - 1) == 'W') {\n        s.at(i) = 'W';\n        rem--;\n      }\n    }\n    for (int i = n - 2; i >= 0; i--) {\n      if (rem > 0 and s.at(i) == 'L' and s.at(i + 1) == 'W') {\n        rem--;\n        s.at(i) = 'W';\n      }\n    }\n    for (int i = 0; i < n; i++) {\n      if (rem > 0 and s.at(i) == 'L') {\n        s.at(i) = 'W';\n        rem--;\n      }\n    }\n    int score = 0;\n    for (int i = 0; i < n; i++) {\n      if (s.at(i) == 'W') {\n        score++;\n        if (i > 0 and s.at(i - 1) == 'W') {\n          score++;\n        }\n      }\n    }\n    cout << score << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n \npublic class Solution extends PrintWriter {\n    \n    \n    private void solve()  {\n    \tint t = sc.nextInt();\n    \tfor(int tt = 0; tt < t; tt++) {\n    \t\tint n = sc.nextInt();\n    \t\tint k = sc.nextInt();\n    \t\tchar[] chs = sc.nextString().toCharArray();\n    \t\tArrayList<int[]> gaps = new ArrayList<>();\n    \t\tfor(int i = 0; i < n; ) {\n    \t\t\tif(chs[i] == 'W') {\n    \t\t\t\ti++;\n    \t\t\t\tcontinue;\n    \t\t\t} else {\n    \t\t\t\tint j = i;\n    \t\t\t\twhile(j < n && chs[j] == 'L') j++;\n    \t\t\t\tif(i == 0 || j == n) gaps.add(new int[] {i,j-1,1<<30});\n    \t\t\t\telse gaps.add(new int[] {i,j-1,j-i});\n    \t\t\t\ti = j;\n    \t\t\t}\n    \t\t}\n    \t\tCollections.sort(gaps, Comparator.comparing((int[] arr) -> arr[2]));\n    \t\tfor(int i = 0; i < gaps.size() && k > 0; i++) {\n    \t\t\tint[] gap = gaps.get(i);\n    \t\t\tif(gap[0] == 0) {\n        \t\t\tfor(int j = gap[1]; j >= gap[0] && k > 0; j--) {\n        \t\t\t\tchs[j] = 'W';\n        \t\t\t\tk--;\n        \t\t\t}\n    \t\t\t} else {\n        \t\t\tfor(int j = gap[0]; j <= gap[1] && k > 0; j++) {\n        \t\t\t\tchs[j] = 'W';\n        \t\t\t\tk--;\n        \t\t\t}\n    \t\t\t}\n    \t\t}\n    \t\tint ans = 0;\n    \t\tfor(int i = 0; i < n; i++) {\n    \t\t\tif(chs[i] == 'W') {\n    \t\t\t\tif(i > 0 && chs[i-1] == 'W') ans += 2;\n    \t\t\t\telse ans++;\n    \t\t\t}\n    \t\t}\n    \t\tprintln(ans);\n    \t}\n    }\n        \n//  Solution() throws FileNotFoundException { super(new File(\"output.txt\")); }\n//  InputReader sc = new InputReader(new FileInputStream(\"test_input.txt\"));\n  Solution() { super(System.out); }\n  InputReader sc = new InputReader(System.in);\n  static class InputReader {\n      InputReader(InputStream in) { this.in = in; } InputStream in;\n      \n      private byte[] buf = new byte[16384];\n      private int    curChar;\n      private int    numChars;\n      \n \n      public int read() {\n          if (numChars == -1)\n              throw new InputMismatchException();\n          if (curChar >= numChars) {\n              curChar = 0;\n              try {\n                  numChars = in.read(buf);\n              } catch (IOException e) {\n                  throw new InputMismatchException();\n              }\n              if (numChars <= 0)\n                  return -1;\n          }\n          return buf[curChar++];\n      }\n \n      public String nextLine() {\n          int c = read();\n          while (isSpaceChar(c))\n              c = read();\n          StringBuilder res = new StringBuilder();\n          do {\n              res.appendCodePoint(c);\n              c = read();\n          } while (!isEndOfLine(c));\n          return res.toString();\n      }\n \n      public String nextString() {\n          int c = read();\n          while (isSpaceChar(c))\n              c = read();\n          StringBuilder res = new StringBuilder();\n          do {\n              res.appendCodePoint(c);\n              c = read();\n          } while (!isSpaceChar(c));\n          return res.toString();\n      }\n \n      public long nextLong() {\n          int c = read();\n          while (isSpaceChar(c))\n              c = read();\n          int sgn = 1;\n          if (c == '-') {\n              sgn = -1;\n              c = read();\n          }\n          long res = 0;\n          do {\n              if (c < '0' || c > '9')\n                  throw new InputMismatchException();\n              res *= 10;\n              res += c - '0';\n              c = read();\n          } while (!isSpaceChar(c));\n          return res * sgn;\n      }\n \n      public int nextInt() {\n          int c = read();\n          while (isSpaceChar(c))\n              c = read();\n          int sgn = 1;\n          if (c == '-') {\n              sgn = -1;\n              c = read();\n          }\n          int res = 0;\n          do {\n              if (c < '0' || c > '9')\n                  throw new InputMismatchException();\n              res *= 10;\n              res += c - '0';\n              c = read();\n          } while (!isSpaceChar(c));\n          return res * sgn;\n      }\n \n      private boolean isSpaceChar(int c) {\n          return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n      }\n \n      private boolean isEndOfLine(int c) {\n          return c == '\\n' || c == '\\r' || c == -1;\n      }\n  }\n \n    public static void main(String[] $) {\n        new Thread(null, new Runnable() {\n            public void run() {\n                long start = System.nanoTime();\n                try {Solution solution = new Solution(); solution.solve(); solution.flush();} \n                catch (Exception e) {e.printStackTrace(); System.exit(1);}\n                System.err.println((System.nanoTime()-start)/1E9);\n            }\n        }, \"1\", 1 << 27).start();\n \n    }\n    \n\n}"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n, k = map(int, input().split())\n    s = input()\n    check = [0]*(n+1)\n    loose = 0\n    a, b = 0, 0\n    wins, win_streak = 0, 1\n    c = 0\n    for i in s:\n        if i == 'L':\n            c += 1\n        else:\n            break\n    for i in range(c, n):\n        if s[i] == 'W':\n            wins += 1\n            if loose > 0:\n                check[loose] += 1\n            loose = 0\n        else:\n            loose += 1\n        if i < n-1:\n            if s[i:(i+2)] == 'WL' and b == 0:\n                a = 1\n            if s[i:(i+2)] == 'LW' and a == 1:\n                b = 1\n            if a == 1 and b == 1:\n                a = b = 0\n                win_streak += 1\n    if n - wins > k:\n        wins += k\n        for i in range(1, n+1):\n            temp = i*check[i]\n            if k >= temp:\n                k -= temp\n                win_streak -= check[i]\n            else:\n                win_streak -= k // i\n                break\n\n        print(max(2*wins - win_streak, 0))\n\n    else:\n        print(2*n - 1)\n"
        },
        {
            "language": 4,
            "solution": "\n    import java.util.Scanner;\n    import java.util.*;\n    public class Main{\n        public static void main(String[] args){\n            Scanner s = new Scanner(System.in);\n            int t = s.nextInt(), x;\n            for(int t1=0; t1<t; t1++){\n                int n = s.nextInt(), k = s.nextInt();\n                s.nextLine();\n                String str = s.nextLine();\n                long sumi = 0, cnw=0;\n                int prev=0;\n                if(str.charAt(0) == 'W'){\n                    cnw++; sumi=1;\n                    prev=0;\n                }\n                Vector<Integer> v = new Vector<Integer>();\n                for(int y=1; y<n; y++){\n                    if (str.charAt(y) == 'W'){\n                        if (cnw>=1) v.add(y-prev-1);\n                        prev=y;\n                        cnw++;\n                        if (str.charAt(y - 1) == 'W'){\n                            sumi+=2;continue;\n                        }\n                        sumi+=1;\n                    }\n                }\n                //System.out.println(v.toString());\n                if (n-cnw<=k){\n                    System.out.println(1+(n-1)*2);\n                }\n                else if(k==0){\n                    System.out.println(sumi);\n                }\n                else if (cnw==0){\n                    System.out.println((k-1)*2+1);\n                }\n                else{\n                    sumi+=k*2;\n                    int l = k;\n                    Collections.sort(v);\n                    for(int g: v){\n                        if(l-g>=0 && g>0)sumi+=1;\n                        l-=g;\n                    }\n                System.out.println(sumi);\n                }\n            }\n            s.close();\n        }\n\n    }"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n,k=map(int,input().split())\n    ar=list(input())\n    fro=0\n    bac=0\n    li=[]\n    for i in range(n):\n        if(ar[i]=='L'):\n            fro+=1\n        else:\n            break\n    for i in range(1,n+1):\n        if(ar[-i]=='L'):\n            bac+=1\n        else:\n            break\n    win=ar.count('W')\n    if(win==0):\n        print(max(2*(k-1)+1,0))\n    elif(win==1):\n        ind=ar.index('W')\n        i=ind+1\n        ans=1\n        while(i<n and k!=0):\n            ans+=2\n            i+=1\n            k-=1\n        i=ind-1\n        while(i>=0 and k!=0):\n            ans+=2\n            i-=1\n            k-=1\n        print(ans)\n    else:\n        count=0\n        for i in range(fro,n-bac):\n            if(ar[i]=='L'):\n                count+=1\n            else:\n                li.append(count)\n                count=0\n        li.sort()\n        ans=int(ar[0]=='W')\n        for i in range(1,n):\n            if(ar[i]=='W'):\n                if(ar[i-1]=='W'):\n                    ans+=2\n                else:\n                    ans+=1\n        for i in li:\n            if(i<=k and i!=0):\n                ans+=2*i+1\n                k-=i\n            elif(i!=0):\n                ans+=2*k\n                k=0\n        for i in [fro,bac]:\n            if(i<=k):\n                ans+=2*i\n                k-=i\n            else:\n                ans+=2*k\n                k=0\n        print(ans)"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n, k = map(int, input().split())\n    string = input().strip()\n    if \"W\" not in string:\n        ans = min(n, k) * 2 - 1\n        print(max(ans, 0))\n        return\n        \n    L_s = []\n    cnt = 0\n    bef = string[0]\n    ans = 0\n    for s in string:\n        if s == bef:\n            cnt += 1\n        else:\n            if bef == \"L\":\n                L_s.append(cnt)\n            else:\n                ans += cnt * 2 - 1\n            cnt = 1\n        bef = s\n    if bef == \"W\":\n        ans += cnt * 2 - 1\n        cnt = 0\n        \n    if string[0] == \"L\" and L_s:\n        cnt += L_s[0]\n        L_s = L_s[1:]\n    L_s.sort()\n    for l in L_s:\n        if k >= l:\n            ans += l * 2 + 1\n            k -= l\n        else:\n            ans += k * 2\n            k = 0\n            \n    ans += 2 * min(k, cnt)\n    print(ans)\n    \n    \n    \nfor _ in range(int(input())):\n    main()"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int t;\n  cin >> t;\n  for (int i = 0; i < t; i++) {\n    int n, k, count = 0, sum = 0;\n    cin >> n >> k;\n    string s;\n    cin >> s;\n    for (int j = 0; j < n; j++) {\n      if (s[j] == 'L') {\n        count++;\n      }\n    }\n    if (count <= k) {\n      cout << 2 * n - 1 << endl;\n    } else {\n      if (count == n) {\n        if (k <= 1) {\n          cout << k << endl;\n        } else {\n          cout << 2 * k - 1 << endl;\n        }\n      } else {\n        int p = -1, o = -1;\n        vector<int> vec = {};\n        vector<char> vc = {};\n        if (s[0] == 'W') {\n          sum += 1;\n          p = 0;\n          o = 0;\n        }\n        for (int j = 1; j < n; j++) {\n          if (s[j] == 'W' && s[j - 1] == 'W') {\n            sum += 2;\n          } else if (s[j] == 'W' && s[j - 1] == 'L') {\n            sum += 1;\n            if (p == 0) {\n              vec.push_back(vc.size());\n              vc.clear();\n            }\n            p = 0;\n            if (o == -1) {\n              o = j;\n            }\n          } else if (p == 0 && s[j] == 'L') {\n            vc.push_back(s[j]);\n          }\n        }\n        sort(vec.begin(), vec.end());\n        for (int j = 0; j < vec.size(); j++) {\n          if (k >= vec[j]) {\n            sum += 2 * vec[j] + 1;\n            k -= vec[j];\n            if (k == 0) {\n              break;\n            }\n          } else if (k < vec[j]) {\n            sum += 2 * k;\n            k = 0;\n            break;\n          }\n        }\n        if (k != 0) {\n          sum += 2 * k;\n        }\n        cout << sum << endl;\n      }\n    }\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "\"\"\"T=int(input())\nfor _ in range(0,T):\n    n=int(input())\n    a,b=map(int,input().split())\n    s=input()\n    s=[int(x) for x in input().split()]\n    for i in range(0,len(s)):\n        a,b=map(int,input().split())\"\"\"\n\n\nT=int(input())\nfor _ in range(0,T):\n    n,k=map(int,input().split())\n    L=input()\n    s=[]\n    for i in range(0,len(L)):\n        s.append(L[i])\n\n    ptr=len(s)\n    #ptr2=len(s)\n    for i in range(0,len(s)):\n        if(s[i]=='W'):\n            ptr=i\n            break\n\n    dp=[]\n    c=0\n    st=ptr\n    for i in range(ptr+1,len(s)):\n        if(s[i]=='W'):\n            if(c>0):\n                dp.append([c,st+1,i])\n            st=i\n            c=0\n        else:\n            c+=1\n            \n    #if(c>0):\n        #dp.append([c,st+1,len(s)])\n        \n    dp.sort()\n    fnl=[]\n    for i in range(0,len(dp)):\n        cnt=dp[i][0]\n        j1=dp[i][1]\n        j2=dp[i][2]\n        for j in range(j1,j2):\n            fnl.append(j)\n            \n    for i in range(st+1,len(s)):\n        fnl.append(i)\n    for i in range(ptr-1,-1,-1):\n        fnl.append(i)\n\n    for i in range(0,min(k,len(fnl))):\n        s[fnl[i]]='W'\n\n\n    ans=0\n    prev=0\n    for i in range(0,len(s)):\n        if(s[i]=='W'):\n            if(prev==1):\n                ans+=2\n            else:\n                ans+=1\n            prev=1\n        else:\n            prev=0\n\n    print(ans)\n\n    \"\"\"c=0\n    for i in range(ptr,len(s)):\n        if((c+1)<=k and s[i]=='L'):\n            s[i]='W'\n            c+=1\n\n    for i in range(0,len(s)):\n        if((c+1)<=k and s[i]=='L'):\n            s[i]='W'\n            c+=1\n\n    ans=0\n    prev=0\n    for i in range(0,len(s)):\n        if(s[i]=='W'):\n            if(prev==1):\n                ans+=2\n            else:\n                ans+=1\n            prev=1\n        else:\n            prev=0\n\n    print(ans)\"\"\"\n\n    \n"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nfor _ in range(t):\n    n,k=map(int,input().split())\n    a=list(input())\n    s,l=0,0\n    ind,sp=[],[]\n    for i in range(n):\n        if a[i]==\"W\":\n            if (i>0 and a[i-1]==\"W\"):\n                s+=2\n            else:\n                s+=1\n            ind.append(i)\n            l+=1\n            if l>1:\n                sp.append([ind[-1],ind[-2],ind[-1]-ind[-2]-1])\n    sp=sorted(sp,key=lambda x: x[2])                        \n    if k==0:\n        print(s)\n    elif ind==[]:\n        print(1+2*(min(k-1,n-1)))    \n    else:\n        k1=[n,ind[-1],n-ind[-1]-1]\n        k2=[ind[0],-1,ind[0]]\n        ini=s\n        if k1[2]>k2[2]:\n            sp+=[k2,k1]\n        else:\n            sp+=[k1,k2]\n\n        #print(sp,ini)\n        l1=len(sp)\n        for i in range(l1):\n            if sp[i][2]==0:\n                continue\n            if sp[i][0]==n:\n                if k>=sp[i][2]:\n                    ini+=2*sp[i][2]\n                    k-=sp[i][2]\n                else:\n                    ini+=2*k\n                    k=0\n\n            else:\n                if k>=sp[i][2]:\n                    ini+=2*(sp[i][2]-1)+2\n                    if sp[i][1]!=-1:\n                        ini+=1\n                    k-=sp[i][2]\n                else:\n                    ini+=2*(k-1)+2\n                    k=0        \n            if k==0:\n                break        \n        print(ini)                \n\n\n"
        },
        {
            "language": 3,
            "solution": "for _ in range(int(input())):\n    n, k = map(int, input().split())\n    a = input()\n    bet = []\n    score = 0\n    counter = 0\n    total = 0\n    flag = -1\n    for x in a:\n        if x == \"W\":\n            if flag == 0:\n                bet.append(counter)\n                counter = 0\n            if flag <= 0:\n                score += 1\n            else:\n                score += 2\n\n            flag = 1\n\n        else:\n            if flag == 1 or flag == 0:\n                counter += 1\n                flag = 0\n            total += 1\n\n    if total == n and k > 0:\n        score = -1\n    else:\n        bet.sort()\n        for x in bet:\n            if x <= k:\n                k = k - x\n                total = total - x\n                score += (x * 2) + 1\n\n    if k > total:\n        k = total\n\n    score += k * 2\n    print(score)"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\nimport java.lang.*;\n\npublic class B {\n\tpublic static void main(String[] args) {\n\t\tScanner input = new Scanner(System.in);\n\n\t\tint t = input.nextInt();\n\t\twhile (t-- > 0) {\n\t\t\tint n = input.nextInt();\n\t\t\tint k = input.nextInt();\n\n\t\t\tString s = input.next();\n\n\t\t\tList<LossRun> lossRuns = new ArrayList<>();\n\t\t\tfor (int i = 0; i < s.length();) {\n\t\t\t\tif (s.charAt(i) == 'L') {\n\t\t\t\t\tint startPosition = i;\n\t\t\t\t\twhile(i < s.length() && s.charAt(i) == 'L') {\n\t\t\t\t\t\t++i;\n\t\t\t\t\t}\n\t\t\t\t\tint runLength = i - startPosition;\n\t\t\t\t\tlossRuns.add(new LossRun(startPosition, runLength, n));\n\t\t\t\t} else if (s.charAt(i) == 'W') {\n\t\t\t\t\twhile (i < s.length() && s.charAt(i) == 'W') {\n\t\t\t\t\t\t++i;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tSystem.out.println(\"Program is mistake\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tCollections.sort(lossRuns);\n\n\t\t\tint remainingCheats = k;\n\t\t\tStringBuilder mutableS = new StringBuilder(s);\n\t\t\tfor (LossRun lossRun: lossRuns) {\n\t\t\t\t// System.out.println(lossRun);\n\t\t\t\tint replaceLength = Math.min(lossRun.length, remainingCheats);\n\n\t\t\t\tint startPosition;\n\t\t\t\tint endPosition;\n\t\t\t\tif (lossRun.isFirst()) {\n\t\t\t\t\tendPosition = lossRun.position + lossRun.length;\n\t\t\t\t\tstartPosition = endPosition - replaceLength;\n\t\t\t\t} else {\n\t\t\t\t\tstartPosition = lossRun.position;\n\t\t\t\t\tendPosition = startPosition + replaceLength;\n\t\t\t\t}\n\n\t\t\t\tfor (int i = startPosition; i < endPosition; ++i) {\n\t\t\t\t\tmutableS.setCharAt(i, 'W');\n\t\t\t\t}\n\t\t\t\tremainingCheats -= replaceLength;\n\t\t\t}\n\n\t\t\tString cheatedS = mutableS.toString();\n\t\t\t// System.out.println(cheatedS);\n\n\t\t\t// calculate the new value here\n\t\t\tSystem.out.println(\"\" + totalScore(cheatedS));\n\n\t\t}\n\t}\n\n\tprivate static int totalScore(String matchOutcome) {\n\t\tint totalScore = matchOutcome.charAt(0) == 'W' ? 1 : 0;\n\n\t\tfor (int i = 1; i < matchOutcome.length(); ++i) {\n\t\t\tif (matchOutcome.charAt(i) == 'W') {\n\t\t\t\tif (matchOutcome.charAt(i - 1) == 'W') {\n\t\t\t\t\ttotalScore += 2;\n\t\t\t\t} else {\n\t\t\t\t\ttotalScore += 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn totalScore;\n\t}\n}\n\nclass LossRun implements Comparable {\n\tint position;\n\tint length;\n\tint totalGames;\n\n\tLossRun(int position, int length, int totalGames) {\n\t\tthis.position = position;\n\t\tthis.length = length;\n\t\tthis.totalGames = totalGames;\n\t}\n\n\tpublic boolean isFirst() {\n\t\treturn this.position == 0;\n\t}\n\n\tpublic boolean isLast() {\n\t\treturn this.position + length == totalGames;\n\t}\n\n\tpublic boolean isFirstOrLast() {\n\t\treturn this.isFirst() || this.isLast();\n\t}\n\n\t@Override\n\tpublic int compareTo(Object o) {\n\t\tLossRun other = (LossRun) o;\n\t\tif (this.isFirstOrLast() && !other.isFirstOrLast()) {\n\t\t\treturn 1;\n\t\t} else if (!this.isFirstOrLast() && other.isFirstOrLast()) {\n\t\t\treturn -1;\n\t\t} else {\n\t\t\treturn this.length - other.length;\n\t\t}\n\t}\n\n\t@Override\n\tpublic String toString() {\n\t\treturn \"LossRun: pos = \" + this.position + \" length = \" + this.length;\n\t}\n}"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport static java.lang.Math.max;\nimport static java.lang.Math.min;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        List<Integer> list = new ArrayList<>();\n        //\u591a\u6b21\u95ee\u8be2\n        int t = in.nextInt();\n        for(int i=0;i<t;i++){\n            int n = in.nextInt();\n            int k = in.nextInt();\n            in.nextLine();\n            String s = in.nextLine();\n            list.add(scoreMax(n,k,s));\n        }\n\n        for (Integer i:list) {\n            System.out.println(i);\n        }\n    }\n\n    private static int scoreMax(int n, int k, String s) {\n        int lenS = s.length();\n        char[] chars = s.toCharArray();\n\n        //count\u8d4b\u503c\uff0c\u5219\u53ea\u4f1a\u8ba1\u7b97\u53ccW\u95f4\u7684\u8fde\u7eedL\n        //\u5f00\u5934L\u4e0e\u672b\u5c3eL\uff0c\u90fd\u662f\u53ea\u589e\u52a02\n        int count = lenS;\n        int score = 0;\n        List<Integer> list = new ArrayList<>();\n\n        //W\u4e4b\u95f4\u7684L\u957f\u5ea6\uff0c\u6ca1\u6709\u672b\u5c3eL\u957f\u5ea6\n        for(int i=0;i<lenS;i++){\n            if(chars[i]=='L'){\n                ++count;\n            }else {\n                if(i>0&&chars[i-1]=='W'){\n                    score+=2;\n                }else {\n                    score+=1;\n                }\n                if(count>0) {\n                    list.add(count);\n                }\n                count=0;\n            }\n        }\n\n        if(count == lenS*2){\n            //\u8bf4\u660e\u5168\u662fL\n            return max(0,2*min(n,k)-1);\n        }\n\n        Collections.sort(list);\n        for (Integer i:list) {\n            if(k>=i){\n                score+=i*2+1;\n                k-=i;\n            }\n        }\n        score+=2*k;\n        //\u4e0d\u80fd\u8d85\u8fc7\u6700\u5927\u503c\n        return min(score,2*n-1);\n    }\n\n}\n\n\t\t\t\t \t  \t \t \t\t \t \t\t\t\t   \t\t  \t\t\t"
        },
        {
            "language": 3,
            "solution": "# wow, I'm bad\n\nt = int(input())\n\nfor _ in range(t):\n    n,K = map(int,input().split())\n    s = input()\n    n = len(s)\n\n    def way1():\n        global n,K,s\n\n        if s.find('W') == -1:\n            return max(0, 2*min(K, n) - 1)\n\n        k = K\n        score = int(s[0] == 'W')\n        for i in range(1, n):\n            if s[i-1] == s[i] == 'W':\n                score += 2\n            elif s[i] == 'W':\n                score += 1\n\n        loss_streaks = [len(x) for x in s.split('W') if x != '']\n        if s[0] == 'L':\n            first = loss_streaks[0]\n            del loss_streaks[0]\n        else:\n            first = 0\n        if s[-1] == 'L' and loss_streaks:\n            last = loss_streaks[-1]\n            del loss_streaks[-1]\n        else:\n            last = 0\n\n        loss_streaks.sort()\n        for i in range(len(loss_streaks)):\n            if loss_streaks[i] <= k:\n                k -= loss_streaks[i]\n                score += loss_streaks[i]*2 + 1\n                loss_streaks[i] = 0\n        left = sum(loss_streaks)\n        score += 2*min(left, k)\n        k -= min(left, k)\n\n        if k and last:\n            score += 2*min(last, k)\n            k -= min(last, k)\n        if k and first:\n            score += 2*min(first, k)\n        return score\n\n    print(way1())\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class spdb1 {\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n\n        int tt = Integer.parseInt(scan.nextLine());\n        while (tt-- != 0) {\n            List<Integer> v = new ArrayList<>();\n            String[] ss = scan.nextLine().split(\" \");\n            int n = Integer.parseInt(ss[0]);\n            int k = Integer.parseInt(ss[1]);\n            String s = scan.nextLine();\n            int cur = k+5;\n            int score = 0;\n            for(int i=0;i<n;i++){\n                if(s.charAt(i)=='L'){\n                    cur++;\n                }else{\n                    score +=  cur>0?1:2;\n                    if(cur>0){\n                        v.add(cur);\n                    }\n                    cur = 0;\n                }\n            }\n            if(cur==k+5+n){\n                System.out.println(Integer.max(0,2*Integer.min(k,n)-1));\n                continue;\n            }\n            Collections.sort(v);\n            for(int i=0;i<v.size();i++){\n                if(k>=v.get(i)){\n                    score+=2*v.get(i);\n                    score++;\n                    k-=v.get(i);\n                }\n            }\n            score+=2*k;\n            score=Integer.min(score,2*n-1);\n            System.out.println(score);\n\n        }\n    }\n}\n    \t \t   \t  \t\t    \t\t\t\t\t  \t  \t\t"
        },
        {
            "language": 1,
            "solution": "for _ in range(input()):\n    n,k=[int(i) for i in raw_input().split()]\n    c=0\n    s=0\n    a=[i for i in raw_input()]\n    if(n==1):\n        if k>=1 or a[0]=='W':\n            print 1\n        else:\n            print 0\n        continue\n    if 'W' not in a:\n        if(k==0):\n            print 0\n        else:\n            print 1+2*min(k-1,n-1)\n        continue\n    l=[]\n    for i in a:\n        if i=='L':\n            s+=1\n        else:\n            if(s!=0):\n                l.append(s)\n            s=0\n    for i in range(n):\n        if i==0:\n            if a[i]=='W':\n                c+=1\n        elif a[i]=='W' and a[i-1]=='W':\n            c+=2\n        elif a[i]=='W':\n            c+=1\n    if(s!=0):\n        l.append(s)\n    arr=[]\n    if a[0]=='L':\n        arr.append(l.pop(0))\n    if a[-1]=='L':\n        arr.append(l.pop())\n    l.sort()\n    for i in l:\n        if i<=k:\n            k-=i\n            c+=2*i+1\n        else:\n            c+=2*k\n            k=0\n    for i in arr:\n        if i<=k:\n            k-=i\n            c+=2*i\n        else:\n            c+=2*k\n            k=0\n    print c\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\n\n\ndef compress(string):\n    string = string + \"#\"\n    n = len(string)\n    begin, end, cnt = 0, 1, 1\n    ans = []\n    while end < n:\n        if string[begin] == string[end]:\n            end, cnt = end + 1, cnt + 1\n        else:\n            ans.append((string[begin], cnt))\n            begin, end, cnt = end, end + 1, 1\n    return ans\n\n\nt = int(input())\nfor _ in range(t):\n    n, k = map(int, input().split())\n    s = input()[:-1]\n    \n    s = compress(s)\n\n    \n    w_groups = 0\n    w_cnt = 0\n    l_cnt = 0\n    li = []\n    for i, (char, cnt) in enumerate(s):\n        if char == \"W\":\n            w_groups += 1\n            w_cnt += cnt\n        if char == \"L\":\n            l_cnt += cnt\n            if 1 <= i < len(s) - 1:\n                li.append(cnt)\n\n    if w_cnt == 0:\n        print(max(min(k, l_cnt) * 2 - 1, 0))\n        continue\n        \n    ans = w_cnt * 2 - w_groups\n    ans += min(k, l_cnt) * 2\n\n    li.sort()\n    for val in li:\n        if k >= val:\n            ans += 1\n            k -= val\n    print(ans)"
        },
        {
            "language": 4,
            "solution": "\n\nimport java.awt.*;\nimport java.io.*;\nimport java.util.*;\nimport java.util.List;\n\npublic class Coding {\n\n\n    static long MOD = 1000000007;\n    static long[] fact = new long[302];\n    static long[] invFact = new long[302];\n    static long[][][] segmentTree = new long[4*300000 + 11][2][2];\n    static long MINVALUE = Integer.MIN_VALUE;\n\n\n    public static void main(String[] args) {\n        BufferedReader bi = new BufferedReader(new InputStreamReader(System.in));\n        BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(System.out));\n        //precompute();\n        try {\n            int t = Integer.parseInt(bi.readLine());\n            while (t > 0) {\n                String[] input = bi.readLine().split(\" \");\n                int n = Integer.parseInt(input[0].trim());\n                int k = Integer.parseInt(input[1].trim());\n                String s = bi.readLine();\n                int loss = 0;\n                int ans = 0;\n                boolean anyW = false;\n                int[] points = new int[n];\n                for(int i=0;i<s.length();++i) {\n                    if (s.charAt(i)=='L') {\n                        loss++;\n                        if (i==0) {\n                            points[i] = 0;\n                        } else {\n                            points[i] = points[i-1];\n                        }\n                    } else {\n                        anyW = true;\n                        if (i==0) {\n                            ans++;\n                            points[0] = 1;\n                        } else if (s.charAt(i-1)=='W') {\n                            ans+=2;\n                            points[i] = points[i-1]+2;\n                        } else {\n                            ans++;\n                            points[i] = points[i-1] +1;\n                        }\n                    }\n                }\n                //System.out.println(\"Initial ans is \" + ans);\n                if (loss<=k) {\n                    writer.append((2*n-1) + \"\\n\");\n                } else {\n                    int increase = 0;\n                    List<Integer> clusters = new ArrayList<>();\n                    int prev = -1;\n                    for(int i=0;i<n;++i) {\n                        if (s.charAt(i)=='W') {\n                            if (prev==-1) {\n                            } else {\n                                if (prev<i-1) {\n                                    clusters.add(i-prev-1);\n                                }\n                            }\n                            prev = i;\n                        }\n                    }\n                    Collections.sort(clusters);\n                    //System.out.println(clusters);\n                    for(int i=0;i<clusters.size();++i) {\n                        if (clusters.get(i)<=k) {\n                            k-=clusters.get(i);\n                            ans+=(2*clusters.get(i) + 1);\n                        } else {\n                            ans+=(2*k);\n                            k=0;\n                            break;\n                        }\n                    }\n                    if (anyW) {\n                        ans += 2 * k;\n                    } else {\n                        if (k>0) {\n                            ans += (2 * k - 1);\n                        }\n                    }\n                    writer.append((ans+increase) + \"\\n\");\n                }\n                writer.flush();\n                 t--;\n            }\n            writer.flush();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n\n    private static int gcd(int a, int b) {\n        if (a<b) {\n            return gcd(b, a);\n        }\n        if (a%b==0) {\n            return b;\n        }\n        return gcd(b, a%b);\n    }\n\n    private static void dfs(int cur, List<Integer>[] adj, int[] nodeCount, int[] maxChild,  int parent, int[] par) {\n        par[cur] = parent;\n        for(int i=0;i<adj[cur].size();++i) {\n            int nxt = adj[cur].get(i);\n            if (nxt!=parent) {\n                dfs(nxt, adj, nodeCount, maxChild, cur, par);\n                nodeCount[cur]+=nodeCount[nxt];\n                maxChild[cur] = Math.max(maxChild[cur], nodeCount[nxt]);\n            }\n        }\n    }\n\n    private static int findDist(int a, int b, int[] par) {\n        Map<Integer, Integer> dist = new HashMap<>();\n        int count = 0;\n        dist.put(a, 0);\n        while (par[a]!=-1) {\n            a = par[a];\n            count++;\n            dist.put(a, count);\n        }\n        count=0;\n        while(!dist.containsKey(b)) {\n            b = par[b];\n            count++;\n        }\n        return count+dist.get(b);\n    }\n\n    private static int findLongestPath(int cur, int prev, List<Integer>[] adj, int[] dep) {\n        int diameter = 0;\n        int highest = -1, second=-1;\n        for(int i=0;i<adj[cur].size();++i) {\n            int nxt = adj[cur].get(i);\n            if (nxt!=prev) {\n                diameter = Math.max(diameter, findLongestPath(nxt, cur, adj, dep));\n                if (dep[nxt]>highest) {\n                    second = highest;\n                    highest = dep[nxt];\n                } else if (dep[nxt]>second) {\n                    second = dep[nxt];\n                }\n            }\n        }\n        diameter = Math.max(diameter, highest + second + 2);\n        return diameter;\n    }\n\n    static long ncr(int n, int r) {\n        long num = fact[n];\n        long denom = (invFact[r]*invFact[n-r])%MOD;\n        //System.out.println(\"num is \" + num + \" denom is\" + denom);\n        return (num*denom)%MOD;\n    }\n\n    static long modExp(long a, long b, long mod) {\n        //System.out.println(\"a is \" + a + \" and b is \" + b);\n        if (a==1) return 1;\n        long ans = 1;\n        while (b!=0) {\n            if (b%2==1) {\n                ans = (ans*a)%mod;\n            }\n            a = (a*a)%mod;\n            b/=2;\n        }\n        return ans;\n    }\n\n    private static void precompute() {\n        fact[0] = 1;\n        invFact[0] = 1;\n        for(int i=1;i<=300000;++i) {\n            fact[i] = (fact[i-1]*i)%MOD;\n            invFact[i] = modExp(fact[i], MOD-2, MOD);\n        }\n    }\n}"
        },
        {
            "language": 3,
            "solution": "import os\nimport sys\nfrom io import BytesIO, IOBase\n\n_str = str\nBUFSIZE = 8192\n\n\ndef str(x=b''):\n    return x if type(x) is bytes else _str(x).encode()\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = 'x' in file.mode or 'r' not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b'\\n') + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode('ascii'))\n        self.read = lambda: self.buffer.read().decode('ascii')\n        self.readline = lambda: self.buffer.readline().decode('ascii')\n\n\ndef inp():\n    return sys.stdin.readline()\n\n\ndef mpint():\n    return map(int, sys.stdin.readline().split(' '))\n\n\ndef itg():\n    return int(sys.stdin.readline())\n\n\n# ############################## import\ndef rindex(array, value):\n    for i in range(len(array) - 1, -1, -1):\n        if array[i] == value:\n            return i\n    raise ValueError(\"{} is not in list\".format(value))\n\n\n# ############################## main\nfrom collections import Counter, defaultdict, deque\nfrom itertools import accumulate\n\n\ndef solve():\n    n, k = mpint()\n    s = list(inp())\n    w = s.count('W')\n    L = n - w\n    if w <= 1:\n        return max(0, min(n, (k + w)) * 2 - 1)\n    for i in range(1, n - 1):\n        if not k:\n            break\n        if s[i] == 'L' and s[i - 1] == s[i + 1] == 'W':\n            s[i] = 'W'\n            k -= 1\n            L -= 1\n    ans = 1 if s[0] == 'W' else 0\n    for i in range(1, n):\n        if s[i] == 'W':\n            if s[i - 1] == 'W':\n                ans += 2\n            else:\n                ans += 1\n\n    lose = []\n    c = 0\n    for i in range(s.index('W') + 1, rindex(s, 'W') + 1):\n        if s[i] == 'W':\n            if c:\n                lose.append(c)\n                c = 0\n        else:\n            c += 1\n    lose.sort(reverse=True)\n    while k and lose:\n        c = lose.pop()\n        if k >= c:\n            ans += c * 2 + 1\n            k -= c\n            L -= c\n        else:\n            ans += k * 2\n            k = 0\n    ans += min(k, L) * 2\n    return ans\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\n\nif __name__ == '__main__':\n    # print(\"YES\" if solve() else \"NO\")\n    # print(\"yes\" if solve() else \"no\")\n    # print(solve())\n    # solve()\n    for _ in range(itg()):\n        print(solve())\n        # solve()\n# Please check!\n"
        },
        {
            "language": 3,
            "solution": "from collections import defaultdict\nT = int(input())\nfor t in range(T):\n    n, k = map(int, input().split())\n    s = input()\n    ko = k\n\n    curr = 0\n    if s[0] == 'W':\n        curr += 1\n    gaps = defaultdict(int)\n    gap = 0\n    for i in range(1,n):\n\n        if s[i] == \"W\":\n            gaps[gap] += 1\n            gap = 0\n            curr+=1\n            if s[i-1] == \"W\":\n                curr += 1\n        else:\n            gap += 1\n    if curr == 0:\n        if k!=0:\n            curr -= 1\n    else:\n\n        fg = s.index(\"W\")\n        if fg > 1:\n            gaps[fg-1] -= 1\n\n\n    gaps_filled = 0\n    for x,y in sorted(gaps.items()):\n        if x == 0:\n            continue\n        if k//x >= y:\n            gaps_filled += y\n            k -= y*x\n        else:\n            gaps_filled += k//x\n            break\n    ko = min(ko, s.count(\"L\"))\n    ans = curr+ ko*2 + gaps_filled\n    print(ans)\n    # print(gaps,\"\\n######\")\n    \n\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\n\nfor _ in range(int(input())):\n    n,k=[int(i) for i in input().split()]\n    s=[i for i in input()]\n    if s.count('W')==0:\n        print(max(2*k-1,0))\n        continue\n    if s[0]=='W': ans=1\n    else: ans=0\n    for i in range(1,n):\n        if s[i-1]=='W' and s[i]=='W':\n            ans+=2\n        elif s[i-1]=='L' and s[i]=='W':\n            ans+=1\n    beg=0; end=0\n    while s and s[-1]=='L':\n        end+=1\n        s.pop()\n    s.reverse()\n    while s and s[-1]=='L':\n        beg+=1\n        s.pop()\n    s.reverse()\n    cnt=[]\n    for i in range(1,len(s)):\n        if s[i]=='L' and s[i-1]=='W':\n            cnt.append(1)\n        elif s[i]=='L' and s[i-1]=='L':\n            cnt[-1]+=1\n    cnt.sort()\n    cnt.reverse()\n    while k and cnt:\n        if k>=cnt[-1]:\n            k-=cnt[-1]\n            ans+=2*cnt[-1]+1\n            cnt.pop()\n        else:\n            ans+=2*k\n            k=0\n            cnt.pop()\n    ans+=2*min(k,end)\n    k-=min(k,end)\n    ans+=2*min(k,beg)\n    k-=min(k,beg)\n    print(ans)\n    \n        \n        \n        \n            \n            \n        \n        "
        },
        {
            "language": 3,
            "solution": "from collections import *\nt = int(input())\n\nwhile t:\n    t-= 1\n    n,k = [int(x) for x in input().split()]\n    s = input()\n    if 'W' not in s:\n        print(max(0,1+2*(k-1)))\n    else:\n        startl = s.find('W')\n        endl=s[::-1].find('W')\n        terminal = startl + endl\n\n        nns = ['W']\n        ans = 0\n        for i in range(startl+1,n - endl):\n            if s[i-1] == 'W' and s[i]=='W':\n                ans += 2\n            else:\n                # nns += s[i]\n                nns.append(s[i])\n        s = \"\".join(nns)\n        n = len(s)\n\n        d = defaultdict(lambda : 0)\n        pre = 0\n        for i in range(1, n):\n            if s[i] == 'W':\n                d[i-pre-1]  += 1\n                pre = i\n        # print(d)\n        ns = [\"W\"]\n        nrr = []\n        for key in d:\n            nrr.append([key,d[key]])\n        nrr.sort()\n        for i,j in nrr:\n            ns.append(('L'*i  +'W')*j)\n        ns = \"\".join(ns)\n        # print(ns)\n        def score():\n            ans= 1\n            left = k\n            N = len(ns)\n            pre = False\n            for i in range(1,N):\n                if ns[i] == 'W':\n                    if pre or ns[i-1] == 'W':\n                        ans += 2\n                    else:\n                        ans += 1\n                    continue\n                if left == 0:\n                    pre = False\n                    continue\n                pre  =True\n                ans += 2\n                # if i+1 < N and ns[i+1] == 'W':\n                #     ans += 1\n                left -= 1\n            return [ans,left]\n        # print(['multiple w', ans])\n        temp,left = score()\n        ans += temp\n        # print(['grredy ', temp])\n        # print(['terminal'terminal])\n\n        ans += 2*(min(left,terminal))\n        # print(['remaning ', 2*(min(left,terminal))])\n        print(max(ans,0))\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class ChessCheater {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        int T = in.nextInt();\n        for (int t = 0; t < T; t++) {\n            int N = in.nextInt(), K = in.nextInt();\n            String s = in.next();\n            boolean[] arr = new boolean[N];\n            for (int i = 0; i < N; i++) {\n                arr[i] = s.charAt(i) == 'W';\n            }\n            Queue<Integer> groups = new PriorityQueue<>();\n            int extra = 0, start = 0;\n            for (int i = 0; i < N; i++) {\n                if (!arr[i]) {\n                    int j = i;\n                    while (j < N && !arr[j]) {\n                        j++;\n                    }\n                    if (i > 0 && j < N) {\n                        groups.add(j - i);\n                    } else {\n                        extra += (j - i);\n                    }\n                    i = j - 1;\n                } else {\n                    int j = i;\n                    while (j < N && arr[j]) {\n                        j++;\n                    }\n                    start += (j - i) * 2 - 1;\n                    i = j - 1;\n                }\n            }\n            int res = 0;\n            if (extra == N && K > 0) {\n                res = K * 2 - 1;\n            } else {\n                while (!groups.isEmpty() && groups.peek() <= K) {\n                    int n = groups.poll();\n                    res += n * 2 + 1;\n                    K -= n;\n                }\n                if (!groups.isEmpty()) {\n                    res += K * 2;\n                    K = 0;\n                }\n                if (K > 0) {\n                    res += Math.min(K, extra) * 2;\n                }\n            }\n            System.out.println(start + res);\n        }\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nusing ll = int64_t;\nchar c[100001];\nvoid solve() {\n  int n, k;\n  scanf(\"%d%d%s\", &n, &k, c);\n  vector<array<int, 3>> l;\n  for (int i = 0; i < n; ++i) {\n    if (c[i] == 'W') {\n      if (i && c[i - 1] == 'L') l.back()[1] = i - 1;\n    } else {\n      if (l.empty() || c[i - 1] == 'W') l.push_back({i, 0, (int)l.size()});\n    }\n  }\n  if (c[n - 1] == 'L') l.back()[1] = n - 1;\n  if (l.size() == 0) {\n    printf(\"%d\\n\", n * 2 - 1);\n    return;\n  }\n  sort(l.begin(), l.end(), [&](array<int, 3> a, array<int, 3> b) -> bool {\n    if (a[0] == 0 || a[1] == n - 1) return false;\n    if (b[0] == 0 || b[1] == n - 1) return true;\n    return a[1] - a[0] < b[1] - b[0];\n  });\n  for (auto [start, end, i] : l) {\n    int d = end - start + 1;\n    if (k > d) {\n      k -= d;\n      for (int j = start; j <= end; ++j) c[j] = 'W';\n    } else {\n      if (start == 0)\n        for (int j = end, x = 0; x < k; --j, ++x) c[j] = 'W';\n      else\n        for (int j = start; j < start + k; ++j) c[j] = 'W';\n      break;\n    }\n  }\n  int ans = 0;\n  for (int i = 0; i < n; ++i) {\n    if (c[i] == 'W') {\n      if (i && c[i - 1] == 'W')\n        ans += 2;\n      else\n        ++ans;\n    }\n  }\n  printf(\"%d\\n\", ans);\n}\nint main() {\n  int tc = 1;\n  scanf(\"%d\", &tc);\n  for (int i = 1; i <= tc; ++i) {\n    solve();\n  }\n}\n"
        },
        {
            "language": 3,
            "solution": "t=input\nfor i in range(int(t())):\n    n,k=map(int,t().split())\n    a=sorted(map(len,t().strip('L').split('W')))\n    m=len(a)+k\n    while a and k>=a[0]:\n        k-=a.pop(0)\n    print((2*min(n,m-1)-len(a) or 1)-1)"
        },
        {
            "language": 3,
            "solution": "import os\nimport sys\nfrom io import BytesIO, IOBase\n\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\n\n\ndef input(): return sys.stdin.readline().rstrip(\"\\r\\n\")\n\n\nt = int(input())\nfor _ in range(t):\n    n,k = [int(i) for i in input().split()]\n    s = input()\n\n    if s.count('L') == len(s):\n        if k:\n            score = min(k-1,len(s)-1)*2+1\n        else:\n            score = 0\n        print(score)\n        continue\n\n    f = False\n    lc = 0\n    totl = 0\n    # lw = 0\n    d = []\n    score = 0\n    for p,i in enumerate(s):\n\n        if i=='L':\n            lc+=1\n            totl+=1\n            \n        else:\n            if lc:\n                if f:\n                    d.append(lc)\n                lc = 0\n            f = True\n            if p and s[p-1]=='W':\n                score+=2\n            else:\n                score+=1\n    d.sort(reverse=True)\n\n    while d:\n        if k>=d[-1]:\n            totl-=d[-1]\n            k-=d[-1]\n            score+=1+2*d[-1]\n            d.pop()\n        else:\n            break\n    score+=min(totl,k)*2\n    print(score)"
        },
        {
            "language": 4,
            "solution": "import java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Scanner;\n\npublic class B {\n    static Scanner sc = new Scanner(System.in);\n    static StringBuilder s;\n    static ArrayList<Integer> P1 = new ArrayList<>();\n\n    public static void main(String[] args){\n        int t = sc.nextInt();\n        while (t-->0){\n            s = new StringBuilder();\n            int n =sc.nextInt();\n            int k = sc.nextInt();\n            int lofL = 0;\n            int lofHead = 0;\n            boolean hasW = false;\n            int counter = 0;\n            s.append(sc.next());\n            P1 = new ArrayList<>();\n            for (int i =0;i<n;i++){\n                if (s.charAt(i)=='L') {\n                   if (hasW){\n                       lofL ++;\n                   }else {\n                       lofHead ++;\n                   }\n                }\n                if (s.charAt(i)=='W'){\n                    hasW = true;\n                    if (checkF(i)){\n                        counter +=2;\n                    }else {\n                        counter +=1;\n                        if (lofL!=0){\n                            P1.add(lofL);\n                        }\n                        lofL = 0;\n                    }\n                }\n            }\n            Collections.sort(P1);\n            int i =0;\n            while (k>0&&i<P1.size()){\n                int l = P1.get(i);\n                int tmp = k;\n                k -= l;\n                if (k>=0){\n                    counter += 2*l+1;\n                }else {\n                    counter += 2*tmp;\n                }\n                i++;\n            }\n            if (k>0){\n                if (!hasW){\n                    counter = 2*k-1;\n                }else{\n                    int z = lofHead+lofL;\n                    int tmp = k;\n                    k -= z;\n                    if (k>0){\n                        counter += 2*z;\n                    }else {\n                        counter += 2*tmp;\n                    }\n                }\n            }\n            System.out.println(counter);\n        }\n    }\n    public static int valueD(int i){\n        if (checkF(i)&&checkL(i)){\n            return 3;\n        }else if (checkF(i)||checkL(i)){\n            return 2;\n        }else {\n            return 1;\n        }\n    }\n    public static boolean checkF(int i){\n        if (i>0){\n            if (s.charAt(i-1)=='W'){\n                return true;\n            }\n        }\n        return false;\n    }\n    public static boolean checkL(int i){\n        if (i<s.length()-1){\n            if (s.charAt(i+1)=='W'){\n                return true;\n            }\n        }\n        return false;\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = iter(sys.stdin.read().splitlines()).__next__\n\nt = int(input())\nfor _ in range(t):\n    n, k = map(int, input().split())\n    s = input()\n    num_losses = s.count(\"L\")\n    if k >= num_losses:\n        print(2*n-1)\n        continue\n    # initial = 'L' if \n    # dp = [[] for _ in range(k)]\n    # greedily change losses before wins, then losses after wins\n    # try to get entire intervals changed\n    score = 1 if s[0] == \"W\" else 0\n    interval_lengths = [] if s[0] == \"W\" else [0]\n    for i in range(1, n):\n        if s[i] == \"W\":\n            if s[i-1] == \"W\":\n                score += 2\n            else:\n                score += 1\n                interval_lengths[-1] += i\n        elif s[i-1] == \"W\":\n            interval_lengths.append(-i)\n    if s[-1] == \"L\":\n        last_length = interval_lengths.pop()\n        last_length += n\n    else:\n        last_length = 0\n    if s[0] == \"L\" and interval_lengths:\n        first_length = interval_lengths.remove(interval_lengths[0])\n    if sum(interval_lengths) <= k:\n        # only will be missing some things from last_length or first_length\n        # so contiguous wins\n        num_wins = s.count(\"W\") + k\n        print(max(2*num_wins-1, 0))\n        continue\n    interval_lengths.sort(reverse=True)\n    # print(interval_lengths)\n    while k:\n        next_interval = interval_lengths.pop()\n        if k >= next_interval:\n            k -= next_interval\n            score += 2*next_interval+1\n        else:\n            score += 2*k\n            k = 0\n        # print(\"hello\", score)\n    print(score)"
        },
        {
            "language": 3,
            "solution": "######################################################\n############Created by Devesh Kumar###################\n#############devesh1102@gmail.com####################\n##########For CodeForces(Devesh1102)#################\n \n######################################################\n \n \n \nimport sys \nimport heapq \nimport copy\nimport math\nimport decimal\ninput = sys.stdin.readline\n# import sys.stdout.flush as flush\n# from decimal import *\n#heapq.heapify(li) \n#\n#heapq.heappush(li,4) \n#\n#heapq.heappop(li)\n#\n# &    Bitwise AND Operator    10 & 7 = 2\n# |    Bitwise OR Operator    10 | 7 = 15\n# ^    Bitwise XOR Operator    10 ^ 7 = 13\n \n# <<    Bitwise Left Shift operator    10<<2 = 40\n# >>    Bitwise Right Shift Operator\n# '''############ ---- Input Functions ---- #######Start#####'''\n# n = 100\n# parent = [-1 for i in range(n)]\n# def find(a):\n#     if parent[a] == a:\n#         return a\n#     else:\n#         parent[a] = find(parent[a])\n    \n# def union(a,b):\n \n \n \ndef binary_exponentiation(a,b):#a^b\n    ans = 1\n    while(b!=0):\n        bit = b%2\n        if bit == 1:\n            ans =ans*a\n        a = a*a\n        b = b//2\n    return ans\n    # print(lsp )\ndef inp():\n    return(int(input()))\ndef inlt(): \n    return(list(map(int,input().split())))\ndef insr():\n    s = input()\n    return(list(s[:len(s) - 1]))\ndef insr2():\n    s = input()\n    s = list(s[:len(s) - 1])\n    s = [ord(s[i]) - ord(\"a\") for i in range(len(s))]\n    return s\ndef invr():\n    return(map(int,input().split()))\n############ ---- Input Functions ---- #######End\n# #####   \n \n \nans = 0\ndef pr_list(a):\n    print( *a , sep=\" \")\n \ndef swap(a,b):\n    temp = a\n    a = b\n    b = temp\n    return [ a,b]\n    # return [b,a]\ndef pri(a,b):\n    s = \"? \" + str(a) + \" \" + str(b)\n    print(s)\n    sys.stdout.flush()\nresult = []\ndef nCk(arr,itr,k,n):\n    if len(arr)  == k:\n        result.append(arr)\n        return\n    if len(arr)>k or itr == n+1:\n        return\n    nCk(arr + [itr],itr+1,k,n)\n    nCk(arr,itr+1,k,n)\n    return\ndef nPk(arr,itr,k,n):\n    if len(arr) ==k:\n        result.append(arr)\n        return\n    if len(arr)>k or itr == n+1:\n        return\n    for i in range(len(arr)+1):\n        nPk(arr[0:i] + [itr] + arr[i: len(arr)],itr+1,k,n)\n    nPk(arr,itr+1,k,n)\n    return\ndef main():\n    tests   =  inp()\n    # tests = 1\n    # mod =  998244353\n    mod = 1000000007\n    limit = 10**18\n    ans = 0\n    stack = []\n    arr = []\n    heapq.heapify(arr) \n    # print(dp)\n    for test in range(tests):\n        n,k = inlt()\n        s= insr()\n        change = []\n        left = 0\n        start=  0\n        for i in range(n):\n            if s[i] == \"W\":\n                start = i\n                break\n            left = left + 1\n        pre = start\n        for i in range(start,n):\n            if s[i] == \"W\":\n                if (i - pre) > 0:\n                    change.append([i-pre-1,pre +1,i-1])\n                pre = i\n        change.sort()\n        # print(start,change)\n        for m in change:\n            [val,i,j] = m\n            for n in range(i,j+1):\n                if  k == 0:\n                    break\n                s[n] =\"W\"\n                k = k -1\n            if  k == 0:\n                break\n        # print(s,1)\n        for m in range(start-1,-1,-1):\n            if k == 0:\n                break\n            s[m] = \"W\"\n            k = k- 1\n        # print(s,2)\n        for m in range(0,len(s)):\n            if k == 0:\n                break\n            if s[m] == \"L\":\n                s[m] = \"W\"\n                k = k- 1\n        # print(s,3)\n        score = 0\n        streak = 0\n        for i in s:\n            if i == \"W\":\n                if streak == 1:\n                    score = score + 2\n                else:\n                    score= score + 1\n                streak = 1\n            else:\n                streak = 0\n        print(score)\n\n        \n        \n                \n\n        \n \n \nif __name__== \"__main__\":\n    main()\n# return least index x such that A[x] > target, or len(A) if no such index exists"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.Comparator;\nimport java.util.List;\nimport java.util.StringTokenizer;\n\npublic class B {\n    private static FastReader fr = new FastReader();\n    private static PrintWriter out=new PrintWriter(System.out);\n\n    public static void main(String[] args) throws IOException {\n        StringBuilder sb = new StringBuilder();\n        // code goes here\n        int t = fr.nextInt();\n        while (t-- > 0){\n            int n = fr.nextInt();\n            int k = fr.nextInt();\n            String s = fr.next();\n\n            if(n == 1){\n                int res = 0;\n                if(s.charAt(0) == 'W'){\n                    res++;\n                }\n                if(res == 1){\n                    sb.append(res).append(\"\\n\");\n                    continue;\n                }\n                if(k > 0){\n                    sb.append(\"1\\n\");\n                    continue;\n                }\n                sb.append(res).append(\"\\n\");\n                continue;\n            }\n\n            List<Integer> wins = new ArrayList<>();\n            int prev = -1;\n            long result = 0;\n            int l = 0;\n            for(int i = 0; i < n; i++){\n                if(s.charAt(i) == 'L') l++;\n                if(s.charAt(i) == 'W'){\n                    if( i ==  0){\n                        result++;\n                    } else {\n                        if(s.charAt(i - 1) == 'L') result++;\n                        else result += 2;\n                    }\n                }\n                if(s.charAt(i) == 'W'){\n                    if(prev == -1){\n                        wins.add(i);\n                    } else {\n                        if(prev != i - 1){\n                            wins.add(i);\n                        }\n                    }\n                    prev = i;\n                } else {\n                    if(prev != -1){\n                        wins.add(prev);\n                        prev = -1;\n                    }\n                }\n            }\n            if(l == n){\n                if(k == 0){\n                    sb.append(\"0\\n\");\n                    continue;\n                }\n                sb.append((2*Math.min(n, k) - 1)).append(\"\\n\");\n                continue;\n            }\n            wins.add(n);\n            List<Pair<Integer, Integer>> lens = new ArrayList<>();\n            lens.add(new Pair<Integer, Integer>(wins.get(0), 0));\n            for(int i = 1; i < wins.size(); i++){\n                if(i % 2 == 1) continue;\n                if(wins.get(i) - wins.get(i - 1) - 1 < 0) continue;\n                if(i != wins.size() - 1)\n                lens.add(new Pair<>(wins.get(i) - wins.get(i - 1) - 1, 1));\n                else lens.add(new Pair<>(wins.get(i) - wins.get(i - 1) - 1, 0));\n            }\n            lens.sort(new Comparator<Pair<Integer, Integer>>() {\n                @Override\n                public int compare(Pair<Integer, Integer> o1, Pair<Integer, Integer> o2) {\n                    if(!o1.second.equals(o2.second))\n                    return o2.second - o1.second;\n                    else return o1.first - o2.first;\n                }\n            });\n            for(int i = 0; i < lens.size(); i++){\n                if(k == 0) break;\n                int x = Math.min(k, lens.get(i).first);\n                if(x == 0) continue;\n                k -= x;\n                if(x == lens.get(i).first && lens.get(i).second == 1){\n                    result += (x * 2) + 1;\n                } else {\n                    result += (x * 2);\n                }\n            }\n            sb.append(result).append(\"\\n\");\n        }\n        System.out.print(sb.toString());\n    }\n\n    static class FastReader{\n        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n        StringTokenizer st=new StringTokenizer(\"\");\n\n        public String next() {\n            while (!st.hasMoreTokens())\n                try {\n                    st=new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            return st.nextToken();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        public int[] nextIntArray(int n) {\n            int[] a=new int[n];\n            for (int i=0; i<n; i++) a[i]=nextInt();\n            return a;\n        }\n\n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        public long[] nextLongArray(int n) {\n            long[] a=new long[n];\n            for (int i=0; i<n; i++) a[i]=nextLong();\n            return a;\n        }\n    }\n\n    static class Pair<A, B>{\n        A first;\n        B second;\n        public Pair(A first, B second){\n            this.first = first;\n            this.second = second;\n        }\n    }\n\n    static long mod(String num, long a)\n    {\n        // Initialize result\n        long res = 0;\n\n        // One by one process all digits of 'num'\n        for (int i = 0; i < num.length(); i++)\n            res = (res*10 +  num.charAt(i) - '0') %a;\n\n        return res;\n    }\n\n    static long binomialCoeff(long n, long k, long MOD)\n    {\n        long res = 1;\n\n        // Since C(n, k) = C(n, n-k)\n        if (k > n - k)\n            k = n - k;\n\n        // Calculate value of\n        // [n * (n-1) *---* (n-k+1)] / [k * (k-1) *----* 1]\n        for (int i = 0; i < k; ++i) {\n            res *= (n - i);\n            res /= (i + 1);\n            res %= MOD;\n        }\n\n        return res;\n    }\n\n    static long power(long x, long y, long p)\n    {\n\n        // Initialize result\n        long res = 1;\n\n        // Update x if it is more than or\n        // equal to p\n        x = x % p;\n\n        while (y > 0) {\n\n            // If y is odd, multiply x\n            // with result\n            if (y % 2 == 1)\n                res = (res * x) % p;\n\n            // y must be even now\n            y = y >> 1; // y = y/2\n            x = (x * x) % p;\n        }\n\n        return res;\n    }\n\n    // Returns n^(-1) mod p\n    static long modInverse(long n, long p)\n    {\n        return power(n, p - 2, p);\n    }\n\n    // Returns nCr % p using Fermat's\n    // little theorem.\n    static long nCrModPFermat(int n, int r,\n                              long p)\n    {\n\n        // Base case\n        if (r == 0)\n            return 1;\n\n        // Fill factorial array so that we\n        // can find all factorial of r, n\n        // and n-r\n        long[] fac = new long[n + 1];\n        fac[0] = 1;\n\n        for (int i = 1; i <= n; i++)\n            fac[i] = fac[i - 1] * i % p;\n\n        return (fac[n] * modInverse(fac[r], p)\n                % p * modInverse(fac[n - r], p)\n                % p)\n                % p;\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\n#pragma comment(linker, \"/stack:200000000\")\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native\")\nusing namespace std;\nint main() {\n  cin.sync_with_stdio(0);\n  cin.tie(0);\n  cin.exceptions(cin.failbit);\n  int t;\n  cin >> t;\n  while (t--) {\n    int n, k;\n    cin >> n >> k;\n    string in;\n    cin >> in;\n    int score = 0;\n    int totl = 0;\n    for (int i = 0; i < (n); ++i)\n      if (in[i] == 'L') totl++;\n    if (totl == n) {\n      if (k == 0)\n        cout << 0 << '\\n';\n      else\n        cout << 2 * min(n, k) - 1 << '\\n';\n      continue;\n    }\n    for (int i = 0; i < (n); ++i) {\n      if (i == 0) {\n        if (in[i] == 'W') score++;\n      } else {\n        if (in[i] == 'W') {\n          if (in[i - 1] == 'W')\n            score += 2;\n          else\n            score++;\n        }\n      }\n    }\n    int s = 0, e = 0;\n    bool og = false;\n    vector<int> ps;\n    while (s < n) {\n      if (in[s] == 'L') {\n        s++;\n      } else {\n        e = s + 1;\n        while (e < n && in[e] == 'L') e++;\n        if (e - s - 1 == 0 || e == n) {\n          s++;\n          continue;\n        }\n        ps.push_back(e - s - 1);\n        s = e;\n      }\n    }\n    sort(ps.begin(), ps.end());\n    for (int it : ps) {\n      if (k >= it) {\n        k -= it;\n        totl -= it;\n        score += 2 * it + 1;\n      } else {\n        score += 2 * k;\n        totl -= k;\n        k = 0;\n        break;\n      }\n    }\n    if (k != 0) score += 2 * min(k, totl);\n    cout << score << '\\n';\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "t=int(input())\nfor qwe in range(t):\n    [n,k]=[int(j) for j in input().split()]\n    s=input()\n    l=list(s)\n    c=0\n    a=[]\n    if l[0]==\"W\":\n        ans=1\n    else:\n        ans=0\n    for i in range(1,n):\n        if l[i]==\"W\":\n            if l[i-1]==\"W\":\n                ans+=2\n            else:\n                ans+=1\n    m=-1\n    fl=[]\n    for i in range(n):\n        if l[i]==\"W\":\n            if m==0 and c>0:\n                a.append(c)\n            elif c>0:\n                fl.append(c)\n            c=0\n            m=0\n        else:\n            c+=1\n    fl.append(c)\n    a.sort()\n    for j in a:\n        if k>=j:\n            ans+=(2*j+1)\n            k-=j\n        else:\n            ans+=2*k\n            k=0\n    if ans==0:\n        ans=max(2*k-1,0)\n    else:\n        ans+=2*(min(sum(fl),k))\n    print(ans)"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader; \nimport java.io.IOException; \nimport java.io.InputStreamReader;\nimport java.util.*;\n\npublic class A\n{ \n\tstatic class FastReader \n\t{ \n\t\tBufferedReader br; \n\t\tStringTokenizer st; \n\n\t\tpublic FastReader() \n\t\t{ \n\t\t\tbr = new BufferedReader(new\n\t\t\t\t\tInputStreamReader(System.in)); \n\t\t} \n\n\t\tString next() \n\t\t{ \n\t\t\twhile (st == null || !st.hasMoreElements()) \n\t\t\t{ \n\t\t\t\ttry\n\t\t\t\t{ \n\t\t\t\t\tst = new StringTokenizer(br.readLine()); \n\t\t\t\t} \n\t\t\t\tcatch (IOException e) \n\t\t\t\t{ \n\t\t\t\t\te.printStackTrace(); \n\t\t\t\t} \n\t\t\t} \n\t\t\treturn st.nextToken(); \n\t\t} \n\n\t\tint nextInt() \n\t\t{ \n\t\t\treturn Integer.parseInt(next()); \n\t\t} \n\n\t\tlong nextLong() \n\t\t{ \n\t\t\treturn Long.parseLong(next()); \n\t\t} \n\n\t\tdouble nextDouble() \n\t\t{ \n\t\t\treturn Double.parseDouble(next()); \n\t\t} \n\n\t\tString nextLine() \n\t\t{ \n\t\t\tString str = \"\"; \n\t\t\ttry\n\t\t\t{ \n\t\t\t\tstr = br.readLine(); \n\t\t\t} \n\t\t\tcatch (IOException e) \n\t\t\t{ \n\t\t\t\te.printStackTrace(); \n\t\t\t} \n\t\t\treturn str; \n\t\t} \n\t} \n\n\tstatic void sort(int[] a)\n\t{\n\t\tArrayList<Integer> l=new ArrayList<>();\n\t\tfor(int n:a)l.add(n);\n\t\tCollections.sort(l);\n\t\tfor(int i=0;i<a.length;i++)\n\t\ta[i]=l.get(i);\n\t}\n\n\tpublic static void main(String[] args) \n\t{\n\t\tFastReader sc=new FastReader();\n\t\tint t=sc.nextInt();\n\t\t\n\t\twhile(t-->0)\n\t\t{\n\t\t\tint n = sc.nextInt();\n\t\t\tint k = sc.nextInt();\n\t\t\tchar ss[] = sc.next().toCharArray();\n\t\t\tint count = 0;\n\t\t\tint ans = 0;\n\t\t\tboolean prev = false;\n\t\t\tfor(char e : ss) {\n\t\t\t\tif(e == 'L') {\n\t\t\t\t\tcount++;\n\t\t\t\t\tprev = false;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif(prev)\n\t\t\t\t\t\tans+=2;\n\t\t\t\t\telse {\n\t\t\t\t\t\tans++;\n\t\t\t\t\t\tprev = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(count == n) {\n\t\t\t\tif(k == 0) {\n\t\t\t\t\tSystem.out.println(0);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tans+=k*2-1;\n\t\t\t\tSystem.out.println(ans);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(count <= k) {\n\t\t\t\tans = 2*n-1;\n\t\t\t\tSystem.out.println(ans);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tans+=k*2;\n\t\t\tArrayList<Integer> lis = new ArrayList<Integer>();\n\t\t\tint i=-1,j=0;\n\t\t\twhile(j<n&&i<n) {\n\t\t\t\tif(ss[j] == 'W' && i == -1) {\n\t\t\t\t\ti = j;\n\t\t\t\t\tj++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(i == -1) {\n\t\t\t\t\tj++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(ss[i] == 'W' && ss[j] == 'W') {\n\t\t\t\t\ti = j;\n\t\t\t\t\tj++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(ss[j] == 'L' && j+1<n && ss[j+1]=='W' && i != -1 && j-i > 0) {\n\t\t\t\t\tlis.add(j-i);\n\t\t\t\t\ti = j+1;\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tCollections.sort(lis);\n\t\t\tint point = 0;\n\t\t\tfor(int e : lis) {\n\t\t\t\tif(k>=e) {\n\t\t\t\t\tpoint++;\n\t\t\t\t\tk-=e;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t\t\t\n\t\t\t}\n\t\t\tSystem.out.println(ans+point);\n \n\t\t}\n\n\n\t\t\n\t}\n\n}\n\n\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.*;\npublic class ChessCheater {\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tScanner sc=new Scanner(System.in);\n\t\tint t=sc.nextInt();\n\t\twhile(t-->0) {\n\t\t\tint n=sc.nextInt();\n\t\t\tint k=sc.nextInt();\n\t\t\tsc.nextLine();\n\t\t\tchar[]arr=sc.nextLine().toCharArray();\n\t\t\tint f=0,l=0;\n\t\t\tfor(int i=0;i<n;i++) {\n\t\t\t\tif(arr[i]!='L') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tf++;\n\t\t\t}\n\t\t\tfor(int j=n-1;j>=0;j--) {\n\t\t\t\tif(arr[j]!='L') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tl++;\n\t\t\t}\n\t\t\tif(f==n) {\n\t\t\t\tSystem.out.println(k>0 ? 2*k-1:0);\n\t\t\t}else {\n\t\t\tint c=0;\n\t\t\tList<Integer>res=new ArrayList<>();\n\t\t\tfor(int i=f+1;i<n;i++) {\n\t\t\t\tif(arr[i]=='W' && c!=0) {\n\t\t\t\t\tres.add(c);\n\t\t\t\t\tc=0;\n\t\t\t\t}else if(arr[i]=='L') {\n\t\t\t\t\tc++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlong count=(arr[0]=='W')?1:0;\n\t\t\tfor(int i=1;i<n;i++) {\n\t\t\t\tif(arr[i]=='W') {\n\t\t\t\t\tif(arr[i-1]=='W') {\n\t\t\t\t\t\tcount+=2;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tCollections.sort(res);\n\t\t\tfor(int val:res) {\n\t\t\t\tif(val<=k) {\n\t\t\t\t\tcount+=2*val+1;\n\t\t\t\t\tk=k-val;\n\t\t\t\t}else {\n\t\t\t\t\tcount+=2*k;\n\t\t\t\t\tk=0;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif(k>0) {\n\t\t\t\tif(f<=k) {\n\t\t\t\t\tk=k-f;\n\t\t\t\t\tcount+=2*f;\n\t\t\t\t}else {\n\t\t\t\t\tcount+=2*k;\n\t\t\t\t\tk=0;\n\t\t\t\t}\n\t\t\t\tif(k>0) {\n\t\t\t\t\tif(l<=k) {\n\t\t\t\t\t\tk=k-l;\n\t\t\t\t\t\tcount+=2*l;\n\t\t\t\t\t}else {\n\t\t\t\t\t\tcount+=2*k;\n\t\t\t\t\t\tk=0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(count);\n\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\n\t}\n\n}\n"
        },
        {
            "language": 3,
            "solution": "I=input\nfor _ in[0]*int(I()):\n n,k=map(int,I().split());s=I();a=sorted(map(len,filter(None,s.strip('L').split('W'))));r=k\n while a and a[0]<=r:r-=a.pop(0)\n print((2*min(n,s.count('W')+k)-len(a)or 1)-1)"
        },
        {
            "language": 3,
            "solution": "def score(a,n):\n  score = 0 if a[0]=='L' else 1\n  for i in range(1,n):\n    if a[i]==a[i-1] =='W':\n      score+=2\n    elif a[i]=='W':\n      score+=1\n  return score\n  \nt = int(input())\n\nfor _  in range(t):\n  n,k = map(int,input().split())\n  s = input()\n  mylist = []\n  x = 0\n  while(x<n and s[x]=='L'):\n    x+=1\n  count = 0\n  while(x<n):\n    if(s[x]=='W'):\n      if count!=0:\n        mylist.append(count)\n        count=0\n    else:\n      count+=1\n    x+=1\n  mylist.sort()\n  ans = 0\n  for i in mylist:\n    k-=i\n    if k==0:\n      ans+= 2*i + 1\n      break\n    elif k>0:\n      ans+=2*i+1\n    else:\n      ans+=2*i\n      break\n  counter = 0\n  while(counter<n and s[counter]=='L'):\n    counter+=1\n  scounter = 0\n  while( scounter<n and s[n-1-scounter]=='L' ):\n    scounter+=1\n  ans+=score(s,n)\n  if ans==0 and k>0:\n    ans-=1\n  if k<=(scounter+counter):\n    ans+=2*k\n  else:\n    ans+=2*(scounter+counter)\n  # print(\"ans\",ans)\n  print(ans)\n\n    \n"
        }
    ]
}