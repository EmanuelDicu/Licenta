{
    "name": "221_C. Little Elephant and Problem",
    "source": "CODEFORCES",
    "description": "The Little Elephant has got a problem \u2014 somebody has been touching his sorted by non-decreasing array a of length n and possibly swapped some elements of the array.\n\nThe Little Elephant doesn't want to call the police until he understands if he could have accidentally changed the array himself. He thinks that he could have accidentally changed array a, only if array a can be sorted in no more than one operation of swapping elements (not necessarily adjacent). That is, the Little Elephant could have accidentally swapped some two elements.\n\nHelp the Little Elephant, determine if he could have accidentally changed the array a, sorted by non-decreasing, himself.\n\nInput\n\nThe first line contains a single integer n (2 \u2264 n \u2264 105) \u2014 the size of array a. The next line contains n positive integers, separated by single spaces and not exceeding 109, \u2014 array a.\n\nNote that the elements of the array are not necessarily distinct numbers.\n\nOutput\n\nIn a single line print \"YES\" (without the quotes) if the Little Elephant could have accidentally changed the array himself, and \"NO\" (without the quotes) otherwise.\n\nExamples\n\nInput\n\n2\n1 2\n\n\nOutput\n\nYES\n\n\nInput\n\n3\n3 2 1\n\n\nOutput\n\nYES\n\n\nInput\n\n4\n4 3 2 1\n\n\nOutput\n\nNO\n\nNote\n\nIn the first sample the array has already been sorted, so to sort it, we need 0 swap operations, that is not more than 1. Thus, the answer is \"YES\".\n\nIn the second sample we can sort the array if we swap elements 1 and 3, so we need 1 swap operation to sort the array. Thus, the answer is \"YES\".\n\nIn the third sample we can't sort the array in more than one swap operation, so the answer is \"NO\".",
    "difficulty": "C",
    "tags": [
        "implementation",
        "sortings"
    ],
    "rating": 1300,
    "public_test": [
        {
            "input": "3\n3 2 1\n",
            "output": "YES"
        },
        {
            "input": "4\n4 3 2 1\n",
            "output": "NO"
        },
        {
            "input": "2\n1 2\n",
            "output": "YES"
        }
    ],
    "generated_test": [
        {
            "input": "10\n8 4 4 4 10 4 4 4 4 4\n",
            "output": "NO\n"
        },
        {
            "input": "9\n7 2 8 8 10 10 10 10 1000000000\n",
            "output": "YES\n"
        },
        {
            "input": "5\n1 3 0 3 3\n",
            "output": "NO\n"
        },
        {
            "input": "5\n1 0 7 3 5\n",
            "output": "NO\n"
        },
        {
            "input": "11\n2 2 2 2 2 2 1 2 2 2 1\n",
            "output": "NO\n"
        },
        {
            "input": "6\n1 4 3 6 2 3\n",
            "output": "NO\n"
        },
        {
            "input": "50\n6 7 8 4 10 3 2 7 0 3 10 3 4 7 2 3 7 4 10 6 8 10 9 6 5 10 9 6 1 8 9 4 3 7 3 10 5 3 10 1 6 10 6 7 10 7 1 5 9 5\n",
            "output": "NO\n"
        },
        {
            "input": "6\n1 2 3 1 2 2\n",
            "output": "NO\n"
        },
        {
            "input": "5\n1 0 5 2 3\n",
            "output": "NO\n"
        },
        {
            "input": "4\n4 2 3 3\n",
            "output": "NO\n"
        },
        {
            "input": "2\n2 2\n",
            "output": "YES\n"
        },
        {
            "input": "10\n1 2 9 4 5 6 7 8 3 0\n",
            "output": "NO\n"
        },
        {
            "input": "5\n1 3 1 3 2\n",
            "output": "NO\n"
        },
        {
            "input": "4\n3 6 2 2\n",
            "output": "NO\n"
        },
        {
            "input": "9\n1 4 3 5 4 6 7 8 9\n",
            "output": "NO\n"
        },
        {
            "input": "47\n6 277 329 393 410 432 434 505 984 545 650 896 949 1053 1543 1554 1599 1648 1927 1976 1998 2141 2248 2384 2542 2638 2995 3155 3216 3355 3409 3597 3851 3940 4169 4176 4378 4378 4425 4490 4627 4986 5025 5033 5374 5453 5644\n",
            "output": "NO\n"
        },
        {
            "input": "6\n6 1 3 3 4 2\n",
            "output": "NO\n"
        },
        {
            "input": "4\n4 0 2 3\n",
            "output": "NO\n"
        },
        {
            "input": "4\n3 4 1 0\n",
            "output": "NO\n"
        },
        {
            "input": "9\n1 8 7 7 7 7 11 8 3\n",
            "output": "NO\n"
        },
        {
            "input": "100\n1 7 7 8 15 25 26 31 37 41 43 43 46 64 65 82 94 102 102 103 107 124 125 131 140 145 146 150 151 160 160 161 162 165 169 175 182 191 201 211 214 216 218 304 224 229 236 241 244 249 252 269 270 271 273 289 285 295 222 307 312 317 319 319 320 321 325 330 340 341 345 347 354 356 366 366 375 376 380 383 386 398 401 407 414 417 423 426 431 438 440 444 446 454 457 458 458 466 466 472\n",
            "output": "NO\n"
        },
        {
            "input": "5\n4 3 4 5 1\n",
            "output": "NO\n"
        },
        {
            "input": "4\n2 0 1 1\n",
            "output": "NO\n"
        },
        {
            "input": "3\n2 1 2\n",
            "output": "YES\n"
        },
        {
            "input": "6\n3 4 5 6 9 2\n",
            "output": "NO\n"
        },
        {
            "input": "4\n3 1 2 4\n",
            "output": "NO\n"
        },
        {
            "input": "4\n2 4 1 1\n",
            "output": "NO\n"
        },
        {
            "input": "4\n5 15 12 6\n",
            "output": "YES\n"
        },
        {
            "input": "4\n1000000000 1 1000000000 0\n",
            "output": "YES\n"
        },
        {
            "input": "6\n6 1 2 3 4 1\n",
            "output": "YES\n"
        },
        {
            "input": "5\n2 2 2 1 2\n",
            "output": "YES\n"
        },
        {
            "input": "5\n1 2 3 2 2\n",
            "output": "YES\n"
        },
        {
            "input": "3\n1 2 2\n",
            "output": "YES\n"
        },
        {
            "input": "4\n1 2 1 4\n",
            "output": "YES\n"
        },
        {
            "input": "3\n1 1 2\n",
            "output": "YES\n"
        },
        {
            "input": "128\n1 2 4 6 8 17 20 20 23 33 43 49 49 49 52 73 74 75 82 84 85 87 90 91 102 103 104 105 111 111 401 142 142 152 155 160 175 176 178 181 183 184 101 188 191 193 326 202 202 214 224 225 236 239 240 243 246 247 249 249 257 257 261 264 265 271 277 281 284 284 286 289 290 296 297 303 305 307 307 317 318 320 322 200 332 342 393 349 350 350 369 375 381 381 385 385 387 393 347 397 398 115 402 407 407 408 410 411 411 416 423 426 429 429 430 440 447 449 463 464 466 471 473 480 480 483 497 503\n",
            "output": "NO\n"
        },
        {
            "input": "7\n3 4 1 2 3 5 4\n",
            "output": "NO\n"
        },
        {
            "input": "5\n1 5 4 4 1\n",
            "output": "YES\n"
        },
        {
            "input": "5\n2 2 1 6 3\n",
            "output": "NO\n"
        },
        {
            "input": "5\n4 1 1 0 1\n",
            "output": "NO\n"
        },
        {
            "input": "5\n3 3 2 2 2\n",
            "output": "NO\n"
        },
        {
            "input": "5\n5 1 2 3 3\n",
            "output": "NO\n"
        },
        {
            "input": "4\n3 2 1 3\n",
            "output": "YES\n"
        },
        {
            "input": "10\n2 2 4 4 4 5 5 7 7 10\n",
            "output": "YES\n"
        },
        {
            "input": "9\n3 3 0 2 2 2 1 1 1\n",
            "output": "NO\n"
        },
        {
            "input": "11\n1 1 3 4 5 1 2 3 4 5 1\n",
            "output": "NO\n"
        },
        {
            "input": "10\n4 5 11 12 13 14 16 2 16 18\n",
            "output": "NO\n"
        },
        {
            "input": "4\n2 0 2 1\n",
            "output": "NO\n"
        },
        {
            "input": "5\n3 4 1 5 4\n",
            "output": "NO\n"
        },
        {
            "input": "4\n3 2 1 0\n",
            "output": "NO\n"
        },
        {
            "input": "5\n1 1 3 2 4\n",
            "output": "YES\n"
        },
        {
            "input": "3\n2 6 1\n",
            "output": "NO\n"
        },
        {
            "input": "5\n1 4 2 2 1\n",
            "output": "YES\n"
        },
        {
            "input": "8\n3 6 6 11 6 6 4 9\n",
            "output": "NO\n"
        },
        {
            "input": "6\n2 4 2 2 3 2\n",
            "output": "YES\n"
        },
        {
            "input": "5\n1 4 1 1 1\n",
            "output": "YES\n"
        },
        {
            "input": "5\n1 0 1 1 2\n",
            "output": "YES\n"
        },
        {
            "input": "5\n1 4 3 2 0\n",
            "output": "NO\n"
        },
        {
            "input": "6\n4 5 0 4 2 6\n",
            "output": "NO\n"
        },
        {
            "input": "4\n2 2 1 5\n",
            "output": "YES\n"
        },
        {
            "input": "20\n38205814 119727790 127848638 189351562 1032753913 284688399 318826601 326499046 387938139 395996609 494453625 551393005 561264192 573569187 600766727 606718722 730549586 261502770 751513115 943272321\n",
            "output": "NO\n"
        }
    ],
    "solution": [
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid swap(int &x, int &y) {\n  int t = x;\n  x = y;\n  y = t;\n}\nint main() {\n  int n;\n  cin >> n;\n  int *p = new int[n];\n  vector<int> k;\n  for (int i = 0; i < n; i++) {\n    cin >> p[i];\n    k.push_back(p[i]);\n  }\n  sort(k.begin(), k.end());\n  int count = 0;\n  for (int i = 0; i < n; i++)\n    if (p[i] != k[i]) count++;\n  if (count < 3)\n    cout << \"YES\";\n  else\n    cout << \"NO\";\n  delete[] p;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false), cin.tie(0);\n  int n;\n  cin >> n;\n  vector<int> sorted(n);\n  vector<int> other(n);\n  for (int i = 0; i < n; i++) {\n    cin >> sorted[i];\n    other[i] = sorted[i];\n  }\n  sort(sorted.begin(), sorted.end());\n  bool can = 1;\n  for (int i = 0; i < n; i++) {\n    if (sorted[i] != other[i]) {\n      if (!can) {\n        cout << \"NO\\n\";\n        return 0;\n      }\n      for (int j = n - 1; j > i; j--) {\n        if (other[j] == sorted[i]) {\n          swap(other[j], other[i]);\n          break;\n        }\n      }\n      can = 0;\n    }\n  }\n  cout << \"YES\\n\";\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.OutputStreamWriter;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.StringTokenizer;\n\npublic class Main {\n\tvoid solve() throws IOException {\n\t\tint n = nextInt();\n\t\tint[] a = new int[n];\n\t\tInteger[] b = new Integer[n];\n\t\tfor (int i = 0; i < n; ++i) {\n\t\t\ta[i] = nextInt();\n\t\t\tb[i] = a[i];\n\t\t}\n\t\tArrays.sort(b);\n\t\tint cnt = 0;\n\t\tfor (int i = 0; i < n; ++i)\n\t\t\tif (a[i] != b[i])\n\t\t\t\t++cnt;\n\t\tif (cnt <= 2)\n\t\t\twriter.println(\"YES\");\n\t\telse\n\t\t\twriter.println(\"NO\");\n\t}\n\n\tBufferedReader reader;\n\tPrintWriter writer;\n\tStringTokenizer tokenizer;\n\n\tString nextToken() throws IOException {\n\t\twhile (tokenizer == null || !tokenizer.hasMoreTokens())\n\t\t\ttokenizer = new StringTokenizer(reader.readLine());\n\t\treturn tokenizer.nextToken();\n\t}\n\n\tint nextInt() throws IOException {\n\t\treturn Integer.parseInt(nextToken());\n\t}\n\n\tpublic void run() {\n\t\ttry {\n\t\t\treader = new BufferedReader(new InputStreamReader(System.in));\n\t\t\ttokenizer = null;\n\t\t\twriter = new PrintWriter(new OutputStreamWriter(System.out));\n\t\t\tsolve();\n\t\t\treader.close();\n\t\t\twriter.close();\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t\tSystem.exit(1);\n\t\t}\n\t}\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tnew Main().run();\n\t}\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.FileNotFoundException;\nimport java.io.FileReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\nimport java.util.Random;\nimport java.util.StringTokenizer;\nimport java.util.TreeMap;\n\npublic class P {\n\n\tstatic class Triple implements Comparable<Triple> {\n\t\tint x, y;\n\n\t\tTriple(int i, int j) {\n\t\t\tx = i;\n\t\t\ty = j;\n\t\t}\n\n\t\t@Override\n\t\tpublic int compareTo(Triple o) {\n\t\t\tif (x == o.x)\n\t\t\t\treturn y - o.y;\n\t\t\treturn x - o.x;\n\t\t}\n\t}\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint N = sc.nextInt();\n\t\tint[] a = sc.nextIntArray(N);\n\t\tint[] b = sc.shuffle(a, N);\n\t\tArrays.sort(b);\n\t\tTreeMap<Triple, Integer> map = new TreeMap<Triple, Integer>();\n\t\tfor (int i = 0; i < N; i++) {\n\t\t\tTriple T = new Triple(a[i], b[i]);\n\t\t\tmap.put(T, i);\n\t\t}\n\t\tint s = 0;\n\t\tboolean[] isSwapped = new boolean[N];\n\t\tboolean failed = false;\n\t\tfor (int i = 0; i < N && !failed; i++) {\n\t\t\tif (!isSwapped[i] && a[i] != b[i]) {\n\t\t\t\tInteger occ = map.get(new Triple(b[i], a[i]));\n\t\t\t\tif (occ == null)\n\t\t\t\t\tfailed = true;\n\t\t\t\telse if (!isSwapped[occ]) {\n\t\t\t\t\tisSwapped[occ] = true;\n\t\t\t\t\ts++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (failed || s > 1) {\n\t\t\tSystem.out.println(\"NO\");\n\t\t} else\n\t\t\tSystem.out.println(\"YES\");\n\n\t}\n\n\tstatic class Scanner {\n\t\tStringTokenizer st;\n\t\tBufferedReader br;\n\n\t\tpublic Scanner(InputStream s) {\n\t\t\tbr = new BufferedReader(new InputStreamReader(s));\n\t\t}\n\n\t\tpublic Scanner(String f) throws FileNotFoundException {\n\t\t\tbr = new BufferedReader(new FileReader(f));\n\t\t}\n\n\t\tpublic String next() throws IOException {\n\t\t\twhile (st == null || !st.hasMoreTokens())\n\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tpublic int nextInt() throws IOException {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tpublic long nextLong() throws IOException {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tpublic String nextLine() throws IOException {\n\t\t\treturn br.readLine();\n\t\t}\n\n\t\tpublic double nextDouble() throws IOException {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tpublic boolean ready() throws IOException {\n\t\t\treturn br.ready();\n\t\t}\n\n\t\tpublic int[] nextIntArray(int n) throws IOException {\n\t\t\tint[] a = new int[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\ta[i] = nextInt();\n\t\t\treturn a;\n\t\t}\n\n\t\tpublic int[] nextIntArray1(int n) throws IOException {\n\t\t\tint[] a = new int[n + 1];\n\t\t\tfor (int i = 1; i <= n; i++)\n\t\t\t\ta[i] = nextInt();\n\t\t\treturn a;\n\t\t}\n\n\t\tpublic int[] shuffle(int[] a, int n) {\n\t\t\tint[] b = new int[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tb[i] = a[i];\n\t\t\tRandom r = new Random();\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tint j = i + r.nextInt(n - i);\n\t\t\t\tint t = b[i];\n\t\t\t\tb[i] = b[j];\n\t\t\t\tb[j] = t;\n\t\t\t}\n\t\t\treturn b;\n\t\t}\n\n\t\tpublic int[] nextIntArraySorted(int n) throws IOException {\n\t\t\tint[] a = nextIntArray(n);\n\t\t\ta = shuffle(a, n);\n\t\t\tArrays.sort(a);\n\t\t\treturn a;\n\t\t}\n\n\t\tpublic long[] nextLongArray(int n) throws IOException {\n\t\t\tlong[] a = new long[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\ta[i] = nextLong();\n\t\t\treturn a;\n\t\t}\n\n\t\tpublic long[] nextLongArray1(int n) throws IOException {\n\t\t\tlong[] a = new long[n + 1];\n\t\t\tfor (int i = 1; i <= n; i++)\n\t\t\t\ta[i] = nextLong();\n\t\t\treturn a;\n\t\t}\n\n\t\tpublic long[] nextLongArraySorted(int n) throws IOException {\n\t\t\tlong[] a = nextLongArray(n);\n\t\t\tRandom r = new Random();\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tint j = i + r.nextInt(n - i);\n\t\t\t\tlong t = a[i];\n\t\t\t\ta[i] = a[j];\n\t\t\t\ta[j] = t;\n\t\t\t}\n\t\t\tArrays.sort(a);\n\t\t\treturn a;\n\t\t}\n\t}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, ct = 0;\n  cin >> n;\n  vector<int> nums(n), nums_copy(n);\n  for (int i = 0; i < n; ++i) {\n    cin >> nums[i];\n    nums_copy[i] = nums[i];\n  }\n  sort(nums.begin(), nums.end());\n  for (int i = 0; i < n; ++i) {\n    if (nums_copy[i] != nums[i]) {\n      ++ct;\n    }\n  }\n  if (ct <= 2) {\n    cout << \"YES\";\n  } else {\n    cout << \"NO\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "\nn = int(raw_input())\na = map(int, raw_input().split())\n\ndef main():\n\tif n<3:\n\t\tprint 'YES'\n\t\treturn\n\tb = a[:]\n\tb.sort()\n\ts=0\n\tfor i in range(n):\n\t\ts += int(a[i] != b[i])\n\t\tif s>2:\n\t\t\tprint 'NO'\n\t\t\treturn\n\tprint 'YES'\n\nmain()"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.math.*;\nimport java.io.*; \n public class B{\nstatic int[] dx={-1,1,0,0};\nstatic int[] dy={0,0,1,-1};\n    static FastReader scan=new FastReader();\n   public static PrintWriter out = new PrintWriter (new BufferedOutputStream(System.out));\n  static ArrayList<Pair>es;\n  static LinkedList<Pair>edges[][];\n   static boolean prime[];\n   static void sieve(int n) \n    { \n        \n        prime = new boolean[n+1]; \n        for(int i=0;i<n;i++) \n            prime[i] = true; \n          \n        for(int p = 2; p*p <=n; p++) \n        { \n           \n            if(prime[p] == true) \n            { \n                \n                for(int i = p*p; i <= n; i += p) \n                    prime[i] = false; \n            } \n        } \n          \n        \n    }  \n  \n public static boolean areSame(int []arr)\n    {\n        // Put all array elements in a HashSet\n        Set<Integer>s=new HashSet<Integer>();\n        for(int i=0;i<arr.length;i++)\n            s.add(arr[i]);\n\n \n        // If all elements are same, size of\n        // HashSet should be 1. As HashSet contains only distinct values.\n        return (s.size() == 1);\n    }\n   \n\n    \n     public static int lowerBound(long[] array, int length, long value) {\n        int low = 0;\n        int high = length;\n        while (low < high) {\n            final int mid = (low + high) / 2;\n            //checks if the value is less than middle element of the array\n            if (value <= array[mid]) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return low;\n    }\n    public static int upperBound(long[] array, int length, long value) {\n        int low = 0;\n        int high = length;\n        while (low < high) {\n            final int mid = low+(high-low) / 2;\n            if ( array[mid]>value) {\n                high = mid ;\n            } else {\n                low = mid+1;\n            }\n        }\n        return low;\n    }\nstatic long mod(long x,long y)\n    {\n        if(x<0)\n            x=x+(-x/y+1)*y;\n        return x%y;\n    }\n    \n    \n    static boolean isPowerOfTwo(int n)\n{\n    if(n==0)\n    return false;\n \nreturn (int)(Math.ceil((Math.log(n) / Math.log(2)))) == \n       (int)(Math.floor(((Math.log(n) / Math.log(2)))));\n}\nstatic int CeilIndex(int A[], int l, int r, int key) \n    { \n        while (r - l > 1) { \n            int m = l + (r - l) / 2; \n            if (A[m] >= key) \n                r = m; \n            else\n                l = m; \n        } \n  \n        return r; \n    } \n  \n    static int LongestIncreasingSubsequenceLength(int A[], int size) \n    { \n        // Add boundary case, when array size is one \n  \n        int[] tailTable = new int[size]; \n        int len; // always points empty slot \n  \n        tailTable[0] = A[0]; \n        len = 1; \n        for (int i = 1; i < size; i++) { \n            if (A[i] < tailTable[0]) \n                // new smallest value \n                tailTable[0] = A[i]; \n  \n            else if (A[i] >= tailTable[len - 1]) \n                // A[i] wants to extend largest subsequence \n                tailTable[len++] = A[i]; \n  \n            else\n                // A[i] wants to be current end candidate of an existing \n                // subsequence. It will replace ceil value in tailTable \n                tailTable[CeilIndex(tailTable, -1, len - 1, A[i])] = A[i]; \n        } \n  \n        return len; \n    } \nstatic boolean isprime(long x)\n           {\n            for(long i=2;i*i<=x;i++)\n                if(x%i==0)\n                    return false;\n                return true;\n           }\n           static long arr[];\n      \n        static int k;\n\n static boolean can(long x)\n {\n    int bl=0;\n    int i=0;\n    for(int kas=0;i<n&&kas<k;kas++)\n    {\n        long hasta=arr[i];\n        hasta+=x*2;\n        while(i<n-1&&arr[i+1]<=hasta)i++;\n        i++;\n        \n    }\nreturn (i>=n);\n }\nstatic int n,m;\nstatic boolean vis[][];\nstatic boolean light[][];\nstatic boolean e(int x,int y)\n{\n    return (x>=0&&x<n&&y>=0&&y<n);\n}\nstatic int ans=0;\nstatic void dfs(int x,int y)\n{\n    if(vis[x][y])\n        return;\n    vis[x][y]=true;\n   //light[x][y]=true;\n    for(Pair p:edges[x][y])\n    {\n        if(!light[p.x][p.y]){\n            light[p.y][p.y]=true;\n            ans++;\n            dfs(p.x,p.y);\n                    }\n    }\n    for(int i=0;i<4;i++){\n    int nx=x+dx[i],ny=y+dy[i];\n    if(e(nx,ny))\n        dfs(nx,ny);\n}\n\n}\nstatic int dist(int x1,int y1,int x2,int y2){\nreturn Math.abs(x1-x2)+Math.abs(y1-y2);\n}\nstatic int x;\nstatic int min(int y,int k)\n{\n    if(y==x)\n        return 0;\n    return Math.min(min(y+k,k++)+1,min(y-1,k)+1);\n}\nstatic boolean is(int arr[])\n{\n    for(int i=1;i<arr.length;i++)\n        if(arr[i]<arr[i-1])\n            return false;\n        return true;\n}\n  static void reverse(int myArray[]) \n    { \n        Collections.reverse(Arrays.asList(myArray)); \n    } \n    static boolean isPerfect(long n) \n{ \n    // To store sum of divisors \n    long sum = 1; \n  \n    // Find all divisors and add them \n    for (long i = 2; i * i <= n; i++) \n    { \n        if (n % i==0) \n        { \n            if(i * i != n) \n                sum = sum + i + n / i; \n            else\n                sum = sum + i; \n        } \n    }  \n    // If sum of divisors is equal to \n    // n, then n is a perfect number \n    if (sum == n && n != 1) \n        return true; \n  \n    return false; \n} \nstatic char []a,b,c;\nstatic char chose(int i)\n{\nchar ch='a';\nwhile(ch==a[i]||ch==b[i])\nch++;\nreturn ch;\n}\nstatic int v1,v2,t,d;\nstatic boolean can(int k,int l)\n{\nwhile(l>0)\n{\n    k-=d;\n    l--;\n}\nif(k<=v2)\n    return true;\nelse \n    return false;\n}\n \n    static long cuberoot(long x)\n    {\n        long lo = 0, hi = 1000005;\n        while(lo<hi)\n        {\n            long m = (lo+hi+1)/2;\n            if(m*m*m>x)\n                hi = m-1;\n            else\n                lo = m;\n        }\n        return lo;\n    }\npublic static void main(String[] args)  throws IOException \n\n\n\n{\n//java.util.Scanner scan=new java.util.Scanner(new File(\"mootube.in\"));\n //PrintWriter out = new PrintWriter (new FileWriter(\"mootube.out\"));\n//java.util.Scanner scan=new java.util.Scanner(new File(\"lightson.in\"));\n//PrintWriter out = new PrintWriter (new FileWriter(\"lightson.out\"));\nint n=scan.nextInt();\nint arr[]=new int[n];\nint sorted[]=new int[n];\nfor(int i=0;i<n;i++){\n    arr[i]=scan.nextInt();\n    sorted[i]=arr[i];\n}\nArrays.sort(sorted);\nint res=0;\nfor(int i=0;i<n;i++)\n    if(arr[i]!=sorted[i])\n        res++;\n    if(res>2)\n        out.println(\"NO\");\n    else out.println(\"YES\");\n\n\nout.close();\n}\nstatic class special implements Comparable<special>{\n    int x;\n    char id;\n    special(int x,char id)\n    {\n        this.id=id;\n       this.x=x;\n    }\n    public int compareTo(special o)\n    {\n        \n        return x-o.x;\n    }\n   \n}\n public static  long pow(long b, long e) {\n            long r = 1;\n            while (e > 0) {\n                if (e % 2 == 1) r = r * b ;\n                b = b * b;\n                e >>= 1;\n            }\n            return r;\n        }\n\nprivate static void sort(long[] arr) {\n        List<Long> list = new ArrayList<>();\n        for (long object : arr) list.add(object);\n        Collections.sort(list);\n        for (int i = 0; i < list.size(); ++i) arr[i] = list.get(i);\n    }\n public static class FastReader {\n        BufferedReader br;\n        StringTokenizer root;\n        \n \n        public FastReader() {\n            br = new BufferedReader(new InputStreamReader(System.in));\n        }\n \n        String next() {\n            while (root == null || !root.hasMoreTokens()) {\n                try {\n                    root = new StringTokenizer(br.readLine());\n                } catch (Exception addd) {\n                    addd.printStackTrace();\n                }\n            }\n            return root.nextToken();\n        }\n \n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n \n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n \n        long nextLong() {\n            return Long.parseLong(next());\n        }\n \n        String nextLine() {\n            String str = \"\";\n            try {\n                str = br.readLine();\n            } catch (Exception addd) {\n                addd.printStackTrace();\n            }\n            return str;\n        }\n         public int[] nextIntArray(int arraySize) {\n            int array[] = new int[arraySize];\n \n            for (int i = 0; i < arraySize; i++) {\n                array[i] = nextInt();\n            }\n \n            return array;\n        }\n}\npublic static class Pair implements Comparable<Pair>{\n         int x;\n        int  y;\n        int id;\n        public Pair(){}\n        public Pair(int x1, int y1,int id) {\n            x=x1;\n            y=y1;\n            this.id=id;\n        }\n        public Pair(int x1, int y1) {\n            x=x1;\n            y=y1;\n        \n        }\n        @Override\n        public int hashCode() {\n            return (int)(x + 31 * y);\n        }\n        public String toString() {\n            return x + \" \" + y;\n        }\n        @Override\n        public boolean equals(Object o){\n            if (o == this) return true;\n            if (o.getClass() != getClass()) return false;\n            Pair t = (Pair)o;\n            return t.x == x && t.y == y;\n        }\n        public  int compareTo(Pair o)\n        {\n            if(x==o.x)\n                return y-o.y;\n            return x-o.x;\n        }\n}\n\n}\n\n\n\n\n\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, a, b, c = 0;\n  cin >> n;\n  vector<int> v, vv;\n  for (int i = 0; i < n; i++) {\n    cin >> a;\n    v.push_back(a);\n    vv.push_back(a);\n  }\n  sort(v.begin(), v.end());\n  for (int i = 0; i < n; i++) {\n    if (v[i] != vv[i]) c++;\n  }\n  if (c > 2)\n    puts(\"NO\");\n  else\n    puts(\"YES\");\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class r220a {\n\tpublic static void main(String args[]) {\n\t\tScanner in =new Scanner(System.in);\n\t\tint N = in.nextInt();\n\t\tArrayList<Integer> list = new ArrayList<Integer>();\n\t\tArrayList<Integer> sort = new ArrayList<Integer>();\n\t\tfor(int i = 0; i < N; i++) {\n\t\t\tint k = in.nextInt();\n\t\t\tlist.add(k);\n\t\t\tsort.add(k);\n\t\t}\n\t\t\n\t\tCollections.sort(sort);\n\t\t\n\t\tint count = 0;\n\t\tfor(int i = 0; i < N; i++) {\n\t\t\tif(sort.get(i).intValue() != list.get(i).intValue())\n\t\t\t\tcount++;\n\t\t}\n\t\tif(count != 2 && count != 0)\n\t\t\tSystem.out.println(\"NO\");\n\t\telse\n\t\t\tSystem.out.println(\"YES\");\n\t}\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, a[1000007], b[1000007];\nint main() {\n  int i, cnt = 0;\n  cin >> n;\n  for (i = 0; i < n; i++) {\n    cin >> a[i];\n    b[i] = a[i];\n  }\n  sort(b, b + n);\n  for (i = 0; i < n; i++) {\n    if (a[i] != b[i]) {\n      cnt++;\n    }\n  }\n  if (cnt == 0 || cnt == 2) {\n    cout << \"YES\\n\";\n  } else {\n    cout << \"NO\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nbool debug = true;\nconst int dx[] = {0, 1, 0, -1, 1, 1, -1, -1, 0};\nconst int dy[] = {1, 0, -1, 0, -1, 1, 1, -1, 0};\ntemplate <typename X>\ninline X square(const X& a) {\n  return a * a;\n}\nint scan_d() {\n  bool minus = false;\n  int result = 0;\n  char ch;\n  ch = getchar();\n  while (true) {\n    if (ch == '-') break;\n    if (ch >= '0' && ch <= '9') break;\n    ch = getchar();\n  }\n  if (ch == '-')\n    minus = true;\n  else\n    result = ch - '0';\n  while (true) {\n    ch = getchar();\n    if (ch < '0' || ch > '9') break;\n    result = (result << 3) + (result << 1) + (ch - '0');\n  }\n  if (minus)\n    return -result;\n  else\n    return result;\n}\nlong scan_ld() {\n  bool minus = false;\n  long result = 0;\n  char ch;\n  ch = getchar();\n  while (true) {\n    if (ch == '-') break;\n    if (ch >= '0' && ch <= '9') break;\n    ch = getchar();\n  }\n  if (ch == '-')\n    minus = true;\n  else\n    result = ch - '0';\n  while (true) {\n    ch = getchar();\n    if (ch < '0' || ch > '9') break;\n    result = (result << 3) + (result << 1) + (ch - '0');\n  }\n  if (minus)\n    return -result;\n  else\n    return result;\n}\nlong long scan_lld() {\n  bool minus = false;\n  long long result = 0;\n  char ch;\n  ch = getchar();\n  while (true) {\n    if (ch == '-') break;\n    if (ch >= '0' && ch <= '9') break;\n    ch = getchar();\n  }\n  if (ch == '-')\n    minus = true;\n  else\n    result = ch - '0';\n  while (true) {\n    ch = getchar();\n    if (ch < '0' || ch > '9') break;\n    result = (result << 3) + (result << 1) + (ch - '0');\n  }\n  if (minus)\n    return -result;\n  else\n    return result;\n}\nlong long unsigned scan_llu() {\n  long long unsigned result = 0;\n  char ch;\n  ch = getchar();\n  while (true) {\n    if (ch == '-') break;\n    if (ch >= '0' && ch <= '9') break;\n    ch = getchar();\n  }\n  result = ch - '0';\n  while (true) {\n    ch = getchar();\n    if (ch < '0' || ch > '9') break;\n    result = (result << 3) + (result << 1) + (ch - '0');\n  }\n  return result;\n}\nvoid print_d(int n) {\n  if (n < 0) {\n    n = -n;\n    putchar('-');\n  }\n  int i = 10;\n  char output_buffer[10];\n  do {\n    output_buffer[--i] = (n % 10) + '0';\n    n /= 10;\n  } while (n);\n  do {\n    putchar(output_buffer[i]);\n  } while (++i < 10);\n}\nvoid print_ld(long n) {\n  if (n < 0) {\n    n = -n;\n    putchar('-');\n  }\n  int i = 11;\n  char output_buffer[11];\n  do {\n    output_buffer[--i] = (n % 10) + '0';\n    n /= 10;\n  } while (n);\n  do {\n    putchar(output_buffer[i]);\n  } while (++i < 11);\n}\nvoid print_lld(long long n) {\n  if (n < 0) {\n    n = -n;\n    putchar('-');\n  }\n  int i = 21;\n  char output_buffer[21];\n  do {\n    output_buffer[--i] = (n % 10) + '0';\n    n /= 10;\n  } while (n);\n  do {\n    putchar(output_buffer[i]);\n  } while (++i < 21);\n}\nvoid print_llu(long long unsigned n) {\n  int i = 21;\n  char output_buffer[21];\n  do {\n    output_buffer[--i] = (n % 10) + '0';\n    n /= 10;\n  } while (n);\n  do {\n    putchar(output_buffer[i]);\n  } while (++i < 21);\n}\nvoid println_d(int n) {\n  if (n < 0) {\n    n = -n;\n    putchar('-');\n  }\n  int i = 10;\n  char output_buffer[11];\n  output_buffer[10] = '\\n';\n  do {\n    output_buffer[--i] = (n % 10) + '0';\n    n /= 10;\n  } while (n);\n  do {\n    putchar(output_buffer[i]);\n  } while (++i < 11);\n}\nvoid println_ld(long n) {\n  if (n < 0) {\n    n = -n;\n    putchar('-');\n  }\n  int i = 11;\n  char output_buffer[12];\n  output_buffer[11] = '\\n';\n  do {\n    output_buffer[--i] = (n % 10) + '0';\n    n /= 10;\n  } while (n);\n  do {\n    putchar(output_buffer[i]);\n  } while (++i < 12);\n}\nvoid println_lld(long long n) {\n  if (n < 0) {\n    n = -n;\n    putchar('-');\n  }\n  int i = 21;\n  char output_buffer[22];\n  output_buffer[21] = '\\n';\n  do {\n    output_buffer[--i] = (n % 10) + '0';\n    n /= 10;\n  } while (n);\n  do {\n    putchar(output_buffer[i]);\n  } while (++i < 22);\n}\nvoid println_llu(long long unsigned n) {\n  int i = 21;\n  char output_buffer[22];\n  output_buffer[21] = '\\n';\n  do {\n    output_buffer[--i] = (n % 10) + '0';\n    n /= 10;\n  } while (n);\n  do {\n    putchar(output_buffer[i]);\n  } while (++i < 22);\n}\nchar sp;\nvoid printsp_d(int n) {\n  if (n < 0) {\n    n = -n;\n    putchar('-');\n  }\n  int i = 10;\n  char output_buffer[11];\n  output_buffer[10] = sp;\n  do {\n    output_buffer[--i] = (n % 10) + '0';\n    n /= 10;\n  } while (n);\n  do {\n    putchar(output_buffer[i]);\n  } while (++i < 11);\n}\nvoid printsp_ld(long n) {\n  if (n < 0) {\n    n = -n;\n    putchar('-');\n  }\n  int i = 11;\n  char output_buffer[12];\n  output_buffer[11] = sp;\n  do {\n    output_buffer[--i] = (n % 10) + '0';\n    n /= 10;\n  } while (n);\n  do {\n    putchar(output_buffer[i]);\n  } while (++i < 12);\n}\nvoid printsp_lld(long long n) {\n  if (n < 0) {\n    n = -n;\n    putchar('-');\n  }\n  int i = 21;\n  char output_buffer[22];\n  output_buffer[21] = sp;\n  do {\n    output_buffer[--i] = (n % 10) + '0';\n    n /= 10;\n  } while (n);\n  do {\n    putchar(output_buffer[i]);\n  } while (++i < 22);\n}\nvoid printsp_llu(long long unsigned n) {\n  int i = 21;\n  char output_buffer[22];\n  output_buffer[21] = sp;\n  do {\n    output_buffer[--i] = (n % 10) + '0';\n    n /= 10;\n  } while (n);\n  do {\n    putchar(output_buffer[i]);\n  } while (++i < 22);\n}\nint main() {\n  int n, i, x, ans;\n  vector<int> a, b;\n  n = scan_d();\n  for (i = 0; i < n; i++) {\n    x = scan_d();\n    a.push_back(x);\n    b.push_back(x);\n  }\n  ans = 0;\n  sort(b.begin(), b.end());\n  for (i = 0; i < n; i++)\n    if (a[i] != b[i]) ans++;\n  if (ans > 2)\n    puts(\"NO\");\n  else\n    puts(\"YES\");\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "import sys\n\nn = int(sys.stdin.readline())\na = map(int, sys.stdin.readline().strip().split())\nb = list(a)\nb.sort()\nc = 0\nfor x, y in zip(a, b):\n    if x != y:\n        c += 1\nprint 'YES' if c <= 2 else 'NO'\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid Test() {\n  long long n;\n  cin >> n;\n  long long a[n], b[n];\n  for (long long i = 0; i < n; i++) {\n    cin >> a[i];\n    b[i] = a[i];\n  }\n  sort(b, b + n);\n  long long cnt = 0;\n  for (long long i = 0; i < n; i++) {\n    if (a[i] != b[i]) ++cnt;\n  }\n  if (!cnt || cnt == 2)\n    cout << \"YES\";\n  else\n    cout << \"NO\";\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout << fixed << setprecision(10);\n  Test();\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, a[100100], b[100100];\nint cnt = 0;\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = 0; i < n; i++) {\n    scanf(\"%d\", &a[i]);\n    b[i] = a[i];\n  }\n  sort(b, b + n);\n  for (int i = 0; i < n; i++) {\n    if (a[i] != b[i]) cnt++;\n    if (cnt > 2) {\n      printf(\"NO\\n\");\n      return 0;\n    }\n  }\n  printf(\"YES\\n\");\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, x[100200], y[100200];\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = 0; i < n; i++) {\n    scanf(\"%d\", &x[i]);\n    y[i] = x[i];\n  }\n  sort(x, x + n);\n  int ans = 0;\n  for (int i = 0; i < n; i++)\n    if (x[i] != y[i]) ans++;\n  if (ans < 3)\n    printf(\"YES\\n\");\n  else\n    printf(\"NO\\n\");\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  int k = 0;\n  int A[n], B[n];\n  while (k != n) {\n    cin >> A[k];\n    B[k] = A[k];\n    k++;\n  }\n  sort(A, A + k);\n  int count = 0;\n  for (int i = 0; i < n; i++) {\n    if (A[i] != B[i]) count++;\n  }\n  if (count > 2)\n    cout << \"NO\" << endl;\n  else\n    cout << \"YES\" << endl;\n}\n"
        },
        {
            "language": 1,
            "solution": "def start():\n    n = input()\n    x = map(int, raw_input().split())\n    y = list(x)\n    y.sort()\n    swap = 0\n    for i in xrange(len(y)):\n        if y[i] != x[i]: swap+=1\n        if swap > 2: break\n    if swap > 2: print \"NO\"\n    else: print \"YES\"\n\nstart()\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, c = 0, f = 0;\n  long long m;\n  vector<long long> a, b;\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> m;\n    a.push_back(m);\n    b.push_back(m);\n  }\n  sort(b.begin(), b.end());\n  for (int i = 0; i < n; i++) {\n    if (a[i] != b[i]) c++;\n  }\n  if (c <= 2)\n    cout << \"YES\" << endl;\n  else\n    cout << \"NO\" << endl;\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\nimport java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.PrintWriter;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n * @author Vaibhav Mittal\n */\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tScanner in = new Scanner(inputStream);\n\t\tPrintWriter out = new PrintWriter(outputStream);\n\t\tTaskC solver = new TaskC();\n\t\tsolver.solve(1, in, out);\n\t\tout.close();\n\t}\n}\n\nclass TaskC {\n    int n;\n    int[] a;\n    int[] b;\n\n\tpublic void solve(int testNumber, Scanner in, PrintWriter out) {\n        n = in.nextInt();\n        a = new int[n];\n        b = new int[n];\n        for (int i = 0; i < n; ++i)\n            a[i] = b[i] = in.nextInt();\n        sort(0, n - 1);\n        int different = 0;\n        for (int i = 0; i < n; ++i)\n            if (a[i] != b[i])\n                ++different;\n        out.println(different <= 2 ? \"YES\" : \"NO\");\n\t}\n\n    public void sort(int lo, int hi) {\n        if (lo < hi) {\n            int mid = (lo + hi) / 2;\n            sort(lo, mid);\n            sort(mid + 1, hi);\n            merge(lo, mid, hi);\n        }\n    }\n\n    public void merge(int lo, int mid, int hi) {\n        int n1 = mid - lo + 1;\n        int n2 = hi - (mid + 1) + 1;\n        int[] x = new int[n1 + 1];\n        for (int i = 0; i < n1; ++i)\n            x[i] = a[lo + i];\n        int[] y = new int[n2 + 1];\n        for (int j = 0; j < n2; ++j)\n            y[j] = a[mid + 1 + j];\n        x[n1] = y[n2] = Integer.MAX_VALUE;\n        for (int i = 0, j = 0, k = lo; k <= hi; ++k)\n            a[k] = x[i] <= y[j] ? x[i++] : y[j++];\n    }\n}\n\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\n\nimport java.lang.management.MemoryType;\nimport java.math.BigInteger;\nimport java.util.*;\n\n\npublic class Main {\n\n\n\n        public static void main (String[]args) throws IOException {\n        Scanner in = new Scanner(System.in);\n        try(PrintWriter or = new PrintWriter(System.out)){\n\n           int n = in.nextInt();\n          int[] a= new int[n];\n          Integer[] b = new Integer[n];\n            for (int i = 0; i <n ; i++) {\n                a[i]=in.nextInt();\n                b[i]=a[i];\n            }\n\n            Arrays.sort(b);\n            int ans=0;\n            for (int i = 0; i < n; i++) {\n                if (a[i]!=b[i])++ans;\n            }\n\n            or.print(ans>2?\"NO\":\"YES\");\n\n\n\n\n\n        }\n\n\n    }\n\n\n    static class Scanner {\n\n        StringTokenizer st;\n        BufferedReader br;\n\n        public Scanner(InputStream s) {\n            br = new BufferedReader(new InputStreamReader(s));\n        }\n\n        public String next() throws IOException {\n            while (st == null || !st.hasMoreTokens()) {\n                st = new StringTokenizer(br.readLine());\n            }\n            return st.nextToken();\n        }\n\n        public int nextInt() throws IOException {\n            return Integer.parseInt(next());\n        }\n\n        public long nextLong() throws IOException {\n            return Long.parseLong(next());\n        }\n\n        public String nextLine() throws IOException {\n            return br.readLine();\n        }\n\n        public double nextDouble() throws IOException {\n            String x = next();\n            StringBuilder sb = new StringBuilder(\"0\");\n            double res = 0, f = 1;\n            boolean dec = false, neg = false;\n            int start = 0;\n            if (x.charAt(0) == '-') {\n                neg = true;\n                start++;\n            }\n            for (int i = start; i < x.length(); i++) {\n                if (x.charAt(i) == '.') {\n                    res = Long.parseLong(sb.toString());\n                    sb = new StringBuilder(\"0\");\n                    dec = true;\n                } else {\n                    sb.append(x.charAt(i));\n                    if (dec) {\n                        f *= 10;\n                    }\n                }\n            }\n            res += Long.parseLong(sb.toString()) / f;\n            return res * (neg ? -1 : 1);\n        }\n\n        public boolean ready() throws IOException {\n            return br.ready();\n        }\n\n    }\n}\n\nclass prog {\n\n    int skill;\n    int indx;\n    int pp;\n\n    public prog(int skill, int indx) {\n        this.skill = skill;\n        this.indx = indx;\n        pp = 0;\n    }\n\n    @Override\n    public String toString() {\n        return \"prog{\" + \"skill=\" + skill + \", indx=\" + indx + \", pp=\" + pp + '}';\n    }\n\n}"
        },
        {
            "language": 4,
            "solution": "//package Practice;\n\nimport java.util.Arrays;\nimport java.util.Scanner;\n\npublic class CF221C {\n    public static void main(String[] args) {\n        Scanner s = new Scanner(System.in);\n        int n = s.nextInt();\n        int[] arr = new int[n];\n        for (int i = 0; i < n; i++) {\n            arr[i] = s.nextInt();\n        }\n\n        int[] brr = arr.clone();\n        Arrays.sort(brr);\n        int count = 0;\n        for (int i = 0; i < arr.length; i++) {\n            if(arr[i] != brr[i]){\n                count++;\n            }\n        }\n\n        if(count == 2 || count == 0){\n            System.out.println(\"YES\");\n        }else{\n            System.out.println(\"NO\");\n        }\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int size = 100008;\nint old[size], now[size];\nint main() {\n  int i, n, sum;\n  while (scanf(\"%d\", &n) != EOF) {\n    for (i = 0; i < n; i++) {\n      scanf(\"%d\", &old[i]);\n      now[i] = old[i];\n    }\n    sort(now, now + n);\n    sum = 0;\n    for (i = 0; i < n; i++) {\n      if (old[i] != now[i]) sum++;\n    }\n    if (sum == 0 || sum == 2)\n      puts(\"YES\");\n    else\n      puts(\"NO\");\n  }\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "from sys import stdin\n\nn = int(stdin.readline())\nar = map(int,stdin.readline().split())\nprint ('YES' if reduce(int.__add__,map(lambda x,y:x!=y,ar,sorted(ar)))<=2 else 'NO'),\n"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\na = list(map(int, raw_input().split()))\nb = sorted(a)\nk = 0\nfor i in range(n):\n    if a[i] != b[i]:\n        k += 1\nif k > 2:\n    print('NO')\nelse:\n    print('YES')"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.StringTokenizer;\n\npublic class Solver {\n\n    StringTokenizer st;\n    BufferedReader in;\n    PrintWriter out;\n\n    public static void main(String[] args) throws NumberFormatException, IOException {\n        Solver solver = new Solver();\n        solver.open();\n        long time = System.currentTimeMillis();\n        solver.solve();\n        if (!\"true\".equals(System.getProperty(\"ONLINE_JUDGE\"))) {\n            System.out.println(\"Spent time: \" + (System.currentTimeMillis() - time));\n        }\n        solver.close();\n    }\n\n    public void open() throws IOException {\n        in = new BufferedReader(new InputStreamReader(System.in));\n        out = new PrintWriter(System.out);\n    }\n\n    public String nextToken() throws IOException {\n        while (st == null || !st.hasMoreTokens()) {\n            st = new StringTokenizer(in.readLine());\n        }\n        return st.nextToken();\n    }\n\n    public int nextInt() throws NumberFormatException, IOException {\n        return Integer.parseInt(nextToken());\n    }\n\n    public long nextLong() throws NumberFormatException, IOException {\n        return Long.parseLong(nextToken());\n    }\n\n    public double nextDouble() throws NumberFormatException, IOException {\n        return Double.parseDouble(nextToken());\n    }\n\n    public void solve() throws NumberFormatException, IOException {\n        int n = nextInt();\n        int[] ar1 = new int[n];\n        \n        for(int i=0;i<n;i++){\n            ar1[i] = nextInt();\n        }\n        \n        int[] ar2 = ar1.clone();\n        Arrays.sort(ar2);\n        \n        int res = 0;\n        for(int i=0;i<n;i++){\n            if (ar1[i] != ar2[i]) res++;\n        }\n        \n        if (res<=2){\n            out.println(\"YES\");\n        }else{\n            out.println(\"NO\");\n        }\n    }\n\n    public void close() {\n        out.flush();\n        out.close();\n    }\n\n}"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\nb = sorted(a)\nres = 0\nfor i in range(n):\n    if a[i] != b[i]:\n        res += 1\nprint('YES' if res <= 2 else 'NO')"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[10000000], b[10010000];\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  int n;\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n    b[i] = a[i];\n  }\n  int p = 0;\n  sort(a, a + n);\n  for (int i = 0; i < n; i++) {\n    if (a[i] != b[i]) p++;\n  }\n  if (p > 2)\n    cout << \"NO\" << endl;\n  else\n    cout << \"YES\" << endl;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  vector<int> a(n), b;\n  for (int i = 0; i < n; ++i) cin >> a[i];\n  b = a;\n  sort(a.begin(), a.end());\n  int cnt = 0;\n  for (int i = 0; i < n; ++i)\n    if (a[i] != b[i]) ++cnt;\n  if (cnt <= 2)\n    cout << \"YES\" << endl;\n  else\n    cout << \"NO\" << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[100005], sa[100005];\nint main() {\n  int n, i, cnt;\n  while (scanf(\"%d\", &n) == 1) {\n    for (i = 0; i < n; ++i) scanf(\"%d\", &a[i]);\n    for (i = 0; i < n; ++i) sa[i] = a[i];\n    sort(sa, sa + n);\n    for (cnt = i = 0; i < n; ++i)\n      if (a[i] != sa[i]) ++cnt;\n    if (cnt <= 2)\n      puts(\"YES\");\n    else\n      puts(\"NO\");\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\n\npublic class TC\n{\n    static int[] A;\n    static int[] cpy;\n    \n    static int N;\n    \n    \n    static int findAnomaly( int[] arr, boolean isFirst )\n    {\n        for( int i=0; i<N-1; i++ )\n        {\n            if( arr[ i ] <= arr[ i+1 ])\n                continue;\n            \n            else\n            {\n                if( isFirst )\n                    return i;\n                \n                else\n                    return (i+1);\n            }\n               \n        }\n        \n        return -1;\n    }\n    \n    static int findSwap2( int big )\n    {\n        int x = A[ big-1 ];\n        \n        for( int i=big-1; i>=0; i-- )\n        {\n            if( A[ i ] == x )\n                continue;\n            \n            return ( i+ 1 );\n        }\n        \n        return 0;\n    }\n    \n    static int findSwap( int big )\n    {\n        int x = A[ big+1 ];\n        \n        for( int i=big+1; i<N; i++ )\n        {\n            if( A[ i ] == x )\n                continue;\n            \n            return ( i-1 );\n        }\n        \n        return N-1;\n    }\n    \n    static boolean solve()\n    {\n        \n        \n        int small = findAnomaly( A, true );\n        \n        if( small == -1 )\n            return true;\n        \n        // replace small by A[ small-1 ]\n        \n        if( small == 0 )\n            cpy[ 0 ] = Integer.MIN_VALUE;\n        \n        else\n            cpy[ small ] = cpy[ small-1 ];\n        \n        int big = findAnomaly( cpy, false );\n        \n        if( big == -1 )\n        {\n            for( int i=0; i<N; i++ )\n                cpy[ i ] = A[ i ];\n            \n            int swap = findSwap( small );\n            \n            int temp = cpy[ small ];\n            cpy[ small ] = cpy[ swap ];\n            cpy[ swap ] = temp;\n            \n            int res = findAnomaly( cpy, true );\n            \n            if( res < 0 )\n                return true;\n            \n            else return solve2();\n        \n        }\n        \n        else \n        {\n            for( int i=0; i<N; i++ )\n                cpy[ i ] = A[ i ];\n            \n            // swap 2 positions and verify\n            \n            int temp = cpy[ small ];\n            cpy[ small ] = cpy[ big ];\n            cpy[ big ] = temp;\n            \n            int res = findAnomaly( cpy, true );\n            \n            if( res < 0 )\n                return true;\n            \n            else\n                return solve2();\n            \n        }\n        \n        \n    }\n    \n    static boolean solve2()\n    {\n        for( int i=0; i<N; i++ )\n            cpy[ i ] = A[ i ];\n        \n        int small = findAnomaly( A, false );\n        \n        if( small == -1 )\n            return true;\n        \n        // replace small by A[ small-1 ]\n        \n        cpy[ small ] = cpy[ small-1 ];\n        \n        int big = findAnomaly( cpy, true );\n        \n        if( big == -1 )\n        {\n            int swap = findSwap2( small );\n            \n            int temp = A[ small ];\n            A[ small ] = A[ swap ];\n            A[ swap ] = temp;\n            \n            int res = findAnomaly( A, true );\n            \n            if( res < 0 )\n                return true;\n            \n            else\n                return false;\n        }\n        \n        else \n        {\n            // swap 2 positions and verify\n            \n            int temp = A[ small ];\n            A[ small ] = A[ big ];\n            A[ big ] = temp;\n            \n            int res = findAnomaly( A, true );\n            \n            if( res < 0 )\n                return true;\n            \n            else\n                return false;\n            \n        }\n        \n        \n    }\n    \n    public static void main( String[] args ) throws IOException\n    {\n        BufferedReader br = new BufferedReader( new InputStreamReader( System.in ));\n        \n        N = Integer.parseInt( br.readLine());\n        String s = br.readLine();\n        String[] tok = s.split( \" \");\n        \n        A = new int[ N ];\n        cpy = new int[ N ];\n        \n        for( int i=0; i<N; i++ )\n        {\n            A[ i ] = Integer.parseInt( tok[ i ]);\n            cpy[ i ] = A[ i ];\n        }\n\n        boolean res = solve(  );\n        \n        if( res )\n            System.out.println(\"YES\");\n        \n        else\n            System.out.println(\"NO\");\n        \n \n          \n         \n        \n      \n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main(void) {\n  int n;\n  cin >> n;\n  int a[n], b[n], t = 0;\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n    b[t++] = a[i];\n  }\n  sort(a, a + n);\n  int s = 0;\n  for (int i = 0; i < n; i++) {\n    if (a[i] != b[i]) {\n      s++;\n    }\n  }\n  if (s <= 2) {\n    cout << \"YES\";\n  } else\n    cout << \"NO\";\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint arr[100001] = {0};\nint sortedArr[100001] = {0};\nint main() {\n  int n, number = 0;\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> arr[i], sortedArr[i] = arr[i];\n  }\n  sort(sortedArr, sortedArr + n);\n  for (int i = 0; i < n; i++) {\n    if (arr[i] != sortedArr[i]) {\n      number++;\n    }\n    if (ceil(number / 2.0) > 1) {\n      break;\n    }\n  }\n  if (ceil(number / 2.0) > 1) {\n    cout << \"NO\";\n    return 0;\n  }\n  cout << \"YES\";\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 100010;\nint a[maxn], b[maxn];\nint main() {\n  int n;\n  cin >> n;\n  int nums = 0;\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n    b[i] = a[i];\n  }\n  sort(b, b + n);\n  for (int i = 0; i < n; i++) nums += (b[i] != a[i]);\n  if (nums % 2) nums++;\n  nums /= 2;\n  if (nums <= 1) {\n    cout << \"YES\" << endl;\n  } else\n    cout << \"NO\" << endl;\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.StringTokenizer;\n\npublic class Main {\n\tvoid solve() throws IOException {\n\t\tint n = nextInt();\n\t\tint[] a = new int[n];\n\t\tInteger[] b = new Integer[n];\n\t\tfor (int i = 0; i < n; ++i) {\n\t\t\ta[i] = nextInt();\n\t\t\tb[i] = a[i];\n\t\t}\n\t\tArrays.sort(b);\n\t\tint cnt = 0;\n\t\tfor (int i = 0; i < n; ++i)\n\t\t\tif (a[i] != b[i])\n\t\t\t\t++cnt;\n\t\tif (cnt <= 2)\n\t\t\twriter.println(\"YES\");\n\t\telse\n\t\t\twriter.println(\"NO\");\n\t}\n\n\tBufferedReader reader;\n\tPrintWriter writer;\n\tStringTokenizer tokenizer;\n\n\tString nextToken() throws IOException {\n\t\twhile (tokenizer == null || !tokenizer.hasMoreTokens())\n\t\t\ttokenizer = new StringTokenizer(reader.readLine());\n\t\treturn tokenizer.nextToken();\n\t}\n\n\tint nextInt() throws IOException {\n\t\treturn Integer.parseInt(nextToken());\n\t}\n\n\tpublic void run() {\n\t\ttry {\n\t\t\treader = new BufferedReader(new InputStreamReader(System.in));\n\t\t\twriter = new PrintWriter(System.out);\n\t\t\ttokenizer = null;\n\t\t\tsolve();\n\t\t\treader.close();\n\t\t\twriter.close();\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t\tSystem.exit(1);\n\t\t}\n\t}\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tnew Main().run();\n\t}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <typename T>\nvoid scan(T &x) {\n  x = 0;\n  bool neg = 0;\n  register T c = getchar();\n  if (c == '-') neg = 1, c = getchar();\n  while ((c < 48) || (c > 57)) c = getchar();\n  for (; c < 48 || c > 57; c = getchar())\n    ;\n  for (; c > 47 && c < 58; c = getchar()) x = (x << 3) + (x << 1) + (c & 15);\n  if (neg) x *= -1;\n}\ntemplate <typename T>\nvoid print(T n) {\n  bool neg = 0;\n  if (n < 0) n *= -1, neg = 1;\n  char snum[65];\n  long long int i = 0;\n  do {\n    snum[i++] = n % 10 + '0';\n    n /= 10;\n  } while (n);\n  --i;\n  if (neg) putchar('-');\n  while (i >= 0) putchar(snum[i--]);\n  printf(\" \");\n}\nlong long int readll() {\n  bool minus = false;\n  long long int result = 0;\n  char ch;\n  ch = getchar();\n  while (true) {\n    if (ch == '-') break;\n    if (ch >= '0' && ch <= '9') break;\n    ch = getchar();\n  }\n  if (ch == '-')\n    minus = true;\n  else\n    result = ch - '0';\n  while (true) {\n    ch = getchar();\n    if (ch < '0' || ch > '9') break;\n    result = result * 10 + (ch - '0');\n  }\n  if (minus)\n    return -result;\n  else\n    return result;\n}\nlong long int readint() {\n  char r;\n  bool start = false, neg = false;\n  long long int ret = 0;\n  while (true) {\n    r = getchar();\n    if ((r - '0' < 0 || r - '0' > 9) && r != '-' && !start) {\n      continue;\n    }\n    if ((r - '0' < 0 || r - '0' > 9) && r != '-' && start) {\n      break;\n    }\n    if (start) ret *= 10;\n    start = true;\n    if (r == '-')\n      neg = true;\n    else\n      ret += r - '0';\n  }\n  if (!neg)\n    return ret;\n  else\n    return -ret;\n}\nbool subsetSums(long long int arr[], long long int n, long long int k) {\n  long long total = 1 << n;\n  for (long long i = 0; i < total; i++) {\n    long long sum = 0;\n    for (long long int j = 0; j < n; j++)\n      if (i & (1 << j)) sum += arr[j];\n    if (sum == k) return true;\n  }\n  return false;\n}\nvoid solve() {\n  long long int k;\n  scan(k);\n  long long int n = k % 25;\n  long long int t = k / 25;\n  string str = \"abcdefghijklmnopqrstuvwxyz\";\n  if (n > 0) {\n    string b = str.substr(0, n + 1);\n    reverse(b.begin(), b.end());\n    cout << b;\n  }\n  reverse(str.begin(), str.end());\n  while (t--) {\n    cout << str;\n  }\n  cout << '\\n';\n}\nlong long int phi(long long int n) {\n  if (n == 1) return 2;\n  long long int i;\n  long long int result = n;\n  for (i = 2; i * i <= n; i++) {\n    if (n % i == 0) {\n      while (n % i == 0) n /= i;\n      result -= result / i;\n    }\n  }\n  if (n > 1) result -= result / n;\n  return result;\n}\nbool checkprime(long long int n) {\n  if (n == 1) return false;\n  if (n == 2 || n == 3) return true;\n  long long int i;\n  for (i = 2; i * i <= n; i++) {\n    if (n % i == 0) break;\n  }\n  if (i * i > n)\n    return true;\n  else\n    return false;\n}\nbool lexicographical_compare(string s1, string s2) {\n  for (long long int i = 0; i < min(s1.length(), s2.length()); i++) {\n    if (s1[i] < s2[i]) return true;\n    if (s1[i] > s2[i]) return false;\n  }\n  if (s1.length() <= s2.length()) return true;\n}\nlong long int reverse(long long int n) {\n  long long int sum = 0;\n  long long int i = 0;\n  long long int temp = n;\n  long long int len = 0;\n  while (temp > 0) {\n    len++;\n    temp /= 10;\n  }\n  while (n > 0) {\n    sum += (n % 10) * pow(10, len - i - 1);\n    i++;\n    n /= 10;\n  }\n  return sum;\n}\nlong long int power(long long int x, long long int y, long long int p) {\n  long long int res = 1;\n  x = x % p;\n  while (y > 0) {\n    if (y & 1) res = (res * x) % p;\n    y = y >> 1;\n    x = (x * x) % p;\n  }\n  return res;\n}\nlong long int modularinverse(long long int a, long long int p) {\n  return power(a, p - 2, p);\n}\nbool prime[1000001];\nvoid sieve() {\n  prime[1] = false;\n  int i, j;\n  for (i = 2; i < 1000000; ++i) {\n    prime[i] = true;\n  }\n  for (i = 2; i * i < 1000000; ++i) {\n    if (prime[i]) {\n      for (j = 2; j * i < 1000000; ++j) prime[i * j] = false;\n    }\n  }\n}\nint digits(int n) {\n  int count = 0;\n  while (n > 0) {\n    count++;\n    n /= 10;\n  }\n  return count;\n}\nbool check(int n) {\n  int count = 0;\n  for (int i = 2; i <= sqrt(n); ++i) {\n    if (n % i == 0 && checkprime(i)) {\n      ++count;\n    } else if (n % i == 0) {\n      if (checkprime(n / i)) ++count;\n    }\n  }\n  if (count >= 3)\n    return true;\n  else\n    return false;\n}\nint gcd(int a, int b) {\n  if (a == 0) return b;\n  return gcd(b % a, a);\n}\nbool sortbysec(const pair<int, int> &a, const pair<int, int> &b) {\n  return (a.second < b.second);\n}\nbool isLeapYear(int year) {\n  if (year % 400 == 0)\n    return true;\n  else if (year % 100 == 0)\n    return false;\n  else if (year % 4 == 0)\n    return true;\n  else\n    return false;\n}\nbool check(int x, int y) {\n  map<int, int> fuck;\n  map<int, int> fuckoff;\n  while (x > 0) {\n    fuck[x % 10]++;\n    x /= 10;\n  }\n  while (y > 0) {\n    fuckoff[y % 10]++;\n    y /= 10;\n  }\n  bool ok = false;\n  for (int i = 0; i < 10; i++) {\n    if (fuck[i] > 0 && fuckoff[i] > 0) {\n      ok = true;\n      break;\n    }\n  }\n  return ok;\n}\nsigned main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  int n;\n  cin >> n;\n  int a[n];\n  int b[n];\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n    b[i] = a[i];\n  }\n  sort(b, b + n);\n  int count = 0;\n  for (int i = 0; i < n; i++) {\n    if (a[i] != b[i]) ++count;\n  }\n  if (count == 0 || count == 2) {\n    puts(\"YES\");\n    return 0;\n  }\n  puts(\"NO\");\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\npublic class a {\npublic static void main(String[] args) throws IOException\n{\n    input.init(System.in);\n    PrintWriter out = new PrintWriter(System.out);\n    \n    int n = input.nextInt();\n    int[] data = new int[n];\n    for(int i =0; i<n; i++) data[i] = input.nextInt();\n    boolean found = false;\n    int[] max = new int[n];\n    max[0] = data[0];\n    for(int i = 1; i<n; i++) max[i] = Math.max(max[i-1], data[i]);\n    for(int i = n-1; i>=0 && !found; i--)\n    {\n        int at = data[i];\n        if(max[i] > at)\n        {\n            for(int j = 0; j<n; j++)\n            {\n                if(data[j] > data[i])\n                {\n                    int temp = data[i];\n                    data[i] = data[j];\n                    data[j] = temp;\n                    found = true;\n                    break;\n                }\n            }\n        }\n        //else max[i] = Math.max(max[i], at);\n    }\n    boolean good = true;\n    for(int i =0; i<n-1; i++)\n    {\n        good &= data[i] <= data[i+1];\n    }\n    out.println(good?\"YES\":\"NO\");\n    out.close();\n}\nstatic class Soldier implements Comparable<Soldier> {\n    int b, i;\n    public Soldier(int bb, int ii)\n    {\n        b = bb; i = ii;\n    }\n    @Override\n    public int compareTo(Soldier that) {\n        // TODO Auto-generated method stub\n        return that.b - this.b;\n    }\n}\npublic static class input {\n    static BufferedReader reader;\n    static StringTokenizer tokenizer;\n\n    /** call this method to initialize reader for InputStream */\n    static void init(InputStream input) {\n        reader = new BufferedReader(\n                     new InputStreamReader(input) );\n        tokenizer = new StringTokenizer(\"\");\n    }\n\n    /** get next word */\n    static String next() throws IOException {\n        while ( ! tokenizer.hasMoreTokens() ) {\n            //TODO add check for eof if necessary\n            tokenizer = new StringTokenizer(\n                   reader.readLine() );\n        }\n        return tokenizer.nextToken();\n    }\n\n    static int nextInt() throws IOException {\n        return Integer.parseInt( next() );\n    }\n    \n    static double nextDouble() throws IOException {\n        return Double.parseDouble( next() );\n    }\n    static long nextLong() throws IOException {\n        return Long.parseLong( next() );\n    }\n}\nstatic class IT\n{\n    int[] left,right, val, a, b;\n    IT(int n)\n    {\n        left = new int[4*n];\n        right = new int[4*n];\n        val = new int[4*n];\n        a = new int[4*n];\n        b = new int[4*n];\n        init(0,0, n);\n    }\n    int init(int at, int l, int r)\n    {\n        a[at] = l;\n        b[at] = r;\n        if(l==r)\n            left[at] = right [at] = -1;\n        else \n        {\n            int mid = (l+r)/2;\n            left[at] = init(2*at+1,l,mid);\n            right[at] = init(2*at+2,mid+1,r);\n        }\n        return at++;\n    }\n    //return the sum over [x,y]\n    int get(int x, int y)\n    {\n        return go(x,y, 0);\n    }\n    int go(int x,int y, int at)\n    {\n        if(at==-1) return 0;\n        if(x <= a[at] && y>= b[at]) return val[at];\n        if(y<a[at] || x>b[at]) return 0;\n        return go(x, y, left[at]) + go(x, y, right[at]);\n    }\n    //add v to elements x through y\n    void add(int x, int y, int v)\n    {\n        go3(x, y, v, 0);\n    }\n    void go3(int x, int y, int v, int at)\n    {\n        if(at==-1) return;\n        if(y < a[at] || x > b[at]) return;\n        val[at] += (Math.min(b[at], y) - Math.max(a[at], x) + 1)*v;\n        go3(x, y, v, left[at]);\n        go3(x, y, v, right[at]);\n    }\n}\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.FileReader;\nimport java.io.FileWriter;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.OutputStreamWriter;\nimport java.math.BigDecimal;\nimport java.math.BigInteger;\nimport java.nio.ByteBuffer;\nimport java.util.ArrayDeque;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.LinkedList;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.PriorityQueue;\nimport java.util.Stack;\n\n//: God does not play dice with the world :)\n public class Main{\n     \n\n     public static void main(String[] args) throws IOException {\n//        String IN = \"C:\\\\Users\\\\ugochukwu.okeke\\\\Desktop\\\\in.file\";\n//        String OUT = \"C:\\\\Users\\\\ugochukwu.okeke\\\\Desktop\\\\out.file\";\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));\n        //System.out.println((-50+50*15)%15);\n        //int n = Integer.parseInt(br.readLine());\n        //String[] in = br.readLine().split(\" \");\n        int n = Integer.parseInt(br.readLine());\n        String[] in=br.readLine().split(\" \");\n        int[] a = new int[n];\n        for(int i=0;i<n;i++) a[i] = Integer.parseInt(in[i]);\n        int[] f = new int[n];\n        f[0]=0;\n        for(int i=1;i<n;i++) {\n            if(a[i] > a[f[i-1]]) f[i] = i;\n            else f[i]=f[i-1];\n            \n        }\n        \n        int y=-1,s=-1;\n        for(int i=n-1;i>=0;i--) {\n            if(a[f[i]] > a[i]) {\n                //check if we can fill up the y and s values and break\n                y=f[i];\n                s=i;\n                //System.out.println(\"using \"+y+\" \"+s);\n                boolean first = i+1 >= n ? true :  (a[y] <= a[i+1] ? true : false);\n                boolean second = (y-1)<0 ? true :  a[s] >= a[y-1] ? true : false;\n                boolean third = y+1 >= n ? true : a[s] <= a[y+1] ? true : false;\n                if(first && second && third){\n                    break;\n                }\n                else{\n                    //System.out.println(\"not met at \"+y+\" \"+s);\n                    y=-1;\n                    s=-1;\n                }\n            }\n        }\n        if(y!=-1 && s !=-1) {\n            //do a swap\n            int tmp = a[y];\n            a[y] = a[s];\n            a[s]=tmp;\n        }\n        \n        //check if the array is sorted\n        boolean bad = false;\n        for(int i=1;i<n;i++) {\n            if(a[i] < a[i-1]) {\n                bad=true;\n                break;\n            }\n        }\n        if(bad) {\n            System.out.println(\"NO\");\n        }\n        else{\n            System.out.println(\"YES\");\n        }\n        \n        \n        bw.close();\n     }\n\n    \n\n    \n }"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\n#pragma comment(linker, \"/STACK:256000000\")\nusing namespace std;\nint a[110000], b[110000];\nint main() {\n  ios_base::sync_with_stdio(false);\n  int n;\n  cin >> n;\n  for (int i = 0; i < (int)(n); i++) {\n    cin >> a[i];\n    b[i] = a[i];\n  }\n  sort(b, b + n);\n  int cnt = 0;\n  for (int i = 0; i < (int)(n); i++) {\n    if (a[i] != b[i]) ++cnt;\n  }\n  if (cnt <= 2)\n    cout << \"YES\";\n  else\n    cout << \"NO\";\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class slonproblem{\n\n    public static void main(String[] args) {\n\n        Scanner in = new Scanner(System.in);\n        boolean flag = true;\n\n\n        int n = in.nextInt();\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = in.nextInt();\n        }\n        \n\n\n        for (int k = 1; k < n; k++) {\n            if (a[k-1] > a[k]) {\n                flag = false;\n            }\n        }\n        if (flag){\n            System.out.println(\"YES\");\n            return;\n        }\n\n\n        int i = 0;\n\n        while (i < n-1 && a[i] <= a[i+1])\n            i++;\n        if (i == n-1) {\n            System.out.println(\"NO\");\n            return;\n        }\n        \n        int j = n - 1;\n\n        while (j > 0 && a[j-1] <= a[j] )\n            j--;\n\n        if (j == 0) {\n            System.out.println(\"NO\");\n            return;\n        }\n\n\n        while (i > 0 && a[i] == a[i-1])\n            i--;\n\n        while (j < n-1 && a[j] == a[j+1])\n            j++;\n\n        int swap = a[i];\n        a[i] = a[j];\n        a[j] = swap;\n\n        for (int k = 1; k < n; k++) {\n            if (a[k-1] > a[k]) {\n                System.out.println(\"NO\");\n                return;\n            }\n        }\n\n        System.out.println(\"YES\");\n        return;\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[100003], b[100003];\nint main() {\n  int n, m, c = 0, r = 0;\n  cin >> n;\n  int a[n], b[n];\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n    b[i] = a[i];\n  }\n  std::sort(b, b + n);\n  for (int i = 0; i < n; i++) {\n    if (a[i] != b[i]) r++;\n  }\n  if (r > 2)\n    cout << \"NO\";\n  else\n    cout << \"YES\";\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  int a[n], b[n];\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n    b[i] = a[i];\n  }\n  sort(a, a + n);\n  int c = 0;\n  for (int i = 0; i < n; i++) {\n    if (a[i] != b[i]) {\n      c++;\n    }\n  }\n  if (c > 2) {\n    cout << \"NO\" << endl;\n  } else {\n    cout << \"YES\" << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.FileNotFoundException;\nimport java.io.FileWriter;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.math.BigDecimal;\nimport java.math.BigInteger;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.StringTokenizer;\n\npublic class Main {\n    Scanner in;\n    PrintWriter out;\n\n    void setIn(String fI) {\n\n        try {\n            in = new Scanner(new FileInputStream(new File(fI)));\n        } catch (FileNotFoundException e) {\n            throw new Error(e);\n        }\n    }\n\n    void setIn() {\n        in = new Scanner(System.in);\n    }\n\n    void setOut(String fO) {\n        try {\n            out = new PrintWriter(new FileWriter(fO));\n        } catch (IOException e) {\n            throw new Error(e);\n        }\n    }\n\n    void setOut() {\n        out = new PrintWriter(System.out);\n    }\n\n    class Scanner {\n        StringTokenizer st;\n        BufferedReader in;\n        String del;\n\n        Scanner(InputStream is) {\n            in = new BufferedReader(new InputStreamReader(is));\n            st = null;\n            del = \" \\t\\n\\r\\f\";\n        }\n\n        void setDelimiters(String del) {\n            this.del = del;\n        }\n\n        String next() {\n            if (st == null || !st.hasMoreTokens()) {\n                st = new StringTokenizer(nextLine(), del);\n            }\n            if (!st.hasMoreElements()) {\n                return next();\n            }\n            return st.nextToken();\n        }\n\n        String nextLine() {\n            try {\n                st = null;\n                return in.readLine();\n            } catch (IOException e) {\n                throw new Error(e);\n            }\n        }\n\n        char nextChar() {\n            try {\n                char ch = (char) in.read();\n                while (del.indexOf(ch) >= 0)\n                    ch = (char) in.read();\n                return ch;\n            } catch (IOException e) {\n                throw new Error(e);\n            }\n        }\n\n        boolean hasNext() {\n            try {\n                return in.ready() || (st != null && st.hasMoreTokens());\n            } catch (IOException e) {\n                throw new Error(e);\n            }\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        BigInteger nextBigInteger() {\n            return new BigInteger(next());\n        }\n\n        BigDecimal nextBigDecimal() {\n            return new BigDecimal(next());\n        }\n\n        int[] nextIntArray(int len) {\n            int[] a = new int[len];\n            for (int i = 0; i < len; i++) {\n                a[i] = nextInt();\n            }\n            return a;\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n    }\n\n    public static void main(String[] args) {\n        new Main().run();\n    }\n\n    void run() {\n        setIn();\n        setOut();\n        try {\n            solve();\n        } finally {\n            out.close();\n        }\n    }\n\n    void solve() {\n        int n = in.nextInt();\n        ArrayList<Integer> a = new ArrayList<Integer>();\n        for (int i = 0; i < n; i++) {\n            a.add(in.nextInt());\n        }\n        ArrayList<Integer> b = new ArrayList<Integer>(a);\n        int clz = 0;\n        Collections.shuffle(b);\n        Collections.sort(b);\n        for (int i = 0; i < n; i++) {\n            if (a.get(i).intValue() != b.get(i).intValue()) {\n                clz++;\n                if (clz > 2) {\n                    out.println(\"NO\");\n                    return;\n                }\n            }\n        }\n        out.println(\"YES\");\n\n    }\n}"
        },
        {
            "language": 1,
            "solution": "def main ():\n\tn = input()\n\tp = raw_input()\n\t\n\tp = map(int,p.split())\n\t\n\tq = []\n\t\n\tfor i in range (0,n):\n\t\tq.append(p[i])\n\t\n\tq.sort()\n\t\n\tl = len(p)\n\t\n\tans = 0\n\t\n\tfor i in range (0,l):\n\t\tif (p[i]!=q[i]):\n\t\t\tans += 1\n\t\n\tif (ans <= 2):\n\t\tprint \"YES\"\n\t\t\n\telse:\n\t\tprint \"NO\"\n\t\nwhile (True):\n\ttry:\n\t\tmain ()\n\t\t\n\texcept EOFError:\n\t\tbreak\n\t"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  cin.tie(0);\n  std::ios::sync_with_stdio(false);\n  double x, y, z;\n  cin >> x;\n  vector<int> vec, v;\n  for (int i = 0; i < x; i++) {\n    cin >> y;\n    vec.push_back(y);\n    v.push_back(y);\n  }\n  long long L = 0, R = 0, n = 0;\n  sort(vec.begin(), vec.end());\n  for (int i = 0; i < x; i++) {\n    if (vec[i] != v[i]) {\n      n++;\n    }\n  }\n  if (n > 2) {\n    cout << \"NO\" << endl;\n  } else {\n    cout << \"YES\" << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 100000;\nint a[maxn];\nint main() {\n  int n;\n  scanf(\"%i\", &n);\n  for (int i = 0; i < n; i++) scanf(\"%i\", &a[i]);\n  int cnt = 0;\n  int l = 0, r = 0;\n  for (int i = 1; i < n; i++)\n    if (a[i - 1] > a[i]) {\n      if (cnt == 2) {\n        printf(\"NO\\n\");\n        return 0;\n      }\n      if (cnt == 0) {\n        l = i - 1;\n        cnt++;\n      } else {\n        r = i;\n        cnt++;\n      }\n    }\n  if (cnt == 0) {\n    printf(\"YES\\n\");\n    return 0;\n  }\n  if (cnt == 1) {\n    r = l + 1;\n    for (; l > 0; l--)\n      if (a[l - 1] != a[l]) break;\n    for (; r < n - 1; r++)\n      if (a[r + 1] != a[r]) break;\n  }\n  swap(a[l], a[r]);\n  for (int i = 1; i < n; i++) {\n    if (a[i - 1] > a[i]) {\n      printf(\"NO\\n\");\n      return 0;\n    }\n  }\n  printf(\"YES\\n\");\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvector<bool> prime;\nvector<long long> fact, inv, primes, factors;\nvoid fast() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n}\nvoid factorize(long long a) {\n  fact.clear();\n  for (long long i = 1; i * i <= a; i++) {\n    if (i * i == a)\n      factors.push_back(i);\n    else if (a % i == 0) {\n      factors.push_back(i);\n      factors.push_back(a / i);\n    }\n  }\n  sort(factors.begin(), factors.end());\n}\nlong long power(long long a, long long b) {\n  if (a == 1 || b == 0) return 1;\n  long long c = power(a, b / 2);\n  long long res = 1;\n  res = c * c;\n  if (b % 2) res *= a;\n  return res;\n}\nlong long modInv(long long a) { return power(a, 1000000007 - 2); }\nvoid factorial(long long n) {\n  fact.resize(n + 1);\n  fact[0] = 1;\n  for (long long i = 1; i <= n; i++) {\n    fact[i] = fact[i - 1] * i;\n    if (fact[i] >= 1000000007) fact[i] %= 1000000007;\n  }\n}\nvoid InvFactorial(long long n) {\n  inv.resize(n + 1);\n  inv[0] = 1;\n  for (long long i = 1; i <= n; i++) inv[i] = modInv(fact[i]);\n}\nlong long ncr(long long n, long long r) {\n  if (n < r || n < 0 || r < 0) return 0;\n  long long b = inv[n - r];\n  long long c = inv[r];\n  long long a = fact[n] * b;\n  if (a >= 1000000007) a %= 1000000007;\n  a *= c;\n  if (a >= 1000000007) a %= 1000000007;\n  return a;\n}\nvoid remove_duplicates(vector<pair<long long, long long>> &v) {\n  sort(v.begin(), v.end());\n  long long _size = unique(v.begin(), v.end()) - v.begin();\n  v.resize(_size);\n}\nunsigned long long gcd(unsigned long long u, unsigned long long v) {\n  if (u == 0 || v == 0) return max(u, v);\n  unsigned long long shift = __builtin_ctz(u | v);\n  u >>= __builtin_ctz(u);\n  do {\n    v >>= __builtin_ctz(v);\n    if (u > v) swap(u, v);\n    v -= u;\n  } while (v != 0);\n  return u << shift;\n}\nvoid sieve(long long n) {\n  prime.assign(n + 1, 1);\n  prime[1] = false;\n  for (long long p = 2; p * p <= n; p++)\n    if (prime[p])\n      for (long long i = p * p; i <= n; i += p) prime[i] = false;\n  for (long long i = 2; i < n + 1; i++)\n    if (prime[i]) primes.push_back(i);\n}\nvoid solve() {\n  long long n;\n  cin >> n;\n  vector<long long> a(n), b(n);\n  for (long long i = 0; i < n; i++) cin >> a[i];\n  b = a;\n  sort(b.begin(), b.end());\n  long long count = 0;\n  for (long long i = 0; i < n; i++) {\n    if (a[i] != b[i]) count++;\n  }\n  if (count == 0 || count == 2)\n    cout << \"Yes\" << '\\n';\n  else\n    cout << \"No\" << '\\n';\n}\nsigned main() {\n  fast();\n  long long T = 1;\n  for (long long i = 1; i <= T; i++) solve();\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\nimport java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.PrintWriter;\nimport java.util.AbstractQueue;\nimport java.util.PriorityQueue;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n * @author George Marcus\n */\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tScanner in = new Scanner(inputStream);\n\t\tPrintWriter out = new PrintWriter(outputStream);\n\t\tTaskC solver = new TaskC();\n\t\tsolver.solve(1, in, out);\n\t\tout.close();\n\t}\n}\n\nclass TaskC {\n\tpublic void solve(int testNumber, Scanner in, PrintWriter out) {\n        int N = in.nextInt();\n        int[] A = new int[N];\n        PriorityQueue<Integer> S = new PriorityQueue<Integer>();\n        for(int i = 0; i < N; i++) {\n            A[i] = in.nextInt();\n            S.add(A[i]);\n        }\n        int[] sortedA = new int[N];\n        int index = 0;\n        while(S.size() > 0) {\n            sortedA[index++] = S.remove();\n        }\n\n        int diff = 0;\n\n        for(int i = 0; i < N; i++)\n            if(A[i] != sortedA[i])\n                diff++;\n\n        if(diff <= 2)\n            out.print(\"YES\");\n        else\n            out.print(\"NO\");\n\t}\n}\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint A[100008], B[100008];\nint main() {\n  int n;\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> A[i];\n    B[i] = A[i];\n  }\n  sort(B, B + n);\n  int i = 0, c = 0;\n  while (i != n) {\n    if (A[i] != B[i]) c++;\n    i++;\n  }\n  if (c == 0 || c == 2)\n    cout << \"YES\\n\";\n  else\n    cout << \"NO\\n\";\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = (int)1e5;\nint a[N], b[N];\nint main() {\n  int n;\n  scanf(\"%d\", &n);\n  for (int i = 0; i < n; i++) {\n    scanf(\"%d\", &a[i]);\n    b[i] = a[i];\n  }\n  sort(b, b + n);\n  int cnt = 0;\n  for (int i = 0; i < n; i++) {\n    if (a[i] != b[i]) cnt++;\n  }\n  printf(\"%s\\n\", (cnt > 2) ? \"NO\" : \"YES\");\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.ByteArrayInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.InputMismatchException;\n\npublic class Main {\n\tInputStream is;\n\tPrintWriter out;\n\tString INPUT = \"\";\n\t\n\tvoid solve() {\n\t\tint n =  ni();\n\t\tint[] a = na(n);\n\t\tint[] b = Arrays.copyOf(a, n);\n\t\tArrays.sort(b);\n\t\tint ct = 0;\n\t\tfor(int i = 0; i < n; i++) {\n\t\t\tif(a[i] != b[i]) ct++;\n\t\t}\n\t\tout.println(ct <= 2 ? \"YES\" : \"NO\");\n\t}\n\t\t\t\n\tvoid run() throws Exception {\n\t\tis = INPUT.isEmpty() ? System.in : new ByteArrayInputStream(INPUT.getBytes());\n\t\tout = new PrintWriter(System.out);\n\n\t\tlong s = System.currentTimeMillis();\n\t\tsolve();\n\t\tout.flush();\n\t\tif (!INPUT.isEmpty())\n\t\t\ttr(System.currentTimeMillis() - s + \"ms\");\n\t}\n\n\tpublic static void main(String[] args) throws Exception {\n\t\tnew Main().run();\n\t}\n\n\tprivate byte[] inbuf = new byte[1024];\n\tpublic int lenbuf = 0, ptrbuf = 0;\n\n\tprivate int readByte() {\n\t\tif (lenbuf == -1)\n\t\t\tthrow new InputMismatchException();\n\t\tif (ptrbuf >= lenbuf) {\n\t\t\tptrbuf = 0;\n\t\t\ttry {\n\t\t\t\tlenbuf = is.read(inbuf);\n\t\t\t} catch (IOException e) {\n\t\t\t\tthrow new InputMismatchException();\n\t\t\t}\n\t\t\tif (lenbuf <= 0)\n\t\t\t\treturn -1;\n\t\t}\n\t\treturn inbuf[ptrbuf++];\n\t}\n\n\tprivate boolean isSpaceChar(int c) {\n\t\treturn !(c >= 33 && c <= 126);\n\t}\n\n\tprivate int skip() {\n\t\tint b;\n\t\twhile ((b = readByte()) != -1 && isSpaceChar(b))\n\t\t\t;\n\t\treturn b;\n\t}\n\n\tprivate double nd() {\n\t\treturn Double.parseDouble(ns());\n\t}\n\n\tprivate char nc() {\n\t\treturn (char) skip();\n\t}\n\n\tprivate String ns() {\n\t\tint b = skip();\n\t\tStringBuilder sb = new StringBuilder();\n\t\twhile (!(isSpaceChar(b))) { // when nextLine, (isSpaceChar(b) && b != ' ')\n\t\t\tsb.appendCodePoint(b);\n\t\t\tb = readByte();\n\t\t}\n\t\treturn sb.toString();\n\t}\n\n\tprivate char[] ns(int n) {\n\t\tchar[] buf = new char[n];\n\t\tint b = skip(), p = 0;\n\t\twhile (p < n && !(isSpaceChar(b))) {\n\t\t\tbuf[p++] = (char) b;\n\t\t\tb = readByte();\n\t\t}\n\t\treturn n == p ? buf : Arrays.copyOf(buf, p);\n\t}\n\n\tprivate char[][] nm(int n, int m) {\n\t\tchar[][] map = new char[n][];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\tmap[i] = ns(m);\n\t\treturn map;\n\t}\n\n\tprivate int[] na(int n) {\n\t\tint[] a = new int[n];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\ta[i] = ni();\n\t\treturn a;\n\t}\n\n\tprivate int ni() {\n\t\tint num = 0, b;\n\t\tboolean minus = false;\n\t\twhile ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'))\n\t\t\t;\n\t\tif (b == '-') {\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\n\t\twhile (true) {\n\t\t\tif (b >= '0' && b <= '9') {\n\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t} else {\n\t\t\t\treturn minus ? -num : num;\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\n\tprivate long nl() {\n\t\tlong num = 0;\n\t\tint b;\n\t\tboolean minus = false;\n\t\twhile ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'))\n\t\t\t;\n\t\tif (b == '-') {\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\n\t\twhile (true) {\n\t\t\tif (b >= '0' && b <= '9') {\n\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t} else {\n\t\t\t\treturn minus ? -num : num;\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\n\tprivate static void tr(Object... o) {\n\t\tSystem.out.println(Arrays.deepToString(o));\n\t}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[100000], b[100000];\nint main() {\n  int n, s = 0;\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n    b[i] = a[i];\n  }\n  sort(a, a + n);\n  for (int i = 0; i < n; i++)\n    if (a[i] != b[i]) s++;\n  if (s > 2)\n    cout << \"NO\";\n  else\n    cout << \"YES\";\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[100000], b[100000];\nint main() {\n  int n, s = 0;\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    scanf(\"%d\", &a[i]);\n    b[i] = a[i];\n  }\n  sort(a, a + n);\n  for (int i = 0; i < n; i++) {\n    if (a[i] != b[i]) s++;\n    if (s > 2) {\n      cout << \"NO\";\n      return 0;\n    }\n  }\n  cout << \"YES\";\n}\n"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\narr = raw_input()\narr = arr.split()\nnewarr = []\n\nfor i in range(0, n):\n\tarr[i] = int(arr[i])\n\tnewarr.append(arr[i])\n\t\nnewarr.sort()\n\ncount = 0\nfor i in range(0, n):\n\tif (arr[i] != newarr[i]):\n\t\tcount += 1\n\nif (count < 3):\n\tprint 'YES'\nelse:\n\tprint 'NO'\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.File;\nimport java.io.FileReader;\nimport java.io.FileWriter;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.OutputStreamWriter;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Enumeration;\nimport java.util.Iterator;\nimport java.util.List;\nimport java.util.Properties;\n\n/**\n * Works good for CF\n * @author cykeltillsalu\n */\npublic class CC137 {\n\n\t//some local config\n\tstatic boolean test = false;\n\tstatic String testDataFile = \"testdata.txt\";\n\tstatic String feedFile = \"feed.txt\";\n\tCompetitionType type = CompetitionType.CF;\n\tprivate static String ENDL = \"\\n\";\n\n\t// solution\n\tprivate void solve() throws Throwable {\n\t\tint n = iread();\n\t\tList<Integer> r = new ArrayList<Integer>(n);\n\t\tList<Integer> sorted = new ArrayList<Integer>(n);\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tint x = iread();\n\t\t\tr.add(x);\n\t\t\tsorted.add(x);\n\t\t}\n\t\t\n\t\tCollections.sort(sorted);\n\t\t\n\t\tint mod = 0;\n\t\tint cnt = 0;\n\t\t\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tif(!r.get(i + mod).equals(sorted.get(i))){\n\t\t\t\tcnt ++;\n\t\t\t}\n\t\t}\n\t\tif(cnt == 0 || cnt == 2){\n\t\t\tSystem.out.println(\"YES\");\n\t\t} else {\n\t\t\tSystem.out.println(\"NO\");\n\t\t}\n\t}\n\t\n\tpublic int iread() throws Exception {\n\t\treturn Integer.parseInt(wread());\n\t}\n\n\tpublic double dread() throws Exception {\n\t\treturn Double.parseDouble(wread());\n\t}\n\n\tpublic long lread() throws Exception {\n\t\treturn Long.parseLong(wread());\n\t}\n\n\tpublic String wread() throws IOException {\n\t\tStringBuilder b = new StringBuilder();\n\t\tint c;\n\t\tc = in.read();\n\t\twhile (c >= 0 && c <= ' ')\n\t\t\tc = in.read();\n\t\tif (c < 0)\n\t\t\treturn \"\";\n\t\twhile (c > ' ') {\n\t\t\tb.append((char) c);\n\t\t\tc = in.read();\n\t\t}\n\t\treturn b.toString();\n\t}\n\n\tpublic static void main(String[] args) throws Throwable {\n\t\t\n\t\tif(test){ //run all cases from testfile:\n\t\t\tBufferedReader testdataReader = new BufferedReader(new FileReader(testDataFile));\n\t\t\tString readLine = testdataReader.readLine();\n\t\t\tint casenr = 0;\n\t\t\tout: while (true) {\n\t\t\t\tBufferedWriter w = new BufferedWriter(new FileWriter(feedFile));\n\t\t\t\tif(!readLine.equalsIgnoreCase(\"input\")){\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\twhile (true) {\n\t\t\t\t\treadLine = testdataReader.readLine();\n\t\t\t\t\tif(readLine.equalsIgnoreCase(\"output\")){\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tw.write(readLine + \"\\n\");\n\t\t\t\t}\n\t\t\t\tw.close();\n\t\t\t\tSystem.out.println(\"Answer on case \"+(++casenr)+\": \");\n\t\t\t\t\n\t\t\t\tnew CC137().solve();\n\t\t\t\tSystem.out.println(\"Expected answer: \");\n\t\t\t\t\n\t\t\t\t\n\t\t\t\twhile (true) {\n\t\t\t\t\treadLine = testdataReader.readLine();\n\t\t\t\t\t\n\t\t\t\t\tif(readLine == null){\n\t\t\t\t\t\tbreak out;\n\t\t\t\t\t}\n\t\t\t\t\tif(readLine.equalsIgnoreCase(\"input\")){\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tSystem.out.println(readLine);\n\t\t\t\t}\n\t\t\t\tSystem.out.println(\"----------------\");\n\t\t\t}\n\t\t\ttestdataReader.close();\n\t\t} else { // run on server\n\t\t\tnew CC137().solve();\n\t\t}\n\t\tout.close();\n\t}\n\n\tpublic CC137() throws Throwable {\n\t\tif (test) {\n\t\t\tin = new BufferedReader(new FileReader(new File(feedFile)));\n\t\t}\n\t}\n\n\tInputStreamReader inp = new InputStreamReader(System.in);\n\tBufferedReader in = new BufferedReader(inp);\n\tstatic BufferedWriter out = new BufferedWriter(new OutputStreamWriter(System.out));\n\t\n\tenum CompetitionType {CF, OTHER};\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.InputMismatchException;\nimport java.io.IOException;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        inclass in = new inclass(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        CLittleElephantAndProblem solver = new CLittleElephantAndProblem();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class CLittleElephantAndProblem {\n        public void solve(int testNumber, inclass in, PrintWriter out) {\n            int c = 0;\n            int n = in.nextInt();\n            int arr[] = in.nextIntArray(n);\n            int new_arr[] = arr.clone();\n            Arrays.sort(new_arr);\n            for (int i = 0; i < new_arr.length; i++) {\n                if (arr[i] != new_arr[i]) {\n                    c++;\n                }\n            }\n            if (c == 0 || c == 2) {\n                out.println(\"YES\");\n            } else {\n                out.println(\"NO\");\n            }\n\n        }\n\n    }\n\n    static class inclass {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private inclass.SpaceCharFilter filter;\n\n        public inclass(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int read() {\n            if (numChars == -1) {\n                throw new InputMismatchException();\n            }\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (numChars <= 0) {\n                    return -1;\n                }\n            }\n            return buf[curChar++];\n        }\n\n        public int nextInt() {\n            int c = read();\n            while (isSpaceChar(c)) {\n                c = read();\n            }\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do {\n                if (c < '0' || c > '9') {\n                    throw new InputMismatchException();\n                }\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public boolean isSpaceChar(int c) {\n            if (filter != null) {\n                return filter.isSpaceChar(c);\n            }\n            return isWhitespace(c);\n        }\n\n        public static boolean isWhitespace(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        public int[] nextIntArray(int n) {\n            int[] array = new int[n];\n            for (int i = 0; i < n; ++i) array[i] = nextInt();\n            return array;\n        }\n\n        public interface SpaceCharFilter {\n            public boolean isSpaceChar(int ch);\n\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 3,
            "solution": "#------------------------template--------------------------#\nimport os\nimport sys\nfrom math import *\nfrom collections import *\nfrom fractions import *\nfrom bisect import *\nfrom heapq import*\nfrom io import BytesIO, IOBase\ndef vsInput():\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\nBUFSIZE = 8192\nclass FastIO(IOBase):\n    newlines = 0\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\ndef value():return tuple(map(int,input().split()))\ndef array():return [int(i) for i in input().split()]\ndef Int():return int(input())\ndef Str():return input()\ndef arrayS():return [i for i in input().split()]\n\n#-------------------------code---------------------------#\n#vsInput()\n\nn=Int()\na=array()\n\nsorted_a=sorted(a)\ndisturbed=[]\n\nfor i in range(n):\n    if(a[i]!=sorted_a[i]):\n        disturbed.append(i)\n\nif(len(disturbed)<=2): print(\"YES\")\nelse: print(\"NO\")\n\n\n    \n    \n\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class C {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        int n = in.nextInt();\n        \n        Integer[] nums1 = new Integer[n];\n        for(int i = 0; i < n; i++)\n            nums1[i] = in.nextInt();\n        \n        Integer[] nums2 = nums1.clone();\n        Arrays.sort(nums2);\n        \n        int cnt = 0;\n        for(int i = 0; i < n; i++)\n            if(!nums1[i].equals(nums2[i]))\n                cnt++;\n        \n        if(cnt <= 2)\n            System.out.println(\"YES\");\n        else\n            System.out.println(\"NO\");\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.InputStreamReader;\nimport java.io.OutputStreamWriter;\nimport java.util.Arrays;\n\npublic class C {\n\n    public static void main(String[] args) throws Exception {\n        BufferedReader r = new BufferedReader(new InputStreamReader(System.in));\n        String str = r.readLine();\n        String[] sp = r.readLine().split(\"[ ]+\");\n        int[] arr = new int[sp.length];\n        Integer[] arr2 = new Integer[sp.length];\n        for (int i = 0; i < arr.length; i++) {\n            arr[i] = new Integer(sp[i]);\n            arr2[i] = arr[i];\n        }\n        Arrays.sort(arr2);\n        int c = 0;\n        for (int i = 0; i < arr2.length; i++) {\n            if (arr[i] != arr2[i])\n                c++;\n        }\n        if (c > 2) {\n            System.out.println(\"NO\");\n        } else\n            System.out.println(\"YES\");\n\n    }\n\n}\n"
        },
        {
            "language": 1,
            "solution": "a=input()\nb=[int(x) for x in raw_input().split()]\nc=[]\nfor x in b:\n\tc.append(x)\nc.sort()\nd=0\nfor x in range(a):\n\tif b[x]!=c[x]:\n\t\td+=1\nif d>2:\n\tprint 'NO'\nelse:\n\tprint 'YES'\n"
        },
        {
            "language": 1,
            "solution": "\nmyin = int(raw_input())\n\nmyarr = map(int, raw_input().split())\n\nmyarr2 = []\nfor i in myarr:\n    myarr2.append(i)\nmyarr.sort()\n\ncount = 0\n\nfor i in range(myin):\n    if myarr[i] != myarr2[i]:\n        count += 1\n\nif count <= 2:\n    print 'YES'\nelse:\n    print 'NO'\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int INF = 2 * (1e9);\nint main() {\n  int N, cnt = 0;\n  cin >> N;\n  vector<int> A(N);\n  for (int &i : A) {\n    cin >> i;\n  }\n  vector<int> B = A;\n  sort(B.begin(), B.end());\n  for (int i = 0; i < N; i++) {\n    if (A[i] != B[i]) {\n      cnt++;\n    }\n  }\n  if (cnt > 2) {\n    cout << \"NO\";\n  } else {\n    cout << \"YES\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.io.StreamTokenizer;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Scanner;\n\npublic class nC {\n    class Scanner {\n        InputStream in;\n        byte buffer[] = new byte[65536];\n        int pos = 0;\n        int len = 0;\n\n        Scanner(InputStream in) {\n            this.in = in;\n        }\n\n        int nextChar() {\n            try {\n                if (pos == len) {\n                    len = in.read(buffer);\n                    if (len == -1) {\n                        len = 0;\n                    }\n                    pos = 0;\n                }\n                if (pos == len) {\n                    return -1;\n                }\n                int ans = buffer[pos] & 0xFF;\n                pos++;\n                return ans;\n            } catch (IOException e) {\n                throw new Error(e);\n            }\n        }\n\n        int nextInt() {\n            int ch = nextChar();\n            while (ch == ' ' || ch == '\\r' || ch == '\\n' || ch == '\\t') {\n                ch = nextChar();\n            }\n            int sign = 1;\n            if (ch == '-') {\n                ch = nextChar();\n                sign = -1;\n            }\n            int value = ch - '0';\n            ch = nextChar();\n            while ('0' <= ch && ch <= '9') {\n                int d = ch - '0';\n                ch = nextChar();\n                value = value * 10 + d;\n            }\n            return value * sign;\n        }\n\n    }\n\n    Scanner in;\n    PrintWriter out;\n\n    boolean check(int a[]) {\n        int i = 0;\n        while (i < a.length - 1) {\n            if (a[i] > a[i + 1]) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    }\n\n    void solve() {\n        int n = in.nextInt();\n        int a[] = new int[n];\n        int b[] = new int[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = in.nextInt();\n            b[i] = a[i];\n        }\n        int k = 0;\n        Arrays.sort(b);\n        for (int i = 0; i < n; i++) {\n            if (a[i] != b[i]) {\n                k++;\n            }\n        }\n        if (k > 2) {\n            out.print(\"NO\");\n        } else {\n            out.print(\"YES\");\n        }\n    }\n\n    void run() {\n        in = new Scanner(System.in);\n        out = new PrintWriter(System.out);\n        try {\n            solve();\n        } finally {\n            out.close();\n        }\n    }\n\n    public static void main(String[] args) {\n        new nC().run();\n    }\n\n}\n"
        },
        {
            "language": 4,
            "solution": "import  java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.BufferedReader;\nimport java.util.*;\npublic class hacker\n{\n    /*FAtt gyi bbhai*/\n    static class FastReader\n    {\n        BufferedReader br;\n        StringTokenizer st;\n \n        public FastReader()\n        {\n            br = new BufferedReader(new\n                     InputStreamReader(System.in));\n        }\n \n        String next()\n        {\n            while (st == null || !st.hasMoreElements())\n            {\n                try\n                {\n                    st = new StringTokenizer(br.readLine());\n                }\n                catch (IOException  e)\n                {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n \n        int nextInt()\n        {\n            return Integer.parseInt(next());\n        }\n \n        long nextLong()\n        {\n            return Long.parseLong(next());\n        }\n \n        double nextDouble()\n        {\n            return Double.parseDouble(next());\n        }\n \n        String nextLine()\n        {\n            String str = \"\";\n            try\n            {\n                str = br.readLine();\n            }\n            catch (IOException e)\n            {\n                e.printStackTrace();\n            }\n            return str;\n        }\n    }\n\n    public static void main(String[] args)\n    {\n        new hacker().run();\n    }\n    void run()\n    {\n       FastReader sc = new FastReader();\n       int n = sc.nextInt();\n       int c=0;\n       int[] a = new int[n];\n       int[] cp = new int[n];\n       for(int i=0;i<n;i++)\n       {\n         a[i] = sc.nextInt();\n         cp[i] = a[i];\n\n       }\n\n       Arrays.sort(cp);\n       for(int i=0;i<n;i++)\n       {\n          if(a[i]!=cp[i])\n          {\n            c++;\n          }\n       }\n\n       if(c>2)\n       {\n        System.out.println(\"NO\");\n       }\n       else\n       {\n        System.out.println(\"YES\");\n       }\n    }\n\n   \n\n   \n\n    \n   \n\n\n    \n}\n\n   \n"
        },
        {
            "language": 1,
            "solution": "n=raw_input()\nls=map(int,raw_input().split())\ns=[]\nfor k in ls:\n    s.append(k)\n\ns.sort()\nflag=0\nc=0\nfor i in range(len(ls)):\n    if ls[i]-s[i]!=0:\n        c=c+1\n    if c>2:\n        flag=1\n        break\nif flag==1:\n    print \"NO\"\nelse:\n    print \"YES\"\n        \n    "
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Comparator;\nimport java.util.List;\nimport java.util.InputMismatchException;\n\npublic class Main {\n\n    IIO io;\n\n    Main(IIO io) {\n        this.io = io;\n    }\n\n    public static void main(String[] args) throws IOException {\n\n        ConsoleIO io = new ConsoleIO();\n        Main m = new Main(io);\n        m.solve();\n        io.flush();\n\n//        Tester test = new Tester();test.run();\n    }\n\n    public void solve() {\n        io.readLine();\n        int[] a = io.readIntArray();\n        io.writeWord(isOneSwap(a) ? \"YES\" : \"NO\");\n    }\n\n    boolean isOneSwap(int[] a) {\n        int idx1 = -1;\n        int idx2 = -1;\n        int n = a.length;\n        for (int i = 1; i < n; i++) {\n            int cur = a[i];\n            int prev = a[i - 1];\n            if (cur < prev) {\n                idx1 = i;\n                idx2 = i - 1;\n                break;\n            }\n        }\n        return checkPlace(a, idx1) || checkPlace(a, idx2);\n    }\n\n    boolean checkPlace(int[] a, int idx){\n        if (idx == -1) return true;\n        int n = a.length;\n        int v1 = a[idx];\n        int v1dec = idx == 0 ? Integer.MIN_VALUE : a[idx - 1];\n        int v1inc = idx == n - 1 ? Integer.MAX_VALUE : a[idx + 1];\n        int idx2 = -1;\n        for (int i = 0; i < n; i++)\n            if (i != idx) {\n                int v2 = a[i];\n                int v2dec = i == 0 ? Integer.MIN_VALUE : idx == i - 1 ? v2 : a[i - 1];\n                int v2inc = i == n-1 ? Integer.MAX_VALUE : idx == i + 1 ? v2 : a[i + 1];\n                if (v2dec <= v1 && v2inc >= v1 && v2 >= v1dec && v2 <= v1inc) {\n                    if(checkAll(a,idx, i))\n                        return true;\n                }\n            }\n        return false;\n    }\n\n    boolean checkAll(int[] a, int idx1, int idx2) {\n        int v = a[idx1];\n        a[idx1] = a[idx2];\n        a[idx2] = v;\n        boolean ok = true;\n        for (int i = 1; i < a.length; i++) ok &= a[i] >= a[i - 1];\n        v = a[idx1];\n        a[idx1] = a[idx2];\n        a[idx2] = v;\n        return ok;\n    }\n}\n\nclass ConsoleIO extends BaseIO {\n    BufferedReader br;\n    PrintWriter out;\n    public ConsoleIO(){\n        br = new BufferedReader(new InputStreamReader(System.in));\n        out = new PrintWriter(System.out);\n    }\n    public void flush(){\n        this.out.close();\n    }\n    public void writeLine(String s) {\n        this.out.println(s);\n    }\n    public void writeInt(int a) {\n        this.out.print(a);\n        this.out.print(' ');\n    }\n    public void writeWord(String s){\n        this.out.print(s);\n    }\n    public String readLine() {\n        try {\n            return br.readLine();\n        }\n        catch (Exception ex){\n            return \"\";\n        }\n    }\n    public int read(){\n        try {\n            return br.read();\n        }\n        catch (Exception ex){\n            return -1;\n        }\n    }\n}\nabstract class BaseIO implements IIO {\n\n    public long readLong() {\n        return Long.parseLong(this.readLine());\n    }\n\n    public int readInt() {\n        return Integer.parseInt(this.readLine());\n    }\n\n    public int[] readIntArray() {\n        String line = this.readLine();\n        String[] nums = line.split(\" \");\n        int[] res = new int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n            res[i] = Integer.parseInt(nums[i]);\n        }\n        return res;\n    }\n    public long[] readLongArray() {\n        String line = this.readLine();\n        String[] nums = line.split(\" \");\n        long[] res = new long[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n            res[i] = Long.parseLong(nums[i]);\n        }\n        return res;\n    }\n}\ninterface IIO {\n    void writeLine(String s);\n    void writeInt(int a);\n    void writeWord(String s);\n    String readLine();\n    long readLong();\n    int readInt();\n    int read();\n    int[] readIntArray();\n    long[] readLongArray();\n}\n\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.Arrays;\nimport java.util.StringTokenizer;\n\n/**\n * Created by peacefrog on 3/8/16.\n * 7:59 PM\n */\npublic class CF221C {\n\tfinal boolean ONLINE_JUDGE = System.getProperty(\"ONLINE_JUDGE\") != null;\n\tPrintWriter out;\n\tlong timeBegin, timeEnd;\n\n\tpublic void runIO() throws IOException {\n\t\ttimeBegin = System.currentTimeMillis();\n\n\t\tInputStream inputStream;\n\t\tOutputStream outputStream;\n\n\t\tif (ONLINE_JUDGE) {\n\t\t\tinputStream = System.in;\n\t\t\tReader.init(inputStream);\n\t\t\toutputStream = System.out;\n\n\t\t\tout = new PrintWriter(outputStream);\n\t\t} else {\n\t\t\tinputStream = new FileInputStream(\"/home/peacefrog/Dropbox/IdeaProjects/Problem Solving/input\");\n\t\t\tReader.init(inputStream);\n\t\t\tout = new PrintWriter(System.out);\n\t\t}\n\t\tsolve();\n\t\tout.flush();\n\t\tout.close();\n\t\ttimeEnd = System.currentTimeMillis();\n\t\tSystem.err.println(\"Time = \" + (timeEnd - timeBegin));\n\t}\n\n\t/*\n\t * Start Solution Here\n\t */\n\n\tprivate void solve() throws IOException {\n\t\tint n = Reader.nextInt();\n\t\tint arr[] = Reader.nextIntArray(n);\n\t\tInteger[] sorted = new Integer[n];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tsorted[i] = arr[i];\n\t\t}\n\n\n\t\tArrays.sort(sorted);\n\t\tint cnt = 0 ;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tif(arr[i] != sorted[i])cnt++;\n\t\t}\n\n\t\tif(cnt > 2) out.println(\"NO\");\n\t\telse out.println(\"YES\");\n\t}\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tnew CF221C().runIO();\n\t}\n\n\tstatic class Reader {\n\t\tstatic BufferedReader reader;\n\t\tstatic StringTokenizer tokenizer;\n\n\t\t/**\n\t\t * call this method to initialize reader for InputStream\n\t\t */\n\t\tstatic void init(InputStream input) {\n\t\t\treader = new BufferedReader(new InputStreamReader(input));\n\t\t\ttokenizer = new StringTokenizer(\"\");\n\t\t}\n\n\t\t/**\n\t\t * get next word\n\t\t */\n\t\tstatic String next() {\n\t\t\twhile (tokenizer == null || !tokenizer.hasMoreTokens()) {\n\t\t\t\ttry {\n\t\t\t\t\ttokenizer = new StringTokenizer(reader.readLine());\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tthrow new RuntimeException(e);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn tokenizer.nextToken();\n\t\t}\n\n\t\tstatic String nextLine() {\n\t\t\ttry {\n\t\t\t\treturn reader.readLine();\n\t\t\t} catch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\treturn \"\";\n\t\t}\n\n\t\tstatic int nextChar() throws IOException {\n\t\t\treturn reader.read();\n\t\t}\n\n\t\tstatic int nextInt() throws IOException {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tstatic long nextLong() throws IOException {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tstatic double nextDouble() throws IOException {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tstatic long[] nextLongArray(int n) throws IOException {\n\t\t\tlong[] arr = new long[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tarr[i] = nextLong();\n\t\t\t}\n\n\t\t\treturn arr;\n\t\t}\n\n\t\tstatic int[] nextIntArray(int n) throws IOException {\n\t\t\tint[] arr = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tarr[i] = nextInt();\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\t}\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedInputStream;\nimport java.io.IOException;\nimport java.io.PrintWriter;\nimport java.text.DecimalFormat;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.InputMismatchException;\nimport java.util.LinkedList;\nimport java.util.Map.Entry;\nimport java.util.Queue;\nimport java.util.Random;\nimport java.util.Set;\nimport java.util.SortedSet;\nimport java.util.Stack;\nimport java.util.TreeMap;\nimport java.util.TreeSet;\n\nimport javax.net.ssl.SSLContext;\n\npublic class Main\n{\t\n\t/********************************************** a list of common variables **********************************************/\n\tprivate MyScanner scan = new MyScanner();\n\tprivate PrintWriter out = new PrintWriter(System.out);\n\tprivate final double PI = Math.acos(-1.0);\n\tprivate final int SIZEN = (int)(1e5);\n\tprivate final long MOD = (int)(1e9 + 7);\n\tprivate final long MODH = 10000000007L, BASE = 10007;\n\tprivate final int[] DX = {0, 1, 0, -1}, DY = {-1, 0, 1, 0};\n\tprivate ArrayList<Integer>[] edge;\n\t\n\tpublic boolean isOk(int[] a, int n)\n\t{\n\t\tint y = -1;\n\t\tfor(int i = n - 1;i > 0;--i)\n\t\t{\n\t\t\tif(a[i] < a[i - 1])\n\t\t\t{\n\t\t\t\ty = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(-1 == y)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t\tint j = y;\n\t\twhile(y < n && a[y] == a[j])\n\t\t{\n\t\t\t++y;\n\t\t}\n\t\t--y;\n\t\tint x = -1;\n\t\tfor(int i = 0;i < n - 1;++i)\n\t\t{\n\t\t\tif(a[i] > a[i + 1])\n\t\t\t{\n\t\t\t\tx = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(-1 == x)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\tj = x;\n\t\twhile(x >= 0 && a[x] == a[j])\n\t\t{\n\t\t\t--x;\n\t\t}\n\t\t++x;\n\t\tint tmp = a[x];\n\t\ta[x] = a[y];\n\t\ta[y] = tmp;\n\t\tfor(int i = 0;i < n - 1;++i)\n\t\t{\n\t\t\tif(a[i] > a[i + 1])\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\t\n\tpublic void foo()\n\t{\n\t\tint n = scan.nextInt();\n\t\tint[] a = new int[n];\n\t\tfor(int i = 0;i < n;++i)\n\t\t{\n\t\t\ta[i] = scan.nextInt();\n\t\t}\n\t\tout.println(isOk(a, n) ? \"YES\" : \"NO\");\n\t}\n\n\tpublic static void main(String[] args)\n\t{\n\t\tMain m = new Main();\n\t\tm.foo();\n\t\tm.out.close();\n\t}\n\t\n\t/********************************************** a list of common algorithms **********************************************/\n\t/**\n\t * 1---Get greatest common divisor\n\t * @param a :\tfirst number\n\t * @param b :\tsecond number\n\t * @return\t\tgreatest common divisor\n\t */\n\tpublic long gcd(long a, long b)\n\t{\n\t\treturn 0 == b ? a : gcd(b, a % b);\n\t}\n\t\n\t/**\n\t * 2---Get the distance from a point to a line\n\t * @param x1\tthe x coordinate of one endpoint of the line\n\t * @param y1\tthe y coordinate of one endpoint of the line\n\t * @param x2\tthe x coordinate of the other endpoint of the line\n\t * @param y2\tthe y coordinate of the other endpoint of the line\n\t * @param x\t\tthe x coordinate of the point \n\t * @param y\t\tthe x coordinate of the point\n\t * @return\t\tthe distance from a point to a line\n\t */\n\tpublic double getDist(long x1, long y1, long x2, long y2, long x, long y)\n\t{\n\t\tlong a = y2 - y1;\n\t\tlong b = x1 - x2;\n\t\tlong c = y1 * (x2 - x1) - x1 * (y2 - y1);\n\t\treturn Math.abs(a * x + b * y + c) / Math.sqrt(a * a + b * b);\n\t}\n\t\n\t/**\n\t * 3---Get the distance from one point to a segment (not a line)\n\t * @param x1\tthe x coordinate of one endpoint of the segment\n\t * @param y1\tthe y coordinate of one endpoint of the segment\n\t * @param x2\tthe x coordinate of the other endpoint of the segment\n\t * @param y2\tthe y coordinate of the other endpoint of the segment\n\t * @param x\t\tthe x coordinate of the point\n\t * @param y\t\tthe y coordinate of the point\n\t * @return\t\tthe distance from one point to a segment (not a line)\n\t */\n\tpublic double ptToSeg(long x1, long y1, long x2, long y2, long x, long y)\n\t{\n\t\tdouble cross = (x2 - x1) * (x - x1) + (y2 - y1) * (y - y1);\n\t\tif(cross <= 0)\n\t\t{\n\t\t\treturn (x - x1) * (x - x1) + (y - y1) * (y - y1);\n\t\t}\n\t\tdouble d = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);\n\t\tif(cross >= d) \n\t\t{\n\t\t\treturn (x - x2) * (x - x2) + (y - y2) * (y - y2);\n\t\t}\n\t\tdouble r = cross / d;\n\t\tdouble px = x1 + (x2 - x1) * r;\n\t\tdouble py = y1 + (y2 - y1) * r;\n\t\treturn (x - px) * (x - px) + (y - py) * (y - py);\n\t}\n\t\n\t/**\n\t * 4---KMP match, i.e. kmpMatch(\"abcd\", \"bcd\") = 1, kmpMatch(\"abcd\", \"bfcd\") = -1.\n\t * @param t:\tString to match.\n\t * @param p:\tString to be matched.\n\t * @return\t\tif can match, first index; otherwise -1.\n\t */\n\tpublic int kmpMatch(char[] t, char[] p)\n\t{\n\t\tint n = t.length;\n\t\tint m = p.length;\n\t\tint[] next = new int[m + 1];\n\t\tnext[0] = -1;\n\t\tint j = -1;\n\t\tfor(int i = 1;i < m;++i)\n\t\t{\n\t\t\twhile(j >= 0 && p[i] != p[j + 1])\n\t\t\t{\n\t\t\t\tj = next[j];\n\t\t\t}\n\t\t\tif(p[i] == p[j + 1])\n\t\t\t{\n\t\t\t\t++j;\n\t\t\t}\n\t\t\tnext[i] = j;\n\t\t}\n\t\tj = -1;\n\t\tfor(int i = 0;i < n;++i)\n\t\t{\n\t\t\twhile(j >= 0 && t[i] != p[j + 1])\n\t\t\t{\n\t\t\t\tj = next[j];\n\t\t\t}\n\t\t\tif(t[i] == p[j + 1])\n\t\t\t{\n\t\t\t\t++j;\n\t\t\t}\n\t\t\tif(j == m - 1)\n\t\t\t{\n\t\t\t\treturn i - m + 1;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\t\n\t/**\n\t * 5---Get the hash code of a String\n\t * @param\ts:\tinput string\n\t * @return\thash code\n\t */\n\tpublic long hash(String s)\n\t{\n\t\tlong key = 0, t = 1;\n\t\tfor(int i = 0;i < s.length();++i)\n\t\t{\n\t\t\tkey = (key + s.charAt(i) * t) % MODH;\n\t\t\tt = t * BASE % MODH;\n\t\t}\n\t\treturn key;\n\t}\n\t\n\t/**\n\t * 6---Get x ^ n % MOD quickly.\n\t * @param\tx:\tbase\n\t * @param \tn:\ttimes\n\t * @return\tx ^ n % MOD\n\t */\n\tpublic long quickMod(long x, long n)\n\t{\n\t\tlong ans = 1;\n\t\twhile(n > 0)\n\t\t{\n\t\t\tif(1 == n % 2)\n\t\t\t{\n\t\t\t\tans = ans * x % MOD;\n \t\t\t}\n\t\t\tx = x * x % MOD;\n\t\t\tn >>= 1;\n\t\t}\n\t\treturn ans;\n\t}\n\t\n\tclass MyScanner\n\t{\n\t    private byte[] buf = new byte[1024];\n\t    private int curChar;\n\t    private int numChars;\n\t    BufferedInputStream bis = new BufferedInputStream(System.in);\n\n\t    public int read() \n\t    {\n\t        if (-1 == numChars)\n\t        {\n\t        \tthrow new InputMismatchException();\n\t        }\n\t        if (curChar >= numChars)\n\t        {\n\t            curChar = 0;\n\t            try \n\t            {\n\t                numChars = bis.read(buf);\n\t            }\n\t            catch (IOException e)\n\t            {\n\t                throw new InputMismatchException();\n\t            }\n\t            if (numChars <= 0)\n\t            {\n\t            \treturn -1;\n\t            }\n\t        }\n\t        return buf[curChar++];\n\t    }\n\n\t    public int nextInt() \n\t    {\n\t        int c = read();\n\t        while (isSpaceChar(c))\n\t        {\n\t        \tc = read();\n\t        }\n\t        int sgn = 1;\n\t        if (c == '-') \n\t        {\n\t            sgn = -1;\n\t            c = read();\n\t        }\n\t        int res = 0;\n\t        do \n\t        {\n\t            if (c < '0' || c > '9')\n\t            {\n\t            \tthrow new InputMismatchException();\n\t            }\n\t            res *= 10;\n\t            res += c - '0';\n\t            c = read();\n\t        } while (!isSpaceChar(c));\n\t        return res * sgn;\n\t    }\n\t    \n\t    public long nextLong() \n\t    {\n\t    \tint c = read();\n\t    \twhile (isSpaceChar(c))\n\t    \t{\n\t    \t\tc = read();\n\t    \t}\n\t    \tint sgn = 1;\n\t    \tif (c == '-') \n\t    \t{\n\t    \t\tsgn = -1;\n\t    \t\tc = read();\n\t    \t}\n\t    \tlong res = 0;\n\t    \tdo \n\t    \t{\n\t    \t\tif (c < '0' || c > '9')\n\t    \t\t{\n\t    \t\t\tthrow new InputMismatchException();\n\t    \t\t}\n\t    \t\tres *= 10;\n\t    \t\tres += c - '0';\n\t    \t\tc = read();\n\t    \t} while (!isSpaceChar(c));\n\t    \treturn res * sgn;\n\t    }\n\t    \n\t    public double nextDouble() \n\t    {\n\t        int c = read();\n\t        while (isSpaceChar(c))\n\t        {\n\t        \tc = read();\n\t        }\n\t        int sgn = 1;\n\t        if (c == '-')\n\t        {\n\t            sgn = -1;\n\t            c = read();\n\t        }\n\t        double res = 0;\n\t        while (!isSpaceChar(c) && c != '.') \n\t        {\n\t            if (c == 'e' || c == 'E')\n\t            {\n\t            \treturn res * Math.pow(10, nextInt());\n\t            }\n\t            if (c < '0' || c > '9')\n\t            {\n\t            \tthrow new InputMismatchException();\n\t            }\n\t            res *= 10;\n\t            res += c & 15;\n\t            c = read();\n\t        }\n\t        if (c == '.') \n\t        {\n\t            c = read();\n\t            double m = 1;\n\t            while (!isSpaceChar(c)) \n\t            {\n\t                if (c == 'e' || c == 'E')\n\t                {\n\t                \treturn res * Math.pow(10, nextInt());\n\t                }\n\t                if (c < '0' || c > '9')\n\t                {\n\t                \tthrow new InputMismatchException();\n\t                }\n\t                m /= 10;\n\t                res += (c & 15) * m;\n\t                c = read();\n\t            }\n\t        }\n\t        return res * sgn;\n\t    }\n\t    \n\t    public String next()\n\t    {\n\t        int c = read();\n\t        while (isSpaceChar(c))\n\t        {\n\t        \tc = read();\n\t        }\n\t        StringBuilder res = new StringBuilder();\n\t        do \n\t        {\n\t            res.appendCodePoint(c);\n\t            c = read();\n\t        } while (!isSpaceChar(c));\n\t        return res.toString();\n\t    }\n\n\t    private boolean isSpaceChar(int c) \n\t    {\n\t        return ' ' == c || '\\n' == c || '\\r' == c || '\\t' == c || -1 == c;\n\t    }\n\t}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  int n, c = 0;\n  cin >> n;\n  long long a[n], b[n];\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n    b[i] = a[i];\n  }\n  sort(b, b + n);\n  for (int i = 0; i < n; i++) {\n    if ((a[i] - b[i])) c++;\n  }\n  if (c == 2 || c == 0)\n    cout << \"YES\";\n  else\n    cout << \"NO\";\n  cout << \"\\n\";\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\n#pragma comment(linker, \"/STACK:66777216\")\nusing namespace std;\nconst int Max = 100000;\nint a[Max + 10];\nint b[Max + 10];\nint main() {\n  ios_base::sync_with_stdio(0);\n  int n;\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n    b[i] = a[i];\n  }\n  sort(b, b + n);\n  int k = 0;\n  for (int i = 0; i < n; i++)\n    if (a[i] != b[i]) k++;\n  if (k == 2 || k == 0)\n    cout << \"YES\" << endl;\n  else\n    cout << \"NO\" << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n;\nint a[100500];\nint b[100500];\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; i++) {\n    scanf(\"%d\", &a[i]);\n    b[i] = a[i];\n  }\n  sort(b + 1, b + n + 1);\n  int counter = 0;\n  for (int i = 1; i <= n; i++) {\n    int cur = a[i];\n    if (a[i] != b[i]) counter++;\n  }\n  if (counter > 2)\n    printf(\"NO\");\n  else\n    printf(\"YES\");\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAX_N = 100000;\nint main() {\n  int n;\n  cin >> n;\n  std::vector<int> m(n);\n  std::vector<int> o(n);\n  for (int i = 0; i < n; ++i) {\n    cin >> m[i];\n    o[i] = m[i];\n  }\n  std::sort(m.begin(), m.end());\n  int diff = 0;\n  for (int i = 0; i < n; ++i) {\n    if (m[i] != o[i]) {\n      diff++;\n    }\n  }\n  if (diff == 0 || diff == 2) {\n    cout << \"YES\";\n  } else {\n    cout << \"NO\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, cnt = 0;\n  cin >> n;\n  vector<int> matr(n), ind;\n  for (int i = 0; i < n; i++) cin >> matr[i];\n  for (int i = 0; i < n - 1 && cnt <= 2; i++)\n    if (matr[i] > matr[i + 1]) cnt++, ind.push_back(i);\n  bool ent = false;\n  if (cnt == 2) {\n    swap(matr[ind[0]], matr[ind[1] + 1]);\n    for (int i = 0; i < n - 1; i++)\n      if (matr[i] > matr[i + 1]) {\n        ent = true;\n        break;\n      }\n  } else if (cnt == 1) {\n    int j = ind[0] + 1, st = j, k = st - 1;\n    for (; k >= 0 && matr[k] == matr[st - 1]; k--)\n      ;\n    k++;\n    for (; j < n && matr[j] == matr[st]; j++)\n      ;\n    j--;\n    swap(matr[k], matr[j]);\n    for (int i = 0; i < n - 1; i++)\n      if (matr[i] > matr[i + 1]) {\n        ent = true;\n        break;\n      }\n  }\n  cout << (cnt <= 2 && !ent ? \"YES\" : \"NO\") << endl;\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "def r(): return raw_input().strip()\ndef ri(): return int(r())\ndef riv(): return map(int, r().split())\n\ndef main():\n    n = ri()\n    a = riv()\n    \n    count = 0\n    for i, val in enumerate(sorted(a)):\n        if a[i] != val:\n            count += 1\n            \n    if count == 2 or count == 0:\n        print \"YES\"\n    else:\n        print \"NO\"\n    \nif __name__ == \"__main__\":\n    main()\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\n\n\npublic class Round136C {\n\n\n\n    \n    public static void main(String[] args) throws NumberFormatException, IOException {\n\n        BufferedReader x = new BufferedReader(new InputStreamReader(System.in));\n        int n;\n        \n        n=Integer.parseInt(x.readLine());\n        String Line=x.readLine();\n        Long []arr1,arr2;\n        arr1=new Long[n];\n        arr2=new Long[n];\n        \n        String []temps=Line.split(\"\\\\s+\");\n        \n        for(int i=0;i<n;i++)\n        {\n            arr1[i]=arr2[i]=Long.parseLong(temps[i]);\n        }\n        \n        Arrays.sort(arr2);\n        \n        \n        if(check(arr1,arr2))\n            System.out.println(\"YES\");\n        else\n            System.out.println(\"NO\");\n        \n\n    }\n\n    private static boolean check(Long[] arr1, Long[] arr2) {\n\n        int count=0;\n        int n=arr1.length;\n        \n        for(int i=0;i<n;i++)\n            if(arr1[i].compareTo(arr2[i])!=0)\n                count++;\n        \n        return count<=2;\n    }\n\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  vector<int> arr(n), sorted;\n  for (int &i : arr) cin >> i;\n  sorted = arr;\n  sort(sorted.begin(), sorted.end());\n  int diff = 0;\n  for (int i = 0; i < n && diff <= 2; ++i) {\n    if (arr[i] != sorted[i]) diff++;\n  }\n  if (diff > 2)\n    cout << \"NO\";\n  else\n    cout << \"YES\";\n}\n"
        },
        {
            "language": 1,
            "solution": "nnn=int(raw_input())\nfff=False\nmmm=list(map(int,raw_input().split()))\nmmm1=sorted(mmm)\nlll=0\nfor iii in range (len(mmm)):\n    if mmm[iii]-mmm1[iii]!=0:\n        lll+=1\n    if lll>2:\n        print \"NO\"\n        fff=True\n        break\nif fff==False:\n    print \"YES\"\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\nusing ld = long double;\nusing vl = vector<ll>;\nusing pll = pair<ll, ll>;\nusing vll = vector<pll>;\nusing MAP = map<ll, ll>;\nusing sl = set<ll>;\nusing sll = set<pll>;\nusing MAPs = map<ll, sl>;\nusing MAPv = map<ll, vl>;\nconst ll inf = LLONG_MAX;\nconst ll mod = 1e9 + 7;\nconst ll N = 2e5 + 5;\nint dx8[] = {0, 1, 1, 1, 0, -1, -1, -1}, dy8[] = {1, 1, 0, -1, -1, -1, 0, 1};\nint dx4[] = {0, 1, 0, -1}, dy4[] = {1, 0, -1, 0};\nint n, a[N];\nvoid MAIN() {\n  cin >> n;\n  vector<int> v;\n  for (int i = 0; i < n; i++) cin >> a[i], v.push_back(a[i]);\n  sort((v).begin(), (v).end());\n  int ind1 = 0, ind2 = 0, cnt = 0;\n  for (int i = 0; i < n; i++) {\n    if (a[i] != v[i]) {\n      cnt++;\n      if (!ind1)\n        ind1 = i;\n      else\n        ind2 = i;\n    }\n  }\n  if (cnt > 2) {\n    cout << \"NO\\n\";\n    return;\n  }\n  swap(a[ind1], a[ind2]);\n  for (int i = 0; i < n - 1; i++) {\n    if (a[i] > a[i + 1]) {\n      cout << \"NO\\n\";\n      return;\n    }\n  }\n  cout << \"YES\\n\";\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  ;\n  int t = 1;\n  while (t-- > 0) {\n    MAIN();\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvector<long long> v, t;\nint main() {\n  long long n;\n  scanf(\"%I64d\", &n);\n  ;\n  v.resize(n);\n  for (int i = 0; i < n; ++i) scanf(\"%I64d\", &v[i]);\n  ;\n  t = v;\n  sort((t).begin(), (t).end());\n  long long cnt = 0;\n  for (int i = 0; i < n; ++i)\n    if (v[i] != t[i]) cnt++;\n  cout << (cnt > 2 ? \"NO\" : \"YES\");\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Arrays;\nimport java.util.Scanner;\n\n\npublic class C {\n\n\tpublic static void main(String[] args) {\n\t\tScanner scanner = new Scanner(System.in);\n\t\tint n = scanner.nextInt();\n\t\tInteger[] array = new Integer[n];\n\t\tInteger[] array2 = new Integer[n];\n\t\tfor (int i = 0; i < array.length; i++) {\n\t\t\tarray[i] = new Integer(scanner.nextInt());\n\t\t\tarray2[i] = new Integer(array[i]);\n\t\t}\n\t\tArrays.sort(array2);\n\t\tint cont = 0;\n\t\tfor (int i=0 ; i<array2.length ; i++)\n\t\t\tcont += array[i].equals(array2[i])?0:1;\n\t\tSystem.out.println(cont<=2?\"YES\":\"NO\");\n\t}\n\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid __print(int x) { cerr << x; }\nvoid __print(long x) { cerr << x; }\nvoid __print(long long x) { cerr << x; }\nvoid __print(unsigned x) { cerr << x; }\nvoid __print(unsigned long x) { cerr << x; }\nvoid __print(unsigned long long x) { cerr << x; }\nvoid __print(float x) { cerr << x; }\nvoid __print(double x) { cerr << x; }\nvoid __print(long double x) { cerr << x; }\nvoid __print(char x) { cerr << '\\'' << x << '\\''; }\nvoid __print(const char *x) { cerr << '\\\"' << x << '\\\"'; }\nvoid __print(const string &x) { cerr << '\\\"' << x << '\\\"'; }\nvoid __print(bool x) { cerr << (x ? \"true\" : \"false\"); }\ntemplate <typename T, typename V>\nvoid __print(const pair<T, V> &x) {\n  cerr << '{';\n  __print(x.first);\n  cerr << ',';\n  __print(x.second);\n  cerr << '}';\n}\ntemplate <typename T>\nvoid __print(const T &x) {\n  int f = 0;\n  cerr << '{';\n  for (auto &i : x) cerr << (f++ ? \",\" : \"\"), __print(i);\n  cerr << \"}\";\n}\nvoid _print() { cerr << \"]\\n\"; }\ntemplate <typename T, typename... V>\nvoid _print(T t, V... v) {\n  __print(t);\n  if (sizeof...(v)) cerr << \", \";\n  _print(v...);\n}\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\nconst long long INF = 1e18L;\nconst double eps = 1e-9;\nconst long long mod = 1e9 + 7;\nconst double pi = 2.0 * acos(0.0);\nint32_t main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  ;\n  long long n, cnt = 0;\n  cin >> n;\n  vector<long long> a(n), b(n);\n  for (long long i = 0; i < n; i++) {\n    cin >> a[i];\n    b[i] = a[i];\n  }\n  sort((b).begin(), (b).end());\n  for (long long i = 0; i < n; i++) {\n    if (a[i] != b[i]) cnt += 1;\n  }\n  if (cnt >= 3) {\n    cout << \"NO\\n\";\n  } else {\n    cout << \"YES\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[100009];\nint b[100009];\nint main() {\n  int n;\n  scanf(\"%d\", &n);\n  for (int i = 0; i < n; ++i) {\n    scanf(\"%d\", &a[i]);\n    b[i] = a[i];\n  }\n  sort(a, a + n);\n  int counter = 0;\n  for (int i = 0; i < n; ++i) {\n    if (a[i] != b[i]) ++counter;\n  }\n  printf(\"%s\\n\", counter < 3 ? \"YES\" : \"NO\");\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "\t\t\t\t\t\t\timport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.InputMismatchException;\nimport java.util.LinkedList;\nimport java.util.TreeSet;\n\t\t\t\t\t\t\t\t\t\t\tpublic class Solution implements Runnable\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tstatic final long MAX = 1000000007L;\n\t\t\t\t\t\t\t\t\t\t\t\tstatic class InputReader\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tprivate InputStream stream;\n\t\t\t\t\t\t\t\t\t\t\t\t\tprivate byte[] buf = new byte[1024];\n\t\t\t\t\t\t\t\t\t\t\t\t\tprivate int curChar;\n\t\t\t\t\t\t\t\t\t\t\t\t\tprivate int numChars;\n\t\t\t\t\t\t\t\t\t\t\t\t\tprivate SpaceCharFilter filter;\n\t\t\t\t\t\t\t\t\t\t\t\t\tprivate BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n\t\t\t\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\t\t\t\tpublic InputReader(InputStream stream)\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.stream = stream;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\tpublic int read()\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (numChars==-1) \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (curChar >= numChars)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcurChar = 0;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttry \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnumChars = stream.read(buf);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcatch (IOException e)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(numChars <= 0)\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn -1;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn buf[curChar++];\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\t\t\t\tpublic String nextLine()\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tString str = \"\";\n\t\t\t\t\t\t\t\t\t\t\t            try\n\t\t\t\t\t\t\t\t\t\t\t            {\n\t\t\t\t\t\t\t\t\t\t\t                str = br.readLine();\n\t\t\t\t\t\t\t\t\t\t\t            }\n\t\t\t\t\t\t\t\t\t\t\t            catch (IOException e)\n\t\t\t\t\t\t\t\t\t\t\t            {\n\t\t\t\t\t\t\t\t\t\t\t                e.printStackTrace();\n\t\t\t\t\t\t\t\t\t\t\t            }\n\t\t\t\t\t\t\t\t\t\t\t            return str;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tpublic int nextInt()\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tint c = read();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twhile(isSpaceChar(c)) \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tc = read();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tint sgn = 1;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (c == '-') \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsgn = -1;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tc = read();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tint res = 0;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdo \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(c<'0'||c>'9') \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tres *= 10;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tres += c - '0';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tc = read();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twhile (!isSpaceChar(c)); \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn res * sgn;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\tpublic long nextLong() \n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tint c = read();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twhile (isSpaceChar(c))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tc = read();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tint sgn = 1;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (c == '-') \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsgn = -1;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tc = read();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlong res = 0;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdo \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (c < '0' || c > '9')\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tres *= 10;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tres += c - '0';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tc = read();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twhile (!isSpaceChar(c));\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn res * sgn;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\tpublic double nextDouble() \n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tint c = read();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twhile (isSpaceChar(c))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tc = read();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tint sgn = 1;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (c == '-') \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsgn = -1;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tc = read();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdouble res = 0;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twhile (!isSpaceChar(c) && c != '.') \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (c == 'e' || c == 'E')\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn res * Math.pow(10, nextInt());\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (c < '0' || c > '9')\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tres *= 10;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tres += c - '0';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tc = read();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (c == '.') \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tc = read();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdouble m = 1;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twhile (!isSpaceChar(c)) \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (c == 'e' || c == 'E')\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn res * Math.pow(10, nextInt());\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (c < '0' || c > '9')\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tm /= 10;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tres += (c - '0') * m;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tc = read();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn res * sgn;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\tpublic String readString() \n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tint c = read();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twhile (isSpaceChar(c))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tc = read();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tStringBuilder res = new StringBuilder();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdo \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tres.appendCodePoint(c);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tc = read();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t\t\t\t\t\t\t\twhile (!isSpaceChar(c));\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn res.toString();\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\t\t\t\tpublic boolean isSpaceChar(int c) \n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (filter != null)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn filter.isSpaceChar(c);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\t\t\t\tpublic String next() \n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn readString();\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\tpublic interface SpaceCharFilter \n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpublic boolean isSpaceChar(int ch);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t \t\n\t\t\t\t\t\t\t\t\t\t\t\tpublic static void main(String args[]) throws Exception\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tnew Thread(null, new Solution(),\"Solution\",1<<26).start();\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\tpublic void run() \n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tInputReader sc= new InputReader(System.in);\n\t\t\t\t\t\t\t\t\t\t\t\t\tPrintWriter w= new PrintWriter(System.out);\n\t\t\t\t\t\t\t\t\t\t\t\t\tint n = sc.nextInt();\n\t\t\t\t\t\t\t\t\t\t\t\t\tint[] arr = new int[n];\n\t\t\t\t\t\t\t\t\t\t\t\t\tInteger[] temp = new Integer[n];\n\t\t\t\t\t\t\t\t\t\t\t\t\tfor(int i = 0;i < n;i++) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tarr[i] = sc.nextInt();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttemp[i] = arr[i];\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tArrays.sort(temp);\n\t\t\t\t\t\t\t\t\t\t\t\t\tint count = 0;\n\t\t\t\t\t\t\t\t\t\t\t\t\tfor(int i = 0;i < n;i++) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(temp[i] != arr[i]) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tif(count == 0 || count == 2) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tw.println(\"YES\");\n\t\t\t\t\t\t\t\t\t\t\t\t\t}else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tw.println(\"NO\");\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tw.close(); \n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tboolean t(int a,int b) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tTreeSet<Integer> tset = new TreeSet();\n\t\t\t\t\t\t\t\t\t\t\t\t\twhile(a != 0) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttset.add(a % 10);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ta = a/10;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\twhile(b != 0) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(tset.contains(b % 10)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tb = b/10;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tstatic class Pair implements Comparable<Pair>{\n\t\t\t\t\t\t\t\t\t\t\t\t\tLinkedList<Integer> a;\n\t\t\t\t\t\t\t\t\t\t\t\t\tLinkedList<Integer> b;\n\t\t\t\t\t\t\t\t\t\t\t\t\tPair(LinkedList<Integer> a,LinkedList<Integer> b){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.a  =a;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.b = b;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tPair(){}\t\n\t\t\t\t\t\t\t\t\t\t\t\t\tpublic boolean equals(Object o)\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tPair p = (Pair)o;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif((p.a.equals(this.a) && p.b.equals(this.b)) ||(p.a.equals(this.b) && p.b.equals(this.a))){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\tpublic int compareTo(Pair p){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn this.a.hashCode();\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tpublic int hashCode(){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t    return this.a.hashCode() * 31 + this.b.hashCode() * 17;\n\t\t\t\t\t\t\t\t\t\t\t\t\t    \n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}"
        },
        {
            "language": 3,
            "solution": "n = int(input())\na = list(map(int, input().split()))\nb = sorted(a)\nans = 0\nfor i in range(n):\n\tif not a[i] == b[i]:\n\t\tans += 1\nif ans <= 2:\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")"
        },
        {
            "language": 1,
            "solution": "\n\nn = int (raw_input ())\nm = map (int, raw_input().split (' '))\n\nl = m[:]\nl.sort()\n\nc = 0\n\nfor i in xrange(n):\n    if l[i] != m[i]:\n        c+=1\n\n\nif c<=2:\n    print 'YES'\nelse:\n    print 'NO'\n    \n\n"
        },
        {
            "language": 3,
            "solution": "from collections import Counter\nn=int(input())\na=list(map(int,input().split()))\nb=a.copy()\na.sort()\nfor i in range(n):\n\ta[i]=abs(a[i]-b[i])\n\nk=Counter(a)\nif(k[0]>=n-2):\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid OpenFiles() {}\nint x[100000 + 100], sortedx[100000 + 100];\nint main() {\n  OpenFiles();\n  int i, N, num = 0;\n  scanf(\"%d\", &N);\n  for (i = 1; i <= N; i++) {\n    scanf(\"%d\", &x[i]);\n    sortedx[i] = x[i];\n  }\n  sort(sortedx + 1, sortedx + N + 1);\n  for (i = 1; i <= N; i++)\n    if (x[i] != sortedx[i]) num++;\n  if (num > 2)\n    printf(\"NO\");\n  else\n    printf(\"YES\");\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvector<int> m;\nvector<int> sortm;\nint n;\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = 0; i < n; i++) {\n    int a;\n    scanf(\"%d\", &a);\n    m.push_back(a);\n    sortm.push_back(a);\n  }\n  sort(sortm.begin(), sortm.end());\n  int count = 0;\n  for (int i = 0; i < n; i++) {\n    if (m[i] != sortm[i]) count++;\n  }\n  if (count == 0 || count == 2)\n    printf(\"YES\\n\");\n  else\n    printf(\"NO\\n\");\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.List;\nimport java.util.Scanner;\nimport java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n * @author dudkamaster\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        Scanner in = new Scanner(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskA solver = new TaskA();\n        solver.solve(1, in, out);\n        out.close();\n    }\n}\n\nclass TaskA {\n    public void solve(int testNumber, Scanner in, PrintWriter out) {\n        int n = in.nextInt();\n        ArrayList <Integer> a = new ArrayList<Integer>();\n        for (int i=0; i<n; i++)\n            a.add(in.nextInt());\n        ArrayList <Integer> b = (ArrayList<Integer>)a.clone();\n        Collections.shuffle(a);\n        Collections.sort(a);\n        int cnt = 0;\n        for (int i=0; i<n; i++)\n            if (b.get(i).compareTo(a.get(i))!=0)\n                cnt++;\n        String ans;\n        if (cnt<=2)\n            ans =  \"YES\";\n        else\n            ans =  \"NO\";\n        out.print(ans);\n    }\n}\n"
        },
        {
            "language": 1,
            "solution": "# -*- coding: utf_8 -*- \n#===========================================================================// \n# Author: Zakhar_Voit\n# Module: main\n# Description: \n# Creation date: 31.08.2012 18:28:18\n# Remarks: \n#===========================================================================//\n\ntry:\n    read = raw_input\nexcept:\n    read = input\n\nreadints = lambda: map(int, read().split())\n\nn, = readints()\na = readints()\n\nb = sorted(a)\n\nans = 0\nfor i in xrange(n):\n\tif a[i] != b[i]:\n\t\tans += 1\n\nprint \"YES\" if ans <= 2 else \"NO\"\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint N;\nint A[100001];\npair<int, int> B[100001];\nbool comp(pair<int, int> a, pair<int, int> b) {\n  if (a.first != b.first) return a.first < b.first;\n  return a.second < b.second;\n}\nint main() {\n  scanf(\"%d\", &N);\n  for (int i = 1; i <= N; i++) {\n    scanf(\"%d\", &A[i]);\n    B[i].first = A[i];\n    B[i].second = i;\n  }\n  sort(B + 1, B + N + 1, comp);\n  int cnt = 0;\n  for (int i = 1; i <= N; i++)\n    if (A[i] != B[i].first) cnt++;\n  if (cnt == 0 || cnt == 2)\n    printf(\"YES\\n\");\n  else\n    printf(\"NO\\n\");\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "N,cnt=input(),0\na=map(int,raw_input().split())\nb=sorted(a)\nfor i in xrange(N):\n\tcnt+= 1 if a[i]!=b[i] else 0\nprint[\"NO\",\"YES\"][cnt==2 or cnt==0]\n"
        },
        {
            "language": 4,
            "solution": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\nimport java.util.PriorityQueue;\nimport java.util.StringTokenizer;\n\n\npublic class Main\n{\n    \n    public static void main(String[] args) throws NumberFormatException, IOException {\n\n        InputReader in = new InputReader(System.in);\n        \n        int n = in.nextInt();\n        \n        int[] a =  new int[n], b = new int[n];\n        for(int i = 0; i < n; i++) a[i] = b[i] = in.nextInt();\n        \n        Arrays.sort(b);\n        int count = 0;\n        for(int i = 0; i < n; i++)\n            if(a[i] != b[i])\n                count++;\n        System.out.println(count <= 2?\"YES\":\"NO\");\n    }\n    \n\n    static class InputReader {\n        StringTokenizer st;\n        BufferedReader br;\n\n        public InputReader(InputStream s){  br = new BufferedReader(new InputStreamReader(s));}\n\n        public String next() throws IOException \n        {\n            while (st == null || !st.hasMoreTokens()) \n                st = new StringTokenizer(br.readLine());\n            return st.nextToken();\n        }\n\n        public int nextInt() throws IOException {return Integer.parseInt(next());}\n\n        public String nextLine() throws IOException {return br.readLine();}\n\n        public boolean ready() throws IOException {return br.ready();}\n\n\n    }\n\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n(0);\n  cin >> n;\n  vector<int> v(n), w(n);\n  for (int i = 0; i < n; ++i) {\n    cin >> v[i];\n    w[i] = v[i];\n  }\n  sort(v.begin(), v.end());\n  int count = 0;\n  for (int i = 0; i < n; ++i) {\n    if (v[i] != w[i]) ++count;\n  }\n  cout << (count == 0 || count == 2 ? \"YES\" : \"NO\") << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint in() {\n  int r = 0, c;\n  for (c = getchar(); c <= 32; c = getchar())\n    ;\n  if (c == '-') return -in();\n  for (; c > 32; r = (r << 1) + (r << 3) + c - '0', c = getchar())\n    ;\n  return r;\n}\nusing namespace std;\nconst int INF = int(1e9 + 7);\nint v[100010], v2[100010];\nint n;\nbool poss;\nbool check() {\n  for (int i = 0; i < n - 1; i++) {\n    if (v[i] > v[i + 1]) return false;\n  }\n  return true;\n}\nint main() {\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> v[i];\n  }\n  set<pair<int, int> > s;\n  if (check()) {\n    cout << \"YES\" << endl;\n    return 0;\n  }\n  int a, b;\n  s.insert(make_pair(-v[0], 0));\n  for (int i = 1; i < n; i++) {\n    if (-((*s.begin()).first) > v[i]) {\n      a = ((*s.begin()).second);\n      b = i;\n    }\n    s.insert(make_pair(-v[i], i));\n  }\n  swap(v[a], v[b]);\n  if (check())\n    cout << \"YES\" << endl;\n  else\n    cout << \"NO\" << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid Solve() {\n  long long int n;\n  cin >> n;\n  long long int a[n], copy[n];\n  for (long long int i = 0; i <= n - 1; i++) {\n    cin >> a[i];\n    copy[i] = a[i];\n  }\n  sort(copy, copy + n);\n  long long int error = 0;\n  for (long long int i = 0; i <= n - 1; i++)\n    if (a[i] != copy[i]) error++;\n  if (error == 0 || error == 2)\n    cout << \"YES\";\n  else\n    cout << \"NO\";\n}\nint main(int argc, char const *argv[]) {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(0);\n  ;\n  int T = 1;\n  while (T--) Solve();\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, a[100005], b[100005];\nint main() {\n  int i, x;\n  cin >> n;\n  for (i = 0; i < n; i++) cin >> a[i], b[i] = a[i];\n  sort(a, a + n);\n  x = 0;\n  for (i = 0; i < n; i++)\n    if (a[i] != b[i]) x++;\n  if (x == 0 || x == 2)\n    printf(\"YES\");\n  else\n    printf(\"NO\");\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, in1, in2;\n  cin >> n;\n  int arr[n];\n  for (int i = 0; i < n; i++) cin >> arr[i];\n  int flag = 0;\n  for (int i = 1; i < n; i++) {\n    if (arr[i] < arr[i - 1]) {\n      in1 = i - 1;\n      flag = 1;\n      break;\n    }\n  }\n  if (!flag)\n    cout << \"YES\";\n  else {\n    if (in1 != 0) {\n      while (arr[in1] == arr[in1 - 1]) {\n        if (in1 > 1)\n          in1--;\n        else {\n          in1--;\n          break;\n        }\n      }\n    }\n    int m = 1000000010;\n    for (int i = in1 + 1; i < n; i++) {\n      if (arr[i] <= m) {\n        m = arr[i];\n        in2 = i;\n      }\n    }\n    arr[in1] = arr[in1] + arr[in2] - (arr[in2] = arr[in1]);\n    flag = 0;\n    for (int i = 1; i < n; i++) {\n      if (arr[i] < arr[i - 1]) {\n        flag = 1;\n        break;\n      }\n    }\n    if (!flag)\n      cout << \"YES\";\n    else\n      cout << \"NO\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class temp{\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        StringTokenizer st = new StringTokenizer(br.readLine());\n        int x = Integer.parseInt(st.nextToken());\n        int arr[] = new int[x];\n        st = new StringTokenizer(br.readLine());\n        Integer srt[] = new Integer[x];\n        for (int i = 0; i < x; i++) {\n            srt[i] = i;\n            arr[i] = Integer.parseInt(st.nextToken())-1;\n        }\n        Arrays.sort(srt, (a, b) -> arr[a] - arr[b]);\n        int count = 0;\n        for (int i = 0; i < x; i++) {\n            if(arr[srt[i]] != arr[i])\n                count++;\n        }\n        if(count == 2 || count == 0)\n            System.out.println(\"YES\");\n        else\n            System.out.println(\"NO\");\n    }\n\n}\n"
        },
        {
            "language": 1,
            "solution": "#!/usr/bin/env python\nn=int(raw_input())\na=map(int,raw_input().split())\nb=sorted(a)\nres=0\nfor i in xrange(n):\n    if a[i]!=b[i]:\n        res+=1\nif res<=2:\n    print \"YES\"\nelse: print \"NO\"\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, a[200000], b[200000];\n  cin >> n;\n  for (int i = 0; i < n; i++) cin >> a[i], b[i] = a[i];\n  sort(b, b + n);\n  int c = 0;\n  vector<int> vs;\n  for (int i = 0; i < n; i++)\n    if (a[i] != b[i]) {\n      vs.push_back(i);\n    }\n  if (!vs.size())\n    cout << \"YES\\n\";\n  else {\n    swap(a[vs[0]], a[vs[1]]);\n    for (int i = 0; i < n; i++) c += (a[i] != b[i]);\n    if (c)\n      cout << \"NO\\n\";\n    else\n      cout << \"YES\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "import sys, copy\n\nn = int(sys.stdin.readline())\na = map(int, sys.stdin.readline().strip().split())\nb = copy.copy(a)\nb.sort()\nc = 0\nfor x, y in zip(a, b):\n    if x != y:\n        c += 1\nprint 'YES' if c <= 2 else 'NO'\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\nimport java.lang.*;\nimport java.math.*;\npublic class C {\n    public static void main(String[] args) throws Exception {\n         BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n        // Scanner scan = new Scanner(System.in);\n        PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out)); \n        int n = Integer.parseInt(bf.readLine());\n        StringTokenizer st = new StringTokenizer(bf.readLine());\n         int[] a = new int[n]; for(int i=0; i<n; i++) a[i] = Integer.parseInt(st.nextToken());\n         int counter = 0;\n         Integer[] b = new Integer[n];\n         for(int i=0; i<n; i++) b[i] = a[i];\n         Arrays.sort(b);\n         for(int i=0; i<n; i++) if(!b[i].equals(a[i])) counter++;\n         if(counter==2 || counter==0) out.println(\"YES\");\n         else out.println(\"NO\");\n        // int n = Integer.parseInt(st.nextToken());\n        // int n = scan.nextInt();\n        // hi\n         out.close(); System.exit(0);\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.StringTokenizer;\n\npublic class Main {\n\tvoid solve() throws IOException {\n\t\tint n = nextInt();\n\t\tint[] a = new int[n];\n\t\tInteger[] b = new Integer[n];\n\t\tfor (int i = 0; i < n; ++i) {\n\t\t\ta[i] = nextInt();\n\t\t\tb[i] = a[i];\n\t\t}\n\t\tArrays.sort(b);\n\t\tint cnt = 0;\n\t\tfor (int i = 0; i < n; ++i)\n\t\t\tif (a[i] != b[i])\n\t\t\t\t++cnt;\n\t\tif (cnt <= 2)\n\t\t\twriter.println(\"YES\");\n\t\telse\n\t\t\twriter.println(\"NO\");\n\t}\n\n\tBufferedReader reader;\n\tPrintWriter writer;\n\tStringTokenizer tokenizer;\n\n\tString nextToken() throws IOException {\n\t\twhile (tokenizer == null || !tokenizer.hasMoreTokens())\n\t\t\ttokenizer = new StringTokenizer(reader.readLine());\n\t\treturn tokenizer.nextToken();\n\t}\n\n\tint nextInt() throws IOException {\n\t\treturn Integer.parseInt(nextToken());\n\t}\n\n\tpublic void run() {\n\t\ttry {\n\t\t\treader = new BufferedReader(new InputStreamReader(System.in));\n\t\t\ttokenizer = null;\n\t\t\twriter = new PrintWriter(System.out);\n\t\t\tsolve();\n\t\t\treader.close();\n\t\t\twriter.close();\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t\tSystem.exit(1);\n\t\t}\n\t}\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tnew Main().run();\n\t}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int a[100000], b[100000], n, cnt = 0;\n  while (cin >> n) {\n    for (int i = 0; i < n; ++i) {\n      cin >> a[i];\n      b[i] = a[i];\n    }\n    sort(b, b + n);\n    for (int i = 0; i < n; ++i) {\n      if (a[i] != b[i]) cnt++;\n    }\n    if (cnt == 0 || cnt == 2) {\n      cout << \"YES\" << endl;\n    } else\n      cout << \"NO\" << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\n\npublic class c135p3 {\n\n    /**\n     * @param args\n     * @throws IOException \n     * @throws NumberFormatException \n     */\n    public static void main(String[] args) throws NumberFormatException, IOException {\n        // TODO Auto-generated method stub\n        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n        int n = Integer.parseInt(in.readLine());\n        int [] x = new int [n];\n        String [] s = in.readLine().split(\" \");\n        for (int i = 0; i < s.length; i++) {\n            x[i]=Integer.parseInt(s[i]);\n        }\n        int index1 = 0;\n        int index2 = 0;\n        int past = 0;\n        boolean who = false;\n        for (int i = 1; i < s.length; i++) {\n            if(who){\n                if(x[i-1]>x[i]){index2=i;break;}\n            }else{\n                if(x[i-1]>x[i]){index1=past;index2=i;who=true;}\n            }\n            if(x[i]!=x[i-1])past=i;\n        }\n        for (int i = index2+1; i < s.length; i++) {\n            if(x[i]==x[index2])index2++;\n        }\n        x[index1]^=x[index2];x[index2]^=x[index1];x[index1]^=x[index2];\n        boolean can = true;\n        for (int i = 1; i < s.length; i++) {\n            if(x[i-1]>x[i]){can = false; break;}\n        }\n        if(can)System.out.println(\"YES\");\n        else System.out.println(\"NO\");\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[300000];\nint b[300000];\nint cmp(const void *x, const void *y) { return *(int *)x - *(int *)y; }\nint main() {\n  int n, i;\n  cin >> n;\n  int ok = 0;\n  for (i = 1; i <= n; i++) {\n    cin >> a[i];\n    b[i] = a[i];\n    if (a[i] < a[i - 1]) ok = 1;\n  }\n  if (n == 2 || !ok) {\n    cout << \"YES\" << endl;\n    return 0;\n  }\n  qsort(a, n + 1, sizeof(a[0]), cmp);\n  int c[3], t = 0;\n  for (i = 1; i <= n; i++) {\n    if (a[i] != b[i]) {\n      t++;\n      if (t > 2) break;\n      c[t] = i;\n    }\n  }\n  if (t > 2)\n    cout << \"NO\" << endl;\n  else {\n    if (a[c[1]] == b[c[2]] && b[c[1]] == a[c[2]])\n      cout << \"YES\" << endl;\n    else\n      cout << \"NO\" << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.BufferedReader;\nimport java.io.DataInputStream;\nimport java.io.File;\nimport java.io.FileNotFoundException;\nimport java.io.FileReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\n\n\npublic class Main {\n\n    public static void main(String[] args) throws Exception {\n        Parserdoubt12 s = new Parserdoubt12(System.in);\n        \n        int n = s.nextInt();\n        \n        int a[] = new int[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = s.nextInt();\n        }\n        \n        int copy[] = a.clone();\n        Arrays.sort(a);\n        int count = 0;\n        for (int i = 0; i < copy.length; i++) {\n            if(a[i] != copy[i]) count++;\n        }\n        if(count <= 2) System.out.println(\"YES\");\n        else System.out.println(\"NO\");\n    }\n    \n    \n}\n\n\nclass Parserdoubt12\n{\n   final private int BUFFER_SIZE = 1 << 17;\n \n   private DataInputStream din;\n   private byte[] buffer;\n   private int bufferPointer, bytesRead;\n \n   public Parserdoubt12(InputStream in)\n   {\n      din = new DataInputStream(in);\n      buffer = new byte[BUFFER_SIZE];\n      bufferPointer = bytesRead = 0;\n   }\n   public String nextString() throws Exception\n   {\n       StringBuffer sb=new StringBuffer(\"\");\n       byte c = read();\n       while (c <= ' ') c = read();\n       do\n       {\n           sb.append((char)c);\n           c=read();\n       }while(c>' ');\n       return sb.toString();\n   }\n   public char nextChar() throws Exception\n   {\n       byte c=read();\n       while(c<=' ') c= read();\n       return (char)c;\n   }\n   public int nextInt() throws Exception\n   {\n      int ret = 0;\n      byte c = read();\n      while (c <= ' ') c = read();\n      boolean neg = c == '-';\n      if (neg) c = read();\n      do\n      {\n          ret = ret * 10 + c - '0';\n         c = read();\n      } while (c > ' ');\n      if (neg) return -ret;\n      return ret;\n   }\n   public long nextLong() throws Exception\n   {\n      long ret = 0;\n      byte c = read();\n      while (c <= ' ') c = read();\n      boolean neg = c == '-';\n      if (neg) c = read();\n      do\n      {\n          ret = ret * 10 + c - '0';\n         c = read();\n      } while (c > ' ');\n      if (neg) return -ret;\n      return ret;\n   }\n   private void fillBuffer() throws Exception\n   {\n      bytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE);\n      if (bytesRead == -1) buffer[0] = -1;\n   }\n \n   private byte read() throws Exception\n   {\n      if (bufferPointer == bytesRead) fillBuffer();\n      return buffer[bufferPointer++];\n   }\n} "
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.LinkedList;\nimport java.util.Queue;\nimport java.util.StringTokenizer;\n\npublic class C {\n\tpublic static void main(String[] args) throws IOException {\n\t\tInputReader myScanner = new InputReader();\n\t\tint n = myScanner.nextInt();\n\t\tInteger sorted[] = new Integer[n], init[] = new Integer[n];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tint tmp = myScanner.nextInt();\n\t\t\tsorted[i] = tmp;\n\t\t\tinit[i] = tmp;\n\t\t}\n\t\tArrays.sort(sorted);\n\t\tint dif = 0;\n\t\tfor (int i = 0; i < init.length; i++)\n\t\t\tif (!sorted[i].equals(init[i]))\n\t\t\t\tdif++;\n\t\tif (dif == 0 || dif == 2)\n\t\t\tSystem.out.println(\"YES\");\n\t\telse\n\t\t\tSystem.out.println(\"NO\");\n\n\t}\n\n\t// ========================================\n\n\tstatic class InputReader {\n\t\tBufferedReader buff;\n\t\tStringTokenizer tok;\n\t\tString cur;\n\n\t\tpublic InputReader() throws IOException {\n\t\t\tbuff = new BufferedReader(new InputStreamReader(System.in));\n\t\t\ttok = new StringTokenizer(cur = buff.readLine());\n\t\t}\n\n\t\tpublic boolean hasNext() throws IOException {\n\t\t\tif (!tok.hasMoreElements()) {\n\t\t\t\tcur = buff.readLine();\n\t\t\t\tif (cur == null)\n\t\t\t\t\treturn false;\n\t\t\t\ttok = new StringTokenizer(cur);\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\tpublic String next() throws IOException {\n\t\t\twhile (!tok.hasMoreElements())\n\t\t\t\ttok = new StringTokenizer(cur = buff.readLine());\n\n\t\t\treturn tok.nextToken();\n\t\t}\n\n\t\tpublic int nextInt() throws NumberFormatException, IOException {\n\t\t\twhile (!tok.hasMoreElements())\n\t\t\t\ttok = new StringTokenizer(cur = buff.readLine());\n\n\t\t\treturn Integer.parseInt(next().trim());\n\t\t}\n\n\t\tpublic long nextLong() throws NumberFormatException, IOException {\n\t\t\twhile (!tok.hasMoreElements())\n\t\t\t\ttok = new StringTokenizer(cur = buff.readLine());\n\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\t}\n\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, arr[(int)(2e5 + 10)], s, brr[(int)(2e5 + 10)];\nint main() {\n  cin >> n;\n  for (int i = 1; i <= n; i++) cin >> arr[i], brr[i] = arr[i];\n  sort(arr + 1, arr + n + 1);\n  for (int i = 1; i <= n; i++)\n    if (arr[i] != brr[i]) s++;\n  if (s == 0 or s == 2)\n    puts(\"YES\");\n  else\n    puts(\"NO\");\n}\n"
        },
        {
            "language": 1,
            "solution": "n = raw_input()\nn = int(n)\n\na = [int(i) for i in raw_input().split(' ')]\nb = sorted(a)\n\nm = 0\ni = 0\nwhile i < n and m <= 2:\n    if a[i] != b[i]:\n        m += 1\n    i += 1\n\nif m > 2:\n    print 'NO'\nelse:\n    print 'YES'"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, a[100010], b[100010];\n  scanf(\"%d\", &n);\n  for (int i = 0; i < n; i++) {\n    scanf(\"%d\", &a[i]);\n    b[i] = a[i];\n  }\n  sort(a, a + n);\n  int c;\n  for (int i = 0; i < n; i++)\n    if (a[i] != b[i]) c++;\n  printf(\"%s\\n\", c > 2 ? \"NO\" : \"YES\");\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst double PI = acos(-1.0);\nconst double EPS = 1e-7;\nint n;\nvector<pair<int, int> > a;\nint b[100047];\nint c[100047];\nint main() {\n  cin >> n;\n  for (int i = 0; i < n; ++i) {\n    cin >> b[i];\n    c[i] = b[i];\n  }\n  sort(b, b + n);\n  for (int i = 0; i < n; ++i) {\n    if (c[i] != b[i]) {\n      a.push_back(make_pair(c[i], b[i]));\n    }\n  }\n  if (a.size() == 2) {\n    if (a[0].first == a[1].second && a[1].first == a[0].second) {\n      cout << \"YES\\n\";\n      return 0;\n    }\n  } else if (!a.size()) {\n    cout << \"YES\\n\";\n    return 0;\n  }\n  cout << \"NO\\n\";\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.FileReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintStream;\nimport java.util.*;\n\n\npublic class C\n{\n\tBufferedReader in;\n\tPrintStream out;\n\tStringTokenizer tok;\n\tpublic C() throws NumberFormatException, IOException\n\t{\n\t\tin = new BufferedReader(new InputStreamReader(System.in));\n\t\t//in = new BufferedReader(new FileReader(\"in.txt\"));\n\t\tout = System.out;\n\t\trun();\n\t}\n\tvoid run() throws NumberFormatException, IOException\n\t{\n\t\tint n = nextInt();\n\t\tint[] num = new int[n];\n\t\tint[] num1 = new int[n];\n\t\tfor(int i = 0; i < n; i++)\n\t\t{\n\t\t\tnum[i] = nextInt();\n\t\t\tnum1[i] = num[i];\n\t\t}\n\t\tArrays.sort(num1);\n\t\tint ans = 0;\n\t\tfor(int i = 0; i < n; i++)\n\t\t\tif(num[i]!=num1[i]) ans++;\n\t\tif(ans<=2)out.println(\"YES\");\n\t\telse out.println(\"NO\");\n\t}\n\tpublic static void main(String[] args) throws NumberFormatException, IOException \n\t{\n\t\tnew C();\n\t}\n\tString nextToken() throws IOException\n\t{\n\t\tif(tok ==null || !tok.hasMoreTokens()) tok = new StringTokenizer(in.readLine());\n\t\treturn tok.nextToken();\n\t}\n\tint nextInt() throws NumberFormatException, IOException\n\t{\n\t\treturn Integer.parseInt(nextToken());\n\t}\n\tlong nextLong() throws NumberFormatException, IOException\n\t{\n\t\treturn Long.parseLong(nextToken());\n\t}\n\tdouble nextDouble() throws NumberFormatException, IOException\n\t{\n\t\treturn Double.parseDouble(nextToken());\n\t}\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.File;\nimport java.io.FileReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.Scanner;\nimport java.util.StringTokenizer;\n\npublic class C {\n\tBufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n\tStringTokenizer st = null;\n\tPrintWriter out;\n\n\tpublic void solution() throws IOException {\n\t\tint n = nextInt();\n\t\tint a[] = new int[n];\n\t\tint b[] = new int[n];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\ta[i] = nextInt();\n\t\t\tb[i] = a[i];\n\t\t}\n\t\tArrays.sort(a);\n\t\tint ans = 0;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tif (a[i] != b[i]) {\n\t\t\t\tans++;\n\t\t\t}\n\t\t}\n\n\t\tif (ans == 2 || ans == 0) {\n\t\t\tSystem.out.println(\"YES\");\n\t\t} else {\n\t\t\tSystem.out.println(\"NO\");\n\t\t}\n\n\t}\n\n\tpublic String nextToken() throws IOException {\n\t\tif (st == null || !st.hasMoreTokens()) {\n\t\t\tst = new StringTokenizer(bf.readLine());\n\t\t}\n\t\treturn st.nextToken();\n\t}\n\n\tint nextInt() throws IOException {\n\t\treturn Integer.parseInt(nextToken());\n\t}\n\n\tlong nextLong() throws IOException {\n\t\treturn Long.parseLong(nextToken());\n\t}\n\n\tdouble nextDouble() throws IOException {\n\t\treturn Double.parseDouble(nextToken());\n\t}\n\n\tpublic void print(int a[]) {\n\t\tfor (int i = 0; i < a.length; i++) {\n\t\t\tSystem.out.print(a[i] + \" \");\n\t\t}\n\t}\n\n\tpublic static void main(String args[]) throws IOException {\n\t\tnew C().solution();\n\t}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, v[100005], aux[100005];\nint main() {\n  cin >> n;\n  for (int i = 1; i <= n; i++) {\n    cin >> v[i];\n    aux[i] = v[i];\n  }\n  sort(aux + 1, aux + n + 1);\n  int contor = 0;\n  for (int i = 1; i <= n; i++)\n    if (v[i] != aux[i]) contor++;\n  if (contor == 2 || !contor)\n    cout << \"YES\";\n  else\n    cout << \"NO\";\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  vector<int> vec1;\n  for (int i = 0; i < (int)(n); ++i) {\n    int temp;\n    cin >> temp;\n    vec1.push_back(temp);\n  }\n  vector<int> vec2(vec1);\n  int c = 0;\n  sort(vec1.begin(), vec1.end());\n  for (int i = 0; i < (int)(n); ++i) {\n    if (vec1[i] != vec2[i]) c++;\n  }\n  if (c < 3)\n    cout << \"YES\\n\";\n  else\n    cout << \"NO\\n\";\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.FileNotFoundException;\nimport java.io.FileReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\nimport java.util.Random;\nimport java.util.StringTokenizer;\n\npublic class LittleElephant {\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tint [] x = sc.nextIntArray(n);\n\t\tint [] sort = sc.shuffle(x,n);\n\t\tArrays.sort(sort);\n\t\tint diff = 0;\n\t\tfor(int i=0; i<n ;i++){\n\t\t\tif(x[i]!=sort[i])\n\t\t\t\tdiff++;\n\t\t\tif(diff>2)\n\t\t\t{\n\t\t\t\tSystem.out.println(\"NO\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(\"YES\");\n\t}\n\tstatic class Scanner {\n\t\tStringTokenizer st;\n\t\tBufferedReader br;\n\n\t\tpublic Scanner(InputStream s) {\n\t\t\tbr = new BufferedReader(new InputStreamReader(s));\n\t\t}\n\n\t\tpublic Scanner(String f) throws FileNotFoundException {\n\t\t\tbr = new BufferedReader(new FileReader(f));\n\t\t}\n\n\t\tpublic String next() throws IOException {\n\t\t\twhile (st == null || !st.hasMoreTokens())\n\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tpublic int nextInt() throws IOException {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tpublic long nextLong() throws IOException {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tpublic String nextLine() throws IOException {\n\t\t\treturn br.readLine();\n\t\t}\n\n\t\tpublic double nextDouble() throws IOException {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tpublic boolean ready() throws IOException {\n\t\t\treturn br.ready();\n\t\t}\n\n\t\tpublic int[] nextIntArray(int n) throws IOException {\n\t\t\tint[] a = new int[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\ta[i] = nextInt();\n\t\t\treturn a;\n\t\t}\n\n\t\tpublic int[] nextIntArray1(int n) throws IOException {\n\t\t\tint[] a = new int[n + 1];\n\t\t\tfor (int i = 1; i <= n; i++)\n\t\t\t\ta[i] = nextInt();\n\t\t\treturn a;\n\t\t}\n\n\t\tpublic int[] shuffle(int[] a, int n) {\n\t\t\tint[] b = new int[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tb[i] = a[i];\n\t\t\tRandom r = new Random();\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tint j = i + r.nextInt(n - i);\n\t\t\t\tint t = b[i];\n\t\t\t\tb[i] = b[j];\n\t\t\t\tb[j] = t;\n\t\t\t}\n\t\t\treturn b;\n\t\t}\n\n\t\tpublic int[] nextIntArraySorted(int n) throws IOException {\n\t\t\tint[] a = nextIntArray(n);\n\t\t\ta = shuffle(a, n);\n\t\t\tArrays.sort(a);\n\t\t\treturn a;\n\t\t}\n\n\t\tpublic long[] nextLongArray(int n) throws IOException {\n\t\t\tlong[] a = new long[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\ta[i] = nextLong();\n\t\t\treturn a;\n\t\t}\n\n\t\tpublic long[] nextLongArray1(int n) throws IOException {\n\t\t\tlong[] a = new long[n + 1];\n\t\t\tfor (int i = 1; i <= n; i++)\n\t\t\t\ta[i] = nextLong();\n\t\t\treturn a;\n\t\t}\n\n\t\tpublic long[] nextLongArraySorted(int n) throws IOException {\n\t\t\tlong[] a = nextLongArray(n);\n\t\t\tRandom r = new Random();\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tint j = i + r.nextInt(n - i);\n\t\t\t\tlong t = a[i];\n\t\t\t\ta[i] = a[j];\n\t\t\t\ta[j] = t;\n\t\t\t}\n\t\t\tArrays.sort(a);\n\t\t\treturn a;\n\t\t}\n\t}\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.Random;\nimport java.util.StringTokenizer;\n\n\npublic class C136 {\t\n\tBufferedReader reader;\n    StringTokenizer tokenizer;\n    PrintWriter out;\n\n\tpublic void solve() throws IOException {\n\t\tint N = nextInt();\n\t\tint[] a = new int[N];\n\t\tint wrong = 0;\n\t\tint wrong1 = -1;\n\t\tint wrong2 = -1;\n\t\tfor(int i = 0; i < N; i++){\n\t\t\ta[i] = nextInt();\n\t\t\tif( i > 0 && a[i] < a[i-1]){\n\t\t\t\twrong++;\n\t\t\t\tif( wrong1 == -1){\n\t\t\t\t\twrong1 = i;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\twrong2 = i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif( wrong == 0 ){\n\t\t\tout.println(\"YES\");\n\t\t}\n\t\telse if(wrong == 1){\n\t\t\tint search_index = wrong1-1;\n\t\t\twhile( search_index > 0 && a[search_index-1] == a[wrong1-1]){\n\t\t\t\tsearch_index--;\n\t\t\t}\n\t\t\tint search_index2 = wrong1;\n\t\t\twhile( search_index2 < N-1 && a[search_index2+1] == a[wrong1]){\n\t\t\t\tsearch_index2++;\n\t\t\t}\t\t\n\t\t\tint tmp = a[search_index];\n\t\t\ta[search_index] = a[search_index2];\n\t\t\ta[search_index2] = tmp;\n\t\t\tfor(int i = 0; i < N; i++){\n\t\t\t\tif( i > 0 && a[i] < a[i-1]){\n\t\t\t\t\tout.println(\"NO\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tout.println(\"YES\");\n\t\t}\n\t\telse if(wrong > 2){\n\t\t\tout.println(\"NO\");\n\t\t}\n\t\telse{\n\t\t\tint tmp = a[wrong1-1];\n\t\t\ta[wrong1-1] = a[wrong2];\n\t\t\ta[wrong2] = tmp;\n\t\t\tfor(int i = 0; i < N; i++){\n\t\t\t\tif( i > 0 && a[i] < a[i-1]){\n\t\t\t\t\tout.println(\"NO\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tout.println(\"YES\");\n\t\t}\n\t}\n\t\n\t/**\n\t * @param args\n\t */\n\tpublic static void main(String[] args) {\n\t\tnew C136().run();\n\t}\n\t\n\tpublic void run() {\n        try {\n            reader = new BufferedReader(new InputStreamReader(System.in));\n            tokenizer = null;\n            out = new PrintWriter(System.out);\n            solve();\n            reader.close();\n            out.close();\n        } catch (Exception e) {\n            e.printStackTrace();\n            System.exit(1);\n        }\n    }\n\n    int nextInt() throws IOException {\n        return Integer.parseInt(nextToken());\n    }\n\n    long nextLong() throws IOException {\n        return Long.parseLong(nextToken());\n    }\n\n    double nextDouble() throws IOException {\n        return Double.parseDouble(nextToken());\n    }\n\n    String nextToken() throws IOException {\n        while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n            tokenizer = new StringTokenizer(reader.readLine());\n        }\n        return tokenizer.nextToken();\n    }\n\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint A[100005], B[100005], n;\nint main() {\n  cin >> n;\n  for (int i = 1; i <= n; i++) {\n    scanf(\"%d\", &A[i]);\n    B[i] = A[i];\n  }\n  sort(B + 1, B + n + 1);\n  int res = 0;\n  for (int i = 1; i <= n; i++) {\n    if (A[i] != B[i]) res++;\n  }\n  cout << (res <= 2 ? \"YES\" : \"NO\") << endl;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.lang.reflect.Array;\nimport java.math.*;\nimport java.io.*;\n\nimport static java.lang.Math.*;\nimport static java.util.Arrays.*;\nimport static java.util.Collections.*;\n\npublic class  Main  {\n\t\n\t//ArrayList<Integer> lis = new ArrayList<Integer>();\n\t//ArrayList<String> lis = new ArrayList<String>();\n\t//ArrayList<test> lis = new ArrayList<test>();\n//\tstatic long sum=0;\n//\tstatic boolean f=false;\n\t//static String s[],r=\"\";\n//\tstatic int dx[]={1,-1,0,0,1,1,-1,-1};\n  //  static int dy[]={0,0,1,-1,1,-1,1,-1},n,m,w=0;\n\tstatic int N;\n\tstatic boolean b[][],c[],h;\npublic  static void main(String[] args)  {\n   //googlein.txt C-small-attempt0.in\n//\tScanner sc =new Scanner(new File(\"file.txt\"));\n\t Scanner sc =new Scanner(System.in);\n\t  //File file = new File(\"file.txt\");\n\t//\tPrintWriter pw = new PrintWriter(new BufferedWriter(new FileWriter(file)));\n\t//\tsc.useDelimiter(\"(\\\\s)+|[,]\");\n\t \n\t\t \n\t  while(sc.hasNext()){\n\t\t   //long sum=0;\n\t\t//  int n=sc.nextInt(),m=sc.nextInt(),l=sc.nextInt(),r=0;\n\t   \n\t\t  int n=sc.nextInt(),x[]=new int[n];\n\t\t  PriorityQueue<Integer> que = new PriorityQueue<Integer>();\n\t\t  for(int i=0;i<n;i++){\n              int k=sc.nextInt();  \n\t\t\t  x[i]=k;\n\t\t      que.add(k);\n\t\t  }\n\t\t//  sort(x);\n\t\t  int c=0;\n\t\t  for(int i=0;i<n;i++){ if(x[i]!=que.poll())c++; if(c==3){System.out.println(\"NO\"); return;}  }\n\t\t  System.out.println(\"YES\");\n\t\t\n\t\t \n\t  \n}\n\t  }\n\t// db(\"Case #\"+(k)+\": \"+c);\n\t //\tpw.println(\"Case #\"+(k)+\": \"+c);\n\t \t\n\t \t//pw.flush();\n\t \t//pw.close();   \n\t\n   \n\n    static void db(Object... os){\n\t         System.err.println(Arrays.deepToString(os));\n \n\t}\n\n}\n\nclass P {\n    int v,vv,c;\n\tP(int v,int vv,int c){\n\t\tthis.v=v;\n\t    this.vv=vv;\n\t    this.c=c;\n\t} \t\n \n\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[202011], b[200110], i, n;\nint main() {\n  cin >> n;\n  for (i = 1; i <= n; i++) {\n    cin >> a[i];\n    b[i] = a[i];\n  }\n  int ans = 0;\n  sort(a + 1, a + n + 1);\n  for (i = 1; i <= n; i++)\n    if (a[i] != b[i]) ans++;\n  if (ans == 2 || ans == 0) {\n    cout << \"YES\";\n  } else {\n    cout << \"NO\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "/* \"Why do we fall? So we can learn to pick ourselves up.\" */\n\nimport java.util.*;\nimport java.io.PrintWriter; // Step 1\nimport java.io.IOException;\n\nimport java.io.*;\nimport java.math.*;\npublic class A\n\t\n\t{ \n\t\t static FastReader sc=new FastReader(); \n\t\t \n\t\t\t  public static void main(String[] args) throws FileNotFoundException \n\t    {\n\t\t\t\t  //StringBuffer sb=new StringBuffer(\"\");\n\t\t\t\t  int ttt=1;\n\t\t\t\t    // ttt =i(); \n\t\t\t        outer :while (ttt-- > 0) \n\t\t\t\t\t{\n\t\t\t        \tint n=i();\n\t\t\t        \tint A[]=input(n);\n\t\t\t        \tint B[]=new int[n];\n\t\t\t        \tfor(int i=0;i<n;i++)\n\t\t\t        \t\tB[i]=A[i];\n\t\t\t        \tsort(A);\n\t\t\t        \tint c=0;\n\t\t\t        \tfor(int i=0;i<n;i++) {\n\t\t\t        \t\tif(A[i]!=B[i])\n\t\t\t        \t\t\tc++;\n\t\t\t        \t}\n\t\t\t        \tif(c>2)\n\t\t\t        \t\tSystem.out.println(\"NO\");\n\t\t\t        \telse\n\t\t\t        \t\tSystem.out.println(\"YES\");\n\n\t\t        \t\t\n\t\t\t        \t\n\t\t\t\t\t}\n\t\t\t        //System.out.println(sb.toString());\n\t    }\n\t\t\t  \n\tstatic int[] input(int n) {\n\t\tint A[]=new int[n];\n\t\t   for(int i=0;i<n;i++) {\n\t\t\t   A[i]=sc.nextInt();\n\t\t   }\n\t\t   return A;\n\t   }\n\tstatic long[] inputL(int n) {\n\t\tlong A[]=new long[n];\n\t\t   for(int i=0;i<n;i++) {\n\t\t\t   A[i]=sc.nextLong();\n\t\t   }\n\t\t   return A;\n\t   }\n\tstatic String[] inputS(int n) {\n\t\tString A[]=new String[n];\n\t\t   for(int i=0;i<n;i++) {\n\t\t\t   A[i]=sc.next();\n\t\t   }\n\t\t   return A;\n\t   }\n\t\n\t\n\tstatic void input(int A[],int B[]) {\n\t\t   for(int i=0;i<A.length;i++) {\n\t\t\t   A[i]=sc.nextInt();\n\t\t\t   B[i]=sc.nextInt();\n\t\t   }\n\t}\n\tstatic int max(int A[]) {\n\t\tint max=Integer.MIN_VALUE;\n\t\tfor(int i=0;i<A.length;i++) {\n\t\t\tmax=Math.max(max, A[i]);\n\t\t}\n\t\treturn max;\n\t}\n\tstatic int min(int A[]) {\n\t\tint min=Integer.MAX_VALUE;\n\t\tfor(int i=0;i<A.length;i++) {\n\t\t\tmin=Math.min(min, A[i]);\n\t\t}\n\t\treturn min;\n\t}\n\tstatic long max(long A[]) {\n\t\tlong max=Long.MIN_VALUE;\n\t\tfor(int i=0;i<A.length;i++) {\n\t\t\tmax=Math.max(max, A[i]);\n\t\t}\n\t\treturn max;\n\t}\n\tstatic long min(long A[]) {\n\t\tlong min=Long.MAX_VALUE;\n\t\tfor(int i=0;i<A.length;i++) {\n\t\t\tmin=Math.min(min, A[i]);\n\t\t}\n\t\treturn min;\n\t}\n\tstatic int[][] input(int n,int m){\n\t\tint A[][]=new int[n][m];\n\t\tfor(int i=0;i<n;i++) {\n\t\t\tfor(int j=0;j<m;j++) {\n\t\t\t\tA[i][j]=i();\n\t\t\t}\n\t\t}\n\t\treturn A;\n\t}\n\tstatic long mod(long x) {\n\t\t int mod=1000000007;\n\t\t  return ((x%mod + mod)%mod);\n\t}\n\t\n\t     static int i() {\n\t    \t return sc.nextInt();\n\t     }\n\t     static String s() {\n\t    \t return sc.next();\n\t     }\n\t     static long l() {\n\t    \t return sc.nextLong();\n\t     }  \n\t     static void sort(int[] A){\n\t        int n = A.length;\n\t        Random rnd = new Random();\n\t        for(int i=0; i<n; ++i){\n\t            int tmp = A[i];\n\t            int randomPos = i + rnd.nextInt(n-i);\n\t            A[i] = A[randomPos];\n\t            A[randomPos] = tmp;\n\t        }\n\t        Arrays.sort(A);\n\t     }\n\t     static void sort(long[] A){\n\t\t        int n = A.length;\n\t\t        Random rnd = new Random();\n\t\t        for(int i=0; i<n; ++i){\n\t\t            long tmp = A[i];\n\t\t            int randomPos = i + rnd.nextInt(n-i);\n\t\t            A[i] = A[randomPos];\n\t\t            A[randomPos] = tmp;\n\t\t        }\n\t\t        Arrays.sort(A);\n\t\t     }\n\t     static String sort(String s) {\n\t    \t Character ch[]=new Character[s.length()];\n\t    \t for(int i=0;i<s.length();i++) {\n\t    \t\t ch[i]=s.charAt(i);\n\t    \t }\n\t    \t Arrays.sort(ch);\n\t    \t StringBuffer st=new StringBuffer(\"\");\n\t    \t for(int i=0;i<s.length();i++) {\n\t    \t\t st.append(ch[i]);\n\t    \t }\n\t    \t return st.toString();\n\t     }\n\t     static boolean prime(int n) \n\t\t    { \n\t\t        if (n <= 1) \n\t\t            return false; \n\t\t        if (n <= 3) \n\t\t            return true; \n\t\t        if (n % 2 == 0 || n % 3 == 0) \n\t\t            return false; \n\t\t        double sq=Math.sqrt(n);\n\t\t  \n\t\t        for (int i = 5; i <= sq; i = i + 6) \n\t\t            if (n % i == 0 || n % (i + 2) == 0) \n\t\t                return false; \n\t\t        return true; \n\t\t    } \n\t     static boolean prime(long n) \n\t\t    { \n\t\t        if (n <= 1) \n\t\t            return false; \n\t\t        if (n <= 3) \n\t\t            return true; \n\t\t        if (n % 2 == 0 || n % 3 == 0) \n\t\t            return false; \n\t\t        double sq=Math.sqrt(n);\n\t\t  \n\t\t        for (int i = 5; i <= sq; i = i + 6) \n\t\t            if (n % i == 0 || n % (i + 2) == 0) \n\t\t                return false; \n\t\t        return true; \n\t\t    } \n\t     static int gcd(int a, int b) \n\t     { \n\t         if (a == 0) \n\t             return b; \n\t         return gcd(b % a, a); \n\t     } \n\t     static long gcd(long a, long b) \n\t     { \n\t         if (a == 0) \n\t             return b; \n\t         return gcd(b % a, a); \n\t     } \n\t  \n\t        \n\t        \n\t    static class FastReader \n\t    { \n\t        BufferedReader br; \n\t        StringTokenizer st; \n\t  \n\t        public FastReader() \n\t        { \n\t            br = new BufferedReader(new\n\t                     InputStreamReader(System.in)); \n\t        } \n\t  \n\t        String next() \n\t        { \n\t            while (st == null || !st.hasMoreElements()) \n\t            { \n\t                try\n\t                { \n\t                    st = new StringTokenizer(br.readLine()); \n\t                } \n\t                catch (IOException  e) \n\t                { \n\t                    e.printStackTrace(); \n\t                } \n\t            } \n\t            return st.nextToken(); \n\t        } \n\t  \n\t        int nextInt() \n\t        { \n\t            return Integer.parseInt(next()); \n\t        } \n\t  \n\t        long nextLong() \n\t        { \n\t            return Long.parseLong(next()); \n\t        } \n\t  \n\t        double nextDouble() \n\t        { \n\t            return Double.parseDouble(next()); \n\t        } \n\t  \n\t        String nextLine() \n\t        { \n\t            String str = \"\"; \n\t            try\n\t            { \n\t                str = br.readLine(); \n\t            } \n\t            catch (IOException e) \n\t            { \n\t                e.printStackTrace(); \n\t            } \n\t            return str; \n\t        } \n\t    } \n\t} \n\t\n\t\n\t\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, kol = 0;\n  cin >> n;\n  int m[n], a[n];\n  for (int i = 0; i < n; i++) {\n    cin >> m[i];\n    a[i] = m[i];\n  }\n  sort(a, a + n);\n  for (int i = 0; i < n; i++)\n    if (a[i] != m[i]) kol++;\n  cout << ((kol <= 2) ? \"YES\" : \"NO\");\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvector<long long int> adj[200005];\nbool vis[200005] = {false};\nmap<pair<long long int, long long int>, long long int> m;\nint main() {\n  long long int n;\n  cin >> n;\n  long long int a[n], b[n];\n  for (long long int i = 0; i < n; i++) {\n    cin >> a[i];\n    b[i] = a[i];\n  }\n  sort(b, b + n);\n  long long int count = 0;\n  for (long long int i = 0; i < n; i++) {\n    if (b[i] != a[i]) {\n      count++;\n    }\n  }\n  if (count == 2 || count == 0)\n    cout << \"YES\\n\";\n  else\n    cout << \"NO\\n\";\n}\n"
        },
        {
            "language": 3,
            "solution": "n = int(input())\nl = list(map(int, input().split()))\nl1 = []\nfor i in l: l1.append(i)\nl1.sort()\ncnt = 0\nfor i in range(n):\n    if l[i] != l1[i]: cnt -= -1\nif cnt == 0 or cnt == 2: print('YES')\nelse: print('NO')"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.Arrays;\nimport java.util.StringTokenizer;\n\n/**\n * Created by peacefrog on 3/8/16.\n * 7:59 PM\n */\npublic class CF221C {\n\tfinal boolean ONLINE_JUDGE = System.getProperty(\"ONLINE_JUDGE\") != null;\n\tPrintWriter out;\n\tlong timeBegin, timeEnd;\n\n\tpublic void runIO() throws IOException {\n\t\ttimeBegin = System.currentTimeMillis();\n\n\t\tInputStream inputStream;\n\t\tOutputStream outputStream;\n\n\t\tif (ONLINE_JUDGE) {\n\t\t\tinputStream = System.in;\n\t\t\tReader.init(inputStream);\n\t\t\toutputStream = System.out;\n\n\t\t\tout = new PrintWriter(outputStream);\n\t\t} else {\n\t\t\tinputStream = new FileInputStream(\"/home/peacefrog/Dropbox/IdeaProjects/Problem Solving/input\");\n\t\t\tReader.init(inputStream);\n\t\t\tout = new PrintWriter(System.out);\n\t\t}\n\t\tsolve();\n\t\tout.flush();\n\t\tout.close();\n\t\ttimeEnd = System.currentTimeMillis();\n\t\tSystem.err.println(\"Time = \" + (timeEnd - timeBegin));\n\t}\n\n\t/*\n\t * Start Solution Here\n\t */\n\n\tprivate void solve() throws IOException {\n\t\tint n = Reader.nextInt();\n\t\tint arr[] = Reader.nextIntArray(n);\n\t\tint[] sorted = Arrays.copyOf(arr , n);\n\n\n\t\tArrays.sort(sorted);\n\t\tint cnt = 0 ;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tif(arr[i] != sorted[i])cnt++;\n\t\t}\n\n\t\tif(cnt > 2) out.println(\"NO\");\n\t\telse out.println(\"YES\");\n\t}\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tnew CF221C().runIO();\n\t}\n\n\tstatic class Reader {\n\t\tstatic BufferedReader reader;\n\t\tstatic StringTokenizer tokenizer;\n\n\t\t/**\n\t\t * call this method to initialize reader for InputStream\n\t\t */\n\t\tstatic void init(InputStream input) {\n\t\t\treader = new BufferedReader(new InputStreamReader(input));\n\t\t\ttokenizer = new StringTokenizer(\"\");\n\t\t}\n\n\t\t/**\n\t\t * get next word\n\t\t */\n\t\tstatic String next() {\n\t\t\twhile (tokenizer == null || !tokenizer.hasMoreTokens()) {\n\t\t\t\ttry {\n\t\t\t\t\ttokenizer = new StringTokenizer(reader.readLine());\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tthrow new RuntimeException(e);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn tokenizer.nextToken();\n\t\t}\n\n\t\tstatic String nextLine() {\n\t\t\ttry {\n\t\t\t\treturn reader.readLine();\n\t\t\t} catch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\treturn \"\";\n\t\t}\n\n\t\tstatic int nextChar() throws IOException {\n\t\t\treturn reader.read();\n\t\t}\n\n\t\tstatic int nextInt() throws IOException {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tstatic long nextLong() throws IOException {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tstatic double nextDouble() throws IOException {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tstatic long[] nextLongArray(int n) throws IOException {\n\t\t\tlong[] arr = new long[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tarr[i] = nextLong();\n\t\t\t}\n\n\t\t\treturn arr;\n\t\t}\n\n\t\tstatic int[] nextIntArray(int n) throws IOException {\n\t\t\tint[] arr = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tarr[i] = nextInt();\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\t}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[100000], b[100000];\nint main() {\n  int n;\n  scanf(\"%d\", &n);\n  for (int i = 0; i < n; ++i) {\n    scanf(\"%d\", &a[i]);\n    b[i] = a[i];\n  }\n  sort(b, b + n);\n  int cnt = 0;\n  for (int i = 0; i < n; ++i) {\n    if (a[i] != b[i]) cnt++;\n  }\n  puts(cnt == 0 || cnt == 2 ? \"YES\" : \"NO\");\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.Collection;\nimport java.util.PriorityQueue;\nimport java.util.StringTokenizer;\nimport java.util.stream.Stream;\n\npublic class TestClass implements Runnable {\n\t\n\tstatic final double time = 1e9;\n\tstatic final int MOD = (int) 1e9 + 7;\n\tstatic final long mh = Long.MAX_VALUE;\n\tstatic final Reader in = new Reader();\n\tstatic final PrintWriter out = new PrintWriter(System.out);\n\tStringBuilder answer = new StringBuilder();\n\n\tpublic static void main(String[] args) {\n\t\tnew Thread(null, new TestClass(), \"persefone\", 1 << 28).start();\n\t}\n\n\t@Override\n\tpublic void run() {\n//\t\tlong start = System.nanoTime();\n\t\tsolve();\n\t\tprintf();\n//\t\tlong elapsed = System.nanoTime() - start;\n//\t\tout.println(\"stamp : \" + elapsed / time);\n//\t\tout.println(\"stamp : \" + TimeUnit.SECONDS.convert(elapsed, TimeUnit.NANOSECONDS));\n\t\tclose();\n\t}\n\n\t\n\tvoid solve() {\n\t\tint n = in.nextInt();\n\t\tint[] a = in.nextIntArray(n);\n\t\tint[] b = a.clone();\n\t\tPriorityQueue<Integer> que = new PriorityQueue<>();\n\t\tfor (int i = 0; i < n; i++) que.add(a[i]);\n\t\tfor (int i = 0; i < n; i++) b[i] = que.poll();\n\t\tint c = 0;\n\t\tfor (int i = 0; i < n; i++) \n\t\t\tif (a[i] != b[i])\n\t\t\t\tc++;\n\t\tprintf(c <= 2 ? \"YES\" : \"NO\");\n\t\t\t\n\t}\n\t\t\n\tpublic interface Hash {\n\t\tpublic void computeHashArray();\n\t\tpublic void computeModArray();\n\t\t\n\t}\n\t\n\tclass StringHash implements Hash {\n\t\t// length of string s\n\t\tprivate final long MH = Long.MAX_VALUE;\n\t\tprivate int n;\n\t\tprivate char[] ch;\n\t\tprivate long[] hash, mod;\n\t\tStringHash(char[] ch) {\n\t\t\tthis.ch = ch;\n\t\t\tn = ch.length;\n\t\t\thash = new long[n + 1];\n\t\t\tmod = new long[n + 1];\n\t\t\tcomputeHashArray();\n\t\t\tcomputeModArray();\n\t\t}\n\t\t\n\t\tStringHash(String s) {\n\t\t\tthis(s.toCharArray());\n\t\t}\n\t\t\n\t\tStringHash(CharSequence s) {\n\t\t\tthis(s.toString());\n\t\t}\n\t\t\n\t\t@Override\n\t\tpublic void computeModArray() {\n\t\t\tmod[0] = 1;\n\t\t\tfor (int i = 1; i <= n; i++) mod[i] = (mod[i - 1] * 53) % MH;\n\t\t}\n\t\t\n\t\t@Override\n\t\tpublic void computeHashArray() {\n\t\t\tfor (int i = 0; i < n; i++) hash[i + 1] = (hash[i] * 53 + ch[i] - 'a') % MH;\n\t\t}\n\t\t\n\t\tpublic long getHash(int i, int j) {\n\t\t\treturn (hash[j] - hash[i] * mod[j - i] + MH * MH) % MH;\n\t\t}\n\t\t\n\t\tpublic long getHash(String s) {\n\t\t\tlong h = 0;\n\t\t\tfor (int i = 0; i < s.length(); i++) h = (h * 53 + s.charAt(i) - 'a') % MH;\n\t\t\treturn h;\n\t\t}\n\t\t\n\t\tpublic long[] getHashArray() { return hash; }\n\t\tpublic long[] getModArray() { return mod; }\n\t}\n\t\n\tpublic interface Manacher {\n\t\tpublic void oddPalindrome();\n\t\tpublic void evenPalindrome();\n\t}\n\t\n\tclass Palindrome implements Manacher {\n\t\tprivate int n;\n\t\tprivate char[] ch;\n\t\tprivate int[] oddPal, evenPal;\n\t\tpublic Palindrome() {}\n\t\tpublic Palindrome(String s) {\n\t\t\tthis(s.toCharArray());\n\t\t}\n\t\tpublic Palindrome(char[] ch) {\n\t\t\tthis.ch = ch;\n\t\t\tn = ch.length;\n\t\t\toddPal = new int[ch.length];\n\t\t\tevenPal = new int[ch.length];\n\t\t\toddPalindrome();\n\t\t\tevenPalindrome();\n\t\t}\n\t\t\n\t\t@Override\n\t\tpublic void oddPalindrome() {\n\t\t\tfor (int i = 0, l = 0, r = -1; i < n; i++) {\n\t\t\t\tint k = i > r ? 1 : Math.min(oddPal[r + l - i], r - i);\n\t\t\t\twhile (0 <= i - k && i + k < n && ch[i - k] == ch[i + k]) k++;\n\t\t\t\toddPal[i] = k--;\n\t\t\t\tif (i + k > r) { \n\t\t\t\t\tl = i - k;\n\t\t\t\t\tr = i + k;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t@Override\n\t\tpublic void evenPalindrome() {\n\t\t\tfor (int i = 0, l = 0, r = -1; i < n; i++) {\n\t\t\t\tint k = i > r ? 0 : Math.min(evenPal[r + l - i + 1], r - i + 1);\n\t\t\t\twhile (0 <= i - k - 1 && i + k < n && ch[i - k - 1] == ch[i + k]) k++;\n\t\t\t\tevenPal[i] = k--;\n\t\t\t\tif (i + k > r) {\n\t\t\t\t\tl = i - k - 1;\n\t\t\t\t\tr = i + k;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\tvoid printf() {\n\t\tout.print(answer);\n\t}\n\t\n\tvoid close() {\n\t\tout.close();\n\t}\n\n\tvoid printf(Stream<?> str) {\n\t\tstr.forEach(o -> add(o, \" \"));\n\t\tadd(\"\\n\");\n\t}\n\n\t \n\tvoid printf(Object... obj) {\n\t\tprintf(false, obj);\n\t}\n\n\tvoid printfWithDescription(Object... obj) {\n\t\tprintf(true, obj);\n\t}\n\t\n\t\t\n\tprivate void printf(boolean b, Object... obj) {\n\n\t\tif (obj.length > 1) {\n\t\t\tfor (int i = 0; i < obj.length; i++) {\n\t\t\t\tif (b) add(obj[i].getClass().getSimpleName(), \" - \");\n\t\t\t\tif (obj[i] instanceof Collection<?>) {\n\t\t\t\t\tprintf((Collection<?>) obj[i]);\n\t\t\t\t} else if (obj[i] instanceof int[][]) {\n\t\t\t\t\tprintf((int[][])obj[i]);\n\t\t\t\t} else if (obj[i] instanceof long[][]) {\n\t\t\t\t\tprintf((long[][])obj[i]);\n\t\t\t\t} else if (obj[i] instanceof double[][]) {\n\t\t\t\t\tprintf((double[][])obj[i]);\n\t\t\t\t} else printf(obj[i]);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (b) add(obj[0].getClass().getSimpleName(), \" - \");\n\t\tprintf(obj[0]);\n\t}\n\n\tvoid printf(Object o) {\n\t\tif (o instanceof int[])\n\t\t\tprintf(Arrays.stream((int[]) o).boxed());\n\t\telse if (o instanceof char[])\n\t\t\tprintf(new String((char[]) o));\n\t\telse if (o instanceof long[])\n\t\t\tprintf(Arrays.stream((long[]) o).boxed());\n\t\telse if (o instanceof double[])\n\t\t\tprintf(Arrays.stream((double[]) o).boxed());\n\t\telse if (o instanceof boolean[]) {\n\t\t\tfor (boolean b : (boolean[]) o) add(b, \" \");\n\t\t\tadd(\"\\n\");\n\t\t}\n\t\telse \n\t\t\tadd(o, \"\\n\");\n\t}\n\n\tvoid printf(int[]... obj) {\n\t\tfor (int i = 0; i < obj.length; i++) printf(obj[i]);\n\t}\n\t\n\tvoid printf(long[]... obj) {\n\t\tfor (int i = 0; i < obj.length; i++) printf(obj[i]);\n\t}\n\t\n\tvoid printf(double[]... obj) {\n\t\tfor (int i = 0; i < obj.length; i++) printf(obj[i]);\n\t}\n\t\n\tvoid printf(boolean[]... obj) {\n\t\tfor (int i = 0; i < obj.length; i++) printf(obj[i]);\n\t}\n\t\n\tvoid printf(Collection<?> col) {\n\t\tprintf(col.stream());\n\t}\n\n\t<T, K> void add(T t, K k) {\n\t\tif (t instanceof Collection<?>) {\n\t\t\t((Collection<?>) t).forEach(i -> add(i, \" \"));\n\t\t} else if (t instanceof Object[]) {\n\t\t\tArrays.stream((Object[]) t).forEach(i -> add(i, \" \"));\n\t\t} else\n\t\t\tadd(t);\n\t\tadd(k);\n\t}\n\t\n\t\n\t\n\t<T> void add(T t) {\n\t\tanswer.append(t);\n\t}\n\n\t@SuppressWarnings(\"unchecked\")\n\t<T extends Comparable<? super T>> T min(T... t) {\n\t\tif (t.length == 0)\n\t\t\treturn null;\n\t\tT m = t[0];\n\t\tfor (int i = 1; i < t.length; i++)\n\t\t\tif (t[i].compareTo(m) < 0)\n\t\t\t\tm = t[i];\n\t\treturn m;\n\t}\n\n\t@SuppressWarnings(\"unchecked\")\n\t<T extends Comparable<? super T>> T max(T... t) {\n\t\tif (t.length == 0)\n\t\t\treturn null;\n\t\tT m = t[0];\n\t\tfor (int i = 1; i < t.length; i++)\n\t\t\tif (t[i].compareTo(m) > 0)\n\t\t\t\tm = t[i];\n\t\treturn m;\n\t}\n\n\tint gcd(int a, int b) {\n\t\treturn (b == 0) ? a : gcd(b, a % b);\n\t}\n\n\tlong gcd(long a, long b) {\n\t\treturn (b == 0) ? a : gcd(b, a % b);\n\t}\n\t\n\t// c = gcd(a, b) -> extends gcd method: ax + by = c <----> (b % a)p + q = c;\n\tint[] ext_gcd(int a, int b) {\n\t\tif (b == 0) return new int[] {a, 1, 0 };\n\t\tint[] vals = ext_gcd(b, a % b);\n\t\tint d = vals[0]; // gcd\n\t    int p = vals[2]; // \n\t\tint q = vals[1] - (a / b) * vals[2];\n\t\treturn new int[] { d, p, q };\t  \n\t}\n\t\n\t// find any solution of the equation: ax + by = c using extends gcd\n\tboolean find_any_solution(int a, int b, int c, int[] root) {\n\t\tint[] vals = ext_gcd(Math.abs(a), Math.abs(b));\n\t\tif (c % vals[0] != 0) return false;\n\t\tprintf(vals);\n\t\troot[0] = c * vals[1] / vals[0];\n\t\troot[1] = c * vals[2] / vals[0];\n\t\tif (a < 0) root[0] *= -1;\n\t\tif (b < 0) root[1] *= -1;\n\t\treturn true;\n\t}\n\t\n\tint mod(int x) { return x % MOD; }\n\t\n\tint mod(int x, int y) { return mod(mod(x) + mod(y)); }\n\t\n\tlong mod(long x) { return x % MOD; }\n\t\n\tlong mod (long x, long y) { return mod(mod(x) + mod(y)); }\n\t\n\tint lw(long[] f, int l, int r, long k) {\n\t\tint R = r, m = 0;\n\t\twhile (l <= r) {\n\t\t\tm = l + r >> 1;\n\t\t    if (m == R) return m;\n\t\t    if (f[m] >= k) r = m - 1; else l = m + 1;\n\t\t}\n\t\treturn l;\n\t}\n\t\n\tint up(long[] f, int l, int r, long k) {\n\t\tint R = r, m = 0;\n\t\twhile (l <= r) {\n\t\t\tm = l + r >> 1;\n\t\t    if (m == R) return m;\n\t\t    if (f[m] > k) r = m - 1; else l = m + 1;\n\t\t}\n\t\treturn l;\n\t}\n\t\n\tint lw(int[] f, int l, int r, int k) {\n\t\tint R = r, m = 0;\n\t\twhile (l <= r) {\n\t\t\tm = l + r >> 1;\n\t\t    if (m == R) return m;\n\t\t    if (f[m] >= k) r = m - 1; else l = m + 1;\n\t\t}\n\t\treturn l;\n\t}\n\t\n\tint up(int[] f, int l, int r, int k) {\n\t\tint R = r, m = 0;\n\t\twhile (l <= r) {\n\t\t\tm = l + r >> 1;\n\t\t    if (m == R) return m;\n\t\t    if (f[m] > k) r = m - 1; else l = m + 1;\n\t\t}\n\t\treturn l;\n\t}\n\n\tlong calc(int base, int exponent) {\n\t\tif (exponent == 0) return 1;\n\t\tlong m = calc(base, exponent >> 1);\n\t\tif (exponent % 2 == 0) return m * m % MOD;\n\t\treturn base * m * m % MOD;\n\t}\n\t\n\tlong power(int base, int exponent) {\n\t\tif (exponent == 0) return 1;\n\t\tlong m = power(base, exponent >> 1);\n\t\tif (exponent % 2 == 0) return m * m;\n\t\treturn base * m * m;\n\t}\n\t\n\tvoid swap(int[] a, int i, int j) {\n\t\ta[i] ^= a[j];\n\t\ta[j] ^= a[i];\n\t\ta[i] ^= a[j];\n\t}\n\t\n\tvoid swap(long[] a, int i, int j) {\n\t\tlong tmp = a[i];\n\t\ta[i] = a[j];\n\t\ta[j] = tmp;\n\t}\n\t\n\tstatic class Pair<K extends Comparable<? super K>, V extends Comparable<? super V>>\n\t\t\timplements Comparable<Pair<K, V>> {\n\t\tprivate K k;\n\t\tprivate V v;\n\n\t\tPair() {}\n\n\t\tPair(K k, V v) {\n\t\t\tthis.k = k;\n\t\t\tthis.v = v;\n\t\t}\n\n\t\tK getK() { return k; }\n\n\t\tV getV() { return v; }\n\n\t\tvoid setK(K k) { this.k = k; }\n\n\t\tvoid setV(V v) { this.v = v; }\n\n\t\tvoid setKV(K k, V v) {\n\t\t\tthis.k = k;\n\t\t\tthis.v = v;\n\t\t}\n\n\t\t@SuppressWarnings(\"unchecked\")\n\t\t@Override\n\t\tpublic boolean equals(Object o) {\n\t\t\tif (this == o) return true;\n\t\t\tif (o == null || !(o instanceof Pair)) return false;\n\t\t\tPair<K, V> p = (Pair<K, V>) o;\n\t\t\treturn k.compareTo(p.k) == 0 && v.compareTo(p.v) == 0;\n\t\t}\n\n\t\t@Override\n\t\tpublic int hashCode() {\n\t\t\tint hash = 31;\n\t\t\thash = hash * 89 + k.hashCode();\n\t\t\thash = hash * 89 + v.hashCode();\n\t\t\treturn hash;\n\t\t}\n\n\t\t@Override\n\t\tpublic int compareTo(Pair<K, V> pair) {\n\t\t\treturn k.compareTo(pair.k) == 0 ? v.compareTo(pair.v) : k.compareTo(pair.k);\n\t\t}\n\n\t\t@Override\n\t\tpublic Pair<K, V> clone() {\n\t\t\treturn new Pair<K, V>(this.k, this.v);\n\t\t}\n\n\t\t@Override\n\t\tpublic String toString() {\n\t\t\treturn String.valueOf(k).concat(\" \").concat(String.valueOf(v)).concat(\"\\n\");\n\t\t}\n\t}\n\n\tstatic class Reader {\n\t\tprivate BufferedReader br;\n\t\tprivate StringTokenizer st;\n\n\t\tReader() {\n\t\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t\t}\n\n\t\tString next() {\n\t\t\ttry {\n\t\t\t\twhile (st == null || !st.hasMoreTokens()) {\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\t}\n\t\t\t} catch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tint[] nextIntArray(int n) {\n\t\t\tint[] arr = new int[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tarr[i] = nextInt();\n\t\t\treturn arr;\n\t\t}\n\n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tString nextLine() {\n\t\t\tString s = \"\";\n\t\t\ttry {\n\t\t\t\ts = br.readLine();\n\t\t\t} catch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\treturn s;\n\t\t}\n\t}\n}"
        },
        {
            "language": 4,
            "solution": "import java.awt.geom.*;\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.*;\npublic class Main {\n    int n;\n    int [] a;\n\n    private void doit() {\n        Scanner sc = new Scanner(System.in);\n        \n        //while(sc.hasNext()){\n            n = Integer.parseInt(sc.nextLine());\n            String [] inputN = sc.nextLine().split(\" \");\n            a = new int[n];\n            ArrayList<Integer> asorted = new ArrayList<Integer>();\n            for(int i = 0; i < n; i++){\n                a[i] = Integer.parseInt(inputN[i]);\n                asorted.add(a[i]);\n            }\n            Collections.sort(asorted);\n            int diffCount = 0;\n            for(int i = 0; i < n; i++){\n                if(a[i] == asorted.get(i)) continue;\n                diffCount++;\n                if(diffCount == 3){\n                    break;\n                }\n            }\n\n            if(diffCount <= 2){\n                System.out.println(\"YES\");\n            }\n            else{\n                System.out.println(\"NO\");\n            }\n        //}\n    }\n\n    public static void main(String[] args) {\n        Main obj = new Main();\n        obj.doit();\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  int A[n], B[n];\n  for (int i = 0; i < n; i++) {\n    cin >> A[i];\n    B[i] = A[i];\n  }\n  sort(B, B + n);\n  int i = 0, c = 0;\n  while (i < n) {\n    if (A[i] != B[i]) {\n      c++;\n    }\n    i++;\n  }\n  if (c == 0 || c == 2)\n    cout << \"YES\\n\";\n  else\n    cout << \"NO\\n\";\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "import sys\n\ninput = sys.stdin\n\n\nN = int(input.readline())\nA = map(int, input.readline().split())\nB = [a for a in A]\nB.sort()\ncnt = 0\nfor i in xrange(N):\n  if A[i] != B[i]:\n    cnt += 1\n\nprint 'NO' if cnt > 2 else 'YES'"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n//267630EY\npublic class Main221C\n{\n  static PrintWriter out=new PrintWriter(System.out);\n  public static void main(String[] args) throws IOException\n  {\n    Scanner sc=new Scanner(System.in);\n    int n=sc.nextInt();\n    int[] a=sc.nextIntArray(n);\n    Integer[] b=new Integer[n];\n    for(int i=0;i<n;i++)\n      b[i]=a[i];\n    Arrays.sort(b);\n    int cnt=0;\n    for(int i=0;i<n;i++)\n    {\n      if(b[i]!=a[i])\n        cnt++;\n    }\n    if(cnt==0||cnt==2)\n      out.println(\"YES\");\n    else\n      out.println(\"NO\");\n    out.flush();\n    \n    \n  }\n  static class Scanner\n  {\n    BufferedReader br;\n    StringTokenizer tk=new StringTokenizer(\"\");\n    public Scanner(InputStream is) \n        {\n      br=new BufferedReader(new InputStreamReader(is));\n    }\n        public int nextInt() throws IOException\n        {\n          if(tk.hasMoreTokens())\n                return Integer.parseInt(tk.nextToken());\n          tk=new StringTokenizer(br.readLine());\n          return nextInt();\n        }\n        public long nextLong() throws IOException\n        {\n            if(tk.hasMoreTokens())\n              return Long.parseLong(tk.nextToken());\n            tk=new StringTokenizer(br.readLine());\n            return nextLong();\n        }\n        public String next() throws IOException\n        {\n          if(tk.hasMoreTokens())\n            return (tk.nextToken());\n            tk=new StringTokenizer(br.readLine());\n            return next();\n        }\n        public String nextLine() throws IOException\n        {\n          tk=new StringTokenizer(\"\");\n          return br.readLine();\n        }\n        public double nextDouble() throws IOException\n        {\n            if(tk.hasMoreTokens())\n              return Double.parseDouble(tk.nextToken());\n            tk=new StringTokenizer(br.readLine());\n            return nextDouble();\n        }\n        public char nextChar() throws IOException\n        {\n            if(tk.hasMoreTokens())\n              return (tk.nextToken().charAt(0));\n            tk=new StringTokenizer(br.readLine());\n            return nextChar();\n        }\n        public int[] nextIntArray(int n) throws IOException\n        {\n            int a[]=new int[n];\n            for(int i=0;i<n;i++)\n              a[i]=nextInt();\n            return a;\n        }\n        public long[] nextLongArray(int n) throws IOException\n        {\n          long a[]=new long[n];\n            for(int i=0;i<n;i++)\n              a[i]=nextLong();\n            return a;\n        }\n        public int[] nextIntArrayOneBased(int n) throws IOException\n        {\n          int a[]=new int[n+1];\n            for(int i=1;i<=n;i++)\n              a[i]=nextInt();\n            return a;\n        }\n        public long[] nextLongArrayOneBased(int n) throws IOException\n        {\n          long a[]=new long[n+1];\n          for(int i=1;i<=n;i++)\n                a[i]=nextLong();\n          return a;\n        }\n  }\n}\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  vector<int> v(n);\n  vector<int> v1(n);\n  for (int i = 0; i < n; ++i) {\n    cin >> v[i];\n    v1[i] = v[i];\n  }\n  sort(v.begin(), v.end());\n  int res = 0;\n  for (int i = 0; i < n; ++i) {\n    if (v1[i] != v[i]) {\n      ++res;\n    }\n  }\n  if (res > 2) {\n    cout << \"NO\" << endl;\n  } else {\n    cout << \"YES\" << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint arr[100000], arr2[100000];\nvector<int> idx;\nint main() {\n  int n;\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> arr[i];\n    arr2[i] = arr[i];\n  }\n  sort(arr2, arr2 + n);\n  int nfalse = 0;\n  for (int i = 0; i < n; i++) {\n    if (arr[i] != arr2[i]) idx.push_back(i);\n  }\n  if ((idx.size() == 2 && arr[idx[0]] == arr2[idx[1]] &&\n       arr[idx[1]] == arr2[idx[0]]) ||\n      idx.size() == 0)\n    cout << \"YES\" << endl;\n  else\n    cout << \"NO\" << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nconst unsigned long long P = 239017, MaxN = 2100000, INF = 100000000;\nusing namespace std;\nint n, arr[1200000], b[1200000];\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = 0; i < n; ++i) {\n    scanf(\"%d\", &arr[i]), b[i] = arr[i];\n  }\n  sort(arr, arr + n);\n  int ans = 0;\n  for (int i = 0; i < n; ++i)\n    if (arr[i] != b[i]) ++ans;\n  if (ans == 2 || ans == 0)\n    printf(\"YES\");\n  else\n    printf(\"NO\");\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, v, R, L, c;\nvector<long long> vi, vs;\nbool t;\nint main() {\n  cin >> n;\n  for (int i = 0; i < n; ++i) {\n    cin >> v;\n    vi.push_back(v);\n    vs.push_back(vi[i]);\n  }\n  sort(vs.begin(), vs.end());\n  for (int i = 0; i < n; ++i) {\n    if (vi[i] != vs[i] && t == 0) {\n      R = i;\n      t = 1;\n    } else if (vi[i] != vs[i] && t == 1) {\n      L = i;\n      break;\n    }\n  }\n  swap(vi[R], vi[L]);\n  for (int i = 0; i < n; ++i) {\n    if (vi[i] == vs[i]) ++c;\n  }\n  if (c == n)\n    cout << \"YES\";\n  else\n    cout << \"NO\";\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.Collection;\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.StringTokenizer;\nimport java.util.stream.Stream;\n\npublic class TestClass implements Runnable {\n\t\n\tstatic final double time = 1e9;\n\tstatic final int MOD = (int) 1e9 + 7;\n\tstatic final long mh = Long.MAX_VALUE;\n\tstatic final Reader in = new Reader();\n\tstatic final PrintWriter out = new PrintWriter(System.out);\n\tStringBuilder answer = new StringBuilder();\n\n\tpublic static void main(String[] args) {\n\t\tnew Thread(null, new TestClass(), \"persefone\", 1 << 28).start();\n\t}\n\n\t@Override\n\tpublic void run() {\n//\t\tlong start = System.nanoTime();\n\t\tsolve();\n\t\tprintf();\n//\t\tlong elapsed = System.nanoTime() - start;\n//\t\tout.println(\"stamp : \" + elapsed / time);\n//\t\tout.println(\"stamp : \" + TimeUnit.SECONDS.convert(elapsed, TimeUnit.NANOSECONDS));\n\t\tclose();\n\t}\n\n\t\n\tvoid solve() {\n\t\tint n = in.nextInt();\n\t\tint[] a = in.nextIntArray(n);\n\t\tint r = -1;\n\t\tfor (int i = n - 1; i > 0; i--) \n\t\t\tif (a[i] < a[i - 1]) {\n\t\t\t\tr = i - 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\tif (r == -1) {\n\t\t\tprintf(\"YES\");\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tint l = -1;\n\t\tfor (int i = 1; i < n; i++) \n\t\t\tif (a[i] < a[i - 1]) {\n\t\t\t\tl = i - 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\n\t\t\n\t\tif (l == r) {\n\t\t\tif (l == 0) {\n\t\t\t\tprintf(n == 2 || a[1] == a[n - 1] || a[0] <= a[up(a, l + 1, n, a[l + 1])] ? \"YES\" : \"NO\");\n\t\t\t} else if (l == n - 2) {\n\t\t\t\tprintf(a[l] == a[0] || a[n - 1] >= a[lw(a, 0, l, a[l]) - 1] ? \"YES\" : \"NO\");\n\t\t\t} else {\n\t\t\t\tif (a[l] == a[0]) {\n\t\t\t\t\tprintf(a[l] <= a[l + 2] ? \"YES\" : \"NO\");\n\t\t\t\t} else if (a[l + 1] == a[n - 1]) {\n\t\t\t\t\tprintf(a[l + 1] >= a[l - 1] ? \"YES\" : \"NO\");\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tprintf(a[l] <= a[up(a, l + 1, n, a[l + 1])] && a[l + 1] >= a[lw(a, 0, l, a[l]) - 1] ? \"YES\" : \"NO\");\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tswap(a, l, r + 1);\n\t\tfor (int i = 1; i < n; i++) \n\t\t\tif (a[i] < a[i - 1]) {\n\t\t\t\tprintf(\"NO\");\n\t\t\t\treturn;\n\t\t\t}\n\t\tprintf(\"YES\");\n\t}\n\t\t\n\tpublic interface Hash {\n\t\tpublic void computeHashArray();\n\t\tpublic void computeModArray();\n\t\t\n\t}\n\t\n\tclass StringHash implements Hash {\n\t\t// length of string s\n\t\tprivate final long MH = Long.MAX_VALUE;\n\t\tprivate int n;\n\t\tprivate char[] ch;\n\t\tprivate long[] hash, mod;\n\t\tStringHash(char[] ch) {\n\t\t\tthis.ch = ch;\n\t\t\tn = ch.length;\n\t\t\thash = new long[n + 1];\n\t\t\tmod = new long[n + 1];\n\t\t\tcomputeHashArray();\n\t\t\tcomputeModArray();\n\t\t}\n\t\t\n\t\tStringHash(String s) {\n\t\t\tthis(s.toCharArray());\n\t\t}\n\t\t\n\t\tStringHash(CharSequence s) {\n\t\t\tthis(s.toString());\n\t\t}\n\t\t\n\t\t@Override\n\t\tpublic void computeModArray() {\n\t\t\tmod[0] = 1;\n\t\t\tfor (int i = 1; i <= n; i++) mod[i] = (mod[i - 1] * 53) % MH;\n\t\t}\n\t\t\n\t\t@Override\n\t\tpublic void computeHashArray() {\n\t\t\tfor (int i = 0; i < n; i++) hash[i + 1] = (hash[i] * 53 + ch[i] - 'a') % MH;\n\t\t}\n\t\t\n\t\tpublic long getHash(int i, int j) {\n\t\t\treturn (hash[j] - hash[i] * mod[j - i] + MH * MH) % MH;\n\t\t}\n\t\t\n\t\tpublic long getHash(String s) {\n\t\t\tlong h = 0;\n\t\t\tfor (int i = 0; i < s.length(); i++) h = (h * 53 + s.charAt(i) - 'a') % MH;\n\t\t\treturn h;\n\t\t}\n\t\t\n\t\tpublic long[] getHashArray() { return hash; }\n\t\tpublic long[] getModArray() { return mod; }\n\t}\n\t\n\tpublic interface Manacher {\n\t\tpublic void oddPalindrome();\n\t\tpublic void evenPalindrome();\n\t}\n\t\n\tclass Palindrome implements Manacher {\n\t\tprivate int n;\n\t\tprivate char[] ch;\n\t\tprivate int[] oddPal, evenPal;\n\t\tpublic Palindrome() {}\n\t\tpublic Palindrome(String s) {\n\t\t\tthis(s.toCharArray());\n\t\t}\n\t\tpublic Palindrome(char[] ch) {\n\t\t\tthis.ch = ch;\n\t\t\tn = ch.length;\n\t\t\toddPal = new int[ch.length];\n\t\t\tevenPal = new int[ch.length];\n\t\t\toddPalindrome();\n\t\t\tevenPalindrome();\n\t\t}\n\t\t\n\t\t@Override\n\t\tpublic void oddPalindrome() {\n\t\t\tfor (int i = 0, l = 0, r = -1; i < n; i++) {\n\t\t\t\tint k = i > r ? 1 : Math.min(oddPal[r + l - i], r - i);\n\t\t\t\twhile (0 <= i - k && i + k < n && ch[i - k] == ch[i + k]) k++;\n\t\t\t\toddPal[i] = k--;\n\t\t\t\tif (i + k > r) { \n\t\t\t\t\tl = i - k;\n\t\t\t\t\tr = i + k;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t@Override\n\t\tpublic void evenPalindrome() {\n\t\t\tfor (int i = 0, l = 0, r = -1; i < n; i++) {\n\t\t\t\tint k = i > r ? 0 : Math.min(evenPal[r + l - i + 1], r - i + 1);\n\t\t\t\twhile (0 <= i - k - 1 && i + k < n && ch[i - k - 1] == ch[i + k]) k++;\n\t\t\t\tevenPal[i] = k--;\n\t\t\t\tif (i + k > r) {\n\t\t\t\t\tl = i - k - 1;\n\t\t\t\t\tr = i + k;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\tvoid printf() {\n\t\tout.print(answer);\n\t}\n\t\n\tvoid close() {\n\t\tout.close();\n\t}\n\n\tvoid printf(Stream<?> str) {\n\t\tstr.forEach(o -> add(o, \" \"));\n\t\tadd(\"\\n\");\n\t}\n\n\t \n\tvoid printf(Object... obj) {\n\t\tprintf(false, obj);\n\t}\n\n\tvoid printfWithDescription(Object... obj) {\n\t\tprintf(true, obj);\n\t}\n\t\n\t\t\n\tprivate void printf(boolean b, Object... obj) {\n\n\t\tif (obj.length > 1) {\n\t\t\tfor (int i = 0; i < obj.length; i++) {\n\t\t\t\tif (b) add(obj[i].getClass().getSimpleName(), \" - \");\n\t\t\t\tif (obj[i] instanceof Collection<?>) {\n\t\t\t\t\tprintf((Collection<?>) obj[i]);\n\t\t\t\t} else if (obj[i] instanceof int[][]) {\n\t\t\t\t\tprintf((int[][])obj[i]);\n\t\t\t\t} else if (obj[i] instanceof long[][]) {\n\t\t\t\t\tprintf((long[][])obj[i]);\n\t\t\t\t} else if (obj[i] instanceof double[][]) {\n\t\t\t\t\tprintf((double[][])obj[i]);\n\t\t\t\t} else printf(obj[i]);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (b) add(obj[0].getClass().getSimpleName(), \" - \");\n\t\tprintf(obj[0]);\n\t}\n\n\tvoid printf(Object o) {\n\t\tif (o instanceof int[])\n\t\t\tprintf(Arrays.stream((int[]) o).boxed());\n\t\telse if (o instanceof char[])\n\t\t\tprintf(new String((char[]) o));\n\t\telse if (o instanceof long[])\n\t\t\tprintf(Arrays.stream((long[]) o).boxed());\n\t\telse if (o instanceof double[])\n\t\t\tprintf(Arrays.stream((double[]) o).boxed());\n\t\telse if (o instanceof boolean[]) {\n\t\t\tfor (boolean b : (boolean[]) o) add(b, \" \");\n\t\t\tadd(\"\\n\");\n\t\t}\n\t\telse \n\t\t\tadd(o, \"\\n\");\n\t}\n\n\tvoid printf(int[]... obj) {\n\t\tfor (int i = 0; i < obj.length; i++) printf(obj[i]);\n\t}\n\t\n\tvoid printf(long[]... obj) {\n\t\tfor (int i = 0; i < obj.length; i++) printf(obj[i]);\n\t}\n\t\n\tvoid printf(double[]... obj) {\n\t\tfor (int i = 0; i < obj.length; i++) printf(obj[i]);\n\t}\n\t\n\tvoid printf(boolean[]... obj) {\n\t\tfor (int i = 0; i < obj.length; i++) printf(obj[i]);\n\t}\n\t\n\tvoid printf(Collection<?> col) {\n\t\tprintf(col.stream());\n\t}\n\n\t<T, K> void add(T t, K k) {\n\t\tif (t instanceof Collection<?>) {\n\t\t\t((Collection<?>) t).forEach(i -> add(i, \" \"));\n\t\t} else if (t instanceof Object[]) {\n\t\t\tArrays.stream((Object[]) t).forEach(i -> add(i, \" \"));\n\t\t} else\n\t\t\tadd(t);\n\t\tadd(k);\n\t}\n\t\n\t\n\t\n\t<T> void add(T t) {\n\t\tanswer.append(t);\n\t}\n\n\t@SuppressWarnings(\"unchecked\")\n\t<T extends Comparable<? super T>> T min(T... t) {\n\t\tif (t.length == 0)\n\t\t\treturn null;\n\t\tT m = t[0];\n\t\tfor (int i = 1; i < t.length; i++)\n\t\t\tif (t[i].compareTo(m) < 0)\n\t\t\t\tm = t[i];\n\t\treturn m;\n\t}\n\n\t@SuppressWarnings(\"unchecked\")\n\t<T extends Comparable<? super T>> T max(T... t) {\n\t\tif (t.length == 0)\n\t\t\treturn null;\n\t\tT m = t[0];\n\t\tfor (int i = 1; i < t.length; i++)\n\t\t\tif (t[i].compareTo(m) > 0)\n\t\t\t\tm = t[i];\n\t\treturn m;\n\t}\n\n\tint gcd(int a, int b) {\n\t\treturn (b == 0) ? a : gcd(b, a % b);\n\t}\n\n\tlong gcd(long a, long b) {\n\t\treturn (b == 0) ? a : gcd(b, a % b);\n\t}\n\t\n\t// c = gcd(a, b) -> extends gcd method: ax + by = c <----> (b % a)p + q = c;\n\tint[] ext_gcd(int a, int b) {\n\t\tif (b == 0) return new int[] {a, 1, 0 };\n\t\tint[] vals = ext_gcd(b, a % b);\n\t\tint d = vals[0]; // gcd\n\t    int p = vals[2]; // \n\t\tint q = vals[1] - (a / b) * vals[2];\n\t\treturn new int[] { d, p, q };\t  \n\t}\n\t\n\t// find any solution of the equation: ax + by = c using extends gcd\n\tboolean find_any_solution(int a, int b, int c, int[] root) {\n\t\tint[] vals = ext_gcd(Math.abs(a), Math.abs(b));\n\t\tif (c % vals[0] != 0) return false;\n\t\tprintf(vals);\n\t\troot[0] = c * vals[1] / vals[0];\n\t\troot[1] = c * vals[2] / vals[0];\n\t\tif (a < 0) root[0] *= -1;\n\t\tif (b < 0) root[1] *= -1;\n\t\treturn true;\n\t}\n\t\n\tint mod(int x) { return x % MOD; }\n\t\n\tint mod(int x, int y) { return mod(mod(x) + mod(y)); }\n\t\n\tlong mod(long x) { return x % MOD; }\n\t\n\tlong mod (long x, long y) { return mod(mod(x) + mod(y)); }\n\t\n\tint lw(long[] f, int l, int r, long k) {\n\t\tint R = r, m = 0;\n\t\twhile (l <= r) {\n\t\t\tm = l + r >> 1;\n\t\t    if (m == R) return m;\n\t\t    if (f[m] >= k) r = m - 1; else l = m + 1;\n\t\t}\n\t\treturn l;\n\t}\n\t\n\tint up(long[] f, int l, int r, long k) {\n\t\tint R = r, m = 0;\n\t\twhile (l <= r) {\n\t\t\tm = l + r >> 1;\n\t\t    if (m == R) return m;\n\t\t    if (f[m] > k) r = m - 1; else l = m + 1;\n\t\t}\n\t\treturn l;\n\t}\n\t\n\tint lw(int[] f, int l, int r, int k) {\n\t\tint R = r, m = 0;\n\t\twhile (l <= r) {\n\t\t\tm = l + r >> 1;\n\t\t    if (m == R) return m;\n\t\t    if (f[m] >= k) r = m - 1; else l = m + 1;\n\t\t}\n\t\treturn l;\n\t}\n\t\n\tint up(int[] f, int l, int r, int k) {\n\t\tint R = r, m = 0;\n\t\twhile (l <= r) {\n\t\t\tm = l + r >> 1;\n\t\t    if (m == R) return m;\n\t\t    if (f[m] > k) r = m - 1; else l = m + 1;\n\t\t}\n\t\treturn l;\n\t}\n\n\tlong calc(int base, int exponent) {\n\t\tif (exponent == 0) return 1;\n\t\tlong m = calc(base, exponent >> 1);\n\t\tif (exponent % 2 == 0) return m * m % MOD;\n\t\treturn base * m * m % MOD;\n\t}\n\t\n\tlong power(int base, int exponent) {\n\t\tif (exponent == 0) return 1;\n\t\tlong m = power(base, exponent >> 1);\n\t\tif (exponent % 2 == 0) return m * m;\n\t\treturn base * m * m;\n\t}\n\t\n\tvoid swap(int[] a, int i, int j) {\n\t\ta[i] ^= a[j];\n\t\ta[j] ^= a[i];\n\t\ta[i] ^= a[j];\n\t}\n\t\n\tvoid swap(long[] a, int i, int j) {\n\t\tlong tmp = a[i];\n\t\ta[i] = a[j];\n\t\ta[j] = tmp;\n\t}\n\t\n\tstatic class Pair<K extends Comparable<? super K>, V extends Comparable<? super V>>\n\t\t\timplements Comparable<Pair<K, V>> {\n\t\tprivate K k;\n\t\tprivate V v;\n\n\t\tPair() {}\n\n\t\tPair(K k, V v) {\n\t\t\tthis.k = k;\n\t\t\tthis.v = v;\n\t\t}\n\n\t\tK getK() { return k; }\n\n\t\tV getV() { return v; }\n\n\t\tvoid setK(K k) { this.k = k; }\n\n\t\tvoid setV(V v) { this.v = v; }\n\n\t\tvoid setKV(K k, V v) {\n\t\t\tthis.k = k;\n\t\t\tthis.v = v;\n\t\t}\n\n\t\t@SuppressWarnings(\"unchecked\")\n\t\t@Override\n\t\tpublic boolean equals(Object o) {\n\t\t\tif (this == o) return true;\n\t\t\tif (o == null || !(o instanceof Pair)) return false;\n\t\t\tPair<K, V> p = (Pair<K, V>) o;\n\t\t\treturn k.compareTo(p.k) == 0 && v.compareTo(p.v) == 0;\n\t\t}\n\n\t\t@Override\n\t\tpublic int hashCode() {\n\t\t\tint hash = 31;\n\t\t\thash = hash * 89 + k.hashCode();\n\t\t\thash = hash * 89 + v.hashCode();\n\t\t\treturn hash;\n\t\t}\n\n\t\t@Override\n\t\tpublic int compareTo(Pair<K, V> pair) {\n\t\t\treturn k.compareTo(pair.k) == 0 ? v.compareTo(pair.v) : k.compareTo(pair.k);\n\t\t}\n\n\t\t@Override\n\t\tpublic Pair<K, V> clone() {\n\t\t\treturn new Pair<K, V>(this.k, this.v);\n\t\t}\n\n\t\t@Override\n\t\tpublic String toString() {\n\t\t\treturn String.valueOf(k).concat(\" \").concat(String.valueOf(v)).concat(\"\\n\");\n\t\t}\n\t}\n\n\tstatic class Reader {\n\t\tprivate BufferedReader br;\n\t\tprivate StringTokenizer st;\n\n\t\tReader() {\n\t\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t\t}\n\n\t\tString next() {\n\t\t\ttry {\n\t\t\t\twhile (st == null || !st.hasMoreTokens()) {\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\t}\n\t\t\t} catch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tint[] nextIntArray(int n) {\n\t\t\tint[] arr = new int[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tarr[i] = nextInt();\n\t\t\treturn arr;\n\t\t}\n\n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tString nextLine() {\n\t\t\tString s = \"\";\n\t\t\ttry {\n\t\t\t\ts = br.readLine();\n\t\t\t} catch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\treturn s;\n\t\t}\n\t}\n}"
        },
        {
            "language": 1,
            "solution": "from __future__ import division, print_function\nimport os\nimport sys\nfrom io import BytesIO, IOBase\n\nif sys.version_info[0] < 3:from __builtin__ import xrange as range;from future_builtins import ascii, filter, hex, map, oct, zip \n\nBUFSIZE = 8192;\nclass FastIO(IOBase):\n    newlines = 0\n \n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n \n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n \n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n \n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n \n \nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n \n \ndef print(*args, **kwargs):\n    \"\"\"Prints the values to a stream, or to sys.stdout by default.\"\"\"\n    sep, file = kwargs.pop(\"sep\", \" \"), kwargs.pop(\"file\", sys.stdout)\n    at_start = True\n    for x in args:\n        if not at_start:\n            file.write(sep)\n        file.write(str(x))\n        at_start = False\n    file.write(kwargs.pop(\"end\", \"\\n\"))\n    if kwargs.pop(\"flush\", False):\n        file.flush()\n\n\nif sys.version_info[0] < 3: \n    sys.stdin, sys.stdout = FastIO(sys.stdin), FastIO(sys.stdout)\nelse:\n    sys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\n\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\");ii = lambda: int(input());ll = lambda: list(map(int , input().split()));vv = lambda: map(int , input().split());pr = print\npl = lambda l: pr(\" \".join(list(map(str,l))))\n\nn = ii()\narr = ll()\ndef checkSorted():\n    global n , arr;  \n    b = [] \n    b = arr[0:n]\n          \n    b.sort() \n      \n    # Check if 0 or 1 swap required  \n    # to get the sorted array  \n    ct = 0\n    for i in range(n): \n        if arr[i] != b[i]: \n            ct += 1\n              \n    if ct == 0 or ct == 2: \n        return True\n    else: \n        return False\npr(\"YNEOS\"[not checkSorted()::2])\n"
        },
        {
            "language": 3,
            "solution": "def issort(l):\n    return all(l[i] <= l[i+1] for i in range(len(l)-1))\n\nsa = int(input())\narray = list(map(int, input().split(' ')))\narray2 = array[:]\narray2.sort()\n\ncount = 0\nmislist=[]\nfor i in range(sa):\n    if array[i] != array2[i]:\n        count += 1\n        if count <= 2:\n            mislist.append(i)\n\nif count > 2:\n    print(\"NO\")\nelse:\n    if mislist == []:\n        print(\"YES\")\n    elif len(mislist) == 1:\n        if issort(array):\n            print(\"YES\")\n        else:\n            print(\"NO\")\n    else:\n        array[mislist[0]], array[mislist[1]] = array[mislist[1]], array[mislist[0]]\n        if issort(array):\n            print(\"YES\")\n        else:\n            print(\"NO\")\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 100005;\nint a[maxn], b[maxn];\nint main() {\n  int n;\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; i++) {\n    scanf(\"%d\", &a[i]);\n    b[i] = a[i];\n  }\n  sort(b + 1, b + n + 1);\n  int op = 0;\n  for (int i = n; i > 0; i--) {\n    if (a[i] != b[i]) {\n      op++;\n      for (int j = 1; j < i; j++) {\n        int t;\n        if (a[j] == b[i]) {\n          t = a[j];\n          a[j] = a[i];\n          a[i] = t;\n          break;\n        }\n      }\n    }\n    if (op > 1) break;\n  }\n  if (op > 1)\n    puts(\"NO\");\n  else\n    puts(\"YES\");\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e5 + 10;\nint arr[N], arr2[N];\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  int n;\n  cin >> n;\n  for (int i = 1; i <= n; i++) {\n    cin >> arr[i];\n    arr2[i] = arr[i];\n  }\n  sort(arr2 + 1, arr2 + n + 1);\n  vector<int> whatSwap;\n  for (int i = 1; i <= n; i++)\n    if (arr2[i] != arr[i]) whatSwap.push_back(i);\n  if (whatSwap.size() != 2 && whatSwap.size() != 0) {\n    cout << \"NO\\n\";\n    return 0;\n  }\n  if (whatSwap.size() == 0) {\n    cout << \"YES\\n\";\n    return 0;\n  }\n  swap(arr[whatSwap[0]], arr[whatSwap[1]]);\n  for (int i = 1; i <= n; i++) {\n    if (arr[i] != arr2[i]) {\n      cout << \"NO\\n\";\n      return 0;\n    }\n  }\n  cout << \"YES\\n\";\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\nimport java.math.*;\nimport java.util.HashMap;\n\npublic class main\n{\n    static class Reader \n    { \n        private InputStream mIs;private byte[] buf = new byte[1024];private int curChar,numChars;public Reader() { this(System.in); }public Reader(InputStream is) { mIs = is;} \n        public int read() {if (numChars == -1) throw new InputMismatchException();if (curChar >= numChars) {curChar = 0;try { numChars = mIs.read(buf);} catch (IOException e) { throw new InputMismatchException();}if (numChars <= 0) return -1; }return buf[curChar++];} \n        public String nextLine(){int c = read();while (isSpaceChar(c)) c = read();StringBuilder res = new StringBuilder();do {res.appendCodePoint(c);c = read();}while (!isEndOfLine(c));return res.toString() ;} \n        public String s(){int c = read();while (isSpaceChar(c)) c = read();StringBuilder res = new StringBuilder();do {res.appendCodePoint(c);c = read();}while (!isSpaceChar(c));return res.toString();} \n        public long l(){int c = read();while (isSpaceChar(c)) c = read();int sgn = 1;if (c == '-') { sgn = -1 ; c = read() ; }long res = 0; do{ if (c < '0' || c > '9') throw new InputMismatchException();res *= 10 ; res += c - '0' ; c = read();}while(!isSpaceChar(c));return res * sgn;} \n        public int i(){int c = read() ;while (isSpaceChar(c)) c = read();int sgn = 1;if (c == '-') { sgn = -1 ; c = read() ; }int res = 0;do{if (c < '0' || c > '9') throw new InputMismatchException();res *= 10 ; res += c - '0' ; c = read() ;}while(!isSpaceChar(c));return res * sgn;} \n        public double d() throws IOException {return Double.parseDouble(s()) ;}\n        public boolean isSpaceChar(int c) { return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1; } \n        public boolean isEndOfLine(int c) { return c == '\\n' || c == '\\r' || c == -1; } \n    } \n    \n    \n    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    \n    public static void main(String args[])\n    {\n        Reader sc=new Reader();\n        PrintWriter out=new PrintWriter(System.out);\n        int n=sc.i();\n        int arr[]=new int[n];\n        Integer brr[]=new Integer[n];\n        for(int i=0;i<n;i++)\n        {\n           arr[i]=sc.i();\n           brr[i]=arr[i];\n        }\n        Arrays.sort(brr);\n        HashSet<Integer> hs=new HashSet<Integer>();\n        for(int i=0;i<n;i++)\n        {\n            if(arr[i]!=brr[i])\n            hs.add(i);\n        }\n        if(hs.size()>2)\n        System.out.println(\"NO\");\n        else\n        System.out.println(\"YES\");\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvector<int> V1, V2;\nint main() {\n  int n, i, s, a;\n  scanf(\"%d\", &n);\n  for (i = 0; i < n; i++) {\n    scanf(\"%d\", &a);\n    V1.push_back(a);\n    V2.push_back(a);\n  }\n  sort(V2.begin(), V2.end());\n  s = 0;\n  for (i = 0; i < n; i++) s += (V1[i] != V2[i]);\n  if (s > 2)\n    printf(\"NO\\n\");\n  else\n    printf(\"YES\\n\");\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[10000000], b[10010000];\nint main() {\n  int n;\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n    b[i] = a[i];\n  }\n  int p = 0;\n  sort(a, a + n);\n  for (int i = 0; i < n; i++) {\n    if (a[i] != b[i]) p++;\n  }\n  if (p > 2)\n    cout << \"NO\" << endl;\n  else\n    cout << \"YES\" << endl;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nconst long long int mod = 998244353;\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  long long int i, n, cnt = 0;\n  cin >> n;\n  vector<long long int> a(n), b(n);\n  for (i = 0; i < n; i++) {\n    cin >> a[i];\n    b[i] = a[i];\n  }\n  sort(a.begin(), a.end());\n  for (i = 0; i < n; i++) {\n    if (a[i] != b[i]) cnt++;\n  }\n  if ((cnt + 1) / 2 <= 1)\n    cout << \"YES\"\n         << \"\\n\";\n  else\n    cout << \"NO\"\n         << \"\\n\";\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class Codeforces {\n\tpublic static void main (String[] args) throws IOException {\n\t\tBufferedReader reader = new BufferedReader (new InputStreamReader (System.in));\n\t\tint n = Integer.parseInt(reader.readLine());\n\t\tStringTokenizer tokenizer = new StringTokenizer (reader.readLine());\n\t\tint[] a = new int[n];\n\n\t\tfor (int ii = 0; ii < n; ii++) {\n\t\t\ta[ii] = Integer.parseInt (tokenizer.nextToken());\n\t\t}\n\t\t\n\t\tint downhill = -1;\n\t\tint uphill = -1;\n\t\t\n\t\tfor (int ii = 0; ii < n - 1; ii++) {\n\t\t\tif (a[ii + 1] < a[ii]) {\n\t\t\t\tuphill = ii;\t\t\t\n\t\t\t\twhile (ii != -1 && a[ii] == a[uphill]) {\n\t\t\t\t\tii--;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tuphill = ii + 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor (int ii = n - 1; ii > 0; ii--) {\n\t\t\tif (a[ii] < a[ii - 1]) {\t\n\t\t\t\tdownhill = ii;\t\t\t\n\t\t\t\twhile(ii != n && a[ii] == a[downhill]) {\n\t\t\t\t\tii++;\n\t\t\t\t}\n\t\t\t\tdownhill = ii - 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\t//System.out.println (uphill);\n\t\t//System.out.println (downhill);\n\t\t\n\t\tif (downhill == -1 && uphill == -1) {\n\t\t\tSystem.out.println (\"YES\");\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tint temp = a[downhill];\n\t\ta[downhill] = a[uphill];\n\t\ta[uphill] = temp;\n\t\t\n\t\t/*\n\t\tfor (int ii = 0; ii < n ; ii++) {\n\t\t\tSystem.out.print (a[ii] + \" \");\n\t\t}\n\t\tSystem.out.println ();\n\t\t*/\t\n\t\t\t\n\t\tfor (int ii = 0; ii < n - 1; ii++) {\n\t\t\tif (a[ii] > a[ii + 1]) {\n\t\t\t\tSystem.out.println (\"NO\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println (\"YES\");\n\t}\n}"
        },
        {
            "language": 4,
            "solution": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class TC {\n    public static void main(String[] args) {\n        Scanner sc=new Scanner(System.in);\n        Integer[] ar=new Integer[sc.nextInt()];\n        Integer[] sortedAr=new Integer[ar.length];\n        for(int i=0;i<ar.length;i++){\n            ar[i]=sc.nextInt();\n            sortedAr[i]=ar[i];\n        }\n        Arrays.sort(sortedAr);\n        int misMatchCnt=0;\n        for(int i=0;i<ar.length;i++){\n            if(!ar[i].equals(sortedAr[i])) misMatchCnt++;\n        }\n        if(misMatchCnt==0||misMatchCnt==2){\n            System.out.println(\"YES\");\n        }else{\n            System.out.println(\"NO\");\n        }\n    }\n}"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.lang.*;\nimport java.io.*;\nimport java.math.BigDecimal;\n\npublic class R136C {\n    public static void main (String[] args) throws java.lang.Exception {\n        InputReader in = new InputReader(System.in);\n        PrintWriter w = new PrintWriter(System.out);\n        int n = in.nextInt(), dist = 0;\n        int[] a = in.nextIntArray(n);\n        int[] b = Arrays.copyOfRange(a, 0, n);\n        Arrays.sort(b);\n        for (int i = 0; i < n; i++) {\n            if (a[i] != b[i])\n                dist++;\n        }\n        //w.println(Arrays.toString(a));\n        //w.println(Arrays.toString(b));\n        if (dist == 0 || dist == 2)\n            w.println(\"YES\");\n        else\n            w.println(\"NO\");\n        w.close();\n    }\n\n    static class InputReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int read() {\n            if (numChars == -1)\n                throw new UnknownError();\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new UnknownError();\n                }\n                if (numChars <= 0)\n                    return -1;\n            }\n            return buf[curChar++];\n        }\n\n        public int peek() {\n            if (numChars == -1)\n                return -1;\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    return -1;\n                }\n                if (numChars <= 0)\n                    return -1;\n            }\n            return buf[curChar];\n        }\n\n        public void skip(int x) {\n            while (x-- > 0)\n                read();\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        public String nextString() {\n            return next();\n        }\n\n        public String next() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            StringBuffer res = new StringBuffer();\n            do {\n                res.appendCodePoint(c);\n                c = read();\n            } while (!isSpaceChar(c));\n\n            return res.toString();\n        }\n\n        public String nextLine() {\n            StringBuffer buf = new StringBuffer();\n            int c = read();\n            while (c != '\\n' && c != -1) {\n                if (c != '\\r')\n                    buf.appendCodePoint(c);\n                c = read();\n            }\n            return buf.toString();\n        }\n\n        public double nextDouble() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            double res = 0;\n            while (!isSpaceChar(c) && c != '.') {\n                if (c == 'e' || c == 'E')\n                    return res * Math.pow(10, nextInt());\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            if (c == '.') {\n                c = read();\n                double m = 1;\n                while (!isSpaceChar(c)) {\n                    if (c == 'e' || c == 'E')\n                        return res * Math.pow(10, nextInt());\n                    if (c < '0' || c > '9')\n                        throw new InputMismatchException();\n                    m /= 10;\n                    res += (c - '0') * m;\n                    c = read();\n                }\n            }\n            return res * sgn;\n        }\n        public int[] nextIntArray(int n) {\n            int[] a = new int[n];\n            for (int i = 0; i < n; i++)\n                a[i] = nextInt();\n            return a;\n        }\n        public long[] nextLongArray(int n) {\n            long[] a = new long[n];\n            for (int i = 0; i < n; i++)\n                a[i] = nextLong();\n            return a;\n        }\n        public boolean hasNext() {\n            int value;\n            while (isSpaceChar(value = peek()) && value != -1)\n                read();\n            return value != -1;\n        }\n\n        private boolean isSpaceChar(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n    }\n}"
        },
        {
            "language": 4,
            "solution": "import java.util.Arrays;\nimport java.util.Scanner;\n\n\npublic class CF221C {\n\n    public static void main(String[] args) throws Exception {\n        new CF221C().solve();\n    }\n\n    private void solve() throws Exception {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int[] a = new int[n];\n        boolean canBeSorted = true;\n        int candidateIndex = -1;\n        for (int i = 0; i < n; i++) {\n            a[i] = sc.nextInt();\n            if (canBeSorted && i > 0 && a[i - 1] > a[i]) {\n                canBeSorted = false;\n                candidateIndex = i - 1;\n                while (candidateIndex > 0 && a[candidateIndex - 1] == a[candidateIndex]) {\n                    candidateIndex--;\n                }\n//                System.out.println(i - 1);\n            }\n        }\n        if (!canBeSorted) {\n            int candidateRight = -1;\n            for (int i = n - 2; i >= candidateIndex; i--) {\n                if (a[i] > a[i + 1]) {\n                    candidateRight = i + 1;\n                    break;\n                }\n            }\n            while (candidateRight + 1 < n && a[candidateRight] == a[candidateRight + 1]) {\n                candidateRight++;\n            }\n            int temp = a[candidateIndex];\n            a[candidateIndex] = a[candidateRight];\n            a[candidateRight] = temp;\n//            System.out.println(Arrays.toString(a));\n\n            canBeSorted = true;\n            for (int i = 1; i < n; i++) {\n                if (a[i - 1] > a[i]) {\n                    canBeSorted = false;\n                    break;\n                }\n            }\n        }\n        System.out.println(canBeSorted ? \"YES\" : \"NO\");\n    }\n}\n"
        },
        {
            "language": 1,
            "solution": "import sys\n\ndef main():\n\tsys.stdin.readline()\n\toriginal = map(int, sys.stdin.readline()[:-1].split())\n\tordered = sorted(original)\n\tcount = 0\n\tfor i in xrange(len(original)):\n\t\tif ordered[i] != original[i]:\n\t\t\tcount += 1\n\t\t\tif count > 2:\n\t\t\t\treturn 'NO'\n\treturn 'YES'\n\nif __name__=='__main__':\n\tprint main()\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nenum { MAXN = 100000, MINK = 1, MAXK = 1000000000 };\nint a[MAXN + 2];\nvoid solveTheProblem(void) {\n  int n;\n  scanf(\"%d\", &n);\n  a[0] = MINK - 1;\n  a[n + 1] = MAXK + 1;\n  vector<int> bads;\n  for (int i = 1; i <= n; ++i) {\n    scanf(\"%d\", &a[i]);\n  }\n  for (int i = 1; i <= n; ++i) {\n    if (!(a[i - 1] <= a[i] && a[i] <= a[i + 1])) {\n      bads.push_back(i);\n    }\n  }\n  if (bads.size() > 6) {\n    cout << \"NO\\n\";\n  } else if (bads.size() == 0) {\n    cout << \"YES\\n\";\n  } else {\n    for (int k = 0; k < bads.size(); ++k) {\n      for (int i = 1; i <= n; ++i) {\n        swap(a[i], a[bads[k]]);\n        bool ok = 1;\n        for (int j = 0; j < bads.size(); ++j) {\n          if (!(a[bads[j] - 1] <= a[bads[j]] && a[bads[j]] <= a[bads[j] + 1])) {\n            ok = 0;\n            break;\n          }\n        }\n        ok &= (a[i - 1] <= a[i] && a[i] <= a[i + 1]);\n        if (ok) {\n          cout << \"YES\\n\";\n          return;\n        }\n        swap(a[i], a[bads[k]]);\n      }\n    }\n    cout << \"NO\\n\";\n  }\n}\nint main(void) {\n  solveTheProblem();\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.Arrays;\nimport java.util.PriorityQueue;\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        \n        PriorityQueue <Integer> a = new PriorityQueue <Integer>();\n        int[] b = new int[n];\n        \n        for (int i = 0; i < n; ++i)\n        {\n            b[i] = sc.nextInt();\n            a.add(b[i]);\n        }\n        \n               \n        int ans = 0;\n        for (int i = 0; i < n; ++i)\n            if (a.poll()!=b[i])\n                ans++;\n        \n        if (ans==0)\n            System.out.println(\"YES\");\n        else\n            System.out.println(ans==2 ? \"YES\":\"NO\");\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.OutputStreamWriter;\nimport java.io.PrintWriter;\nimport java.io.StreamTokenizer;\nimport java.util.Arrays;\n\npublic class A {\n\n    static StreamTokenizer st;\n    static class Sort implements Comparable<Sort> {\n        int val;\n        public int compareTo(Sort o) {\n            return this.val-o.val;\n        }\n    }\n    public static void main(String[] args) throws IOException{\n        st = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));\n        PrintWriter pw = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));\n        int n = nextInt();\n        Sort[]a = new Sort[n+1];\n        int[]b = new int[n+1];\n        for (int i = 1; i <= n; i++) {\n            a[i] = new Sort();\n            a[i].val = nextInt();\n            b[i] = a[i].val;\n        }\n        Arrays.sort(a, 1, n+1);\n        int k1 = 0, k2 = 0;\n        for (int i = 1; i <= n; i++) {\n            if (b[i] != a[i].val) {\n                if (k1==0)\n                    k1 = i;\n                else if (k2==0)\n                    k2 = i;\n                else {\n                    System.out.println(\"NO\");\n                    return;\n                }\n            }\n        }\n        if (k1==0)\n            System.out.println(\"YES\");\n        else if (k2==0)\n            System.out.println(\"NO\");\n        else {\n            if (b[k1]==a[k2].val && b[k2]==a[k1].val)\n                System.out.println(\"YES\");\n            else\n                System.out.println(\"NO\");\n        }\n        pw.close();\n    }\n\n    private static int nextInt() throws IOException{\n        st.nextToken();\n        return (int) st.nval;\n    }\n\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.*;\n\npublic class CF{public static void main(String[]args)throws IOException{S s=new S();s.s();s.output();}}class S{\n    void s() throws IOException {\n        int n = NI();\n        long[] a = new long[n];\n        int[] b = new int[n];\n        for (int i = 0; i < n; i++)\n            a[i] = b[i] = NI();\n        ArrayUtils.mergeSort(a);\n        int cnt = 0;\n        for (int i = 0; i < n; i++)\n            if (a[i] != b[i])\n                cnt++;\n        sout(cnt <= 2 ? \"YES\" : \"NO\");\n    }\n\n    BufferedReader stdin=new BufferedReader(new InputStreamReader(System.in));StringTokenizer st=new StringTokenizer(\"\");long LINF=Long.MAX_VALUE;\n    StringBuilder output=new StringBuilder();final int INF=Integer.MAX_VALUE;void sout(Object x){output.append(x.toString()).append('\\n');}\n    void inLong(long[]a,int n){for(int i=0;i<n;i++)a[i]=NL();}int min(int i1,int i2){return i1<i2?i1:i2;}double ND(){return Double.parseDouble(NS());}\n    long min(long i1,long i2){return i1<i2?i1:i2;}int max(int i1,int i2){return i1>i2?i1:i2;}long max(long i1,long i2){return i1>i2?i1:i2;}\n    String NS(){while(!st.hasMoreTokens())try{st=new StringTokenizer(stdin.readLine());}catch(IOException ignored){}return st.nextToken();}\n    int NI(){return Integer.parseInt(NS());}long NL(){return Long.parseLong(NS());}String NLn()throws IOException{return stdin.readLine();}\n    int abs(int x){return x<0?-x:x;}long abs(long x){return x<0?-x:x;}void sout(){output.append('\\n');}void out(Object x){output.append(x.toString());}\n    int mod(int x,int mod){return(x+mod)%mod;}void output(){System.out.print(output);}void inInt(int[]a,int n){for(int i=0;i<n;i++)a[i]=NI();}\n}\n\nclass ArrayUtils {\n    public static void mergeSort(long[] a) {\n        long[] src = a.clone();\n        mergeSortInt(src, a, 0, a.length);\n    }\n\n    public static void mergeSortInt(long[] src, long[] dest, int low, int high) {\n        int length = high - low;\n        if (length == 1) return;\n        if (length == 2) {\n            if (dest[low] > dest[high - 1]) {\n                long t = dest[low];\n                dest[low] = dest[high - 1];\n                dest[high - 1] = t;\n            }\n            return;\n        }\n        int mid = (low + high) >>> 1;\n        mergeSortInt(dest, src, low, mid);\n        mergeSortInt(dest, src, mid, high);\n        for (int i = low, p = low, q = mid; i < high; i++)\n            if (q >= high || p < mid && src[p] <= src[q]) dest[i] = src[p++];\n            else dest[i] = src[q++];\n    }\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.Arrays;\nimport java.util.Locale;\nimport java.util.StringTokenizer;\n\npublic class Test2 implements Runnable {\n\n\n\n    void solve() throws IOException {\n        int n = readInt();\n        int arr[] = new int[n];\n        int arr1[] = new int[n];;\n        for(int i = 0 ; i < n ;i ++) {\n            arr[i] = readInt();\n            arr1[i] = arr[i];\n        }\n\n        Arrays.sort(arr1);\n\n        int diff = 0;\n        for(int i = 0; i < n ;i ++) {\n            if(arr[i] != arr1[i])\n                diff++;\n        }\n        if(diff == 0 || diff == 2)\n            out.println(\"YES\");\n        else\n            out.println(\"NO\");\n\n    }\n\n    boolean valid(int[] arr) {\n        int now = Integer.MIN_VALUE;\n        for(int i = 0 ; i < arr.length ; i ++) {\n            if(arr[i] < now)\n                return false;\n            now = arr[i];\n        }\n        return true;\n    }\n\n\n\n    BufferedReader in;\n    PrintWriter out;\n    StringTokenizer tok = new StringTokenizer(\"\");\n\n    public static void main(String[] args) {\n        new Test2().run();\n    }\n\n    public void run() {\n        try {\n            long t1 = System.currentTimeMillis();\n            if (System.getProperty(\"ONLINE_JUDGE\") != null) {\n                in = new BufferedReader(new InputStreamReader(System.in));\n                out = new PrintWriter(System.out);\n            } else {\n                in = new BufferedReader(new FileReader(\"input.txt\"));\n                out = new PrintWriter(\"output.txt\");\n            }\n            Locale.setDefault(Locale.US);\n            solve();\n            in.close();\n            out.close();\n            long t2 = System.currentTimeMillis();\n            System.err.println(\"Time = \" + (t2 - t1));\n        } catch (Throwable t) {\n            t.printStackTrace(System.err);\n            System.exit(-1);\n        }\n    }\n\n    String readString() throws IOException {\n        while (!tok.hasMoreTokens()) {\n            tok = new StringTokenizer(in.readLine());\n        }\n        return tok.nextToken();\n    }\n\n    int readInt() throws IOException {\n        return Integer.parseInt(readString());\n    }\n\n    long readLong() throws IOException {\n        return Long.parseLong(readString());\n    }\n\n    double readDouble() throws IOException {\n        return Double.parseDouble(readString());\n    }\n\n\n}"
        },
        {
            "language": 1,
            "solution": "import sys\ndef main():\n\tn = input()\n\tseq = raw_input()\n\tlis = seq.split()\n\tfor i in range(len(lis)):\n\t\tlis[i] = int(lis[i])\n\tb = lis\t\n\tlis2=[]\n\ta=[]\n\tc = sorted(b)\n\tif(lis == sorted(b)):\n\t\tprint \"YES\"\n\telse:\n\t\tcount=0\n\t\tflag=1\n\t\tfor i in range(len(lis)):\n\t\t\tif(lis[i]!=c[i]):\n\t\t\t\tcount+=1\n\t\tif(count>2):\n\t\t\tprint \"NO\"\n\t\telse:\n\t\t\tprint \"YES\"\nif __name__ ==\"__main__\":\n\tmain()\n\t\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\nimport java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n * @author George Marcus\n */\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tScanner in = new Scanner(inputStream);\n\t\tPrintWriter out = new PrintWriter(outputStream);\n\t\tTaskC solver = new TaskC();\n\t\tsolver.solve(1, in, out);\n\t\tout.close();\n\t}\n}\n\nclass TaskC {\n    private static final int INF = 2000000000;\n\n    public void solve(int testNumber, Scanner in, PrintWriter out) {\n        int n = in.nextInt();\n        ArrayList<Integer> v = new ArrayList<Integer>();\n        v.add(-INF);\n        for(int i = 0; i < n; i++)\n            v.add(in.nextInt());\n        v.add(INF);\n\n        if(sorted(v)) {\n            out.print(\"YES\");\n            return;\n        }\n\n        int idx;\n        int aux;\n\n        for(idx = 1; idx <= n; idx++)\n            if(v.get(idx) > v.get(idx + 1))\n                break;\n\n        int k = idx - 1;\n        while(k > 1 && v.get(k) == v.get(idx))\n            k--;\n        if(v.get(k) != v.get(idx))\n            k++;\n\n        aux = v.get(k);\n        v.set(k, v.get(idx + 1));\n        v.set(idx + 1, aux);\n\n        if(sorted(v)) {\n            out.print(\"YES\");\n            return;\n        }\n\n        aux = v.get(k);\n        v.set(k, v.get(idx + 1));\n        v.set(idx + 1, aux);\n\n        int idx2, last = -1;\n        for(idx2 = idx + 2; idx2 <= n; idx2++)\n            if(v.get(idx - 1) <= v.get(idx2) && v.get(idx2) <= v.get(idx + 1))\n                last = idx2;\n\n        if(last == -1) {\n            out.print(\"NO\");\n            return;\n        }\n\n        aux = v.get(idx);\n        v.set(idx, v.get(last));\n        v.set(last, aux);\n\n        if(sorted(v)) {\n            out.print(\"YES\");\n            return;\n        }\n\n        out.print(\"NO\");\n\t}\n\n    private boolean sorted(ArrayList<Integer> v) {\n        for(int i = 0; i < v.size() - 1; i++)\n            if(v.get(i) > v.get(i + 1))\n                return false;\n        return true;\n    }\n}\n\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.lang.String;\nimport java.lang.Math;\nimport java.io.*;\nimport java.util.Arrays;\nimport java.util.Scanner;\nimport javax.swing.JOptionPane;\n\npublic class hello {\n\t\n\tpublic static void main(String[] args)throws IOException {\n\t\tint n = nextInt();\n\t\tint ara[ ] = new int[n];\n\t\tint bara[ ] = new int[n];\n\t\t\n\t\tfor(int i = 0;i<n;i++){\n\t\t\tara[i] = nextInt();\n\t\t\tbara[i] = ara[i];\n\t\t}\n\t\tArrays.sort(bara);\n\t\tint sw = 0;\n\t\tfor(int i = 0;i<n;i++){\n\t\t\tif(ara[i]!=bara[i])sw++;\n\t\t}\n\t\tif(sw<=2)System.out.println(\"YES\");\n\t\telse System.out.println(\"NO\");\n\t\t\n\t}\n\t   static BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\n       static StringTokenizer tokenizer = new StringTokenizer(\"\");\n       static String next() throws IOException {while (!tokenizer.hasMoreTokens()) {String n = reader.readLine();if (n == null) {return null;}tokenizer = new StringTokenizer(n);}return tokenizer.nextToken();}\n       static String nextLine() throws IOException {return reader.readLine();}\n       static Integer nextInt() throws IOException {String next = next();if (next == null) {return null;}return Integer.parseInt(next);}\n       static long nextLong() throws IOException {return Long.parseLong(next());}\n       static Double nextDouble() throws IOException {return Double.parseDouble(next());}\n\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, cnt = 0;\n  cin >> n;\n  int arr1[n], arr2[n];\n  for (int i = 0; i < n; i++) cin >> arr1[i], arr2[i] = arr1[i];\n  sort(arr1, arr1 + n);\n  for (int i = 0; i < n; i++)\n    if (arr1[i] != arr2[i]) cnt++;\n  cnt > 2 ? cout << \"NO\" : cout << \"YES\";\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class Main{\n\n  BufferedReader in;\n  StringTokenizer str = null;\n\n  private String next() throws Exception{\n    if(str == null || !str.hasMoreElements())\n      str = new StringTokenizer(in.readLine());\n    return str.nextToken();\n  }\n\n  private int nextInt() throws Exception{\n    return Integer.parseInt(next());\n  }\n\n  public void run() throws Exception{\n    in = new BufferedReader(new InputStreamReader(System.in)); \n    int n = nextInt();\n    Integer a[] = new Integer[n];\n    Integer b[] = new Integer[n];\n    for(int i=0;i<n;i++) {\n      a[i] = new Integer(nextInt());\n      b[i] = new Integer(a[i]);\n    }\n    \n    Arrays.sort(a);\n    int cnt = 0;\n    for(int i=0;i<n;i++)\n      if (!a[i].equals(b[i])){\n        cnt++;\n        if (cnt > 2){\n          System.out.println(\"NO\");\n          return;\n        }\n      }\n    System.out.println(\"YES\");\n  }\n\n  public static void main(String args[]) throws Exception{\n    new Main().run();  \n  }\n}"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\n\t\t// long start = System.currentTimeMillis();\n\t\t// long end = System.currentTimeMillis();\n\t\t// System.out.println(\" Execution time was \"+(end-start)+\" ms.\");\n\n\t\tScanner kb = new Scanner(System.in);\n\t\tint n = kb.nextInt();\n\t\tint a[] = new int[n];\n\t\tint b[] = new int[n];\n\t\tfor(int i = 0;i<n;i++){\n\t\t\ta[i]=kb.nextInt();\n\t\t\tb[i]=a[i];\n\t\t}\n\t\tArrays.sort(a);\n\t\tint count = 0;\n\t\tfor(int i=0;i<n;i++){\n\t\t\tif(a[i]!=b[i])count++;\n\t\t}\n\t\tif(count<=2)\n\t\t\tSystem.out.println(\"YES\");\n\t\telse\n\t\t\tSystem.out.println(\"NO\");\n\n\t}\n\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[100005] = {0};\nint b[100005] = {0};\nint main() {\n  long long n, maxx = 0, minn = 0, c = 0, l, x = 0, y = 0;\n  cin >> n;\n  for (int i = 0; i < (n); i++) {\n    cin >> a[i];\n    b[i] = a[i];\n  }\n  sort(b, b + n);\n  for (int i = 0; i < (n); i++) {\n    if (a[i] != b[i]) maxx++;\n    if (maxx > 2) {\n      cout << \"NO\" << endl;\n      return 0;\n    }\n  }\n  cout << \"YES\" << endl;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[100001], b[100001];\nint t;\nint main() {\n  int i, j, n, m;\n  while (scanf(\"%d\", &n) != EOF) {\n    int flag = 0, cnt = 0;\n    for (i = 1; i <= n; i++) {\n      scanf(\"%d\", &a[i]);\n      b[i] = a[i];\n    }\n    sort(a + 1, a + 1 + n);\n    for (i = 1; i <= n; i++) {\n      if (a[i] != b[i]) {\n        cnt++;\n      }\n      if (cnt >= 3) {\n        flag = 1;\n        break;\n      }\n    }\n    if (flag == 1)\n      printf(\"NO\\n\");\n    else\n      printf(\"YES\\n\");\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint dr[] = {0, 0, 1, -1, -1, -1, 1, 1};\nint dc[] = {1, -1, 0, 0, -1, 1, -1, 1};\nint const MAX = 1e5 + 7;\nint const MOD = 1e9 + 7;\nint a[MAX], b[MAX];\nint main() {\n  int n;\n  cin >> n;\n  int c = 0;\n  for (int i = 0; i < n; ++i) {\n    cin >> a[i];\n    b[i] = a[i];\n  }\n  sort(b, b + n);\n  for (int i = 0; i < n; ++i)\n    if (a[i] != b[i]) c++;\n  if (c <= 2)\n    cout << \"YES\\n\";\n  else\n    cout << \"NO\\n\";\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong a[100005], b[100005];\nint main() {\n  long n, i;\n  cin >> n;\n  for (i = 0; i < n; i++) {\n    scanf(\"%ld\", &a[i]);\n    b[i] = a[i];\n  }\n  sort(a, a + n);\n  long ans = 0;\n  for (i = 0; i < n; i++)\n    if (a[i] != b[i]) ++ans;\n  if (ans <= 2)\n    cout << \"YES\";\n  else\n    cout << \"NO\";\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.io.BufferedReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.Random;\nimport java.util.StringTokenizer;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n * @author Lokesh Khandelwal aka (codeKNIGHT | phantom11)\n */\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tInputReader in = new InputReader(inputStream);\n\t\tPrintWriter out = new PrintWriter(outputStream);\n\t\tTaskC solver = new TaskC();\n\t\tsolver.solve(1, in, out);\n\t\tout.close();\n\t}\n}\n\nclass TaskC {\n\tpublic void solve(int testNumber, InputReader in, PrintWriter out) {\n        int n=in.nextInt();\n        int a[]=new int[n],b[]=new int[n];\n        int i;\n        for(i=0;i<n;i++)\n        {\n            a[i]=in.nextInt();\n            b[i]=a[i];\n        }\n        int c=0;\n        ArrayUtils.mergeSort(b,0,n-1);\n        for(i=0;i<n;i++)\n            if(b[i]!=a[i])\n                c++;\n        if(c<=2)\n            out.println(\"YES\");\n        else out.println(\"NO\");\n\t}\n}\n\nclass InputReader\n{\n    BufferedReader in;\n    StringTokenizer tokenizer=null;\n\n    public InputReader(InputStream inputStream)\n    {\n        in=new BufferedReader(new InputStreamReader(inputStream));\n    }\n    public String next()\n    {\n        try{\n            while (tokenizer==null||!tokenizer.hasMoreTokens())\n            {\n                tokenizer=new StringTokenizer(in.readLine());\n            }\n            return tokenizer.nextToken();\n        }\n        catch (IOException e)\n        {\n            return null;\n        }\n    }\n    public int nextInt()\n    {\n        return Integer.parseInt(next());\n    }\n\n}\n\nclass ArrayUtils {\n\n\tstatic long counter=0;\n    public static int[] mergeSort(int a[],int p,int q)\n    {\n        if(p<q)\n        {\n            int mid=(p+q)/2;\n            mergeSort(a,p,mid);\n            mergeSort(a,mid+1,q);\n            a=merge(a,p,q,mid);\n        }\n        return a;\n    }\n    private static int[] merge(int a[],int p,int q,int mid)\n    {\n        int i,j;\n        int left[]=new int[mid-p+2];\n        int right[]=new int[q-mid+1];\n        for(i=0;i<left.length-1;i++)\n            left[i]=a[p+i];\n        for(j=0;j<right.length-1;j++)\n            right[j]=a[mid+j+1];\n        left[i]=right[j]=Integer.MAX_VALUE;\n        i=j=0;\n        for(int k=p;k<=q;k++)\n        {\n            if(left[i]<=right[j])\n            {\n                a[k]=left[i];\n                i++;\n            }\n            else\n            {\n                a[k]=right[j];\n                j++;\n                counter+=left.length-1-i;\n            }\n        }\n        return a;\n    }\n}\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[1000001], v[1000001];\nint n;\nint ans = 0, d;\nint main() {\n  int i;\n  scanf(\"%d\", &n);\n  for (i = 1; i <= n; i++) {\n    scanf(\"%d\", &a[i]);\n    v[i] = a[i];\n  }\n  sort(a + 1, a + 1 + n);\n  for (i = 1; i <= n; i++)\n    if (v[i] != a[i]) ans++;\n  if (ans <= 2)\n    printf(\"YES\\n\");\n  else\n    printf(\"NO\\n\");\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "/**\n *\n * @author tendua\n * Aug 31, 2012 11:32:29 PM\n */\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.StringTokenizer;\n\npublic class cf136c implements Runnable{\n\n    private void solve() throws IOException {   \n\n        int n = ni();\n        ArrayList<Integer> arr = new ArrayList<Integer>();\n        ArrayList<Integer> dummy = new ArrayList<Integer>();\n        \n        for (int I = 0; I <n; I++) {\n            int val= ni();\n            arr.add(val);\n            dummy.add(val);\n        }\n//        Arrays.sort(dummy,0,n); // Tuned quick sort\n        Collections.sort(dummy);  // Modified merge sort\n\n        int counter = 0;\n        for (int I = 0; I < n; I++) {\n            if (arr.get(I).equals(dummy.get(I)) == false){\n                counter++;\n            }\n        }\n     \n        if (counter <= 2)\n            System.out.println(\"YES\");\n        else System.out.println(\"NO\");\n        \n    }\n\n    public static void main(String[] args) {\n        new cf136c().run();\n    }\n\n    BufferedReader br;\n    StringTokenizer st;\n    PrintWriter pw;\n\n    public void run() {\n        try {\n            br = new BufferedReader(new InputStreamReader(System.in));\n            st = null;\n            pw = new PrintWriter(System.out);\n            solve();\n            br.close();\n            pw.close();\n            }\n            catch (Exception e) {\n            e.printStackTrace();\n            System.exit(1);\n        }\n    }\n\n    int ni() throws IOException {\n        return Integer.parseInt(nextToken());\n    }\n\n    long nl() throws IOException {\n        return Long.parseLong(nextToken());\n    }\n\n    double nd() throws IOException {\n        return Double.parseDouble(nextToken());\n    }\n\n    String nextToken() throws IOException {\n        while (st == null || !st.hasMoreTokens()) {\n            st = new StringTokenizer(br.readLine());\n        }\n        return st.nextToken();\n    }\n}"
        },
        {
            "language": 4,
            "solution": "import java.awt.Point;\nimport java.io.*;\nimport java.util.*;\nimport java.math.BigInteger;\n\npublic class Elephants {\n    static class Solver {\n        public void solve(MyReader in, PrintWriter out) {\n            int n = in.nextInt();\n            Integer[] arr = new Integer[n];\n            Integer[] org = new Integer[n];\n\n            for (int i = 0; i < n; i++) {\n                int tmp = in.nextInt();\n                arr[i] = tmp;\n                org[i] = tmp;\n            }\n\n            Arrays.sort(arr);\n\n            int c= 0;\n            for (int i = 0; i < n && c<=2; i++) {\n                if(!arr[i].equals(org[i]))c++;\n            }\n\n            if(c <= 2){\n                out.println(\"YES\");\n            }\n            else{\n                out.println(\"NO\");\n            }\n\n        }\n\n\n    }\n\n    public static void main(String[] args) {\n        MyReader mr = new MyReader();\n        PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));\n        new Solver().solve(mr, out);\n        out.close();\n    }\n\n    //    static int[][] dir = {{0,1}, {1,0},{-1,0}, {0,-1}};\n//    static int[][] dir = {{0,1}, {1,0},{-1,0}, {0,-1}, {-1,-1},{-1,1}, {1,1}, {1,-1}};\n    static class MyReader {\n        BufferedReader br;\n        StringTokenizer st;\n\n        MyReader() {\n            br = new BufferedReader(new InputStreamReader(System.in));\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (Exception e) {\n                    e.printStackTrace();\n                }\n            }\n\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine() {\n            String res = \"\";\n            try {\n                res = br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n\n            return res;\n        }\n\n        int[] nextIntArray(int n) {\n            int[] arr = new int[n];\n            for (int i = 0; i < n; i++) {\n                arr[i] = nextInt();\n            }\n\n            return arr;\n        }\n\n        Integer[] nextIntegerArray(int n) {\n            Integer[] arr = new Integer[n];\n            for (int i = 0; i < n; i++) {\n                arr[i] = nextInt();\n            }\n\n            return arr;\n        }\n\n        Long[] nextLongArray(int n) {\n            Long[] arr = new Long[n];\n            for (int i = 0; i < n; i++) {\n                arr[i] = nextLong();\n            }\n\n            return arr;\n        }\n\n        String[] nextStringArray(int n) {\n            String[] arr = new String[n];\n            for (int i = 0; i < n; i++) {\n                arr[i] = next();\n            }\n            return arr;\n        }\n    }\n\n    static void swap(int[] arr, int i, int j) {\n        int tmp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = tmp;\n    }\n\n}\n\n\n"
        },
        {
            "language": 4,
            "solution": "/*\n Author: sunits789\n Task: C136\n Lang: JAVA\n */\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.Arrays;\nimport java.io.BufferedReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\nimport java.math.BigInteger;\nimport java.io.InputStream;\nimport java.io.BufferedWriter;\nimport java.io.FileWriter;\nimport java.io.FileReader;\n\n\npublic class C136\n{\n\tpublic static void main(String[] Args)\n\t{\n\t\tlong t1=System.currentTimeMillis();\n\t\t// String inputStream = \"file.in\";\n\t\t// String outputStream = \"file.out\";\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tInputReader in = new InputReader(inputStream);\n\t\tPrintWriter out = new PrintWriter(outputStream);\n\t\t// PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter(outputStream)));\n\t\tCodeC136 solver = new CodeC136();\n\t\tsolver.solve(1, in, out);\n\t\tout.close();\n\t\tlong t2=System.currentTimeMillis();\n\t\tSystem.out.println(t2-t1+\"ms\");\n\t}\n}\n\nclass CodeC136\n{\n\tpublic void solve(int testNumber, InputReader in, PrintWriter out)\n\t{\n\t\tint n=in.nextInt();\n\t\tint arr[]=new int[n];\n\t\tint arrc[]=new int[n];\n\t\tin.getArray(arr);\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t\tarrc[i]=arr[i];\n\t\t}\n\t\tLibrary.sort(arrc);\n\t\tint c=0;\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t\tif(arr[i]!=arrc[i])\n\t\t\t{\n\t\t\t\tc++;\n\t\t\t}\n\t\t}\n\t\tif(c>2)\n\t\t{\n\t\t\tout.println(\"NO\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tout.println(\"YES\");\n\t\t}\n\t}\n\t\n\tpublic void printArray(int arr[],PrintWriter out)\n\t{\n\t\tfor(int i=0;i<arr.length;i++)\n\t\t{\n\t\t\tout.println(arr[i]);\n\t\t}\n\t}\n\tpublic void printArray(long arr[],PrintWriter out)\n\t{\n\t\tfor(int i=0;i<arr.length;i++)\n\t\t{\n\t\t\tout.println(arr[i]);\n\t\t}\n\t}\n\tpublic void printArray(double arr[],PrintWriter out)\n\t{\n\t\tfor(int i=0;i<arr.length;i++)\n\t\t{\n\t\t\tout.println(arr[i]);\n\t\t}\n\t}\n\tpublic void printArray(String arr[],PrintWriter out)\n\t{\n\t\tfor(int i=0;i<arr.length;i++)\n\t\t{\n\t\t\tout.println(arr[i]);\n\t\t}\n\t}\n}\n\n\n\nclass Library{\n    public static void sort(int n[]){\n        int len=n.length;\n        int l1=len/2;\n        int l2=len-l1;\n        int n1[]=new int[l1];\n        int n2[]=new int[l2];\n        for(int i=0;i<l1;i++){\n            n1[i]=n[i];\n        }\n        for(int i=0;i<l2;i++){\n            n2[i]=n[i+l1];\n        }\n        if(l1!=0){\n            sort(n1);\n            sort(n2);\n        }\n        int ind1=0;\n        int ind2=0;\n        int ind=0;\n        for(int i=0;i<len&&ind1<l1&&ind2<l2;i++){\n            if(n1[ind1]<n2[ind2]){\n                n[i]=n1[ind1];\n                ind1++;\n            }\n            else{\n                n[i]=n2[ind2];\n                ind2++;\n            }\n            ind++;\n        }\n        if(ind1<l1){\n            for(int i=ind1;i<l1;i++){\n                n[ind]=n1[i];\n                ind++;\n            }\n        }\n        if(ind2<l2){\n            for(int i=ind2;i<l2;i++){\n                n[ind]=n2[i];\n                ind++;\n            }\n        }\n    }\n    \n    public static long pow(long b,long p,long mod){\n        if(p==0){\n            return 1;\n        }\n        long ret=1;\n        long arr[]=new long[200];\n        arr[0]=b;\n        for(int i=1;i<arr.length;i++){\n            arr[i]=(arr[i-1]*arr[i-1])%mod;\n        }\n        String s=convert(p,2);\n        for(int i=0;i<s.length();i++){\n            if(s.charAt(i)=='1'){\n                ret=(ret*arr[s.length()-i-1])%mod;\n            }\n        }\n        return ret;\n    }\n\n    public static String convert(long n,int b){\n        //System.out.println(\"Read: \"+n);\n        String num=\"\";\n        long t=0;\n        while(n!=0){\n            long x=(n%(long)b);\n            int xx=(int)(x);\n            num=map(xx)+num;\n            n/=b;\n            t++;\n        }\n        return num;\n    }\n\n    private static char map(int x){\n        if(x<10){\n            return (char)(x+48);\n        }\n        else{\n            return (char)(x+55);\n        }\n    }\n}\n\n\n\n\nclass InputReader\n{\n\tprivate BufferedReader reader;\n\tprivate StringTokenizer tokenizer;\n\n\tpublic InputReader(InputStream stream)\n\t{\n\t\treader = new BufferedReader(new InputStreamReader(stream));\n\t\ttokenizer = null;\n\t}\n\n\tpublic InputReader(String iFile)throws IOException\n\t{\n\t\treader = new BufferedReader(new FileReader(iFile));\n\t\ttokenizer = null;\n\t}\n\n\tpublic String next()\n\t{\n\t\twhile (tokenizer == null || !tokenizer.hasMoreTokens())\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\ttokenizer = new StringTokenizer(reader.readLine());\n\t\t\t}\n\t\t\tcatch (IOException e)\n\t\t\t{\n\t\t\t\tthrow new RuntimeException(e);\n\t\t\t}\n\t\t}\n\t\treturn tokenizer.nextToken();\n\t}\n\n\tpublic int nextInt()\n\t{\n\t\treturn Integer.parseInt(next());\n\t}\n\n\tpublic long nextLong()\n\t{\n\t\treturn Long.parseLong(next());\n\t}\n\n\tpublic double nextDouble()\n\t{\n\t\treturn Double.parseDouble(next());\n\t}\n\t\n\tpublic void getArray(int arr[])\n\t{\n\t\tfor(int i=0;i<arr.length;i++)\n\t\t{\n\t\t\tarr[i]=nextInt();\n\t\t}\n\t}\n\t\n\tpublic void getArray(double arr[])\n\t{\n\t\tfor(int i=0;i<arr.length;i++)\n\t\t{\n\t\t\tarr[i]=nextDouble();\n\t\t}\n\t}\n\t\n\tpublic void getArray(String arr[])\n\t{\n\t\tfor(int i=0;i<arr.length;i++)\n\t\t{\n\t\t\tarr[i]=next();\n\t\t}\n\t}\n\t\n\tpublic void getArray2D(String arr[][])\n\t{\n\t\tfor(int i=0;i<arr.length;i++)\n\t\t{\n\t\t\tfor(int j=0;j<arr[i].length;j++)\n\t\t\t{\n\t\t\t\tarr[i][j]=next();\n\t\t\t}\n\t\t}\n\t}\n\t\n\tpublic void getArray2D(int arr[][])\n\t{\n\t\tfor(int i=0;i<arr.length;i++)\n\t\t{\n\t\t\tfor(int j=0;j<arr[i].length;j++)\n\t\t\t{\n\t\t\t\tarr[i][j]=nextInt();\n\t\t\t}\n\t\t}\n\t}\n\t\n\tpublic void getArray2D(double arr[][])\n\t{\n\t\tfor(int i=0;i<arr.length;i++)\n\t\t{\n\t\t\tfor(int j=0;j<arr[i].length;j++)\n\t\t\t{\n\t\t\t\tarr[i][j]=nextDouble();\n\t\t\t}\n\t\t}\n\t}\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.Collection;\nimport java.util.StringTokenizer;\nimport java.util.TreeMap;\nimport java.util.stream.Stream;\n\npublic class TestClass implements Runnable {\n\t\n\tstatic final double time = 1e9;\n\tstatic final int MOD = (int) 1e9 + 7;\n\tstatic final long mh = Long.MAX_VALUE;\n\tstatic final Reader in = new Reader();\n\tstatic final PrintWriter out = new PrintWriter(System.out);\n\tStringBuilder answer = new StringBuilder();\n\n\tpublic static void main(String[] args) {\n\t\tnew Thread(null, new TestClass(), \"persefone\", 1 << 28).start();\n\t}\n\n\t@Override\n\tpublic void run() {\n//\t\tlong start = System.nanoTime();\n\t\tsolve();\n\t\tprintf();\n//\t\tlong elapsed = System.nanoTime() - start;\n//\t\tout.println(\"stamp : \" + elapsed / time);\n//\t\tout.println(\"stamp : \" + TimeUnit.SECONDS.convert(elapsed, TimeUnit.NANOSECONDS));\n\t\tclose();\n\t}\n\n\t\n\tvoid solve() {\n\t\tint n = in.nextInt();\n\t\tint[] a = in.nextIntArray(n);\n\t\tint[] b = a.clone();\n\t\tArrays.sort(b);\n\t\tint c = 0;\n\t\tfor (int i = 0; i < n; i++) \n\t\t\tif (a[i] != b[i])\n\t\t\t\tc++;\n\t\tprintf(c <= 2 ? \"YES\" : \"NO\");\n\t\t\t\n\t}\n\t\t\n\tpublic interface Hash {\n\t\tpublic void computeHashArray();\n\t\tpublic void computeModArray();\n\t\t\n\t}\n\t\n\tclass StringHash implements Hash {\n\t\t// length of string s\n\t\tprivate final long MH = Long.MAX_VALUE;\n\t\tprivate int n;\n\t\tprivate char[] ch;\n\t\tprivate long[] hash, mod;\n\t\tStringHash(char[] ch) {\n\t\t\tthis.ch = ch;\n\t\t\tn = ch.length;\n\t\t\thash = new long[n + 1];\n\t\t\tmod = new long[n + 1];\n\t\t\tcomputeHashArray();\n\t\t\tcomputeModArray();\n\t\t}\n\t\t\n\t\tStringHash(String s) {\n\t\t\tthis(s.toCharArray());\n\t\t}\n\t\t\n\t\tStringHash(CharSequence s) {\n\t\t\tthis(s.toString());\n\t\t}\n\t\t\n\t\t@Override\n\t\tpublic void computeModArray() {\n\t\t\tmod[0] = 1;\n\t\t\tfor (int i = 1; i <= n; i++) mod[i] = (mod[i - 1] * 53) % MH;\n\t\t}\n\t\t\n\t\t@Override\n\t\tpublic void computeHashArray() {\n\t\t\tfor (int i = 0; i < n; i++) hash[i + 1] = (hash[i] * 53 + ch[i] - 'a') % MH;\n\t\t}\n\t\t\n\t\tpublic long getHash(int i, int j) {\n\t\t\treturn (hash[j] - hash[i] * mod[j - i] + MH * MH) % MH;\n\t\t}\n\t\t\n\t\tpublic long getHash(String s) {\n\t\t\tlong h = 0;\n\t\t\tfor (int i = 0; i < s.length(); i++) h = (h * 53 + s.charAt(i) - 'a') % MH;\n\t\t\treturn h;\n\t\t}\n\t\t\n\t\tpublic long[] getHashArray() { return hash; }\n\t\tpublic long[] getModArray() { return mod; }\n\t}\n\t\n\tpublic interface Manacher {\n\t\tpublic void oddPalindrome();\n\t\tpublic void evenPalindrome();\n\t}\n\t\n\tclass Palindrome implements Manacher {\n\t\tprivate int n;\n\t\tprivate char[] ch;\n\t\tprivate int[] oddPal, evenPal;\n\t\tpublic Palindrome() {}\n\t\tpublic Palindrome(String s) {\n\t\t\tthis(s.toCharArray());\n\t\t}\n\t\tpublic Palindrome(char[] ch) {\n\t\t\tthis.ch = ch;\n\t\t\tn = ch.length;\n\t\t\toddPal = new int[ch.length];\n\t\t\tevenPal = new int[ch.length];\n\t\t\toddPalindrome();\n\t\t\tevenPalindrome();\n\t\t}\n\t\t\n\t\t@Override\n\t\tpublic void oddPalindrome() {\n\t\t\tfor (int i = 0, l = 0, r = -1; i < n; i++) {\n\t\t\t\tint k = i > r ? 1 : Math.min(oddPal[r + l - i], r - i);\n\t\t\t\twhile (0 <= i - k && i + k < n && ch[i - k] == ch[i + k]) k++;\n\t\t\t\toddPal[i] = k--;\n\t\t\t\tif (i + k > r) { \n\t\t\t\t\tl = i - k;\n\t\t\t\t\tr = i + k;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t@Override\n\t\tpublic void evenPalindrome() {\n\t\t\tfor (int i = 0, l = 0, r = -1; i < n; i++) {\n\t\t\t\tint k = i > r ? 0 : Math.min(evenPal[r + l - i + 1], r - i + 1);\n\t\t\t\twhile (0 <= i - k - 1 && i + k < n && ch[i - k - 1] == ch[i + k]) k++;\n\t\t\t\tevenPal[i] = k--;\n\t\t\t\tif (i + k > r) {\n\t\t\t\t\tl = i - k - 1;\n\t\t\t\t\tr = i + k;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\tvoid printf() {\n\t\tout.print(answer);\n\t}\n\t\n\tvoid close() {\n\t\tout.close();\n\t}\n\n\tvoid printf(Stream<?> str) {\n\t\tstr.forEach(o -> add(o, \" \"));\n\t\tadd(\"\\n\");\n\t}\n\n\t \n\tvoid printf(Object... obj) {\n\t\tprintf(false, obj);\n\t}\n\n\tvoid printfWithDescription(Object... obj) {\n\t\tprintf(true, obj);\n\t}\n\t\n\t\t\n\tprivate void printf(boolean b, Object... obj) {\n\n\t\tif (obj.length > 1) {\n\t\t\tfor (int i = 0; i < obj.length; i++) {\n\t\t\t\tif (b) add(obj[i].getClass().getSimpleName(), \" - \");\n\t\t\t\tif (obj[i] instanceof Collection<?>) {\n\t\t\t\t\tprintf((Collection<?>) obj[i]);\n\t\t\t\t} else if (obj[i] instanceof int[][]) {\n\t\t\t\t\tprintf((int[][])obj[i]);\n\t\t\t\t} else if (obj[i] instanceof long[][]) {\n\t\t\t\t\tprintf((long[][])obj[i]);\n\t\t\t\t} else if (obj[i] instanceof double[][]) {\n\t\t\t\t\tprintf((double[][])obj[i]);\n\t\t\t\t} else printf(obj[i]);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (b) add(obj[0].getClass().getSimpleName(), \" - \");\n\t\tprintf(obj[0]);\n\t}\n\n\tvoid printf(Object o) {\n\t\tif (o instanceof int[])\n\t\t\tprintf(Arrays.stream((int[]) o).boxed());\n\t\telse if (o instanceof char[])\n\t\t\tprintf(new String((char[]) o));\n\t\telse if (o instanceof long[])\n\t\t\tprintf(Arrays.stream((long[]) o).boxed());\n\t\telse if (o instanceof double[])\n\t\t\tprintf(Arrays.stream((double[]) o).boxed());\n\t\telse if (o instanceof boolean[]) {\n\t\t\tfor (boolean b : (boolean[]) o) add(b, \" \");\n\t\t\tadd(\"\\n\");\n\t\t}\n\t\telse \n\t\t\tadd(o, \"\\n\");\n\t}\n\n\tvoid printf(int[]... obj) {\n\t\tfor (int i = 0; i < obj.length; i++) printf(obj[i]);\n\t}\n\t\n\tvoid printf(long[]... obj) {\n\t\tfor (int i = 0; i < obj.length; i++) printf(obj[i]);\n\t}\n\t\n\tvoid printf(double[]... obj) {\n\t\tfor (int i = 0; i < obj.length; i++) printf(obj[i]);\n\t}\n\t\n\tvoid printf(boolean[]... obj) {\n\t\tfor (int i = 0; i < obj.length; i++) printf(obj[i]);\n\t}\n\t\n\tvoid printf(Collection<?> col) {\n\t\tprintf(col.stream());\n\t}\n\n\t<T, K> void add(T t, K k) {\n\t\tif (t instanceof Collection<?>) {\n\t\t\t((Collection<?>) t).forEach(i -> add(i, \" \"));\n\t\t} else if (t instanceof Object[]) {\n\t\t\tArrays.stream((Object[]) t).forEach(i -> add(i, \" \"));\n\t\t} else\n\t\t\tadd(t);\n\t\tadd(k);\n\t}\n\t\n\t\n\t\n\t<T> void add(T t) {\n\t\tanswer.append(t);\n\t}\n\n\t@SuppressWarnings(\"unchecked\")\n\t<T extends Comparable<? super T>> T min(T... t) {\n\t\tif (t.length == 0)\n\t\t\treturn null;\n\t\tT m = t[0];\n\t\tfor (int i = 1; i < t.length; i++)\n\t\t\tif (t[i].compareTo(m) < 0)\n\t\t\t\tm = t[i];\n\t\treturn m;\n\t}\n\n\t@SuppressWarnings(\"unchecked\")\n\t<T extends Comparable<? super T>> T max(T... t) {\n\t\tif (t.length == 0)\n\t\t\treturn null;\n\t\tT m = t[0];\n\t\tfor (int i = 1; i < t.length; i++)\n\t\t\tif (t[i].compareTo(m) > 0)\n\t\t\t\tm = t[i];\n\t\treturn m;\n\t}\n\n\tint gcd(int a, int b) {\n\t\treturn (b == 0) ? a : gcd(b, a % b);\n\t}\n\n\tlong gcd(long a, long b) {\n\t\treturn (b == 0) ? a : gcd(b, a % b);\n\t}\n\t\n\t// c = gcd(a, b) -> extends gcd method: ax + by = c <----> (b % a)p + q = c;\n\tint[] ext_gcd(int a, int b) {\n\t\tif (b == 0) return new int[] {a, 1, 0 };\n\t\tint[] vals = ext_gcd(b, a % b);\n\t\tint d = vals[0]; // gcd\n\t    int p = vals[2]; // \n\t\tint q = vals[1] - (a / b) * vals[2];\n\t\treturn new int[] { d, p, q };\t  \n\t}\n\t\n\t// find any solution of the equation: ax + by = c using extends gcd\n\tboolean find_any_solution(int a, int b, int c, int[] root) {\n\t\tint[] vals = ext_gcd(Math.abs(a), Math.abs(b));\n\t\tif (c % vals[0] != 0) return false;\n\t\tprintf(vals);\n\t\troot[0] = c * vals[1] / vals[0];\n\t\troot[1] = c * vals[2] / vals[0];\n\t\tif (a < 0) root[0] *= -1;\n\t\tif (b < 0) root[1] *= -1;\n\t\treturn true;\n\t}\n\t\n\tint mod(int x) { return x % MOD; }\n\t\n\tint mod(int x, int y) { return mod(mod(x) + mod(y)); }\n\t\n\tlong mod(long x) { return x % MOD; }\n\t\n\tlong mod (long x, long y) { return mod(mod(x) + mod(y)); }\n\t\n\tint lw(long[] f, int l, int r, long k) {\n\t\tint R = r, m = 0;\n\t\twhile (l <= r) {\n\t\t\tm = l + r >> 1;\n\t\t    if (m == R) return m;\n\t\t    if (f[m] >= k) r = m - 1; else l = m + 1;\n\t\t}\n\t\treturn l;\n\t}\n\t\n\tint up(long[] f, int l, int r, long k) {\n\t\tint R = r, m = 0;\n\t\twhile (l <= r) {\n\t\t\tm = l + r >> 1;\n\t\t    if (m == R) return m;\n\t\t    if (f[m] > k) r = m - 1; else l = m + 1;\n\t\t}\n\t\treturn l;\n\t}\n\t\n\tint lw(int[] f, int l, int r, int k) {\n\t\tint R = r, m = 0;\n\t\twhile (l <= r) {\n\t\t\tm = l + r >> 1;\n\t\t    if (m == R) return m;\n\t\t    if (f[m] >= k) r = m - 1; else l = m + 1;\n\t\t}\n\t\treturn l;\n\t}\n\t\n\tint up(int[] f, int l, int r, int k) {\n\t\tint R = r, m = 0;\n\t\twhile (l <= r) {\n\t\t\tm = l + r >> 1;\n\t\t    if (m == R) return m;\n\t\t    if (f[m] > k) r = m - 1; else l = m + 1;\n\t\t}\n\t\treturn l;\n\t}\n\n\tlong calc(int base, int exponent) {\n\t\tif (exponent == 0) return 1;\n\t\tlong m = calc(base, exponent >> 1);\n\t\tif (exponent % 2 == 0) return m * m % MOD;\n\t\treturn base * m * m % MOD;\n\t}\n\t\n\tlong power(int base, int exponent) {\n\t\tif (exponent == 0) return 1;\n\t\tlong m = power(base, exponent >> 1);\n\t\tif (exponent % 2 == 0) return m * m;\n\t\treturn base * m * m;\n\t}\n\t\n\tvoid swap(int[] a, int i, int j) {\n\t\ta[i] ^= a[j];\n\t\ta[j] ^= a[i];\n\t\ta[i] ^= a[j];\n\t}\n\t\n\tvoid swap(long[] a, int i, int j) {\n\t\tlong tmp = a[i];\n\t\ta[i] = a[j];\n\t\ta[j] = tmp;\n\t}\n\t\n\tstatic class Pair<K extends Comparable<? super K>, V extends Comparable<? super V>>\n\t\t\timplements Comparable<Pair<K, V>> {\n\t\tprivate K k;\n\t\tprivate V v;\n\n\t\tPair() {}\n\n\t\tPair(K k, V v) {\n\t\t\tthis.k = k;\n\t\t\tthis.v = v;\n\t\t}\n\n\t\tK getK() { return k; }\n\n\t\tV getV() { return v; }\n\n\t\tvoid setK(K k) { this.k = k; }\n\n\t\tvoid setV(V v) { this.v = v; }\n\n\t\tvoid setKV(K k, V v) {\n\t\t\tthis.k = k;\n\t\t\tthis.v = v;\n\t\t}\n\n\t\t@SuppressWarnings(\"unchecked\")\n\t\t@Override\n\t\tpublic boolean equals(Object o) {\n\t\t\tif (this == o) return true;\n\t\t\tif (o == null || !(o instanceof Pair)) return false;\n\t\t\tPair<K, V> p = (Pair<K, V>) o;\n\t\t\treturn k.compareTo(p.k) == 0 && v.compareTo(p.v) == 0;\n\t\t}\n\n\t\t@Override\n\t\tpublic int hashCode() {\n\t\t\tint hash = 31;\n\t\t\thash = hash * 89 + k.hashCode();\n\t\t\thash = hash * 89 + v.hashCode();\n\t\t\treturn hash;\n\t\t}\n\n\t\t@Override\n\t\tpublic int compareTo(Pair<K, V> pair) {\n\t\t\treturn k.compareTo(pair.k) == 0 ? v.compareTo(pair.v) : k.compareTo(pair.k);\n\t\t}\n\n\t\t@Override\n\t\tpublic Pair<K, V> clone() {\n\t\t\treturn new Pair<K, V>(this.k, this.v);\n\t\t}\n\n\t\t@Override\n\t\tpublic String toString() {\n\t\t\treturn String.valueOf(k).concat(\" \").concat(String.valueOf(v)).concat(\"\\n\");\n\t\t}\n\t}\n\n\tstatic class Reader {\n\t\tprivate BufferedReader br;\n\t\tprivate StringTokenizer st;\n\n\t\tReader() {\n\t\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t\t}\n\n\t\tString next() {\n\t\t\ttry {\n\t\t\t\twhile (st == null || !st.hasMoreTokens()) {\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\t}\n\t\t\t} catch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tint[] nextIntArray(int n) {\n\t\t\tint[] arr = new int[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tarr[i] = nextInt();\n\t\t\treturn arr;\n\t\t}\n\n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tString nextLine() {\n\t\t\tString s = \"\";\n\t\t\ttry {\n\t\t\t\ts = br.readLine();\n\t\t\t} catch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\treturn s;\n\t\t}\n\t}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long int n, temp;\n  cin >> n;\n  std::vector<long long int> v, v1;\n  for (long long int i = 0; i < n; i++) {\n    cin >> temp;\n    v.push_back(temp);\n    v1.push_back(temp);\n  }\n  sort(v1.begin(), v1.end());\n  long long int count1 = 0;\n  bool flag1 = 0;\n  for (int i = 0; i < n; i++) {\n    if (v[i] != v1[i]) {\n      count1++;\n      if (count1 > 2) {\n        flag1 = 1;\n        break;\n      }\n    }\n  }\n  if (flag1 == 1) {\n    cout << \"NO\";\n  } else {\n    cout << \"YES\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 100005;\nint n;\nint a[maxn], x[maxn];\nbool all_nodec() {\n  for (int i = 2; i <= n; ++i) {\n    if (x[i - 1] > x[i]) {\n      return false;\n    }\n  }\n  return true;\n}\nint k = 0;\nbool ok() {\n  if (k == 1) {\n    return true;\n  } else if (k == 2) {\n    int p;\n    for (int i = 2; i <= n; ++i) {\n      if (x[i - 1] > x[i]) {\n        p = i;\n        break;\n      }\n    }\n    while (p + 1 <= n && x[p + 1] == x[p]) {\n      ++p;\n    }\n    for (int i = 1; i <= n; ++i) {\n      if (x[i] > x[p]) {\n        swap(x[i], x[p]);\n        return all_nodec();\n      }\n    }\n  } else if (k == 3) {\n    int p1, p2;\n    for (int i = 1; i <= n; ++i) {\n      if (x[i] > x[i + 1]) {\n        p1 = i;\n        break;\n      }\n    }\n    for (int i = n; i >= 1; --i) {\n      if (x[i - 1] > x[i]) {\n        p2 = i;\n        break;\n      }\n    }\n    swap(x[p1], x[p2]);\n    return all_nodec();\n  }\n  return false;\n}\nint main() {\n  scanf(\"%d\", &n);\n  a[0] = ~0u >> 1;\n  for (int i = 1; i <= n; ++i) {\n    scanf(\"%d\", &x[i]);\n    if (a[k] > x[i]) {\n      a[++k] = x[i];\n    } else {\n      *upper_bound(&a[1], &a[k + 1], x[i], greater<int>()) = x[i];\n    }\n  }\n  printf(\"%s\\n\", ok() ? \"YES\" : \"NO\");\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.FileReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.StringTokenizer;\nimport java.util.TreeSet;\n\npublic class A {\n\n\tpublic static void main(String args[]) throws Exception {\n\t\tScanner sc = new Scanner(System.in);\n\t\tPrintWriter out = new PrintWriter(System.out);\n\t\tint n = sc.nextInt();\n\t\tint [] x = new int[n];\n\t\tint [] y = new int[n];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tx[i] = sc.nextInt();\n\t\t\ty[i] = x[i];\n\t\t}\n\t\tshuffle(y);\n\t\tArrays.sort(y);\n\t\tint misplaced = 0;\n\t\tfor (int i = 0; i < x.length; i++) {\n\t\t\tif(x[i] != y[i])\n\t\t\t\tmisplaced++;\n\t\t}\n\t\tout.println(misplaced <= 2?\"YES\":\"NO\");\n\t\tout.flush();\n\t\tout.close();\n\t}\n\tstatic void shuffle(int[] a)\n\t{\n\t\tint n = a.length;\n\t\tfor(int i = 0; i < n; i++)\n\t\t{\n\t\t\tint r = i + (int)(Math.random() * (n - i));\n\t\t\tint tmp = a[i];\n\t\t\ta[i] = a[r];\n\t\t\ta[r] = tmp;\n\t\t}\n\t}\n\tstatic class Scanner {\n\t\tStringTokenizer st;\n\t\tBufferedReader br;\n\n\t\tpublic Scanner(InputStream s) {\n\t\t\tbr = new BufferedReader(new InputStreamReader(s));\n\t\t}\n\n\t\tpublic Scanner(FileReader fileReader) {\n\t\t\tbr = new BufferedReader(fileReader);\n\t\t}\n\n\t\tpublic String next() throws IOException {\n\t\t\twhile (st == null || !st.hasMoreTokens())\n\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tpublic int nextInt() throws IOException {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tpublic long nextLong() throws IOException {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tpublic String nextLine() throws IOException {\n\t\t\treturn br.readLine();\n\t\t}\n\n\t\tpublic boolean ready() throws IOException {\n\t\t\treturn br.ready();\n\t\t}\n\t}\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint mark[111111];\nint a[111111];\nint b[111111];\nint n;\nint noEle, cnt;\nint main() {\n  cin >> n;\n  for (int i = 1; i <= n; i++) {\n    cin >> a[i];\n    b[i] = a[i];\n  }\n  sort(b, b + n + 1);\n  for (int i = 1; i <= n; i++) {\n    if (b[i] != a[i]) {\n      noEle++;\n      if (noEle % 2 != 0) cnt++;\n      if (cnt > 1) {\n        cout << \"NO\";\n        return 0;\n      }\n    }\n  }\n  cout << \"YES\";\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "N,cnt=input(),0\na=map(int,raw_input().split())\nb=sorted(a)\nfor i in xrange(N):\n\tcnt+=a[i]!=b[i]\nprint\"YNEOS\"[cnt!=2 and cnt!=0::2]\n"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\na = map(int, raw_input().split(\" \"))\nb = sorted(a)\n\ncount = 0\nfor i in xrange(len(a)):\n\tif not a[i] == b[i]:\n\t\tcount += 1\nif count <= 2:\n\tprint \"YES\"\nelse:\n\tprint \"NO\"\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  int arr[n], brr[n];\n  for (int i = 0; i < n; i++) {\n    cin >> arr[i];\n    brr[i] = arr[i];\n  }\n  sort(brr, brr + n);\n  int c = 0;\n  for (int i = 0; i < n; i++) {\n    if (arr[i] != brr[i]) c++;\n  }\n  if (c <= 2)\n    cout << \"YES\" << endl;\n  else\n    cout << \"NO\" << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long int n, num, i, c = 0;\n  cin >> n;\n  vector<long long int> a, b;\n  for (i = 0; i < n; i++) {\n    cin >> num;\n    a.push_back(num);\n    b.push_back(num);\n  }\n  sort(a.begin(), a.end());\n  for (i = 0; i < n; i++) {\n    if (a[i] != b[i]) c++;\n  }\n  (c <= 2 ? cout << \"YES\" : cout << \"NO\");\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport static java.lang.Math.*;\nimport static java.util.Arrays.*;\npublic class C {\n\tScanner sc = new Scanner(System.in);\n\tvoid doIt()\n\t{\n\t\tboolean ans = solve();\n\t\tSystem.out.println(ans ? \"YES\": \"NO\");\n\t}\n\tboolean solve() {\n\t\tint n = sc.nextInt();\n\t\tint[] a = new int[n];\n\t\tArrayList<Integer> b = new ArrayList<Integer>();\n\t\tfor(int i = 0; i < n; i++) {\n\t\t\ta[i] = sc.nextInt();\n\t\t\tb.add(a[i]);\n\t\t}\n\t\tCollections.sort(b);\n\t\t//System.out.println(a);\n\t\t//System.out.println(b);\n\t\t//ArrayList<Integer> d = new ArrayList<Integer>();\n\t\tint diff = 0;\n\t\tfor(int i = 0; i < n; i++) {\n\t\t\tif(a[i] != b.get(i)) {\n\t\t\t\tdiff++; //d.add(i);\n\t\t\t\tif(diff > 2) return false;\n\t\t\t}\n\t\t}\n\t\t//System.out.println(diff);\n\t\treturn diff <= 2;\n\t}\n\tpublic static void main(String[] args) {\n\t\tnew C().doIt();\n\t}\n\tvoid debug(Object...os) {\n\t\tSystem.err.println(deepToString(os));\n\t}\n}\n\n// 1 2 3 4 5 6\n// 1 5 3 4 2 6\n// 1 4 2 3 5 6  \n// 1 2 3 3 4 5\n// 4 1 2 3\n// 1 "
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nconst int INF = (int)(1e9);\nconst long long INFLL = (long long)(1e18);\nconst double EPS = 1e-13;\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  int n;\n  cin >> n;\n  vector<int> nums(n), sorted(n);\n  int diff = 0;\n  for (int i = (0); i < (int)(n); i++) {\n    cin >> nums[i];\n    sorted[i] = nums[i];\n  }\n  sort((sorted).begin(), (sorted).end());\n  for (int i = (0); i < (int)(n); i++) {\n    if (sorted[i] != nums[i]) diff++;\n  }\n  if (diff == 0 || diff == 2)\n    cout << \"YES\\n\";\n  else\n    cout << \"NO\\n\";\n}\n"
        },
        {
            "language": 4,
            "solution": "import static java.lang.Math.*;\nimport java.util.*;\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();       \n        List<Integer> l1 = new ArrayList<Integer>();        \n        int count = 0;\n        for ( int i = 0; i < n; ++i )       \n            l1.add(sc.nextInt());\n        List<Integer> l2 = new ArrayList<Integer>(l1);\n        Collections.sort(l1);\n        for (int i = 0; i < l1.size(); i++ ) \n            if( !l1.get( i ).equals(l2.get( i )) )\n                count++;            \n        if( count==0 || count==2 )      \n            System.out.println(\"YES\");\n        else\n            System.out.println(\"NO\");                   \n    }\n\n}   "
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\nimport java.lang.*;\nimport java.math.*;\npublic class disp\n {\n  public static void main(String args[]) throws IOException\n   {\n        Scanner s = new Scanner(System.in);\n        int n = s.nextInt();\n        Integer a[] = new Integer[n];\n        int b[] = new int[n];\n        for(int i = 0;i<n;i++){\n            a[i]=s.nextInt();\n            b[i]=a[i];\n        }\n        Arrays.sort(a);\n        boolean fi=false;\n        int d = 0;\n        for(int i=0;i<n;i++)\n        {\n            if(a[i]!=b[i])\n              {\n                 d++;\n                  if(d>2)\n                  {\n                     fi=true;\n                      break;\n                   }   \n               }\n        }      \n        if(!fi)\n            System.out.println(\"YES\");\n        else\n            System.out.println(\"NO\");\n    }\n\n}"
        },
        {
            "language": 1,
            "solution": "n = input()\n\nA = map(int, raw_input().split())\n\nS = sorted(A)\n\nerrors = 0\n\nfor i in range(n):\n    if A[i] != S[i]:\n        errors += 1\n    if errors > 2:\n        break\n\nif errors < 3:\n    print 'YES'\nelse:\n    print 'NO'\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  scanf(\"%d\", &n);\n  vector<int> v, vv;\n  for (int i = 0; i < n; ++i) {\n    int x;\n    scanf(\"%d\", &x);\n    v.push_back(x);\n    vv.push_back(x);\n  }\n  sort(vv.begin(), vv.end());\n  int cnt = 0;\n  for (int i = 0; i < n; ++i) {\n    if (v[i] != vv[i]) {\n      cnt++;\n    }\n  }\n  if (cnt < 3)\n    cout << \"YES\";\n  else\n    cout << \"NO\";\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstruct IOS {\n  struct Input {\n    int readInt() {\n      int x;\n      scanf(\"%d\", &x);\n      return x;\n    }\n    long long readLong() {\n      long long x;\n      scanf(\"%lld\", &x);\n      return x;\n    }\n    char readChar() {\n      char c;\n      scanf(\"%c\", &c);\n      return c;\n    }\n    double readDouble() {\n      double x;\n      scanf(\"%lf\", &x);\n      return x;\n    }\n    string readString() {\n      char str[100005];\n      scanf(\"%s\", &str);\n      return str;\n    }\n    void readIntArray(int* arr, int st, int en) {\n      for (int i = st; i <= en; i++) arr[i] = readInt();\n    }\n  } in;\n  struct Output {\n    void newLine() { printf(\"\\n\"); }\n  } out;\n};\nstruct debugger {\n  template <typename T>\n  debugger& operator,(const T& v) {\n    std::cout << v << ' ';\n    return *this;\n  }\n} dbg;\nint arr[100005], temp[100005];\nint main(int argc, char const* argv[]) {\n  IOS ios;\n  int n = ios.in.readInt();\n  ios.in.readIntArray(arr, 0, n - 1);\n  for (int i = 0; i <= n - 1; i++) temp[i] = arr[i];\n  sort(arr, arr + n);\n  int res = 0;\n  for (int i = 0; i <= n - 1; i++) res += (arr[i] != temp[i]);\n  printf(res <= 2 ? \"YES\\n\" : \"NO\\n\");\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nfrom itertools import permutations as pem\nList=list(map(int, input().split()))\nnewlist=sorted(List)\ncount=0\nfor i in range(n):\n    if newlist[i]!=List[i]:\n        count+=1\nif count<=2:\n    print(\"YES\")\nelse:\n    print(\"NO\")"
        },
        {
            "language": 3,
            "solution": "import sys\ninput = sys.stdin.readline\nn = int(input())\na = list(map(int,input().split()))\nb = sorted(a)\nans = 0\nfor i in range(n):\n    if a[i] != b[i]:\n        ans += 1\nprint('YES' if ans <= 2 else 'NO')"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.Arrays;\n\nimport static java.lang.Integer.*;\nimport static java.lang.Math.*;\n@SuppressWarnings(\"unused\")\npublic class round136C {\n\n    public static void main(String[] args)throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        int n = parseInt(br.readLine());\n        String [] use = br.readLine().split(\" \");\n        Integer [] a = new Integer [n];\n        for(int i = 0 ; i < n ; ++i)\n            a[i] = parseInt(use[i]);\n        Integer [] tmp = new Integer [n];\n        for(int i = 0 ; i < n ; ++i)\n            tmp[i] = a[i];\n        Arrays.sort(tmp);\n        int notInPlace = 0;\n        for(int i = 0 ; i < n ; ++i)\n            if(!a[i].equals(tmp[i]))\n                ++notInPlace;\n        if(notInPlace > 2){\n            System.out.println(\"NO\");\n        }else\n            System.out.println(\"YES\");\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.lang.String;\nimport java.lang.Math;\nimport java.io.*;\nimport java.util.Arrays;\nimport java.util.Scanner;\nimport javax.swing.JOptionPane;\n\npublic class hello {\n\t\n\tpublic static void main(String[] args) {\n\t\tScanner in = new Scanner(System.in);\n\t\tint n = in.nextInt();\n\t\tint ara[ ] = new int[n];\n\t\tint bara[ ] = new int[n];\n\t\t\n\t\tfor(int i = 0;i<n;i++){\n\t\t\tara[i] = in.nextInt();\n\t\t\tbara[i] = ara[i];\n\t\t}\n\t\tArrays.sort(bara);\n\t\tint sw = 0;\n\t\tfor(int i = 0;i<n;i++){\n\t\t\tif(ara[i]!=bara[i])sw++;\n\t\t\tif(sw>2){\n\t\t\t\tSystem.out.println(\"NO\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(\"YES\");\n\t\t\n\t\t\n\t}\n//\t   static BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\n//       static StringTokenizer tokenizer = new StringTokenizer(\"\");\n//       static String next() throws IOException {while (!tokenizer.hasMoreTokens()) {String n = reader.readLine();if (n == null) {return null;}tokenizer = new StringTokenizer(n);}return tokenizer.nextToken();}\n//       static String nextLine() throws IOException {return reader.readLine();}\n//       static Integer nextInt() throws IOException {String next = next();if (next == null) {return null;}return Integer.parseInt(next);}\n//       static long nextLong() throws IOException {return Long.parseLong(next());}\n//       static Double nextDouble() throws IOException {return Double.parseDouble(next());}\n\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\npublic class LittleElephantandProblem {\n\tpublic static void main(String[] args) throws Exception {\n\t\tBufferedReader k = new BufferedReader(new InputStreamReader(System.in));\n\t\t// Scanner k = new Scanner(System.in);\n\n\t\tPrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));\n\t\tint n=Integer.parseInt(k.readLine());\n\t\tint[] arr=new int[n];\n\t\tStringTokenizer s=new StringTokenizer(k.readLine());\n\t\t//int[] temp=new int[n];\n\t\tboolean f=true;\n\t\tfor (int i = 0; i < arr.length; i++) {\n\t\t\tarr[i]=Integer.parseInt(s.nextToken());\n\t\t\tif(i>0&&arr[i]<arr[i-1]) f=false;\n\t\t\t//temp[i]=arr[i];\n\t\t}\n\t\tif(f){\n\t\t\tout.println(\"YES\");\n\t\t\tout.close();\n\t\t\treturn;\n\t\t}\n\t\tint count=0;\n\t\tfor (int i = n-1; i >-1; i--) {\n\t\t\tfor (int j = 0; j < i; j++) {\n\t\t\t\tif(arr[i]<arr[j]) {\n\t\t\t\t\tcount=arr[i];\n\t\t\t\t\tarr[i]=arr[j];\n\t\t\t\t\tarr[j]=count;\n\t\t\t\t\tf=true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(f) break;\n\t\t}\n\t\tfor (int i = 0; i < n-1; i++) {\n\t\t\tif(arr[i]>arr[i+1]){\n\t\t\t\tout.println(\"NO\");\n\t\t\t\tout.close();\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tout.print(\"YES\");\n\t\tout.close();\n//\t\tArrays.sort(temp);\n//\t\tfor (int i = 0; i < n; i++) {\n//\t\t\tif(arr[i]!=temp[i]) count++;\n//\t\t}\n//\t\tif(count>2){\n//\t\t\tout.println(\"NO\");\n//\t\t}else{\n//\t\t\tout.println(\"YES\");\n//\t\t}\n//\t\tout.close();\n\t\t\n\t\t\n//\t\tint h=arr.length-1;\n//\t\tfor (int i = 0; i < arr.length; i++) {\n//\t\t\tint max=-2;\n//\t\t\tint ind=-1;\n//\t\t\tfor (int j = 0; j <= h; j++) {\n//\t\t\t\tif(arr[j]>max) {\n//\t\t\t\t\tmax=arr[j];\n//\t\t\t\t\tind=j;\n//\t\t\t\t}\n//\t\t\t}\n//\t\t\tif(arr[ind]==arr[h]) {\n//\t\t\t\th--;\n//\t\t\t\tcontinue;\n//\t\t\t}\n//\t\t\tif(count==1){\n//\t\t\t\tSystem.out.println(\"NO\");\n//\t\t\t\treturn;\n//\t\t\t}\n//\t\t\tint temp=arr[ind];\n//\t\t\tarr[ind]=arr[h];\n//\t\t\tarr[h]=temp;\n//\t\t\tcount++;\n//\t\t\th--;\n//\t\t}\n//\t\tSystem.out.println(\"YES\");\n\t}\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false), cin.tie(0);\n  int n;\n  cin >> n;\n  vector<int> sorted(n);\n  vector<int> other(n);\n  for (int i = 0; i < n; i++) {\n    cin >> sorted[i];\n    other[i] = sorted[i];\n  }\n  sort(sorted.begin(), sorted.end());\n  bool can = 1;\n  for (int i = 0; i < n; i++) {\n    if (sorted[i] != other[i]) {\n      if (!can) {\n        cout << \"NO\\n\";\n        return 0;\n      }\n      for (int j = n - 1; j > i; j--) {\n        if (other[j] == sorted[i]) {\n          swap(other[j], other[i]);\n        }\n      }\n      can = 0;\n    }\n  }\n  cout << \"YES\\n\";\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\npublic class GoodWork {\nstatic Scanner in =new Scanner(System.in);\nstatic int l=0;\n    public static void main(String[] args) {\n       int n=in.nextInt();\n       int []a=new int[n],b=new int [n];\n       for(int i=0;i<n;i++){a[i]=in.nextInt();b[i]=a[i];}\n       Arrays.sort(b);\n       for(int i=0;i<n;i++){\n       if(a[i]!=b[i]){l++;\n       if(l>2){System.out.print(\"NO\");return;}\n       }\n       }\n        System.out.println(\"YES\");\n    }\n    \n}"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.lang.String;\nimport java.lang.Math;\nimport java.io.*;\nimport java.util.Arrays;\nimport java.util.Scanner;\nimport javax.swing.JOptionPane;\n\npublic class hello {\n\t\n\tpublic static void main(String[] args)throws IOException {\n\t\tint n = nextInt();\n\t\tint ara[ ] = new int[n];\n\t\tint bara[ ] = new int[n];\n\t\t\n\t\tfor(int i = 0;i<n;i++){\n\t\t\tara[i] = nextInt();\n\t\t\tbara[i] = ara[i];\n\t\t}\n\t\tArrays.sort(bara);\n\t\tint sw = 0;\n\t\tfor(int i = 0;i<n;i++){\n\t\t\tif(ara[i]!=bara[i])sw++;\n\t\t\tif(sw>2){\n\t\t\t\tSystem.out.println(\"NO\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(\"YES\");\n\t\t\n\t\t\n\t}\n\t   static BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\n       static StringTokenizer tokenizer = new StringTokenizer(\"\");\n       static String next() throws IOException {while (!tokenizer.hasMoreTokens()) {String n = reader.readLine();if (n == null) {return null;}tokenizer = new StringTokenizer(n);}return tokenizer.nextToken();}\n       static String nextLine() throws IOException {return reader.readLine();}\n       static Integer nextInt() throws IOException {String next = next();if (next == null) {return null;}return Integer.parseInt(next);}\n       static long nextLong() throws IOException {return Long.parseLong(next());}\n       static Double nextDouble() throws IOException {return Double.parseDouble(next());}\n\n}\n"
        },
        {
            "language": 1,
            "solution": "input()\na=map(int,raw_input().split())\nprint\"YNEOS\"[sum([1 for i,j in zip(a,sorted(a))if i!=j])>2::2]\n"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\ns = raw_input()\nl = s.split(\" \")\n#print l\nl1 = [] \nl2 = []\nfor i in range(n):\n    x = int(l[i])\n    l1.append(x)\n    l2.append(x)\nl1.sort()\n#print l1\n#print l2\ncount = 0\nfor i in range(n):\n    if l1[i] != l2[i]:\n        count += 1\nif count <= 2:\n    print \"YES\"\nelse:\n    print \"NO\""
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=list(map(int,input().split()))\nd=sorted(l)\nc=0\nfor i in range(n):\n    if(l[i]!=d[i]):\n        c=c+1\nif(c>2):\n    print(\"NO\")\nelse:\n    print(\"YES\")\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.IOException;\nimport java.util.Arrays;\nimport java.io.InputStream;\nimport java.util.InputMismatchException;\n\npublic class C {\n    public static void main(String[] args) throws NumberFormatException,\n            IOException {\n        InputReader in = new InputReader(System.in);\n        int n = in.readInt();\n        int[] A = new int[n];\n        int[] B = new int[n];\n        for (int i = 0; i < n; i++)\n            A[i] = B[i] = in.readInt();\n        Arrays.sort(B);\n        int diff = 0;\n        for (int i = 0; i < n; i++)\n            if (A[i] != B[i])\n                diff++;\n        if (diff <= 2)\n            System.out.println(\"YES\");\n        else\n            System.out.println(\"NO\");\n    }\n}\n\nclass InputReader {\n\n    private InputStream stream;\n    private byte[] buf = new byte[1000];\n    private int curChar, numChars;\n\n    public InputReader(InputStream stream) {\n        this.stream = stream;\n    }\n\n    private int read() {\n        if (numChars == -1)\n            throw new InputMismatchException();\n        if (curChar >= numChars) {\n            curChar = 0;\n            try {\n                numChars = stream.read(buf);\n            } catch (IOException e) {\n                throw new InputMismatchException();\n            }\n            if (numChars <= 0)\n                return -1;\n        }\n        return buf[curChar++];\n    }\n\n    public int readInt() {\n        int c = read();\n        while (isSpaceChar(c))\n            c = read();\n        int sgn = 1;\n        if (c == '-') {\n            sgn = -1;\n            c = read();\n        }\n        int res = 0;\n        do {\n            if (c < '0' || c > '9')\n                throw new InputMismatchException();\n            res *= 10;\n            res += c - '0';\n            c = read();\n        } while (!isSpaceChar(c));\n        return res * sgn;\n    }\n\n    public long readLong() {\n        int c = read();\n        while (isSpaceChar(c))\n            c = read();\n        int sgn = 1;\n        if (c == '-') {\n            sgn = -1;\n            c = read();\n        }\n        long res = 0;\n        do {\n            if (c < '0' || c > '9')\n                throw new InputMismatchException();\n            res *= 10;\n            res += c - '0';\n            c = read();\n        } while (!isSpaceChar(c));\n        return res * sgn;\n    }\n\n    public String readString() {\n        int c = read();\n        while (isSpaceChar(c))\n            c = read();\n        StringBuffer res = new StringBuffer();\n        do {\n            res.appendCodePoint(c);\n            c = read();\n        } while (!isSpaceChar(c));\n        return res.toString();\n    }\n\n    private boolean isSpaceChar(int c) {\n        return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n    }\n\n    private String readLine0() {\n        StringBuffer buf = new StringBuffer();\n        int c = read();\n        while (c != '\\n' && c != -1) {\n            buf.appendCodePoint(c);\n            c = read();\n        }\n        return buf.toString();\n    }\n\n    public String readLine() {\n        String s = readLine0();\n        while (s.trim().length() == 0)\n            s = readLine0();\n        return s;\n    }\n\n    public String readLine(boolean ignoreEmptyLines) {\n        if (ignoreEmptyLines)\n            return readLine();\n        else\n            return readLine0();\n    }\n\n    public char readCharacter() {\n        int c = read();\n        while (isSpaceChar(c))\n            c = read();\n        return (char) c;\n    }\n\n    public double readDouble() {\n        int c = read();\n        while (isSpaceChar(c))\n            c = read();\n        int sgn = 1;\n        if (c == '-') {\n            sgn = -1;\n            c = read();\n        }\n        double res = 0;\n        while (!isSpaceChar(c) && c != '.') {\n            if (c == 'e' || c == 'E')\n                return res * Math.pow(10, readInt());\n            if (c < '0' || c > '9')\n                throw new InputMismatchException();\n            res *= 10;\n            res += c - '0';\n            c = read();\n        }\n        if (c == '.') {\n            c = read();\n            double m = 1;\n            while (!isSpaceChar(c)) {\n                if (c == 'e' || c == 'E')\n                    return res * Math.pow(10, readInt());\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                m /= 10;\n                res += (c - '0') * m;\n                c = read();\n            }\n        }\n        return res * sgn;\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 100005;\nint n;\nint a[maxn], x[maxn];\nbool ok() {\n  for (int i = 0; i < n; ++i) {\n    scanf(\"%d\", &a[i]);\n    x[i] = a[i];\n  }\n  sort(x, x + n);\n  int c = 0;\n  for (int i = 0; i < n; ++i) {\n    if (a[i] != x[i]) {\n      ++c;\n    }\n  }\n  return c <= 2;\n}\nint main() {\n  scanf(\"%d\", &n);\n  printf(\"%s\\n\", ok() ? \"YES\" : \"NO\");\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\n\n\npublic class L_elefant {\n    \n    \n    public static void main(String[] args) throws NumberFormatException, IOException {\n        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n        \n        int n=Integer.parseInt(br.readLine());\n        \n        int[] in=new int[n];\n        Integer[] sor=new Integer[n];\n        \n        \n        String[] s=br.readLine().split(\" \");\n        for(int i=0;i<n;i++){\n            in[i]=Integer.parseInt(s[i]);\n            sor[i]=in[i];\n        }\n        Arrays.sort(sor);\n        \n        int c=0;\n        \n        for(int i=0;i<n;i++){\n            if(in[i]!=sor[i])\n                c++;\n            if(c>2)\n                break;\n        }\n        if(c>2)\n            System.out.println(\"NO\");\n        else\n            System.out.println(\"YES\");\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "\n\nimport java.util.*;\npublic class CodeForces {\n\tstatic int z =0;\n\tstatic int MAX = (int)1e5;\n\tstatic int arr[][];\n\tstatic int min = Integer.MAX_VALUE;\n\tpublic static void main(String[] args) {\n\t\tScanner input = new Scanner(System.in);\n\t\tint n = input.nextInt();\n\t\tint arr[] = new int[n];\n\t\tArrayList<Integer>list = new ArrayList<>();\n\t\tfor(int i =0;i<n;i++){\n\t\t\tint a = input.nextInt();\n\t\t\tarr[i] = a;\n\t\t\tlist.add(a);\n\t\t}\n\t\tint count =0;\n\t\tCollections.sort(list);\n\t\tfor(int i =0;i<n;i++){\n\t\t\tif(list.get(i) != arr[i])count++;\n\t\t}\n\t\tif(count<=2)System.out.println(\"YES\");\n\t\telse System.out.println(\"NO\");\n\t\t\n\t\t\n\t\t\t\n\t}\n\t\n\tpublic static boolean check(int i,int j,int result[][] ){\n\t\tif(j-1>=0){\n\t\t\tif(result[i][j]+1 == result[i][j-1])return false;\n\t\t}\n\t\tif(i-1>=0){\n\t\t\tif(result[i][j]+1 == result[i-1][j])return false;\n\t\t}\n\t\treturn true;\n\t}\n\tpublic static void sort(long arr[]){\n\t\tArrayList<Long>list = new ArrayList<Long>();\n\t\tfor(long it:arr)list.add(it);\n\t\tCollections.sort(list);\n\t\tfor(int i =0;i<list.size();i++)arr[i] = list.get(i);\n\t\t\t\t\n\t}\n}\nclass Pair{\n\tint a,b;\n\tpublic Pair(int a,int b){\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t}\n}\n\n\n/*\n1.make sure to include continue or return if u are handling a specific case separately!!!!\nand check the constraints of every alphabet(missed to check for case 0)!!!!!!!!!\n\n2.when u have transitions between states and its not dp try dfs (also think of topo sort)\n */\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nifstream Cin(\"input.txt\");\nofstream Cout(\"output.txt\");\nint main() {\n  long long n, x, i, num = 0, m[100001], m1[100001];\n  m[0] = m1[0] = 0;\n  cin >> n;\n  for (i = 1; i <= n; i++) {\n    cin >> m[i];\n    m1[i] = m[i];\n  }\n  sort(m, m + n + 1);\n  for (i = 1; i <= n; i++) {\n    if (m[i] != m1[i]) {\n      num++;\n    }\n  }\n  cout << (num <= 2 ? \"YES\" : \"NO\");\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, a[100010], b[100010];\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; ++i) {\n    scanf(\"%d\", &a[i]);\n    b[i] = a[i];\n  }\n  sort(b + 1, b + n + 1);\n  int cont = 0;\n  for (int i = 1; i <= n; ++i) {\n    if (b[i] != a[i]) {\n      cont++;\n    }\n  }\n  if (cont == 2 || cont == 0) {\n    printf(\"YES\");\n  } else {\n    printf(\"NO\");\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nusing vl = vector<long long>;\nusing vpl = vector<pair<long long, long long>>;\nusing vs = vector<string>;\nusing pl = pair<long long, long long>;\nusing ll = long long int;\nusing vb = vector<bool>;\nvoid printcase(ll x) { cout << \"Case #\" << x << \": \"; }\nvoid read(vector<ll> &v, ll &n) {\n  for (ll i = 0; i < n; ++i) cin >> v[i];\n}\nvoid read(ll a[], ll &n) {\n  for (ll i = 0; i < n; ++i) cin >> a[i];\n}\nvoid print() { cout << endl; }\nvoid write(vector<ll> &v, ll &n) {\n  for (ll i = 0; i < n; ++i) cout << v[i] << \" \";\n  cout << endl;\n}\nvoid write(vector<ll> &v) {\n  ll n = v.size();\n  for (ll i = 0; i < n; ++i) cout << v[i] << \" \";\n  cout << endl;\n}\nvoid write(ll a[], ll &n) {\n  for (ll i = 0; i < n; ++i) cout << a[i] << \" \";\n  cout << endl;\n}\nbool sorted(vl &v) {\n  ll n = v.size();\n  for (int i = 0; i < n - 1; i++) {\n    if (v[i] > v[i + 1]) return 0;\n  }\n  return 1;\n}\nbool solve() {\n  ll n;\n  cin >> n;\n  vl v(n);\n  read(v, n);\n  if (n <= 2) return 1;\n  vl suff(n), suffind(n), preind(n);\n  suff[n - 1] = v[n - 1];\n  suffind[n - 1] = n - 1;\n  preind[0] = 0;\n  for (int i = 1; i < n; i++) {\n    if (v[i] == v[i - 1])\n      preind[i] = preind[i - 1];\n    else\n      preind[i] = i;\n  }\n  for (int i = n - 2; i >= 0; i--) {\n    if (v[i] < suff[i + 1])\n      suffind[i] = i;\n    else\n      suffind[i] = suffind[i + 1];\n    suff[i] = min(v[i], suff[i + 1]);\n  }\n  for (int i = 0; i < n - 1; i++) {\n    if (v[i] > v[i + 1]) {\n      swap(v[preind[i]], v[suffind[i + 1]]);\n      if (sorted(v))\n        return 1;\n      else\n        return 0;\n    }\n  }\n  return 1;\n}\nint main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  ;\n  if (solve())\n    cout << \"YES\" << endl;\n  else\n    cout << \"NO\" << endl;\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class C {\n  public static void main(String[] args) throws IOException {\n    BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n    int n = Integer.parseInt(in.readLine());\n    int[] a = new int[n];\n    StringTokenizer st = new StringTokenizer(in.readLine());\n    for(int i=0;i<n;i++){\n      a[i] = Integer.parseInt(st.nextToken());\n    }\n    boolean res = isswap(a);\n    if(res){\n      System.out.println(\"YES\");\n    }\n    else{\n      System.out.println(\"NO\");\n    }\n    System.exit(0);\n  }\n  public static boolean isswap(int[] a){\n    int n = a.length;\n    int decCount = 0;\n    int[] badnums = new int[2];\n    for(int i=0;i<n-1 && decCount<2;i++){\n      if(a[i]>a[i+1]){\n        badnums[decCount]=i;\n        decCount++;\n      }\n    }\n    if(decCount==0) return true;\n    else if(decCount==1){\n      int index1 = badnums[0];\n      int index2 = index1+1;\n      while(index1>0 && a[index1]==a[index1-1]) index1--;\n      while(index2<n-1 && a[index2]==a[index2+1]) index2++;\n      swap(a,index1,index2);\n      return isSorted(a);\n    }\n    else if(decCount==2){\n      int index1 = badnums[0];\n      int index2 = badnums[1]+1;\n      swap(a,index1,index2);\n      return isSorted(a);\n    }\n    else return false;\n  }\n  public static void swap(int[] a, int i, int j){\n    int temp = a[i];\n    a[i]=a[j];\n    a[j]=temp;\n  }\n  public static boolean isSorted(int[] a){\n    int n = a.length;\n    for(int i=0;i<n-1;i++){\n      if(a[i]>a[i+1]) return false;\n    }\n    return true;\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int a[100005] = {0};\n  int b[100005] = {0};\n  int n, i;\n  scanf(\"%d\", &n);\n  for (int i = 0; i < n; i++) {\n    scanf(\"%d\", &a[i]);\n    b[i] = a[i];\n  }\n  sort(b, b + n);\n  int ret = 0;\n  for (int i = 0; i < n; i++) {\n    if (b[i] != a[i]) ret++;\n  }\n  if (ret <= 2) {\n    printf(\"YES\");\n  } else {\n    printf(\"NO\");\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nmap<int, int> mp;\nint main() {\n  cin.tie(0);\n  cout.tie(0);\n  ios::sync_with_stdio(0);\n  int n, cnt = 0, tk;\n  cin >> n;\n  vector<int> vc, s;\n  for (int i = 1; i <= n; i++) cin >> tk, vc.push_back(tk), s.push_back(tk);\n  sort(s.begin(), s.end());\n  for (int i = 0; i < n; i++) {\n    if (vc[i] != s[i]) cnt++;\n  }\n  if (cnt > 2)\n    puts(\"NO\");\n  else\n    puts(\"YES\");\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstruct IOS {\n  struct Input {\n    int readInt() {\n      int x;\n      scanf(\"%d\", &x);\n      return x;\n    }\n    long long readLong() {\n      long long x;\n      scanf(\"%lld\", &x);\n      return x;\n    }\n    char readChar() {\n      char c;\n      scanf(\"%c\", &c);\n      return c;\n    }\n    double readDouble() {\n      double x;\n      scanf(\"%lf\", &x);\n      return x;\n    }\n    string readString() {\n      char str[100005];\n      scanf(\"%s\", &str);\n      return str;\n    }\n    void readIntArray(int* arr, int st, int en) {\n      for (int i = st; i <= en; i++) arr[i] = readInt();\n    }\n  } in;\n  struct Output {\n    void newLine() { printf(\"\\n\"); }\n  } out;\n};\nstruct debugger {\n  template <typename T>\n  debugger& operator,(const T& v) {\n    std::cout << v << ' ';\n    return *this;\n  }\n} dbg;\nint arr[100005], temp[100005];\nint main(int argc, char const* argv[]) {\n  IOS ios;\n  int n = ios.in.readInt();\n  ios.in.readIntArray(arr, 0, n - 1);\n  for (int i = 0; i <= n - 1; i++) temp[i] = arr[i];\n  sort(arr, arr + n);\n  int res = 0;\n  for (int i = 0; i <= n - 1; i++) res += (arr[i] != temp[i]);\n  if (res <= 2)\n    printf(\"YES\\n\");\n  else\n    printf(\"NO\\n\");\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, a[100000], b[100000];\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = -1; ++i != n; b[i] = a[i]) scanf(\"%d\", a + i);\n  sort(a, a + n);\n  int ans = 0;\n  for (int i = -1; ++i != n;) ans += a[i] != b[i];\n  puts(ans > 2 ? \"NO\" : \"YES\");\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class test1\n{\n\n    public static void main(String[] args)\n    {\n        Scanner in = new Scanner(System.in);\n        int n = in.nextInt();\n        int a[]=new int[n];\n        int b[]=new int[n];\n        for(int i=0;i<n;i++)\n        {\n            a[i]=in.nextInt();\n            b[i]=a[i];\n        }\n        Arrays.sort(b);\n        int count=0;\n        for(int i=0;i<n;i++)\n            if(a[i]!=b[i])\n                count++;\n        if(count<=2)\n            System.out.println(\"YES\");\n        else\n            System.out.println(\"NO\");\n    }\n    \n \n}"
        },
        {
            "language": 1,
            "solution": "#coding=utf-8\n\nn = int(input())\n\na = map(int, raw_input().split()) \n\nsa = sorted(a)\n\nwrong_pos = 0\nfor i in range(len(a)):\n\tif a[i] != sa[i]:\n\t\twrong_pos+=1\n#print wrong_pos\nif wrong_pos <= 2:\n\tprint \"YES\"\nelse:\n\tprint \"NO\"\n\n\n"
        },
        {
            "language": 4,
            "solution": "/*\n * Remember a 7.0 student can know more than a 10.0 student.\n * Grades don't determine intelligence, they test obedience. \n * I Never Give Up.\n */\nimport java.util.*;\nimport java.util.Map.Entry;\nimport java.io.*;\n\nimport static java.lang.System.out;\nimport static java.util.Arrays.*;\nimport static java.lang.Math.*;\npublic class ContestMain {\n\tprivate static Reader in=new Reader();\n\tprivate static StringBuilder ans=new StringBuilder();\n\tprivate static long MOD=1000000007;//10^9+7 \n\tprivate static final int N=1000000;//10^6\n\tprivate static final int LIM=26;\n//\tprivate static final double PI=3.1415;\n//\tprivate static ArrayList<Integer> v[]=new ArrayList[N];\n//\tprivate static int color[]=new int[N]; //For Graph Coloring\n\tprivate static boolean mark[]=new boolean[N];\n//\tprivate static BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n//\tprivate static void dfs(int node){mark[node]=true;for(int x:v[node]){if(!mark[x]){dfs(x);}}}\n\tprivate static long powmod(long x,long n,long m){\n\t\tif(n==0)return 1;\n\t\telse if(n%2==0)return(powmod((x*x)%m,n/2,m));\n\t\telse return (x*(powmod((x*x)%m,(n-1)/2,m)))%m;\n\t}\n//\tprivate static void shuffle(String[] arr) {\n//\t\tfor (int i = arr.length - 1; i >= 2; i--) {\n//\t\t\tint x = new Random().nextInt(i - 1);\n//\t        String temp = arr[x];\n//\t        arr[x] = arr[i];\n//\t        arr[i] = temp;\n//\t    }\n//\t }\n\tpublic static void main(String[] args) throws IOException{\n\t\tint n=in.nextInt();\n\t\tint ar[]=new int[n];\n\t\tint sorted[]=new int[n];\n\t\tfor(int i=0;i<n;i++){\n\t\t\tar[i]=in.nextInt();\n\t\t\tsorted[i]=ar[i];\n\t\t}\n\t\tsort(sorted);\n\t\tint index,temp,i=0,c=0;\n\t\tfor(i=0;i<n;i++){\n\t\t\tif(ar[i]!=sorted[i])c++;\n\t\t}\n\t\tif(c>2)out.println(\"NO\");\n\t\telse out.println(\"YES\");\n\t}\n\tstatic class Pair implements Comparable<Pair>{\n\t\tlong l;\n\t\tlong r;\n\t\tPair(){\n\t\t\tl=0;\n\t\t\tr=0;\n\t\t}\n\t\tPair(long k,long v){\n\t\t\tl=k;\n\t\t\tr=v;\n\t\t}\n\t\t@Override\n\t\tpublic int compareTo(Pair o) {\n\t\t\tif(l!=o.l)return (int) (l-o.l);\n\t\t\telse return (int) (r-o.r);\n\t\t}\n\t\t\n\t}\n\tstatic class Reader{\n        BufferedReader br;\n        StringTokenizer st;\n        public Reader()\n        {\n            br = new BufferedReader(new\n                     InputStreamReader(System.in));\n        }\n \n        String next()\n        {\n            while (st == null || !st.hasMoreElements())\n            {\n                try\n                {\n                    st = new StringTokenizer(br.readLine());\n                }\n                catch (IOException  e)\n                {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n \n        int nextInt()\n        {\n            return Integer.parseInt(next());\n        }\n \n        long nextLong()\n        {\n            return Long.parseLong(next());\n        }\n \n        double nextDouble()\n        {\n            return Double.parseDouble(next());\n        }\n \n        String nextLine()\n        {\n            String str = \"\";\n            try\n            {\n                str = br.readLine();\n            }\n            catch (IOException e)\n            {\n                e.printStackTrace();\n            }\n            return str;\n        }\n    }\n}         "
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\na = map(int, raw_input().split())\nb = a[:]\nb.sort()\ncnt = 0\nfor i in xrange(n):\n\tif a[i] != b[i]:\n\t\tcnt += 1\nif cnt <= 2:\n\tprint \"YES\"\nelse:\n\tprint \"NO\"\n"
        },
        {
            "language": 4,
            "solution": "/*package whatever //do not write package name here */\n\nimport java.util.*;\n\npublic class GFG {\n\tpublic static void main (String[] args) {\n\t    Scanner sc= new Scanner(System.in);\n\t    int n = sc.nextInt();\n\t    int arr[] = new int[n];\n\t    for(int i=0;i<n;i++){\n\t        arr[i] =sc.nextInt();\n\t    }\n\t    int arrc[] = Arrays.copyOf(arr, n);\n\t    Arrays.sort(arrc);\n\t    int c = 0;\n\t    for(int i=0;i<n;i++){\n\t        if(arrc[i]!=arr[i]) c++;\n\t    }\n\t    if(c<3){\n\t        System.out.println(\"YES\");\n\t    } else System.out.println(\"NO\");\n\t}\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\nimport java.util.StringTokenizer;\n\npublic class TC\n{\n    static int[] arr;\n    static int[] cpy;\n    static int N;\n    \n    static boolean solve( )\n    {\n        Arrays.sort( cpy );\n        int pos[] = new int[ 2 ];\n        int cnt = 0;\n        \n        for( int i=0; i<N; i++ )\n        {\n            if( arr[ i ] != cpy [ i ])\n            {\n                cnt++;\n                \n                if( cnt >2 )\n                    return false;\n                \n                pos[ cnt-1 ] = i;\n            }\n        }\n        \n        if( cnt == 0  )\n            return true;\n        \n        if( cnt == 1 )\n            return false;\n        \n        if( ( arr[ pos[ 0 ]] == cpy[ pos[ 1 ]]) && ( arr[ pos[ 1 ]] == cpy[ pos[ 0 ]]) )\n            return true;\n        \n        return false;\n    }\n    \n    public static void main( String[] args ) throws IOException\n    {\n        BufferedReader br = new BufferedReader( new InputStreamReader( System.in ));\n        \n        N = Integer.parseInt( br.readLine());\n        String s = br.readLine();\n        StringTokenizer tok = new StringTokenizer(  s );\n        \n        arr = new int[ N ];\n        cpy = new int[ N ];\n        \n        for( int i=0; i<N; i++ )\n        {\n            arr[ i ] = Integer.parseInt( tok.nextToken());\n            cpy[ i ] = arr[ i ];\n        }\n        boolean res = solve(  );\n        \n        if( res )\n            System.out.println(\"YES\");\n        \n        else\n            System.out.println(\"NO\");\n        \n \n          \n         \n        \n      \n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[100002], s[100002];\nint main() {\n  int n;\n  while (scanf(\"%d\", &n) != EOF) {\n    int i;\n    int k, mx = 1000000000;\n    int f = 0;\n    for (i = 0; i < n; i++) {\n      scanf(\"%d\", &a[i]);\n      s[i] = a[i];\n    }\n    sort(a, a + n);\n    for (i = 0; i < n; i++) {\n      if (s[i] != a[i]) f++;\n    }\n    if (f > 2)\n      printf(\"NO\\n\");\n    else\n      printf(\"YES\\n\");\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  vector<int> arr(n);\n  vector<int> sorted(n);\n  for (int i = 0; i < n; i++) {\n    cin >> arr[i];\n    sorted[i] = arr[i];\n  }\n  int c = 0;\n  sort(sorted.begin(), sorted.end());\n  for (int i = 0; i < n; i++) {\n    if (arr[i] != sorted[i]) {\n      c++;\n    }\n  }\n  if (c <= 2) {\n    cout << \"YES\" << endl;\n  } else {\n    cout << \"NO\" << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "n=int(raw_input())\nflag=False\nm=list(map(int,raw_input().split()))\nm1=sorted(m)\nl=0\nfor i in range (len(m)):\n\tif m[i]-m1[i]!=0:\n\t\tl+=1\n\tif l>2:\n\t\tprint \"NO\"\n\t\tflag=True\n\t\tbreak\nif flag==False:\n\tprint \"YES\""
        },
        {
            "language": 3,
            "solution": "#https://codeforces.com/contest/221/problem/C\nn=int(input())\na=list(map(int,input().split(' ')))\nb=[]\nfor i in range(n):\n\tb.append(a[i])\nb.sort()\nq=0\nR=[]\nbhul=True\nfor i in range(n):\n\tif a[i]!=b[i]:\n\t\tif q>=2:\n\t\t\tprint('NO')\n\t\t\tbhul=False\n\t\t\tbreak\n\t\telse:\n\t\t\tq+=1\n\t\t\tR.append(i)\nif bhul:\n\tif q==0:\n\t\tprint('YES')\n\telif q==2:\n\t\tprint('YES')\n\telse:\n\t\tprint('NO')"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.StringTokenizer;\nimport java.util.TreeSet;\n\n\npublic class C \n{\n\t static class Scanner\n\t    {\n\t            BufferedReader br;\n\t            StringTokenizer st;\n\t            \n\t            public Scanner()\n\t            { \n\t                    br = new BufferedReader(new InputStreamReader(System.in));\n\t            }\n\t            \n\t            public String next()\n\t            {\n\n\t                    while(st == null || !st.hasMoreTokens())\n\t                    {\n\t                            try { st = new StringTokenizer(br.readLine()); }\n\t                            catch(Exception e) { throw new RuntimeException(); }\n\t                    }\n\t                    return st.nextToken();\n\t            }\n\n\t            public int nextInt()\n\t            {\n\t                    return Integer.parseInt(next());\n\t            }\n\t            \n\t            public double nextDouble()\n\t            {\n\t                    return Double.parseDouble(next());\n\t            }\n\t            \n\t            public String nextLine()\n\t            {\n\t                    st = null;\n\t                    try { return br.readLine(); }\n\t                    catch(Exception e) { throw new RuntimeException(); }\n\t            }\n\t            \n\t            public boolean endLine()\n\t            {\n\t                    try \n\t                    {\n\t                            String next = br.readLine();\n\t                            while(next != null && next.trim().isEmpty())\n\t                                    next = br.readLine();\n\t                            if(next == null)\n\t                                    return true;\n\t                            st = new StringTokenizer(next);\n\t                            return st.hasMoreTokens();\n\t                    }\n\t                    catch(Exception e) { throw new RuntimeException(); }\n\t            }\n\t    }\n\n\t static int idF = 0;\n\t static class Numero implements Comparable <Numero>\n\t {\n\t\t int n;\n\t\t int id = idF++;\n\t\t \n\t\t@Override\n\t\tpublic int compareTo(Numero o) \n\t\t{\n\t\t\tif(n == o.n)\n\t\t\t\treturn id - o.id;\n\t\t\treturn n - o.n;\n\t\t}\n\t\t\n\t\t@Override\n\t\tpublic String toString() {\n\t\t\treturn n + \"\";\n\t\t}\n\t }\n\t \n\tpublic static void main(String[] args)\n\t{\n\t\tScanner sc = new Scanner();\n\t\tint n = sc.nextInt();\n\t\tInteger[] numeros = new Integer[n];\n\t\tfor(int i = 0; i < n; i++)\n\t\t\tnumeros[i] = sc.nextInt();\n\t\tif(intentar(numeros, true, true, true) || intentar(numeros, true, true, false) || intentar(numeros, true, false, true) || intentar(numeros, true, false, false) || intentar(numeros, false, true, true) || intentar(numeros, false, true, false) || intentar(numeros, false, false, true) || intentar(numeros, false, false, false))\n\t\t\tSystem.out.println(\"YES\");\n\t\telse\n\t\t\tSystem.out.println(\"NO\");\n\t}\n\t\n\tstatic boolean intentar(Integer[] nums, boolean a, boolean b, boolean c)\n\t{\n\t\tInteger[] numeros = nums.clone();\n\t\tint indice1 = enOrden(numeros, a, -1, c);\n\t\tint indice2 = enOrden(numeros, b, indice1, c);\n\t\tif(indice1 != -1 && indice2 != -1)\n\t\t{\n\t\t\tInteger temp = numeros[indice1];\n\t\t\tnumeros[indice1] = numeros[indice2];\n\t\t\tnumeros[indice2] = temp;\n\t\t}\n\t\tboolean es = enOrden(numeros, true, -1, c) == -1;\n\t\tif(es)\n\t\t\treturn es;\n\t\tif(indice1 != -1 && indice2 != -1)\n\t\t{\n\t\t\tInteger temp = numeros[indice1];\n\t\t\tnumeros[indice1] = numeros[indice2];\n\t\t\tnumeros[indice2] = temp;\n\t\t}\n\t\tindice2 = dondeIria(numeros, indice1, numeros[indice1], b, c);\n\t\tif(indice1 != -1 && indice2 != -1)\n\t\t{\n\t\t\tInteger temp = numeros[indice1];\n\t\t\tnumeros[indice1] = numeros[indice2];\n\t\t\tnumeros[indice2] = temp;\n\t\t}\n\t\treturn enOrden(numeros, true, -1, c) == -1;\n\t}\n\n\tprivate static int dondeIria(Integer[] numeros, int indice, int n, boolean b, boolean c) \n\t{\n\t\tfor(int i = 0; i < numeros.length; i++)\n\t\t\tif(b && (c ? numeros[i] >= n : numeros[i] > n) && i - 1 != indice && i != indice)\n\t\t\t\treturn i == 0 ? i : i - 1;\n\t\t\telse if(!b && (c ? numeros[i] >= n : numeros[i] > n))\n\t\t\t\treturn i;\n\t\treturn numeros.length - 1;\n\t}\n\n\tprivate static int enOrden(Integer[] numeros, boolean cual, int anterior, boolean cual2) \n\t{\n\t\t\tfor(int i = 1; i < numeros.length; i++)\n\t\t\t\tif(i == anterior)\n\t\t\t\t\tcontinue;\n\t\t\t\telse if(numeros[i] < numeros[i - 1])\n\t\t\t\t{\n\t\t\t\t\tif(cual2 && (i - 1 == anterior || i == anterior))\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\treturn cual ? i - 1 : i;\n\t\t\t\t}\n\t\t\treturn anterior == -1 ? -1 : 0;\n\t}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, m, k, i, c, b, a, energy, ans, s, j, w[2555555], l[2555555], kol;\npair<int, int> p[2555555];\nint main() {\n  cin >> n;\n  for (i = 1; i <= n; i++) {\n    cin >> w[i];\n    l[i] = w[i];\n  }\n  sort(w + 1, w + 1 + n);\n  for (i = 1; i <= n; i++) {\n    if (l[i] != w[i]) a++;\n    if (a > 2) {\n      cout << \"NO\";\n      return 0;\n    }\n  }\n  cout << \"YES\";\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int a[100050];\n  int b[100050];\n  int n;\n  scanf(\"%d\", &n);\n  for (int i = 0; i < n; i++) {\n    scanf(\"%d\", &a[i]);\n    b[i] = a[i];\n  }\n  sort(b, b + n);\n  int ans = 0;\n  for (int i = 0; i < n; i++)\n    if (b[i] != a[i]) ans++;\n  if (ans <= 2)\n    printf(\"YES\");\n  else\n    printf(\"NO\");\n  printf(\"\\n\");\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long fpow(long long n, long long k, long long p = 1000000007) {\n  long long r = 1;\n  for (; k; k >>= 1) {\n    if (k & 1) r = r * n % p;\n    n = n * n % p;\n  }\n  return r;\n}\nlong long inv(long long a, long long p = 1000000007 - 1) {\n  return fpow(a, p - 2, p);\n}\nlong long Sqrt(long long x) {\n  if (x == 0 || x == 1) return x;\n  long long start = 1, end = x, ans;\n  while (start <= end) {\n    long long mid = (start + end) / 2;\n    if (mid * mid == x) return mid;\n    if (mid * mid < x) {\n      start = mid + 1;\n      ans = mid;\n    } else\n      end = mid - 1;\n  }\n  return ans;\n}\nlong long power(long long x, long long y) {\n  if (y == 0)\n    return 1;\n  else if (y % 2 == 0)\n    return power(x, y / 2) * power(x, y / 2);\n  else\n    return x * power(x, y / 2) * power(x, y / 2);\n}\nlong long gcd(long long a, long long b) {\n  long long r;\n  while (b) {\n    r = a % b;\n    a = b;\n    b = r;\n  }\n  return a;\n}\nlong long lcm(long long a, long long b) { return a / gcd(a, b) * b; }\nvoid in(long long &no) {\n  bool neg = false;\n  register long long c;\n  no = 0;\n  c = getchar();\n  if (c == '-') {\n    neg = true;\n    c = getchar();\n  }\n  for (; (c > 47 && c < 58); c = getchar()) no = no * 10 + c - 48;\n  if (neg) no *= -1;\n}\nlong long maxx(long long a, long long b) {\n  if (a > b) return a;\n  return b;\n}\nlong long minn(long long a, long long b) {\n  if (a < b) return a;\n  return b;\n}\nint main() {\n  long long n;\n  cin >> n;\n  long long a[n], b[n];\n  for (int i = (0); i < (n); i++) {\n    cin >> a[i];\n    b[i] = a[i];\n  }\n  sort(b, b + n);\n  long long cnt = 0;\n  for (int i = (0); i < (n); i++) {\n    if (a[i] != b[i]) cnt++;\n  }\n  if (cnt > 2)\n    cout << \"NO\";\n  else\n    cout << \"YES\";\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "n = input()\nm = map(int, raw_input().split())\nc = sum([ 1 for a, b in zip(m, sorted(m)) if a != b])\nprint 'YES' if c in (0, 2) else 'NO'"
        },
        {
            "language": 4,
            "solution": "import java.awt.geom.*;\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.*;\npublic class Main {\n    int n;\n    int [] a,asorted;\n\n    private void doit() {\n        //Scanner sc = new Scanner(System.in);\n        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n        \n        //while(sc.hasNext()){\n            String[] inputN = new String[n];\n            try {\n                n = Integer.parseInt(in.readLine());\n                inputN = in.readLine().split(\" \");\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            \n            a = new int[n];\n            asorted = new int[n];\n            for(int i = 0; i < n; i++){\n                a[i] = Integer.parseInt(inputN[i]);\n                asorted[i] = a[i];\n            }\n            Arrays.sort(asorted);\n            int diffCount = 0;\n            for(int i = 0; i < n; i++){\n                if(a[i] == asorted[i]) continue;\n                diffCount++;\n                if(diffCount == 3){\n                    break;\n                }\n            }\n\n            if(diffCount <= 2){\n                System.out.println(\"YES\");\n            }\n            else{\n                System.out.println(\"NO\");\n            }\n        //}\n    }\n\n    public static void main(String[] args) {\n        Main obj = new Main();\n        obj.doit();\n    }\n}"
        },
        {
            "language": 3,
            "solution": "def arr_inp(n):\n    if n == 1:\n        return [int(x) for x in stdin.readline().split()]\n    elif n == 2:\n        return [float(x) for x in stdin.readline().split()]\n    else:\n        return [str(x) for x in stdin.readline().split()]\n\n\nfrom sys import stdin\n\nn, a = int(input()), arr_inp(1)\na1, c, ix = sorted(a.copy()), 0, 0\n\nfor i in range(n):\n    if a[i] != a1[i]:\n        if c == 0:\n            c += 1\n            ix = i\n        elif c > 2:\n            exit(print('NO'))\n        else:\n            if a1[ix] == a[i]:\n                c += 1\n            else:\n                exit(print('NO'))\nprint('YES')\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.Map;\nimport java.util.PriorityQueue;\nimport java.util.StringTokenizer;\nimport java.util.TreeMap;\nimport java.util.TreeSet;\n\npublic class Soly {\n\n    public static void main(String[] args) throws IOException {\n        Scanner in = new Scanner(System.in);\n        try (PrintWriter or = new PrintWriter(System.out)) {\n         int n = in.nextInt(),ans=0;\n          int [] a= new int[n],b= new int[n];\n            for (int i = 0; i < n; i++)     a[i]=b[i]=in.nextInt();\n            Arrays.sort(b);\n            for (int i = 0; i < n; ++i) if(a[i]!=b[i])\n                    ++ans;\n                or.println(ans>2?\"NO\":\"YES\");\n            \n        }\n\n    }\n\n    static class Scanner {\n\n        StringTokenizer st;\n        BufferedReader br;\n\n        public Scanner(InputStream s) {\n            br = new BufferedReader(new InputStreamReader(s));\n        }\n\n        public String next() throws IOException {\n            while (st == null || !st.hasMoreTokens()) {\n                st = new StringTokenizer(br.readLine());\n            }\n            return st.nextToken();\n        }\n\n        public int nextInt() throws IOException {\n            return Integer.parseInt(next());\n        }\n\n        public long nextLong() throws IOException {\n            return Long.parseLong(next());\n        }\n\n        public String nextLine() throws IOException {\n            return br.readLine();\n        }\n\n        public double nextDouble() throws IOException {\n            String x = next();\n            StringBuilder sb = new StringBuilder(\"0\");\n            double res = 0, f = 1;\n            boolean dec = false, neg = false;\n            int start = 0;\n            if (x.charAt(0) == '-') {\n                neg = true;\n                start++;\n            }\n            for (int i = start; i < x.length(); i++) {\n                if (x.charAt(i) == '.') {\n                    res = Long.parseLong(sb.toString());\n                    sb = new StringBuilder(\"0\");\n                    dec = true;\n                } else {\n                    sb.append(x.charAt(i));\n                    if (dec) {\n                        f *= 10;\n                    }\n                }\n            }\n            res += Long.parseLong(sb.toString()) / f;\n            return res * (neg ? -1 : 1);\n        }\n\n        public boolean ready() throws IOException {\n            return br.ready();\n        }\n\n    }\n\n}\n\nclass Pair8 {\n\n    int index;\n    int value;\n\n    // int min;\n    public Pair8(int index, int value) {\n        this.value = value;\n        this.index = index;\n        //min = m;\n    }\n\n}\n"
        },
        {
            "language": 3,
            "solution": "n=int(input())\nl=[int(i) for i in input().split()]\nl1=sorted(l)\nc=0\nfor i in range(n):\n    if(l1[i]!=l[i]):\n        c+=1\nif(c>2):\n    print(\"NO\")\nelse:\n    print(\"YES\")"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstring itoa_cpp(int value, int base) {\n  string buf;\n  if (base < 2 || base > 16) return buf;\n  enum { kMaxDigits = 35 };\n  buf.reserve(kMaxDigits);\n  int quotient = value;\n  do {\n    buf += \"0123456789abcdef\"[std::abs(quotient % base)];\n    quotient /= base;\n  } while (quotient);\n  if (value < 0) buf += '-';\n  reverse(buf.begin(), buf.end());\n  return buf;\n}\nint main() {\n  int n = ({\n    int x;\n    scanf(\"%d\", &x);\n    x;\n  });\n  vector<int> a;\n  for (int i = 0; i < n; i++)\n    a.push_back(({\n      int x;\n      scanf(\"%d\", &x);\n      x;\n    }));\n  int i, last_pos = 0;\n  for (int i = 0; i < n - 1; i++) {\n    if (a[i] < a[i + 1]) last_pos = i + 1;\n    if (a[i] > a[i + 1]) {\n      int min_pos = i + 1;\n      for (int j = i + 2; j < n; j++)\n        if (a[j] <= a[min_pos]) min_pos = j;\n      swap(a[last_pos], a[min_pos]);\n      break;\n    }\n  }\n  for (i = 0; i < n - 1; i++)\n    if (a[i] > a[i + 1]) {\n      printf(\"NO\");\n      break;\n    }\n  if (i == n - 1) printf(\"YES\");\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[1000 * 100 + 22], b[1000 * 100 + 22];\nint main() {\n  int n, k = 0;\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n    b[i] = a[i];\n  }\n  sort(a, a + n);\n  for (int i = 0; i < n; i++)\n    if (a[i] != b[i]) k++;\n  if (k > 2)\n    cout << \"NO\" << endl;\n  else\n    cout << \"YES\" << endl;\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.Collections;\nimport java.util.Scanner;\nimport java.util.Vector;\n\n\npublic class Main {\n\n    \n    public static void main(String[] args) {\n        Scanner in=new Scanner(new InputStreamReader(System.in));\n        PrintWriter out=new PrintWriter(System.out);\n        int n=in.nextInt();\n        Vector<Integer> mas=new Vector<Integer>();\n        Vector<Integer> mas2=new Vector<Integer>();\n        int index=-1;\n        boolean res=false;\n        for(int i=0; i<n; i++){\n            mas.add(in.nextInt());\n            if(i!=0 && mas.get(i)<mas.get(i-1)){\n                index=i-1;\n                break;\n            }\n        }\n        if(index==-1) res=true;\n        else{\n            int min=mas.get(index+1);\n            int minIndex=index+1;\n            for(int i=index+2; i<n; i++){\n                mas.add(in.nextInt());\n                if(mas.get(i)<=min){\n                    min=mas.get(i);\n                    minIndex=i;\n                    \n                }\n            }\n            \n            mas2.addAll(mas);\n            mas.set(minIndex, mas.get(index));\n            mas.set(index, min);\n            int o=mas.hashCode();\n            Collections.sort(mas);\n            int nw=mas.hashCode();\n            res=nw==o;\n        }\n        if(!res){\n            mas=mas2;\n            for(int i=n-1; i>=0; i--){\n                if(i!=n-1 && mas.get(i)>mas.get(i+1)){\n                    index=i+1;\n                    break;\n                }\n            }\n            if(index==-1) res=true;\n            else{\n                int max=mas.get(index-1);\n                int maxIndex=index-1;\n                for(int i=index-1; i>=0; i--){\n                    if(mas.get(i)>=max){\n                        max=mas.get(i);\n                        maxIndex=i;\n                    }\n                }\n                mas.set(maxIndex, mas.get(index));\n                mas.set(index, max);\n                int o=mas.hashCode();\n                Collections.sort(mas);\n                int nw=mas.hashCode();\n                res=res||nw==o;\n            }\n        }\n        if(res) out.println(\"YES\");\n        else out.println(\"NO\");\n        out.close();\n    }\n\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.Arrays;\nimport java.io.BufferedReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskC solver = new TaskC();\n        solver.solve(1, in, out);\n        out.close();\n    }\n}\n\nclass TaskC {\n    public void solve(int testNumber, InputReader in, PrintWriter out) {\n        int n = in.nextInt();\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++)\n            a[i] = in.nextInt();\n        int[] c = new int[n];\n        System.arraycopy(a, 0, c, 0, n);\n        Arrays.sort(c);\n        int errors = 0;\n        for (int i = 0; i < n; i++)\n            if (a[i] != c[i])\n                errors++;\n        if (errors == 0 || errors == 2)\n            out.println(\"YES\");\n        else\n            out.println(\"NO\");\n    }\n}\n\nclass InputReader {\n    private BufferedReader reader;\n    private StringTokenizer tokenizer;\n\n    public InputReader(InputStream stream) {\n        reader = new BufferedReader(new InputStreamReader(stream));\n        tokenizer = null;\n    }\n\n    public int nextInt() {\n        return Integer.parseInt(next());\n    }\n\n    public String next() {\n        while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n            try {\n                tokenizer = new StringTokenizer(reader.readLine());\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n        return tokenizer.nextToken();\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\nimport static java.lang.Math.*;\npublic class ProblemC {\n    void run() {\n\t\tint N = nextInt();\n\t\tint[] a = new int[N];\n\t\tint[] b = new int[N];\n\t\tfor (int i = 0; i < N; ++i) {\n\t\t\tint x = nextInt();\n\t\t\ta[i] = x;\n\t\t\tb[i] = x;\n\t\t}\n\t\tArrays.sort(a);\n\t\tint count = 0;\n\t\tfor (int i = 0; i < N; ++i) {\n\t\t\tif (a[i] != b[i]) {\n\t\t\t\t++count;\n\t\t\t}\n\t\t}\n\t\tp(\"%s\\n\", count <= 2 ? \"YES\" : \"NO\"); //\n    }\n\n    boolean debug = false;\n    void p(String f, Object...params) {\n        System.out.printf(f, params);\n    }\n    void d(Object...params) {\n        if (debug) {\n            p(\"DEBUG: %s\\n\", Arrays.deepToString(params));\n        }\n    }\n    void die() {\n        throw new RuntimeException();\n    }\n    public ProblemC(String[] args) {\n        if (args.length > 0 && args[0].equals(\"debug\")) {\n            debug = true;\n        }\n        in = new BufferedReader(new InputStreamReader(System.in));\n    }\n    public static void main(String[] args) {\n        new ProblemC(args).run();\n    }\n\n    BufferedReader in;\n    StringTokenizer tok;\n    void tokenizeLine() {\n        try {\n            String line = in.readLine();\n            if (line == null) die();\n            tok = new StringTokenizer(line);\n        } catch (IOException e) {\n            die();\n        }\n    }\n    String next() {\n        while (tok == null || !tok.hasMoreTokens()) {\n            tokenizeLine();\n        }\n        return tok.nextToken();\n    }\n    String nextLine() {\n        if (tok == null) {\n            tokenizeLine();\n        }\n        String ret = tok.hasMoreTokens() ? tok.nextToken(\"\\n\"): \"\";\n        tok = null;\n        return ret;\n    }\n    int nextInt() {\n        return Integer.parseInt(next());\n    }\n    long nextLong() {\n        return Long.parseLong(next());\n    }\n    double nextDouble() {\n        return Double.parseDouble(next());\n    }\n}\n"
        },
        {
            "language": 3,
            "solution": "import sys\nimport math\nimport itertools\nimport functools\nimport collections\n\n\ndef ii(): return int(input())\ndef mi(): return map(int, input().split())\ndef li(): return list(map(int, input().split()))\ndef lcm(a, b): return abs(a * b) // math.gcd(a, b)\ndef wr(arr): return ' '.join(map(str, arr))\ndef revn(n): return str(n)[::-1]\ndef dd(): return collections.defaultdict(int)\ndef ddl(): return collections.defaultdict(list)\ndef sieve(n):\n    if n < 2: return list()\n    prime = [True for _ in range(n + 1)]\n    p = 3\n    while p * p <= n:\n        if prime[p]:\n            for i in range(p * 2, n + 1, p):\n                prime[i] = False\n        p += 2\n    r = [2]\n    for p in range(3, n + 1, 2):\n        if prime[p]:\n            r.append(p)\n    return r\ndef divs(n, start=1):\n    r = []\n    for i in range(start, int(math.sqrt(n) + 1)):\n        if (n % i == 0):\n            if (n / i == i):\n                r.append(i)\n            else:\n                r.extend([i, n // i])\n    return r\ndef divn(n, primes):\n    divs_number = 1\n    for i in primes:\n        if n == 1:\n            return divs_number\n        t = 1\n        while n % i == 0:\n            t += 1\n            n //= i\n        divs_number *= t\ndef prime(n):\n    if n == 2: return True\n    if n % 2 == 0 or n <= 1: return False\n    sqr = int(math.sqrt(n)) + 1\n    for d in range(3, sqr, 2):\n        if n % d == 0: return False\n    return True\ndef convn(number, base):\n    newnumber = 0\n    while number > 0:\n        newnumber += number % base\n        number //= base\n    return newnumber\ndef cdiv(n, k): return n // k + (n % k != 0)\n\n\nn = ii()\na = li()\nb = sorted(a)\nans = 0\nfor i in range(n):\n    if a[i] != b[i]:\n        ans += 1\nif ans == 0 or ans == 2:\n    print('YES')\nelse:\n    print('NO')\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.math.*;\nimport java.util.regex.*;\nimport java.math.BigInteger;\nimport java.math.RoundingMode;\npublic class a {\n    public static int vertices=0;\n    public static void main(String[] args) {\n       Scanner s = new Scanner(System.in);\n       int n=s.nextInt();\n       int a[]=new int[n];\n        int sum=0;\n        int b[]=new int[n];\n        for(int i=0;i<n;i++){\n            a[i]=s.nextInt();\n            b[i]=a[i];\n        }\n        Arrays.sort(b);\n        for(int i=0;i<n;i++){\n            if(b[i]!=a[i])\n                sum++;\n        }\n        if(sum>2)\n            System.out.println(\"NO\");\n        else\n            System.out.println(\"YES\");\n        \n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  while (cin >> n) {\n    int *arr = new int[n];\n    int *sorted = new int[n];\n    for (int i = 0; i < n; i++) {\n      cin >> arr[i];\n      sorted[i] = arr[i];\n    }\n    int c = 0;\n    sort(sorted, sorted + n);\n    for (int i = 0; i < n; i++) {\n      if (arr[i] != sorted[i]) {\n        c++;\n      }\n    }\n    if (c <= 2) {\n      cout << \"YES\" << endl;\n    } else {\n      cout << \"NO\" << endl;\n    }\n    delete[] arr;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.math.BigInteger;\nimport java.util.Arrays;\nimport java.util.InputMismatchException;\nimport java.util.StringTokenizer;\n\npublic class C221 {\n    static class FastWriter {\n        private final BufferedWriter bw;\n\n        public FastWriter() {\n            this.bw = new BufferedWriter(new OutputStreamWriter(System.out));\n        }\n\n        public void print(Object object) throws IOException {\n            bw.append(\"\" + object);\n        }\n\n        public void println(Object object) throws IOException {\n            print(object);\n            bw.append(\"\\n\");\n        }\n\n        public void close() throws IOException {\n            bw.close();\n        }\n    }\n\n    static class FastReader {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public FastReader() {\n            br = new BufferedReader(new InputStreamReader(System.in));\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreElements()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return st.nextToken();\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        String nextLine() {\n            String str = \"\";\n            try {\n                str = br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n\n        BigInteger nextBigInteger() {\n            try {\n                return new BigInteger(nextLine());\n            } catch (NumberFormatException e) {\n                throw new InputMismatchException();\n            }\n        }\n    }\n\n    public static void main(String[] args) {\n        FastReader fr = new FastReader();\n        FastWriter fw = new FastWriter();\n        int n = fr.nextInt();\n        int[] arr = new int[n];\n        int[] arrsort = new int[n];\n        for (int i = 0; i < arr.length; i++) {\n            arr[i] = fr.nextInt();\n            arrsort[i] = arr[i];\n        }\n        Arrays.sort(arrsort);\n        int count = 0;\n        for (int i = 0; i < arr.length; i++) {\n            if (arr[i] != arrsort[i]) count++;\n        }\n        if (count > 2) System.out.println(\"NO\");\n        else System.out.println(\"YES\");\n\n    }\n}\n"
        },
        {
            "language": 1,
            "solution": "def main():\n    n = int(raw_input())\n    data = map(int, raw_input().split())\n    data1 = sorted(data)\n\n    count = 0\n    for i in xrange(n):\n        if data[i] != data1[i]:\n            count += 1\n    if count == 0 or count == 2:\n        print \"YES\"\n    else:\n        print \"NO\"\n\n\nif __name__ == '__main__':\n    main()\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.StringTokenizer;\npublic class cf220a {\n  public static void main(String[] args) {\n    FastScanner in = new FastScanner(System.in);\n    int n = in.nextInt();\n    int[] v = new int[n];\n    Integer[] w = new Integer[n];\n    for(int i=0; i<n; i++)\n      v[i] = w[i] = in.nextInt();\n    Arrays.sort(w);\n    ArrayList<Integer> diff = new ArrayList<Integer>();\n    for(int i=0; i<n; i++)\n      if(v[i] != w[i])\n        diff.add(i);\n    if(diff.size() == 0) {\n      System.out.println(\"YES\");\n    }\n    else if(diff.size() != 2) {\n      System.out.println(\"NO\");\n    }\n    else {\n      if(v[diff.get(0)] == w[diff.get(1)])\n        System.out.println(\"YES\");\n      else\n        System.out.println(\"NO\");\n    }\n  }\n  static class FastScanner {\n    BufferedReader br;\n    StringTokenizer st;\n    \n    public FastScanner(InputStream in) {\n      br = new BufferedReader(new InputStreamReader(in));\n      scanLine();\n    }\n    public void scanLine() {\n      try {\n        st = new StringTokenizer(br.readLine().trim());\n      } catch(Exception e) {\n        throw new RuntimeException(e.getMessage());\n      }\n    }\n    public int numTokens() {\n      if(!st.hasMoreTokens()) {\n        scanLine();\n        return numTokens();\n      }\n      return st.countTokens();\n    }\n    public String next() {\n      if(!st.hasMoreTokens()) {\n        scanLine();\n        return next();\n      }\n      return st.nextToken();\n    }\n    public double nextDouble() {\n      return Double.parseDouble(next());\n    }\n    public long nextLong() {\n      return Long.parseLong(next());\n    }\n    public int nextInt() {\n      return Integer.parseInt(next());\n    }\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid file() {}\nvoid fast() {\n  std::ios_base::sync_with_stdio(0);\n  cin.tie(NULL);\n  cout.tie(NULL);\n}\nlong long gcd(long long a, long long b) { return !b ? a : gcd(b, a % b); }\nlong long lcm(long long a, long long b) { return (a / gcd(a, b)) * b; }\nint dx[] = {0, 0, 1, -1, 1, 1, -1, -1};\nint dy[] = {1, -1, 0, 0, 1, -1, 1, -1};\nint main() {\n  file();\n  fast();\n  int n;\n  cin >> n;\n  vector<int> a(n), s;\n  for (int i = 0; i < n; i++) cin >> a[i];\n  s = a;\n  sort(s.begin(), s.end());\n  vector<int> v;\n  for (int i = 0; i < n && v.size() < 5; i++)\n    if (a[i] != s[i]) v.push_back(i);\n  if (v.size() == 0) {\n    cout << \"YES\";\n    return 0;\n  }\n  if (v.size() != 2) {\n    cout << \"NO\";\n    return 0;\n  }\n  if (a[v[0]] == s[v[1]] && a[v[1]] == s[v[0]])\n    cout << \"YES\";\n  else\n    cout << \"NO\";\n}\n"
        },
        {
            "language": 1,
            "solution": "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport sys\n\ndef leap(a,n=None):\n  count = 0\n  for i,n in enumerate(sorted(a)):\n      if n != a[i]:\n        count = count + 1\n      if count > 2:  return \"NO\"\n  return \"YES\"\n\nif __name__ == \"__main__\":\n    data = sys.stdin.readlines()\n    n = int(data[0])\n    a = map(int, data[1].split())\n    print leap(a, n)"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int oo = (int)1e9;\nconst double PI = 2 * acos(0.0);\nconst double eps = 1e-9;\nint main() {\n  int n;\n  while (cin >> n) {\n    vector<int> v(n);\n    for (int i = 0; i < (int)(n); i++) cin >> v[i];\n    vector<int> b = v;\n    sort(b.begin(), b.end());\n    int cnt = 0;\n    for (int i = 0; i < (int)(n); i++) cnt += v[i] != b[i];\n    if (cnt <= 2)\n      cout << \"YES\" << endl;\n    else\n      cout << \"NO\" << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.Arrays;\nimport java.util.Scanner;\n\npublic class C {\n    public static void main(String[] args) {\n        Scanner sc=new Scanner(System.in);\n        Integer[] ar=new Integer[sc.nextInt()];\n        Integer[] sortedAr=new Integer[ar.length];\n        for(int i=0;i<ar.length;i++){\n            ar[i]=sc.nextInt();\n            sortedAr[i]=ar[i];\n        }\n        Arrays.sort(sortedAr);\n        int misMatchCnt=0;\n        for(int i=0;i<ar.length;i++){\n            if(!ar[i].equals(sortedAr[i])) misMatchCnt++;\n        }\n        if(misMatchCnt==0||misMatchCnt==2){\n            System.out.println(\"YES\");\n        }else{\n            System.out.println(\"NO\");\n        }\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long MOD = 1e9 + 7;\nconst int infi = INT_MAX;\nconst long long infll = LLONG_MAX;\nconst long double PI = 3.1415926535897932384626;\nvoid solve(int test_case) {\n  int n;\n  cin >> n;\n  vector<int> v;\n  vector<int> v2;\n  for (int i = 0; i < n; ++i) {\n    int t;\n    cin >> t;\n    v.push_back(t);\n    v2.push_back(t);\n  }\n  sort((v2).begin(), (v2).end());\n  int cnt = 0;\n  for (int i = 0; i < n; ++i) {\n    if (v[i] != v2[i]) ++cnt;\n  }\n  if (cnt <= 2)\n    cout << \"YES\";\n  else\n    cout << \"NO\";\n}\nint main() {\n  ios_base ::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  int tc = 1;\n  while (tc--) solve(tc);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  vector<int> a, b;\n  while (n--) {\n    int c;\n    cin >> c;\n    a.push_back(c);\n    b.push_back(c);\n  }\n  sort(a.begin(), a.end());\n  int diffs = 0;\n  for (int i = 0; i < (int)a.size(); ++i) {\n    if (a[i] != b[i]) {\n      diffs++;\n    }\n  }\n  if (diffs <= 2) {\n    cout << \"YES\" << endl;\n  } else {\n    cout << \"NO\" << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.lang.*;\nimport java.io.*;\n\npublic class hello {\n\t\n\tpublic static void main(String[] args)throws IOException {\n\t\tint n = nextInt();\n\t\tint ara[ ] = new int[n];\n\t\tint bara[ ] = new int[n];\n\t\t\n\t\tfor(int i = 0;i<n;i++){\n\t\t\tara[i] = nextInt();\n\t\t\tbara[i] = ara[i];\n\t\t}\n\t\tArrays.sort(bara);\n\t\tint sw = 0;\n\t\tfor(int i = 0;i<n;i++){\n\t\t\tif(ara[i]!=bara[i])sw++;\n\t\t\tif(sw>2){\n\t\t\t\tSystem.out.println(\"NO\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(\"YES\");\n\t\t\n\t\t\n\t}\n\t   static BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\n       static StringTokenizer tokenizer = new StringTokenizer(\"\");\n       static String next() throws IOException {while (!tokenizer.hasMoreTokens()) {String n = reader.readLine();if (n == null) {return null;}tokenizer = new StringTokenizer(n);}return tokenizer.nextToken();}\n       static String nextLine() throws IOException {return reader.readLine();}\n       static Integer nextInt() throws IOException {String next = next();if (next == null) {return null;}return Integer.parseInt(next);}\n       static long nextLong() throws IOException {return Long.parseLong(next());}\n       static Double nextDouble() throws IOException {return Double.parseDouble(next());}\n\n}\n"
        },
        {
            "language": 1,
            "solution": "n = int(raw_input())\na = map(int, raw_input().split())\nif n == 2:\n\tprint \"YES\"\nelse:\n\tcount = 0 \n\tx = sorted(a)\n\tfor i in range(n):\n\t\tif x[i] != a[i]:\n\t\t\tcount += 1\n\t\tif count >= 3:\n\t\t\tprint \"NO\"\n\t\t\texit(0)\n\tprint \"YES\"\n\t\t\n"
        },
        {
            "language": 1,
            "solution": "\n'''\nCreated on 2012-9-1\n\n@author: gaoxun\n'''\nnum = input()\nsortedA = [int(i) for i in raw_input().split()]\ncount = 0\nflag = False\nliB = sortedA[:]\nliB.sort()\nfor i in range(len(liB)):\n    if liB[i] != sortedA[i]:\n        count += 1\n        \nif count <= 2:\n    print \"YES\"\nelse:\n    print \"NO\"\n\n"
        },
        {
            "language": 1,
            "solution": "import copy\nn = input()\nl = map(int, raw_input().split())\nr = copy.deepcopy(l)\nr.sort()\ncnt = 0\nfor i in range(len(r)):\n    if l[i] != r[i]:\n        cnt += 1\nif cnt == 2 or cnt == 0:\n    print 'YES'\nelse:\n    print 'NO'"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\nimport java.math.*;\n\npublic class Main {\n    static StringTokenizer st;\n    static PrintWriter out = new PrintWriter(System.out,true);\n    static BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n\n    public static void main(String[] args) throws Exception {\n        int n = readInt();\n        int[] m1  = new int[n];\n        int[] m2 = new int[n];\n        for(int i = 0;i < n;i++) {\n            m1[i] = readInt();\n            m2[i] = m1[i];\n        }\n        Random r = new Random();\n        for(int i = 0;i < 10;i++) {\n            int ind1 = r.nextInt(n);\n            int ind2 = r.nextInt(n);\n            int c = m1[ind1];\n            m1[ind1] =  m1[ind2];\n            m1[ind2] = c;\n        }\n        Arrays.sort(m1);\n        int c = 0;\n        for(int i = 0;i < n;i++) {\n            if(m1[i] != m2[i]) c++;\n        }\n        if(c > 2) out.println(\"NO\");\n        else out.println(\"YES\");\n    }\n\n    public static boolean func(int x, int n) {\n        int[] dig = new int[10];\n        while(x != 0) {\n            dig[x%10]++;\n            x /= 10;\n        }\n        while(n != 0) {\n            if(dig[n%10] > 0) return true;\n            n /= 10;\n        }\n        return false;\n    }\n\n    public static int readInt() throws Exception {\n        if(st == null || !st.hasMoreTokens()) st = new StringTokenizer(in.readLine());\n        return Integer.parseInt(st.nextToken());\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  vector<int> a(n), b(n), diff;\n  for (int i = 0; i < n; ++i) {\n    cin >> a[i];\n    b[i] = a[i];\n  }\n  sort(b.begin(), b.end());\n  for (int i = 0; i < n; ++i)\n    if (a[i] != b[i]) diff.push_back(i);\n  if (diff.size() == 0) {\n    cout << \"YES\" << endl;\n    return 0;\n  }\n  if (diff.size() > 2 || diff.size() == 1) {\n    cout << \"NO\" << endl;\n    return 0;\n  }\n  if (a[diff[0]] == b[diff[1]] && a[diff[1]] == b[diff[0]]) {\n    cout << \"YES\" << endl;\n    return 0;\n  }\n  cout << \"NO\" << endl;\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.lang.*;\nimport java.io.*;\nimport java.awt.Point;\n\n// SHIVAM GUPTA :\n//NSIT\n//decoder_1671\n\n// STOP NOT TILL IT IS DONE OR U DIE .\n\n// U KNOW THAT IF THIS DAY WILL BE URS THEN NO ONE CAN DEFEAT U HERE................\n\n// ASCII = 48 + i ;// 2^28 = 268,435,456  > 2* 10^8 // log 10 base 2 = 3.3219 \n\n// odd:: (x^2+1)/2 , (x^2-1)/2 ; x>=3// even:: (x^2/4)+1 ,(x^2/4)-1  x >=4 \n\n// FOR ANY ODD NO N : N,N-1,N-2\n//ALL ARE PAIRWISE COPRIME \n//THEIR COMBINED LCM IS PRODUCT OF ALL THESE NOS\n\n// two consecutive odds are always coprime to each other\n// two consecutive even have always gcd  = 2 ;\n\npublic class Main\n{\n     // static int[] arr = new int[100002] ; // static int[] dp = new int[100002] ;  \n    \n     static PrintWriter out;\n    \n\tstatic class FastReader{\n\t\tBufferedReader br;\n\t\tStringTokenizer st;\n\t\tpublic FastReader(){\n\t\t\tbr=new BufferedReader(new InputStreamReader(System.in));\n\t\t\tout=new PrintWriter(System.out);\n\t\t}\n\t\tString next(){\n\t\t\twhile(st==null || !st.hasMoreElements()){\n\t\t\t\ttry{\n\t\t\t\t\tst= new StringTokenizer(br.readLine());\n\t\t\t\t}\n\t\t\t\tcatch (IOException e){\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\t\tint nextInt(){\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\t\tlong nextLong(){\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\t\tdouble nextDouble(){\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\t\tString nextLine(){\n\t\t\tString str = \"\";\n\t\t\ttry{\n\t\t\t\tstr=br.readLine();\n\t\t\t}\n\t\t\tcatch(IOException e){\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\treturn str;\n\t\t}\n\t}\n\t\n\n\n////////////////////////////////////////////////////////////////////////////////////\n public static int countDigit(long n) \n    { \n        return (int)Math.floor(Math.log10(n) + 1); \n    } \n\n///////////////////////////////////////////////////////////////////////////////////////// \n \n public static int sumOfDigits(long n)\n {\n  \n  if( n< 0)return -1 ;\n  \n  int sum = 0;\n  \n  while( n > 0)\n  {\n      sum = sum + (int)( n %10) ;\n      \n      n /= 10 ;\n  }\n     \n  return sum ;  \n \n \n \n }\n \n //////////////////////////////////////////////////////////////////////////////////////////////////\n\npublic static long arraySum(int[] arr , int start , int end)\n{\n    long ans = 0 ;\n    \n    for(int i = start ; i <= end  ; i++)ans += arr[i] ;\n    \n    return ans  ;\n}\n\n/////////////////////////////////////////////////////////////////////////////////\n\npublic static int mod(int x)\n{\n      if(x <0)return -1*x ;\n      else return x ;\n}\npublic static long mod(long x)\n{\n      if(x <0)return -1*x ;\n      else return x ;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\npublic static void swapArray(int[] arr , int start , int end)\n{\n    while(start < end)\n    {\n        int temp = arr[start] ;\n        arr[start] = arr[end];\n        arr[end] = temp;\n        start++ ;end-- ;\n    }\n}\n\n\n//////////////////////////////////////////////////////////////////////////////////\n\n\npublic static int[][] rotate(int[][] input){\n\nint n =input.length;\nint m = input[0].length ;\nint[][] output = new int [m][n];\n\nfor (int i=0; i<n; i++)\n\tfor (int j=0;j<m; j++)\n\t\toutput [j][n-1-i] = input[i][j];\nreturn output;\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////\n\npublic static int countBits(long n) \n    {  \n        int count = 0; \n        while (n != 0) \n        { \n            count++; \n            n = (n) >> (1L) ;\n        } \n          \n        return count;   \n        \n    } \n/////////////////////////////////////////// ////////////////////////////////////////////////   \n\npublic static boolean isPowerOfTwo(long n) \n{ \n    if(n==0) \n    return false; \n  \nif(((n ) & (n-1)) == 0 ) return true ;\nelse return false  ;\n\n} \n\n/////////////////////////////////////////////////////////////////////////////////////\n\npublic static int  min(int a ,int b , int c, int d)\n{\n     int[] arr = new int[4] ;\n      arr[0] = a;arr[1] = b ;arr[2] = c;arr[3] = d;Arrays.sort(arr) ;\n      \n      return arr[0];\n}\n /////////////////////////////////////////////////////////////////////////////\npublic static int  max(int a ,int b , int c, int d)\n{\n     int[] arr = new int[4] ;\n      arr[0] = a;arr[1] = b ;arr[2] = c;arr[3] = d;Arrays.sort(arr) ;\n      \n      return arr[3];\n}\n \n/////////////////////////////////////////////////////////////////////////////////// \n\npublic static String reverse(String input)\n{\n  StringBuilder str  = new StringBuilder(\"\") ;\n   \n    for(int i =input.length()-1 ; i >= 0  ; i-- )\n    {\n        str.append(input.charAt(i));\n    }\n    \nreturn str.toString() ;\n}\n///////////////////////////////////////////////////////////////////////////////////////////\n\npublic static boolean sameParity(long a  ,long b )\n{\n     long x = a% 2L; long y = b%2L ;\n     if(x==y)return true  ;\n     else return false  ;\n}\n\n\n////////////////////////////////////////////////////////////////////////////////////////////////////\npublic static boolean isPossibleTriangle(int a  ,int b , int c)\n{\n      if( a + b > c && c+b > a && a +c > b)return true  ;\n      else return false  ;\n}\n\n\n////////////////////////////////////////////////////////////////////////////////////////////\nstatic long xnor(long num1, long num2) {\n\t\tif (num1 < num2) {\n\t\t\tlong temp = num1;\n\t\t\tnum1 = num2;\n\t\t\tnum2 = temp;\n\t\t}\n\t\tnum1 = togglebit(num1);\n\t\treturn num1 ^ num2;\n\t}\n\n\tstatic long togglebit(long n) {\n\t\tif (n == 0)\n\t\t\treturn 1;\n\t\tlong i = n;\n\t\tn |= n >> 1;\n\t\tn |= n >> 2;\n\t\tn |= n >> 4;\n\t\tn |= n >> 8;\n\t\tn |= n >> 16;\n\t\treturn i ^ n;\n\t}\n\n///////////////////////////////////////////////////////////////////////////////////////////////\n\npublic static int xorOfFirstN(int n)\n{\n \n \n if( n % 4 ==0)return n ;\n \n else if( n % 4 == 1)return 1 ;\n \n else if( n % 4 == 2)return n+1 ;\n \n else return 0 ;\n \n    \n}\n//////////////////////////////////////////////////////////////////////////////////////////////\n\npublic static int gcd(int a, int b )\n{\n\nif(b==0)return a ;\n\nelse return gcd(b,a%b) ; \n\n}\n\n\npublic static long gcd(long a, long b )\n{\n\nif(b==0)return a ;\n\nelse return gcd(b,a%b) ; \n\n}\n\n////////////////////////////////////////////////////////////////////////////////////\n\npublic static int lcm(int a, int b ,int c , int d )\n{\n\nint temp = lcm(a,b , c) ;\n\n\n \n int ans = lcm(temp ,d ) ;\n\nreturn ans  ;\n\n\n}\n\n///////////////////////////////////////////////////////////////////////////////////////////\n\npublic static int lcm(int a, int b ,int c )\n{\n\nint temp = lcm(a,b) ;\n\nint ans =  lcm(temp ,c) ;\n\nreturn ans  ;\n\n\n}\n\n////////////////////////////////////////////////////////////////////////////////////////\n    \npublic static int lcm(int a , int b )\n{\n\nint gc = gcd(a,b);\n\nreturn (a*b)/gc ;\n}\n\n\npublic static long lcm(long a , long b )\n{\n\nlong gc = gcd(a,b);\n\nreturn (a*b)/gc ;\n}\n\n\n///////////////////////////////////////////////////////////////////////////////////////////\nstatic boolean isPrime(long n)\n{\n      if(n==1)\n      {\n            return false  ;\n      }\n      \n      boolean ans =  true  ;\n      \n      for(long i = 2L; i*i <= n ;i++)\n      {\n            if(n% i ==0)\n            {\n                  ans = false  ;break ;\n            }\n      }\n      \n      \n      return ans  ;\n}      \n///////////////////////////////////////////////////////////////////////////\n\nstatic int sieve =  1000000 ;\n\n \nstatic boolean[] prime =  new boolean[sieve + 1] ;\n\npublic static void sieveOfEratosthenes() \n    { \n        // FALSE == prime\n        \n        // TRUE ==  COMPOSITE\n        \n        // FALSE== 1\n       \n        \n        // time complexity = 0(NlogLogN)== o(N)\n        \n        // gives prime nos bw 1 to N\n        \n        for(int i = 4; i<= sieve ; i++)\n        {\n            prime[i] = true  ;\n            i++ ;\n        }\n        \n        for(int p = 3; p*p <= sieve; p++) \n        { \n           \n            if(prime[p] == false) \n            { \n                \n                for(int i = p*p; i <= sieve; i += p) \n                    prime[i] = true; \n            } \n            \n            p++ ;\n        } \n          \n       \n       \n    \n    } \n \n///////////////////////////////////////////////////////////////////////////////////\n\n\npublic static void sortD(int[] arr , int s  , int e)\n{\n      sort(arr ,s , e) ;\n      \n      int i =s ; int j = e  ;\n      \n      while( i < j)\n      {\n            int temp = arr[i] ;\n            arr[i] =arr[j] ;\n            arr[j] = temp ;\n            i++ ; j-- ;\n      }\n      \n      \n      \n      return ;\n}\n\npublic static void sortD(long[] arr , int s  , int e)\n{\n      sort(arr ,s , e) ;\n      \n      int i =s ; int j = e  ;\n      \n      while( i < j)\n      {\n            long temp = arr[i] ;\n            arr[i] =arr[j] ;\n            arr[j] = temp ;\n            i++ ; j-- ;\n      }\n      \n      \n      \n      return ;\n}\n\n\n/////////////////////////////////////////////////////////////////////////////////////////\n\npublic static long countSubarraysSumToK(long[] arr ,long sum )\n    {\n      HashMap<Long,Long> map = new HashMap<>() ;\n       \n      int n = arr.length ;\n       \n      long prefixsum = 0 ;\n       \n      long count = 0L ;\n      for(int i  = 0; i < n ; i++)\n      {\n          prefixsum  = prefixsum +  arr[i] ;\n           \n          if(sum == prefixsum)count = count+1 ;\n           \n          if(map.containsKey(prefixsum -sum))\n          {\n              count = count + map.get(prefixsum -sum) ;\n          }\n          \n          \n          if(map.containsKey(prefixsum ))\n          {\n              map.put(prefixsum , map.get(prefixsum) +1 );\n          }\n          \n          else{\n              map.put(prefixsum , 1L );\n          }\n           \n           \n      }\n        \n        \n        \n      return count  ;  \n        \n    }\n\n///////////////////////////////////////////////////////////////////////////////////////////////\n\n\n// KMP ALGORITHM : TIME COMPL:O(N+M) \n// FINDS THE OCCURENCES OF PATTERN AS A  SUBSTRING IN STRING\n//RETURN THE ARRAYLIST OF INDEXES \n// IF SIZE OF LIST IS ZERO MEANS PATTERN IS NOT PRESENT IN STRING\n\n\npublic static ArrayList<Integer> kmpAlgorithm(String str , String pat)\n     {\n        ArrayList<Integer> list =new ArrayList<>();\n        \n        int n = str.length() ;\n        int m = pat.length() ;\n        \n        String q = pat + \"#\" + str ;\n        \n        int[] lps  =new int[n+m+1] ;\n        \n         longestPefixSuffix(lps, q,(n+m+1)) ;\n         \n         \n         for(int i =m+1 ; i < (n+m+1) ; i++ )\n         {\n             if(lps[i] == m)\n             {\n                 list.add(i-2*m) ;\n             }\n         }\n        \n        return list ; \n         \n        \n    }\n    \n\npublic static void longestPefixSuffix(int[] lps ,String str , int n)\n    {\n        lps[0] =  0 ;\n        \n        for(int i = 1  ; i<= n-1; i++)\n        {\n          int l = lps[i-1] ;\n           \n          while( l > 0 && str.charAt(i) != str.charAt(l))\n          {\n              l = lps[l-1] ;\n          }\n           \n          if(str.charAt(i) == str.charAt(l))\n          {\n              l++ ;\n          }\n            \n           \n          lps[i] = l ; \n        }\n        \n    }\n    \n     \n\n///////////////////////////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////////////////////////\n\n // CALCULATE TOTIENT Fn FOR ALL VALUES FROM 1 TO n\n    // TOTIENT(N) = count of nos less than n and grater than 1 whose gcd with n is 1 \n    // or n and the no  will be coprime in nature\n    //time : O(n*(log(logn)))\n    \n    public static void eulerTotientFunction(int[] arr ,int n )\n    {\n      \n      for(int i = 1; i <= n  ;i++)arr[i] =i  ;\n      \n      \n      for(int i= 2 ; i<= n ;i++)\n      {\n          if(arr[i] == i)\n          {\n              arr[i] =i-1 ;\n              \n              for(int j =2*i ; j<= n  ; j+= i )\n              {\n                  arr[j] = (arr[j]*(i-1))/i ;\n              }\n              \n          }\n      }\n        \n      return  ;  \n        \n    }\n\t\n/////////////////////////////////////////////////////////////////////////////////////////////\npublic static long nCr(int n,int k)\n{\n    long ans=1L;\n    k=k>n-k?n-k:k;\n    int j=1;\n    for(;j<=k;j++,n--)\n    {\n        if(n%j==0)\n        {\n            ans*=n/j;\n        }else\n        if(ans%j==0)\n        {\n            ans=ans/j*n;\n        }else\n        {\n            ans=(ans*n)/j;\n        }\n    }\n    return ans;\n}\n\n///////////////////////////////////////////////////////////////////////////////////////////\n\npublic static ArrayList<Integer> allFactors(int n)\n{   \n      ArrayList<Integer> list = new ArrayList<>() ;\n      \n    for(int i = 1; i*i <= n ;i++)\n    {\n          if( n % i == 0)\n          {\n              if(i*i == n)\n              {\n                    list.add(i) ;\n              }\n              else{\n                    list.add(i) ;\n                    list.add(n/i) ;\n                    \n              }\n          }\n    }\n      \n     return list ; \n      \n      \n}\n\n\npublic static ArrayList<Long> allFactors(long n)\n{   \n      ArrayList<Long> list = new ArrayList<>() ;\n      \n    for(long i = 1L; i*i <= n ;i++)\n    {\n          if( n % i == 0)\n          {\n              if(i*i == n)\n              {\n                    list.add(i) ;\n              }\n              else{\n                    list.add(i) ;\n                    list.add(n/i) ;\n                    \n              }\n          }\n    }\n      \n     return list ; \n      \n      \n}\n////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  static final int MAXN = 10000001; \n       \n    \n    static int spf[] = new int[MAXN]; \n   \n    static void sieve() \n    { \n        spf[1] = 1; \n        for (int i=2; i<MAXN; i++) \n       \n           \n            spf[i] = i; \n       \n       \n        for (int i=4; i<MAXN; i+=2) \n            spf[i] = 2; \n       \n        for (int i=3; i*i<MAXN; i++) \n        { \n           \n            if (spf[i] == i) \n            { \n               \n                for (int j=i*i; j<MAXN; j+=i) \n       \n                    if (spf[j]==j) \n                        spf[j] = i; \n            } \n        } \n    } \n       \n// The above code works well for n upto the order of 10^7.\n// Beyond this we will face memory issues.\n\n// Time Complexity: The precomputation for smallest prime factor is done in O(n log log n)\n// using sieve.\n// Where as in the calculation step we are dividing the number every time by \n// the smallest prime number till it becomes 1.\n// So, let\u2019s consider a worst case in which every time the SPF is 2 .\n// Therefore will have log n division steps.\n\n\n// Hence, We can say that our Time Complexity will be O(log n) in worst case.\n\n\n    static Vector<Integer> getFactorization(int x) \n    { \n        Vector<Integer> ret = new Vector<>(); \n        while (x != 1) \n        { \n            ret.add(spf[x]); \n            x = x / spf[x]; \n        } \n        return ret; \n    } \n       \n //////////////////////////////////////////////////////////////////////////////////////////////////\n //////////////////////////////////////////////////////////////////////////////////////////////////\n   \npublic static void merge(int arr[], int l, int m, int r)\n    {\n        // Find sizes of two subarrays to be merged\n        int n1 = m - l + 1;\n        int n2 = r - m;\n \n        /* Create temp arrays */\n        int L[] = new int[n1];\n        int R[] = new int[n2];\n \n      //Copy data to temp arrays\n        for (int i=0; i<n1; ++i)\n            L[i] = arr[l + i];\n        for (int j=0; j<n2; ++j)\n            R[j] = arr[m + 1+ j];\n \n \n        /* Merge the temp arrays */\n \n        // Initial indexes of first and second subarrays\n        int i = 0, j = 0;\n \n        // Initial index of merged subarry array\n        int k = l;\n        while (i < n1 && j < n2)\n        {\n            if (L[i] <= R[j])\n            {\n                arr[k] = L[i];\n                i++;\n            }\n            else\n            {\n                arr[k] = R[j];\n                j++;\n            }\n            k++;\n        }\n \n        /* Copy remaining elements of L[] if any */\n        while (i < n1)\n        {\n            arr[k] = L[i];\n            i++;\n            k++;\n        }\n \n        /* Copy remaining elements of R[] if any */\n        while (j < n2)\n        {\n            arr[k] = R[j];\n            j++;\n            k++;\n        }\n    }\n \n    // Main function that sorts arr[l..r] using\n    // merge()\n  public static void sort(int arr[], int l, int r)\n    {\n        if (l < r)\n        {\n            // Find the middle point\n            int m = (l+r)/2;\n \n            // Sort first and second halves\n            sort(arr, l, m);\n            sort(arr , m+1, r);\n \n            // Merge the sorted halves\n            merge(arr, l, m, r);\n        }\n    }\n\npublic static void sort(long arr[], int l, int r)\n    {\n        if (l < r)\n        {\n            // Find the middle point\n            int m = (l+r)/2;\n \n            // Sort first and second halves\n            sort(arr, l, m);\n            sort(arr , m+1, r);\n \n            // Merge the sorted halves\n            merge(arr, l, m, r);\n        }\n    }\n\n\npublic static void merge(long arr[], int l, int m, int r)\n    {\n        // Find sizes of two subarrays to be merged\n        int n1 = m - l + 1;\n        int n2 = r - m;\n \n        /* Create temp arrays */\n        long L[] = new long[n1];\n        long R[] = new long[n2];\n \n        //Copy data to temp arrays\n        for (int i=0; i<n1; ++i)\n            L[i] = arr[l + i];\n        for (int j=0; j<n2; ++j)\n            R[j] = arr[m + 1+ j];\n \n \n        /* Merge the temp arrays */\n \n        // Initial indexes of first and second subarrays\n        int i = 0, j = 0;\n \n        // Initial index of merged subarry array\n        int k = l;\n        while (i < n1 && j < n2)\n        {\n            if (L[i] <= R[j])\n            {\n                arr[k] = L[i];\n                i++;\n            }\n            else\n            {\n                arr[k] = R[j];\n                j++;\n            }\n            k++;\n        }\n \n        /* Copy remaining elements of L[] if any */\n        while (i < n1)\n        {\n            arr[k] = L[i];\n            i++;\n            k++;\n        }\n \n        /* Copy remaining elements of R[] if any */\n        while (j < n2)\n        {\n            arr[k] = R[j];\n            j++;\n            k++;\n        }\n    }\n \n\n /////////////////////////////////////////////////////////////////////////////////////////\n \n\tpublic static long knapsack(int[] weight,long value[],int maxWeight){\n\n        \n        int n=  value.length ;\n        \n\t\n\t//dp[i] stores the profit with KnapSack capacity \"i\" \n  long []dp = new long[maxWeight+1]; \n      \n    //initially profit with 0 to W KnapSack capacity is 0 \n    Arrays.fill(dp, 0); \n  \n    // iterate through all items \n    for(int i=0; i < n; i++)  \n      \n        //traverse dp array from right to left \n        for(int j = maxWeight; j >= weight[i]; j--) \n            dp[j] = Math.max(dp[j] , value[i] + dp[j - weight[i]]); \n              \n    /*above line finds out maximum of dp[j](excluding ith element value) \n    and val[i] + dp[j-wt[i]] (including ith element value and the \n    profit with \"KnapSack capacity - ith element weight\") */\n    return dp[maxWeight]; \n\t}\n\n///////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////////\n\n\n// to return max sum of any subarray in given array\npublic static long kadanesAlgorithm(long[] arr)\n{\n      long[] dp = new long[arr.length] ;\n      \n      dp[0] = arr[0] ;\n      long max =  dp[0] ;\n      \n      \n      for(int i = 1; i <  arr.length ; i++)\n      {\n            if(dp[i-1] > 0)\n            {\n                  dp[i] = dp[i-1] + arr[i] ;\n            }\n            else{\n                  dp[i] = arr[i] ;\n            }\n            \n            if(dp[i] >  max)max = dp[i] ;\n            \n      }\n      \n      return max  ;\n      \n}\n/////////////////////////////////////////////////////////////////////////////////////////////\npublic static long kadanesAlgorithm(int[] arr)\n{\n      long[] dp = new long[arr.length] ;\n      \n      dp[0] = arr[0] ;\n      long max =  dp[0] ;\n      \n      \n      for(int i = 1; i <  arr.length ; i++)\n      {\n            if(dp[i-1] > 0)\n            {\n                  dp[i] = dp[i-1] + arr[i] ;\n            }\n            else{\n                  dp[i] = arr[i] ;\n            }\n            \n            if(dp[i] >  max)max = dp[i] ;\n            \n      }\n      \n      return max  ;\n      \n}\n\n      \n///////////////////////////////////////////////////////////////////////////////////////\n\n\n\n/////////////////////////////////////////////////////////////////////////////////////////\n\npublic static long binarySerachGreater(int[] arr , int start , int end , int val)\n{\n      \n      // fing total no of elements strictly grater than val in sorted array arr \n      \n      \n      if(start >  end)return  0 ; //Base case\n      \n      \n      int mid = (start + end)/2  ;\n      \n      if(arr[mid] <=val)\n      {\n          return binarySerachGreater(arr,mid+1, end ,val) ; \n            \n      }\n      else{\n            \n         return binarySerachGreater(arr,start , mid -1,val) + end-mid+1 ;    \n            \n      }\n      \n      \n}\n\n//////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////\n\n//TO GENERATE ALL(DUPLICATE ALSO EXIST) PERMUTATIONS OF A STRING\n\n\n// JUST CALL generatePermutation( str,  start,  end) start :inclusive ,end : exclusive \n\n//Function for swapping the characters at position I with character at position j  \n    public static String swapString(String a, int i, int j) {  \n        char[] b =a.toCharArray();  \n        char ch;  \n        ch = b[i];  \n        b[i] = b[j];  \n        b[j] = ch;  \n        return String.valueOf(b);  \n    }  \n      \n//Function for generating different permutations of the string  \n    public static void generatePermutation(String str, int start, int end)  \n    {  \n        //Prints the permutations  \n        if (start == end-1)  \n            System.out.println(str);  \n        else  \n        {  \n            for (int i = start; i < end; i++)  \n            {  \n                //Swapping the string by fixing a character  \n                str = swapString(str,start,i);  \n                //Recursively calling function generatePermutation() for rest of the characters   \n                generatePermutation(str,start+1,end);  \n                //Backtracking and swapping the characters again.  \n                str = swapString(str,start,i);  \n            }  \n        }  \n    }  \n\n\n\n////////////////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n\npublic static long factMod(long n, long mod) {\n    if (n <= 1) return 1;\n    long ans = 1;\n    for (int i = 1; i <= n; i++) {\n      ans = (ans * i) % mod;\n    }\n    return ans;\n  }\n\n\n/////////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////////////////\n\npublic static long power(long x  ,long n)\n    {\n        //time comp : o(logn) \n        \n        if(n==0)return 1L ;\n        if(n==1)return x;\n        \n        long ans =1L  ;\n       \n      while(n>0)\n      {\n          if(n % 2 ==1)\n          {\n              ans = ans *x ;\n          }\n           \n          n /= 2 ;\n           \n          x =  x*x ;\n           \n      }\n       \n      return ans ;\n    }\n\n////////////////////////////////////////////////////////////////////////////////////////////////////\npublic static long powerMod(long x, long n, long mod) {\n    //time comp : o(logn)\n    \n    if(n==0)return 1L ;\n        if(n==1)return x;\n        \n    \n    long ans = 1;\n    while (n > 0) {\n      if (n % 2 == 1) ans = (ans * x) % mod;\n      x = (x * x) % mod;\n      n /= 2;\n    }\n    return ans;\n  }\n \n//////////////////////////////////////////////////////////////////////////////////\n\n/////////////////////////////////////////////////////////////////////////////////\n\n/*\nlowerBound - finds largest element equal or less than value paased\nupperBound - finds smallest element equal or more than value passed\n\nif not present return -1;\n\n*/\n\npublic static long lowerBound(long[] arr,long k)\n\t{\n\t\tlong ans=-1;\n\t\t\n\t\tint start=0;\n\t\tint end=arr.length-1;\n\t\t\n\t\twhile(start<=end)\n\t\t{\n\t\t\tint mid=(start+end)/2;\n\t\t\t\n\t\t\tif(arr[mid]<=k)\n\t\t\t{\n\t\t\t\tans=arr[mid];\n\t\t\t\tstart=mid+1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tend=mid-1;\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn ans;\n\t\t\n\t}\n\t\n\tpublic static int lowerBound(int[] arr,int k)\n\t{\n\t\tint ans=-1;\n\t\t\n\t\tint start=0;\n\t\tint end=arr.length-1;\n\t\t\n\t\twhile(start<=end)\n\t\t{\n\t\t\tint mid=(start+end)/2;\n\t\t\t\n\t\t\tif(arr[mid]<=k)\n\t\t\t{\n\t\t\t\tans=arr[mid];\n\t\t\t\tstart=mid+1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tend=mid-1;\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn ans;\n\t\t\n\t}\n\t\n\t\n\tpublic static long upperBound(long[] arr,long k)\n\t{\n\t\tlong ans=-1;\n\t\t\n\t\tint start=0;\n\t\tint end=arr.length-1;\n\t\t\n\t\twhile(start<=end)\n\t\t{\n\t\t\tint mid=(start+end)/2;\n\t\t\t\n\t\t\tif(arr[mid]>=k)\n\t\t\t{\n\t\t\t\tans=arr[mid];\n\t\t\t\tend=mid-1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstart=mid+1;\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn ans;\n\t}\n\t\n\t\n\tpublic static int upperBound(int[] arr,int k)\n\t{\n\t\tint ans=-1;\n\t\t\n\t\tint start=0;\n\t\tint end=arr.length-1;\n\t\t\n\t\twhile(start<=end)\n\t\t{\n\t\t\tint mid=(start+end)/2;\n\t\t\t\n\t\t\tif(arr[mid]>=k)\n\t\t\t{\n\t\t\t\tans=arr[mid];\n\t\t\t\tend=mid-1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstart=mid+1;\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn ans;\n\t}\n\t\n\n//////////////////////////////////////////////////////////////////////////////////////////\n\npublic static void printArray(int[] arr , int si ,int ei)\n{\n    for(int i = si  ; i  <= ei ; i++)\n    {\n        out.print(arr[i] +\" \") ;\n    }\n    \n}\n\npublic static void printArrayln(int[] arr , int si ,int ei)\n{\n    for(int i = si  ; i  <= ei ; i++)\n    {\n        out.print(arr[i] +\" \") ;\n    }\n    out.println() ;\n}\n\n\npublic static void printLArray(long[] arr , int si , int ei)\n{\n    for(int i = si ; i  <= ei ; i++)\n    {\n        out.print(arr[i] +\" \") ;\n    }\n   \n}\n\n\n\n\npublic static void printLArrayln(long[] arr , int si , int ei)\n{\n    for(int i = si ; i  <= ei ; i++)\n    {\n        out.print(arr[i] +\" \") ;\n    }\n    out.println() ;\n   \n}\n\npublic static void printtwodArray(int[][] ans)\n{\n    for(int i = 0; i< ans.length ; i++)\n    {\n        for(int j  = 0 ; j <  ans[0].length ; j++)out.print(ans[i][j] +\" \");\n        out.println() ;\n    }\n    out.println() ;\n   \n}\n\n  \n  static long modPow(long a, long x, long p) {\n    //calculates a^x mod p in logarithmic time.\n    long res = 1;\n    while(x > 0) {\n        if( x % 2 != 0) {\n            res = (res * a) % p;\n        }\n        a = (a * a) % p;\n        x /= 2;\n    }\n    return res;\n}\n \n \n \n  static long modInverse(long a, long p) {\n    //calculates the modular multiplicative of a mod m.\n    //(assuming p is prime).\n    return modPow(a, p-2, p);\n}\n \n \n \nstatic long modBinomial(long n, long k, long p) {\n// calculates C(n,k) mod p (assuming p is prime).\n \n    long numerator = 1; // n * (n-1) * ... * (n-k+1)\n    for (int i=0; i<k; i++) {\n        numerator = (numerator * (n-i) ) % p;\n    }\n \n    long denominator = 1; // k!\n    for (int i=1; i<=k; i++) {\n        denominator = (denominator * i) % p;\n    }\n \n    // numerator / denominator mod p.\n    return ( numerator* modInverse(denominator,p) ) % p;\n}\n \n\n/////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////////\n\n static ArrayList<Integer>[] tree ;\n// static long[] child;\n// static int mod= 1000000007 ;\n// static int[][] pre  = new int[3001][3001];\n// static int[][] suf = new int[3001][3001] ;\n\n//program to calculate noof nodes in subtree for every vertex including itself \n\n public static void countNoOfNodesInsubtree(int child ,int par , int[] dp)\n {\n     int count = 1 ;\n     \n     for(int x : tree[child])\n     {\n         \n         if(x== par)continue  ;\n         \n         countNoOfNodesInsubtree(x,child,dp) ;\n         \n         count= count +  dp[x]   ;\n     }\n     \n     dp[child] = count ;\n \n }\n\npublic static void depth(int child ,int par , int[] dp , int d )\n {\n    dp[child] =d ;\n     \n     for(int x : tree[child])\n     {\n         \n         if(x== par)continue  ;\n         \n         depth(x,child,dp,d+1) ;\n         \n     }\n \n }\n\npublic static void dfs(int sv , boolean[] vis)\n{\n    vis[sv] = true  ;\n    \n    \n    for(int x : tree[sv])\n    {\n        if( !vis[x])\n        {\n            dfs(x ,vis) ;\n        }\n    }\n    \n    \n    \n    \n}\n\n\n//////////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////////\n\npublic static void solve()\n{\nFastReader scn = new FastReader() ;\n\n//Scanner scn = new Scanner(System.in);\n//int[] store = {2 ,3, 5 , 7  ,11 , 13 , 17 , 19 , 23 , 29 , 31 , 37 } ;\n\n// product of first 11 prime nos is greater than 10 ^ 12;\n\n//ArrayList<Integer> arr[] = new ArrayList[n] ;\nArrayList<Integer> list = new ArrayList<>() ;\nArrayList<Long> listl = new ArrayList<>() ;\nArrayList<Integer> lista = new ArrayList<>() ;\nArrayList<Integer> listb = new ArrayList<>() ;\n//ArrayList<String> lists = new ArrayList<>() ;\n\nHashMap<Integer,Integer> map = new HashMap<>() ;\n//HashMap<Character,Integer> map = new HashMap<>() ;\n//HashMap<Long,Long> map = new HashMap<>() ;\nHashMap<Integer,Integer> map1  = new HashMap<>() ;\nHashMap<Integer,Integer> map2  = new HashMap<>() ;\n//HashMap<String,Integer> maps = new HashMap<>() ;\n//HashMap<Integer,Boolean> mapb = new HashMap<>() ;\n//HashMap<Point,Integer> point = new HashMap<>() ; \n\n//  Set<Long> set = new HashSet<>() ;\nSet<Integer> set = new HashSet<>() ;\n//Set<Character> set = new HashSet<>() ;\n Set<Integer> setx = new HashSet<>() ;\n Set<Integer> sety = new HashSet<>() ;\n\nStringBuilder sb =new StringBuilder(\"\") ;\n\n//Collections.sort(list);\n\n//if(map.containsKey(arr[i]))map.put(arr[i] , map.get(arr[i]) +1 ) ;\n//else map.put(arr[i],1) ;\n\n// if(map.containsKey(temp))map.put(temp , map.get(temp) +1 ) ;\n// else map.put(temp,1) ;\n\n//int bit  =Integer.bitCount(n);\n// gives total no of set bits in n;\n\n// Arrays.sort(arr, new Comparator<Pair>() {\n// \t\t\t@Override\n// \t\t\tpublic int compare(Pair a, Pair b) {\n// \t\t\t\tif (a.first != b.first) {\n// \t\t\t\t\treturn a.first - b.first; // for increasing order of first\n// \t\t\t\t}\n// \t\t\t\treturn a.second - b.second ; //if first is same then sort on second basis\n// \t\t\t}\n// \t\t});\n\n\n\nint testcases = 1; \n //testcases = scn.nextInt() ;\nfor(int testcase =1  ; testcase <= testcases ;testcase++)\n{\n    \n //if(map.containsKey(arr[i]))map.put(arr[i],map.get(arr[i])+1) ;else map.put(arr[i],1) ;\n //if(map.containsKey(temp))map.put(temp,map.get(temp)+1) ;else map.put(temp,1) ;\n \n//  int n = scn.nextInt() ;int m = scn.nextInt() ;\n// tree = new ArrayList[n] ;\n// for(int i = 0; i< n; i++)\n// {\n//     tree[i] = new ArrayList<Integer>();\n// }\n \n//  for(int i = 0 ;  i <= m-1 ; i++)\n// {\n//     int fv = scn.nextInt()-1 ; int sv = scn.nextInt()-1 ;\n//     tree[fv].add(sv) ;\n//     tree[sv].add(fv) ;\n// }\n// boolean[] visited = new boolean[n] ;\n// int ans = 0 ;\n// for(int i = 0 ; i < n ; i++)\n// {\n//     if(!visited[i])\n//     {\n//         dfs(i , visited ) ;\n//         ans++ ;\n//     }\n// }\n\n\n int n = scn.nextInt() ;     \nint[] arr = new int[n] ;\n\nint[] temp = new int[n] ;\n\n\nfor(int i = 0 ; i < n ;i++)\n{\n    arr[i] = scn.nextInt() ;\n    temp[i] = arr[i] ;\n}\n\n\nsort(arr,0,n-1) ;\nint c= 0 ;\n\nfor(int i = 0 ; i< n ;i++)\n{\n    if(arr[i] != temp[i])c++ ;\n}\n\nif(c== 0|| c==2)\n{\n    out.println(\"YES\") ;\n}\n\nelse{\n    out.println(\"NO\") ;\n}\n\n\nsb.delete(0 , sb.length()) ;\nlist.clear() ;listb.clear() ;\nmap.clear() ;\nmap1.clear() ;\nmap2.clear() ;\nset.clear() ;sety.clear() ;\n\n} // test case  end loop\n\n\nout.flush() ;  \n} // solve fn ends\n\n\npublic static void main (String[] args) throws java.lang.Exception\n{\n  \n\nsolve() ;\n      \n}\n\n\n}\n  \n class Pair \n{\n  int first ;\n  \n  int second  ;\n  \n  \n \n    \n      \n@Override\n\tpublic String toString() {\n\t\n\tString ans = \"\" ;\n\tans  += this.first ;\n\tans += \" \";\n\tans += this.second ;\n\t\n\treturn ans  ;\n\t}\n\n\n}\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, cnt = 0;\n  cin >> n;\n  vector<int> arr(n), b(n);\n  for (int i = 0; i < n; i++) cin >> arr[i], b[i] = arr[i];\n  sort(b.begin(), b.end());\n  for (int i = 0; i < n; i++)\n    if (b[i] != arr[i]) cnt++;\n  printf(\"%s\\n\", cnt <= 2 ? \"YES\" : \"NO\");\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.OutputStreamWriter;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.StringTokenizer;\n\npublic class C {\n    private static BufferedReader in;\n    private static StringTokenizer st;\n    private static PrintWriter out;\n    \n    public static void main(String[] args) throws NumberFormatException, IOException {\n        in = new BufferedReader(new InputStreamReader(System.in));\n        st = new StringTokenizer(\"\");\n        out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));\n        int n = nextInt();\n        int a[] = new int [n];\n        Integer duplicate[] = new Integer[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = nextInt();\n            duplicate[i] = a[i];\n        }\n        int cnt = 0;\n        Arrays.sort(duplicate);\n        for (int i = 0; i < n; i++) {\n            if(duplicate[i]!=a[i]) cnt++;\n        }\n        if(cnt<=2)\n            System.out.println(\"YES\");\n        else\n            System.out.println(\"NO\");\n    }\n    static String next() throws IOException{\n        while(!st.hasMoreTokens()){\n            st = new StringTokenizer(in.readLine());\n        }\n        return st.nextToken();\n    }\n    static int nextInt() throws NumberFormatException, IOException{\n        return Integer.parseInt(next());\n    }\n    static long nextLong() throws NumberFormatException, IOException{\n        return Long.parseLong(next());\n    }\n    \n    static double nextDouble() throws NumberFormatException, IOException{\n        return Double.parseDouble(next());\n    }\n\n}\n"
        },
        {
            "language": 1,
            "solution": "#!/usr/bin/env python\n\nN = int(raw_input())\nA = map(int, raw_input().split())\nif sum([i != j for i, j in zip(A, sorted(A))]) in (0, 2):\n    print \"YES\"\nelse:\n    print \"NO\""
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class R136_D2_C {\n\n    public static void main(String[] args) throws Exception {\n        InputReader in = new InputReader(System.in);\n        int n = in.readInt();\n        int[] qw = new int[n];\n        int[] qw2 = new int[n];\n        for (int i = 0; i < qw.length; i++) {\n            qw[i] = in.readInt();\n            qw2[i] = qw[i];\n        }\n        Arrays.sort(qw2);\n        int c = 0;\n        for (int i = 0; i < qw2.length; i++) {\n            if (qw2[i] != qw[i])\n                c++;\n        }\n        if (c <= 2)\n            System.out.println(\"YES\");\n        else\n            System.out.println(\"NO\");\n\n    }\n\n    static class InputReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1000];\n        private int curChar, numChars;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        private int read() {\n            if (numChars == -1)\n                throw new InputMismatchException();\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (numChars <= 0)\n                    return -1;\n            }\n            return buf[curChar++];\n        }\n\n        public int readInt() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do {\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public long readLong() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            long res = 0;\n            do {\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public String readString() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            StringBuffer res = new StringBuffer();\n            do {\n                res.appendCodePoint(c);\n                c = read();\n            } while (!isSpaceChar(c));\n            return res.toString();\n        }\n\n        private boolean isSpaceChar(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        private String readLine0() {\n            StringBuffer buf = new StringBuffer();\n            int c = read();\n            while (c != '\\n' && c != -1) {\n                buf.appendCodePoint(c);\n                c = read();\n            }\n            return buf.toString();\n        }\n\n        public String readLine() {\n            String s = readLine0();\n            while (s.trim().length() == 0)\n                s = readLine0();\n            return s;\n        }\n\n        public String readLine(boolean ignoreEmptyLines) {\n            if (ignoreEmptyLines)\n                return readLine();\n            else\n                return readLine0();\n        }\n\n        public char readCharacter() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            return (char) c;\n        }\n\n        public double readDouble() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            double res = 0;\n            while (!isSpaceChar(c) && c != '.') {\n                if (c == 'e' || c == 'E')\n                    return res * Math.pow(10, readInt());\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            if (c == '.') {\n                c = read();\n                double m = 1;\n                while (!isSpaceChar(c)) {\n                    if (c == 'e' || c == 'E')\n                        return res * Math.pow(10, readInt());\n                    if (c < '0' || c > '9')\n                        throw new InputMismatchException();\n                    m /= 10;\n                    res += (c - '0') * m;\n                    c = read();\n                }\n            }\n            return res * sgn;\n        }\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint gcd(int a, int b) { return b == 0 ? a : gcd(b, a % b); }\nint lcm(int a, int b) { return (int)a * (b / gcd(a, b)); }\nint ara[100000 + 10], temp[100000 + 10];\nint n;\nbool ok() {\n  for (int i = 0; i < n - 1; i++) {\n    if (ara[i] > ara[i + 1]) return false;\n  }\n  return true;\n}\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = 0; i < n; i++) {\n    scanf(\"%d\", &ara[i]);\n    temp[i] = ara[i];\n  }\n  int left = 0, right = n - 1;\n  if (ok()) {\n    printf(\"YES\\n\");\n    return 0;\n  }\n  sort(ara, ara + n);\n  for (int i = 0; i < n; i++) {\n    if (ara[i] != temp[i]) left++;\n  }\n  if (left > 2)\n    printf(\"NO\\n\");\n  else\n    printf(\"YES\\n\");\n  return 0;\n}\n"
        },
        {
            "language": 1,
            "solution": "\nN = int(raw_input())\nL = map(int, raw_input().split())\n\nL2 = sorted(L)\n\ncnt = 0\nfor i in range(len(L)):\n  if L[i] != L2[i]: cnt += 1\n\nprint \"YES\" if cnt <= 2 else \"NO\"\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\nimport java.util.StringTokenizer;\n\npublic class C {\n    private static void get() throws IOException {\n        BufferedReader reader = new BufferedReader(new InputStreamReader(\n                System.in));\n        int n = Integer.parseInt(reader.readLine());\n        int[] a = new int[n];\n        int diff = 0;\n        StringTokenizer took = new StringTokenizer(reader.readLine());\n        for (int i = 0; i < a.length; i++)\n            a[i] = Integer.parseInt(took.nextToken());\n        int[] y = a.clone();\n        Arrays.sort(a);\n        for (int i = 0; i < a.length; i++) {\n            if (a[i] != y[i])\n                diff++;\n        }\n        if (diff > 2) {\n            System.out.println(\"NO\");\n        } else {\n            System.out.println(\"YES\");\n        }\n    }\n\n    public static void main(String[] args) {\n        try {\n            get();\n        } catch (IOException e) {\n            // TODO Auto-generated catch block\n            e.printStackTrace();\n        }\n    }\n\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <class T>\nT abs(T x) {\n  return x > 0 ? x : -x;\n}\ninline int toInt(string s) {\n  int v;\n  istringstream sin(s);\n  sin >> v;\n  return v;\n}\ninline long long toll(string s) {\n  long long v;\n  istringstream sin(s);\n  sin >> v;\n  return v;\n}\ntemplate <class T>\ninline string toString(T x) {\n  ostringstream sout;\n  sout << x;\n  return sout.str();\n}\ntemplate <class T>\ninline T sqr(T x) {\n  return x * x;\n}\ntemplate <class T>\ninline T gcd(T a, T b) {\n  if (a < 0) a = -a;\n  if (b < 0) b = -b;\n  return (b == 0) ? a : gcd(b, a % b);\n}\ntemplate <class T>\ninline T lcm(T a, T b) {\n  return a * (b / gcd(a, b));\n}\nint main() {\n  int n, i, c = 0, f, s;\n  cin >> n;\n  vector<int> A(n), tmp(n);\n  for ((i) = 0; (int)(i) < (n); (i)++) {\n    cin >> A[i];\n    tmp[i] = A[i];\n  }\n  sort(A.begin(), A.end());\n  for ((i) = 0; (int)(i) < (n); (i)++) {\n    if (A[i] != tmp[i]) {\n      c++;\n    }\n  }\n  if (c <= 2) {\n    cout << \"YES\\n\";\n  } else {\n    cout << \"NO\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[200005];\nint b[200005];\nint main() {\n  int n;\n  cin >> n;\n  int i, j;\n  for (i = 0; i < n; i++) {\n    cin >> a[i];\n    b[i] = a[i];\n  }\n  sort(b, b + n);\n  int cnt = 0;\n  for (i = 0; i < n; i++) {\n    if (a[i] != b[i]) cnt++;\n  }\n  if (cnt > 2)\n    cout << \"NO\" << endl;\n  else\n    cout << \"YES\" << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int Maxn = 100000 + 10;\nconst int INF = 0x7f7f7f7f;\nconst double eps = 1e-10;\nconst double pi = acos(-1.0);\ninline int realcmp(double a, double b) {\n  return (a > b + eps) ? 1 : ((a + eps < b) ? -1 : 0);\n}\nint a[Maxn], b[Maxn];\nint main() {\n  int cnt = 0, n;\n  ios::sync_with_stdio(0);\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n    b[i] = a[i];\n  }\n  sort(a, a + n);\n  for (int i = 0; i < n; i++)\n    if (a[i] != b[i]) cnt++;\n  if (cnt <= 2)\n    printf(\"YES\\n\");\n  else\n    printf(\"NO\\n\");\n  return 0;\n}\n"
        }
    ]
}