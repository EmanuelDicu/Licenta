{
    "name": "317_B. Ants",
    "source": "CODEFORCES",
    "description": "It has been noted that if some ants are put in the junctions of the graphene integer lattice then they will act in the following fashion: every minute at each junction (x, y) containing at least four ants a group of four ants will be formed, and these four ants will scatter to the neighbouring junctions (x + 1, y), (x - 1, y), (x, y + 1), (x, y - 1) \u2014 one ant in each direction. No other ant movements will happen. Ants never interfere with each other.\n\nScientists have put a colony of n ants into the junction (0, 0) and now they wish to know how many ants will there be at some given junctions, when the movement of the ants stops.\n\nInput\n\nFirst input line contains integers n (0 \u2264 n \u2264 30000) and t (1 \u2264 t \u2264 50000), where n is the number of ants in the colony and t is the number of queries. Each of the next t lines contains coordinates of a query junction: integers xi, yi ( - 109 \u2264 xi, yi \u2264 109). Queries may coincide.\n\nIt is guaranteed that there will be a certain moment of time when no possible movements can happen (in other words, the process will eventually end).\n\nOutput\n\nPrint t integers, one per line \u2014 the number of ants at the corresponding junctions when the movement of the ants stops.\n\nExamples\n\nInput\n\n1 3\n0 1\n0 0\n0 -1\n\n\nOutput\n\n0\n1\n0\n\n\nInput\n\n6 5\n0 -2\n0 -1\n0 0\n0 1\n0 2\n\n\nOutput\n\n0\n1\n2\n1\n0\n\nNote\n\nIn the first sample the colony consists of the one ant, so nothing happens at all.\n\nIn the second sample the colony consists of 6 ants. At the first minute 4 ants scatter from (0, 0) to the neighbouring junctions. After that the process stops.",
    "difficulty": "B",
    "tags": [
        "brute force",
        "implementation"
    ],
    "rating": 2000,
    "public_test": [
        {
            "input": "6 5\n0 -2\n0 -1\n0 0\n0 1\n0 2\n",
            "output": "0\n1\n2\n1\n0\n"
        },
        {
            "input": "1 3\n0 1\n0 0\n0 -1\n",
            "output": "                                                               0\n                                                               1\n0\n"
        }
    ],
    "generated_test": [
        {
            "input": "203 30\n-3 3\n-3 10\n-7 -6\n1 8\n-5 2\n-9 10\n-6 4\n8 2\n-2 -5\n-3 2\n1 6\n-6 -9\n10 9\n-3 -9\n-7 5\n3 8\n1 -4\n-4 -5\n-2 1\n-6 -10\n3 10\n4 -1\n0 -2\n9 9\n-5 6\n-9 -5\n7 -10\n-6 3\n-3 -4\n9 -4\n",
            "output": "0\n0\n0\n0\n1\n0\n0\n0\n1\n3\n0\n0\n0\n0\n0\n0\n3\n0\n2\n0\n0\n3\n3\n0\n0\n0\n0\n0\n3\n0\n"
        },
        {
            "input": "25965 53\n-1 -2\n1 5\n0 3\n4 4\n-3 -2\n5 4\n-3 -4\n-4 3\n1 -5\n2 -5\n0 4\n-1 -1\n-3 -2\n1 -5\n-1 5\n2 -1\n-5 -2\n-5 -4\n4 -2\n2 -5\n3 -3\n-5 4\n-4 0\n3 0\n-2 4\n2 1\n5 -3\n-1 0\n4 -2\n0 -2\n-5 0\n4 4\n-5 -2\n-1 -3\n2 -5\n1 -3\n-4 3\n4 1\n3 2\n-5 -3\n-1 0\n1 -1\n-2 2\n5 -2\n4 0\n-3 4\n4 -1\n0 5\n0 5\n-5 -5\n-3 -2\n3 4\n-2 -3\n",
            "output": "3\n0\n1\n2\n2\n1\n2\n2\n0\n2\n1\n2\n2\n0\n0\n3\n2\n1\n3\n2\n2\n1\n1\n1\n3\n3\n3\n3\n3\n2\n3\n2\n2\n3\n2\n3\n2\n2\n2\n3\n3\n2\n0\n2\n1\n2\n2\n3\n3\n0\n2\n2\n2\n"
        },
        {
            "input": "26306 12\n-209686696 -252039951\n336170474 874855458\n967313882 301142304\n-945290114 -298685345\n260111651 -646079544\n-482524885 -594243108\n455231664 272297143\n480331417 -948955565\n-1150810434 630428708\n-387747305 -363872220\n803315959 -614198766\n119673742 -261947378\n",
            "output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n"
        },
        {
            "input": "30000 3\n0 1\n0 0\n0 3\n",
            "output": "2\n0\n0\n"
        },
        {
            "input": "30000 10\n0 0\n4 0\n0 4\n0 -1\n-1000000000 999999999\n4 0\n0 0\n-1000000000 999999999\n30 -31\n-31 30\n",
            "output": "0\n1\n1\n2\n0\n1\n0\n0\n0\n0\n"
        },
        {
            "input": "276 70\n1 -9\n-5 -4\n1 -4\n-4 5\n7 10\n3 -1\n-10 8\n7 -8\n-7 5\n0 4\n10 9\n10 2\n-5 2\n6 9\n9 8\n-6 -3\n8 -3\n-8 9\n3 9\n4 -1\n7 -1\n-7 0\n10 1\n-5 3\n-4 9\n-5 3\n5 0\n8 -7\n-8 9\n3 -8\n-5 -1\n9 9\n4 3\n5 4\n7 7\n-8 -3\n5 2\n-7 1\n-2 2\n1 1\n-2 -5\n-8 -9\n-1 -7\n5 -2\n-5 8\n2 -1\n8 5\n1 2\n-10 -2\n-2 -4\n4 -1\n10 4\n-8 0\n3 5\n8 -10\n10 6\n-1 -4\n3 -10\n-6 10\n-5 0\n7 10\n3 -3\n10 -7\n-1 8\n8 -4\n-4 10\n-7 5\n8 -9\n2 -10\n6 7\n",
            "output": "0\n2\n3\n2\n0\n0\n0\n0\n0\n2\n0\n0\n2\n0\n0\n1\n0\n0\n0\n3\n0\n0\n0\n1\n0\n1\n3\n0\n0\n0\n1\n0\n3\n2\n0\n0\n2\n0\n2\n0\n2\n0\n0\n2\n0\n3\n0\n3\n0\n1\n3\n0\n0\n1\n0\n0\n3\n0\n0\n3\n0\n2\n0\n0\n0\n0\n0\n0\n0\n0\n"
        },
        {
            "input": "253 59\n8 -6\n8 7\n7 9\n0 -9\n4 2\n7 -9\n-3 9\n-7 4\n4 8\n9 6\n-3 -8\n9 9\n1 -5\n-9 -9\n5 3\n2 10\n-4 8\n3 -7\n1 7\n9 2\n9 5\n10 1\n9 7\n1 -8\n4 10\n-2 3\n0 6\n-7 9\n-6 2\n-8 -8\n-7 -5\n-9 10\n-8 8\n6 -2\n8 -7\n-3 -8\n4 -5\n1 -6\n-3 7\n-6 6\n4 -7\n-6 3\n-1 4\n7 6\n9 5\n-10 -2\n-4 -2\n0 -9\n0 2\n-4 10\n2 -4\n2 -4\n-8 10\n7 4\n1 2\n4 7\n7 -3\n-2 -7\n-10 -5\n",
            "output": "0\n0\n0\n0\n3\n0\n0\n0\n0\n0\n0\n0\n0\n0\n2\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n2\n2\n0\n1\n0\n0\n0\n0\n1\n0\n0\n0\n2\n0\n0\n0\n0\n3\n0\n0\n0\n3\n0\n0\n0\n3\n3\n0\n0\n3\n0\n0\n0\n0\n"
        },
        {
            "input": "15608 49\n2 -5\n2 -5\n-3 1\n1 0\n-2 -5\n4 1\n-2 3\n-2 -1\n1 1\n-5 -3\n3 0\n-2 -3\n-2 -3\n3 5\n0 3\n0 -1\n-1 5\n0 -5\n-2 -2\n4 4\n-4 -1\n2 1\n-2 4\n1 -2\n-5 -2\n5 3\n-3 0\n1 -3\n-5 4\n1 4\n4 -2\n1 2\n4 -5\n1 -1\n3 -2\n0 -4\n-5 -2\n4 4\n-3 2\n0 5\n1 1\n-4 1\n-2 4\n-1 -3\n-5 5\n0 -1\n-3 4\n1 5\n4 -5\n",
            "output": "3\n3\n3\n1\n3\n3\n3\n2\n2\n1\n3\n3\n3\n1\n3\n1\n2\n1\n0\n2\n3\n2\n2\n2\n3\n1\n3\n3\n3\n3\n2\n2\n3\n2\n3\n2\n3\n2\n3\n1\n2\n3\n2\n3\n2\n1\n3\n2\n3\n"
        },
        {
            "input": "26651 2\n-107823434 -542137732\n867125466 -1291089860\n",
            "output": "0\n0\n"
        },
        {
            "input": "9 3\n0 -1\n0 0\n0 1\n",
            "output": "2\n1\n2\n"
        },
        {
            "input": "312 26\n4 -2\n6 5\n6 3\n-6 0\n-1 5\n-4 1\n-3 -8\n-2 4\n-2 2\n-1 7\n3 -1\n-8 3\n10 -8\n0 9\n0 -4\n7 1\n-9 4\n3 -2\n-5 10\n6 2\n0 5\n-7 0\n-6 5\n9 -1\n-6 -7\n-2 5\n",
            "output": "1\n0\n1\n3\n1\n3\n0\n1\n2\n0\n3\n0\n0\n0\n3\n0\n0\n3\n0\n2\n3\n0\n0\n0\n0\n2\n"
        },
        {
            "input": "28544 11\n339617704 -734139583\n469446397 750258071\n-194215639 598429286\n227057732 235545610\n-770401624 534148219\n884509845 -513104519\n-502851919 726069608\n-530085595 -961503335\n-837578722 615771576\n-887805545 412894108\n129300206 -153569622\n",
            "output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n"
        },
        {
            "input": "0 4\n1 0\n0 -1000000000\n1 0\n0 0\n",
            "output": "0\n0\n0\n0\n"
        },
        {
            "input": "30000 39\n2650 -1515\n-3169 4818\n-1896 2727\n1323 -2335\n-387 901\n-4299 1481\n-2114 4435\n3654 -2730\n4569 3801\n-3815 -3355\n4777 1749\n4486 -780\n-3936 -158\n717 -3518\n4765 -909\n-3032 3726\n-2970 3346\n2067 -1560\n-521 -1331\n-4953 -2098\n-849 580\n-4941 4018\n1338 -2629\n-1444 -3550\n1495 4995\n1156 659\n-4477 4062\n1922 -1204\n3882 -4411\n2635 4895\n-1602 -3199\n-4098 -3015\n2539 1489\n-4029 1403\n-705 -1612\n4042 2461\n1409 4157\n57 -2317\n-2344 2649\n",
            "output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n"
        },
        {
            "input": "25003 29\n-16 21\n2 -20\n-23 16\n22 24\n-28 19\n14 10\n-9 9\n12 3\n-20 24\n-26 -9\n1 -10\n-24 -2\n25 0\n19 -14\n14 26\n11 7\n17 9\n-20 -23\n-12 27\n5 -23\n29 8\n10 13\n14 -10\n-2 3\n0 -21\n16 -8\n598025579 -556795415\n-921724564 -156542003\n-514479908 904731495\n",
            "output": "3\n3\n3\n1\n0\n3\n0\n2\n1\n3\n3\n3\n1\n2\n3\n3\n1\n3\n3\n1\n3\n3\n3\n2\n2\n1\n0\n0\n0\n"
        },
        {
            "input": "6 5\n0 -2\n0 -1\n0 1\n0 1\n0 2\n",
            "output": "0\n1\n1\n1\n0\n"
        },
        {
            "input": "1 3\n0 1\n-1 0\n0 -1\n",
            "output": "0\n0\n0\n"
        },
        {
            "input": "203 30\n-3 3\n-3 10\n-7 -6\n1 4\n-5 2\n-9 10\n-6 4\n8 2\n-2 -5\n-3 2\n1 6\n-6 -9\n10 9\n-3 -9\n-7 5\n3 8\n1 -4\n-4 -5\n-2 1\n-6 -10\n3 10\n4 -1\n0 -2\n9 9\n-5 6\n-9 -5\n7 -10\n-6 3\n-3 -4\n9 -4\n",
            "output": "0\n0\n0\n3\n1\n0\n0\n0\n1\n3\n0\n0\n0\n0\n0\n0\n3\n0\n2\n0\n0\n3\n3\n0\n0\n0\n0\n0\n3\n0\n"
        },
        {
            "input": "25965 53\n-1 -2\n1 5\n0 6\n4 4\n-3 -2\n5 4\n-3 -4\n-4 3\n1 -5\n2 -5\n0 4\n-1 -1\n-3 -2\n1 -5\n-1 5\n2 -1\n-5 -2\n-5 -4\n4 -2\n2 -5\n3 -3\n-5 4\n-4 0\n3 0\n-2 4\n2 1\n5 -3\n-1 0\n4 -2\n0 -2\n-5 0\n4 4\n-5 -2\n-1 -3\n2 -5\n1 -3\n-4 3\n4 1\n3 2\n-5 -3\n-1 0\n1 -1\n-2 2\n5 -2\n4 0\n-3 4\n4 -1\n0 5\n0 5\n-5 -5\n-3 -2\n3 4\n-2 -3\n",
            "output": "3\n0\n2\n2\n2\n1\n2\n2\n0\n2\n1\n2\n2\n0\n0\n3\n2\n1\n3\n2\n2\n1\n1\n1\n3\n3\n3\n3\n3\n2\n3\n2\n2\n3\n2\n3\n2\n2\n2\n3\n3\n2\n0\n2\n1\n2\n2\n3\n3\n0\n2\n2\n2\n"
        },
        {
            "input": "4802 49\n2 -5\n2 -5\n-3 1\n1 0\n-2 -5\n4 1\n-2 3\n-2 -1\n1 1\n-5 -3\n3 0\n-2 -3\n-2 -3\n3 5\n0 3\n0 -1\n-1 5\n0 -5\n-2 -2\n4 4\n-4 -1\n2 1\n-2 4\n1 -2\n-5 -2\n5 3\n-3 0\n1 -3\n-5 4\n1 4\n4 -2\n1 2\n4 -5\n1 -1\n3 -2\n0 -4\n-5 -2\n4 4\n-3 2\n0 5\n1 1\n-4 1\n-2 4\n-1 -3\n-5 5\n0 -1\n-3 4\n1 5\n4 -5\n",
            "output": "1\n1\n3\n3\n1\n2\n1\n2\n0\n3\n3\n1\n1\n3\n3\n3\n2\n1\n2\n0\n2\n2\n3\n2\n1\n3\n3\n3\n2\n2\n3\n2\n2\n0\n1\n0\n1\n0\n1\n1\n0\n2\n3\n3\n2\n3\n3\n2\n2\n"
        },
        {
            "input": "9 3\n0 -1\n0 1\n0 1\n",
            "output": "2\n2\n2\n"
        },
        {
            "input": "6 5\n0 -2\n0 -1\n0 1\n0 2\n0 2\n",
            "output": "0\n1\n1\n0\n0\n"
        },
        {
            "input": "1 3\n0 0\n-1 0\n0 -1\n",
            "output": "1\n0\n0\n"
        },
        {
            "input": "25965 53\n-1 -2\n1 5\n0 6\n4 4\n-3 -2\n5 6\n-3 -4\n-4 3\n1 -5\n2 -5\n0 4\n-1 -1\n-3 -2\n1 -5\n-1 5\n2 -1\n-5 -2\n-5 -4\n4 -2\n2 -5\n3 -3\n-5 4\n-4 0\n3 0\n-2 4\n2 1\n5 -3\n-1 0\n4 -2\n0 -2\n-5 0\n4 4\n-5 -2\n-1 -3\n2 -5\n1 -3\n-4 3\n4 1\n3 2\n-5 -3\n-1 0\n1 -1\n-2 2\n5 -2\n4 0\n-3 4\n4 -1\n0 5\n0 5\n-5 -5\n-3 -2\n3 4\n-2 -3\n",
            "output": "3\n0\n2\n2\n2\n2\n2\n2\n0\n2\n1\n2\n2\n0\n0\n3\n2\n1\n3\n2\n2\n1\n1\n1\n3\n3\n3\n3\n3\n2\n3\n2\n2\n3\n2\n3\n2\n2\n2\n3\n3\n2\n0\n2\n1\n2\n2\n3\n3\n0\n2\n2\n2\n"
        },
        {
            "input": "30000 10\n0 0\n4 0\n0 4\n0 -1\n-1000000000 1890652751\n4 0\n0 0\n-1000000000 999999999\n30 -31\n-44 30\n",
            "output": "0\n1\n1\n2\n0\n1\n0\n0\n0\n1\n"
        },
        {
            "input": "276 70\n1 -9\n-5 -4\n1 -4\n-4 5\n7 10\n3 -1\n-10 8\n7 -8\n-7 5\n0 4\n10 9\n10 2\n-5 2\n6 9\n9 8\n-6 -3\n8 -3\n-8 9\n3 9\n4 -1\n7 -1\n-7 0\n10 1\n-5 3\n-2 9\n-5 3\n5 1\n8 -7\n-8 9\n3 -8\n-5 -1\n9 9\n4 3\n5 4\n7 7\n-8 -3\n5 2\n-7 1\n-2 2\n1 1\n-2 -5\n-8 -9\n-1 -7\n5 -2\n-5 8\n2 -1\n8 5\n1 2\n-10 -2\n-2 -4\n4 -1\n10 4\n-8 0\n3 5\n8 -10\n10 6\n-1 -4\n3 -10\n-6 10\n-5 0\n7 10\n3 -3\n10 -7\n-1 8\n8 -4\n-4 10\n-7 5\n8 -9\n2 -10\n6 7\n",
            "output": "0\n2\n3\n2\n0\n0\n0\n0\n0\n2\n0\n0\n2\n0\n0\n1\n0\n0\n0\n3\n0\n0\n0\n1\n0\n1\n1\n0\n0\n0\n1\n0\n3\n2\n0\n0\n2\n0\n2\n0\n2\n0\n0\n2\n0\n3\n0\n3\n0\n1\n3\n0\n0\n1\n0\n0\n3\n0\n0\n3\n0\n2\n0\n0\n0\n0\n0\n0\n0\n0\n"
        },
        {
            "input": "4802 49\n2 -5\n2 -5\n-3 1\n1 0\n-2 -5\n4 1\n-2 3\n-2 -1\n1 1\n-5 -3\n3 0\n-2 -3\n-2 -3\n3 5\n0 3\n0 -1\n-1 5\n0 -5\n-2 -2\n4 4\n-4 -1\n2 1\n-2 4\n1 -2\n-5 -2\n5 3\n-3 0\n1 -3\n-5 4\n1 4\n4 -2\n1 2\n4 -5\n1 -1\n3 -2\n0 -4\n-5 -2\n4 4\n-3 2\n0 5\n1 1\n-4 1\n-2 4\n-1 -3\n-5 5\n-1 -1\n-3 4\n1 5\n4 -5\n",
            "output": "1\n1\n3\n3\n1\n2\n1\n2\n0\n3\n3\n1\n1\n3\n3\n3\n2\n1\n2\n0\n2\n2\n3\n2\n1\n3\n3\n3\n2\n2\n3\n2\n2\n0\n1\n0\n1\n0\n1\n1\n0\n2\n3\n3\n2\n0\n3\n2\n2\n"
        },
        {
            "input": "30000 4\n-409648319 -1000000000\n1000000000 -1000000000\n-1000000000 1000000000\n1000000000 1000000000\n",
            "output": "0\n0\n0\n0\n"
        },
        {
            "input": "26306 12\n-209686696 -252039951\n336170474 874855458\n967313882 301142304\n-945290114 -298685345\n260111651 -646079544\n-482524885 -594243108\n455231664 272297143\n480331417 -948955565\n-1150810434 630428708\n-387747305 -363872220\n1366995241 -614198766\n119673742 -261947378\n",
            "output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n"
        },
        {
            "input": "30000 10\n0 0\n4 0\n0 4\n0 -1\n-1000000000 1890652751\n4 0\n0 0\n-1000000000 999999999\n30 -31\n-31 30\n",
            "output": "0\n1\n1\n2\n0\n1\n0\n0\n0\n0\n"
        },
        {
            "input": "276 70\n1 -9\n-5 -4\n1 -4\n-4 5\n7 10\n3 -1\n-10 8\n7 -8\n-7 5\n0 4\n10 9\n10 2\n-5 2\n6 9\n9 8\n-6 -3\n8 -3\n-8 9\n3 9\n4 -1\n7 -1\n-7 0\n10 1\n-5 3\n-2 9\n-5 3\n5 0\n8 -7\n-8 9\n3 -8\n-5 -1\n9 9\n4 3\n5 4\n7 7\n-8 -3\n5 2\n-7 1\n-2 2\n1 1\n-2 -5\n-8 -9\n-1 -7\n5 -2\n-5 8\n2 -1\n8 5\n1 2\n-10 -2\n-2 -4\n4 -1\n10 4\n-8 0\n3 5\n8 -10\n10 6\n-1 -4\n3 -10\n-6 10\n-5 0\n7 10\n3 -3\n10 -7\n-1 8\n8 -4\n-4 10\n-7 5\n8 -9\n2 -10\n6 7\n",
            "output": "0\n2\n3\n2\n0\n0\n0\n0\n0\n2\n0\n0\n2\n0\n0\n1\n0\n0\n0\n3\n0\n0\n0\n1\n0\n1\n3\n0\n0\n0\n1\n0\n3\n2\n0\n0\n2\n0\n2\n0\n2\n0\n0\n2\n0\n3\n0\n3\n0\n1\n3\n0\n0\n1\n0\n0\n3\n0\n0\n3\n0\n2\n0\n0\n0\n0\n0\n0\n0\n0\n"
        },
        {
            "input": "253 59\n8 -6\n8 7\n7 9\n0 -9\n4 2\n7 -9\n-3 9\n-7 4\n4 8\n9 6\n-3 -8\n9 9\n1 -5\n-9 -9\n5 3\n2 10\n-4 8\n3 -7\n1 7\n9 2\n9 5\n10 1\n9 7\n1 -8\n4 10\n-2 3\n0 6\n-7 9\n-6 2\n-8 -8\n-7 -5\n-9 10\n-14 8\n6 -2\n8 -7\n-3 -8\n4 -5\n1 -6\n-3 7\n-6 6\n4 -7\n-6 3\n-1 4\n7 6\n9 5\n-10 -2\n-4 -2\n0 -9\n0 2\n-4 10\n2 -4\n2 -4\n-8 10\n7 4\n1 2\n4 7\n7 -3\n-2 -7\n-10 -5\n",
            "output": "0\n0\n0\n0\n3\n0\n0\n0\n0\n0\n0\n0\n0\n0\n2\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n2\n2\n0\n1\n0\n0\n0\n0\n1\n0\n0\n0\n2\n0\n0\n0\n0\n3\n0\n0\n0\n3\n0\n0\n0\n3\n3\n0\n0\n3\n0\n0\n0\n0\n"
        },
        {
            "input": "26651 2\n-133246583 -542137732\n867125466 -1291089860\n",
            "output": "0\n0\n"
        },
        {
            "input": "312 26\n4 -2\n6 5\n6 3\n-6 0\n-1 5\n-4 0\n-3 -8\n-2 4\n-2 2\n-1 7\n3 -1\n-8 3\n10 -8\n0 9\n0 -4\n7 1\n-9 4\n3 -2\n-5 10\n6 2\n0 5\n-7 0\n-6 5\n9 -1\n-6 -7\n-2 5\n",
            "output": "1\n0\n1\n3\n1\n3\n0\n1\n2\n0\n3\n0\n0\n0\n3\n0\n0\n3\n0\n2\n3\n0\n0\n0\n0\n2\n"
        },
        {
            "input": "28544 11\n339617704 -734139583\n469446397 750258071\n-194215639 598429286\n227057732 235545610\n-770401624 534148219\n884509845 -513104519\n-502851919 726069608\n-530085595 -961503335\n-837578722 615771576\n-887805545 412894108\n129300206 -251718952\n",
            "output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n"
        },
        {
            "input": "0 4\n1 -1\n0 -1000000000\n1 0\n0 0\n",
            "output": "0\n0\n0\n0\n"
        },
        {
            "input": "30000 39\n2650 -1515\n-3169 4818\n-1896 2727\n1323 -2335\n-387 901\n-4299 1481\n-2114 4435\n3654 -2730\n4569 3801\n-3815 -3355\n4777 1749\n4486 -780\n-3936 -158\n717 -3518\n4765 -909\n-3032 3726\n-2970 3346\n2067 -1560\n-521 -1331\n-4953 -2098\n-849 580\n-4941 4018\n1338 -2629\n-1444 -3550\n1495 4995\n1156 659\n-4477 4062\n1922 -1204\n3882 -4411\n2635 4895\n-1602 -3199\n-4098 -3015\n2539 1489\n-4029 1403\n-705 -1612\n4042 2461\n861 4157\n57 -2317\n-2344 2649\n",
            "output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n"
        },
        {
            "input": "30000 4\n-409648319 -1000000000\n1000000000 -1000000000\n-1000000000 1000000000\n1000000000 1010000000\n",
            "output": "0\n0\n0\n0\n"
        },
        {
            "input": "25003 29\n-16 21\n2 -20\n-41 16\n22 24\n-28 19\n14 10\n-9 9\n12 3\n-20 24\n-26 -9\n1 -10\n-24 -2\n25 0\n19 -14\n14 26\n11 7\n17 9\n-20 -23\n-12 27\n5 -23\n29 8\n10 13\n14 -10\n-2 3\n0 -21\n16 -8\n598025579 -556795415\n-921724564 -156542003\n-514479908 904731495\n",
            "output": "3\n3\n3\n1\n0\n3\n0\n2\n1\n3\n3\n3\n1\n2\n3\n3\n1\n3\n3\n1\n3\n3\n3\n2\n2\n1\n0\n0\n0\n"
        },
        {
            "input": "203 30\n-3 3\n-3 10\n-7 -6\n1 4\n-5 2\n-9 10\n-6 4\n8 2\n-2 -5\n-3 2\n1 6\n-6 -9\n10 9\n-3 -9\n-7 5\n3 8\n1 -4\n-4 -5\n-2 1\n-6 -10\n3 10\n4 -1\n0 -2\n8 9\n-5 6\n-9 -5\n7 -10\n-6 3\n-3 -4\n9 -4\n",
            "output": "0\n0\n0\n3\n1\n0\n0\n0\n1\n3\n0\n0\n0\n0\n0\n0\n3\n0\n2\n0\n0\n3\n3\n0\n0\n0\n0\n0\n3\n0\n"
        },
        {
            "input": "26306 12\n-209686696 -252039951\n336170474 874855458\n967313882 301142304\n-945290114 -298685345\n260111651 -646079544\n-482524885 -594243108\n455231664 272297143\n480331417 -948955565\n-1150810434 630428708\n-387747305 -363872220\n1366995241 -383797382\n119673742 -261947378\n",
            "output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n"
        },
        {
            "input": "253 59\n8 -6\n8 7\n7 9\n0 -9\n4 2\n7 -9\n-1 9\n-7 4\n4 8\n9 6\n-3 -8\n9 9\n1 -5\n-9 -9\n5 3\n2 10\n-4 8\n3 -7\n1 7\n9 2\n9 5\n10 1\n9 7\n1 -8\n4 10\n-2 3\n0 6\n-7 9\n-6 2\n-8 -8\n-7 -5\n-9 10\n-14 8\n6 -2\n8 -7\n-3 -8\n4 -5\n1 -6\n-3 7\n-6 6\n4 -7\n-6 3\n-1 4\n7 6\n9 5\n-10 -2\n-4 -2\n0 -9\n0 2\n-4 10\n2 -4\n2 -4\n-8 10\n7 4\n1 2\n4 7\n7 -3\n-2 -7\n-10 -5\n",
            "output": "0\n0\n0\n0\n3\n0\n0\n0\n0\n0\n0\n0\n0\n0\n2\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n2\n2\n0\n1\n0\n0\n0\n0\n1\n0\n0\n0\n2\n0\n0\n0\n0\n3\n0\n0\n0\n3\n0\n0\n0\n3\n3\n0\n0\n3\n0\n0\n0\n0\n"
        },
        {
            "input": "26651 2\n-133246583 -334946918\n867125466 -1291089860\n",
            "output": "0\n0\n"
        },
        {
            "input": "312 26\n4 -2\n6 5\n6 3\n-6 0\n-1 5\n-4 0\n-3 -8\n-2 4\n-2 2\n-1 7\n3 -1\n-8 3\n10 -8\n0 9\n0 -4\n7 1\n-9 5\n3 -2\n-5 10\n6 2\n0 5\n-7 0\n-6 5\n9 -1\n-6 -7\n-2 5\n",
            "output": "1\n0\n1\n3\n1\n3\n0\n1\n2\n0\n3\n0\n0\n0\n3\n0\n0\n3\n0\n2\n3\n0\n0\n0\n0\n2\n"
        },
        {
            "input": "28544 11\n339617704 -152345895\n469446397 750258071\n-194215639 598429286\n227057732 235545610\n-770401624 534148219\n884509845 -513104519\n-502851919 726069608\n-530085595 -961503335\n-837578722 615771576\n-887805545 412894108\n129300206 -251718952\n",
            "output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n"
        },
        {
            "input": "30000 39\n2650 -1515\n-3169 4818\n-1896 2727\n1323 -2335\n-387 901\n-4299 1481\n-2114 7823\n3654 -2730\n4569 3801\n-3815 -3355\n4777 1749\n4486 -780\n-3936 -158\n717 -3518\n4765 -909\n-3032 3726\n-2970 3346\n2067 -1560\n-521 -1331\n-4953 -2098\n-849 580\n-4941 4018\n1338 -2629\n-1444 -3550\n1495 4995\n1156 659\n-4477 4062\n1922 -1204\n3882 -4411\n2635 4895\n-1602 -3199\n-4098 -3015\n2539 1489\n-4029 1403\n-705 -1612\n4042 2461\n861 4157\n57 -2317\n-2344 2649\n",
            "output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n"
        }
    ],
    "solution": [
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\n\npublic class B {\n\tpublic static void main(String[] args) throws Exception {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tPrintWriter out = new PrintWriter(System.out);\n\t\tString[] parts = br.readLine().split(\" \");\n\t\tint n = Integer.parseInt(parts[0]);\n\t\tint t = Integer.parseInt(parts[1]);\n\t\tshort zx = 301 / 2;\n\t\tshort zy = 301 / 2;\n\t\tint[][] M = new int[301][301];\n\t\tM[zx][zy] = n;\n\t\tint front = 0, back = 0;\n\t\tshort[] Q = new short[30000000];\n\t\tboolean[][] inQ = new boolean[301][301];\n\t\tQ[back++] = zx;\n\t\tQ[back++] = zy;\n\t\twhile (back > front) {\n\t\t\tshort x = Q[front++];\n\t\t\tshort y = Q[front++];\n\t\t\tint c = M[x][y] / 4;\n\t\t\tinQ[x][y] = false;\n\t\t\tM[x][y] %= 4;\n\t\t\tM[x - 1][y] += c;\n\t\t\tM[x + 1][y] += c;\n\t\t\tM[x][y - 1] += c;\n\t\t\tM[x][y + 1] += c;\n\t\t\tif (x - 1 >= 0 && M[x - 1][y] >= 4 && inQ[x - 1][y] == false) {\n\t\t\t\tinQ[x - 1][y] = true;\n\t\t\t\tQ[back++] = (short) (x - 1);\n\t\t\t\tQ[back++] = y;\n\t\t\t}\n\t\t\tif (x + 1 < 301 && M[x + 1][y] >= 4 && inQ[x + 1][y] == false) {\n\t\t\t\tinQ[x + 1][y] = true;\n\t\t\t\tQ[back++] = (short) (x + 1);\n\t\t\t\tQ[back++] = y;\n\t\t\t}\n\t\t\tif (y - 1 >= 0 && M[x][y - 1] >= 4 && inQ[x][y - 1] == false) {\n\t\t\t\tinQ[x][y - 1] = true;\n\t\t\t\tQ[back++] = x;\n\t\t\t\tQ[back++] = (short) (y - 1);\n\t\t\t}\n\t\t\tif (y + 1 < 301 && M[x][y + 1] >= 4 && inQ[x][y + 1] == false) {\n\t\t\t\tinQ[x][y + 1] = true;\n\t\t\t\tQ[back++] = x;\n\t\t\t\tQ[back++] = (short) (y + 1);\n\t\t\t}\n\t\t}\n\t\twhile (t-- > 0) {\n\t\t\tparts = br.readLine().split(\" \");\n\t\t\tint x = Integer.parseInt(parts[0]);\n\t\t\tint y = Integer.parseInt(parts[1]);\n\t\t\tif (x < 0)\n\t\t\t\tx = -x;\n\t\t\tif (y < 0)\n\t\t\t\ty = -y;\n\t\t\tx += zx;\n\t\t\ty += zy;\n\t\t\tif (x < 301 && y < 301) {\n\t\t\t\tout.println(M[x][y]);\n\t\t\t} else {\n\t\t\t\tout.println(0);\n\t\t\t}\n\t\t}\n\t\tout.flush();\n\t\tout.close();\n\t}\n}\n"
        },
        {
            "language": 3,
            "solution": "from sys import *\n\nf = lambda: map(int, stdin.readline().split())\nn, t = f()\n\nm = 65\nr = range(m)\np = [[0] * m for i in r]\n\np[1][0] = n // 4\np[0][0] = n % 4\n\nq = k = 1\nwhile q:\n    k += 1\n    q = 0\n\n    for x in r[1:k]:\n        for y in r[:x + 1]:\n            if p[x][y] < 4: continue\n            q = 1\n\n            d = p[x][y] // 4\n            p[x][y] %= 4\n\n            p[x + 1][y] += d\n            if x > y:\n                if x > y + 1:\n                    p[x][y + 1] += d\n                    p[x - 1][y] += d\n                else:\n                    p[x][x] += 2 * d\n                    if y: p[y][y] += 2 * d\n                    else: p[x][y] += d\n            if y: p[x][y - 1] += d if y > 1 else 2 * d\n\ns = []\nfor j in range(t):\n    x, y = f()\n    x, y = abs(x), abs(y)\n    if x < y: x, y = y, x\n    s.append(p[x][y] if x < m else 0)\n\nstdout.write('\\n'.join(map(str, s)))"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint n, t;\nint q[50000][5];\nint sh[2500][2500];\nbool vis[2500][2500];\nvoid bfs() {\n  int i = 0, j = 1;\n  sh[1000][1000] = n;\n  q[0][0] = 1000;\n  q[0][1] = 1000;\n  while (i < j) {\n    int x = q[i % 40000][0], y = q[i % 40000][1];\n    sh[x + 1][y] += sh[x][y] / 4;\n    sh[x - 1][y] += sh[x][y] / 4;\n    sh[x][y + 1] += sh[x][y] / 4;\n    sh[x][y - 1] += sh[x][y] / 4;\n    sh[x][y] %= 4;\n    vis[x][y] = 0;\n    if (vis[x + 1][y] == 0 && sh[x + 1][y] >= 4)\n      q[j % 40000][0] = x + 1, q[j % 40000][1] = y, j++, vis[x + 1][y] = 1;\n    if (vis[x - 1][y] == 0 && sh[x - 1][y] >= 4)\n      q[j % 40000][0] = x - 1, q[j % 40000][1] = y, j++, vis[x - 1][y] = 1;\n    if (vis[x][y + 1] == 0 && sh[x][y + 1] >= 4)\n      q[j % 40000][0] = x, q[j % 40000][1] = y + 1, j++, vis[x][y + 1] = 1;\n    if (vis[x][y - 1] == 0 && sh[x][y - 1] >= 4)\n      q[j % 40000][0] = x, q[j % 40000][1] = y - 1, j++, vis[x][y - 1] = 1;\n    i++;\n  }\n}\nint main() {\n  scanf(\"%d %d\", &n, &t);\n  bfs();\n  for (int i = 0; i < t; i++) {\n    int h, g;\n    scanf(\"%d %d\", &h, &g);\n    h += 1000;\n    g += 1000;\n    if (h < 0 || h > 2000 || g < 0 || g > 2000)\n      printf(\"0\\n\");\n    else\n      printf(\"%d\\n\", sh[h][g]);\n  }\n  getchar();\n  getchar();\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, m, a[205 << 1][205 << 1];\nqueue<pair<int, int> > q;\nint main() {\n  cin >> n >> m;\n  a[205][205] = n;\n  if (n >> 2) q.push(make_pair(205, 205));\n  int dx[] = {0, 1, 0, -1};\n  int dy[] = {1, 0, -1, 0};\n  while (!q.empty()) {\n    pair<int, int> p = q.front();\n    q.pop();\n    for (int i = 0; i < 4; i++) {\n      int x = p.first + dx[i];\n      int y = p.second + dy[i];\n      a[x][y] += a[p.first][p.second] >> 2;\n      if ((a[x][y] >> 2) && !((a[x][y] - (a[p.first][p.second] >> 2)) >> 2))\n        q.push(make_pair(x, y));\n    }\n    a[p.first][p.second] %= 4;\n  }\n  while (m--) {\n    int x, y;\n    cin >> x >> y;\n    if (x < -205 || x >= 205 || y < -205 || y >= 205)\n      cout << 0 << \"\\n\";\n    else\n      cout << a[x + 205][y + 205] << \"\\n\";\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAX = 200, dx[] = {0, 1, 0, -1}, dy[] = {1, 0, -1, 0};\nint ans[MAX * 2 + 1][MAX * 2 + 1];\nint main() {\n  int n, t, x, y;\n  scanf(\"%d%d\", &n, &t);\n  queue<int> Q;\n  Q.push(MAX), Q.push(MAX);\n  ans[MAX][MAX] = n;\n  while (!Q.empty()) {\n    x = Q.front(), Q.pop();\n    y = Q.front(), Q.pop();\n    if (ans[x][y] >= 4) {\n      for (int i = 0; i < 4; ++i) {\n        int tx = x + dx[i], ty = y + dy[i];\n        ans[tx][ty] += ans[x][y] / 4;\n        if (ans[tx][ty] > 3) Q.push(tx), Q.push(ty);\n      }\n      ans[x][y] %= 4;\n    }\n  }\n  while (t--) {\n    scanf(\"%d%d\", &x, &y);\n    if (abs(x) > MAX || abs(y) > MAX)\n      puts(\"0\");\n    else {\n      printf(\"%d\\n\", ans[x + MAX][y + MAX]);\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long a[205][205];\nlong long dx[] = {-1, 1, 0, 0};\nlong long dy[] = {0, 0, -1, 1};\nqueue<pair<long long, long long> > q;\nint main() {\n  long long n, t;\n  cin >> n >> t;\n  a[100][100] = n;\n  if (n >= 4) q.push(make_pair(100, 100));\n  while (!q.empty()) {\n    long long x = q.front().first;\n    long long y = q.front().second;\n    q.pop();\n    if (a[x][y] < 4) continue;\n    long long add = a[x][y] / 4;\n    a[x][y] %= 4;\n    for (long long i = 0; i < 4; i++) {\n      long long nx = x + dx[i];\n      long long ny = y + dy[i];\n      long long temp = a[nx][ny];\n      a[nx][ny] += add;\n      if (temp < 4 && a[nx][ny] >= 4) {\n        q.push(make_pair(nx, ny));\n      }\n    }\n  }\n  while (t--) {\n    long long x, y;\n    scanf(\"%lld\", &x);\n    scanf(\"%lld\", &y);\n    if (x < -100 || x > 100 || y < -100 || y > 100) {\n      cout << \"0\\n\";\n    } else\n      cout << a[100 + x][100 + y] << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\n__inline bool nextInt(int &val) {\n  char ch;\n  int sgn = 1;\n  while ((ch = getchar()) != EOF) {\n    if (ch == '-') sgn = -1;\n    if (ch >= '0' && ch <= '9') break;\n  }\n  if (ch == EOF) return false;\n  val = (int)(ch - '0');\n  while (true) {\n    ch = getchar();\n    if (ch >= '0' && ch <= '9') {\n      val = 10 * val + (int)(ch - '0');\n    } else\n      break;\n  }\n  val *= sgn;\n  return true;\n}\n__inline bool nextString(string &s) {\n  char ch;\n  while ((ch = getchar()) != EOF) {\n    if (ch >= 33 && ch <= 126) break;\n  }\n  if (ch == EOF) return false;\n  s = string(1, ch);\n  while (true) {\n    ch = getchar();\n    if (ch >= 33 && ch <= 126) {\n      s = s + string(1, ch);\n    } else\n      break;\n  }\n  return true;\n}\nint dx[4] = {-1, 1, 0, 0}, dy[4] = {0, 0, -1, 1};\nint n, q, x[55888], y[55888], t[2 * 80][2 * 80][2];\nint main() {\n  ios_base::sync_with_stdio(false);\n  scanf(\"%d%d\", &n, &q);\n  for (int iq = 0; iq < (q); iq++) scanf(\"%d%d\", x + iq, y + iq);\n  memset(t, 0, sizeof(t));\n  ;\n  int cur = 0, ncur;\n  t[80][80][cur] = n;\n  bool ok = true;\n  int step = 0;\n  while (ok) {\n    step++;\n    ncur = 1 - cur;\n    for (int ix = 0; ix < (2 * 80); ix++)\n      for (int iy = 0; iy < (2 * 80); iy++) t[ix][iy][ncur] = 0;\n    for (int ix = (-80); ix < (80); ix++)\n      for (int iy = (-80); iy < (80); iy++) {\n        if (t[ix + 80][iy + 80][cur] >= 4) {\n          int add = t[ix + 80][iy + 80][cur] / 4;\n          t[ix + 80][iy + 80][ncur] += t[ix + 80][iy + 80][cur] % 4;\n          for (int way = 0; way < (4); way++) {\n            int nx = ix + dx[way], ny = iy + dy[way];\n            t[nx + 80][ny + 80][ncur] += add;\n          }\n        } else {\n          t[ix + 80][iy + 80][ncur] += t[ix + 80][iy + 80][cur];\n        }\n      }\n    ok = false;\n    for (int ix = 0; ix < 2 * 80 && !ok; ix++)\n      for (int iy = 0; iy < 2 * 80 && !ok; iy++)\n        ok = t[ix][iy][ncur] != t[ix][iy][cur];\n    cur = ncur;\n  }\n  for (int iq = 0; iq < (q); iq++) {\n    if (((x[iq]) > 0 ? (x[iq]) : -(x[iq])) >= 80 ||\n        ((y[iq]) > 0 ? (y[iq]) : -(y[iq])) >= 80)\n      printf(\"0\\n\");\n    else\n      printf(\"%d\\n\", t[80 + x[iq]][80 + y[iq]][cur]);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint cnt[1005][1005];\nint Ox = 505, Oy = 505;\nint dx[] = {1, -1, 0, 0}, dy[] = {0, 0, 1, -1};\nqueue<pair<int, int> > Q;\nbool inq[1005][1005];\ninline void init(int n) {\n  cnt[Ox][Oy] = n;\n  Q.push(make_pair(Ox, Oy));\n  pair<int, int> u;\n  while (!Q.empty()) {\n    u = Q.front();\n    Q.pop();\n    inq[u.first][u.second] = 0;\n    for (int d = 0; d < 4; ++d) {\n      int x = u.first + dx[d], y = u.second + dy[d];\n      cnt[x][y] += cnt[u.first][u.second] / 4;\n      if (cnt[x][y] >= 4) {\n        if (!inq[x][y]) {\n          inq[x][y] = 1;\n          Q.push(make_pair(x, y));\n        }\n      }\n    }\n    cnt[u.first][u.second] %= 4;\n  }\n}\ninline bool in(int x, int y) {\n  return 0 <= x && x < 1000 && 0 <= y && y < 1000;\n}\nint main() {\n  int n, t;\n  scanf(\"%d%d\", &n, &t);\n  init(n);\n  while (t--) {\n    int x, y;\n    scanf(\"%d%d\", &x, &y);\n    x += Ox;\n    y += Oy;\n    if (in(x, y))\n      printf(\"%d\\n\", cnt[x][y]);\n    else\n      puts(\"0\");\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nmap<pair<int, int>, int> mp;\nconst int dx[] = {1, -1, 0, 0};\nconst int dy[] = {0, 0, 1, -1};\nconst int maxn = 100 + 100 + 10;\nint a[maxn][maxn], t;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin >> a[100][100] >> t;\n  bool flag = true;\n  while (flag) {\n    flag = false;\n    for (int i = 1; i <= 200; i++)\n      for (int j = 1; j <= 200; j++) {\n        if (a[i][j] >= 4) {\n          flag = true;\n          int x = a[i][j] / 4;\n          a[i + 1][j] += x;\n          a[i][j + 1] += x;\n          a[i - 1][j] += x;\n          a[i][j - 1] += x;\n          a[i][j] -= x * 4;\n        }\n      }\n  }\n  for (int i = 1; i <= t; i++) {\n    int x, y;\n    cin >> x >> y;\n    if (x > -100 && x < 100 && y > -100 && y < 100)\n      cout << a[100 + x][100 + y] << endl;\n    else\n      cout << \"0\" << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\n/**\n *\n * @author meskill\n */\npublic class Ants {\n\n    static int a[][];\n\n    /**\n     * @param args the command line arguments\n     */\n    public static void main(String[] args) {\n        // TODO code application logic here\n        Scanner sc = new Scanner(System.in);\n        a = new int[401][401];\n        a[200][200] = sc.nextInt();\n        int i = 0;\n        boolean next = true;\n        while (next) {\n            int l = 200 - i;\n            int r = 200 + i;\n            int j = l;\n            next = false;\n            while (j <= r) {\n                int k = l;\n                while (k <= r) {\n                    if (a[j][k] >= 4) {\n                        int buf = a[j][k] / 4;\n                        a[j - 1][k] += buf;\n                        a[j + 1][k] += buf;\n                        a[j][k - 1] += buf;\n                        a[j][k + 1] += buf;\n                        a[j][k] %= 4;\n                        next=true;\n                    }\n                    k++;\n                }\n                j++;\n            }\n            if (a[r+1][200]>=4) {\n                i++;\n            }\n        }\n        int m = sc.nextInt();\n        i = 0;\n        while (i < m) {\n            int x = sc.nextInt() + 200;\n            int y = sc.nextInt() + 200;\n            if (x < 0 || y < 0 || x > 399 || y > 399) {\n                System.out.println(\"0\");\n            } else {\n                System.out.println(a[x][y]);\n            }\n            i++;\n        }\n    }\n}"
        },
        {
            "language": 4,
            "solution": "import java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\nimport java.io.BufferedReader;\nimport java.io.OutputStream;\nimport java.util.ArrayDeque;\nimport java.io.PrintWriter;\nimport java.io.File;\nimport java.util.StringTokenizer;\nimport java.util.Queue;\nimport java.util.Collection;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n * @author Sabelan\n */\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tFastScanner in = new FastScanner(inputStream);\n\t\tPrintWriter out = new PrintWriter(outputStream);\n\t\tTaskB solver = new TaskB();\n\t\tsolver.solve(1, in, out);\n\t\tout.close();\n\t}\n}\n\nclass TaskB {\n  public void solve(int testNumber, FastScanner in, PrintWriter out) {\n    int n = in.nextInt();\n    int size = 70;\n    int[][] cur = new int[size][size];\n    cur[0][0] = n;\n    Queue<Integer> q = new ArrayDeque<Integer>();\n    q.add(0);\n    q.add(0);\n    int[] dx = {0, 0, -1, 1};\n    int[] dy = {1, -1, 0, 0};\n    boolean[][] alreadyAdded = new boolean[size][size];\n    while (!q.isEmpty()) {\n      int x = q.poll();\n      int y = q.poll();\n      alreadyAdded[x][y] = false;\n      int add = (cur[x][y] / 4);\n      cur[x][y] %= 4;\n      if (add != 0) {\n        for (int i = 0; i < dx.length; i++) {\n          int nx = x + dx[i];\n          int ny = y + dy[i];\n          if (nx < 0 || ny < 0) continue;\n          cur[nx][ny] += add;\n          if (nx == 0 && ny == 0)\n            cur[nx][ny] += add;\n          else if (x != 0 && y != 0) {\n            if (nx == 0 || ny == 0)\n              cur[nx][ny] += add;\n          }\n          if (cur[nx][ny] >= 4 && !alreadyAdded[nx][ny]) {\n            alreadyAdded[nx][ny] = true;\n            q.add(nx);\n            q.add(ny);\n          }\n        }\n      }\n    }\n\n\n    if (n == 30000) {\n      try {\n        PrintWriter a = new PrintWriter(new File(\"temp.txt\"));\n        for (int[] aa : cur) {\n          a.printf(\"%s\\n\", Arrays.toString(aa));\n        }\n      } catch (Exception e) {\n\n      }\n    }\n\n    int t = in.nextInt();\n    for (int i = 0; i < t; i++) {\n      int x = Math.abs(in.nextInt());\n      int y = Math.abs(in.nextInt());\n\n      if (x < 0 || x >= size || y < 0 || y >= size) {\n        out.println(0);\n      } else {\n        out.println(cur[x][y]);\n      }\n    }\n  }\n}\n\nclass FastScanner {\n  BufferedReader br;\n  StringTokenizer st;\n\n  public FastScanner(InputStream in) {\n    br = new BufferedReader(new InputStreamReader(in));\n    st = new StringTokenizer(\"\");\n  }\n\n  public String next() {\n    try {\n      if (st.hasMoreTokens()) return st.nextToken();\n      st = new StringTokenizer(br.readLine());\n      return next();\n    } catch (Exception e) {\n      return \"\";\n    }\n  }\n\n  public int nextInt() {\n    return Integer.parseInt(next());\n  }\n\n  }\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint arr[700][700];\nvoid solve(int x, int y) {\n  if (arr[x][y] < 3)\n    arr[x][y]++;\n  else {\n    arr[x][y] = 0;\n    solve(x + 1, y);\n    solve(x - 1, y);\n    solve(x, y + 1);\n    solve(x, y - 1);\n  }\n}\nint main() {\n  int n, t, x, y;\n  cin >> n >> t;\n  for (int i = 0; i < n; i++) solve(300, 300);\n  for (int i = 0; i < t; i++) {\n    cin >> x >> y;\n    if (x < (-200) || x > 200 || y < (-200) || y > 200)\n      cout << 0 << endl;\n    else\n      cout << arr[x + 300][y + 300] << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 4096;\nconst int off = 145;\nint n, q, A[MAXN][MAXN];\nint dr[4] = {-1, 0, 1, 0};\nint dc[4] = {0, 1, 0, -1};\nint main() {\n  while (scanf(\"%d %d\", &n, &q) >= 1) {\n    A[off][off] = n;\n    bool ok = false;\n    while (!ok) {\n      ok = true;\n      for (int i = (-off); i < (int)(off + 1); i++) {\n        for (int j = (-off); j < (int)(off + 1); j++) {\n          if (A[off + i][off + j] >= 4) {\n            for (int k = (0); k < (int)(4); k++) {\n              int p = i + dr[k];\n              int q = j + dc[k];\n              A[off + p][off + q] += A[off + i][off + j] / 4;\n            }\n            A[off + i][off + j] %= 4;\n            ok = false;\n          }\n        }\n      }\n    }\n    for (int i = (0); i < (int)(q); i++) {\n      int a, b;\n      scanf(\"%d %d\", &a, &b);\n      if (abs(a) > off) {\n        printf(\"0\\n\");\n        continue;\n      }\n      if (abs(b) > off) {\n        printf(\"0\\n\");\n        continue;\n      }\n      printf(\"%d\\n\", A[off + a][off + b]);\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 5e3 + 10;\nint ans[4002][4002];\nint dx[4] = {0, 0, -1, 1}, dy[4] = {1, -1, 0, 0};\nvoid dfs(int x, int y) {\n  int t = ans[x][y] / 4;\n  ans[x][y] %= 4;\n  for (int i = 0; i < 4; i++) ans[x + dx[i]][y + dy[i]] += t;\n  for (int i = 0; i < 4; i++)\n    if (ans[x + dx[i]][y + dy[i]] >= 4) dfs(x + dx[i], y + dy[i]);\n}\nint main() {\n  int n, q;\n  cin >> n >> q;\n  ans[2000][2000] = n;\n  dfs(2000, 2000);\n  for (int p = 0; p < q; p++) {\n    int a, b;\n    cin >> a >> b;\n    if (abs(a) > 2000 || abs(b) > 2000)\n      cout << 0 << \"\\n\";\n    else\n      cout << ans[a + 2000][b + 2000] << \"\\n\";\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint T[3000][3000], f, c, nf, nc, n, m;\nlong long x, y;\nqueue<pair<int, int> > Q;\nconst int mf[] = {0, 0, 1, -1}, mc[] = {-1, 1, 0, 0};\nvoid bfs() {\n  Q.push(pair<int, int>(1000, 1000));\n  while (!Q.empty()) {\n    f = Q.front().first;\n    c = Q.front().second;\n    Q.pop();\n    if (T[f][c] >= 4)\n      for (int i = 0; i < 4; i++) {\n        nf = mf[i] + f;\n        nc = mc[i] + c;\n        T[nf][nc] += T[f][c] / 4;\n        Q.push(pair<int, int>(nf, nc));\n      }\n    T[f][c] %= 4;\n  }\n}\nint main() {\n  scanf(\"%d %d\\n\", &n, &m);\n  T[0 + 1000][0 + 1000] = n;\n  bfs();\n  for (int i = 1; i <= m; i++) {\n    scanf(\"%I64d %I64d\", &x, &y);\n    if (x > -1000 && x < 1000 && y < 1000 && y > -1000)\n      printf(\"%d\\n\", T[x + 1000][y + 1000]);\n    else\n      printf(\"0\\n\");\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint tab[300][300];\nint res[300][300];\nint dx[4] = {0, 0, 1, -1};\nint dy[4] = {1, -1, 0, 0};\nint in(int i, int j) { return (i >= 0 && i < 300 && j >= 0 && j < 300); }\nint main() {\n  int n, t, r, f, x, y;\n  cin >> n >> t;\n  r = 0;\n  tab[70][70] = n;\n  do {\n    f = 0;\n    for (int i = 0; i <= 140; i++) {\n      for (int j = 0; j <= 140; j++) {\n        tab[i][j] += res[i][j];\n        res[i][j] = 0;\n        if (tab[i][j] > 3) {\n          for (int k = 0; k < 4; k++)\n            if (in(i + dx[k], j + dy[k]))\n              res[i + dx[k]][j + dy[k]] += tab[i][j] / 4;\n          f = 1;\n        }\n        tab[i][j] = tab[i][j] % 4;\n      }\n    }\n  } while (f == 1);\n  for (int i = 0; i < t; i++) {\n    cin >> x >> y;\n    x += 70;\n    y += 70;\n    if (x > 140 || x < 0 || y > 140 || y < 0)\n      cout << 0 << endl;\n    else\n      cout << tab[x][y] << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nstatic const int MAXSZ = 70;\nstatic const int MAXSZ_VALID = 67;\nint g[MAXSZ][MAXSZ] = {{0}};\ninline bool step() {\n  static int h[MAXSZ][MAXSZ];\n  memset(h, 0, sizeof h);\n  for (int i = 0; i < MAXSZ - 1; ++i)\n    for (int j = 0; j < MAXSZ - 1; ++j) {\n      if (j) h[i][j - 1] += g[i][j] / 4;\n      h[i][j + 1] += g[i][j] / 4;\n      if (i) h[i - 1][j] += g[i][j] / 4;\n      h[i + 1][j] += g[i][j] / 4;\n    }\n  for (int i = 0; i < MAXSZ; ++i) h[0][i] += g[1][i] / 4;\n  for (int i = 0; i < MAXSZ; ++i) h[i][0] += g[i][1] / 4;\n  for (int i = 0; i < MAXSZ; ++i)\n    for (int j = 0; j < MAXSZ; ++j) h[i][j] += g[i][j] % 4;\n  if (memcmp(g, h, sizeof h) == 0) return false;\n  memcpy(g, h, sizeof h);\n  return true;\n}\nint n, t;\nint main() {\n  scanf(\"%d%d\", &n, &t);\n  g[0][0] = n;\n  while (step())\n    ;\n  int x, y;\n  for (int i = 0; i < t; ++i) {\n    scanf(\"%d%d\", &x, &y);\n    if (x < 0) x = -x;\n    if (y < 0) y = -y;\n    if (x >= MAXSZ_VALID || y >= MAXSZ_VALID)\n      puts(\"0\");\n    else\n      printf(\"%d\\n\", g[x][y]);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint neigh[4][2] = {{0, 1}, {1, 0}, {0, -1}, {-1, 0}};\nint a[200][200];\nint main() {\n  int i, j, k, m, n, tmp, x, y;\n  memset(a, 0, sizeof(a));\n  vector<pair<int, int> > q;\n  scanf(\"%d%d\", &n, &m);\n  q.clear();\n  q.push_back(make_pair(100, 100));\n  a[100][100] = n;\n  for (i = 0; i < q.size(); i++) {\n    tmp = a[q[i].first][q[i].second] / 4;\n    a[q[i].first][q[i].second] %= 4;\n    for (j = 0; j < 4; j++) {\n      x = q[i].first + neigh[j][0];\n      y = q[i].second + neigh[j][1];\n      a[x][y] += tmp;\n      if ((a[x][y] - tmp < 4) && (a[x][y] >= 4)) q.push_back(make_pair(x, y));\n    }\n  }\n  for (i = 0; i < m; i++) {\n    scanf(\"%d%d\", &x, &y);\n    if ((abs(x) >= 100) || (abs(y) >= 100))\n      printf(\"0\\n\");\n    else\n      printf(\"%d\\n\", a[x + 100][y + 100]);\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint arr[200][200];\nvoid solve(int x, int y) {\n  if (arr[x][y] < 3)\n    arr[x][y]++;\n  else {\n    arr[x][y] = 0;\n    solve(x + 1, y);\n    solve(x - 1, y);\n    solve(x, y + 1);\n    solve(x, y - 1);\n  }\n}\nint main() {\n  int n, t, x, y;\n  cin >> n >> t;\n  for (int i = 0; i < n; i++) solve(80, 80);\n  for (int i = 0; i < t; i++) {\n    cin >> x >> y;\n    if (x < (-80) || x > 80 || y < (-80) || y > 80)\n      cout << 0 << endl;\n    else\n      cout << arr[x + 80][y + 80] << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nconst int N = 65;\nint t, x, y, a[N + N][N + N];\nint main() {\n  scanf(\"%d%d\", &a[N][N], &t);\n  bool flag = 1;\n  while (flag) {\n    flag = 0;\n    for (x = 1; x < N + N; x++)\n      for (y = 1; y < N + N; y++)\n        if (a[x][y] >= 4) {\n          flag = 1;\n          a[x + 1][y] += a[x][y] / 4;\n          a[x - 1][y] += a[x][y] / 4;\n          a[x][y + 1] += a[x][y] / 4;\n          a[x][y - 1] += a[x][y] / 4;\n          a[x][y] %= 4;\n        }\n  }\n  while (t--) {\n    scanf(\"%d%d\", &x, &y);\n    printf(\"%d\\n\", abs(x) < N && abs(y) < N ? a[N + x][N + y] : 0);\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint _G[299][299];\nbool _inQueue[299][299];\nqueue<pair<int, int> > q;\nint main(void) {\n  int n = 0;\n  int t = 0;\n  scanf(\"%d %d\", &n, &t);\n  _G[(0) + (144)][(0) + (144)] = n;\n  _inQueue[(0) + (144)][(0) + (144)] = true;\n  q.push(pair<int, int>(0, 0));\n  while (!q.empty()) {\n    pair<int, int> tx = q.front();\n    q.pop();\n    int x = tx.first;\n    int y = tx.second;\n    _inQueue[(x) + (144)][(y) + (144)] = false;\n    int addIt = _G[(x) + (144)][(y) + (144)] / 4;\n    _G[(x) + (144)][(y) + (144)] %= 4;\n    _G[(x - 1) + (144)][(y) + (144)] += addIt;\n    _G[(x) + (144)][(y - 1) + (144)] += addIt;\n    _G[(x + 1) + (144)][(y) + (144)] += addIt;\n    _G[(x) + (144)][(y + 1) + (144)] += addIt;\n    if (_G[(x - 1) + (144)][(y) + (144)] >= 4 &&\n        !_inQueue[(x - 1) + (144)][(y) + (144)]) {\n      _inQueue[(x - 1) + (144)][(y) + (144)] = true;\n      q.push(pair<int, int>(x - 1, y));\n    }\n    if (_G[(x) + (144)][(y - 1) + (144)] >= 4 &&\n        !_inQueue[(x) + (144)][(y - 1) + (144)]) {\n      _inQueue[(x) + (144)][(y - 1) + (144)] = true;\n      q.push(pair<int, int>(x, y - 1));\n    }\n    if (_G[(x + 1) + (144)][(y) + (144)] >= 4 &&\n        !_inQueue[(x + 1) + (144)][(y) + (144)]) {\n      _inQueue[(x + 1) + (144)][(y) + (144)] = true;\n      q.push(pair<int, int>(x + 1, y));\n    }\n    if (_G[(x) + (144)][(y + 1) + (144)] >= 4 &&\n        !_inQueue[(x) + (144)][(y + 1) + (144)]) {\n      _inQueue[(x) + (144)][(y + 1) + (144)] = true;\n      q.push(pair<int, int>(x, y + 1));\n    }\n  }\n  while (t--) {\n    int x = 0;\n    int y = 0;\n    scanf(\"%d %d\", &x, &y);\n    if (x < -144 || x > 144 || y < -144 || y > 144)\n      puts(\"0\");\n    else\n      printf(\"%d\\n\", _G[(x) + (144)][(y) + (144)]);\n  }\n  while (getchar() != EOF)\n    ;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int b[4][2] = {{-1, 0}, {0, -1}, {0, 1}, {1, 0}};\nint a[405][405], c[405][405];\nint n, t, last;\nvoid solve() {\n  a[200][200] = n;\n  int step = 0;\n  while (1) {\n    bool diff = 0;\n    memset(c, 0, sizeof c);\n    for (int i = 200 - step; i <= 200 + step; i++)\n      for (int j = 200 - step; j <= 200 + step; j++) {\n        if (a[i][j] < 4) continue;\n        diff = 1;\n        int u = a[i][j] / 4;\n        a[i][j] %= 4;\n        for (int x = 0; x < 4; x++) {\n          int _i = i + b[x][0], _j = j + b[x][1];\n          c[_i][_j] += u;\n        }\n      }\n    step = min(step + 1, 64);\n    for (int i = 200 - step; i <= 200 + step; i++)\n      for (int j = 200 - step; j <= 200 + step; j++) {\n        a[i][j] += c[i][j];\n      }\n    if (!diff) break;\n  }\n}\nint main() {\n  ios::sync_with_stdio(0);\n  cin >> n >> t;\n  solve();\n  while (t--) {\n    int x, y;\n    cin >> x >> y;\n    x += 200;\n    y += 200;\n    if (x < 0 || y < 0 || x > 400 || y > 400)\n      cout << \"0\\n\";\n    else {\n      int k = a[x][y];\n      cout << k << '\\n';\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[1010][1010], n, x, y, t;\nvoid work(int x, int y) {\n  if (a[x][y] < 3) {\n    a[x][y]++;\n  } else {\n    a[x][y] = 0;\n    work(x + 1, y);\n    work(x - 1, y);\n    work(x, y + 1);\n    work(x, y - 1);\n  }\n}\nint main() {\n  scanf(\"%d %d\", &n, &t);\n  for (int i = 1; i <= n; i++) {\n    work(500, 500);\n  }\n  while (t--) {\n    scanf(\"%d %d\", &x, &y);\n    if (x > 100 || y > 100 || x < -100 || y < -100) {\n      printf(\"0\\n\");\n    } else {\n      printf(\"%d\\n\", a[x + 500][y + 500]);\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, q, arr[200][200] = {0}, u, v;\n  bool done = false;\n  cin >> n >> q;\n  arr[99][99] = n;\n  while (!done) {\n    done = true;\n    for (int x = 0; x < 200; ++x) {\n      for (int y = 0; y < 200; ++y) {\n        if (arr[x][y] >= 4) {\n          done = false;\n          if (x + 1 < 200) arr[x + 1][y] += arr[x][y] / 4;\n          if (x - 1 >= 0) arr[x - 1][y] += arr[x][y] / 4;\n          if (y + 1 < 200) arr[x][y + 1] += arr[x][y] / 4;\n          if (y - 1 >= 0) arr[x][y - 1] += arr[x][y] / 4;\n          arr[x][y] %= 4;\n        }\n      }\n    }\n  }\n  while (q--) {\n    cin >> u >> v;\n    if (u + 99 >= 200 || u + 99 < 0 || v + 99 >= 200 || v + 99 < 0)\n      cout << 0 << endl;\n    else\n      cout << arr[u + 99][v + 99] << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint v[200 + 10][200 + 10];\nbool f[200 + 10][200 + 10];\nqueue<pair<int, int> > q;\npair<int, int> tmp[10000];\nint sz;\nint main() {\n  int n, t;\n  cin >> n >> t;\n  int bs = 100;\n  for (int i = 0; i <= 200; ++i)\n    for (int j = 0; j <= 200; ++j) f[i][j] = false, v[i][j] = 0;\n  v[bs][bs] = n;\n  if (n >= 4) {\n    f[bs][bs] = true;\n    q.push(make_pair(bs, bs));\n  }\n  while (true) {\n    if (q.empty()) break;\n    int i, j;\n    sz = 0;\n    while (!q.empty()) {\n      i = q.front().first;\n      j = q.front().second;\n      q.pop();\n      f[i][j] = false;\n      v[i][j] -= 4;\n      ++v[i + 1][j];\n      ++v[i - 1][j];\n      ++v[i][j - 1];\n      ++v[i][j + 1];\n      tmp[sz++] = make_pair(i, j);\n    }\n    for (int t = 0; t < sz; ++t) {\n      i = tmp[t].first;\n      j = tmp[t].second;\n      if (v[i][j] >= 4 && !f[i][j]) {\n        f[i][j] = true;\n        q.push(make_pair(i, j));\n      }\n      if (v[i + 1][j] >= 4 && !f[i + 1][j]) {\n        f[i + 1][j] = true;\n        q.push(make_pair(i + 1, j));\n      }\n      if (v[i - 1][j] >= 4 && !f[i - 1][j]) {\n        f[i - 1][j] = true;\n        q.push(make_pair(i - 1, j));\n      }\n      if (v[i][j - 1] >= 4 && !f[i][j - 1]) {\n        f[i][j - 1] = true;\n        q.push(make_pair(i, j - 1));\n      }\n      if (v[i][j + 1] >= 4 && !f[i][j + 1]) {\n        f[i][j + 1] = true;\n        q.push(make_pair(i, j + 1));\n      }\n    }\n  }\n  for (int i = 0; i < t; ++i) {\n    int x, y;\n    scanf(\"%d %d\", &x, &y);\n    if (abs(x) > 65 || abs(y) > 65) {\n      printf(\"0\");\n    } else {\n      printf(\"%d\", v[bs - y][bs + x]);\n    }\n    printf(\"\\n\");\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  int n, q;\n  cin >> n >> q;\n  const int N = 200, M = 100;\n  vector<vector<int> > a(N), b(N);\n  for (int i = 0; i < N; i++) a[i].resize(N), b[i].resize(N);\n  a[M][M] = n;\n  while (1) {\n    for (int i = 0; i < N; i++)\n      for (int j = 0; j < N; j++) b[i][j] = 0;\n    int cnt = 0;\n    for (int i = 0; i < N; i++)\n      for (int j = 0; j < N; j++) {\n        if (a[i][j] >= 4) {\n          cnt++;\n          b[i][j] += a[i][j] & 3;\n          b[i][j + 1] += a[i][j] >> 2;\n          b[i][j - 1] += a[i][j] >> 2;\n          b[i + 1][j] += a[i][j] >> 2;\n          b[i - 1][j] += a[i][j] >> 2;\n        } else\n          b[i][j] += a[i][j];\n      }\n    a = b;\n    if (cnt == 0) break;\n  }\n  while (q--) {\n    int x, y;\n    cin >> x >> y;\n    x += M, y += M;\n    if (x < 0 || x >= N || y < 0 || y >= N) {\n      puts(\"0\");\n      continue;\n    }\n    printf(\"%d\\n\", a[x][y]);\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <class T>\nvoid initvv(vector<vector<T> > &v, int a, int b, const T &t = T()) {\n  v.assign(a, vector<T>(b, t));\n}\ntemplate <class F, class T>\nvoid convert(const F &f, T &t) {\n  stringstream ss;\n  ss << f;\n  ss >> t;\n}\nconst int of = 80;\nint c[of * 2 + 1][of * 2 + 1];\nbool f[of * 2 + 1][of * 2 + 1];\nint dx[] = {-1, 0, 1, 0};\nint dy[] = {0, -1, 0, 1};\nint main() {\n  int n, t;\n  scanf(\"%d%d\", &n, &t);\n  c[of][of] = n;\n  vector<int> v1, v2;\n  if (n > 3) {\n    v1.push_back(of << 16 | of);\n  }\n  int mx = 0;\n  bool flag = true;\n  while (flag) {\n    flag = false;\n    v2.clear();\n    for (int i = 0; i < v1.size(); ++i) {\n      int y = v1[i] >> 16 & 0xffff;\n      int x = v1[i] & 0xffff;\n      if (c[y][x] < 4) {\n        continue;\n      }\n      int k = c[y][x] >> 2;\n      c[y][x] -= k * 4;\n      flag = true;\n      for (int j = 0; j < 4; ++j) {\n        int ny = y + dy[j], nx = x + dx[j];\n        c[ny][nx] += k;\n        mx = max(mx, nx);\n        if (c[ny][nx] > 3 && !f[ny][nx]) {\n          f[ny][nx] = true;\n          v2.push_back(ny << 16 | nx);\n        }\n      }\n    }\n    v1.swap(v2);\n    memset(f, 0, sizeof f);\n  }\n  int qy, qx;\n  for (int i = 0; i < t; ++i) {\n    scanf(\"%d%d\", &qx, &qy);\n    int res = 0;\n    if (abs(qx) < of - 1 && abs(qy) < of - 1) {\n      res = c[qx + of][qy + of];\n    }\n    printf(\"%d\\n\", res);\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.InputMismatchException;\nimport java.io.PrintStream;\nimport java.io.BufferedReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.io.Reader;\nimport java.io.Writer;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n * @author Nipuna Samarasekara\n */\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tFastScanner in = new FastScanner(inputStream);\n\t\tFastPrinter out = new FastPrinter(outputStream);\n\t\tTask1 solver = new Task1();\n\t\tsolver.solve(1, in, out);\n\t\tout.close();\n\t}\n}\n\nclass Task1 {\n\n    /////////////////////////////////////////////////////////////\n\n    static void go(int[][] A, int x, int y) {\n        int add = A[x][y] / 4;\n        A[x][y] -= add * 4;\n        int i, j;\n        i = x+1;\n        j = y;\n        A[i][j]+=add;\n        if (A[i][j] >= 4) go(A, i, j);\n        i = x-1;\n        j = y;\n        A[i][j]+=add;\n        if (A[i][j] >= 4) go(A, i, j);\n        i = x;\n        j = y+1;\n        A[i][j]+=add;\n        if (A[i][j] >= 4) go(A, i, j);\n        i = x;\n        j = y-1;\n        A[i][j]+=add;\n        if (A[i][j] >= 4) go(A, i, j);\n\n    }\n\n    public void solve(int testNumber, FastScanner in, FastPrinter out) {\n        int size = 130;\n        int[][] A = new int[size][size];\n        int bar = size / 2;\n        int n = in.nextInt(), t = in.nextInt();\n        A[bar][bar] = n;\n        go(A, bar, bar);\n\n      int sum=0;\n        for (int i = 0; i < size; i++) {\n            for (int j = 0; j < size; j++) {\n            //    System.out.print(A[i][j] + \" \");\n                sum+=A[i][j];\n            }\n         //   System.out.println();\n        }\n        for (int i = 0; i < t; i++) {\n            int x=in.nextInt()+bar,y=in.nextInt()+bar;\n            if(x>=0&&x<size&&y>=0&&y<size) out.println(A[x][y]);\n            else out.println(0);\n        }\n      //  System.out.println(\"sum \"+sum);\n    }\n}\n\nclass FastScanner extends BufferedReader {\n\n    public FastScanner(InputStream is) {\n        super(new InputStreamReader(is));\n    }\n\n    public int read() {\n        try {\n            int ret = super.read();\n//            if (isEOF && ret < 0) {\n//                throw new InputMismatchException();\n//            }\n//            isEOF = ret == -1;\n            return ret;\n        } catch (IOException e) {\n            throw new InputMismatchException();\n        }\n    }\n\n    static boolean isWhiteSpace(int c) {\n        return c >= 0 && c <= 32;\n    }\n\n    public int nextInt() {\n        int c = read();\n        while (isWhiteSpace(c)) {\n            c = read();\n        }\n        int sgn = 1;\n        if (c == '-') {\n            sgn = -1;\n            c = read();\n        }\n        int ret = 0;\n        while (c >= 0 && !isWhiteSpace(c)) {\n            if (c < '0' || c > '9') {\n                throw new NumberFormatException(\"digit expected \" + (char) c\n                        + \" found\");\n            }\n            ret = ret * 10 + c - '0';\n            c = read();\n        }\n        return ret * sgn;\n    }\n\n    public String readLine() {\n        try {\n            return super.readLine();\n        } catch (IOException e) {\n            return null;\n        }\n    }\n\n}\n\nclass FastPrinter extends PrintWriter {\n\n    public FastPrinter(OutputStream out) {\n        super(out);\n    }\n\n    public FastPrinter(Writer out) {\n        super(out);\n    }\n\n\n}\n\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\nimport java.math.*;\n\npublic class Main {\n\n    static final String input = \"stdin\";\n    static final String ouput = \"stdout\";\n    \n    static final int MAXN = 156;\n    static final int OFFSET = 75;\n    int[][] num = new int[MAXN][MAXN];\n    \n    void bfs(int sx, int sy, int n) {\n        int mix = sx, max = sx, miy = sy, may = sy;\n        num[sx][sy] = n;\n        boolean flag = true;\n        int[] dx = {-1, 0, 1, 0};\n        int[] dy = {0, 1, 0, -1};\n        int cnt = 0;\n        while (flag) {\n            flag = false;\n            for (int x = mix; x <= max; ++x) {\n                for (int y = miy; y <= may; ++y) {\n                    if (num[x][y] < 4) continue;\n                    flag = true;\n                    int ret = num[x][y] / 4;\n                    num[x][y] %= 4;\n                    for (int k = 0; k < 4; ++k) {\n                        mix = Math.min(mix, x + dx[k]);\n                        max = Math.max(max, x + dx[k]);\n                        miy = Math.min(miy, y + dy[k]);\n                        may = Math.max(may, y + dy[k]);\n                        num[x + dx[k]][y + dy[k]] += ret;\n                    }\n                }\n            }\n            //out.println(cnt++); out.flush();\n        }\n    }\n    \n    boolean isvalid(int x, int y) {\n        return x >= 0 && y >= 0 && x < MAXN && y < MAXN;\n    }\n    \n    void solved(int nT) throws IOException {\n        int n = cin.nextInt();\n        int t = cin.nextInt();\n        bfs(OFFSET, OFFSET, n);\n        for (int i = 0; i < t; ++i) {\n            int x = cin.nextInt() + OFFSET;\n            int y = cin.nextInt() + OFFSET;\n            if (isvalid(x, y)) {\n                out.println(num[x][y]);\n            } else {\n                out.println(0);\n            }\n        }\n    }\n\n    void init() {\n    }\n\n    public static void main(String[] args) throws IOException {\n        Main solved = new Main();\n        solved.init();\n        int T = 1;\n        //T = cin.nextInt();\n        for (int nT = 1; nT <= T; ++nT) {\n            solved.solved(nT);\n        }\n        out.close();\n    }\n\n    static {\n        try {\n            File file = new File(input);\n            if (file.exists() && file.canRead()) {\n                cin = new InputReader();\n                out = new PrintWriter(new PrintWriter(ouput));\n            } else {\n                cin = new InputReader();\n                out = new PrintWriter(System.out);\n            }\n        } catch (FileNotFoundException e) {\n            e.printStackTrace();\n        }\n    }\n\n    static InputReader cin;\n    static PrintWriter out;\n}\n\nclass InputReader {\n    BufferedReader reader;\n    StringTokenizer tokenizer;\n\n    InputReader() {\n        reader = new BufferedReader(new InputStreamReader(System.in));\n        tokenizer = new StringTokenizer(\"\");\n    }\n\n    String next() throws IOException {\n        while (!tokenizer.hasMoreTokens()) {\n            tokenizer = new StringTokenizer(reader.readLine());\n        }\n        return tokenizer.nextToken();\n    }\n\n    Integer nextInt() throws IOException {\n        return Integer.parseInt(next());\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nbool workingLocal = false;\nconst int INF = 1000 * 1000 * 1000 + 7;\nconst double EPS = 1e-9;\ntemplate <class T>\nvoid chmin(T &t, T f) {\n  if (t > f) t = f;\n}\ntemplate <class T>\nvoid chmax(T &t, T f) {\n  if (t < f) t = f;\n}\ninline int getint() {\n  int a;\n  return scanf(\"%d\", &a) ? a : (fprintf(stderr, \"trying to read\\n\"), -1);\n}\ninline double getdouble() {\n  double a;\n  return scanf(\"%lf\", &a) ? a : (fprintf(stderr, \"trying to read\\n\"), -1.0);\n}\nconst int N = 100;\nint a[2 * N + 1][2 * N + 1];\nint done() {\n  for (int i = (int)0; i < (int)2 * N + 1; ++i)\n    for (int j = (int)0; j < (int)2 * N + 1; ++j)\n      if (a[i][j] >= 4) return false;\n  return true;\n}\nvoid myCode() {\n  int n = getint();\n  a[N][N] = n;\n  while (!done()) {\n    for (int i = (int)0; i < (int)2 * N + 1; ++i)\n      for (int j = (int)0; j < (int)2 * N + 1; ++j)\n        if (a[i][j] >= 4) {\n          if (i > 0) a[i - 1][j] += a[i][j] / 4;\n          if (j > 0) a[i][j - 1] += a[i][j] / 4;\n          if (i < 2 * N) a[i + 1][j] += a[i][j] / 4;\n          if (j < 2 * N) a[i][j + 1] += a[i][j] / 4;\n          a[i][j] %= 4;\n        }\n  }\n  int t = getint();\n  while (t--) {\n    int first = abs(getint()), second = abs(getint());\n    if (first >= N || second >= N)\n      printf(\"0\\n\");\n    else\n      printf(\"%d\\n\", a[first + N][second + N]);\n  }\n}\nint main() {\n  srand(time(NULL));\n  myCode();\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.StreamTokenizer;\nimport java.math.BigInteger;\nimport java.util.Scanner;\n\npublic class Main {\n\n    private long solve(long a, long b, long m) {\n        if (a >= m || b >= m) {\n            return 0;\n        }\n        if (m < 0) {\n            return -1;\n        }\n        if (a < 0 && b < 0) {\n            return -1;\n        }\n        long part = 0;\n        if (b < 0 || a < 0) {\n            if (b < 0) {\n                long tmp = a;\n                a = b;\n                b = tmp;\n            }\n            if (b == 0) {\n                return -1;\n            }\n            part = (-a + b - 1) / b;\n            a += part * b;\n        }\n        long res1 = tryAdd(a, b, m);\n        long res2 = tryAdd(b, a, m);\n        if (res1 == -1 && res2 == -1) {\n            return -1;\n        } else if (res2 == -1) {\n            return res2 + part;\n        } else if (res1 == -1) {\n            return res1 + part;\n        } else {\n            return Math.min(res1, res2) + part;\n        }\n\n    }\n\n    private long tryAdd(long aa, long bb, long mm) {\n        BigInteger a = BigInteger.valueOf(aa);\n        BigInteger b = BigInteger.valueOf(bb);\n        BigInteger m = BigInteger.valueOf(mm);\n        for (int i = 0; i < 100; i++) {\n            if (m.compareTo(a) <= 0 || m.compareTo(b) <= 0) {\n                return i;\n            }\n            BigInteger tmp = a.add(b);\n            a = b;\n            b = tmp;\n        }\n        return -1;\n    }\n\n    private void runOld() throws Exception {\n        Scanner sc = new Scanner(System.in);\n        long[][] vals = {{1, 2, 5},\n                {-1, 4, 15},\n                {0, -1, 5},\n                {1, 0, 1000000000000000000L},\n                {1, -1000000000000000000L, 1000000000000000000L}};\n        for (long[] v : vals) {\n            //System.out.printf(\"%d %d %d: %d\\n\", v[0], v[1], v[2], solve(v[0], v[1], v[2]));\n        }\n\n        long res = solve(sc.nextLong(), sc.nextLong(), sc.nextLong());\n\n        System.out.println(res);\n    }\n\n    private int[][] field;\n    private int[][] todo;\n    private int[][] newTodo;\n    private int n;\n    private int newN;\n\n    public void add(int x, int y) {\n        field[y][x]++;\n        if (field[y][x] == 4) {\n            newTodo[newN][0] = x;\n            newTodo[newN][1] = y;\n            newN++;\n        }\n    }\n\n    public void next() {\n        for (int i = 0; i < n; i++) {\n            int x = todo[i][0];\n            int y = todo[i][1];\n            field[y][x] -= 4;\n            if (field[y][x] >= 4) {\n                newTodo[newN][0] = x;\n                newTodo[newN][1] = y;\n                newN++;\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            int x = todo[i][0];\n            int y = todo[i][1];\n            add(x + 1, y);\n            add(x, y + 1);\n            if (x > 0) {\n                add(x - 1, y);\n            }\n            if (y > 0) {\n                add(x, y - 1);\n            }\n            if (x == 1) {\n                add(x - 1, y);\n            }\n            if (y == 1) {\n                add(x, y - 1);\n            }\n        }\n        n = newN;\n        newN = 0;\n        int[][] tmp = newTodo;\n        newTodo = todo;\n        todo = tmp;\n    }\n\n    public void init(int n) {\n        field = new int[200][200];\n        field[0][0] = n;\n        newTodo = new int[10000][2];\n        todo = new int[10000][2];\n        if (n >= 4) {\n            this.n = 1;\n        }\n    }\n\n    private int nextInt(StreamTokenizer stz) throws Exception {\n        stz.nextToken();\n        return (int) stz.nval;\n    }\n\n    public void run() throws Exception {\n        StreamTokenizer stz = new StreamTokenizer(System.in);\n        init(nextInt(stz));\n        while (n > 0) {\n            next();\n        }\n        int t = nextInt(stz);\n        for (int i = 0; i < t; i++) {\n            int x = nextInt(stz);\n            int y = nextInt(stz);\n            if (x < 0) {\n                x *= -1;\n            }\n            if (y < 0) {\n                y *= -1;\n            }\n            if (x > 200 || y > 200) {\n                System.out.println(0);\n            } else {\n                System.out.println(field[x][y]);\n            }\n\n        }\n    }\n\n    public void simulate() {\n        int n = 20;\n        int[][] arr = new int[n][n];\n        arr[n/2][n/2] = 100;\n        int cnt = 0;\n        while (true) {\n            boolean changed = false;\n            cnt++;\n            int[][] newArr = new int[n][n];\n            int insd = 0;\n            int mx = 0;\n            for (int i = 0; i < n; i++) {\n                for (int j = 0; j < n; j++) {\n                    if (arr[i][j] > 3) {\n                        newArr[i-1][j]++;\n                        newArr[i+1][j]++;\n                        newArr[i][j-1]++;\n                        newArr[i][j+1]++;\n                        newArr[i][j] += arr[i][j] - 4;\n                        insd++;\n                        mx = Math.max(i+1, mx);\n                        changed=true;\n                    } else {\n                        if (arr[i][j] > 0) {\n                            mx = Math.max(mx, i);\n                        }\n                        newArr[i][j] += arr[i][j];\n                    }\n                }\n            }\n            arr = newArr;\n            for (int i = 0; i < n; i++) {\n                for (int j = 0; j < n; j++) {\n                    System.out.printf(\"%2d \", arr[i][j]);\n                }\n                System.out.println();\n            }\n            System.out.println(mx + \" \" + insd);\n            if (!changed) {\n                break;\n            }\n        }\n        System.out.println(cnt);\n    }\n\n\n    public static void main(String[] args) throws Exception {\n        new Main().run();\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, t, f[140][140];\nvoid dq(int x, int y) {\n  if (f[x][y] < 4) return;\n  int k = f[x][y] / 4;\n  f[x][y] %= 4;\n  f[x + 1][y] += k;\n  dq(x + 1, y);\n  f[x - 1][y] += k;\n  dq(x - 1, y);\n  f[x][y + 1] += k;\n  dq(x, y + 1);\n  f[x][y - 1] += k;\n  dq(x, y - 1);\n}\nint main() {\n  cin >> f[70][70] >> t;\n  dq(70, 70);\n  while (t--) {\n    int x, y;\n    cin >> x >> y;\n    if (x < -70 || x >= 70 || y < -70 || y >= 70)\n      cout << 0 << endl;\n    else\n      cout << f[x + 70][y + 70] << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint Set(int N, int pos) { return N = N | (1 << pos); }\nint reset(int N, int pos) { return N = N & ~(1 << pos); }\nbool check(int N, int pos) { return (bool)(N & (1 << pos)); }\nvoid CI(int &_x) { scanf(\"%d\", &_x); }\nvoid CO(int &_x) { cout << _x; }\ntemplate <typename T>\nvoid getarray(T a[], int n) {\n  for (int i = 0; i < n; i++) cin >> a[i];\n}\ntemplate <typename T>\nvoid printarray(T a[], int n) {\n  for (int i = 0; i < n - 1; i++) cout << a[i] << \" \";\n  cout << a[n - 1] << endl;\n}\nconst double EPS = 1e-9;\nconst int INF = 0x7f7f7f7f;\nint dr8[8] = {1, -1, 0, 0, 1, -1, -1, 1};\nint dc8[8] = {0, 0, -1, 1, 1, 1, -1, -1};\nint dr4[4] = {0, 0, 1, -1};\nint dc4[4] = {-1, 1, 0, 0};\nint kn8r[8] = {1, 2, 2, 1, -1, -2, -2, -1};\nint kn8c[8] = {2, 1, -1, -2, -2, -1, 1, 2};\nint a = 1000;\nint n, t;\nint dis[3000][3000];\nvoid bfs() {\n  queue<pair<int, int> > Q;\n  Q.push(make_pair(0, 0));\n  dis[a + 0][a + 0] += n;\n  while (!Q.empty()) {\n    pair<int, int> top = Q.front();\n    Q.pop();\n    int per = dis[top.first + a][a + top.second] / 4;\n    dis[top.first + a][top.second + a] %= 4;\n    if (per == 0) continue;\n    for (int i = 0; i < 4; i++) {\n      int x = top.first + dr4[i];\n      int y = top.second + dc4[i];\n      dis[x + a][a + y] += per;\n      Q.push(make_pair(x, y));\n    }\n  }\n}\nint main() {\n  std::ios::sync_with_stdio(false);\n  cin >> n >> t;\n  bfs();\n  while (t--) {\n    int x, y;\n    cin >> x >> y;\n    if (abs(x) > a || abs(y) > a) {\n      cout << 0 << \"\\n\";\n    } else {\n      cout << dis[a + x][y + a] << \"\\n\";\n    }\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\ntemplate <class T>\nbool read(T &x) {\n  char *s;\n  s = (char *)malloc(10);\n  if (sizeof(x) == 1)\n    strcpy(s + 1, \" %c\");\n  else if (sizeof(x) == 4)\n    strcpy(s + 1, \"%d\");\n  else if (sizeof(x) == 8)\n    strcpy(s + 1, \"%lld\");\n  int k = scanf(s + 1, &x);\n  free(s);\n  return k != -1;\n}\nusing namespace std;\nint a[400][400], b[400][400];\nint main() {\n  int i, j, t, x, y, ok = 1;\n  cin >> a[89][89] >> t;\n  while (ok) {\n    ok = 0;\n    memset(b, 0, sizeof b);\n    for (int i = 1; i <= 180; i++)\n      for (int j = 1; j <= 180; j++) {\n        if (a[i][j] < 4) continue;\n        b[i][j] -= a[i][j] / 4 * 4;\n        b[i + 1][j] += a[i][j] / 4;\n        b[i - 1][j] += a[i][j] / 4;\n        b[i][j + 1] += a[i][j] / 4;\n        b[i][j - 1] += a[i][j] / 4;\n        ok = 1;\n      }\n    for (int i = 0; i <= 180; i++)\n      for (int j = 0; j <= 180; j++) a[i][j] += b[i][j];\n  }\n  while (t--) {\n    cin >> x >> y;\n    if (abs(x) > 87 or abs(y) > 87)\n      cout << 0 << endl;\n    else\n      cout << a[x + 89][y + 89] << endl;\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long a[1000][1000];\ninline void add(long long x, long long y) {\n  if (a[x][y] < 3)\n    a[x][y]++;\n  else if (a[x][y] == 3) {\n    a[x][y] = 0;\n    add(x + 1, y);\n    add(x, y + 1);\n    add(x - 1, y);\n    add(x, y - 1);\n  }\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  long long n;\n  cin >> n;\n  for (int i = 0; i < n; i++) add(500, 500);\n  long long t;\n  cin >> t;\n  long long x, y;\n  for (long long i = 0; i < t; i++) {\n    cin >> x >> y;\n    x = abs(x);\n    y = abs(y);\n    x += 500;\n    y += 500;\n    if (x > 1000 || y > 1000)\n      cout << \"0\" << endl;\n    else\n      cout << a[x][y] << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.UncheckedIOException;\nimport java.io.Closeable;\nimport java.io.Writer;\nimport java.io.OutputStreamWriter;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) throws Exception {\n        Thread thread = new Thread(null, new TaskAdapter(), \"\", 1 << 29);\n        thread.start();\n        thread.join();\n    }\n\n    static class TaskAdapter implements Runnable {\n        @Override\n        public void run() {\n            InputStream inputStream = System.in;\n            OutputStream outputStream = System.out;\n            FastInput in = new FastInput(inputStream);\n            FastOutput out = new FastOutput(outputStream);\n            BAnts solver = new BAnts();\n            solver.solve(1, in, out);\n            out.close();\n        }\n    }\n\n    static class BAnts {\n        public void solve(int testNumber, FastInput in, FastOutput out) {\n            int[][] grid = new int[200][200];\n            int zero = 100;\n            grid[zero][zero] = in.ri();\n            int t = in.ri();\n            while (true) {\n                boolean find = false;\n                for (int i = 0; i < 200; i++) {\n                    for (int j = 0; j < 200; j++) {\n                        if (grid[i][j] >= 4) {\n                            int split = grid[i][j] >> 2;\n                            grid[i][j] &= 3;\n                            for (int[] d : GridUtils.DIRS) {\n                                grid[i + d[0]][j + d[1]] += split;\n                            }\n                            find = true;\n                        }\n                    }\n                }\n\n                if (!find) {\n                    break;\n                }\n            }\n            for (int i = 0; i < t; i++) {\n                int x = in.ri() + zero;\n                int y = in.ri() + zero;\n                if (x < 0 || y < 0 || x >= 200 || y >= 200) {\n                    out.println(0);\n                    continue;\n                }\n                out.println(grid[x][y]);\n            }\n        }\n\n    }\n\n    static class FastOutput implements AutoCloseable, Closeable, Appendable {\n        private static final int THRESHOLD = 32 << 10;\n        private final Writer os;\n        private StringBuilder cache = new StringBuilder(THRESHOLD * 2);\n\n        public FastOutput append(CharSequence csq) {\n            cache.append(csq);\n            return this;\n        }\n\n        public FastOutput append(CharSequence csq, int start, int end) {\n            cache.append(csq, start, end);\n            return this;\n        }\n\n        private void afterWrite() {\n            if (cache.length() < THRESHOLD) {\n                return;\n            }\n            flush();\n        }\n\n        public FastOutput(Writer os) {\n            this.os = os;\n        }\n\n        public FastOutput(OutputStream os) {\n            this(new OutputStreamWriter(os));\n        }\n\n        public FastOutput append(char c) {\n            cache.append(c);\n            afterWrite();\n            return this;\n        }\n\n        public FastOutput append(int c) {\n            cache.append(c);\n            afterWrite();\n            return this;\n        }\n\n        public FastOutput println(int c) {\n            return append(c).println();\n        }\n\n        public FastOutput println() {\n            return append('\\n');\n        }\n\n        public FastOutput flush() {\n            try {\n//            boolean success = false;\n//            if (stringBuilderValueField != null) {\n//                try {\n//                    char[] value = (char[]) stringBuilderValueField.get(cache);\n//                    os.write(value, 0, cache.length());\n//                    success = true;\n//                } catch (Exception e) {\n//                }\n//            }\n//            if (!success) {\n                os.append(cache);\n//            }\n                os.flush();\n                cache.setLength(0);\n            } catch (IOException e) {\n                throw new UncheckedIOException(e);\n            }\n            return this;\n        }\n\n        public void close() {\n            flush();\n            try {\n                os.close();\n            } catch (IOException e) {\n                throw new UncheckedIOException(e);\n            }\n        }\n\n        public String toString() {\n            return cache.toString();\n        }\n\n    }\n\n    static class FastInput {\n        private final InputStream is;\n        private byte[] buf = new byte[1 << 13];\n        private int bufLen;\n        private int bufOffset;\n        private int next;\n\n        public FastInput(InputStream is) {\n            this.is = is;\n        }\n\n        private int read() {\n            while (bufLen == bufOffset) {\n                bufOffset = 0;\n                try {\n                    bufLen = is.read(buf);\n                } catch (IOException e) {\n                    bufLen = -1;\n                }\n                if (bufLen == -1) {\n                    return -1;\n                }\n            }\n            return buf[bufOffset++];\n        }\n\n        public void skipBlank() {\n            while (next >= 0 && next <= 32) {\n                next = read();\n            }\n        }\n\n        public int ri() {\n            return readInt();\n        }\n\n        public int readInt() {\n            boolean rev = false;\n\n            skipBlank();\n            if (next == '+' || next == '-') {\n                rev = next == '-';\n                next = read();\n            }\n\n            int val = 0;\n            while (next >= '0' && next <= '9') {\n                val = val * 10 - next + '0';\n                next = read();\n            }\n\n            return rev ? val : -val;\n        }\n\n    }\n\n    static class GridUtils {\n        public static final int[][] DIRS = new int[][]{\n                {1, 0},\n                {0, -1},\n                {-1, 0},\n                {0, 1}\n        };\n\n    }\n}\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nshort a[10005][10005] = {{0}};\nint n, t, x, y;\nconst int fx[4][2] = {{0, 1}, {1, 0}, {0, -1}, {-1, 0}};\ninline int ok(int x, int y) {\n  if (x < 0 || y < 0 || x >= 10005 || y >= 10005) return 0;\n  return 1;\n}\nvoid Do(int x, int y) {\n  int tmp = a[x][y] / 4;\n  a[x][y] %= 4;\n  for (int i = 0; i < 4; ++i) {\n    int xx = x + fx[i][0], yy = y + fx[i][1];\n    if (!ok(xx, yy)) continue;\n    a[xx][yy] += tmp;\n    if (i == 2 && yy == 0) a[xx][yy] += tmp;\n    if (i == 3 && xx == 0) a[xx][yy] += tmp;\n    if (a[xx][yy] >= 4) Do(xx, yy);\n  }\n}\ninline void init() {\n  if (n < 4) return;\n  Do(0, 0);\n}\nint main(int argc, char **argv) {\n  scanf(\"%d%d\", &n, &t);\n  a[0][0] = n;\n  init();\n  while (t--) {\n    scanf(\"%d%d\", &x, &y);\n    if (x < 0) x = -x;\n    if (y < 0) y = -y;\n    if (x >= 10005 || y >= 10005)\n      puts(\"0\");\n    else\n      printf(\"%d\\n\", a[x][y]);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\n\npublic class Main implements Runnable {\n\tint[][] map;\n        \n        private void add(int x, int y){\n                if(map[x][y] != 3){\n                        map[x][y] += 1;\n                        return;\n                }\n                \n                map[x][y] = 0;\n                add(x+1, y);\n                add(x-1, y);\n                add(x, y+1);\n                add(x, y-1);\n        }\n        \n\tpublic void solve() throws IOException {\n                map = new int[1000][1000];\n                \n                int ants = nextInt();\n                for(int i = 1; i  <= ants; i++) add(500, 500); //let this point be the center instead of 0 0\n                \n                int Q = nextInt();\n                for(int i = 0; i < Q; i++){\n                        int x = nextInt();\n                        int y = nextInt();\n                        int answer = 0;\n                        if(Math.abs(x) <= 499 && Math.abs(y) <= 499){\n                                int actualx = 500 + x;\n                                int actualy = 500 + y;\n                                answer = map[actualx][actualy];\n                        }\n                        \n                        out.println(answer);\n                }\n\t}\n\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t//-----------------------------------------------------------\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n\n        public void debug(Object... arr){\n            System.out.println(Arrays.deepToString(arr));\n        }\n\n        public void print1Int(int[] a){\n                for(int i = 0; i < a.length; i++)\n                        System.out.print(a[i] + \" \");\n                System.out.println();\n        }\n        \n        public void print2Int(int[][] a){\n                for(int i = 0; i < a.length; i++){\n                        for(int j = 0; j < a[0].length; j++){\n                                System.out.print(a[i][j] + \" \");\n                        }\n                        System.out.println();\n                }\n        }\n        \n\tpublic void run() {\n\t\ttry {\n\t\t\tin = new BufferedReader(new InputStreamReader(System.in));\n                        out = new PrintWriter(System.out);\n\t\t\ttok = null;\n\t\t\tsolve();\n\t\t\tin.close();\n                        out.close();\n\t\t} catch (IOException e) {\n\t\t\tSystem.exit(0);\n\t\t}\n\t}\n\n\tpublic String nextToken() throws IOException {\n\t\twhile (tok == null || !tok.hasMoreTokens()) {\n\t\t\ttok = new StringTokenizer(in.readLine());\n\t\t}\n\t\treturn tok.nextToken();\n\t}\n\n\tpublic int nextInt() throws IOException {\n\t\treturn Integer.parseInt(nextToken());\n\t}\n\n\tpublic long nextLong() throws IOException {\n\t\treturn Long.parseLong(nextToken());\n\t}\n\n\tpublic double nextDouble() throws IOException {\n\t\treturn Double.parseDouble(nextToken());\n\t}\n        PrintWriter out;\n\tBufferedReader in;\n\tStringTokenizer tok;\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\nusing namespace std;\nlong long max(long long a, long long b) {\n  if (a > b) {\n    return a;\n  } else {\n    return b;\n  }\n}\nlong long min(long long a, long long b) {\n  if (a < b) {\n    return a;\n  } else {\n    return b;\n  }\n}\nlong long power(long long b, long long e) {\n  if (e == 0) return 1;\n  if (e % 2)\n    return ((b * power((b) * (b), (e - 1) / 2)));\n  else\n    return power((b) * (b), e / 2);\n}\nlong long modpower(long long b, long long e, long long q) {\n  long long MOD = q;\n  if (e == 0) return 1;\n  if (e % 2)\n    return ((b % MOD) * modpower((b % MOD) * (b % MOD), (e - 1) / 2, q)) % MOD;\n  else\n    return modpower((b % MOD) * (b % MOD), e / 2, q) % MOD;\n}\nvoid dpv(vector<long long> v) {\n  for (long long i = 0; i < v.size(); i++) {\n    cout << v[i] << \" \";\n  }\n  cout << '\\n';\n}\nvoid dpv(vector<pair<long long, long long> > v) {\n  for (long long i = 0; i < v.size(); i++) {\n    cout << v[i].first << \" \" << v[i].second << '\\n';\n  }\n}\nvoid dpv(set<long long> v) {\n  for (auto i : v) {\n    cout << i << \" \";\n  }\n  cout << '\\n';\n}\nconst long long A = 500;\nconst long long N = 1500;\nlong long t[N][N];\nvoid oblivious() {\n  long long n, k;\n  cin >> n >> k;\n  long long sz = 0;\n  t[A][A] = n;\n  while (true) {\n    bool ok = false;\n    for (long long i = A - sz; i <= A + sz; i++) {\n      for (long long j = A - sz; j <= A + sz; j++) {\n        if (t[i][j] >= 4) {\n          if (max(abs(i - A), abs(j - A)) == sz) {\n            sz++;\n          }\n          ok = true;\n          t[i - 1][j] += t[i][j] / 4;\n          t[i + 1][j] += t[i][j] / 4;\n          t[i][j - 1] += t[i][j] / 4;\n          t[i][j + 1] += t[i][j] / 4;\n          t[i][j] %= 4;\n        }\n      }\n    }\n    if (!ok) {\n      break;\n    }\n  }\n  for (long long i = 0; i < k; i++) {\n    long long x, y;\n    cin >> x >> y;\n    if (max(abs(x), abs(y)) > sz) {\n      cout << 0 << '\\n';\n    } else {\n      cout << t[A + x][A + y] << '\\n';\n    }\n  }\n}\nsigned main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  long long t = 1;\n  while (t--) {\n    oblivious();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[500][500];\nint main() {\n  int n, t;\n  while (scanf(\"%d%d\", &n, &t) == 2) {\n    memset(a, 0, sizeof(a));\n    a[200][200] = n;\n    int sz = 0;\n    while (1) {\n      bool flag = true;\n      for (int i = 200 - sz; i <= 200 + sz; i++)\n        for (int j = 200 - sz; j <= 200 + sz; j++)\n          if (a[i][j] >= 4) {\n            flag = false;\n            if (max(abs(i - 200), abs(j - 200)) == sz) sz++;\n            a[i - 1][j] += a[i][j] / 4;\n            a[i + 1][j] += a[i][j] / 4;\n            a[i][j - 1] += a[i][j] / 4;\n            a[i][j + 1] += a[i][j] / 4;\n            a[i][j] %= 4;\n          }\n      if (flag) break;\n    }\n    int x, y;\n    while (t--) {\n      scanf(\"%d%d\", &x, &y);\n      if (x < -200 || y < -200 || x > 200 || y > 200)\n        printf(\"0\\n\");\n      else\n        printf(\"%d\\n\", a[x + 200][y + 200]);\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int mod = 1e9 + 7;\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  int n, m;\n  while (cin >> n >> m) {\n    int cont[505][505] = {};\n    queue<pair<int, int> > q;\n    cont[250][250] = n;\n    if (n >= 4) q.push({250, 250});\n    while (!q.empty()) {\n      int x = q.front().first;\n      int y = q.front().second;\n      q.pop();\n      int num = cont[x][y];\n      int div = num / 4;\n      cont[x][y] %= 4;\n      if (cont[x][y + 1] + div >= 4 && cont[x][y + 1] < 4) {\n        q.push({x, y + 1});\n      }\n      cont[x][y + 1] += div;\n      if (cont[x][y - 1] + div >= 4 && cont[x][y - 1] < 4) {\n        q.push({x, y - 1});\n      }\n      cont[x][y - 1] += div;\n      if (cont[x + 1][y] + div >= 4 && cont[x + 1][y] < 4) {\n        q.push({x + 1, y});\n      }\n      cont[x + 1][y] += div;\n      if (cont[x - 1][y] + div >= 4 && cont[x - 1][y] < 4) {\n        q.push({x - 1, y});\n      }\n      cont[x - 1][y] += div;\n    }\n    while (m--) {\n      int add1, add2;\n      cin >> add1 >> add2;\n      if (abs(add1) > 250 || abs(add2) > 250) {\n        cout << 0 << '\\n';\n      } else\n        cout << cont[add1 + 250][add2 + 250] << '\\n';\n    }\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 100;\nconst int MAXM = MAXN * 2 + 1;\nconst int dx[4] = {-1, 0, 1, 0};\nconst int dy[4] = {0, -1, 0, 1};\nint n, t, graph[MAXM][MAXM], t_graph[MAXM][MAXM];\nint main() {\n  scanf(\"%d%d\", &n, &t);\n  graph[MAXN][MAXN] = n;\n  bool found = n > 0;\n  while (found) {\n    found = false;\n    memset(t_graph, 0, sizeof(t_graph));\n    for (int i = 0; i < MAXM; i++) {\n      for (int j = 0; j < MAXM; j++) {\n        if (graph[i][j] >= 4) {\n          found = true;\n          for (int k = 0; k < 4; k++) {\n            int nx = i + dx[k], ny = j + dy[k];\n            t_graph[nx][ny] += graph[i][j] / 4;\n          }\n        }\n        t_graph[i][j] += graph[i][j] % 4;\n      }\n    }\n    memcpy(graph, t_graph, sizeof(graph));\n  }\n  for (int i = 0; i < t; i++) {\n    int x, y, ans;\n    scanf(\"%d%d\", &x, &y);\n    if (abs(x) > MAXN || abs(y) > MAXN) {\n      ans = 0;\n    } else {\n      ans = graph[x + MAXN][y + MAXN];\n    }\n    printf(\"%d\\n\", ans);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint cnt[2 * 300][2 * 300];\nbool visited[2 * 300][2 * 300];\nint cx[] = {0, 0, 1, -1}, cy[] = {-1, 1, 0, 0};\nint main() {\n  int N, T;\n  cin >> N >> T;\n  cnt[300][300] = N;\n  queue<pair<int, int> > Q;\n  Q.push(pair<int, int>(300, 300));\n  visited[300][300] = true;\n  while (!Q.empty()) {\n    pair<int, int> front = Q.front();\n    Q.pop();\n    int num = cnt[front.first][front.second];\n    if (num >= 4) {\n      int delta = cnt[front.first][front.second] / 4;\n      cnt[front.first][front.second] %= 4;\n      for (int i = 0; i < 4; i++) {\n        int ii = front.first + cx[i];\n        int jj = front.second + cy[i];\n        cnt[ii][jj] += delta;\n        if (!visited[ii][jj] && cnt[ii][jj] >= 4) {\n          visited[ii][jj] = true;\n          Q.push(pair<int, int>(ii, jj));\n        }\n      }\n    }\n    visited[front.first][front.second] = false;\n  }\n  int x, y;\n  for (int i = 0; i < T; i++) {\n    scanf(\"%d %d\", &x, &y);\n    x += 300;\n    y += 300;\n    if (x < 0 || y < 0 || x >= 2 * 300 || y >= 2 * 300)\n      printf(\"0\\n\");\n    else\n      printf(\"%d\\n\", cnt[x][y]);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.LinkedList;\n\npublic class B {\n\tpublic static void main(String[] args) throws Exception {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tPrintWriter out = new PrintWriter(System.out);\n\t\tString[] parts = br.readLine().split(\" \");\n\t\tint n = Integer.parseInt(parts[0]);\n\t\tint t = Integer.parseInt(parts[1]);\n\t\tchar zx = 301 / 2;\n\t\tchar zy = 301 / 2;\n\t\tint[][] M = new int[301][301];\n\t\tM[zx][zy] = n;\n\t\tint front = 0, back = 0;\n\t\tchar[] Q = new char[30000000];\n\t\tboolean[][] inQ = new boolean[301][301];\n\t\tQ[back++] = zx;\n\t\tQ[back++] = zy;\n\t\twhile (back > front) {\n\t\t\tchar x = Q[front++];\n\t\t\tchar y = Q[front++];\n\t\t\tint c = M[x][y] / 4;\n\t\t\tinQ[x][y] = false;\n\t\t\tM[x][y] %= 4;\n\t\t\tM[x - 1][y] += c;\n\t\t\tM[x + 1][y] += c;\n\t\t\tM[x][y - 1] += c;\n\t\t\tM[x][y + 1] += c;\n\t\t\tif (x - 1 >= 0 && M[x - 1][y] >= 4 && inQ[x - 1][y] == false) {\n\t\t\t\tinQ[x - 1][y] = true;\n\t\t\t\tQ[back++] = (char) (x - 1);\n\t\t\t\tQ[back++] = y;\n\t\t\t}\n\t\t\tif (x + 1 < 301 && M[x + 1][y] >= 4 && inQ[x + 1][y] == false) {\n\t\t\t\tinQ[x + 1][y] = true;\n\t\t\t\tQ[back++] = (char) (x + 1);\n\t\t\t\tQ[back++] = y;\n\t\t\t}\n\t\t\tif (y - 1 >= 0 && M[x][y - 1] >= 4 && inQ[x][y - 1] == false) {\n\t\t\t\tinQ[x][y - 1] = true;\n\t\t\t\tQ[back++] = x;\n\t\t\t\tQ[back++] = (char) (y - 1);\n\t\t\t}\n\t\t\tif (y + 1 < 301 && M[x][y + 1] >= 4 && inQ[x][y + 1] == false) {\n\t\t\t\tinQ[x][y + 1] = true;\n\t\t\t\tQ[back++] = x;\n\t\t\t\tQ[back++] = (char) (y + 1);\n\t\t\t}\n\t\t}\n\t\twhile (t-- > 0) {\n\t\t\tparts = br.readLine().split(\" \");\n\t\t\tint x = Integer.parseInt(parts[0]);\n\t\t\tint y = Integer.parseInt(parts[1]);\n\t\t\tif (x < 0)\n\t\t\t\tx = -x;\n\t\t\tif (y < 0)\n\t\t\t\ty = -y;\n\t\t\tx += zx;\n\t\t\ty += zy;\n\t\t\tif (x < 301 && y < 301) {\n\t\t\t\tout.println(M[x][y]);\n\t\t\t} else {\n\t\t\t\tout.println(0);\n\t\t\t}\n\t\t}\n\t\tout.flush();\n\t\tout.close();\n\t}\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n;\nint C[2][2][1005 * 1005], save[1005][1005], q[2], sol[1005][1005],\n    last_upd[1005][1005];\nint dx[] = {-1, 1, 0, 0};\nint dy[] = {0, 0, -1, 1};\ninline void expand(int coada[2][1005 * 1005], int timp, int p) {\n  for (int i = 1; i <= q[p]; ++i) {\n    int xc = coada[0][i], yc = coada[1][i];\n    save[xc][yc] = sol[xc][yc];\n  }\n  q[1 - p] = 0;\n  for (int i = 1; i <= q[p]; ++i) {\n    int xc = coada[0][i], yc = coada[1][i], xv, yv;\n    for (int d = 0; d < 4; ++d) {\n      xv = xc + dx[d];\n      yv = yc + dy[d];\n      sol[xv][yv] += (save[xc][yc] >> 2);\n      if (sol[xv][yv] >= 4 && last_upd[xv][yv] != timp) {\n        last_upd[xv][yv] = timp;\n        ++q[1 - p];\n        C[1 - p][0][q[1 - p]] = xv, C[1 - p][1][q[1 - p]] = yv;\n      }\n    }\n    sol[xc][yc] -= save[xc][yc];\n    sol[xc][yc] += (save[xc][yc] & 3);\n    if (sol[xc][yc] >= 4 && last_upd[xc][yc] != timp) {\n      last_upd[xc][yc] = timp;\n      ++q[1 - p];\n      C[1 - p][0][q[1 - p]] = xc, C[1 - p][1][q[1 - p]] = yc;\n    }\n  }\n}\nint main() {\n  scanf(\"%d\", &n);\n  int xc = 500, yc = 500;\n  ++q[0];\n  C[0][0][1] = xc;\n  C[0][1][1] = yc;\n  sol[xc][yc] = n;\n  int p = 0, timp = 0;\n  while (q[p]) {\n    expand(C[p], ++timp, p);\n    p = 1 - p;\n  }\n  int tests, x, y;\n  scanf(\"%d\", &tests);\n  for (int i = 1; i <= tests; ++i) {\n    scanf(\"%d %d\", &x, &y);\n    if (x > xc || x < -xc || y > yc || y < -yc) {\n      printf(\"%d\\n\", 0);\n    } else {\n      printf(\"%d\\n\", sol[xc + x][yc + y]);\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int BX = 128, BY = 128;\nint table[BX * 2][BY * 2];\npair<int, int> stk[BX * BY];\nint main() {\n  int N, T;\n  scanf(\"%d%d\", &N, &T);\n  int len = 0;\n  stk[len++] = pair<int, int>(BX, BY);\n  table[BX][BY] = N;\n  int total = 0;\n  while (len--) {\n    pair<int, int> p = stk[len];\n    int m = table[p.first][p.second] / 4;\n    table[p.first][p.second] %= 4;\n    for (int d = 0; d < 4; d++) {\n      int dx = p.first + \"1210\"[d] - '1';\n      int dy = p.second + \"2101\"[d] - '1';\n      if (table[dx][dy] < 4 && table[dx][dy] + m >= 4)\n        stk[len++] = pair<int, int>(dx, dy);\n      table[dx][dy] += m;\n    }\n  }\n  while (T--) {\n    int x, y;\n    scanf(\"%d%d\", &x, &y);\n    x += BX;\n    y += BY;\n    if (0 <= x && x < BX * 2 && 0 <= y && y <= BY * 2)\n      printf(\"%d\\n\", table[x][y]);\n    else\n      puts(\"0\");\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class Main {\n\n\tpublic static void main(String[] args) throws Exception {\n\t\tlong time = System.nanoTime();\n\n\t\tint n = next();\n\t\tint m = 70;\n\n\t\tint[][] x = new int[m][m];\n\t\tx[1][1] = n;\n\t\tint[] dx = new int[] {1, 0, -1, 0};\n\t\tint[] dy = new int[] {0, 1, 0, -1};\n\t\tint c = 0;\n\t\twhile (true) {\n\t\t\tboolean flag = false;\n\t\t\tint[][] a = new int[m + 1][m + 1];\n\t\t\tfor (int i = 1; i < m; i++)\n\t\t\t\tfor (int j = i; j < m; j++) if (x[i][j] >= 4) {\n\t\t\t\t\tflag = true;\n\t\t\t\t\tfor (int t = 0; t < 4; t++) {\n\t\t\t\t\t\tint xx = i + dx[t];\n\t\t\t\t\t\tint yy = j + dy[t];\n\t\t\t\t\t\tint aa = 1;\n\t\t\t\t\t\tif (yy == xx && j > i) aa *= 2;\n\t\t\t\t\t\tif (xx == 1 && i > 1) aa *= 2;\n\t\t\t\t\t\tif (yy == 1 && j > 1) aa *= 2;\n//\t\t\t\t\t\tSystem.out.println(i + \" \" + j + \" \" + xx + \" \" + yy + \" \" + aa);\n\t\t\t\t\t\ta[xx][yy] += aa;\n\t\t\t\t\t}\n\t\t\t\t\ta[i][j] -= 4;\n\t\t\t\t}\n\t\t   \tif (!flag) break;\n\t\t   \tfor (int i = 1; i < m; i++)\n\t\t   \t\tfor (int j = i; j < m; j++) x[i][j] += a[i][j];\n\n/*\t\t   \tfor (int i = 1; i < 4; i++) {\n\t\t   \t\tfor (int j = 1; j < 4; j++) out.print(x[i][j] + \" \");\n\t\t   \t\tout.println();\n\t\t   \t}\n\t\t   \tout.println();*/\n//\t\t   \tc++;\n\t\t   \t//System.out.println(c);\n\t\t}\n//\t\tout.println(c);\n/*\t\tint max = -1;\n\t\tfor (int i = 1; i < m; i++) if (x[1][i] > 0) max = Math.max(max, i);\n\t\tout.println(max);\n\n\t\tfor (int i = 1; i <= max; i++) {\n\t\t\tfor (int j = 1; j <= max; j++) out.print((i <= j ? x[i][j] : x[j][i]) + \" \");\n\t\t\tout.println();\n\t\t}*/\n\n/*\t\tint sum = 0;\n\t\tfor (int i = 1; i < m; i++)\n\t\t\tfor (int j = i; j < m; j++) {\n\t\t\t\tif (i > 1 && j > i) sum += 8*x[i][j];\n\t\t\t\tif (i == 1 && j > i) sum += 4*x[i][j];\n\t\t\t\tif (i > 1 && j == i) sum += 4*x[i][j];\n\t\t\t\tif (i == 1 && j == i) sum += x[i][j];\n\t\t\t}\n\t\tout.println(sum);*/\n\n\t\tint t = next();\n\t\tfor (int i = 0; i < t; i++) {\n\t\t\tint xx = Math.abs(next()) + 1;\n\t\t\tint yy = Math.abs(next()) + 1; \n\t\t\tif (xx > yy) {\n\t\t\t\tint temp = xx;\n\t\t\t\txx = yy;\n\t\t\t\tyy = temp;\n\t\t\t}\n\t\t\tif (xx >= m || yy >= m) out.println(0);\n\t\t\telse out.println(x[xx][yy]);\n\t\t}\n\t\t\n//\t\tSystem.out.println((System.nanoTime() - time)* 1e-9);\n\t\tout.close();\n\t}\n\tstatic PrintWriter out = new PrintWriter(System.out);\n\t\n\tstatic BufferedReader bufferedreader = new BufferedReader(new InputStreamReader(System.in));\n\tstatic StringTokenizer in = new StringTokenizer(\"\");\n\n\tstatic String nextToken() throws Exception {\n\t\tif (!in.hasMoreTokens()) in = new StringTokenizer(bufferedreader.readLine());\n\t\treturn in.nextToken();\n\t}\n\n\tstatic int next()  throws Exception {return Integer.parseInt(nextToken());};\n\tstatic int[] next(int n) throws Exception {\n\t\tint[] x = new int[n];\n\t\tfor (int i = 0; i < n; i++) x[i] = next();\n\t\treturn x;\n\t}\n\tstatic int[][] next(int n, int m) throws Exception {\n\t\tint[][] x = new int[n][];\n\t\tfor (int i = 0; i < n; i++) x[i] = next(m);\n\t\treturn x;\n\t}\n\n\tstatic long nextl() throws Exception {return Long.parseLong(nextToken());};\n\tstatic long[] nextl(int n) throws Exception {\n\t\tlong[] x = new long[n];\n\t\tfor (int i = 0; i < n; i++) x[i] = nextl();\n\t\treturn x;\n\t}\n\tstatic long[][] nextl(int n, int m) throws Exception {\n\t\tlong[][] x = new long[n][];\n\t\tfor (int i = 0; i < n; i++) x[i] = nextl(m);\n\t\treturn x;\n\t}\n\n\tstatic double nextd() throws Exception {return Double.parseDouble(nextToken());};\n\tstatic double[] nextd(int n) throws Exception {\n\t\tdouble[] x = new double[n];\n\t\tfor (int i = 0; i < n; i++) x[i] = nextd();\n\t\treturn x;\n\t}\n\tstatic double[][] nextd(int n, int m) throws Exception {\n\t\tdouble[][] x = new double[n][];\n\t\tfor (int i = 0; i < n; i++) x[i] = nextd(m);\n\t\treturn x;\n\t}\n\n\tstatic String nextline() throws Exception {\n\t\tin = new StringTokenizer(\"\");\n\t\treturn bufferedreader.readLine();\n\t}\n\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAX_N = 3000 + 10, mod = 1000000007;\nint a[MAX_N][MAX_N], n, t;\nvoid make(int x, int y) {\n  a[x - 1][y] += a[x][y] / 4;\n  a[x][y - 1] += a[x][y] / 4;\n  a[x + 1][y] += a[x][y] / 4;\n  a[x][y + 1] += a[x][y] / 4;\n  a[x][y] %= 4;\n  if (a[x - 1][y] >= 4) make(x - 1, y);\n  if (a[x][y - 1] >= 4) make(x, y - 1);\n  if (a[x + 1][y] >= 4) make(x + 1, y);\n  if (a[x][y + 1] >= 4) make(x, y + 1);\n}\nint32_t main() {\n  cin >> n >> t;\n  a[1500][1500] = n;\n  make(1500, 1500);\n  int x, y;\n  while (t--) {\n    cin >> x >> y;\n    x += 1500, y += 1500;\n    if (x >= 3000 || y >= 3000 || x < 0 || y < 0)\n      cout << \"0\" << '\\n';\n    else\n      cout << a[x][y] << '\\n';\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int t, i, j, k, n, a[300][300];\n  scanf(\"%d %d \", &n, &t);\n  for (i = 0; i < 300; i++)\n    for (j = 0; j < 300; j++) a[i][j] = 0;\n  a[150][150] = n;\n  queue<int> x;\n  queue<int> y;\n  x.push(150);\n  y.push(150);\n  while (!x.empty()) {\n    if (a[x.front()][y.front()] >= 4) {\n      a[x.front() + 1][y.front()] += (a[x.front()][y.front()] / 4);\n      x.push(x.front() + 1);\n      y.push(y.front());\n      a[x.front()][y.front() + 1] += (a[x.front()][y.front()] / 4);\n      x.push(x.front());\n      y.push(y.front() + 1);\n      a[x.front() - 1][y.front()] += (a[x.front()][y.front()] / 4);\n      x.push(x.front() - 1);\n      y.push(y.front());\n      a[x.front()][y.front() - 1] += (a[x.front()][y.front()] / 4);\n      x.push(x.front());\n      y.push(y.front() - 1);\n      a[x.front()][y.front()] = a[x.front()][y.front()] % 4;\n    }\n    x.pop();\n    y.pop();\n  }\n  while (t--) {\n    scanf(\"%d %d\", &i, &j);\n    if (abs(i) > 299 || abs(j) > 299)\n      printf(\"0\\n\");\n    else\n      printf(\"%d\\n\", a[i + 150][j + 150]);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, T;\nint Place(int x, int y) { return (x + 1000) * 1005 + y + 1000; }\nint ans[10000000];\nint q[30000005];\nint main() {\n  scanf(\"%d%d\", &n, &T);\n  int l = 0, r = 1;\n  int st = Place(0, 0);\n  q[l] = st;\n  ans[st] = n;\n  while (l != r) {\n    int tmp = q[l];\n    l++;\n    int t2;\n    int d = ans[tmp];\n    ans[tmp] = d % 4;\n    d /= 4;\n    bool f;\n    t2 = tmp - 1005;\n    f = (ans[t2] < 4);\n    ans[t2] += d;\n    if (f && ans[t2] >= 4) {\n      q[r] = t2;\n      r++;\n    }\n    t2 = tmp + 1005;\n    f = (ans[t2] < 4);\n    ans[t2] += d;\n    if (f && ans[t2] >= 4) {\n      q[r] = t2;\n      r++;\n    }\n    t2 = tmp - 1;\n    f = (ans[t2] < 4);\n    ans[t2] += d;\n    if (f && ans[t2] >= 4) {\n      q[r] = t2;\n      r++;\n    }\n    t2 = tmp + 1;\n    f = (ans[t2] < 4);\n    ans[t2] += d;\n    if (f && ans[t2] >= 4) {\n      q[r] = t2;\n      r++;\n    }\n  }\n  while (T--) {\n    int x, y;\n    scanf(\"%d%d\", &x, &y);\n    int tmp;\n    if (x > 10000 || y > 10000 || x < -10000 || y < -10000)\n      tmp = -1;\n    else\n      tmp = Place(x, y);\n    if (tmp < 0 || tmp >= 10000000) tmp = 0;\n    printf(\"%d\\n\", ans[tmp]);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.Scanner;\nimport java.util.StringTokenizer;\n\n/**\n *\n * @author 743012015\n */\npublic class CR188D {\n\n    static InputStreamReader isr;\n    static BufferedReader br;\n    static StringTokenizer st;\n\n    static String next() throws Exception {\n        while (st == null || !st.hasMoreTokens()) {\n            st = new StringTokenizer(br.readLine());\n        }\n        return st.nextToken();\n    }\n\n    static int nextInt() throws Exception {\n        return Integer.parseInt(next());\n    }\n\n    public static void main(String[] args) throws Exception {\n        isr = new InputStreamReader(System.in);\n        br = new BufferedReader(isr);\n\n        int n = nextInt();\n        int t = nextInt();\n\n        int[][] f = new int[200][200];\n\n        f[100][100] = n;\n\n        boolean bool = true;\n\n        while (bool) {\n            bool = false;\n            for (int i = 0; i < 200; ++i) {\n                for (int j = 0; j < 200; ++j) {\n                    if (f[i][j] >= 4) {\n                        bool = true;\n                        f[i + 1][j] += f[i][j] / 4;\n                        f[i - 1][j] += f[i][j] / 4;\n                        f[i][j + 1] += f[i][j] / 4;\n                        f[i][j - 1] += f[i][j] / 4;\n                        f[i][j] = f[i][j] % 4;\n                    }\n                }\n            }\n        }\n\n        for (int i = 0; i < t; ++i) {\n            int x = nextInt();\n            int y = nextInt();\n\n            if (Math.abs(x) >= 100 || Math.abs(y) >= 100) {\n                System.out.println(\"0\");\n            } else {\n                x += 100;\n                y += 100;\n\n                System.out.println(f[x][y]);\n            }\n        }\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint xx[] = {-1, 0, 1, 0};\nint yy[] = {0, 1, 0, -1};\nint ans[2 * 1005][2 * 1005];\nvoid DFS(int x, int y) {\n  int Val = ans[x][y] / 4;\n  ans[x][y] = ans[x][y] % 4;\n  if (Val == 0) return;\n  for (int i = 0; i <= 3; i++) {\n    int u = x + xx[i];\n    int v = y + yy[i];\n    ans[u][v] += Val;\n    DFS(u, v);\n  }\n}\nint main() {\n  int n, m, u, v;\n  cin >> n >> m;\n  ans[1005][1005] = n;\n  DFS(1005, 1005);\n  for (int i = 1; i <= m; i++) {\n    cin >> u >> v;\n    if (abs(u) >= 1005 || abs(v) >= 1005)\n      cout << 0 << endl;\n    else\n      cout << ans[u + 1005][v + 1005] << endl;\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class Main {\n    \n    BufferedReader in;\n    StringTokenizer str = null;\n    PrintWriter out;\n    \n    private String next() throws Exception{\n\tif (str == null || !str.hasMoreElements())\n\t    str = new StringTokenizer(in.readLine());\n\treturn str.nextToken();\n    }\n    \n    private int nextInt() throws Exception{\n\treturn Integer.parseInt(next());\n    }\n    \n    private long nextLong() throws Exception{\n\treturn Long.parseLong(next());\n    }\n    \n    private double nextDouble() throws Exception{\n\treturn Double.parseDouble(next());\n    }\n    \n    int a[][];\n    public void run() throws Exception{\n\tin =  new BufferedReader(new InputStreamReader(System.in));\n\tout = new PrintWriter(System.out);\n\tint n = nextInt();\n\ta = new int[205][205];\n\tdfs(100, 100, n);\n\n\tint t = nextInt();\n\tfor(int i=0;i<t;i++){\n\t    int x = nextInt(), y = nextInt();\n\t    if (Math.abs(x) > 100 || Math.abs(y) > 100){\n\t\tout.println(0);\n\t    }else{\n\t\tout.println(a[100+x][100+y]);\n\t    }\n\t}\n\tout.close();\n    }\n\n    private void dfs(int i, int j, int n){\n\tif (n == 0 || i < 0 || j < 0 || i >= 205 || j >= 205) return;\n\ta[i][j]+=n;\n\tif (a[i][j] < 4) return;\n\tint k = a[i][j]/4;\n\ta[i][j]%=4;\n\tdfs(i+1, j, k);\n\tdfs(i-1, j, k);\n\tdfs(i, j+1, k);\n\tdfs(i, j-1, k);\n    }\n    \n    public static void main(String[] args) throws Exception{\n\tnew Main().run();\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 5e3 + 5;\nint dx[] = {+0, +0, +1, -1};\nint dy[] = {+1, -1, +0, +0};\nint vis[N][N];\nint n;\nvoid dfs(int x, int y, int n) {\n  vis[x][y] += n;\n  if (vis[x][y] <= 3) return;\n  vis[x][y] -= 4;\n  if (vis[x][y] >= 4) dfs(x, y, 0);\n  for (int i = 0; i < 4; i++) {\n    int a = x + dx[i];\n    int b = y + dy[i];\n    dfs(a, b, 1);\n  }\n}\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  cin >> n;\n  dfs(100, 100, n);\n  int q;\n  cin >> q;\n  while (q--) {\n    int x, y;\n    cin >> x >> y;\n    if (x <= -200 || x >= 200 || y <= -200 || y >= 200)\n      cout << \"0\\n\";\n    else\n      cout << vis[x + 100][y + 100] << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <class T>\nT abs(T x) {\n  return x > 0 ? x : -x;\n}\nint m;\nint n;\nshort col[2][2048][2048];\nchar was[2048][2048];\nint dx[4] = {1, 0, -1, 0};\nint dy[4] = {0, 1, 0, -1};\nint cm;\npair<int, int> v[1000000];\nint main() {\n  int mx = 1024, my = 1024;\n  int t;\n  cin >> n >> t;\n  v[cm++] = make_pair(mx, my);\n  col[0][mx][my] = n;\n  was[mx][my] = 1;\n  int ct = 0;\n  while (1) {\n    int o = cm;\n    int ff = 0;\n    for (int i = 0; i < (o); i++) {\n      int cx = v[i].first;\n      int cy = v[i].second;\n      col[1 ^ ct][cx][cy] = 0;\n    }\n    for (int i = 0; i < (o); i++) {\n      int cx = v[i].first;\n      int cy = v[i].second;\n      int o = col[ct][cx][cy];\n      int f = o >= 4;\n      if (f) {\n        o -= 4;\n        ff += f;\n        for (int j = 0; j < (4); j++) {\n          int nx = cx + dx[j];\n          int ny = cy + dy[j];\n          if (nx < mx || ny < my) continue;\n          if (!was[nx][ny]) {\n            v[cm++] = make_pair(nx, ny);\n            was[nx][ny] = 1;\n          }\n          if (nx == mx && cx > mx || ny == my && cy > my)\n            col[ct ^ 1][nx][ny] += 2;\n          else\n            col[ct ^ 1][nx][ny]++;\n        }\n      }\n      col[1 ^ ct][cx][cy] += o;\n    }\n    ct ^= 1;\n    if (!ff) break;\n  }\n  for (int i = 0; i < (t); i++) {\n    int x, y;\n    scanf(\"%d%d\", &x, &y);\n    x = abs(x);\n    y = abs(y);\n    if (abs(x) >= 1024 || abs(y) >= 1024) {\n      cout << 0 << '\\n';\n    } else\n      cout << col[ct][x + 1024][y + 1024] << '\\n';\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <typename T>\ninline void checkmin(T &a, T b) {\n  if (a > b) a = b;\n}\nconst int N = 129;\nconst int M = 64;\nint a[N][N], b[N][N];\nvoid solve() {\n  int n, t;\n  scanf(\"%d%d\", &n, &t);\n  a[M][M] = n;\n  int maxi = 0, x, y;\n  while (1) {\n    int f = 0;\n    x = M - maxi;\n    y = M + maxi;\n    for (int i = x; i <= y; i++)\n      for (int j = x; j <= y; j++) b[i][j] = a[i][j];\n    for (int i = x; i <= y; i++)\n      for (int j = x; j <= y; j++) {\n        if (a[i][j] >= 4) {\n          b[i][j] -= 4;\n          b[i + 1][j] += 1;\n          b[i - 1][j] += 1;\n          b[i][j + 1] += 1;\n          b[i][j - 1] += 1;\n          f = 1;\n          maxi = max(maxi, i + 1 - M);\n        }\n      }\n    x = M - maxi;\n    y = M + maxi;\n    for (int i = x; i <= y; i++)\n      for (int j = x; j <= y; j++) a[i][j] = b[i][j];\n    if (f == 0) break;\n  }\n  for (int i = 0; i < (t); i++) {\n    scanf(\"%d %d\", &x, &y);\n    if (x < 0) x = -x;\n    if (y < 0) y = -y;\n    if (x > 64 || y > 64)\n      printf(\"0\\n\");\n    else\n      printf(\"%d\\n\", a[M + x][M + y]);\n  }\n}\nint main() {\n  solve();\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint dx[] = {0, 0, 1, -1, 1, -1, 1, -1};\nint dy[] = {1, -1, 0, 0, -1, 1, 1, -1};\nlong long gcd(long long a, long long b) { return !b ? a : gcd(b, a % b); }\nlong long lcm(long long a, long long b) { return (a / gcd(a, b)) * b; }\nvoid PLAY1() {\n  cout << fixed << setprecision(10);\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n}\nint res[1005][1005];\nint main() {\n  PLAY1();\n  int n, t;\n  cin >> n >> t;\n  queue<pair<int, int>> qu;\n  qu.push({0, 0});\n  res[300][300] = n;\n  while ((int)qu.size()) {\n    int curx = qu.front().first;\n    int cury = qu.front().second;\n    qu.pop();\n    if (res[curx + 300][cury + 300] < 4) continue;\n    for (int k = 0; k < 4; k++) {\n      int tox = dx[k] + curx;\n      int toy = dy[k] + cury;\n      res[tox + 300][toy + 300] += res[curx + 300][cury + 300] / 4;\n      if (res[tox + 300][toy + 300] >= 4) qu.push({tox, toy});\n    }\n    res[curx + 300][cury + 300] %= 4;\n  }\n  while (t--) {\n    int x, y;\n    cin >> x >> y;\n    if (abs(x) >= 300 || abs(y) >= 300)\n      cout << 0 << endl;\n    else\n      cout << res[x + 300][y + 300] << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int dx[] = {1, 0, 0, -1};\nconst int dy[] = {0, 1, -1, 0};\nconst int of = 100;\nint g[233][233];\nint inq[233][233];\nvoid dfs(int tx, int ty) {\n  if (g[tx][ty] < 3) {\n    g[tx][ty]++;\n    return;\n  }\n  g[tx][ty] = 0;\n  for (int i = 0; i < 4; i++) {\n    int nx = tx + dx[i];\n    int ny = ty + dy[i];\n    dfs(nx, ny);\n  }\n}\nint main() {\n  int n, t;\n  scanf(\"%d%d\", &n, &t);\n  while (n--) dfs(of, of);\n  for (int i = 0; i < t; i++) {\n    int x, y;\n    scanf(\"%d%d\", &x, &y);\n    x += of;\n    y += of;\n    if (x < 0) x = -x;\n    if (y < 0) y = -y;\n    int ans = 0;\n    if (max(x, y) >= 233)\n      ans = 0;\n    else\n      ans = g[x][y];\n    printf(\"%d\\n\", ans);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nconst int MAXN = 131;\nconst int ox = 65;\nconst int oy = 65;\nint a[MAXN][MAXN], b[MAXN][MAXN];\nint dx[] = {0, 0, -1, 1};\nint dy[] = {1, -1, 0, 0};\nvoid init() {\n  int i, j, k;\n  memset(b, 0, sizeof(b));\n  int p = MAXN - 1;\n  bool ok = false;\n  for (i = 1; i <= p; i++)\n    for (j = 1; j <= p; j++)\n      if (a[i][j] > 3) {\n        for (k = 0; k < 4; k++) b[i + dx[k]][j + dy[k]] += a[i][j] / 4;\n        b[i][j] -= a[i][j] / 4 * 4;\n      }\n  for (i = 1; i <= p; i++)\n    for (j = 1; j <= p; j++) {\n      a[i][j] += b[i][j];\n      if (a[i][j] > 3) ok = true;\n    }\n  if (ok) init();\n}\nint main() {\n  int n, x, y, T;\n  scanf(\"%d%d\", &n, &T);\n  a[ox][oy] = n;\n  init();\n  while (T--) {\n    scanf(\"%d%d\", &x, &y);\n    x += ox;\n    y += oy;\n    if (x >= MAXN || y >= MAXN || x < 0 || y < 0)\n      puts(\"0\");\n    else\n      printf(\"%d\\n\", a[x][y]);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int Maxn = 1e6 + 9;\nconst int Maxv = 3015;\npair<int, int> Que[Maxn * 10];\nint bg, ed;\nbool arr_mark[Maxv][Maxv];\nint arr_num[Maxv][Maxv];\ninline int num(pair<int, int> p) {\n  int x = p.first, y = p.second;\n  if (abs(x) >= Maxv / 2 - 1 || abs(y) >= Maxv / 2 - 1) return 0;\n  return arr_num[x + Maxv / 2][y + Maxv / 2];\n}\ninline void ins(const int &x, const int &y) {\n  if (!arr_mark[x + Maxv / 2][y + Maxv / 2] && num(make_pair(x, y)) >= 4) {\n    arr_mark[x + Maxv / 2][y + Maxv / 2] = 1;\n    Que[ed++] = make_pair(x, y);\n    ed %= Maxn;\n  }\n}\nint main() {\n  int n;\n  cin >> n;\n  arr_num[Maxv / 2][Maxv / 2] = n;\n  ins(0, 0);\n  while (bg != ed) {\n    int x = Que[bg].first, y = Que[bg++].second;\n    bg %= Maxn;\n    int cnt = arr_num[x + Maxv / 2][y + Maxv / 2] / 4;\n    arr_num[x + Maxv / 2][y + Maxv / 2] %= 4;\n    arr_mark[x + Maxv / 2][y + Maxv / 2] = 0;\n    for (int r = -1; r < 2; r++) {\n      for (int l = -1; l < 2; l++) {\n        if (abs(r + l) == 1) {\n          int nx = r + x, ny = l + y;\n          arr_num[nx + Maxv / 2][ny + Maxv / 2] += cnt;\n          ins(nx, ny);\n        }\n      }\n    }\n  }\n  int q;\n  cin >> q;\n  for (int i = 0; i < q; i++) {\n    int x, y;\n    scanf(\"%d%d\", &x, &y);\n    printf(\"%d\\n\", num(make_pair(x, y)));\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int x[] = {0, 0, 1, -1};\nconst int y[] = {1, -1, 0, 0};\nshort int q[10000000];\nint sQ = 0;\nshort int p[10000000];\nint sP = 0;\nshort int mp[300][300] = {0};\nint main() {\n  int n, t;\n  cin >> n >> t;\n  mp[150][150] = n;\n  q[0] = 150;\n  sQ = 1;\n  p[0] = 150;\n  sP = 1;\n  while (1) {\n    bool f = true;\n    for (int v = 150 - 68; v < 150 + 68; ++v)\n      for (int u = 150 - 68; u < 150 + 68; ++u) {\n        short int qanak = mp[u][v] / 4;\n        if (qanak > 0) {\n          f = false;\n          for (int i = 0; i < 4; ++i) {\n            mp[u + x[i]][v + y[i]] += qanak;\n          }\n          mp[u][v] %= 4;\n        }\n      }\n    if (f) break;\n  }\n  for (int h = 0; h < t; ++h) {\n    int x, y;\n    cin >> x >> y;\n    if (x + 150 < 0 || x + 150 >= 300 || y + 150 < 0 || y + 150 >= 300)\n      cout << 0 << endl;\n    else\n      cout << mp[x + 150][y + 150] << endl;\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvector<vector<int> > a[2];\nint n, t;\nint add = 100;\nint minx = add, maxx = add;\nint main() {\n  a[0].resize(210);\n  a[1].resize(210);\n  for (int i = 0; i < 210; i++) a[0][i].resize(210), a[1][i].resize(210);\n  cin >> n >> t;\n  a[1][add][add] = n;\n  while (1 == 1) {\n    bool fl = 0;\n    a[0].swap(a[1]);\n    for (int i = minx; i <= maxx; i++)\n      for (int j = minx; j <= maxx; j++) a[1][i][j] = a[0][i][j];\n    for (int i = minx; i <= maxx; i++)\n      for (int j = minx; j <= maxx; j++) {\n        if (a[0][i][j] >= 4) {\n          fl = 1;\n          minx = min(minx, i - 1);\n          minx = min(minx, j - 1);\n          maxx = max(maxx, i + 1);\n          maxx = max(maxx, j + 1);\n          a[1][i + 1][j] += a[1][i][j] / 4;\n          a[1][i - 1][j] += a[1][i][j] / 4;\n          a[1][i][j - 1] += a[1][i][j] / 4;\n          a[1][i][j + 1] += a[1][i][j] / 4;\n          a[1][i][j] %= 4;\n        }\n      }\n    if (fl == 0) break;\n  }\n  for (int i = 0; i < t; i++) {\n    int xx, yy;\n    scanf(\"%d%d\", &xx, &yy);\n    xx += add;\n    yy += add;\n    if (min(xx, yy) < minx || max(xx, yy) > maxx)\n      printf(\"%d\\n\", 0);\n    else\n      printf(\"%d\\n\", a[1][xx][yy]);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\n#pragma optimize(\"\", on)\n#pragma optimization_level 3\nusing namespace std;\nconst int N = 70;\nconst int dx[] = {0, 1, -1, 0};\nconst int dy[] = {1, 0, 0, -1};\nint g[N + 1][N + 1], h[N + 1][N + 1];\nint main() {\n  int i, j, k, n, t, flag = 1, m = 0, x, y, cnt = 0;\n  pair<int, int> tmp;\n  scanf(\"%d%d\", &n, &t);\n  g[0][0] = n;\n  while (flag) {\n    flag = 0;\n    memset(h, 0, sizeof(h));\n    for (i = 0; i < 70; i++)\n      for (j = 0; j < 70; j++) {\n        if (g[i][j] >= 4) {\n          flag = 1;\n          h[i][j] -= 4;\n          for (k = 0; k < 4; k++) {\n            x = i + dx[k], y = j + dy[k];\n            if (x < 0 || y < 0) continue;\n            if ((x == 0 && y == 0) ||\n                ((i != 0 && j != 0) && (x == 0 || y == 0))) {\n              h[x][y] += 2;\n            } else\n              h[x][y] += 1;\n          }\n        }\n      }\n    for (i = 0; i < N; i++)\n      for (j = 0; j < N; j++) {\n        g[i][j] += h[i][j];\n      }\n    assert(g[N][N] == 0);\n  }\n  for (i = 0; i < t; i++) {\n    scanf(\"%d %d\", &x, &y);\n    x = abs(x);\n    y = abs(y);\n    if (x > N || y > N)\n      k = 0;\n    else\n      k = g[x][y];\n    printf(\"%d\\n\", k);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "from sys import *\n     \nf = lambda: map(int, stdin.readline().split())\nn, t = f()\n     \nm = 65\nr = range(m)\np = [[0] * m for i in r]\n     \np[1][0] = n // 4\np[0][0] = n % 4\n    \nultima = 5\nq = k = 1\nwhile q:\n    k += 1\n    q = 0\n     \n    for x in r[1:k]:\n        for y in r[:x + 1]:\n            if p[x][y] < 4: continue\n            q = 1\n     \n            d = p[x][y] // 4\n            p[x][y] %= 4\n     \n            p[x + 1][y] += d\n            if x > y:\n                if x > y + 1:\n                    p[x][y + 1] += d\n                    p[x - 1][y] += d\n                else:\n                    p[x][x] += 2 * d\n                    if y: p[y][y] += 2 * d\n                    else: p[x][y] += d\n            if y: p[x][y - 1] += d if y > 1 else 2 * d\n     \ns = []\nfor j in range(t):\n    x, y = f()\n    x, y = abs(x), abs(y)\n    if x < y: x, y = y, x\n    s.append(p[x][y] if x < m else 0)\n     \nstdout.write('\\n'.join(map(str, s)))\n \t\t\t\t\t \t \t \t  \t\t\t     \t \t\t \t \t"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint dx[] = {-1, 1, 0, 0};\nint dy[] = {0, 0, -1, 1};\nint c[1000][1000];\nbool vis[1000][1000];\nstruct XX {\n  int x;\n  int y;\n};\nqueue<XX> q;\nint main() {\n  int n, Q;\n  int i, j, k;\n  int x, y, v;\n  XX now;\n  while (scanf(\"%d%d\", &n, &Q) != EOF) {\n    memset(c, 0, sizeof(c));\n    memset(vis, false, sizeof(vis));\n    XX temp = {500, 500};\n    q.push(temp);\n    vis[500][500] = true;\n    c[500][500] = n;\n    while (!q.empty()) {\n      now = q.front();\n      q.pop();\n      v = c[now.x][now.y] >> 2;\n      for (i = 0; i < 4; i++) {\n        x = now.x + dx[i];\n        y = now.y + dy[i];\n        c[x][y] += v;\n        if (c[x][y] > 3 && !vis[x][y]) {\n          XX temp1 = {x, y};\n          q.push(temp1);\n          vis[x][y] = true;\n        }\n      }\n      c[now.x][now.y] %= 4;\n      vis[now.x][now.y] = false;\n    }\n    while (Q--) {\n      scanf(\"%d%d\", &x, &y);\n      x = abs(x);\n      y = abs(y);\n      if (x > 500 || y > 500)\n        puts(\"0\");\n      else\n        printf(\"%d\\n\", c[x + 500][y + 500]);\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint const B_SZ = 70;\nint board1[2 * B_SZ + 2][2 * B_SZ + 2] = {0};\nint main() {\n  int n, t;\n  scanf(\"%d %d\", &n, &t);\n  board1[B_SZ][B_SZ] = n;\n  int iter = 0;\n  int mx = 0;\n  queue<pair<int, int> > q;\n  if (n > 3) q.push(make_pair(B_SZ, B_SZ));\n  queue<pair<int, int> > nq;\n  while (!q.empty()) {\n    int i = q.front().first, j = q.front().second;\n    q.pop();\n    board1[i][j] -= 4;\n    if (board1[i][j] > 3) q.push(make_pair(i, j));\n    if (++board1[i][j - 1] == 4) q.push(make_pair(i, j - 1));\n    if (++board1[i][j + 1] == 4) q.push(make_pair(i, j + 1));\n    if (++board1[i - 1][j] == 4) q.push(make_pair(i - 1, j));\n    if (++board1[i + 1][j] == 4) q.push(make_pair(i + 1, j));\n  }\n  while (t--) {\n    int x, y;\n    scanf(\"%d %d\", &x, &y);\n    x += B_SZ, y += B_SZ;\n    if (x < 0 || x >= 2 * B_SZ + 2 || y < 0 || y >= 2 * B_SZ + 2)\n      printf(\"0\\n\");\n    else\n      printf(\"%d\\n\", board1[x][y]);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\n#pragma GCC optimize(\"O2\")\nusing namespace std;\nconst int MXN = 3e5 + 10;\nconst int MXM = 500;\nconst int MID = 250;\nint n, q;\nint mp[MXM][MXM], inq[MXM][MXM];\nvector<pair<int, int>> dir = {{0, +1}, {0, -1}, {+1, 0}, {-1, 0}};\nvector<pair<int, int>> Q;\nvoid solve() {\n  Q.push_back({MID, MID});\n  int p = 0;\n  while (p < Q.size()) {\n    int x, y;\n    tie(x, y) = Q[p++];\n    inq[x][y] = 0;\n    int t = mp[x][y] / 4;\n    mp[x][y] -= 4 * t;\n    for (auto Pr : dir) {\n      int xp = x + Pr.first, yp = y + Pr.second;\n      mp[xp][yp] += t;\n      if (!inq[xp][yp] && mp[xp][yp] > 3) {\n        Q.push_back({xp, yp});\n        inq[xp][yp] = 1;\n      }\n    }\n  }\n}\nint main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  cin >> n >> q;\n  mp[MID][MID] = n;\n  solve();\n  while (q--) {\n    int x, y;\n    cin >> x >> y;\n    x += MID, y += MID;\n    if (x >= MXM || y >= MXM || x < 0 || y < 0)\n      cout << \"0\\n\";\n    else\n      cout << mp[x][y] << '\\n';\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int mod = 1000000007;\ntemplate <typename T>\nT gcd(T a, T b) {\n  if (a == 0) return b;\n  return gcd(b % a, a);\n}\ntemplate <typename T>\nT pow(T a, T b, long long m) {\n  T ans = 1;\n  while (b > 0) {\n    if (b % 2 == 1) ans = (ans * a) % mod;\n    b /= 2;\n    a = (a * a) % mod;\n  }\n  return ans % mod;\n}\nconst int maxi = 1000;\nint arr[maxi][maxi];\nint n, m, k, l, j;\nvoid dfs(int x, int y) {\n  int antsdiv = arr[x][y] / 4;\n  arr[x][y] -= 4 * antsdiv;\n  arr[x - 1][y] += antsdiv;\n  if (arr[x - 1][y] >= 4) dfs(x - 1, y);\n  arr[x + 1][y] += antsdiv;\n  if (arr[x + 1][y] >= 4) dfs(x + 1, y);\n  arr[x][y - 1] += antsdiv;\n  if (arr[x][y - 1] >= 4) dfs(x, y - 1);\n  arr[x][y + 1] += antsdiv;\n  if (arr[x][y + 1] >= 4) dfs(x, y + 1);\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  ;\n  cin >> n;\n  arr[500][500] = n;\n  dfs(500, 500);\n  cin >> m;\n  for (int i = 0; i < m; i++) {\n    int x, y;\n    cin >> x >> y;\n    if (abs(x) > 100 || abs(y) > 100) {\n      cout << \"0\\n\";\n      continue;\n    }\n    cout << arr[x + 500][y + 500] << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 70, M = 70, x_[4] = {0, 1, 0, -1}, y_[4] = {1, 0, -1, 0};\nint n, t, tot[N + N + 5][M + M + 5] = {}, tmp[N + N + 5][M + M + 5] = {};\nvoid init() {\n  scanf(\"%d%d\", &n, &t);\n  tot[N][M] = n;\n  bool flag = true;\n  int sum = 0;\n  while (flag) {\n    flag = false;\n    for (int i = 0; i < N + N; ++i)\n      for (int j = 0; j < M + M; ++j) tmp[i][j] = 0;\n    for (int i = 0; i < N + N; ++i)\n      for (int j = 0; j < M + M; ++j) {\n        tmp[i][j] += tot[i][j] & 3;\n        if (tot[i][j] >= 4) {\n          flag = true;\n          for (int k = 0; k < 4; ++k)\n            tmp[i + x_[k]][j + y_[k]] += tot[i][j] >> 2;\n        }\n      }\n    for (int i = 0; i < N + N; ++i)\n      for (int j = 0; j < M + M; ++j) tot[i][j] = tmp[i][j];\n    ++sum;\n  }\n}\nvoid work() {\n  int x, y;\n  for (int i = 1; i <= t; ++i) {\n    scanf(\"%d%d\", &x, &y);\n    if (-N < x && x < N && -M < y && y < M)\n      printf(\"%d\\n\", tot[x + N][y + M]);\n    else\n      puts(\"0\");\n  }\n}\nint main() {\n  init();\n  work();\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint dx[] = {0, 0, 1, -1};\nint dy[] = {1, -1, 0, 0};\nint ace[120][120], now[120][120];\nvoid fun(int n) {\n  ace[0][0] = n;\n  int i, j, k;\n  int my = 1, x, y;\n  ;\n  while (my) {\n    my = 0;\n    for (int i = 0; i <= 100; i++) {\n      for (int j = 0; j <= 100; j++) {\n        now[i][j] = ace[i][j];\n      }\n    }\n    for (i = 0; i <= 100; i++) {\n      for (int j = 0; j <= 100; j++) {\n        if (now[i][j] >= 4) {\n          for (int k = 0; k < 4; k++) {\n            x = dx[k] + i;\n            y = dy[k] + j;\n            if (x < 0 or y < 0) continue;\n            ace[x][y]++;\n            if (x == 0 && i != x) ace[x][y]++;\n            if (y == 0 && j != y) ace[x][y]++;\n          }\n          ace[i][j] -= 4;\n          my = 1;\n        }\n      }\n    }\n    for (int i = 0; i <= 100; i++) {\n      for (int j = 0; j <= 100; j++) {\n        now[i][j] = ace[i][j];\n      }\n    }\n  }\n}\nint main() {\n  int i, j, k, l, m, n, t;\n  scanf(\"%d%d\", &n, &t);\n  fun(n);\n  while (t--) {\n    scanf(\"%d%d\", &i, &j);\n    i = abs(i);\n    j = abs(j);\n    if (i > 100 || j > 100)\n      printf(\"0\\n\");\n    else\n      printf(\"%d\\n\", ace[i][j]);\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int c = 210;\nint mat[c][c];\nint zap, mur;\nint main() {\n  cin >> mur >> zap;\n  mat[c / 2][c / 2] = mur;\n  bool flag = true;\n  while (flag == true) {\n    flag = false;\n    for (int i = 1; i < c - 1; i++) {\n      for (int j = 1; j < c - 1; j++) {\n        if (mat[i][j] >= 4) {\n          flag = true;\n        }\n        mat[i - 1][j] += mat[i][j] / 4;\n        mat[i + 1][j] += mat[i][j] / 4;\n        mat[i][j - 1] += mat[i][j] / 4;\n        mat[i][j + 1] += mat[i][j] / 4;\n        mat[i][j] %= 4;\n      }\n    }\n  }\n  for (int i = 0; i < zap; i++) {\n    int x, y;\n    cin >> x >> y;\n    if ((abs(x) > 103) || (abs(y) > 103)) {\n      cout << 0 << \"\\n\";\n    } else {\n      cout << mat[x + c / 2][y + c / 2] << \"\\n\";\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "/*\nKeep solving problems.\n*/\n\nimport java.util.*;\nimport java.io.*;\n\npublic class CFA {\n    BufferedReader br;\n    PrintWriter out;\n    StringTokenizer st;\n    boolean eof;\n    private static final long MOD = 1000L * 1000L * 1000L + 7;\n    private static final int[] dx = {0, -1, 0, 1};\n    private static final int[] dy = {1, 0, -1, 0};\n    private static final String yes = \"Yes\";\n    private static final String no = \"No\";\n\n    int n;\n    int mid;\n    int sz;\n    void solve() throws IOException {\n        n = nextInt();\n        mid = 100 - 35;\n        sz = 2 * mid + 1;\n        int[][] cnt = new int[sz][sz];\n        cnt[mid][mid] = n;\n        while (true) {\n            if (!process(cnt)) {\n                break;\n            }\n        }\n\n        int T = nextInt();\n        for (int t = 0; t < T; t++) {\n            int x = nextInt() + mid;\n            int y = nextInt() + mid;\n            if (y < 0 || y >= sz || x < 0 || x >= sz) {\n                outln(0);\n                continue;\n            }\n            outln(cnt[y][x]);\n        }\n    }\n\n    boolean process(int[][] cnt) {\n        int[][] nxt = new int[sz][sz];\n        boolean res = false;\n        for (int i = 0; i < sz; i++) {\n            for (int j = 0; j < sz; j++) {\n                if (cnt[i][j] < 4) {\n                    nxt[i][j] += cnt[i][j];\n                    continue;\n                }\n\n                res = true;\n                nxt[i][j] += cnt[i][j] % 4;\n                for (int k = 0; k < dx.length; k++) {\n                    nxt[i + dx[k]][j + dy[k]] += cnt[i][j] / 4;\n                }\n            }\n        }\n\n        if (res) {\n            for (int i = 0; i < sz; i++) {\n                for (int j = 0; j < sz; j++) {\n                    cnt[i][j] = nxt[i][j];\n                }\n            }\n        }\n\n        return res;\n    }\n\n    void shuffle(int[] a) {\n        int n = a.length;\n        for(int i = 0; i < n; i++) {\n            int r = i + (int) (Math.random() * (n - i));\n            int tmp = a[i];\n            a[i] = a[r];\n            a[r] = tmp;\n        }\n    }\n    long gcd(long a, long b) {\n        while(a != 0 && b != 0) {\n            long c = b;\n            b = a % b;\n            a = c;\n        }\n        return a + b;\n    }\n    private void outln(Object o) {\n        out.println(o);\n    }\n    private void out(Object o) {\n        out.print(o);\n    }\n    private void formatPrint(double val) {\n        System.out.format(\"%.9f%n\", val);\n    }\n    public CFA() throws IOException {\n        br = new BufferedReader(new InputStreamReader(System.in));\n        out = new PrintWriter(System.out);\n        solve();\n        out.close();\n    }\n    public static void main(String[] args) throws IOException {\n        new CFA();\n    }\n\n    public long[] nextLongArr(int n) throws IOException{\n        long[] res = new long[n];\n        for(int i = 0; i < n; i++)\n            res[i] = nextLong();\n        return res;\n    }\n    public int[] nextIntArr(int n) throws IOException {\n        int[] res = new int[n];\n        for(int i = 0; i < n; i++)\n            res[i] = nextInt();\n        return res;\n    }\n    public String nextToken() {\n        while (st == null || !st.hasMoreTokens()) {\n            try {\n                st = new StringTokenizer(br.readLine());\n            } catch (Exception e) {\n                eof = true;\n                return null;\n            }\n        }\n        return st.nextToken();\n    }\n    public String nextString() {\n        try {\n            return br.readLine();\n        } catch (IOException e) {\n            eof = true;\n            return null;\n        }\n    }\n    public int nextInt() throws IOException {\n        return Integer.parseInt(nextToken());\n    }\n    public long nextLong() throws IOException {\n        return Long.parseLong(nextToken());\n    }\n    public double nextDouble() throws IOException {\n        return Double.parseDouble(nextToken());\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 65;\nint t, a[N + N][N + N];\nint main() {\n  scanf(\"%d%d\", a[N] + N, &t);\n  bool ff = 1;\n  while (ff) {\n    ff = 0;\n    for (int x = 1; x < N + N; ++x) {\n      for (int y = 1; y < N + N; ++y) {\n        if (a[x][y] >= 4) {\n          ff = 1;\n          a[x + 1][y] += a[x][y] / 4;\n          a[x - 1][y] += a[x][y] / 4;\n          a[x][y + 1] += a[x][y] / 4;\n          a[x][y - 1] += a[x][y] / 4;\n          a[x][y] %= 4;\n        }\n      }\n    }\n  }\n  while (t--) {\n    int x, y;\n    scanf(\"%d%d\", &x, &y);\n    printf(\"%d\\n\", abs(x) < N && abs(y) < N ? a[N + x][N + y] : 0);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <typename T>\ninline void read(T &x) {\n  x = 0;\n  char c = getchar(), f = 0;\n  for (; c < '0' || c > '9'; c = getchar())\n    if (!(c ^ 45)) f = 1;\n  for (; c >= '0' && c <= '9'; c = getchar())\n    x = (x << 1) + (x << 3) + (c ^ 48);\n  if (f) x = -x;\n}\nconst int dx[4] = {-1, 1, 0, 0}, dy[4] = {0, 0, -1, 1}, DX = 404;\nint n, t, a[810][810];\nqueue<pair<int, int> > q;\nint main() {\n  read(n), read(t), a[DX][DX] = n, q.push(make_pair(0, 0));\n  while (!q.empty()) {\n    int x = q.front().first, y = q.front().second;\n    q.pop();\n    int ad;\n    if (a[x + DX][y + DX] < 4)\n      continue;\n    else\n      ad = a[x + DX][y + DX] / 4, a[x + DX][y + DX] %= 4;\n    for (int i = 0; i < 4; i++) {\n      int tx = x + dx[i], ty = y + dy[i];\n      a[tx + DX][ty + DX] += ad;\n      if (a[tx + DX][ty + DX] >= 4) q.push(make_pair(tx, ty));\n    }\n  }\n  for (int x, y; t--;) {\n    read(x), read(y);\n    if (x >= DX || x <= -DX || y >= DX || y <= -DX)\n      puts(\"0\");\n    else\n      printf(\"%d\\n\", a[x + DX][y + DX]);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\n\npublic class ANTS {\n\tfinal static int origin = 90;\n\tfinal static int size = 2 * origin + 1;\n\n\tpublic static void main(String[] args) {\n\t\tScanner in = new Scanner(System.in);\n\n\t\tint[][] graph = new int[size][size];\n\t\tgraph[origin][origin] = in.nextInt();\n\t\tboolean movement = true;\n\n\t\twhile(movement) {\n\t\t// if there was a change movement would continue \n\t\t\tmovement = false;\n\t\t\tfor(int r = 0; r < graph.length; r++) {\n\t\t\t\tfor(int c = 0; c < graph[r].length; c++) {\n\t\t\t\t\tif(graph[r][c] >= 4) {\n\t\t\t\t\t\tint newAnt = graph[r][c] / 4;\n\t\t\t\t\t\tgraph[r + 1][c] += newAnt;\n\t\t\t\t\t\tgraph[r - 1][c] += newAnt;\t\t\n\t\t\t\t\t\tgraph[r][c + 1] += newAnt;\n\t\t\t\t\t\tgraph[r][c - 1] += newAnt;\n\t\t\t\t\t\tgraph[r][c] %= 4;\n\t\t\t\t\t\tmovement = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tint queries = in.nextInt();\n\t\twhile(queries-->0) {\n\t\t\tint x = in.nextInt();\n\t\t\tint y = in.nextInt();\n\t\t\tif((x + origin >= 0 && x + origin < size) && (y + origin >= 0 && y + origin < size)) {\n\t\t\t\tSystem.out.println(graph[x + origin][y + origin]);\n\t\t\t}\n\t\t\telse\n\t\t\t\tSystem.out.println(0);\n\t\t}\t\t\n\t}\n}\n\n\n\n\n\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint constructAntGrid(int curx, int cury, int m[1000][1000]) {\n  if (m[curx][cury] < 4) {\n    return 0;\n  }\n  m[curx][cury + 1] += m[curx][cury] / 4;\n  m[curx + 1][cury] += m[curx][cury] / 4;\n  m[curx][cury - 1] += m[curx][cury] / 4;\n  m[curx - 1][cury] += m[curx][cury] / 4;\n  m[curx][cury] %= 4;\n  constructAntGrid(curx + 1, cury, m);\n  constructAntGrid(curx, cury + 1, m);\n  constructAntGrid(curx - 1, cury, m);\n  constructAntGrid(curx, cury - 1, m);\n  return 0;\n}\nint main(int argc, char *argv[]) {\n  int n_ants, n_queries;\n  cin >> n_ants >> n_queries;\n  int m[1000][1000];\n  m[500][500] = n_ants;\n  constructAntGrid(500, 500, m);\n  for (int i = 0; i < n_queries; i++) {\n    long long int x, y;\n    cin >> x >> y;\n    if (500 + x >= 1000 || 500 + y >= 1000 || 500 + y < 0 || 500 + x < 0)\n      cout << 0 << endl;\n    else\n      cout << m[500 + x][500 + y] << endl;\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint M[132][132][2];\nint f(int x) { return x + 132 / 2; }\nint dx[] = {0, 0, 1, -1}, dy[] = {1, -1, 0, 0};\nbool in(int x, int y) { return abs(x) < 132 / 2 && abs(y) < 132 / 2; }\nint main() {\n  memset(M, 0, sizeof M);\n  int n, t, a = 0, est = 0, x, y;\n  scanf(\"%d%d\", &n, &t);\n  M[f(0)][f(0)][0] = n;\n  bool ok = 1;\n  while (ok) {\n    ok = 0;\n    for (int i = -a; i <= a; i++)\n      for (int j = -a; j <= a; j++) {\n        if (M[f(i)][f(j)][est] > 3) {\n          ok = 1;\n          for (int k = 0; k < 4; k++)\n            M[f(i + dx[k])][f(j + dy[k])][!est] += M[f(i)][f(j)][est] / 4;\n          M[f(i)][f(j)][!est] = M[f(i)][f(j)][est] % 4;\n          M[f(i)][f(j)][est] = 0;\n        } else {\n          M[f(i)][f(j)][!est] += M[f(i)][f(j)][est];\n          M[f(i)][f(j)][est] = 0;\n        }\n      }\n    if (M[f(a + 1)][f(0)][!est] != 0) a++;\n    est = !est;\n  }\n  while (t--) {\n    scanf(\"%d%d\", &x, &y);\n    if (in(x, y))\n      printf(\"%d\\n\", M[f(x)][f(y)][est]);\n    else\n      puts(\"0\");\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nusing db = long double;\nusing pll = pair<long long, long long>;\nconst int maxN = 32000;\nint dx[] = {1, -1, 0, 0};\nint dy[] = {0, 0, -1, 1};\nint a[2000][2000];\nint b[1000][1000];\nint used[1000][1000];\nint32_t main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  long long t, i, j, z, k, n;\n  cin >> n;\n  int centerx = 500, centery = 500;\n  a[centerx][centery] = n;\n  queue<pair<int, int> > q;\n  q.push(make_pair(centerx, centery));\n  ++used[centerx][centery];\n  int total = 0;\n  while (!q.empty()) {\n    pair<int, int> cur = q.front();\n    q.pop();\n    int cx = cur.first, cy = cur.second;\n    --used[cx][cy];\n    if (a[cx][cy] >= 4) {\n      int val = a[cx][cy] / 4;\n      for (int k = 0; k < 4; ++k) {\n        a[cx + dx[k]][cy + dy[k]] += val;\n        if (!used[cx + dx[k]][cy + dy[k]]) {\n          q.push(make_pair(cx + dx[k], cy + dy[k]));\n          ++used[cx + dx[k]][cy + dy[k]];\n        }\n        ++total;\n      }\n    }\n    a[cx][cy] %= 4;\n  }\n  int m;\n  cin >> m;\n  for (int i = 0; i < m; ++i) {\n    int x, y;\n    cin >> x >> y;\n    x += centerx, y += centery;\n    if (x < 0 || x >= 1000 || y < 0 || y >= 1000) {\n      printf(\"0\\n\");\n    } else {\n      printf(\"%d\\n\", a[x][y]);\n    }\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst double PI = acos(-1.0);\ndouble fixAngle(double A) { return A > 1 ? 1 : (A < -1 ? -1 : A); }\ndouble dcmp(double a, double b) {\n  return fabs(a - b) < 1e-6 ? 0 : a > b ? 1 : -1;\n}\nconst int mx = 150;\nint grid[2][mx * 2][mx * 2];\nint dy[] = {1, -1, 0, 0};\nint dx[] = {0, 0, 1, -1};\nint main() {\n  int n;\n  scanf(\"%d\", &n);\n  int t;\n  scanf(\"%d\", &t);\n  grid[0][mx][mx] = n;\n  int flag = 1;\n  int p = 0;\n  int cnt = 0;\n  while (flag) {\n    cnt++;\n    flag = 0;\n    p = !p;\n    memset(grid[p], 0, sizeof grid[p]);\n    for (int i = 0; i < 2 * mx; i++) {\n      for (int j = 0; j < 2 * mx; j++) {\n        if (grid[!p][i][j] < 4) {\n          grid[p][i][j] += grid[!p][i][j];\n        } else {\n          flag = 1;\n          for (long long k = 0; k < 4; k++) {\n            grid[p][i + dx[k]][j + dy[k]] += grid[!p][i][j] / 4;\n          }\n          grid[p][i][j] += grid[!p][i][j] % 4;\n        }\n      }\n    }\n  }\n  int a, b;\n  for (long long i = 0; i < t; i++) {\n    scanf(\"%d%d\", &a, &b);\n    if (a + mx >= 2 * mx || a + mx < 0)\n      printf(\"0\\n\");\n    else if (b + mx >= 2 * mx || b + mx < 0)\n      printf(\"0\\n\");\n    else\n      printf(\"%d\\n\", grid[p][a + mx][b + mx]);\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\nimport java.math.*;\nimport java.util.regex.*;\nimport java.text.*;\n\npublic class P317B {\n  static long startTime = System.currentTimeMillis();\n\n  @SuppressWarnings(\"unchecked\")\n  public void run() throws Exception {\n    int n = nextInt();\nstartTime = System.currentTimeMillis();\n    \n    final int w = 64;\n    int [][] a = new int [w + 1][w + 1];\n    a[0][0] = n;\nint c = 0, cc = 0;\n\n    boolean changed = true;\n    while (changed) {\n      changed = false;\n\n      int [][] na = new int [w + 1][];\n      for (int y = 0; y <= w; y++) {\n        na[y] = Arrays.copyOf(a[y], w + 1);\n      }\nc++;\n      for (int y = 0; y <= w; y++) {\n        for (int x = 0; x <= w; x++) {\ncc++;\n          if (a[y][x] >= 4) {\n            na[y][x] -= 4;\n            na[y + 1][x]++;\n            na[y][x + 1]++;\n            if (y > 0) {\n              na[y - 1][x]++;\n              if (y == 1) {\n                na[y - 1][x]++;\n              }\n            }\n            if (x > 0) {\n              na[y][x - 1]++;\n              if (x == 1) {\n                na[y][x - 1]++;\n              }\n            }\n\n            changed = true;\n          }\n        }\n      }\n\n      a = na;\n//display(a, 7); System.console().readLine();\n    }\n//System.err.println(\"[c = \" + c + \", cc = \" + cc + \"]\");\n    \n    int m = nextInt();\n    while ((m--) > 0) {\n      int x = Math.abs(nextInt());\n      int y = Math.abs(nextInt());\n      println(((x <= w) && (y <= w)) ? a[x][y] : 0);\n    }\n  }\n\n  void display(int [][] a, int w) {\n    int nw = 1;\n    for (int y = 0; y <= w; y++) {\n      for (int x = 0; x <= w; x++) {\n        nw = Math.max(nw, (int)Math.log10((a[y][x] == 0) ? 1 : a[y][x]) + 1);\n      }\n    }\n    \n    for (int y = 0; y <= w; y++) {\n      for (int x = 0; x <= w; x++) {\n        if (a[y][x] == 0) {\n          System.err.printf(\"%\" + (nw + 1) + \"s\", (x == w ? \"\\n\" : \" \"));\n        } else {\n          System.err.printf(\"%\" + nw + \"d\" + (x == w ? \"\\n\" : \" \"), a[y][x]);\n        }\n      }\n    }\n  }\n\n  public static void main(String [] args) throws Exception {\n    new P317B().run();\n    System.err.println(\"[time : \" + (System.currentTimeMillis() - startTime) + \" ms]\");\n    pw.close();\n    br.close();\n  }\n\n  static PrintWriter pw = new PrintWriter(new BufferedOutputStream(System.out));\n  static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n  StringTokenizer st = null;\n\n  String nextToken() throws IOException {\n    while (st == null || !st.hasMoreTokens()) {\n      String s = br.readLine();\n      if (s == null) { return null; }\n      st = new StringTokenizer(s);\n    }\n    return st.nextToken();\n  }\n\n  int nextInt() throws IOException { return Integer.parseInt(nextToken()); }\n  long nextLong() throws IOException { return Long.parseLong(nextToken()); }\n  double nextDouble() throws IOException { return Double.parseDouble(nextToken()); }\n  char nextChar() throws IOException { return (char) (br.read()); }\n  String next() throws IOException { return nextToken(); }\n  String nextLine() throws IOException { return br.readLine(); }\n  int [] readInt(int size) throws IOException {\n    int [] array = new int [size];\n    for (int i = 0; i < size; i++) { array[i] = nextInt(); }\n    return array;\n  }\n  long [] readLong(int size) throws IOException {\n    long [] array = new long [size];\n    for (int i = 0; i < size; i++) { array[i] = nextLong(); }\n    return array;\n  }\n  double [] readDouble(int size) throws IOException {\n    double [] array = new double [size];\n    for (int i = 0; i < size; i++) { array[i] = nextDouble(); }\n    return array;\n  }\n  String [] readLines(int size) throws IOException {\n    String [] array = new String [size];\n    for (int i = 0; i < size; i++) { array[i] = nextLine(); }\n    return array;\n  }\n\n  void print(long l) { print(\"\" + l); }\n  void print(double d) { print(\"\" + d); }\n  void print(char c) { print(\"\" + c); }\n  void print(Object o) { print(\"\" + o); }\n  void print(String s) { pw.print(s); }\n  void println(long l) { println(\"\" + l); }\n  void println(double d) { println(\"\" + d); }\n  void println(char c) { println(\"\" + c); }\n  void println(Object o) { println(\"\" + o); }\n  void println(String s) { pw.println(s); }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAX = 100;\nconst int pivot = 200;\nint n, q;\nint x, y;\nint lat[400][400];\nint main() {\n  scanf(\"%d %d\", &n, &q);\n  lat[pivot][pivot] = n;\n  while (true) {\n    bool change = false;\n    for (int i = pivot - MAX; i <= pivot + MAX; i++)\n      for (int j = pivot - MAX; j <= pivot + MAX; j++)\n        if (lat[i][j] >= 4) {\n          change = true;\n          int go = lat[i][j] / 4;\n          lat[i][j] %= 4;\n          lat[i + 1][j] += go;\n          lat[i - 1][j] += go;\n          lat[i][j + 1] += go;\n          lat[i][j - 1] += go;\n        }\n    if (!change) break;\n  }\n  for (int i = 1; i <= q; i++) {\n    scanf(\"%d %d\", &x, &y);\n    if (abs(x) > MAX || abs(y) > MAX) {\n      printf(\"0\\n\");\n    } else {\n      printf(\"%d\\n\", lat[pivot + y][pivot + x]);\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int E = 70;\nconst int N = 2 * E;\nint d[N][N];\nint add[N][N];\nint dx[] = {0, 0, -1, 1};\nint dy[] = {-1, 1, 0, 0};\nbool flag = 1;\nint main() {\n  int n;\n  cin >> n;\n  d[E][E] = n;\n  while (flag) {\n    flag = 0;\n    for (int i = 1; i < N - 1; i++) {\n      for (int j = 1; j < N - 1; j++) {\n        for (int k = 0; k < 4; k++) d[i + dx[k]][j + dy[k]] += d[i][j] / 4;\n        d[i][j] %= 4;\n      }\n    }\n    for (int i = 0; i < N; i++)\n      for (int j = 0; j < N; j++)\n        if (d[i][j] >= 4) flag = 1;\n  }\n  int m;\n  cin >> m;\n  for (int q = 0; q < m; q++) {\n    int x, y;\n    cin >> x >> y;\n    if (x + E < N && x + E >= 0 && y + E < N && y + E >= 0)\n      cout << d[x + E][y + E];\n    else\n      cout << 0;\n    cout << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "/*\n * To change this template, choose Tools | Templates\n * and open the template in the editor.\n */\n//package pkg188;\n\nimport java.awt.Point;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.Scanner;\n\n/**\n *\n * @author Alik\n */\npublic class D {\n    static String line;\n    static int cur = 0;\n    public static void main(String[] args) throws Exception{\n        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n        line = in.readLine();\n        int n = sp(), t = sp(), base = 100, a[][] = new int [230][230];\n        boolean ok = true; a[base][base] = n;\n        while (ok) {\n            ok = false;\n            for (int i = 0; i < 200; i++)\n                for (int j = 0; j < 200; j++) \n                    if (a[i][j] > 3) {\n                        a[i + 1][j] += a[i][j] / 4;\n                        a[i - 1][j] += a[i][j] / 4;\n                        a[i][j + 1] += a[i][j] / 4;\n                        a[i][j - 1] += a[i][j] / 4;\n                        a[i][j] %= 4;\n                        ok = true;\n                    }\n        }\n        for (int i = 0; i < t; i++) {\n            line = in.readLine();\n            int x = sp(), y = sp();\n            if (Math.abs(x) > base || Math.abs(y) > base) System.out.println(\"0\"); else System.out.println(a[x + base][y + base]);\n        }\n    }\n    \n    private static int sp() {\n        int x = 0;\n        boolean sign = false;\n        while (cur < line.length()) {\n            if (line.charAt(cur) == ' ') break;\n            if (line.charAt(cur) == '-') {sign = true; cur++; continue;}\n            x = x * 10 + (line.charAt(cur) - 48);\n            cur++;\n        }\n        if (sign) x = -x;\n        cur++;\n        if (cur >= line.length()) cur = 0;\n        return x;\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int OFFSET = 100;\nint c[200][200];\nint inque[200][200];\nqueue<int> Q;\nint main(void) {\n  int n, t;\n  scanf(\"%d%d\", &n, &t);\n  c[OFFSET][OFFSET] = n;\n  if (n >= 4) {\n    Q.push(0);\n    Q.push(0);\n  }\n  inque[OFFSET][OFFSET] = 1;\n  const int dx[4] = {0, 1, 0, -1}, dy[4] = {1, 0, -1, 0};\n  while (!Q.empty()) {\n    int x = Q.front();\n    Q.pop();\n    int y = Q.front();\n    Q.pop();\n    inque[x + OFFSET][y + OFFSET] = 0;\n    int v = c[x + OFFSET][y + OFFSET] / 4;\n    c[x + OFFSET][y + OFFSET] %= 4;\n    for (int i = 0; i < 4; i++) {\n      int nx = x + OFFSET + dx[i], ny = y + OFFSET + dy[i];\n      c[nx][ny] += v;\n      if (c[nx][ny] >= 4 && !inque[nx][ny]) {\n        inque[nx][ny] = 1;\n        Q.push(nx - OFFSET);\n        Q.push(ny - OFFSET);\n      }\n    }\n  }\n  for (int i = 0; i < t; i++) {\n    int x, y;\n    scanf(\"%d%d\", &x, &y);\n    if (abs(x) > 64 || abs(y) > 64)\n      puts(\"0\");\n    else\n      printf(\"%d\\n\", c[x + OFFSET][y + OFFSET]);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint ll = 130;\nint n, t;\nint a[500][500], b[500][500];\nint main() {\n  cin >> n >> t;\n  memset(a, 0, sizeof(a));\n  a[ll][ll] = n;\n  while (true) {\n    int ff = 0, l = ll;\n    for (register int i = 1; i <= l * 2; i++)\n      for (register int j = 1; j <= l * 2; j++)\n        if (a[i][j] >= 4) {\n          int t = a[i][j] >> 2;\n          ff = 1;\n          a[i + 1][j] += t;\n          a[i][j + 1] += t;\n          a[i - 1][j] += t;\n          a[i][j - 1] += t;\n          a[i][j] = a[i][j] & 3;\n        }\n    if (!ff) break;\n  }\n  for (int i = 0; i < t; i++) {\n    int x, y;\n    scanf(\"%d%d\", &x, &y);\n    if (abs(x) <= ll && abs(y) <= ll)\n      printf(\"%d\\n\", a[x + ll][y + ll]);\n    else\n      printf(\"0\\n\");\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.*;\nimport java.math.BigInteger;\nimport java.util.*;\n\n\n\npublic class B {\n    private static final int mod = (int)1e9+7;\n    \n    final int n = 64 * 2 + 1;\n    final int[] ants = new int[n*n];\n    boolean[] inQ = new boolean[n*n];\n    int sp = 0;\n    int[] stx = new int[n * n];\n    int[] sty = new int[n * n];\n    \n    final int[] ds = new int[] { -1, 1, -n, n, };\n    public void run() throws IOException {\n        int v = IOFast.nextInt();\n        int T = IOFast.nextInt();\n        ants[n/2*n + n/2] = v;\n        stx[sp++] = n/2*n+n/2;\n        while(sp != 0) {\n            final int i = stx[--sp];\n            inQ[i] = false;\n            for(final int d : ds) {\n                ants[i+d] += ants[i] >>> 2;\n                if(!inQ[i+d] && ants[i+d]>=4) {\n                    inQ[i+d] = true;\n                    stx[sp++] = i+d;\n                }\n            }\n            ants[i] &= 3;\n        }\n        \n        for(int i = 0; i < T; i++) {\n            int y = IOFast.nextInt();\n            int x = IOFast.nextInt();\n            if(Math.abs(x) > n/2 || Math.abs(y) > n/2) {\n                IOFast.out.println(0);\n                continue;\n            }\n            IOFast.out.println(ants[(x+n/2)*n+(y+n/2)]);\n        }\n    }\n    \n    public static void main(String[] args) throws IOException {\n        //      IOFast.setFileIO(\"input.txt\", \"output.txt\");\n        new B().run();\n        IOFast.out.flush();\n    }\n    \n\n    static public class IOFast {\n        private static BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n        private static PrintWriter out = new PrintWriter(System.out);\n\n        static void setFileIO(String ins, String outs) throws IOException {\n            try {\n                in = new BufferedReader(new FileReader(ins));\n                out = new PrintWriter(new FileWriter(outs));\n            }\n            catch(IOException e) {\n                System.err.println(e);\n                throw e;\n            }\n        }\n\n        //      private static final int BUFFER_SIZE = 50 * 200000;\n        private static int pos, readLen;\n        private static final char[] buffer = new char[1024 * 8];\n        private static final StringBuilder buf = new StringBuilder();\n        private static boolean[] isDigit = new boolean[256];\n        private static boolean[] isSpace = new boolean[256];\n\n        static {\n            for(int i = 0; i < 10; i++) {\n                isDigit['0' + i] = true;\n            }\n            isDigit['-'] = true;\n            isSpace[' '] = isSpace['\\r'] = isSpace['\\n'] = isSpace['\\t'] = true;\n        }\n\n        static boolean endInput;\n\n        private static int read() throws IOException {\n            if(readLen == -1) {\n                return -1;\n            }\n\n            if(pos >= readLen) {\n                readLen = in.read(buffer);\n                pos = 0;\n\n                if(readLen <= 0) {\n                    return -1;\n                }\n            }\n\n            return buffer[pos++];\n        }\n\n        private static int nextInt() throws IOException {\n            boolean plus = false;\n            int ret = 0;\n            while(true) {\n                final int c = read();\n\n                if(c == -1) {\n                    endInput = true;\n                    return Integer.MIN_VALUE;\n                }\n\n                if(isDigit[c]) {\n                    if(c != '-') {\n                        plus = true;\n                        ret = c - '0';\n                    }\n                    break;\n                }\n            }\n\n            while(true) {\n                final int c = read();\n                if(c == -1 || !isDigit[c]) {\n                    break;\n                }\n                ret = ret * 10 + c - '0';\n            }\n\n            return plus ? ret : -ret;\n        }\n\n        private static long nextLong() throws IOException {\n            boolean plus = false;\n            long ret = 0;\n            while(true) {\n                final int c = read();\n\n                if(c == -1) {\n                    endInput = true;\n                    return Integer.MIN_VALUE;\n                }\n\n                if(isDigit[c]) {\n                    if(c != '-') {\n                        plus = true;\n                        ret = c - '0';\n                    }\n                    break;\n                }\n            }\n\n            while(true) {\n                final int c = read();\n                if(c == -1 || !isDigit[c]) {\n                    break;\n                }\n                ret = ret * 10 + c - '0';\n            }\n\n            return plus ? ret : -ret;\n        }\n\n        private static char nextChar() throws IOException {\n            while(true) {\n                final int c = read();\n\n                if(c == -1) {\n                    endInput = true;\n                    return '\\0';\n                }\n\n                if(!isSpace[c]) {\n                    return (char)c;\n                }\n            }\n        }\n\n        private static String next() throws IOException {\n            buf.setLength(0);\n\n            while(true) {\n                final int c = read();\n\n                if(c == -1) {\n                    endInput = true;\n                    return \"-1\";\n                }\n\n                if(!isSpace[c]) {\n                    buf.append((char)c);\n                    break;\n                }\n            }\n\n            while(true) {\n                final int c = read();\n\n                if(c == -1 || isSpace[c]) {\n                    break;\n                }\n                buf.append((char)c);\n            }\n\n            return buf.toString();\n        }\n\n        private static double nextDouble() throws IOException {\n            return Double.parseDouble(next());\n        }\n\n    }\n\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint grid[8000][8000];\nint dx[] = {1, -1, 0, 0};\nint dy[] = {0, 0, 1, -1};\nbool inRange(int x, int y) { return x >= 0 && y >= 0 && x < 8000 && y < 8000; }\nint main() {\n  for (int i = 0; i < 8000; i++)\n    for (int j = 0; j < 8000; j++) grid[i][j] = 0;\n  int N, T;\n  cin >> N >> T;\n  queue<pair<int, int> > q;\n  q.push(make_pair(0, 0));\n  grid[0][0] = N;\n  while (!q.empty()) {\n    pair<int, int> p = q.front();\n    q.pop();\n    int x = p.first, y = p.second;\n    if (grid[x][y] < 4) continue;\n    for (int i = 0; i < 4; i++) {\n      int nx = x + dx[i];\n      int ny = y + dy[i];\n      if (!inRange(nx, ny)) continue;\n      if (nx == 0 && ny == 0) {\n        grid[nx][ny] += (grid[x][y] / 4) * 2;\n      } else if (nx == 0 || ny == 0) {\n        grid[nx][ny] += (grid[x][y] / 4) * ((x == 0 || y == 0) ? 1 : 2);\n      } else {\n        grid[nx][ny] += (grid[x][y] / 4);\n      }\n      if (grid[nx][ny] >= 4) q.push(make_pair(nx, ny));\n    }\n    grid[x][y] = grid[x][y] % 4;\n  }\n  for (int i = 0; i < T; i++) {\n    int x, y;\n    cin >> x >> y;\n    x = abs(x);\n    y = abs(y);\n    if (inRange(x, y))\n      cout << grid[x][y] << endl;\n    else\n      cout << 0 << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e3 + 10, S = N / 2;\nint dx[] = {0, 0, 1, -1};\nint dy[] = {1, -1, 0, 0};\nint ans = 0;\nstruct arr {\n  int a[N][N];\n  int& operator[](pair<int, int> pi) {\n    int nima = pi.first;\n    int sepanta = pi.second;\n    if (nima < 0) nima += S;\n    if (sepanta < 0) sepanta += S;\n    if (nima >= N || sepanta >= N || nima < 0 || sepanta < 0) return ans;\n    return a[nima][sepanta];\n  }\n} sepi;\nint main() {\n  int n, t;\n  cin >> n >> t;\n  sepi[{0, 0}] = n;\n  deque<pair<int, int> > dq;\n  dq.push_back({0, 0});\n  while (!dq.empty()) {\n    pair<int, int> pi = dq.front();\n    dq.pop_front();\n    if (sepi[pi] < 4) continue;\n    int add = sepi[pi] / 4;\n    sepi[pi] -= add * 4;\n    for (int i = 0; i < 4; i++) {\n      sepi[{pi.first + dx[i], pi.second + dy[i]}] += add;\n      dq.push_back({pi.first + dx[i], pi.second + dy[i]});\n    }\n  }\n  cout << endl;\n  while (t--) {\n    int x, y;\n    cin >> x >> y;\n    cout << sepi[{x, y}] << endl;\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long double eps = 1e-9;\nconst int inf = (1 << 30) - 1;\nconst long long inf64 = ((long long)1 << 62) - 1;\nconst long double pi = 3.1415926535897932384626433832795;\ntemplate <class T>\nT sqr(T x) {\n  return x * x;\n}\ntemplate <class T>\nT abs(T x) {\n  return x < 0 ? -x : x;\n}\nconst int nmax = 140;\nint h[nmax][nmax];\nint n, t, cnt;\nint px[] = {-1, 0, 1, 0};\nint py[] = {0, -1, 0, 1};\ninline void add(int x, int y, int n) { h[x][y] += n; }\nvoid push(int x, int y) {\n  cnt++;\n  int now = h[x][y] / 4;\n  if (now > 0) {\n    for (int i = 0; i < (int)(4); i++) add(x + px[i], y + py[i], now);\n    h[x][y] -= now * 4;\n    for (int i = 0; i < (int)(4); i++) push(x + px[i], y + py[i]);\n  }\n}\nint main() {\n  cin >> n >> t;\n  add(nmax / 2, nmax / 2, n);\n  push(nmax / 2, nmax / 2);\n  for (int i = 0; i < (int)(t); i++) {\n    int x, y;\n    scanf(\"%d %d\", &x, &y);\n    x += nmax / 2;\n    y += nmax / 2;\n    if (x < 0 || y < 0 || x >= nmax || y >= nmax)\n      cout << 0 << endl;\n    else\n      cout << h[x][y] << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint maz[1050][1050];\nint dx[] = {1, -1, 0, 0};\nint dy[] = {0, 0, 1, -1};\nstruct node {\n  int x, y;\n  node() {}\n  node(int a, int b) {\n    x = a;\n    y = b;\n  }\n};\nqueue<node> Q;\nbool vist[202][202];\nbool bfs() {\n  memset(vist, 0, sizeof(vist));\n  while (!Q.empty()) Q.pop();\n  bool flag = 0;\n  for (int i = 0; i < 202; i++) {\n    for (int j = 0; j < 202; j++) {\n      if (maz[i][j] >= 4) {\n        Q.push(node(i, j));\n        flag = 1;\n      }\n    }\n  }\n  if (!flag) return true;\n  while (!Q.empty()) {\n    node now = Q.front();\n    Q.pop();\n    vist[now.x][now.y] = 1;\n    int tmp = maz[now.x][now.y];\n    maz[now.x][now.y] = tmp % 4;\n    for (int i = 0; i < 4; i++) {\n      int xx = now.x + dx[i];\n      int yy = now.y + dy[i];\n      if (xx < 0 || yy < 0 || xx >= 200 || yy >= 200) continue;\n      maz[xx][yy] += tmp / 4;\n    }\n  }\n  return false;\n}\nint main() {\n  int n, t;\n  scanf(\"%d%d\", &n, &t);\n  memset(maz, 0, sizeof(maz));\n  maz[100][100] = n;\n  while (!bfs())\n    ;\n  int x, y;\n  while (t--) {\n    scanf(\"%d%d\", &x, &y);\n    if (x > 100 || y > 100 || x <= -100 || y <= -100)\n      puts(\"0\");\n    else\n      printf(\"%d\\n\", maz[x + 100][y + 100]);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\n\npublic class B {\n\tstatic int n, t, zx, zy, x, y;\n\tstatic int[][] M;\n\n\tstatic void dfs(int x, int y) {\n\t\tif (M[x][y] < 4)\n\t\t\treturn;\n\t\tint c = M[x][y] / 4;\n\t\tM[x][y] %= 4;\n\t\tM[x - 1][y] += c;\n\t\tdfs(x - 1, y);\n\t\tM[x + 1][y] += c;\n\t\tdfs(x + 1, y);\n\t\tM[x][y - 1] += c;\n\t\tdfs(x, y - 1);\n\t\tM[x][y + 1] += c;\n\t\tdfs(x, y + 1);\n\t}\n\n\tpublic static void main(String[] args) throws Exception {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tPrintWriter out = new PrintWriter(System.out);\n\t\tString[] parts = br.readLine().split(\" \");\n\t\tn = Integer.parseInt(parts[0]);\n\t\tt = Integer.parseInt(parts[1]);\n\t\tzx = zy = 301 / 2;\n\t\tM = new int[301][301];\n\t\tM[zx][zy] = n;\n\t\tdfs(zx, zy);\n\t\twhile (t-- > 0) {\n\t\t\tparts = br.readLine().split(\" \");\n\t\t\tx = Integer.parseInt(parts[0]);\n\t\t\ty = Integer.parseInt(parts[1]);\n\t\t\tif (x < 0)\n\t\t\t\tx = -x;\n\t\t\tif (y < 0)\n\t\t\t\ty = -y;\n\t\t\tx += zx;\n\t\t\ty += zy;\n\t\t\tif (x < 301 && y < 301) {\n\t\t\t\tout.println(M[x][y]);\n\t\t\t} else {\n\t\t\t\tout.println(0);\n\t\t\t}\n\t\t}\n\t\tout.flush();\n\t\tout.close();\n\t}\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  static int a[150][150];\n  static int b[150][150];\n  memset(a, 0, sizeof(a));\n  int x1, x2, y1, y2;\n  int st = 150 / 2;\n  x1 = 150 / 2;\n  x2 = 150 / 2;\n  y1 = 150 / 2;\n  y2 = 150 / 2;\n  int num, Q;\n  scanf(\"%d %d\", &num, &Q);\n  a[x1][y1] = num;\n  int i, j;\n  memset(b, 0, sizeof(b));\n  while (1) {\n    char flag = 0;\n    for (i = x1; i <= x2; i++) {\n      for (j = x1; j <= x2; j++) {\n        if (a[i][j] >= 4) {\n          flag = 1;\n          b[i][j] -= 4;\n          b[i - 1][j]++;\n          b[i + 1][j]++;\n          b[i][j - 1]++;\n          b[i][j + 1]++;\n        }\n      }\n    }\n    int x3, x4, y3, y4;\n    x3 = x1;\n    x4 = x2;\n    y3 = y1;\n    y4 = y2;\n    for (i = x1 - 1; i <= x2 + 1; i++) {\n      if (b[i][y1 - 1]) y3 = y1 - 1;\n      if (b[i][y2 + 1]) y4 = y2 + 1;\n    }\n    for (j = y1 - 1; j <= y2 + 1; j++) {\n      if (b[x1 - 1][j]) x3 = x1 - 1;\n      if (b[x2 + 1][j]) x4 = x2 + 1;\n    }\n    x1 = x3;\n    x2 = x4;\n    y1 = y3;\n    y2 = y4;\n    if (!flag) break;\n    for (i = x1; i <= x2; i++) {\n      for (j = x1; j <= x2; j++) {\n        a[i][j] += b[i][j];\n        b[i][j] = 0;\n      }\n    }\n  }\n  int iQ;\n  for (iQ = 0; iQ < Q; iQ++) {\n    int x, y;\n    scanf(\"%d %d\", &x, &y);\n    x += st;\n    y += st;\n    if ((x < x1) || (x > x2) || (y < y1) || (y > y2))\n      printf(\"0\\n\");\n    else\n      printf(\"%d\\n\", a[x][y]);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1000;\nint dx[4] = {1, -1, 0, 0}, dy[4] = {0, 0, 1, -1};\nstruct node {\n  int x, y;\n  node() {}\n  node(int a, int b) {\n    x = a;\n    y = b;\n  }\n  bool operator<(const node &a) const {\n    return x < a.x || (x == a.x && y < a.y);\n  }\n} a[100010];\nint vis[2000][2000];\nbool inq[2000][2000];\nqueue<node> q;\nint main() {\n  int n, t;\n  scanf(\"%d%d\", &n, &t);\n  for (int i = 1; i <= t; i++) scanf(\"%d%d\", &a[i].x, &a[i].y);\n  node st = node(0, 0);\n  vis[N][N] = n;\n  inq[N][N] = 1;\n  q.push(st);\n  while (!q.empty()) {\n    node temp = q.front();\n    q.pop();\n    inq[temp.x + N][temp.y + N] = 0;\n    int now = vis[temp.x + N][temp.y + N];\n    for (int i = 0; i < 4; i++) {\n      int tx = temp.x + dx[i], ty = temp.y + dy[i];\n      node hh = node(tx, ty);\n      vis[tx + N][ty + N] += now / 4;\n      if (vis[tx + N][ty + N] >= 4 && !inq[tx + N][ty + N]) {\n        q.push(hh);\n        inq[tx + N][ty + N] = 1;\n      }\n    }\n    vis[temp.x + N][temp.y + N] = now % 4;\n  }\n  for (int i = 1; i <= t; i++) {\n    if (abs(a[i].x) >= N || abs(a[i].y) >= N)\n      puts(\"0\");\n    else\n      printf(\"%d\\n\", vis[a[i].x + N][a[i].y + N]);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.StringTokenizer;\n\npublic class ProblemB {\n    public static void main(String[] args) throws Exception {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        StringTokenizer st = new StringTokenizer(br.readLine());\n        int n = Integer.parseInt(st.nextToken());\n        int t = Integer.parseInt(st.nextToken());\n        int SZ = 70;\n        int[][] cur = new int[SZ+1][SZ+1];\n        int[][] next = new int[SZ+1][SZ+1];\n        cur[0][0] = n;\n        boolean upd = true;\n        int max = 0;\n        while (upd) {\n            upd = false;\n            for (int i=0; i<=max; i++) for (int j=0; j<=max; j++)\n                next[i][j] = cur[i][j];\n            for (int i=0; i<=max; i++) for (int j=0; j<=max; j++)\n                if (cur[i][j] >= 4) {\n                    next[i][j] -= 4;\n                    if (i > 1) next[i-1][j]++; else if (i == 1) next[i-1][j] += 2;\n                    next[i+1][j]++;\n                    if (j > 1) next[i][j-1]++; else if (j == 1) next[i][j-1] += 2;\n                    next[i][j+1]++;\n                    upd = true;\n                    if (i == max || j == max) max++;\n                }\n            for (int i=0; i<=max; i++) for (int j=0; j<=max; j++)\n                cur[i][j] = next[i][j];\n        }\n        StringBuilder ans = new StringBuilder();\n        for (int x = 0; x < t; x++) {\n            st = new StringTokenizer(br.readLine());\n            int a = Integer.parseInt(st.nextToken());\n            int b = Integer.parseInt(st.nextToken());\n            a = Math.abs(a); b = Math.abs(b);\n            if (a > SZ || b > SZ) {\n                ans.append(0).append(\"\\n\");\n            } else {\n                ans.append(cur[a][b]).append(\"\\n\");\n            }\n        }\n        br.close();\n        System.out.println(ans);\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <class T>\nT abs(T x) {\n  return x > 0 ? x : -x;\n}\nint m;\nint n;\nshort col[2][2048][2048];\nchar was[2048][2048];\nint dx[4] = {1, 0, -1, 0};\nint dy[4] = {0, 1, 0, -1};\nint cm;\npair<int, int> v[1000000];\nint main() {\n  int mx = 1024, my = 1024;\n  int t;\n  cin >> n >> t;\n  v[cm++] = make_pair(mx, my);\n  col[0][mx][my] = n;\n  was[mx][my] = 1;\n  int ct = 0;\n  while (1) {\n    int o = cm;\n    int ff = 0;\n    for (int i = 0; i < (o); i++) {\n      int cx = v[i].first;\n      int cy = v[i].second;\n      col[1 ^ ct][cx][cy] = 0;\n    }\n    for (int i = 0; i < (o); i++) {\n      int cx = v[i].first;\n      int cy = v[i].second;\n      int o = col[ct][cx][cy];\n      int f = o >= 4;\n      if (f) {\n        int dd = o / 4;\n        o %= 4;\n        ff += f;\n        for (int j = 0; j < (4); j++) {\n          int nx = cx + dx[j];\n          int ny = cy + dy[j];\n          if (nx < mx || ny < my) continue;\n          if (!was[nx][ny]) {\n            v[cm++] = make_pair(nx, ny);\n            was[nx][ny] = 1;\n          }\n          if (nx == mx && cx > mx || ny == my && cy > my)\n            col[ct ^ 1][nx][ny] += 2 * dd;\n          else\n            col[ct ^ 1][nx][ny] += dd;\n        }\n      }\n      col[1 ^ ct][cx][cy] += o;\n    }\n    ct ^= 1;\n    if (!ff) break;\n  }\n  for (int i = 0; i < (t); i++) {\n    int x, y;\n    scanf(\"%d%d\", &x, &y);\n    x = abs(x);\n    y = abs(y);\n    if (abs(x) >= 1024 || abs(y) >= 1024) {\n      cout << 0 << '\\n';\n    } else\n      cout << col[ct][x + 1024][y + 1024] << '\\n';\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, t;\nint a[2000 + 5][2000 + 5];\nbool c[2000 + 5][2000 + 5];\nint dx[] = {0, 0, -1, 1};\nint dy[] = {1, -1, 0, 0};\nvoid ini() {\n  for (int i = 0; i < 2000; i++)\n    for (int j = 0; j < 2000; j++) a[i][j] = c[i][j] = 0;\n  a[500][500] = n;\n  queue<pair<int, int> > q;\n  q.push(make_pair(500, 500));\n  while (!q.empty()) {\n    pair<int, int> u = q.front();\n    q.pop();\n    c[u.first][u.second] = 0;\n    int k = a[u.first][u.second] / 4;\n    for (int i = 0; i < 4; i++) {\n      int x = u.first + dx[i];\n      int y = u.second + dy[i];\n      a[x][y] += k;\n      if (!c[x][y] && a[x][y] > 3) {\n        q.push(make_pair(x, y));\n        c[x][y] = 1;\n      }\n    }\n    a[u.first][u.second] %= 4;\n  }\n}\nint main() {\n  cin >> n >> t;\n  ini();\n  while (t--) {\n    long long x, y;\n    cin >> x >> y;\n    if (abs(x) > 500 || abs(y) > 500)\n      cout << 0 << endl;\n    else\n      cout << a[x + 500][y + 500] << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long double pi = acos(-1);\nconst int n_ = 1e5 + 5;\nint dx[] = {0, 0, 1, -1}, dy[] = {-1, 1, 0, 0};\nint f[5003][5003], n, vis[5003][5003];\nqueue<pair<int, int>> q;\nvector<pair<int, int>> v;\nint main() {\n  scanf(\"%d\", &n);\n  f[2500][2500] = n;\n  if (n > 3) q.push({2500, 2500});\n  int nx, ny;\n  while (q.size()) {\n    pair<int, int> i = q.front();\n    q.pop();\n    vis[i.first][i.second] = 0;\n    int d = f[i.first][i.second] >> 2;\n    f[i.first][i.second] &= 3;\n    for (int j = 0; j < 4; j++) {\n      nx = i.first + dx[j];\n      ny = i.second + dy[j];\n      f[nx][ny] += d;\n      if (f[nx][ny] > 3 && !vis[nx][ny]) {\n        vis[nx][ny] = 1;\n        q.push({nx, ny});\n      }\n    }\n  }\n  int t, u, v;\n  scanf(\"%d\", &t);\n  while (t--) {\n    scanf(\"%d %d\", &u, &v);\n    u += 2500;\n    v += 2500;\n    if (u > 5000 || v > 5000 || v < 0 || u < 0)\n      puts(\"0\");\n    else\n      printf(\"%d\\n\", f[u][v]);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nqueue<pair<int, int> > q;\nint arr[200][200];\nint add[200][200];\nint dy[4] = {0, 0, 1, -1};\nint dx[4] = {1, -1, 0, 0};\nint main() {\n  int n, m;\n  cin >> n >> m;\n  arr[100][100] = n;\n  q.push({100, 100});\n  bool good = true;\n  while (good) {\n    good = false;\n    memset(add, 0, sizeof(add));\n    while (!q.empty()) {\n      int y = q.front().first;\n      int x = q.front().second;\n      q.pop();\n      for (int k = 0; k < 4; k++) {\n        int nx = x + dx[k];\n        int ny = y + dy[k];\n        add[ny][nx] += arr[y][x] / 4;\n      }\n    }\n    for (int i = 0; i < 200; i++)\n      for (int j = 0; j < 200; j++) {\n        arr[i][j] %= 4;\n        arr[i][j] += add[i][j];\n        if (arr[i][j] >= 4) {\n          good = true;\n          q.push({i, j});\n        }\n      }\n  }\n  for (int i = 0; i < m; i++) {\n    int x, y;\n    cin >> x >> y;\n    x += 100;\n    y += 100;\n    if (x >= 0 && x < 200 && y >= 0 && y < 200) {\n      cout << arr[y][x] << \"\\n\";\n    } else {\n      cout << 0 << \"\\n\";\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedWriter;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStreamWriter;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.InputMismatchException;\n\n\npublic class TaskB implements Runnable {\n\n\tprivate static final int MAXN = 68;\n\t\n\tprivate int[] qSize;\n\t\n\tprivate int[][] qx;\n\tprivate int[][] qy;\n\t\n\tprivate static final int[] DX = {0, 0, -1, 1};\n\tprivate static final int[] DY = {-1, 1, 0, 0};\n\t\n\tprivate int timer;\n\t\n\tprivate void add(int id, int x, int y) {\n\t\tif (field[x][y] >= 4 && last[x][y] < timer) {\n\t\t\tlast[x][y] = timer;\n\t\t\tint size = qSize[id]++;\n\t\t\tqx[id][size] = x;\n\t\t\tqy[id][size] = y;\n\t\t}\n\t}\n\t\n\tprivate void solve() {\n\t\tlong start = System.currentTimeMillis();\n\t\tqx = new int[2][MAXN*MAXN];\n\t\tqy = new int[2][MAXN*MAXN];\n\t\tqSize = new int[2];\n\t\tlast = new int[MAXN][MAXN];\n\t\ttimer = 0;\n\t\tfor (int[] b: last) {\n\t\t\tArrays.fill(b, -1);\n\t\t}\n\t\tfield = new int[MAXN][MAXN];\n\t\tfor (int[] b: field) {\n\t\t\tArrays.fill(b, 0);\n\t\t}\n\t\tint cur = 0;\n\t\tfield[0][0] = n;\n\t\tqSize[0] = 0;\n\t\tadd(0, 0, 0);\t\n\t\twhile (qSize[cur] > 0) {\n\t\t\tint next = cur^1;\n\t\t\tqSize[next] = 0;\n\t\t\t++timer;\n\t\t\tfor (int i = 0; i < qSize[cur]; ++i) {\n\t\t\t\tint x = qx[cur][i];\n\t\t\t\tint y = qy[cur][i];\n\t\t\t\tint w = field[x][y] >> 2;\n\t\t\t\tfield[x][y] &= 3;\n\t\t\t\tfor (int dir = 0; dir < 4; ++dir) {\n\t\t\t\t\tint cx = x + DX[dir];\n\t\t\t\t\tint cy = y + DY[dir];\n\t\t\t\t\tif (cx >= 0 && cy >= 0) {\n\t\t\t\t\t\tfield[cx][cy] += w;\n\t\t\t\t\t\tif ((cx == 0 && cy == 0) || ((cx == 0 || cy == 0) && (x > 0 && y > 0))) {\n\t\t\t\t\t\t\tfield[cx][cy] += w;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (int i = 0; i < qSize[cur]; ++i) {\n\t\t\t\tint x = qx[cur][i];\n\t\t\t\tint y = qy[cur][i];\n\t\t\t\tfor (int dir = 0; dir < 4; ++dir) {\t\t\t\t\t\n\t\t\t\t\tint cx = x + DX[dir], cy = y + DY[dir]; \n\t\t\t\t\tif (cx >= 0 && cy >= 0) add(next, cx, cy);\t\t\t\t\n\t\t\t\t}\t\t\t\n\t\t\t}\n\t\t\tcur = next;\n\t\t}\n\t\tint t = in.readInt();\n\t\twhile (t-- > 0) {\n\t\t\tint x = in.readInt();\n\t\t\tint y = in.readInt();\n\t\t\tif (x < 0) {\n\t\t\t\tx = -x;\n\t\t\t}\n\t\t\tif (y < 0) {\n\t\t\t\ty = -y;\n\t\t\t}\n\t\t\tout.println(x < MAXN && y < MAXN ? field[x][y] : 0);\n\t\t}\n\t}\n\t\n\tprivate void readData() {\n\t\tn = in.readInt();\n\t}\n\t\n\tprivate int n;\n\tprivate int[][] field;\n\tprivate int[][] last;\n\t\n\tprivate void begin() {\n\t\tin = new InputReader(System.in);\n\t\tout = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));\n\t}\n\t\n\tprivate void end() {\n\t\tout.flush();\n\t}\n\t\n\tprivate InputReader in;\n\tprivate PrintWriter out;\n\t\n\t@Override\n\tpublic void run() {\n\t\tbegin();\n\t\treadData();\n\t\tsolve();\t\t\n\t\tend();\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew TaskB().run();\n\t}\n\t\n\tprivate class InputReader {\n\n\t\tprivate InputStream stream;\n\t\tprivate byte[] buf = new byte[1024];\n\t\tprivate int curChar;\n\t\tprivate int numChars;\n\n\t\tpublic InputReader(InputStream stream) {\n\t\t\tthis.stream = stream;\n\t\t}\n\n\t\tpublic int read() {\n\t\t\tif (numChars == -1)\n\t\t\t\tthrow new InputMismatchException();\n\t\t\tif (curChar >= numChars) {\n\t\t\t\tcurChar = 0;\n\t\t\t\ttry {\n\t\t\t\t\tnumChars = stream.read(buf);\n\t\t\t\t} \n\t\t\t\tcatch (IOException e) {\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t}\n\t\t\t\tif (numChars <= 0)\n\t\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn buf[curChar++];\n\t\t}\n\n\t\tpublic int readInt() {\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c)) {\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tint sgn = 1;\n\t\t\tif (c == '-') {\n\t\t\t\tsgn = -1;\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tint res = 0;\n\t\t\tdo {\n\t\t\t\tres *= 10;\n\t\t\t\tres += c - '0';\n\t\t\t\tc = read();\n\t\t\t} \n\t\t\twhile (!isSpaceChar(c));\n\t\t\treturn res * sgn;\n\t\t}\n\n\t\tpublic boolean isSpaceChar(int c) {\n\t\t\treturn isWhitespace(c);\n\t\t}\n\n\t\tpublic boolean isWhitespace(int c) {\n\t\t\treturn c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n\t\t}\n\t}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int inf = 0x3f3f3f3f;\ninline long long read() {\n  long long x = 0, f = 1;\n  char ch = getchar();\n  while (ch < '0' || ch > '9') {\n    if (ch == '-') f = -1;\n    ch = getchar();\n  }\n  while (ch >= '0' && ch <= '9') {\n    x = x * 10 + ch - '0';\n    ch = getchar();\n  }\n  return x * f;\n}\nint a[1000][1000];\nvoid solve(int x, int y, int n) {\n  a[x][y] += n;\n  n = a[x][y];\n  if (a[x][y] < 4)\n    return;\n  else {\n    a[x][y] = n % 4;\n    solve(x + 1, y, n / 4);\n    solve(x, y + 1, n / 4);\n    solve(x, y - 1, n / 4);\n    solve(x - 1, y, n / 4);\n  }\n}\nint main() {\n  int n = read(), q = read();\n  solve(500, 500, n);\n  for (int i = 0; i < q; i++) {\n    int x = read(), y = read();\n    if (x > 100 || x < -100 || y > 100 || y < -100)\n      cout << \"0\" << endl;\n    else\n      printf(\"%d\\n\", a[x + 500][y + 500]);\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int inf = 0x3f3f3f3f;\nconst long long infll = 0x3f3f3f3f3f3f3f3fLL;\ninline long long read() {\n  long long x = 0, f = 1;\n  char ch = getchar();\n  while (ch < '0' || ch > '9') {\n    if (ch == '-') f = -1;\n    ch = getchar();\n  }\n  while (ch >= '0' && ch <= '9') {\n    x = x * 10 + ch - '0';\n    ch = getchar();\n  }\n  return x * f;\n}\nint a[1000][1000];\nvoid solve(int x, int y) {\n  if (a[x][y] < 3)\n    a[x][y]++;\n  else {\n    a[x][y] = 0;\n    solve(x + 1, y);\n    solve(x, y + 1);\n    solve(x, y - 1);\n    solve(x - 1, y);\n  }\n}\nint main() {\n  int n = read(), q = read();\n  for (int i = 0; i < n; i++) solve(500, 500);\n  for (int i = 0; i < q; i++) {\n    int x = read(), y = read();\n    if (x > 100 || x < -100 || y > 100 || y < -100)\n      cout << \"0\" << endl;\n    else\n      printf(\"%d\\n\", a[x + 500][y + 500]);\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class B {\n\n    static class Assert {\n        static void check(boolean e) {\n            if (!e) {\n                throw new Error();\n            }\n        }\n    }\n\n    static class Scanner {\n        StreamTokenizer in;\n        Scanner(InputStream is) {\n            in = new StreamTokenizer(new BufferedReader(new InputStreamReader(is)));\n            in.resetSyntax();\n            in.whitespaceChars(0, 32);\n            in.wordChars(33, 255);\n        }\n\n        String next() {\n            try {\n                in.nextToken();\n                Assert.check(in.ttype == in.TT_WORD);\n                return in.sval;\n            } catch (IOException e) {\n                throw new Error(e);\n            }\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n    }\n\n    Scanner in;\n    PrintWriter out;\n\n    void solve() {\n        int a[][] = new int[151][151];\n        int b[][] = new int[151][151];\n        a[75][75] = in.nextInt();\n        int count = 0;\n        while (true) {\n            boolean found = false;\n            for (int i = 76; i < 150; i++) {\n                for (int j = 76; j < i; j++) {\n                    b[i][j] = a[i][j];\n                    if (b[i][j] >= 4) {\n                        b[i][j] -= 4;\n                        found = true;\n                    }\n                    if (a[i + 1][j] >= 4) {\n                        b[i][j]++;\n                    }\n                    if (a[i - 1][j] >= 4) {\n                        b[i][j]++;\n                    }\n                    if (a[i][j - 1] >= 4) {\n                        b[i][j]++;\n                    }\n                    if (a[i][j + 1] >= 4) {\n                        b[i][j]++;\n                    }\n                }\n            }\n            for (int i = 76; i < 150; i++) {\n                for (int j = 75; j < 76; j++) {\n                    b[i][j] = a[i][j];\n                    if (b[i][j] >= 4) {\n                        b[i][j] -= 4;\n                        found = true;\n                    }\n                    if (a[i + 1][j] >= 4) {\n                        b[i][j]++;\n                    }\n                    if (a[i - 1][j] >= 4) {\n                        b[i][j]++;\n                    }\n                    if (a[i][j + 1] >= 4) {\n                        b[i][j] += 2;\n                    }\n                }\n            }\n            for (int i = 75; i < 76; i++) {\n                for (int j = 75; j < 76; j++) {\n                    b[i][j] = a[i][j];\n                    if (b[i][j] >= 4) {\n                        b[i][j] -= 4;\n                        found = true;\n                    }\n                    if (a[i + 1][j] >= 4) {\n                        b[i][j] += 4;\n                    }\n                }\n            }\n            for (int i = 76; i < 150; i++) {\n                for (int j = i; j < i + 1; j++) {\n                    b[i][j] = a[i][j];\n                    if (b[i][j] >= 4) {\n                        b[i][j] -= 4;\n                        found = true;\n                    }\n                    if (a[i + 1][j] >= 4) {\n                        b[i][j] += 2;\n                    }\n                    if (a[i][j - 1] >= 4) {\n                        b[i][j] += 2;\n                    }\n                }\n            }\n            if (!found) {\n                break;\n            }\n            int t[][] = a;\n            a = b;\n            b = t;\n        }\n        for (int i = 75; i < 150; i++) {\n            for (int j = i + 1; j < 150; j++) {\n                a[i][j] = a[j][i];\n            }\n        }\n        for (int i = 75; i < 150; i++) {\n            for (int j = 1; j < 75; j++) {\n                a[i][j] = a[i][150 - j];\n            }\n        }\n        for (int i = 1; i < 75; i++) {\n            for (int j = 1; j < 150; j++) {\n                a[i][j] = a[150 - i][j];\n            }\n        }\n        /*\n        for (int i = 1; i < 150; i++) {\n            for (int j = 1; j < 150; j++) {\n                out.print(a[i][j]);\n            }\n            out.println();\n        }\n        */\n        int nQueries = in.nextInt();\n        for (int i = 0; i < nQueries; i++) {\n            int x = in.nextInt();\n            int y = in.nextInt();\n            x += 75;\n            y += 75;\n            if (0 <= x && x < 151 && 0 <= y && y < 151) {\n                out.println(a[x][y]);\n            } else {\n                out.println(0);\n            }\n        }\n    }\n\n    void run() {\n        in = new Scanner(System.in);\n        out = new PrintWriter(System.out);\n        try {\n            solve();\n        } finally {\n            out.close();\n        }\n    }\n\n    public static void main(String args[]) {\n        new B().run();\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint arr[400][400];\nvoid f(int x, int y) {\n  if (arr[x][y] < 4) return;\n  arr[x][y + 1] += arr[x][y] / 4;\n  arr[x][y - 1] += arr[x][y] / 4;\n  arr[x + 1][y] += arr[x][y] / 4;\n  arr[x - 1][y] += arr[x][y] / 4;\n  arr[x][y] %= 4;\n  f(x, y + 1);\n  f(x, y - 1);\n  f(x + 1, y);\n  f(x - 1, y);\n}\nint main() {\n  int n, t, i;\n  scanf(\"%d %d\", &n, &t);\n  arr[200][200] = n;\n  f(200, 200);\n  for (i = 0; i < t; i++) {\n    int x, y;\n    scanf(\"%d %d\", &x, &y);\n    if (x + 200 > 400 || y + 200 > 400 || x + 200 < 0 || y + 200 < 0)\n      printf(\"0\\n\");\n    else\n      printf(\"%d\\n\", arr[x + 200][y + 200]);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\nusing pii = pair<int, int>;\nusing vi = vector<int>;\nconst int N = 160;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  int n, t;\n  cin >> n >> t;\n  int cnt[N][N];\n  memset(cnt, 0, sizeof(cnt));\n  cnt[N / 2][N / 2] = n;\n  bool found = false;\n  do {\n    found = false;\n    for (int i = 0; i < N; i++) {\n      for (int j = 0; j < N; j++) {\n        if (cnt[i][j] >= 4) {\n          found = true;\n          int c = cnt[i][j];\n          cnt[i - 1][j] += c / 4;\n          cnt[i][j - 1] += c / 4;\n          cnt[i + 1][j] += c / 4;\n          cnt[i][j + 1] += c / 4;\n          cnt[i][j] = c % 4;\n        }\n      }\n    }\n  } while (found);\n  for (int i = 0; i < t; i++) {\n    int x, y;\n    cin >> x >> y;\n    x += N / 2, y += N / 2;\n    if (x < 0 || y < 0 || x >= N || y >= N) {\n      cout << 0 << '\\n';\n    } else {\n      cout << cnt[x][y] << '\\n';\n    }\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.io.BufferedWriter;\nimport java.io.Writer;\nimport java.io.OutputStreamWriter;\nimport java.util.InputMismatchException;\nimport java.io.IOException;\nimport java.io.InputStream;\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n *\n * @author Alex\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        OutputWriter out = new OutputWriter(outputStream);\n        TaskB solver = new TaskB();\n        solver.solve(1, in, out);\n        out.close();\n    }\n    static class TaskB {\n        int MAX = 65;\n        public void solve(int testNumber, InputReader in, OutputWriter out) {\n            int n = in.readInt(), queries = in.readInt();\n            int[][] tab = new int[MAX * 2][MAX * 2];\n            tab[MAX][MAX] = n;\n            while (true) {\n                boolean move = false;\n                for (int i = 0; i < tab.length; i++) {\n                    for (int j = 0; j < tab.length; j++) {\n                        while (tab[i][j] >= 4) {\n                            tab[i][j - 1]++;\n                            tab[i - 1][j]++;\n                            tab[i][j + 1]++;\n                            tab[i + 1][j]++;\n                            tab[i][j] -= 4;\n                            move = true;\n                        }\n                    }\n                }\n                if (!move) break;\n            }\n            for (int query = 0; query < queries; query++) {\n                int row = in.readInt(), col = in.readInt();\n                if (row + MAX >= 0 && col + MAX >= 0 && row < MAX && col < MAX)\n                    out.printLine(tab[row + MAX][col + MAX]);\n                else out.printLine(0);\n            }\n        }\n    }\n    static class OutputWriter {\n        private final PrintWriter writer;\n        public OutputWriter(OutputStream outputStream) {\n            writer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));\n        }\n        public OutputWriter(Writer writer) {\n            this.writer = new PrintWriter(writer);\n        }\n        public void close() {\n            writer.close();\n        }\n        public void printLine(int i) {\n            writer.println(i);\n        }\n    }\n    static class InputReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private InputReader.SpaceCharFilter filter;\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n        public int read() {\n            if (numChars == -1)\n                throw new InputMismatchException();\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (numChars <= 0)\n                    return -1;\n            }\n            return buf[curChar++];\n        }\n        public int readInt() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do {\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n        public boolean isSpaceChar(int c) {\n            if (filter != null)\n                return filter.isSpaceChar(c);\n            return isWhitespace(c);\n        }\n        public static boolean isWhitespace(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n        public interface SpaceCharFilter {\n            public boolean isSpaceChar(int ch);\n        }\n    }\n}\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int Asize = 1000;\nint A[Asize][Asize] = {{0}};\nvoid func(int x, int y) {\n  if (A[x][y] < 4) return;\n  int a = A[x][y] / 4;\n  A[x][y] %= 4;\n  A[x - 1][y] += a;\n  func(x - 1, y);\n  A[x][y - 1] += a;\n  func(x, y - 1);\n  A[x][y + 1] += a;\n  func(x, y + 1);\n  A[x + 1][y] += a;\n  func(x + 1, y);\n}\nint main(void) {\n  int t;\n  cin >> A[Asize / 2][Asize / 2] >> t;\n  func(Asize / 2, Asize / 2);\n  for (int i = 0; i < t; i++) {\n    int x, y;\n    cin >> x >> y;\n    if (x < -Asize / 2 || x > Asize / 2 || y < -Asize / 2 || y > Asize / 2)\n      cout << 0 << endl;\n    else\n      cout << A[Asize / 2 + x][Asize / 2 + y] << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint f[2 * 100 + 10][2 * 100 + 10];\nvector<pair<int, int> > v;\nvoid insert(int x, int y, int d) {\n  if ((f[x][y] < 4) && (f[x][y] + d >= 4)) v.push_back(make_pair(x, y));\n  f[x][y] += d;\n}\nint get(int x, int y) {\n  if (x < -100) return 0;\n  if (x >= 100) return 0;\n  if (y < -100) return 0;\n  if (y >= 100) return 0;\n  return f[x + 100][y + 100];\n}\nint d[4][2] = {{-1, 0}, {1, 0}, {0, 1}, {0, -1}};\nint main() {\n  int n, m;\n  while (scanf(\"%d %d \", &n, &m) != EOF) {\n    for (int i = 0; i < 2 * 100 + 10; ++i)\n      for (int j = 0; j < 2 * 100 + 10; ++j) f[i][j] = 0;\n    v.clear();\n    insert(100, 100, n);\n    for (int i = 0; i < v.size(); ++i) {\n      int x = v[i].first;\n      int y = v[i].second;\n      int s = f[x][y] / 4;\n      f[x][y] -= s * 4;\n      for (int j = 0; j < 4; ++j) insert(x + d[j][0], y + d[j][1], s);\n    }\n    for (int i = 0; i < m; ++i) {\n      int x, y;\n      scanf(\"%d %d \", &x, &y);\n      cout << get(x, y) << endl;\n    }\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MaxN = 50005, MaxSize = 205, offset = 102;\nconst int dx[] = {-1, 1, 0, 0};\nconst int dy[] = {0, 0, -1, 1};\nint qx[MaxN], qy[MaxN];\nint a[MaxSize][MaxSize];\nbool good(int x) { return 0 <= x && x < MaxSize; }\nint main() {\n  int n, t;\n  scanf(\"%d%d\", &n, &t);\n  for (int i = 1; i <= t; i++) scanf(\"%d%d\", qx + i, qy + i);\n  memset(a, 0, sizeof(a));\n  a[offset][offset] = n;\n  int maxLeft = offset, maxRight = offset;\n  int move = 0, cnt = 0;\n  while (true) {\n    cnt++;\n    bool up = false;\n    maxRight = offset + offset - maxLeft;\n    int nLeft = maxLeft;\n    for (int i = maxLeft - 1; i <= maxRight + 1; ++i) {\n      int j = maxLeft - 1;\n      if (((i + j) % 2) ^ move == 0) j++;\n      for (; j <= maxRight + 1; j += 2)\n        for (int k = 0; k < 4; k++) {\n          int nx = i + dx[k];\n          int ny = j + dy[k];\n          a[i][j] += a[nx][ny] / 4;\n          if (a[i][j] >= 4 && i == maxLeft - 1) {\n            nLeft = i;\n          }\n          up |= a[nx][ny] >= 4;\n        }\n    }\n    for (int i = maxLeft - 1; i <= maxRight + 1; ++i)\n      for (int j = maxLeft - 1; j <= maxRight + 1; ++j)\n        if (((i + j) % 2) ^ move == 0) a[i][j] %= 4;\n    maxLeft = nLeft;\n    move ^= 1;\n    if (!up) break;\n  }\n  for (int i = 1; i <= t; ++i)\n    if (abs(qx[i]) >= 100 || abs(qy[i]) >= 100)\n      printf(\"0\\n\");\n    else\n      printf(\"%d\\n\", a[qx[i] + offset][qy[i] + offset]);\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.LinkedList;\nimport java.util.Queue;\n\npublic class Ants {\n    static BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));\n    static PrintWriter printWriter = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));\n\n    public static void main(String[] args) throws IOException{\n    \tString[] inputString = bufferedReader.readLine().split(\" \");\n    \tint n = Integer.parseInt(inputString[0]);\n    \tint t = Integer.parseInt(inputString[1]);\n\n    \tint base = 70;\n    \tint[][] matrix = new int[2*base + 1][2*base + 1];\n    \tmatrix[base][base] = n;\n\n     while (true) {\n         boolean br = true;\n            for(int i = 0; i <= 2*base; i++) {\n                for(int j = 0; j <= 2*base; j++) {\n                    if (matrix[i][j] >= 4) {\n                        br = false;\n                        int addition = matrix[i][j] >> 2;\n                        matrix[i][j] &= 3;\n                        matrix[i+1][j] += addition;\n                        matrix[i-1][j] += addition;\n                        matrix[i][j+1] += addition;\n                        matrix[i][j-1] += addition;\n                    }\n                }\n            }\n\n         if(br) break;\n\n\n     }\n\n        for (int i = 0; i < t; i++) {\n            inputString = bufferedReader.readLine().split(\" \");\n            int xc = Integer.parseInt(inputString[0]);\n            int yc = Integer.parseInt(inputString[1]);\n\n            if(Math.abs(xc) <= base && Math.abs(yc) <= base) {\n                printWriter.println(matrix[xc+base][yc+base]);\n            }\n            else {\n                printWriter.println(0);\n            }\n        }\n\n        printWriter.flush();\n        printWriter.close();\n\n\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint A[1005][1005];\nint main() {\n  int antCount;\n  scanf(\"%d\", &antCount);\n  int L = 0;\n  A[500][500] = antCount;\n  while (1) {\n    int c = 0;\n    for (int x = 500 - L; x <= 500 + L; x++)\n      for (int y = 500 - L; y <= 500 + L; y++) {\n        if (A[x][y] >= 4) {\n          if (abs(x - 500) == L || abs(y - 500) == L) {\n            L++;\n          }\n          c = 1;\n          A[x - 1][y] += A[x][y] / 4;\n          A[x + 1][y] += A[x][y] / 4;\n          A[x][y - 1] += A[x][y] / 4;\n          A[x][y + 1] += A[x][y] / 4;\n          A[x][y] %= 4;\n        }\n      }\n    if (!c) break;\n  }\n  int Q;\n  scanf(\"%d\", &Q);\n  while (Q--) {\n    int x, y;\n    scanf(\"%d%d\", &x, &y);\n    if (abs(x) > L || abs(y) > L) {\n      printf(\"0\\n\");\n    } else {\n      printf(\"%d\\n\", A[x + 500][y + 500]);\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 500 + 3;\nconst int p = 200;\nint a[2][N][N], n, Q, cur = 0, dir[4][2] = {{-1, 0}, {0, -1}, {0, 1}, {1, 0}};\nbool vis[N][N];\nbool in(int x, int y) { return 0 <= x && x <= 400 && 0 <= y && y <= 400; }\nstruct note {\n  int x, y, v;\n  note() {}\n  note(int _x, int _y, int _v) {\n    x = _x;\n    y = _y;\n    v = _v;\n  }\n};\nint main() {\n  scanf(\"%d%d\", &n, &Q);\n  memset(a, 0, sizeof a);\n  a[cur][p][p] = n;\n  queue<note> q;\n  queue<pair<int, int> > qq;\n  if (n >= 4) qq.push(make_pair(p, p));\n  while (1) {\n    bool f = 0;\n    while (!qq.empty()) {\n      int i = qq.front().first, j = qq.front().second;\n      qq.pop();\n      f = 1;\n      a[cur ^ 1][i][j] = a[cur][i][j] % 4;\n      q.push(note(i, j, a[cur][i][j] / 4));\n      a[cur][i][j] %= 4;\n      vis[i][j] = 0;\n    }\n    if (!f) break;\n    cur ^= 1;\n    while (!q.empty()) {\n      note u = q.front();\n      q.pop();\n      int nx, ny;\n      for (int i = 0; i < 4; i++) {\n        nx = u.x + dir[i][0];\n        ny = u.y + dir[i][1];\n        if (!in(nx, ny)) continue;\n        a[cur][nx][ny] += u.v;\n        a[cur ^ 1][nx][ny] = a[cur][nx][ny];\n        if (a[cur][nx][ny] >= 4) {\n          if (!vis[nx][ny]) {\n            vis[nx][ny] = 1;\n            qq.push(make_pair(nx, ny));\n          }\n        }\n      }\n    }\n  }\n  for (int i = 0; i < Q; i++) {\n    int x, y;\n    scanf(\"%d%d\", &x, &y);\n    x += p, y += p;\n    if (!in(x, y))\n      printf(\"0\\n\");\n    else\n      printf(\"%d\\n\", a[cur][x][y]);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <typename T>\nT gcd(T a, T b) {\n  if (a == 0) return b;\n  return gcd(b % a, a);\n}\ntemplate <typename T>\nT pow(T a, T b, long long m) {\n  T ans = 1;\n  while (b > 0) {\n    if (b % 2 == 1) ans = ((ans % m) * (a % m)) % m;\n    b /= 2;\n    a = ((a % m) * (a % m)) % m;\n  }\n  return ans % m;\n}\nint dr[] = {-1, 1, 0, 0};\nint dc[] = {0, 0, 1, -1};\nint m[3000][3000];\nvoid process(int n) {\n  queue<pair<int, int> > q;\n  q.push(make_pair(1500, 1500));\n  m[1500][1500] = n;\n  while (!q.empty()) {\n    int x = q.front().first;\n    int y = q.front().second;\n    int cnt = m[x][y];\n    if (cnt < 4) {\n      m[x][y] = cnt;\n      q.pop();\n      continue;\n    } else {\n      m[x][y] = cnt % 4;\n      q.pop();\n      for (int i = 0; i < 4; i++) {\n        q.push(make_pair(x + dr[i], y + dc[i]));\n        m[x + dr[i]][y + dc[i]] += cnt / 4;\n      }\n    }\n  }\n}\nint main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  ;\n  int n, t;\n  cin >> n >> t;\n  process(n);\n  int a, b;\n  for (int i = 0; i < t; i++) {\n    cin >> a >> b;\n    if (a + 1500 >= 3000 || b + 1500 >= 3000 || a + 1500 < 0 || b + 1500 < 0) {\n      cout << \"0\"\n           << \"\\n\";\n    } else {\n      cout << m[a + 1500][b + 1500] << \"\\n\";\n    }\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.*;\n\n\npublic class B {\t\n\tBufferedReader reader;\n    StringTokenizer tokenizer;\n    PrintWriter out;\n    \n    \n    int[] dx = new int[]{-1, 1, 0, 0};\n    int[] dy = new int[]{0, 0, -1, 1};\n    \n    public void go(int[][] map, int i, int j){\n    \tint inc = map[i][j] >> 2;\n    \tif( inc == 0) return;\n    \t\n    \tmap[i][j] &= 3;    \t\n//    \tfor(int k = 0; k < 4; k++){\n//\t\t\tmap[i+dx[k]][j+dy[k]] += inc;\n//\t\t\tgo(map, i+dx[k], j+dy[k]);\n//\t\t}\n    \t\n    \tmap[i-1][j] += inc;\n\t\tgo(map, i-1, j);\n\t\tmap[i+1][j] += inc;\n\t\tgo(map, i+1, j);\n\t\tmap[i][j-1] += inc;\n\t\tgo(map, i, j-1);\n\t\tmap[i][j+1] += inc;\n\t\tgo(map, i, j+1);\n    \t\n    }\n    \n\tpublic void solve() throws IOException {\t\t\t\t\n\t\tint N = nextInt();\n\t\t\n\t\tint MAX = 200;\n\t\tint CENTER = MAX/2;\n\t\t\n\t\tint[][] map = new int[MAX][MAX];\n\t\tmap[CENTER][CENTER] = N;\n\t\t\n\t\tgo(map, CENTER, CENTER);\n//\t\tQueue<int[]> queue = new LinkedList<int[]>();\n//\t\tqueue.add( new int[]{CENTER, CENTER});\n//\t\twhile(!queue.isEmpty()){\n//\t\t\tint[] cur = queue.poll();\n//\t\t\tfor(int k = 0; k < 4; k++){\n//\t\t\t\tmap[cur[0]+dx[k]][cur[1]+dy[k]] += map[cur[0]][cur[1]]/4;\n//\t\t\t\t\n//\t\t\t\tif( map[cur[0]+dx[k]][cur[1]+dy[k]] >= 4 )\n//\t\t\t\t\tqueue.add( new int[]{ cur[0]+dx[k], cur[1]+dy[k] } );\n//\t\t\t}\n//\t\t\tmap[cur[0]][cur[1]] %= 4;\n//\t\t}\n\t\t\n\t\tint A = nextInt();\n\t\tfor(int i = 0; i < A; i++){\n\t\t\tint x = nextInt() + CENTER;\n\t\t\tint y = nextInt() + CENTER;\n\t\t\t\n\t\t\tif( x < 0 || x >= MAX || y < 0 || y >= MAX) \n\t\t\t\tout.println(0);\n\t\t\telse\n\t\t\t\tout.println( map[x][y] );\n\t\t}\n\t}\n\t\n\t/**\n\t * @param args\n\t */\n\tpublic static void main(String[] args) {\n\t\tnew B().run();\n\t}\n\t\n\tpublic void run() {\n        try {\n            reader = new BufferedReader(new InputStreamReader(System.in));\n            tokenizer = null;\n            out = new PrintWriter(System.out);\n            solve();\n            reader.close();\n            out.close();\n        } catch (Exception e) {\n            e.printStackTrace();\n            System.exit(1);\n        }\n    }\n\n    int nextInt() throws IOException {\n        return Integer.parseInt(nextToken());\n    }\n\n    long nextLong() throws IOException {\n        return Long.parseLong(nextToken());\n    }\n\n    double nextDouble() throws IOException {\n        return Double.parseDouble(nextToken());\n    }\n\n    String nextToken() throws IOException {\n        while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n            tokenizer = new StringTokenizer(reader.readLine());\n        }\n        return tokenizer.nextToken();\n    }\n\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class Main {\n\n    public Scanner sc;\n    \n    static final int SIZE = 65;\n    \n    int[] dx = { 1, -1, 0, 0 };\n    int[] dy = { 0, 0, 1, -1 };\n    \n    public void run() {\n        int n = sc.nextInt();\n        int t = sc.nextInt();\n        long[][] f = new long[SIZE][SIZE];\n        \n        f[0][0] = n;\n        \n        boolean move = true;\n        while (move) {\n            move = false;\n            for (int y = 0; y < SIZE; y++) {\n                for (int x = 0; x < SIZE; x++) {\n                    long r = f[y][x] / 4;\n                    if (r == 0) continue;\n                    f[y][x] %= 4;\n                    move = true;\n                    for (int d = 0; d < 4; d++) {\n                        int px = x + dx[d], py = y + dy[d];\n                        if (px < 0 || py < 0) continue;\n                        if ((px == 0 && py == 0) || (x > 0 && px == 0) || (y > 0 && py == 0)) f[py][px] += r*2;\n                        else f[py][px] += r;\n                    }\n                }\n            }\n        }\n        \n        for (int i = 0; i < t; i++) {\n            int x = sc.nextInt();\n            int y = sc.nextInt();\n            int xx = x < 0 ? -x : x;\n            int yy = y < 0 ? -y : y;\n            if (xx >= SIZE || yy >= SIZE) {\n                System.out.println(0);\n            }\n            else {\n                System.out.println(f[yy][xx]);\n            }\n        }\n    }\n    \n    public static void main(String[] args) {\n        Main main = new Main();\n        try { main.sc = new Scanner(new FileInputStream(\"test.in\")); }\n        catch (FileNotFoundException e) { main.sc = new Scanner(System.in); }\n        main.run();\n    }\n\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[140][140];\nint x[140 * 140], y[140 * 140], c[140 * 140], ptr = 0;\nint xx[100000], yy[100000], pptr;\nbool v[140][140], v2[140][140];\nint b[140][140];\nint maxX;\nvoid construct() {\n  pptr = 0;\n  xx[pptr] = 70;\n  yy[pptr++] = 70;\n  memset(v, 0, sizeof(v));\n  while (1) {\n    int ch = 0;\n    ptr = 0;\n    for (int pp = 0; pp < pptr; pp++) {\n      int i = xx[pp], j = yy[pp];\n      if (a[i][j] >= 4) {\n        ch = 1;\n        if (v[i][j] == 0) {\n          b[i][j] = 4;\n          x[ptr] = i;\n          y[ptr++] = j;\n          v[i][j] = 1;\n        } else\n          b[i][j] += 4;\n        i++;\n        if (v[i][j] == 0) {\n          b[i][j] = -1;\n          x[ptr] = i;\n          y[ptr++] = j;\n          v[i][j] = 1;\n        } else\n          b[i][j] += -1;\n        i -= 2;\n        if (v[i][j] == 0) {\n          b[i][j] = -1;\n          x[ptr] = i;\n          y[ptr++] = j;\n          v[i][j] = 1;\n        } else\n          b[i][j] += -1;\n        i++;\n        j++;\n        if (v[i][j] == 0) {\n          b[i][j] = -1;\n          x[ptr] = i;\n          y[ptr++] = j;\n          v[i][j] = 1;\n        } else\n          b[i][j] += -1;\n        j -= 2;\n        if (v[i][j] == 0) {\n          b[i][j] = -1;\n          x[ptr] = i;\n          y[ptr++] = j;\n          v[i][j] = 1;\n        } else\n          b[i][j] += -1;\n      }\n    }\n    pptr = 0;\n    for (int i = 0; i < ptr; i++) {\n      maxX = max(x[i], maxX);\n      a[x[i]][y[i]] -= b[x[i]][y[i]];\n      if (a[x[i]][y[i]] >= 4) xx[pptr] = x[i], yy[pptr++] = y[i];\n      v[x[i]][y[i]] = 0;\n    }\n    if (ch == 0) break;\n  }\n}\nint main() {\n  int n, t;\n  cin >> n >> t;\n  a[70][70] = n;\n  construct();\n  while (t--) {\n    int x, y;\n    cin >> x >> y;\n    if (x + 70 < 0 || x + 70 >= 140 || y + 70 >= 140 || y + 70 < 0)\n      cout << 0 << endl;\n    else\n      cout << a[x + 70][y + 70] << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 1010;\nint a[maxn][maxn];\nint n, q, x, y;\ninline void solve(int x, int y) {\n  if (a[x][y] < 3)\n    a[x][y]++;\n  else {\n    a[x][y] = 0;\n    solve(x + 1, y);\n    solve(x, y + 1);\n    solve(x, y - 1);\n    solve(x - 1, y);\n  }\n}\nint main() {\n  scanf(\"%d%d\", &n, &q);\n  for (register int i = 0; i < n; i++) solve(500, 500);\n  for (register int i = 0; i < q; i++) {\n    scanf(\"%d%d\", &x, &y);\n    if (x > 100 || x < -100 || y > 100 || y < -100)\n      printf(\"0\\n\");\n    else\n      printf(\"%d\\n\", a[x + 500][y + 500]);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint cnt[300][300], vst[300][300], flag, q[1000000];\nint dx[] = {1, 0, -1, 0};\nint dy[] = {0, 1, 0, -1};\nint main() {\n  int N, z, T, qb, qf, x, y, i, xx, yy;\n  while (scanf(\"%d%d\", &N, &T) == 2) {\n    memset(cnt, 0, sizeof(cnt));\n    cnt[150][150] = N;\n    qb = qf = 0;\n    if (N >= 4) {\n      q[qb++] = 150;\n      q[qb++] = 150;\n    }\n    flag++;\n    while (qf != qb) {\n      x = q[qf++];\n      if (qf == 1000000) qf = 0;\n      y = q[qf++];\n      if (qf == 1000000) qf = 0;\n      vst[x][y] = 0;\n      cnt[x][y] -= 4;\n      for (i = 0; i < 4; i++) {\n        xx = x + dx[i];\n        yy = y + dy[i];\n        cnt[xx][yy]++;\n        if (cnt[xx][yy] >= 4) {\n          if (vst[xx][yy] != flag) {\n            vst[xx][yy] = flag;\n            q[qb++] = xx;\n            if (qb == 1000000) qb = 0;\n            q[qb++] = yy;\n            if (qb == 1000000) qb = 0;\n          }\n        }\n      }\n      if (cnt[x][y] >= 4) {\n        vst[x][y] = flag;\n        q[qb++] = x;\n        if (qb == 1000000) qb = 0;\n        q[qb++] = y;\n        if (qb == 1000000) qb = 0;\n      }\n    }\n    for (; T--;) {\n      scanf(\"%d%d\", &x, &y);\n      if ((x + 150 < 0 || x + 150 >= 300 || y + 150 < 0 || y + 150 >= 300))\n        puts(\"0\");\n      else\n        printf(\"%d\\n\", cnt[x + 150][y + 150]);\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int M = 300;\nint cnt[2 * M + 1][2 * M + 1];\nconst int dx[] = {0, 1, 0, -1, 0};\nvoid dfs(int x, int y) {\n  if (cnt[y][x] < 4) return;\n  int add = cnt[y][x] / 4;\n  cnt[y][x] %= 4;\n  for (int i = 0; i < 4; ++i) {\n    int xx = x + dx[i], yy = y + dx[1 + i];\n    cnt[yy][xx] += add;\n    dfs(xx, yy);\n  }\n}\nint main() {\n  int n, t;\n  cin >> n >> t;\n  cnt[M][M] = n;\n  dfs(M, M);\n  while (t--) {\n    int x, y;\n    cin >> x >> y;\n    if (x < 0) x = -x;\n    if (y < 0) y = -y;\n    if (x < y) swap(x, y);\n    if (x >= M || y >= M) {\n      cout << 0 << '\\n';\n    } else {\n      cout << cnt[y + M][x + M] << '\\n';\n    }\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class D318 {\n\n\tstatic int[] dx = {-1 , 0 , 1 , 0};\n\tstatic int[] dy = {0 , -1 , 0 , 1};\n\n\tpublic static void main(String[] args) throws Exception {\n\t\tBufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n\t\tStringTokenizer st = new StringTokenizer(in.readLine());\n\t\tint n = Integer.parseInt(st.nextToken());\n\t\tint t = Integer.parseInt(st.nextToken());\n\t\tint[][] map = new int[202][202];\n\t\tmap[101][101] = n;\n\t\twhile (true) {\n\t\t\tboolean changed = false;\n\t\t\tfor (int i = 0 ; i < 202 ; i++) {\n\t\t\t\tfor (int j = 0 ; j < 202 ; j++) {\n\t\t\t\t\tif (map[i][j] > 3) {\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tint am = map[i][j] / 4;\n\t\t\t\t\t\tmap[i][j] -= am * 4;\n\t\t\t\t\t\tfor (int k = 0 ; k < 4 ; k++)\n\t\t\t\t\t\t\tmap[i + dx[k]][j + dy[k]] += am;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!changed)\n\t\t\t\tbreak;\n\t\t}\n\t\tfor (int i = 0 ; i < t ; i++) {\n\t\t\tst = new StringTokenizer(in.readLine());\n\t\t\tint x = Integer.parseInt(st.nextToken()) + 101;\n\t\t\tint y = Integer.parseInt(st.nextToken()) + 101;\n\t\t\tif (x < 0 || y < 0 || x > 201 || y > 201)\n\t\t\t\tSystem.out.println(0);\n\t\t\telse\n\t\t\t\tSystem.out.println(map[x][y]);\n\t\t}\n\t}\n}"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\npublic class Ants\n{\n\tpublic static final int[] dr = {1, 0, -1, 0};\n\tpublic static final int[] dc = {0, 1, 0, -1};\n\t\n\tpublic static int[][] grid;\n\t\n\tpublic static void main(String[] args) throws IOException\n\t{\n\t\tFastScanner in = new FastScanner();\n\t\t\n\t\tint n = in.nextInt();\n\t\tint t = in.nextInt();\n\t\t\n\t\tgrid = new int[71][71];\n\t\tgrid[0][0] = n;\n\t\t\n\t\twhile(true)\n\t\t{\n\t\t\tif(!move())\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor(int a = 0; a < t; a++)\n\t\t{\n\t\t\tint x = in.nextInt();\n\t\t\tint y = in.nextInt();\n\t\t\t\n\t\t\tif(x < 0)\n\t\t\t{\n\t\t\t\tx *= -1;\n\t\t\t}\n\t\t\t\n\t\t\tif(y < 0)\n\t\t\t{\n\t\t\t\ty *= -1;\n\t\t\t}\n\t\t\t\n\t\t\tif(x > 70 || y > 70)\n\t\t\t{\n\t\t\t\tSystem.out.println(0);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tSystem.out.println(grid[x][y]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tpublic static boolean move()\n\t{\n\t\tboolean ret = false;\n\t\t\n\t\tfor(int i = 0; i < grid.length; i++)\n\t\t{\n\t\t\tfor(int j = 0; j < grid[0].length; j++)\n\t\t\t{\n\t\t\t\tif(grid[i][j] >= 4)\n\t\t\t\t{\n\t\t\t\t\tret = true;\n\t\t\t\t\t\n\t\t\t\t\tgrid[i][j] -= 4;\n\t\t\t\t\t\n\t\t\t\t\tfor(int k = 0; k < dr.length; k++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(i + dr[k] >= 0 && j + dc[k] >= 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgrid[i + dr[k]][j + dc[k]]++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif(i == 1)\n\t\t\t\t\t{\n\t\t\t\t\t\tgrid[i - 1][j]++;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif(j == 1)\n\t\t\t\t\t{\n\t\t\t\t\t\tgrid[i][j - 1]++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn ret;\n\t}\n}\n\nclass FastScanner \n{\n\tBufferedReader br;\n\tStringTokenizer st;\n\t\n\tpublic FastScanner()\n\t{\n\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t\tst = new StringTokenizer(\"\");\n\t}\n\t\n\tpublic FastScanner(File f) throws IOException\n\t{\n\t\tbr = new BufferedReader(new FileReader(f));\n\t\tst = new StringTokenizer(\"\");\n\t}\n\t\n\tpublic int nextInt() throws IOException\n\t{\n\t\tif(st.hasMoreTokens())\n\t\t{\n\t\t\treturn Integer.parseInt(st.nextToken());\n\t\t}\n\t\telse\n\t\t{\n\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\treturn nextInt();\n\t\t}\n\t}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint main() {\n  const int F = 4;\n  const int N = 65;\n  long a[2 * N][2 * N] = {0};\n  long t(0);\n  scanf(\"%ld %ld\", &a[N][N], &t);\n  bool done(false);\n  while (!done) {\n    done = true;\n    for (long x = 1; x < 2 * N - 1; x++) {\n      for (long y = 1; y < 2 * N - 1; y++) {\n        if (a[x][y] < F) {\n          continue;\n        }\n        done = false;\n        a[x + 1][y] += a[x][y] / F;\n        a[x - 1][y] += a[x][y] / F;\n        a[x][y + 1] += a[x][y] / F;\n        a[x][y - 1] += a[x][y] / F;\n        a[x][y] %= F;\n      }\n    }\n  }\n  while (t--) {\n    long x, y;\n    scanf(\"%ld %ld\", &x, &y);\n    if (x < -N || x >= N || y < -N || y >= N) {\n      puts(\"0\");\n    } else {\n      printf(\"%ld\\n\", a[N + x][N + y]);\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, t;\nint a[2000 + 5][2000 + 5];\nbool c[2000 + 5][2000 + 5];\nint dx[] = {0, 0, -1, 1};\nint dy[] = {1, -1, 0, 0};\nvoid ini() {\n  memset(a, 0, sizeof(a));\n  memset(c, 0, sizeof(c));\n  a[500][500] = n;\n  queue<pair<int, int> > q;\n  q.push(make_pair(500, 500));\n  while (!q.empty()) {\n    pair<int, int> u = q.front();\n    q.pop();\n    c[u.first][u.second] = 0;\n    int k = a[u.first][u.second] / 4;\n    for (int i = 0; i < 4; i++) {\n      int x = u.first + dx[i];\n      int y = u.second + dy[i];\n      a[x][y] += k;\n      if (!c[x][y] && a[x][y] > 3) {\n        q.push(make_pair(x, y));\n        c[x][y] = 1;\n      }\n    }\n    a[u.first][u.second] %= 4;\n  }\n}\nint main() {\n  cin >> n >> t;\n  ini();\n  while (t--) {\n    long long x, y;\n    cin >> x >> y;\n    if (abs(x) > 500 || abs(y) > 500)\n      cout << 0 << endl;\n    else\n      cout << a[x + 500][y + 500] << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int SIZE = 256;\nint M[SIZE * 2][SIZE * 2];\nvoid add(int y, int x) {\n  M[y][x]++;\n  if (M[y][x] == 4) {\n    M[y][x] = 0;\n    add(y + 1, x);\n    add(y - 1, x);\n    add(y, x + 1);\n    add(y, x - 1);\n  }\n}\nint main() {\n  int n, t, x, y;\n  scanf(\"%d%d\", &n, &t);\n  for (int i = 0; i < n; i++) {\n    add(SIZE, SIZE);\n  }\n  for (int i = 0; i < t; i++) {\n    scanf(\"%d%d\", &x, &y);\n    if (x + SIZE >= 2 * SIZE || x + SIZE < 0 || y + SIZE >= 2 * SIZE ||\n        y + SIZE < 0) {\n      cout << 0 << endl;\n    } else {\n      cout << M[y + SIZE][x + SIZE] << endl;\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 3,
            "solution": "from sys import *\nf = lambda: map(int, stdin.readline().split())\nn, t = f()\n\nm = 65\nr = range(1, m)\np = [[0] * m for i in range(m)]\np[1][0] = n // 4\np[0][0] = n % 4\n\ns = k = 1\nwhile s:\n    s = 0\n\n    for x in r[:k]:\n        if p[x][0] > 3:\n            s = 1\n            d = p[x][0] // 4\n            p[x][0] %= 4\n\n            p[x + 1][0] += d\n            p[x][1] += d\n\n            if x != 1:\n                p[x - 1][0] += d\n            else:\n                p[1][1] += d\n                p[1][0] += d\n        for y in r[:x - 1]:\n            if p[x][y] > 3:\n                s = 1\n                d = p[x][y] // 4\n                p[x][y] %= 4\n\n                p[x + 1][y] += d\n                p[x - 1][y] += d\n                p[x][y + 1] += d\n                p[x][y - 1] += d\n\n                if x == y + 1:\n                    p[x][x] += d\n                    p[y][y] += d\n                if y == 1: p[x][0] += d\n        if p[x][x] > 3:\n            s = 1\n            d = p[x][x] // 4\n            p[x][x] %= 4\n\n            p[x + 1][x] += d\n            p[x][x - 1] += d\n\n            if x == 1: p[1][0] += d\n    k += 1\n\ns = []\nfor j in range(t):\n    x, y = f()\n    x, y = abs(x), abs(y)\n    if x < y: x, y = y, x\n    s.append(p[x][y] if x < m else 0)\n\nstdout.write('\\n'.join(map(str, s)))"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\nimport java.math.BigInteger;\nimport static java.lang.Math.*;\nimport static java.math.BigInteger.*;\n\npublic class Main {\n\n    BufferedReader br;\n    StringTokenizer in;\n    PrintWriter out;\n\n    String next() throws IOException {\n        while( in==null || !in.hasMoreTokens() )\n            in = new StringTokenizer( br.readLine() );\n        return in.nextToken();\n    }\n\n    int nextInt() throws IOException {\n        return Integer.parseInt(next());\n    }\n\n    long nextLong() throws IOException {\n        return Long.parseLong(next());\n    }\n\n    public static void main(String[] args) throws IOException {\n        new Main().run();\n    }\n\n\n\n\n\n    void run() throws IOException {\n        boolean oj = System.getProperty(\"ONLINE_JUDGE\") != null;\n        Reader reader = oj ? new InputStreamReader(System.in) :\n                new FileReader(\"input.txt\");\n        br = new BufferedReader(reader);\n        out = new PrintWriter(\n                oj ? new OutputStreamWriter(System.out) :\n                        new FileWriter(\"output.txt\"));\n        solve();\n        //deb();\n        out.flush();\n    }\n\n    class pt{\n        int x, y;\n        pt( int _x, int _y ){\n            x = _x;\n            y = _y;\n        }\n        pt add( pt b ){\n            return new pt( x+b.x, y+b.y );\n        }\n    }\n\n    final pt[] dxy = new pt[]{\n        new pt(-1,0),\n        new pt(+1,0),\n        new pt(0,-1),\n        new pt(0,+1),\n    };\n\n    final int\n            nmax = 130, x0 = nmax/2, y0 = nmax/2,\n            ant = 30_000;\n    boolean[][] isQ = new boolean[nmax][nmax];\n\n    boolean bf(int[][] pl){\n        boolean didSome = false;\n        for( int x = 0; x < nmax; ++x ){\n            for( int y = 0; y < nmax; ++y ){\n                if( 4 <= pl[x][y] ){\n                    int cnt = pl[x][y] / 4;\n                    pl[x][y] -= cnt*4;\n                    pl[x-1][y] += cnt;\n                    pl[x+1][y] += cnt;\n                    pl[x][y-1] += cnt;\n                    pl[x][y+1] += cnt;\n                    didSome = true;\n                }\n            }\n        }\n        return  didSome;\n    }\n\n    void show(int[][] pl){\n        for( int y = nmax-1; 0 <= y; --y ){\n            for( int x = 0; x < nmax; ++x)\n                out.printf(\"%3d\",pl[x][y]);\n            out.println();\n        }\n        out.println();\n    }\n\n    void solve() throws IOException{\nlabelSolve:\n    {\n        Long tBeg = System.currentTimeMillis();\n        int[][] pl = new int[nmax][nmax];\n        pl[x0][y0] = nextInt();\n        while(bf(pl));\n\n        int t = nextInt();\n        for( int i = 0; i < t; ++i ){\n            int x = nextInt();\n            int y = nextInt();\n            x += x0;\n            y += y0;\n            try{\n                out.println( pl[x][y] );\n            }\n            catch ( Exception r ){\n                out.println(0);\n            }\n        }\n\n\n//        show(A);\n\n\n\n//        System.out.println((System.currentTimeMillis()-tBeg)/1e3);\n//        System.out.flush();\n    }\n    }\n\n\n\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint c[400][400];\nconst int F = 200;\nint que[1000000][2];\nint mm[4][2] = {{0, 1}, {0, -1}, {1, 0}, {-1, 0}};\nint main() {\n  int i, j, f, n, k, p, q, r, x, y, dx, dy, t;\n  scanf(\"%d\", &n);\n  for (k = 0; k < n; k++) {\n    c[F][F]++;\n    if (c[F][F] < 4) continue;\n    p = 0;\n    q = -1;\n    que[0][0] = F;\n    que[0][1] = F;\n    while (q != p) {\n      r = p;\n      while (q != r) {\n        x = que[++q][0];\n        y = que[q][1];\n        c[x][y] -= 4;\n        for (i = 0; i < 4; i++) {\n          dx = x + mm[i][0];\n          dy = y + mm[i][1];\n          c[dx][dy]++;\n          if (c[dx][dy] == 4) {\n            que[++p][0] = dx;\n            que[p][1] = dy;\n          }\n        }\n      }\n    }\n  }\n  scanf(\"%d\", &t);\n  for (k = 0; k < t; k++) {\n    scanf(\"%d %d\", &x, &y);\n    if (x > 190 || y > 190 || x < -190 || y < -190) {\n      puts(\"0\");\n    } else {\n      printf(\"%d\\n\", c[x + F][y + F]);\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint locations[1005][1005];\nint s[1000005];\nint di[] = {-1, 1, 0, 0};\nint dj[] = {0, 0, -1, 1};\ninline void add(int x, int y, int v) { locations[500 + x][500 + y] += v; }\ninline int get(int x, int y) { return locations[500 + x][500 + y]; }\nint main(int argc, char *argv[]) {\n  int n, t;\n  scanf(\"%d %d\", &n, &t);\n  int stop = 0;\n  add(0, 0, n);\n  if (n >= 4) {\n    s[stop++] = 0;\n    s[stop++] = 0;\n  }\n  while (stop) {\n    int y = s[--stop], x = s[--stop];\n    int value = get(x, y) / 4;\n    add(x, y, -value * 4);\n    for (int i = 0; i < 4; i++) {\n      int v = get(x + di[i], y + dj[i]);\n      if (v + value >= 4 && v < 4) {\n        s[stop++] = x + di[i];\n        s[stop++] = y + dj[i];\n      }\n      add(x + di[i], y + dj[i], value);\n    }\n  }\n  while (t--) {\n    int x, y;\n    scanf(\"%d %d\", &x, &y);\n    if (fabs(x) > 500 || fabs(y) >= 500)\n      puts(\"0\");\n    else\n      printf(\"%d\\n\", get(x, y));\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, t;\nint dir[4][2] = {{1, 0}, {0, 1}, {-1, 0}, {0, -1}};\nint mp[3002][3002];\nbool vis[3002][3002];\nvoid bfs(int x, int y) {\n  queue<pair<int, int> > q;\n  q.push(make_pair(x, y));\n  mp[x][y] = n;\n  while (!q.empty()) {\n    pair<int, int> now = q.front();\n    q.pop();\n    x = now.first;\n    y = now.second;\n    vis[x][y] = 0;\n    int val = mp[x][y] / 4;\n    mp[x][y] %= 4;\n    for (register int i = 0; i < 4; i++) {\n      int tx = x + dir[i][0];\n      int ty = y + dir[i][1];\n      mp[tx][ty] += val;\n      if (mp[tx][ty] >= 4 && !vis[tx][ty]) {\n        q.push(make_pair(tx, ty));\n        vis[tx][ty] = 1;\n      }\n    }\n  }\n}\nint main() {\n  scanf(\"%d%d\", &n, &t);\n  bfs(1000, 1000);\n  for (register int i = 1; i <= t; i++) {\n    int x, y;\n    scanf(\"%d%d\", &x, &y);\n    x += 1000;\n    y += 1000;\n    if (x < 0 || y < 0 || x > 3001 || y > 3001) {\n      printf(\"0\\n\");\n    } else {\n      printf(\"%d\\n\", mp[x][y]);\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <class T>\ninline T min(T &a, T &b) {\n  return a < b ? a : b;\n}\ntemplate <class T>\ninline T max(T &a, T &b) {\n  return a > b ? a : b;\n}\ntemplate <class T>\nvoid read(T &x) {\n  char ch;\n  while ((ch = getchar()) && !isdigit(ch))\n    ;\n  x = ch - '0';\n  while ((ch = getchar()) && isdigit(ch)) x = x * 10 + ch - '0';\n}\nlong long Pow(long long a, long long b, long long Mod) {\n  long long ans = 1;\n  a %= Mod;\n  for (; b; b >>= 1) ans = b & 1 ? (ans * a % Mod) : ans, a = a * a % Mod;\n  return ans;\n}\nconst int U[4] = {0, 0, 1, -1};\nconst int V[4] = {1, -1, 0, 0};\nqueue<pair<int, int> > Q;\nint num[300][300], n, t, x, y;\nint main() {\n  scanf(\"%d%d\", &n, &t);\n  num[100][100] = n;\n  Q.push(make_pair(100, 100));\n  while (Q.size()) {\n    int x = Q.front().first, y = Q.front().second;\n    Q.pop();\n    if (num[x][y] < 4) continue;\n    for (int i = 0; i <= 3; i++) {\n      num[x + U[i]][y + V[i]] += num[x][y] / 4;\n      if (num[x + U[i]][y + V[i]] >= 4) Q.push(make_pair(x + U[i], y + V[i]));\n    }\n    num[x][y] %= 4;\n  }\n  for (int i = 1; i <= t; i++) {\n    scanf(\"%d%d\", &x, &y);\n    x += 100;\n    y += 100;\n    if (x >= 0 && x <= 200 && y >= 0 && y <= 200)\n      printf(\"%d\\n\", num[x][y]);\n    else\n      puts(\"0\");\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstruct pos {\n  int x, y;\n};\nint dx[] = {-1, 0, 1, 0, 0};\nint dy[] = {0, 1, 0, -1, 0};\nint n, m, w, size, x, y, itr, mx;\nint v[1000][1000], u[1000][1000];\npos q[2][1000 * 1000];\nint main() {\n  scanf(\"%d%d\", &n, &m);\n  v[500][500] = n;\n  if (n >= 4) {\n    q[0][0] = (pos){500, 500};\n    size = 1;\n  }\n  while (size) {\n    ++itr;\n    int t = 0;\n    for (int j = (0); j < (size); j++) {\n      x = q[w][j].x;\n      y = q[w][j].y;\n      if (u[x][y] == itr) continue;\n      u[x][y] = itr;\n      v[x][y] -= 4;\n      for (int k = (0); k < (4); k++) v[x + dx[k]][y + dy[k]]++;\n    }\n    ++itr;\n    for (int j = (0); j < (size); j++) {\n      x = q[w][j].x;\n      y = q[w][j].y;\n      for (int k = (0); k < (5); k++) {\n        if (v[x + dx[k]][y + dy[k]] >= 4 && u[x + dx[k]][y + dy[k]] != itr) {\n          q[w ^ 1][t++] = (pos){x + dx[k], y + dy[k]};\n          u[x + dx[k]][y + dy[k]] = itr;\n          mx = max(mx, x + dx[k]);\n        }\n      }\n    }\n    size = t;\n    w ^= 1;\n  }\n  while (m--) {\n    scanf(\"%d%d\", &x, &y);\n    x += 500, y += 500;\n    if (x < 0 || y < 0 || x >= 1000 || y >= 1000)\n      puts(\"0\");\n    else\n      printf(\"%d\\n\", v[x][y]);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstruct point {\n  int x;\n  int y;\n};\nbool operator<(const point &a, const point &b) { return (a.x < b.x); }\nint compare(const void *a, const void *b) { return (*(int *)a - *(int *)b); }\nint gcd(int a, int b) { return (b == 0) ? a : gcd(b, a % b); }\nint a[200][200];\nint main() {\n  int n, t, i, j, x, y;\n  cin >> n >> t;\n  a[100][100] = n;\n  while (1) {\n    int flag = 0;\n    for (i = 0; i < 200; i++)\n      for (j = 0; j < 200; j++)\n        if (a[i][j] >= 4) {\n          if (i > 0) a[i - 1][j] += (a[i][j] / 4);\n          if (i < 199) a[i + 1][j] += (a[i][j] / 4);\n          if (j > 0) a[i][j - 1] += (a[i][j] / 4);\n          if (j < 199) a[i][j + 1] += (a[i][j] / 4);\n          flag = 1;\n          a[i][j] %= 4;\n        }\n    if (!flag) break;\n  }\n  for (i = 0; i < t; i++) {\n    cin >> x >> y;\n    if (x < 100 && x >= -100 && y < 100 && y >= -100)\n      cout << a[x + 100][y + 100] << endl;\n    else\n      cout << 0 << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.InputMismatchException;\nimport java.util.LinkedList;\nimport java.util.Map.Entry;\nimport java.util.Queue;\nimport java.util.StringTokenizer;\nimport java.awt.*;\nimport static java.lang.Math.*;\nimport static java.lang.Integer.*;\nimport static java.lang.Long.*;\n\n@SuppressWarnings(\"unused\")\npublic class round188D {\n\n    static class cell {\n        int x, y, ants;\n\n        public cell(int xx, int yy, int a) {\n            x = xx;\n            y = yy;\n            ants = a;\n        }\n    }\n\n    static class InputReader {\n\n        private InputStream stream;\n        private byte[] buf = new byte[1000];\n        private int curChar, numChars;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        private int read() {\n            if (numChars == -1)\n                throw new InputMismatchException();\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (numChars <= 0)\n                    return -1;\n            }\n            return buf[curChar++];\n        }\n\n        public int readInt() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do {\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public long readLong() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            long res = 0;\n            do {\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public String readString() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            StringBuffer res = new StringBuffer();\n            do {\n                res.appendCodePoint(c);\n                c = read();\n            } while (!isSpaceChar(c));\n            return res.toString();\n        }\n\n        private boolean isSpaceChar(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        private String readLine0() {\n            StringBuffer buf = new StringBuffer();\n            int c = read();\n            while (c != '\\n' && c != -1) {\n                buf.appendCodePoint(c);\n                c = read();\n            }\n            return buf.toString();\n        }\n\n        public String readLine() {\n            String s = readLine0();\n            while (s.trim().length() == 0)\n                s = readLine0();\n            return s;\n        }\n\n        public String readLine(boolean ignoreEmptyLines) {\n            if (ignoreEmptyLines)\n                return readLine();\n            else\n                return readLine0();\n        }\n\n        public char readCharacter() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            return (char) c;\n        }\n\n        public double readDouble() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            double res = 0;\n            while (!isSpaceChar(c) && c != '.') {\n                if (c == 'e' || c == 'E')\n                    return res * Math.pow(10, readInt());\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            if (c == '.') {\n                c = read();\n                double m = 1;\n                while (!isSpaceChar(c)) {\n                    if (c == 'e' || c == 'E')\n                        return res * Math.pow(10, readInt());\n                    if (c < '0' || c > '9')\n                        throw new InputMismatchException();\n                    m /= 10;\n                    res += (c - '0') * m;\n                    c = read();\n                }\n            }\n            return res * sgn;\n        }\n    }\n\n    static short dx[] = new short[] { 1, -1, 0, 0 };\n    static short dy[] = new short[] { 0, 0, 1, -1 };\n    static int[][] count = new int[350][350];\n    static boolean vis[][] = new boolean[350][350];\n\n    public static void flood(int n) {\n        short [] q = new short [30000000];\n        int back = 0;\n        int front = 0;\n        q[back++] = 0;\n        q[back++] = 0;\n        count[0][0] = n;\n        while (back > front) {\n            short x = q[front++];\n            short y = q[front++];\n            short accessX = x < 0 ? (short) (x + 305) : x;\n            short accessY = y < 0 ? (short) (y + 305) : y;\n            vis[accessX][accessY] = false;\n            int ants = count[accessX][accessY];\n            if (ants >= 4) {\n                int div = ants / 4;\n                int rem = ants & 3;\n                count[accessX][accessY] = rem;\n                for (int i = 0; i < 4; ++i) {\n                    short nx = (short) (x + dx[i]);\n                    short ny = (short) (y + dy[i]);\n                    int accessNx = nx < 0 ? nx + 305 : nx;\n                    int accessNy = ny < 0 ? ny + 305 : ny;\n                    count[accessNx][accessNy] += div;\n                    if (!vis[accessNx][accessNy] && count[accessNx][accessNy] >= 4) {\n                        q[back++] = nx;\n                        q[back++] = ny;\n                        vis[accessNx][accessNy] = true;\n                    }\n                }\n            }\n        }\n    }\n\n    public static void main(String[] args) throws Exception {\n        InputReader io = new InputReader(System.in);\n        PrintWriter out = new PrintWriter(System.out);\n        int n = io.readInt();\n        int t = io.readInt();\n        flood(n);\n        for (int i = 0; i < t; ++i) {\n            int x = io.readInt();\n            int y = io.readInt();\n            int accessX = x < 0 ? x + 305 : x;\n            int accessY = y < 0 ? y + 305 : y;\n            if (Math.abs(x) <= 150 && Math.abs(y) <= 150)\n                out.println(count[accessX][accessY]);\n            else\n                out.println(0);\n        }\n        out.flush();\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long int modpow(long long int a, long long int n, long long int temp) {\n  long long int res = 1;\n  while (n > 0) {\n    res = (res * res) % temp;\n    if (n & 1) res = (res * a) % temp;\n    n /= 2;\n  }\n  return res;\n}\nlong long int gcd(long long int a, long long int b) {\n  if (a == 0)\n    return (b);\n  else\n    return (gcd(b % a, a));\n}\nvoid f(int a[][1001], int x, int y) {\n  if (a[x][y] >= 4) {\n    int t = a[x][y] / 4;\n    a[x][y + 1] += t;\n    a[x + 1][y] += t;\n    a[x - 1][y] += t;\n    a[x][y - 1] += t;\n    a[x][y] = a[x][y] % 4;\n    f(a, x + 1, y);\n    f(a, x - 1, y);\n    f(a, x, y + 1);\n    f(a, x, y - 1);\n  }\n}\nint main() {\n  int a[1001][1001] = {0};\n  int n, q, x, y;\n  cin >> n >> q;\n  a[500][500] = n;\n  f(a, 500, 500);\n  while (q--) {\n    cin >> x >> y;\n    x += 500;\n    y += 500;\n    if (x > 1000 || y > 1000 || x < 0 || y < 0)\n      cout << 0 << endl;\n    else\n      cout << a[x][y] << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedInputStream;\nimport java.io.IOException;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.HashSet;\nimport java.util.InputMismatchException;\nimport java.util.Set;\nimport java.util.TreeSet;\n\npublic class Main\n{\n\tprivate final int SIZEN = 100;\n\tprivate int[][] map = new int[2 * SIZEN + 1][2 * SIZEN + 1];\n\t\n\tpublic void dfs(int x, int y)\n\t{\n\t\tif(map[y][x] < 4)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tint m = map[y][x] / 4;\n\t\tmap[y][x] %= 4;\n\t\tmap[y][x - 1] += m;\n\t\tdfs(x - 1, y);\n\t\tmap[y][x + 1] += m;\n\t\tdfs(x + 1, y);\n\t\tmap[y - 1][x] += m;\n\t\tdfs(x, y - 1);\n\t\tmap[y + 1][x] += m;\n\t\tdfs(x, y + 1);\n\t}\n\t\n\tpublic void foo()\n\t{\n\t\tMyScanner scan = new MyScanner();\n\t\tint n = scan.nextInt();\n\t\tmap[SIZEN][SIZEN] = n;\n\t\tdfs(SIZEN, SIZEN);\n\t\tint t = scan.nextInt();\n\t\tfor(int i = 0;i < t;++i)\n\t\t{\n\t\t\tint x = scan.nextInt();\n\t\t\tint y = scan.nextInt();\n\t\t\tif(x < -SIZEN || x > SIZEN || y < -SIZEN || y > SIZEN)\n\t\t\t{\n\t\t\t\tSystem.out.println(0);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tSystem.out.println(map[y + SIZEN][x + SIZEN]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tpublic static void main(String[] args)\n\t{\n\t\tnew Main().foo();\n\t}\n\t\n\tclass Point implements Comparable<Point>\n\t{\n\t\tprivate int x;\n\t\tprivate int y;\n\t\tprivate int num;\n\t\tpublic Point(int aX, int aY, int aNum)\n\t\t{\n\t\t\tx = aX;\n\t\t\ty = aY;\n\t\t\tnum = aNum;\n\t\t}\n\t\tpublic int compareTo(Point p)\n\t\t{\n\t\t\treturn p.num - num;\n\t\t}\n\t}\n\t\n\tclass MyScanner\n\t{\n\t    private byte[] buf = new byte[1024];\n\t    private int curChar;\n\t    private int numChars;\n\t    BufferedInputStream bis = new BufferedInputStream(System.in);\n\n\t    public int read() \n\t    {\n\t        if (-1 == numChars)\n\t        {\n\t        \tthrow new InputMismatchException();\n\t        }\n\t        if (curChar >= numChars)\n\t        {\n\t            curChar = 0;\n\t            try \n\t            {\n\t                numChars = bis.read(buf);\n\t            }\n\t            catch (IOException e)\n\t            {\n\t                throw new InputMismatchException();\n\t            }\n\t            if (numChars <= 0)\n\t            {\n\t            \treturn -1;\n\t            }\n\t        }\n\t        return buf[curChar++];\n\t    }\n\n\t    public int nextInt() \n\t    {\n\t        int c = read();\n\t        while (isSpaceChar(c))\n\t        {\n\t        \tc = read();\n\t        }\n\t        int sgn = 1;\n\t        if (c == '-') \n\t        {\n\t            sgn = -1;\n\t            c = read();\n\t        }\n\t        int res = 0;\n\t        do \n\t        {\n\t            if (c < '0' || c > '9')\n\t            {\n\t            \tthrow new InputMismatchException();\n\t            }\n\t            res *= 10;\n\t            res += c - '0';\n\t            c = read();\n\t        } while (!isSpaceChar(c));\n\t        return res * sgn;\n\t    }\n\t    \n\t    public long nextLong() \n\t    {\n\t    \tint c = read();\n\t    \twhile (isSpaceChar(c))\n\t    \t{\n\t    \t\tc = read();\n\t    \t}\n\t    \tint sgn = 1;\n\t    \tif (c == '-') \n\t    \t{\n\t    \t\tsgn = -1;\n\t    \t\tc = read();\n\t    \t}\n\t    \tlong res = 0;\n\t    \tdo \n\t    \t{\n\t    \t\tif (c < '0' || c > '9')\n\t    \t\t{\n\t    \t\t\tthrow new InputMismatchException();\n\t    \t\t}\n\t    \t\tres *= 10;\n\t    \t\tres += c - '0';\n\t    \t\tc = read();\n\t    \t} while (!isSpaceChar(c));\n\t    \treturn res * sgn;\n\t    }\n\t    \n\t    public String next()\n\t    {\n\t        int c = read();\n\t        while (isSpaceChar(c))\n\t        {\n\t        \tc = read();\n\t        }\n\t        StringBuilder res = new StringBuilder();\n\t        do \n\t        {\n\t            res.appendCodePoint(c);\n\t            c = read();\n\t        } while (!isSpaceChar(c));\n\t        return res.toString();\n\t    }\n\n\t    private boolean isSpaceChar(int c) \n\t    {\n\t        return ' ' == c || '\\n' == c || '\\r' == c || '\\t' == c || -1 == c;\n\t    }\n\t}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a, b, x, y;\nint v[1005][1005];\nvoid tp(int m, int n, int k) {\n  v[m][n] += k;\n  if (v[m][n] < 4) return;\n  v[m][n] -= 4;\n  tp(m, n, 0);\n  tp(m + 1, n, 1);\n  tp(m - 1, n, 1);\n  tp(m, n + 1, 1);\n  tp(m, n - 1, 1);\n  return;\n}\nint main() {\n  scanf(\"%d %d\", &a, &b);\n  tp(500, 500, a);\n  for (int i = 0; i < b; i++) {\n    scanf(\"%d %d\", &x, &y);\n    if (x > 500 || y > 500 || x < -500 || y < -500) {\n      printf(\"0\\n\");\n      continue;\n    }\n    printf(\"%d\\n\", v[x + 500][y + 500]);\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <typename T1>\ninline void deb(const T1 &);\ntemplate <typename T1, typename T2>\ninline void deb(const T1 &, const T2 &);\ntemplate <typename T1, typename T2, typename T3>\ninline void deb(const T1 &, const T2 &, const T3 &);\ntemplate <typename T1, typename T2, typename T3, typename T4>\ninline void deb(const T1 &, const T2 &, const T3 &, const T4 &);\ntemplate <typename T1, typename T2, typename T3, typename T4, typename T5>\ninline void deb(const T1 &, const T2 &, const T3 &, const T4 &, const T5 &);\nconst int NMax = 1011;\nconst int dx[] = {0, 1, 0, -1};\nconst int dy[] = {1, 0, -1, 0};\ninline int p(int a) { return a + 505; }\nint mat[NMax][NMax];\nint N, K;\nqueue<pair<int, int> > Q[2];\nint main() {\n  cin >> N >> K;\n  mat[p(0)][p(0)] = N;\n  Q[0].push(make_pair(p(0), p(0)));\n  for (int i = 0; Q[i & 1].size(); i++) {\n    for (; !Q[i & 1].empty(); Q[i & 1].pop()) {\n      pair<int, int> ret = Q[i & 1].front();\n      int rem = mat[ret.first][ret.second] / 4;\n      if (rem) {\n        mat[ret.first][ret.second] -= 4 * rem;\n        for (int k = 0; k < 4; k++) {\n          pair<int, int> acm = ret;\n          acm.first += dx[k];\n          acm.second += dy[k];\n          mat[acm.first][acm.second] += rem;\n          if (mat[acm.first][acm.second] >= 4) {\n            Q[!(i & 1)].push(acm);\n          }\n        }\n      }\n    }\n  }\n  for (int i = 1; i <= K; i++) {\n    int X, Y;\n    cin >> X >> Y;\n    if (0 <= p(X) && p(X) <= NMax && 0 <= p(Y) && p(Y) <= NMax)\n      cout << mat[p(X)][p(Y)];\n    else\n      cout << 0;\n    cout << '\\n';\n  }\n}\ntemplate <typename T1>\ninline void deb(const T1 &V1) {}\ntemplate <typename T1, typename T2>\ninline void deb(const T1 &V1, const T2 &V2) {}\ntemplate <typename T1, typename T2, typename T3>\ninline void deb(const T1 &V1, const T2 &V2, const T3 &V3) {}\ntemplate <typename T1, typename T2, typename T3, typename T4>\ninline void deb(const T1 &V1, const T2 &V2, const T3 &V3, const T4 &V4) {}\ntemplate <typename T1, typename T2, typename T3, typename T4, typename T5>\ninline void deb(const T1 &V1, const T2 &V2, const T3 &V3, const T4 &V4,\n                const T5 &V5) {}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.StreamTokenizer;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.io.BufferedReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.io.Reader;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tTokenizerReader in = new TokenizerReader(inputStream);\n\t\tPrintWriter out = new PrintWriter(outputStream);\n\t\tTaskD solver = new TaskD();\n\t\tsolver.solve(1, in, out);\n\t\tout.close();\n\t}\n}\n\nclass TaskD {\n    final int N = 70;\n    public void solve(@SuppressWarnings(\"UnusedParameters\") int testNumber, TokenizerReader in, PrintWriter out) {\n        int n = in.nextInt(), t = in.nextInt();\n\n        int[][] c = new int[N][N];\n        c[0][0] = n;\n        M = 1;\n        while (step2(c)) {\n            if (c[0][M] > 0)\n                ++M;\n        }\n\n        while (t --> 0) {\n            int x = in.nextInt(), y = in.nextInt();\n            x = Math.abs(x);\n            y = Math.abs(y);\n            if (x > y) {\n                int tmp = x;\n                x = y;\n                y = tmp;\n            }\n            if (y >= N)\n                out.println(0);\n            else\n                out.println(c[x][y]);\n        }\n\n    }\n    int M = 1;\n\n    private boolean step2(int[][] c) {\n        int[][] d = new int[M+1][M+1];\n        if (c[0][1] >= 4)\n            d[0][0] += 4;\n        for (int i = 1; i <= M; ++i) {\n            if (c[0][i-1] >= 4)\n                d[0][i]++;\n            if (c[0][i+1] >= 4)\n                d[0][i]++;\n            if (c[1][i] >= 4)\n                d[0][i] += 2;\n\n            if (c[i-1][i] >= 4)\n                d[i][i] += 2;\n            if (c[i][i+1] >= 4)\n                d[i][i] += 2;\n\n            for (int j = i+1; j <= M; ++j) {\n                if (c[i][j-1] >= 4)\n                    d[i][j]++;\n                if (c[i][j+1] >= 4)\n                    d[i][j]++;\n                if (c[i-1][j] >= 4)\n                    d[i][j]++;\n                if (c[i+1][j] >= 4)\n                    d[i][j]++;\n            }\n        }\n        boolean r = false;\n        for (int i = 0; i <= M; ++i)\n            for (int j = i; j <= M; ++j) {\n                if (c[i][j] >= 4)\n                    c[i][j] -= 4;\n                if (d[i][j] > 0) {\n                    r = true;\n                    c[i][j] += d[i][j];\n                }\n            }\n        return r;\n    }\n\n    }\n\nclass TokenizerReader extends StreamTokenizer {\n    public TokenizerReader(InputStream in) {\n        super(new BufferedReader(new InputStreamReader(in)));\n        defaultConfig();\n    }\n\n    public String nextString() {\n        try {\n            nextToken();\n        } catch (IOException e) {\n            throw new RuntimeException(\"nextString: exception in line \" + lineno(), e);\n        }\n        return sval;\n    }\n\n    public int nextInt() {\n        return Integer.parseInt(nextString());\n    }\n\n    public void defaultConfig() {\n        resetSyntax();\n        wordChars(33, 126);\n        whitespaceChars(0, ' ');\n    }\n\n    }\n\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.*;\nimport java.util.*;\n\npublic class D188\n{\t\n\tpublic D188()\n\t{\n\t\tint[][] arr = new int[131][131];\n\t\t\n\t\tScanner in = new Scanner(System.in);\n\t\tStringTokenizer st = new StringTokenizer(in.nextLine());\n\t\t\n\t\tint n = Integer.parseInt(st.nextToken());\n\t\tint t = Integer.parseInt(st.nextToken());\n\t\t\n\t\tarr[65][65] = n;\n\t\t\n\t\tboolean done = false;\n\t\twhile(!done)\n\t\t{\n\t\t\tdone = true;\n\t\t\tfor(int x = 0; x < 131; x++)\n\t\t\t{\n\t\t\t\tfor(int y = 0; y < 131; y++)\n\t\t\t\t{\n\t\t\t\t\tif(arr[x][y] >= 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tdone = false;\n\t\t\t\t\t\tarr[x - 1][y] += arr[x][y] / 4;\n\t\t\t\t\t\tarr[x + 1][y] += arr[x][y] / 4;\n\t\t\t\t\t\tarr[x][y + 1] += arr[x][y] / 4;\n\t\t\t\t\t\tarr[x][y - 1] += arr[x][y] / 4;\n\t\t\t\t\t\tarr[x][y] %= 4;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor(int x = 0; x < t; x++)\n\t\t{\n\t\t\tst = new StringTokenizer(in.nextLine());\n\t\t\tint xco = Integer.parseInt(st.nextToken());\n\t\t\tint yco = Integer.parseInt(st.nextToken());\n\t\t\t\n\t\t\tif(xco + 65 < 0 || xco + 65 > 130 || yco + 65 < 0 || yco + 65 > 130)\n\t\t\t\tSystem.out.println(0);\n\t\t\telse\n\t\t\t\tSystem.out.println(arr[xco + 65][yco + 65]);\n\t\t}\n\t}\n\t\n\tpublic static void main(String[] args)\n\t{\n\t\tnew D188();\n\t}\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(0);\n  int n, q;\n  cin >> n >> q;\n  int tab[181][181], tab2[181][181];\n  for (int i = 0; i < 181; i++) {\n    for (int j = 0; j < 181; j++) tab[i][j] = tab2[i][j] = 0;\n  }\n  tab[90][90] = n;\n  bool cont = 1;\n  while (cont) {\n    cont = 0;\n    for (int i = 0; i < 181; i++) {\n      for (int j = 0; j < 181; j++) tab2[i][j] = tab[i][j];\n    }\n    for (int i = 0; i < 181; i++) {\n      for (int j = 0; j < 181; j++) {\n        if (tab[i][j] < 4) continue;\n        cont = 1;\n        tab2[i + 1][j] += tab[i][j] / 4;\n        tab2[i - 1][j] += tab[i][j] / 4;\n        tab2[i][j + 1] += tab[i][j] / 4;\n        tab2[i][j - 1] += tab[i][j] / 4;\n        tab2[i][j] = tab[i][j] % 4;\n      }\n    }\n    for (int i = 0; i < 181; i++) {\n      for (int j = 0; j < 181; j++) tab[i][j] = tab2[i][j];\n    }\n  }\n  int a, b;\n  for (int i = 0; i < q; i++) {\n    cin >> a >> b;\n    if (a < -90 || b < -90 || a > 90 || b > 90) {\n      cout << 0 << \"\\n\";\n      continue;\n    }\n    cout << tab[a + 90][b + 90] << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint Get() {\n  char c;\n  while (c = getchar(), (c < '0' || c > '9') && (c != '-'))\n    ;\n  bool Flag = (c == '-');\n  if (Flag) c = getchar();\n  int X = 0;\n  while (c >= '0' && c <= '9') {\n    X = X * 10 + c - 48;\n    c = getchar();\n  }\n  return Flag ? -X : X;\n}\nvoid Output(int X) {\n  if (X < 0) {\n    putchar('-');\n    X = -X;\n  }\n  int Len = 0, Data[10];\n  while (X) {\n    Data[Len++] = X % 10;\n    X /= 10;\n  }\n  if (!Len) Data[Len++] = 0;\n  while (Len--) putchar(Data[Len] + 48);\n  putchar('\\n');\n}\nconst int S = 80;\nint main() {\n  static int DP[2][S * 2 + 1][S * 2 + 1];\n  memset(DP, 0, sizeof(DP));\n  DP[0][S][S] = Get();\n  static int Ans[S * 2 + 1][S * 2 + 1];\n  for (int i = 1; i <= 10000; i++) {\n    memset(DP[i & 1], 0, sizeof(DP[i & 1]));\n    for (int j = 0; j <= S * 2; j++)\n      for (int k = 0; k <= S * 2; k++) {\n        int T = DP[~i & 1][j][k] / 4;\n        if (T) {\n          DP[i & 1][j + 1][k] += T;\n          DP[i & 1][j - 1][k] += T;\n          DP[i & 1][j][k + 1] += T;\n          DP[i & 1][j][k - 1] += T;\n        }\n        DP[i & 1][j][k] += DP[~i & 1][j][k] % 4;\n      }\n    bool Find = false;\n    for (int j = 0; !Find && j <= S * 2; j++)\n      for (int k = 0; !Find && k <= S * 2; k++)\n        if (DP[0][j][k] != DP[1][j][k]) Find = true;\n    if (!Find) {\n      for (int j = 0; j <= S * 2; j++)\n        for (int k = 0; k <= S * 2; k++) Ans[j][k] = DP[i & 1][j][k];\n      break;\n    }\n  }\n  int M = Get();\n  while (M--) {\n    int X = Get(), Y = Get();\n    if (X < -S || X > S || Y < -S || Y > S)\n      Output(0);\n    else\n      Output(Ans[X + S][Y + S]);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <typename T>\ninline T Abs(T a) {\n  return a > 0 ? a : -a;\n}\ntemplate <typename T>\ninline T sqr(T a) {\n  return a * a;\n}\ntemplate <typename T>\ninline void relaxMin(T &a, T b) {\n  if (b < a) a = b;\n}\ntemplate <typename T>\ninline void relaxMax(T &a, T b) {\n  if (b > a) a = b;\n}\nconst int INF = (int)1E9;\nconst long double EPS = 1E-6;\nconst long double PI = 3.1415926535897932384626433832795;\nint f[65 * 2 + 3][65 * 2 + 3];\nint f2[65 * 2 + 3][65 * 2 + 3];\nint &get(int x, int y) { return f[x + 65][y + 65]; }\nint &get2(int x, int y) { return f2[x + 65][y + 65]; }\nvoid print() {\n  const int k = 10;\n  for (int i = -k; i <= k; i++) {\n    for (int j = -k; j <= k; j++) printf(\"%3d \", get(i, j));\n    cout << endl;\n  }\n  cout << endl << endl;\n}\nint dx[4] = {0, 0, 1, -1};\nint dy[4] = {1, -1, 0, 0};\nbool valid(int a, int b) { return a >= -65 && a <= 65 && b >= -65 && b <= 65; }\nvoid solve() {\n  int n, q;\n  scanf(\"%d%d\", &n, &q);\n  get(0, 0) = n;\n  for (;;) {\n    memset(f2, 0, sizeof f2);\n    ;\n    bool ok = false;\n    for (int x = -65; x <= 65; x++)\n      for (int y = -65; y <= 65; y++) {\n        if (get(x, y) / 4) {\n          ok = true;\n        }\n        if (get(x, y))\n          for (int d(0), _bb(4); d < _bb; ++d)\n            get2(x + dx[d], y + dy[d]) += get(x, y) / 4;\n        get2(x, y) += get(x, y) % 4;\n      }\n    memcpy(f, f2, sizeof(f));\n    if (!ok) {\n      break;\n    }\n  }\n  for (int i(0), _bb(q); i < _bb; ++i) {\n    int a, b;\n    scanf(\"%d%d\", &a, &b);\n    if (valid(a, b))\n      cout << get(a, b) << endl;\n    else\n      cout << 0 << endl;\n  }\n}\nint main() {\n  srand(0xA1B2C3D4);\n  solve();\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 30005, M = 500;\nstruct coord {\n  int x, y;\n};\nint dx[10] = {0, 1, -1, 0};\nint dy[10] = {1, 0, 0, -1};\ncoord q[5][2 * N];\nint top[5];\nint T, te, mn, x, nm, cr, k, n, d[2 * M + 5][2 * M + 5],\n    mark[2 * M + 5][2 * M + 5];\ncoord c, e;\nint main() {\n  scanf(\"%d\", &n);\n  d[M][M] = n;\n  if (n >= 4) {\n    c.x = M;\n    c.y = M;\n    top[mn]++;\n    q[mn][top[mn]] = c;\n  }\n  while (top[mn] != 0) {\n    nm = 1 - mn;\n    cr++;\n    top[nm] = 0;\n    x = top[mn];\n    while (x != 0) {\n      c = q[mn][x];\n      x--;\n      for (k = 0; k < 4; ++k) {\n        e.x = c.x + dx[k];\n        e.y = c.y + dy[k];\n        d[e.x][e.y]++;\n      }\n      e.x = c.x;\n      e.y = c.y;\n      d[e.x][e.y] -= 4;\n    }\n    while (top[mn] != 0) {\n      c = q[mn][top[mn]];\n      top[mn]--;\n      for (k = 0; k < 4; ++k) {\n        e.x = c.x + dx[k];\n        e.y = c.y + dy[k];\n        if (d[e.x][e.y] >= 4 && mark[e.x][e.y] != cr) {\n          top[nm]++;\n          q[nm][top[nm]] = e;\n          mark[e.x][e.y] = cr;\n        }\n      }\n      e.x = c.x;\n      e.y = c.y;\n      if (d[e.x][e.y] >= 4 && mark[e.x][e.y] != cr) {\n        top[nm]++;\n        q[nm][top[nm]] = e;\n        mark[e.x][e.y] = cr;\n      }\n    }\n    mn = nm;\n  }\n  scanf(\"%d\", &T);\n  for (te = 1; te <= T; ++te) {\n    scanf(\"%d%d\", &c.x, &c.y);\n    if (c.x >= -M && c.x <= M && c.y >= -M && c.y <= M) {\n      printf(\"%d\\n\", d[c.x + M][c.y + M]);\n    } else {\n      printf(\"0\\n\");\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedInputStream;\nimport java.util.*;\n\npublic class Main\n{\n\tpublic static void main(String[] args)\n\t{\n\t\tScanner in = new Scanner(new BufferedInputStream((System.in)));\n\t\tint n = in.nextInt();\n\t\tint t = in.nextInt();\n\t\ttable[SIZE / 2][SIZE / 2] = n;\n\t\t\n\t\tboolean change = true;\n\t\twhile(change)\n\t\t{\n\t\t\tchange = false;\n\t\t\tfor(int x = 0; x < SIZE; ++x)\n\t\t\t\tfor(int y = 0; y < SIZE; ++y)\n\t\t\t\t\tif(table[x][y] >= 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tint g = table[x][y] / 4;\n\t\t\t\t\t\ttable[x][y] %= 4;\n\t\t\t\t\t\ttable[x - 1][y] += g;\n\t\t\t\t\t\ttable[x + 1][y] += g;\n\t\t\t\t\t\ttable[x][y - 1] += g;\n\t\t\t\t\t\ttable[x][y + 1] += g;\n\t\t\t\t\t\tchange = true;\n\t\t\t\t\t}\n\t\t}\n\t\t\n\t\tStringBuilder sb = new StringBuilder();\n\n\t\tfor (int i = 0; i < t; ++i)\n\t\t{\n\t\t\tint x = in.nextInt();\n\t\t\tint y = in.nextInt();\n\t\t\tif(x > -SIZE / 2 && x < SIZE / 2 && y > -SIZE / 2 && y < SIZE / 2)\n\t\t\t\tsb.append(table[SIZE / 2 + x][SIZE / 2 + y] + \"\\n\");\n\t\t\telse\n\t\t\t\tsb.append(\"0\\n\");\n\t\t}\n\t\tSystem.out.print(sb);\n\t\tSystem.out.flush();\n\t\tin.close();\n\t}\n\n\tprivate static final int SIZE = 130;\n\tprivate static int[][] table = new int[SIZE][SIZE];\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstruct node {\n  int x, y;\n} e[110000];\nint a[1100][1100], b, c, d, f, g, h, i, j, k, m, n;\nint use[1100][1100];\nvoid add(int x, int y, int v) {\n  if (x > d) d = x;\n  if (!use[x][y]) {\n    m++;\n    e[m].x = x;\n    e[m].y = y;\n    use[x][y] = 1;\n  }\n  a[x][y] += v;\n}\nvoid deal() {\n  m = 0;\n  scanf(\"%d%d\", &n, &h);\n  a[500][500] = n;\n  m++;\n  e[1].x = 500;\n  e[1].y = 500;\n  use[500][500] = 1;\n  f = 1;\n  while (f) {\n    f = 0;\n    for (i = 1; i <= m; i++)\n      if (a[e[i].x][e[i].y] >= 4) {\n        b = a[e[i].x][e[i].y] / 4;\n        add(e[i].x + 1, e[i].y, b);\n        add(e[i].x - 1, e[i].y, b);\n        add(e[i].x, e[i].y + 1, b);\n        add(e[i].x, e[i].y - 1, b);\n        a[e[i].x][e[i].y] %= 4;\n        f = 1;\n      }\n  }\n  for (i = 1; i <= h; i++) {\n    scanf(\"%d%d\", &c, &d);\n    if (c + 500 < 0 || c + 500 > 1000 || d + 500 < 0 || d + 500 > 1000)\n      printf(\"%d\\n\", 0);\n    else\n      printf(\"%d\\n\", a[500 + c][500 + d]);\n  }\n}\nint main() {\n  deal();\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int d = 200;\nconst int X[4] = {-1, 1, 0, 0};\nconst int Y[4] = {0, 0, 1, -1};\nint n, t, x, y, tx, ty, dk;\nint a[2 * d + 10][2 * d + 10];\nbool use[2 * d + 10][2 * d + 10];\nqueue<pair<int, int> > q;\nint main() {\n  cin >> n >> t;\n  a[d][d] = n;\n  q.push(make_pair(d, d));\n  use[d][d] = 1;\n  while (!q.empty()) {\n    tx = q.front().first, ty = q.front().second;\n    q.pop();\n    use[tx][ty] = 0;\n    if (a[tx][ty] < 4) continue;\n    dk = a[tx][ty] / 4;\n    a[tx][ty] -= 4 * dk;\n    for (int i = 0; i < 4; i++) {\n      a[tx + X[i]][ty + Y[i]] += dk;\n      if (a[tx + X[i]][ty + Y[i]] >= 4 && use[tx + X[i]][ty + Y[i]] == 0) {\n        q.push(make_pair(tx + X[i], ty + Y[i]));\n        use[tx + X[i]][ty + Y[i]] == 1;\n      }\n    }\n  }\n  for (int i = 0; i < t; i++) {\n    scanf(\"%d%d\", &x, &y);\n    x += d, y += d;\n    if (x <= 0 || y <= 0 || x >= 2 * d || y >= 2 * d)\n      printf(\"%d\\n\", 0);\n    else\n      printf(\"%d\\n\", a[x][y]);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.LinkedList;\nimport java.util.Scanner;\nimport java.util.StringTokenizer;\nimport java.util.TreeSet;\n\n\npublic class D {\n\tpublic static void main(String[] args) throws Throwable{\n\t\tBufferedReader in=new BufferedReader(new InputStreamReader(System.in));\n\t\tStringBuilder sb=new StringBuilder();\n\t\tStringTokenizer st=new StringTokenizer(in.readLine());\n\t\tint N=Integer.parseInt(st.nextToken()),t=Integer.parseInt(st.nextToken());\n\t\tint[][] size=new int[200][200];\n\t\tint[] cola=new int[23857332];\n\t\tint p=0,c=0;\n\t\tsize[size.length/2][size.length/2]=N;\n\t\tif(N>=4)cola[c++]=((size.length/2)<<8)|(size.length/2);\n\t\tfor(int i,j;p<c;) {\n\t\t\tint a=cola[p++];\n\t\t\tj=(a%(1<<8));\n\t\t\ti=a>>8;\n\t\t\tif(size[i][j]>=4) {\n\t\t\t\tsize[i+1][j]+=(size[i][j]/4);\n\t\t\t\tsize[i-1][j]+=(size[i][j]/4);\n\t\t\t\tsize[i][j-1]+=(size[i][j]/4);\n\t\t\t\tsize[i][j+1]+=(size[i][j]/4);\n\t\t\t\tsize[i][j]=size[i][j]%4;\n\t\t\t\tif(size[i+1][j]>=4)cola[c++]=(((i+1)<<8)|j);\n\t\t\t\tif(size[i-1][j]>=4)cola[c++]=(((i-1)<<8)|j);\n\t\t\t\tif(size[i][j-1]>=4)cola[c++]=((i<<8)|(j-1));\n\t\t\t\tif(size[i][j+1]>=4)cola[c++]=((i<<8)|(j+1));\n\t\t\t}\n\t\t}\n\t\t//System.out.println((T-System.currentTimeMillis())+\" \"+cont);\n\t\tfor(int i=0;i<t;i++) {\n\t\t\tst=new StringTokenizer(in.readLine());\n\t\t\tint x=Integer.parseInt(st.nextToken()),y=Integer.parseInt(st.nextToken());\n\t\t\tx+=size.length/2;y+=size.length/2;\n\t\t\tif(x>=0&&x<size.length&&y>=0&&y<size.length)sb.append(size[x][y]);\n\t\t\telse sb.append(0);\n\t\t\tsb.append(\"\\n\");\n\t\t}\n\t\tSystem.out.print(new String(sb));\n\t}\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid solve() {\n  int n, t;\n  scanf(\"%d%d\", &n, &t);\n  vector<vector<int>> m(400, vector<int>(400));\n  queue<pair<int, int>> q;\n  q.push(pair<int, int>(0, 0));\n  m[200][200] = n;\n  while (q.size()) {\n    pair<int, int> pos = q.front();\n    q.pop();\n    int x = pos.first;\n    int y = pos.second;\n    int v = m[200 + x][200 + y];\n    if (v < 4) continue;\n    m[200 + x][200 + y] = v % 4;\n    v /= 4;\n    int z = (m[200 + x + 1][200 + y] += v);\n    if (z >= 4 && z - v < 4) q.push(pair<int, int>(x + 1, y));\n    z = (m[200 + x][200 + y + 1] += v);\n    if (z >= 4 && z - v < 4) q.push(pair<int, int>(x, y + 1));\n    z = (m[200 + x - 1][200 + y] += v);\n    if (z >= 4 && z - v < 4) q.push(pair<int, int>(x - 1, y));\n    z = m[200 + x][200 + y - 1] += v;\n    if (z >= 4 && z - v < 4) q.push(pair<int, int>(x, y - 1));\n  }\n  for (int i = 0; i < t; ++i) {\n    int x, y;\n    scanf(\"%d%d\", &x, &y);\n    if (x + 200 >= 0 && x + 200 < 400 && y + 200 >= 0 && y + 200 <= 400) {\n      printf(\"%d\\n\", m[x + 200][y + 200]);\n    } else {\n      printf(\"0\\n\");\n    }\n  }\n}\nint main() {\n  solve();\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxk = 140;\ntypedef int mang[2][maxk][maxk];\nint n, q, v = 0;\nmang a;\nvoid loang() {\n  int dung = 1;\n  do {\n    v = 1 - v;\n    dung = 0;\n    for (int i = 1; i <= maxk - 2; i++)\n      for (int j = 1; j <= maxk - 2; j++) {\n        a[v][i][j] = a[1 - v][i + 1][j] / 4 + a[1 - v][i - 1][j] / 4 +\n                     a[1 - v][i][j + 1] / 4 + a[1 - v][i][j - 1] / 4 +\n                     a[1 - v][i][j] % 4;\n        int t = a[v][i][j] / 4;\n        dung = t || dung;\n      }\n  } while (dung);\n}\nint main() {\n  scanf(\"%d\", &n);\n  a[0][maxk / 2][maxk / 2] = n;\n  loang();\n  scanf(\"%d\", &q);\n  int x, y;\n  for (int i = 0; i < q; i++) {\n    scanf(\"%d%d\", &x, &y);\n    if (x > -maxk / 2 && x < maxk / 2 && y > -maxk / 2 && y < maxk / 2)\n      printf(\"%d\\n\", a[v][x + maxk / 2][y + maxk / 2]);\n    else\n      printf(\"0\\n\");\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.IOException;\nimport java.io.OutputStreamWriter;\nimport java.io.BufferedWriter;\nimport java.util.InputMismatchException;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.NoSuchElementException;\nimport java.io.Writer;\nimport java.math.BigInteger;\nimport java.io.InputStream;\n\n\npublic class ANTS {\n\tpublic static void main(String[] args) {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tInputReader in = new InputReader(inputStream);\n\t\tOutputWriter out = new OutputWriter(outputStream);\n\t\tTaskB solver = new TaskB();\n\t\tsolver.solve(1, in, out);\n\t\tout.close();\n\t}\n}\n\nclass TaskB {\n    public void solve(int testNumber, InputReader in, OutputWriter out) {\n\t\tint count = in.readInt();\n\t\tint n = 70;\n\t\tint[][] answer = new int[2 * n + 1][2 * n + 1];\n\t\tanswer[n][n] = count;\n\t\twhile (true) {\n\t\t\tboolean update = false;\n\t\t\tfor (int i = 0; i <= 2 * n; i++) {\n\t\t\t\tfor (int j = 0; j <= 2 * n; j++) {\n\t\t\t\t\tif (answer[i][j] >= 4) {\n\t\t\t\t\t\tupdate = true;\n\t\t\t\t\t\tanswer[i - 1][j] += answer[i][j] >> 2;\n\t\t\t\t\t\tanswer[i + 1][j] += answer[i][j] >> 2;\n\t\t\t\t\t\tanswer[i][j - 1] += answer[i][j] >> 2;\n\t\t\t\t\t\tanswer[i][j + 1] += answer[i][j] >> 2;\n\t\t\t\t\t\tanswer[i][j] &= 3;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!update)\n\t\t\t\tbreak;\n\t\t}\n\t\t\n\n\t\t\n\t\tint queryCount = in.readInt();\n\t\tfor (int i = 0; i < queryCount; i++) {\n\t\t\tint x = in.readInt();\n\t\t\tint y = in.readInt();\n\t\t\tif (Math.abs(x) <= n && Math.abs(y) <= n)\n\t\t\t\tout.printLine(answer[x + n][y + n]);\n\t\t\telse\n\t\t\t\tout.printLine(0);\n\t\t}\n\t}\n}\n\nclass InputReader {\n\n\tprivate InputStream stream;\n\tprivate byte[] buf = new byte[1024];\n\tprivate int curChar;\n\tprivate int numChars;\n\tprivate SpaceCharFilter filter;\n\n\tpublic InputReader(InputStream stream) {\n\t\tthis.stream = stream;\n\t}\n\n\tpublic int read() {\n\t\tif (numChars == -1)\n\t\t\tthrow new InputMismatchException();\n\t\tif (curChar >= numChars) {\n\t\t\tcurChar = 0;\n\t\t\ttry {\n\t\t\t\tnumChars = stream.read(buf);\n\t\t\t} catch (IOException e) {\n\t\t\t\tthrow new InputMismatchException();\n\t\t\t}\n\t\t\tif (numChars <= 0)\n\t\t\t\treturn -1;\n\t\t}\n\t\treturn buf[curChar++];\n\t}\n\n\tpublic int readInt() {\n\t\tint c = read();\n\t\twhile (isSpaceChar(c))\n\t\t\tc = read();\n\t\tint sgn = 1;\n\t\tif (c == '-') {\n\t\t\tsgn = -1;\n\t\t\tc = read();\n\t\t}\n\t\tint res = 0;\n\t\tdo {\n\t\t\tif (c < '0' || c > '9')\n\t\t\t\tthrow new InputMismatchException();\n\t\t\tres *= 10;\n\t\t\tres += c - '0';\n\t\t\tc = read();\n\t\t} while (!isSpaceChar(c));\n\t\treturn res * sgn;\n\t}\n\n\tpublic boolean isSpaceChar(int c) {\n\t\tif (filter != null)\n\t\t\treturn filter.isSpaceChar(c);\n\t\treturn isWhitespace(c);\n\t}\n\n\tpublic static boolean isWhitespace(int c) {\n\t\treturn c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n\t}\n\n\tpublic interface SpaceCharFilter {\n\t\tpublic boolean isSpaceChar(int ch);\n\t}\n}\n\nclass OutputWriter {\n\tprivate final PrintWriter writer;\n\n\tpublic OutputWriter(OutputStream outputStream) {\n\t\twriter = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));\n\t}\n\n\tpublic OutputWriter(Writer writer) {\n\t\tthis.writer = new PrintWriter(writer);\n\t}\n\n\tpublic void print(Object...objects) {\n\t\tfor (int i = 0; i < objects.length; i++) {\n\t\t\tif (i != 0)\n\t\t\t\twriter.print(' ');\n\t\t\twriter.print(objects[i]);\n\t\t}\n\t}\n\n    public void printLine(Object...objects) {\n\t\tprint(objects);\n\t\twriter.println();\n\t}\n\n\tpublic void close() {\n\t\twriter.close();\n\t}\n\n\t}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint grid[500][500];\nvoid remplissage(int m, int n, int k) {\n  grid[m][n] += k;\n  if (grid[m][n] < 4) return;\n  grid[m][n] -= 4;\n  remplissage(m, n, 0);\n  remplissage(m + 1, n, 1);\n  remplissage(m - 1, n, 1);\n  remplissage(m, n + 1, 1);\n  remplissage(m, n - 1, 1);\n  return;\n}\nint main(int argc, char *argv[]) {\n  int n(0);\n  int t(0);\n  scanf(\"%d%d\", &n, &t);\n  remplissage(250, 250, n);\n  int x(0);\n  int y(0);\n  for (int i = 0; i < t; i++) {\n    scanf(\"%d%d\", &x, &y);\n    if (x > 250 || y > 250 || x < -250 || y < -250)\n      printf(\"%d\\n\", 0);\n    else\n      printf(\"%d\\n\", grid[250 + x][250 + y]);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ninline int in() {\n  int x;\n  scanf(\"%d\", &x);\n  return x;\n}\nconst long double EPS = 1e-12;\nconst int INF = 1e9 + 10;\nconst long long LINF = 1000ll * 1000 * 1000 * 1000 * 1000 * 1000 + 100;\nconst int MN = 4e2 + 10;\nint arr[MN][MN];\nint x[4] = {1, 0, -1, 0};\nint y[4] = {0, 1, 0, -1};\nvoid dfs(int r, int c) {\n  if (arr[r][c] < 4) return;\n  int d = arr[r][c] / 4;\n  arr[r][c] %= 4;\n  for (int i = 0; i < 4; ++i) {\n    int t1 = r + x[i], t2 = c + y[i];\n    arr[t1][t2] += d;\n    dfs(t1, t2);\n  }\n}\nint main() {\n  ios_base ::sync_with_stdio(false), cin.tie(0), cout.tie(0);\n  int n, q;\n  cin >> n >> q;\n  arr[200][200] = n;\n  dfs(200, 200);\n  int r, c;\n  while (q--) {\n    cin >> r >> c;\n    if (max(r, c) > 200 || min(r, c) < -200)\n      cout << 0 << '\\n';\n    else\n      cout << arr[r + 200][c + 200] << '\\n';\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint dx[] = {0, 0, 1, -1, 1, -1, 1, -1};\nint dy[] = {1, -1, 0, 0, -1, 1, 1, -1};\nlong long gcd(long long a, long long b) { return !b ? a : gcd(b, a % b); }\nlong long lcm(long long a, long long b) { return (a / gcd(a, b)) * b; }\nvoid PLAY() {\n  cout << fixed << setprecision(10);\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n}\nint res[1005][1005];\nint main() {\n  PLAY();\n  int n, t;\n  cin >> n >> t;\n  queue<pair<int, int>> qu;\n  qu.push({0, 0});\n  res[300][300] = n;\n  while ((int)qu.size()) {\n    int curx = qu.front().first;\n    int cury = qu.front().second;\n    qu.pop();\n    if (res[curx + 300][cury + 300] < 4) continue;\n    for (int k = 0; k < 4; k++) {\n      int tox = dx[k] + curx;\n      int toy = dy[k] + cury;\n      res[tox + 300][toy + 300] += res[curx + 300][cury + 300] / 4;\n      if (res[tox + 300][toy + 300] >= 4) qu.push({tox, toy});\n    }\n    res[curx + 300][cury + 300] %= 4;\n  }\n  while (t--) {\n    int x, y;\n    cin >> x >> y;\n    if (abs(x) >= 300 || abs(y) >= 300)\n      cout << 0 << endl;\n    else\n      cout << res[x + 300][y + 300] << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.BufferedReader;\nimport java.io.File;\nimport java.io.FileReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\n\npublic class Ants {\n\n\tstatic final int[] dx = { 1, 0, -1, 0 };\n\tstatic final int[] dy = { 0, 1, 0, -1 };\n\n\tstatic final int N = 301;\n\tstatic final int OFFSET = 100;\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tMyScanner sc = new MyScanner(System.in);\n\t\tPrintWriter out = new PrintWriter(System.out);\n\t\tint n = sc.nextInt();\n\t\tint[][] g = new int[N][N];\n\t\tg[OFFSET][OFFSET] = n;\n\t\twhile (true) {\n\t\t\tboolean f = true;\n\t\t\tfor (int i = 0; i < N; i++)\n\t\t\t\tfor (int j = 0; j < N; j++) {\n\t\t\t\t\tif (g[i][j] >= 4) {\n\t\t\t\t\t\tf = false;\n\t\t\t\t\t\tfor (int k = 0; k < 4; k++) {\n\t\t\t\t\t\t\tint r = i + dx[k], c = j + dy[k];\n\t\t\t\t\t\t\tg[r][c] += (g[i][j] / 4);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tg[i][j] %= 4;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\tif (f)\n\t\t\t\tbreak;\n\t\t}\n\t\tint t = sc.nextInt();\n\t\twhile (t-- > 0) {\n\t\t\tint x = sc.nextInt() + OFFSET, y = sc.nextInt() + OFFSET;\n\t\t\tif (x < 0 || x > N || y < 0 || y > N)\n\t\t\t\tout.println(0);\n\t\t\telse\n\t\t\t\tout.println(g[x][y]);\n\t\t}\n\t\tout.flush();\n\t\tout.close();\n\t}\n\n\tstatic class MyScanner {\n\n\t\tBufferedReader br;\n\t\tStringTokenizer st;\n\n\t\tMyScanner(InputStream is) {\n\t\t\tbr = new BufferedReader(new InputStreamReader(is));\n\t\t}\n\n\t\tMyScanner(String filename) throws IOException {\n\t\t\tbr = new BufferedReader(new FileReader(new File(filename)));\n\t\t}\n\n\t\tString next() throws IOException {\n\t\t\twhile (st == null || !st.hasMoreTokens())\n\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tint nextInt() throws IOException {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tlong nextLong() throws IOException {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\t}\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a, b, x, y;\nint v[1005][1005];\nvoid tp(int m, int n, int k) {\n  v[m][n] += k;\n  if (v[m][n] < 4) return;\n  v[m][n] -= 4;\n  tp(m, n, 0);\n  tp(m + 1, n, 1);\n  tp(m - 1, n, 1);\n  tp(m, n + 1, 1);\n  tp(m, n - 1, 1);\n  return;\n}\nint main() {\n  scanf(\"%d %d\", &a, &b);\n  tp(500, 500, a);\n  for (int j = 0; j < b; j++) {\n    scanf(\"%d %d\", &x, &y);\n    if (x > 500 || y > 500 || x < -500 || y < -500) {\n      printf(\"0\\n\");\n      continue;\n    }\n    printf(\"%d\\n\", v[x + 500][y + 500]);\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint v[1000][1000];\nint dx[4] = {1, -1, 0, 0};\nint dy[4] = {0, 0, -1, 1};\nvoid put(int x, int y, int n) {\n  v[x][y] += n;\n  if (v[x][y] >= 4) {\n    int t = v[x][y] / 4;\n    v[x][y] -= t * 4;\n    for (int i = 0; i < 4; i++) put(x + dx[i], y + dy[i], t);\n  }\n}\nint main() {\n  memset(v, 0, 0);\n  int n, k;\n  scanf(\"%d%d\", &n, &k);\n  put(500, 500, n);\n  for (int i = 0; i < k; i++) {\n    int x, y;\n    scanf(\"%d%d\", &x, &y);\n    x += 500;\n    y += 500;\n    if (x < 0 || y < 0 || x > 999 || y > 999)\n      printf(\"0\\n\");\n    else\n      printf(\"%d\\n\", v[x][y]);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.util.InputMismatchException;\nimport java.io.BufferedReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.io.Writer;\nimport java.util.StringTokenizer;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n * @author RiaD\n */\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tReader in = new Reader(inputStream);\n\t\tOutputWriter out = new OutputWriter(outputStream);\n\t\tTaskB solver = new TaskB();\n\t\tsolver.solve(1, in, out);\n\t\tout.close();\n\t}\n}\n\nclass TaskB {\n\n    private static final int MAGIC = 100;\n    private static final int SIZE = 2 * MAGIC + 1;\n\n    public void solve(int testNumber, Reader in, OutputWriter out) {\n\n        int[][] map = new int[SIZE][SIZE];\n        map[MAGIC][MAGIC] = in.nextInt();\n        boolean changed = true;\n        while (changed) {\n            changed = false;\n            for(int i = 0; i < SIZE; ++i)\n                for(int j = 0; j < SIZE; ++j) {\n                    if(map[i][j] >= 4) {\n                        map[i - 1][j] += map[i][j] / 4;\n                        map[i + 1][j] += map[i][j] / 4;\n                        map[i][j - 1] += map[i][j] / 4;\n                        map[i][j + 1] += map[i][j] / 4;\n                        map[i][j] %= 4;\n                        changed = true;\n\n                    }\n                }\n        }\n\n        long t = in.nextLong();\n        for(int i = 0; i < t; ++i) {\n            int x = in.nextInt();\n            int y = in.nextInt();\n            if(x + MAGIC < 0 || x + MAGIC >= SIZE || y  + MAGIC < 0 || y + MAGIC >= SIZE)\n                out.println(0);\n            else\n                out.println(map[x + MAGIC][y + MAGIC]);\n        }\n    }\n}\n\nclass Reader {\n    private BufferedReader reader;\n    private StringTokenizer tokenizer;\n\n    public Reader(BufferedReader reader) {\n        this.reader = reader;\n    }\n\n    public Reader(InputStream stream) {\n        this(new BufferedReader(new InputStreamReader(stream)));\n    }\n\n    public String nextString() {\n        while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n            tokenizer = new StringTokenizer(readLine());\n        }\n        return tokenizer.nextToken();\n    }\n\n    public int nextInt() {\n        return Integer.parseInt(nextString());\n    }\n\n    public long nextLong() {\n        return Long.parseLong(nextString());\n    }\n\n    private String readLine() {\n        try {\n            return reader.readLine();\n        } catch (IOException e) {\n            throw new RuntimeException(e);\n        }\n    }\n}\n\nclass OutputWriter extends PrintWriter {\n\n\tpublic OutputWriter(OutputStream out) {\n\t\tsuper(out);\n\t}\n\n\tpublic OutputWriter(java.io.Writer writer){\n\t\tsuper(writer);\n\t}\n\n\t}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint v[1005][1005] = {0};\nvoid dfs(int a, int b, int k) {\n  v[a][b] += k;\n  if (v[a][b] < 4) return;\n  v[a][b] -= 4;\n  dfs(a, b, 0);\n  dfs(a + 1, b, 1);\n  dfs(a, b + 1, 1);\n  dfs(a - 1, b, 1);\n  dfs(a, b - 1, 1);\n}\nint main() {\n  int n, m;\n  cin >> n >> m;\n  dfs(500, 500, n);\n  while (m--) {\n    int a, b;\n    cin >> a >> b;\n    if (a > 500 || a < -500 || b > 500 || b < -500)\n      printf(\"%d\\n\", 0);\n    else\n      printf(\"%d\\n\", v[a + 500][b + 500]);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\n#pragma GCC optimize(3)\nusing namespace std;\nconst int maxn = (int)1e5 + 5;\nconst int mod = (int)1e9 + 7;\nint n, m, k, l, s, t, r;\nint q[2000][2000];\nint ok[2000][2000];\nvector<pair<int, int> > now, tmp;\nint main() {\n  cin >> n >> t;\n  q[1000][1000] = n;\n  if (n >= 4) now.push_back({1000, 1000});\n  int u = 0;\n  while (now.size() != 0) {\n    u++;\n    tmp.clear();\n    for (auto i : now) {\n      if (q[i.first][i.second] < 4) continue;\n      q[i.first][i.second] -= 4;\n      q[i.first - 1][i.second]++;\n      q[i.first + 1][i.second]++;\n      q[i.first][i.second + 1]++;\n      q[i.first][i.second - 1]++;\n      if (q[i.first][i.second] >= 4 && ok[i.first][i.second] != u)\n        tmp.push_back(i), ok[i.first][i.second] = u;\n      if (q[i.first - 1][i.second] >= 4 && ok[i.first - 1][i.second] != u)\n        tmp.push_back({i.first - 1, i.second}), ok[i.first - 1][i.second] = u;\n      if (q[i.first][i.second + 1] >= 4 && ok[i.first][i.second + 1] != u)\n        tmp.push_back({i.first, i.second + 1}), ok[i.first][i.second + 1] = u;\n      if (q[i.first + 1][i.second] >= 4 && ok[i.first + 1][i.second] != u)\n        tmp.push_back({i.first + 1, i.second}), ok[i.first + 1][i.second] = u;\n      if (q[i.first][i.second - 1] >= 4 && ok[i.first][i.second - 1] != u)\n        tmp.push_back({i.first, i.second - 1}), ok[i.first][i.second - 1] = u;\n    }\n    now = tmp;\n  }\n  while (t--) {\n    cin >> l >> r;\n    l += 1000;\n    r += 1000;\n    if (l < 0 || r < 0 || l >= 2000 || r >= 2000)\n      cout << 0 << endl;\n    else\n      cout << q[l][r] << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int INF = 0x3f3f3f3f;\nconst int M = 100;\nconst int mod = 1e9 + 7;\nconst double eps = 1e-6;\nconst double Pi = 3 * acos(0.0);\ninline int max(int a, int b) { return a > b ? a : b; }\ninline int min(int a, int b) { return a < b ? a : b; }\ninline int bit(int x) { return 1 << x; }\ninline double dabs(double x) { return x > 0 ? x : (-x); }\ninline int iabs(int x) { return x > 0 ? x : (-x); }\ninline int lowbit(int x) { return x & (-x); }\ntemplate <class T>\ninline void checkmin(T &a, T b) {\n  if (a == -1 || b < a) a = b;\n}\nint ma[M * 2][M * 2];\nvoid dfs(int x, int y) {\n  if (ma[x][y] >= 4) {\n    int t = ma[x][y] / 4;\n    ma[x][y] %= 4;\n    ma[x + 1][y] += t;\n    dfs(x + 1, y);\n    ma[x - 1][y] += t;\n    dfs(x - 1, y);\n    ma[x][y + 1] += t;\n    dfs(x, y + 1);\n    ma[x][y - 1] += t;\n    dfs(x, y - 1);\n  }\n}\nint main() {\n  int n, t, x, y;\n  cin >> n >> t;\n  ma[M][M] = n;\n  dfs(M, M);\n  while (t--) {\n    cin >> x >> y;\n    if (x >= M || x <= -M || y >= M || y <= -M)\n      cout << 0 << endl;\n    else\n      cout << ma[x + M][y + M] << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, t;\nint a[200][200], off = 100;\nint main() {\n  cin >> n >> t;\n  a[off][off] = n;\n  while (true) {\n    bool seen = false;\n    for (int i = 1; i < 200 - 1; i++) {\n      for (int j = 1; j < 200 - 1; j++) {\n        if (a[i][j] >= 4) {\n          seen = true;\n          int flow = a[i][j] / 4;\n          a[i][j] %= 4;\n          a[i - 1][j] += flow;\n          a[i + 1][j] += flow;\n          a[i][j - 1] += flow;\n          a[i][j + 1] += flow;\n        }\n      }\n    }\n    if (!seen) break;\n  }\n  for (int i = 0; i < (t); i++) {\n    int first, second;\n    cin >> first >> second;\n    if (0 <= first + off && first + off < 200 && 0 < second + off &&\n        second + off < 200) {\n      cout << a[first + off][second + off] << endl;\n    } else {\n      cout << 0 << endl;\n    }\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst double PI = 3.14159265358979323;\nconst double eps = 1e-12;\nconst int inf = ((int)1e9) + 7;\nconst int MAX_N = 2000000;\nint arr[660][660];\nvoid rec(int i, int j) {\n  if (arr[i][j] == 3) {\n    arr[i][j] = 0;\n    rec(i - 1, j);\n    rec(i + 1, j);\n    rec(i, j + 1);\n    rec(i, j - 1);\n  } else\n    arr[i][j]++;\n}\nint main() {\n  int n, k;\n  cin >> n >> k;\n  for (int i = 0; i < n; i++) rec(330, 330);\n  for (int i = 0; i < k; i++) {\n    int x, y;\n    cin >> x >> y;\n    x += 330, y += 330;\n    if (x < 0 || y < 0 || x > 650 || y > 650) {\n      cout << 0 << endl;\n      continue;\n    }\n    cout << arr[x][y] << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\n#pragma comment(linker, \"/STACK:268435456\")\nint main() {\n  int n;\n  cin >> n;\n  int mp[201][201];\n  for (int i = 0; i < 200; i++)\n    for (int j = 0; j < 200; j++) mp[i][j] = 0;\n  mp[0][0] = n;\n  bool ch = 0;\n  do {\n    ch = 0;\n    for (int i = 0; i < 150; i++)\n      for (int j = 0; j < 150; j++) {\n        if (mp[i][j] >= 4) {\n          mp[i + 1][j] += mp[i][j] / 4;\n          mp[i][j + 1] += mp[i][j] / 4;\n          if (i != 0) mp[i - 1][j] += mp[i][j] / 4;\n          if (j != 0) mp[i][j - 1] += mp[i][j] / 4;\n          if (i == 1) mp[i - 1][j] += mp[i][j] / 4;\n          if (j == 1) mp[i][j - 1] += mp[i][j] / 4;\n          ch = 1;\n          mp[i][j] %= 4;\n        }\n      }\n  } while (ch);\n  int t;\n  cin >> t;\n  for (int i = 0; i < t; i++) {\n    int a, b;\n    cin >> a >> b;\n    if ((abs(a) > 150) || (abs(b) > 150))\n      cout << 0 << endl;\n    else\n      cout << mp[abs(a)][abs(b)] << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 131;\nconst int ox = 65;\nconst int oy = 65;\nint a[MAXN][MAXN], b[MAXN][MAXN];\nint dx[] = {0, 0, -1, 1};\nint dy[] = {1, -1, 0, 0};\nvoid init() {\n  memset(b, 0, sizeof(b));\n  int p = MAXN - 1;\n  bool ok = false;\n  for (int i = 1; i <= p; i++)\n    for (int j = 1; j <= p; j++)\n      if (a[i][j] > 3) {\n        for (int k = 0; k < 4; k++) b[i + dx[k]][j + dy[k]] += a[i][j] / 4;\n        b[i][j] -= a[i][j] / 4 * 4;\n      }\n  for (int i = 1; i <= p; i++)\n    for (int j = 1; j <= p; j++) {\n      a[i][j] += b[i][j];\n      if (a[i][j] > 3) ok = true;\n    }\n  if (ok) init();\n}\nint main() {\n  int n, m, x, y;\n  while (cin >> n >> m) {\n    a[ox][oy] = n;\n    init();\n    while (m--) {\n      scanf(\"%d%d\", &x, &y);\n      x += ox;\n      y += oy;\n      if (x >= MAXN || y >= MAXN || x < 0 || y < 0)\n        puts(\"0\");\n      else\n        printf(\"%d\\n\", a[x][y]);\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, t;\nint T[5000][5000];\nint used[5000][5000];\nqueue<pair<int, int> > Q;\nvoid solve() {\n  T[2500][2500] = n;\n  if (n >= 4) Q.push(pair<int, int>(2500, 2500));\n  while (!Q.empty()) {\n    pair<int, int> p = Q.front();\n    Q.pop();\n    int x = p.first, y = p.second;\n    int i = T[x][y] / 4;\n    T[x][y - 1] += i;\n    T[x][y + 1] += i;\n    T[x - 1][y] += i;\n    T[x + 1][y] += i;\n    T[x][y] %= 4;\n    if (T[x][y - 1] >= 4 && used[x][y - 1] == 0) {\n      used[x][y - 1] = 1;\n      Q.push(pair<int, int>(x, y - 1));\n    }\n    if (T[x][y + 1] >= 4 && used[x][y + 1] == 0) {\n      used[x][y + 1] = 1;\n      Q.push(pair<int, int>(x, y + 1));\n    }\n    if (T[x - 1][y] >= 4 && used[x - 1][y] == 0) {\n      used[x - 1][y] = 1;\n      Q.push(pair<int, int>(x - 1, y));\n    }\n    if (T[x + 1][y] >= 4 && used[x + 1][y] == 0) {\n      used[x + 1][y] = 1;\n      Q.push(pair<int, int>(x + 1, y));\n    }\n    used[x][y] = 0;\n  }\n}\nvoid write_output(int x, int y) {\n  if (x > 1000 || y > 1000 || x < -1000 || y < -1000)\n    printf(\"0\\n\");\n  else\n    printf(\"%d\\n\", T[x + 2500][y + 2500]);\n}\nvoid read_input() {\n  scanf(\"%d%d\", &n, &t);\n  solve();\n  int x, y;\n  for (int i = 0; i < t; i++) {\n    scanf(\"%d%d\", &x, &y);\n    write_output(x, y);\n  }\n}\nint main() {\n  read_input();\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "/*\n * To change this template, choose Tools | Templates\n * and open the template in the editor.\n */\n\nimport java.io.*;\nimport java.util.*;\n/**\n *\n * @author Rohan\n */\npublic class Main {\n\n    /**\n     * @param args the command line arguments\n     */\n    static int[][] val;\n    public static void main(String[] args) throws IOException {\n        // TODO code application logic here\n        input();\n        \n    }\n    \n    public static void input() throws IOException{\n        val=new int[201][201];\n        InputReader188D in=new InputReader188D(System.in);\n        PrintWriter out=new PrintWriter(System.out);\n        int n,t,a,b;\n        n=in.readInt(); t=in.readInt();\n        dfs(100,100,n);\n        for(int i=0;i<t;i++){\n            a=in.readInt(); b=in.readInt();\n            if(a<-100 || b<-100 || a>100 || b>100) out.println(0);\n            else out.println(val[a+100][b+100]);\n        }\n        out.flush();\n        out.close();\n    }\n    \n    public static void dfs(int x,int y,int v){\n        if(v==0 || x<0 || y<0 || x>200 || y>200) return;\n        val[x][y]+=v;\n        if(val[x][y]<4) return;\n        int carry=val[x][y]/4;\n        val[x][y]%=4;\n        dfs(x-1,y,carry);\n        dfs(x+1,y,carry);\n        dfs(x,y+1,carry);\n        dfs(x,y-1,carry);\n    }\n}\n\nclass InputReader188D {\n\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private SpaceCharFilter filter;\n\n        public InputReader188D(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int read() {\n            if (numChars == -1)\n                throw new InputMismatchException();\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (numChars <= 0)\n                    return -1;\n            }\n            return buf[curChar++];\n        }\n\n        public int readInt() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do {\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n                \n                public long readLong() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            long sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            long res = 0;\n            do {\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public String readString() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            StringBuilder res = new StringBuilder();\n            do {\n                res.appendCodePoint(c);\n                c = read();\n            } while (!isSpaceChar(c));\n            return res.toString();\n        }\n\n        public boolean isSpaceChar(int c) {\n            if (filter != null)\n                return filter.isSpaceChar(c);\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        public String next() {\n            return readString();\n        }\n\n        public interface SpaceCharFilter {\n            public boolean isSpaceChar(int ch);\n        }\n    }\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint cnt[1111][1111];\nbool inq[1111][1111];\nint n, t;\nqueue<pair<int, int> > q;\nconst int kFx[4] = {-1, 1, 0, 0};\nconst int kFy[4] = {0, 0, -1, 1};\nint main() {\n  scanf(\"%d%d\", &n, &t);\n  cnt[555][555] = n;\n  if (n >= 4) {\n    q.push(make_pair(555, 555));\n    inq[555][555] = true;\n  }\n  while (q.size()) {\n    pair<int, int> u = q.front();\n    q.pop();\n    int _x = u.first;\n    int _y = u.second;\n    inq[_x][_y] = false;\n    int z = cnt[_x][_y];\n    cnt[_x][_y] = z & 3;\n    for (int d = 0; d < 4; ++d) {\n      int x = _x + kFx[d];\n      int y = _y + kFy[d];\n      pair<int, int> v = make_pair(x, y);\n      cnt[x][y] += z >> 2;\n      if (!inq[x][y] && cnt[x][y] >= 4) q.push(v), inq[x][y] = true;\n    }\n  }\n  for (int x, y; t--;) {\n    scanf(\"%d%d\", &x, &y);\n    x += 555;\n    y += 555;\n    if (x < 0 || x >= 1111 || y < 0 || y >= 1111)\n      puts(\"0\");\n    else\n      printf(\"%d\\n\", cnt[x][y]);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.InputMismatchException;\nimport java.io.BufferedReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tInputReader in = new InputReader(inputStream);\n\t\tPrintWriter out = new PrintWriter(outputStream);\n\t\tTaskD solver = new TaskD();\n\t\tsolver.solve(1, in, out);\n\t\tout.close();\n\t}\n}\n\nclass TaskD {\n    final int zero = 100;\n\n    public void solve(int testNumber, InputReader in, PrintWriter out) {\n        int n = in.nextInt();\n        int t = in.nextInt();\n        int[][] a = new int[2 * zero + 1][2 * zero + 1];\n        a[zero][zero] = n;\n        boolean update = true;\n        while (update) {\n            update = false;\n            for (int i = 1; i < 2 * zero; ++i)\n                for (int j = 1; j < 2 * zero; ++j) if (a[i][j] >= 4) {\n                    a[i - 1][j] += a[i][j] >> 2;\n                    a[i + 1][j] += a[i][j] >> 2;\n                    a[i][j - 1] += a[i][j] >> 2;\n                    a[i][j + 1] += a[i][j] >> 2;\n                    a[i][j] %= 4;\n                    update = true;\n                }\n        }\n\n        while (t-- > 0) {\n            int x = in.nextInt();\n            int y = in.nextInt();\n            if (Math.abs(x) > zero || Math.abs(y) > zero)\n                out.println(0);\n            else\n                out.println(a[x + zero][y + zero]);\n        }\n    }\n}\n\nclass InputReader {\n    BufferedReader in;\n    StringTokenizer st;\n\n    public InputReader(InputStream stream) {\n        in = new BufferedReader(new InputStreamReader(stream));\n        eat(\"\");\n    }\n\n    public int nextInt() {\n        return Integer.parseInt(next());\n    }\n\n    public String next() {\n        while (!st.hasMoreTokens())\n            eat(nextLine());\n        return st.nextToken();\n    }\n\n    public String nextLine() {\n        try {\n            String str = in.readLine();\n            if (str == null) throw new InputMismatchException();\n            return str;\n        } catch (IOException e) {\n            throw new InputMismatchException();\n        }\n    }\n\n    public void eat(String str) {\n        st = new StringTokenizer(str);\n    }\n}\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <class T>\nvoid chmax(T& a, const T& b) {\n  a = max(a, b);\n}\ntemplate <class T>\nvoid chmin(T& a, const T& b) {\n  a = min(a, b);\n}\ntemplate <class T>\nvoid uniq(T& c) {\n  sort(c.begin(), c.end());\n  c.erase(unique(c.begin(), c.end()), c.end());\n}\ntemplate <class T>\nstring to_s(const T& a) {\n  ostringstream os;\n  os << a;\n  return os.str();\n}\ntemplate <class T>\nT to_T(const string& s) {\n  istringstream is(s);\n  T res;\n  is >> res;\n  return res;\n}\ntemplate <typename T>\nvoid print_container(ostream& os, const T& c) {\n  const char* _s = \" \";\n  if (!c.empty()) {\n    __typeof__(c.begin()) last = --c.end();\n    for (__typeof__((c).begin()) it = (c).begin(); it != (c).end(); ++it) {\n      os << *it;\n      if (it != last) cout << _s;\n    }\n  }\n}\ntemplate <typename T>\nostream& operator<<(ostream& os, const vector<T>& c) {\n  print_container(os, c);\n  return os;\n}\ntemplate <typename T>\nostream& operator<<(ostream& os, const set<T>& c) {\n  print_container(os, c);\n  return os;\n}\ntemplate <typename T>\nostream& operator<<(ostream& os, const multiset<T>& c) {\n  print_container(os, c);\n  return os;\n}\ntemplate <typename T>\nostream& operator<<(ostream& os, const deque<T>& c) {\n  print_container(os, c);\n  return os;\n}\ntemplate <typename T, typename U>\nostream& operator<<(ostream& os, const map<T, U>& c) {\n  print_container(os, c);\n  return os;\n}\ntemplate <typename T, typename U>\nostream& operator<<(ostream& os, const pair<T, U>& p) {\n  os << \"( \" << p.first << \", \" << p.second << \" )\";\n  return os;\n}\ntemplate <class T>\nvoid print(T a, int n, const string& deli = \" \", int br = 1) {\n  for (int i = 0; i < n; ++i) {\n    cout << a[i];\n    if (i + 1 != n) cout << deli;\n  }\n  while (br--) cout << endl;\n}\ntemplate <class T>\nvoid print2d(T a, int w, int h, int width = -1, int br = 1) {\n  for (int i = 0; i < h; ++i) {\n    for (int j = 0; j < w; ++j) {\n      if (width != -1) cout.width(width);\n      cout << a[i][j] << ' ';\n    }\n    cout << endl;\n  }\n  while (br--) cout << endl;\n}\ntemplate <class T>\nvoid input(T& a, int n) {\n  for (int i = 0; i < n; ++i) cin >> a[i];\n}\ntemplate <class T>\nvoid input(T* a, int n) {\n  for (int i = 0; i < n; ++i) cin >> a[i];\n}\nvoid fix_pre(int n) {\n  cout.setf(ios::fixed, ios::floatfield);\n  cout.precision(10);\n}\nvoid fast_io() {\n  cin.tie(0);\n  ios::sync_with_stdio(false);\n}\nbool in_rect(int x, int y, int w, int h) {\n  return 0 <= x && x < w && 0 <= y && y < h;\n}\nbool in_seg(int n, int l, int r) { return l <= n && n <= r; }\nconst int dx[] = {0, 1, 0, -1};\nconst int dy[] = {1, 0, -1, 0};\nconst double PI = acos(-1.0);\nint o = 100;\nint a[200][200];\nint& get(int x, int y) { return a[y + o][x + o]; }\nvoid simulate(int n) {\n  memset(a, 0, sizeof(a));\n  get(0, 0) = n;\n  for (;;) {\n    vector<pair<pair<int, int>, int> > add;\n    for (int y = -70; y <= 70; ++y) {\n      for (int x = -70; x <= 70; ++x) {\n        int p = get(x, y) / 4;\n        get(x, y) %= 4;\n        if (p > 0) add.push_back(make_pair(pair<int, int>(x, y), p));\n      }\n    }\n    if (add.empty()) break;\n    for (__typeof__((add).begin()) it = (add).begin(); it != (add).end();\n         ++it) {\n      for (int i = 0; i < (int)(4); ++i)\n        get(it->first.first + dx[i], it->first.second + dy[i]) += it->second;\n    }\n  }\n}\nint main() {\n  fast_io();\n  int n, q;\n  cin >> n >> q;\n  simulate(n);\n  while (q--) {\n    int x, y;\n    cin >> x >> y;\n    x = abs(x), y = abs(y);\n    int res;\n    if (max(x, y) < 70)\n      res = get(x, y);\n    else\n      res = 0;\n    cout << res << endl;\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "/* Codeforces Template */\n\nimport java.io.*;\nimport java.util.*;\n\nimport static java.lang.Math.*;\nimport static java.util.Arrays.fill;\nimport static java.util.Arrays.binarySearch;\nimport static java.util.Arrays.sort;\n\npublic class Main {\n\t\n\tstatic long initTime;\n\tstatic final Random rnd = new Random(7777L);\n\tstatic boolean writeLog = false;\n\t\n\tpublic static void main(String[] args) throws IOException {\n\t\tinitTime = System.currentTimeMillis();\n\t\ttry {\n\t\t\twriteLog = \"true\".equals(System.getProperty(\"LOCAL_RUN_7777\"));\n\t\t} catch (SecurityException e) {}\n\t\tnew Thread(null, new Runnable() {\n\t\t\tpublic void run() {\n\t\t\t\ttry {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (new File(\"input.txt\").exists())\n\t\t\t\t\t\t\tSystem.setIn(new FileInputStream(\"input.txt\"));\n\t\t\t\t\t} catch (SecurityException e) {}\n\t\t\t\t\tlong prevTime = System.currentTimeMillis();\n\t\t\t\t\tnew Main().run();\n\t\t\t\t\tlog(\"Total time: \" + (System.currentTimeMillis() - prevTime) + \" ms\");\n\t\t\t\t\tlog(\"Memory status: \" + memoryStatus());\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t}, \"1\", 1L << 24).start(); \n\t}\n\n\tvoid run() throws IOException {\n\t\tin = new BufferedReader(new InputStreamReader(System.in));\n\t\tout = new PrintWriter(System.out);\n\t\tsolve();\n\t\tout.close();\n\t\tin.close();\n\t}\n\t\n\t/*************************************************************** \n\t * Solution\n\t **************************************************************/\n\n\t\n\tfinal int MAXC = 64;\n\t\n\tvoid solve() throws IOException  {\n\t\n\t\tint[][] table = f(nextInt());\n\t\t\n\t\tfor (int T = nextInt(); T --> 0; ) {\n\t\t\tout.println(f(table, nextInt(), nextInt()));\n\t\t}\n\t\t\n\t}\n\t\n\tint f(int[][] table, int i, int j) {\n\t\ttry {\n\t\t\treturn table[i + MAXC][j + MAXC];\n\t\t} catch (ArrayIndexOutOfBoundsException e) {\n\t\t}\n\t\treturn 0;\n\t}\n\n\t\n\tint[][] f(int n) {\n\t\tint[][] table = new int [MAXC + 1 + MAXC][MAXC + 1 + MAXC];\n\t\ttable[MAXC][MAXC] = n;\n\t\t\n\t\tfor (;;) {\n\t\t\tboolean ok = false;\n\t\t\tfor (int i = 1; i + 1 < table.length; i++) {\n\t\t\t\tfor (int j = 1; j + 1 < table[i].length; j++) {\n\t\t\t\t\tif (table[i][j] >= 4) {\n\t\t\t\t\t\tmove(table, i, j);\n\t\t\t\t\t\tok = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!ok) break;\n\t\t}\n\t\n\t\tint rMin = Integer.MAX_VALUE;\n\t\tint rMax = Integer.MIN_VALUE;\n\t\tint cMin = Integer.MAX_VALUE;\n\t\tint cMax = Integer.MIN_VALUE;\n\t\t\n\t\tfor (int i = 0; i < table.length; i++) {\n\t\t\tfor (int j = 0; j < table[i].length; j++) {\n\t\t\t\tif (table[i][j] > 0) {\n\t\t\t\t\trMin = min(rMin, i);\n\t\t\t\t\trMax = max(rMax, i);\n\t\t\t\t\tcMin = min(cMin, j);\n\t\t\t\t\tcMax = max(cMax, j);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n//\t\tfor (int i = rMin; i <= rMax; i++) {\n//\t\t\tfor (int j = cMin; j <= cMax; j++) {\n////\t\t\t\tif (j > cMin) System.out.print(' ');\n//\t\t\t\tSystem.err.print(table[i][j]);\n//\t\t\t}\n//\t\t\tSystem.err.println();\n//\t\t}\n\t\t\n\t\treturn table;\n\t}\n\t\n\tvoid move(int[][] table, int i, int j) {\n\t\tint x = table[i][j] / 4;\n\t\ttable[i][j] &= 3;\n\t\ttable[i + 1][j] += x;\n\t\ttable[i - 1][j] += x;\n\t\ttable[i][j - 1] += x;\n\t\ttable[i][j + 1] += x;\n\t}\n\n\t/*************************************************************** \n\t * Input \n\t **************************************************************/\n\tBufferedReader in;\n\tPrintWriter out;\n\tStringTokenizer st = new StringTokenizer(\"\");\n\t\n\tString nextToken() throws IOException {\n\t\twhile (!st.hasMoreTokens())\n\t\t\tst = new StringTokenizer(in.readLine());\n\t\treturn st.nextToken();\n\t}\n\t\n\tint nextInt() throws IOException {\n\t\treturn Integer.parseInt(nextToken());\n\t}\n\t\n\tlong nextLong() throws IOException {\n\t\treturn Long.parseLong(nextToken());\n\t}\n\t\n\tdouble nextDouble() throws IOException {\n\t\treturn Double.parseDouble(nextToken());\n\t}\n\t\n\tint[] nextIntArray(int size) throws IOException {\n\t\tint[] ret = new int [size];\n\t\tfor (int i = 0; i < size; i++)\n\t\t\tret[i] = nextInt();\n\t\treturn ret;\n\t}\n\t\n\tlong[] nextLongArray(int size) throws IOException {\n\t\tlong[] ret = new long [size];\n\t\tfor (int i = 0; i < size; i++)\n\t\t\tret[i] = nextLong();\n\t\treturn ret;\n\t}\n\t\n\tdouble[] nextDoubleArray(int size) throws IOException {\n\t\tdouble[] ret = new double [size];\n\t\tfor (int i = 0; i < size; i++)\n\t\t\tret[i] = nextDouble();\n\t\treturn ret;\n\t}\n\t\n\tString nextLine() throws IOException {\n\t\tst = new StringTokenizer(\"\");\n\t\treturn in.readLine();\n\t}\n\t\n\tboolean EOF() throws IOException {\n\t\twhile (!st.hasMoreTokens()) {\n\t\t\tString s = in.readLine();\n\t\t\tif (s == null)\n\t\t\t\treturn true;\n\t\t\tst = new StringTokenizer(s);\n\t\t}\n\t\treturn false;\n\t}\n\t\n\t/*************************************************************** \n\t * Output \n\t **************************************************************/\n\tvoid printRepeat(String s, int count) {\n\t\tfor (int i = 0; i < count; i++)\n\t\t\tout.print(s);\n\t}\n\t\n\tvoid printArray(int[] array) {\n\t\tif (array == null || array.length == 0)\n\t\t\treturn;\n\t\tfor (int i = 0; i < array.length; i++) {\n\t\t\tif (i > 0) out.print(' ');\n\t\t\tout.print(array[i]);\n\t\t}\n\t\tout.println();\n\t}\n\t\n\tvoid printArray(long[] array) {\n\t\tif (array == null || array.length == 0)\n\t\t\treturn;\n\t\tfor (int i = 0; i < array.length; i++) {\n\t\t\tif (i > 0) out.print(' ');\n\t\t\tout.print(array[i]);\n\t\t}\n\t\tout.println();\n\t}\n\t\n\tvoid printArray(double[] array) {\n\t\tif (array == null || array.length == 0)\n\t\t\treturn;\n\t\tfor (int i = 0; i < array.length; i++) {\n\t\t\tif (i > 0) out.print(' ');\n\t\t\tout.print(array[i]);\n\t\t}\n\t\tout.println();\n\t}\n\t\n\tvoid printArray(double[] array, String spec) {\n\t\tif (array == null || array.length == 0)\n\t\t\treturn;\n\t\tfor (int i = 0; i < array.length; i++) {\n\t\t\tif (i > 0) out.print(' ');\n\t\t\tout.printf(Locale.US, spec, array[i]);\n\t\t}\n\t\tout.println();\n\t}\n\t\n\tvoid printArray(Object[] array) {\n\t\tif (array == null || array.length == 0)\n\t\t\treturn;\n\t\tboolean blank = false;\n\t\tfor (Object x : array) {\n\t\t\tif (blank) out.print(' '); else blank = true;\n\t\t\tout.print(x);\n\t\t}\n\t\tout.println();\n\t}\n\t\n\t@SuppressWarnings(\"rawtypes\")\n\tvoid printCollection(Collection collection) {\n\t\tif (collection == null || collection.isEmpty())\n\t\t\treturn;\n\t\tboolean blank = false;\n\t\tfor (Object x : collection) {\n\t\t\tif (blank) out.print(' '); else blank = true;\n\t\t\tout.print(x);\n\t\t}\n\t\tout.println();\n\t}\n\t\n\t/*************************************************************** \n\t * Utility\n\t **************************************************************/\n\tstatic String memoryStatus() {\n\t\treturn (Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory() >> 20) + \"/\" + (Runtime.getRuntime().totalMemory() >> 20) + \" MB\";\n\t}\n\t\n\tstatic void checkMemory() {\n\t\tSystem.err.println(memoryStatus());\n\t}\n\t\n\tstatic long prevTimeStamp = Long.MIN_VALUE;\n\t\n\tstatic void updateTimer() {\n\t\tprevTimeStamp = System.currentTimeMillis();\n\t}\n\t\n\tstatic long elapsedTime() {\n\t\treturn (System.currentTimeMillis() - prevTimeStamp);\n\t}\n\t\n\tstatic void checkTimer() {\n\t\tSystem.err.println(elapsedTime() + \" ms\");\n\t}\n\t\n\tstatic void chk(boolean f) {\n\t\tif (!f) throw new RuntimeException(\"Assert failed\");\n\t}\n\t\n\tstatic void chk(boolean f, String format, Object ... args) {\n\t\tif (!f) throw new RuntimeException(String.format(format, args));\n\t}\n\t\n\tstatic void log(String format, Object ... args) {\n\t\tif (writeLog) System.err.println(String.format(Locale.US, format, args));\n\t}\n\t\n\tstatic void swap(int[] a, int i, int j) {\n\t\tint tmp = a[i];\n\t\ta[i] = a[j];\n\t\ta[j] = tmp;\n\t}\n\t\n\tstatic void swap(long[] a, int i, int j) {\n\t\tlong tmp = a[i];\n\t\ta[i] = a[j];\n\t\ta[j] = tmp;\n\t}\n\t\n\tstatic void swap(double[] a, int i, int j) {\n\t\tdouble tmp = a[i];\n\t\ta[i] = a[j];\n\t\ta[j] = tmp;\n\t}\n\t\n\tstatic void shuffle(int[] a, int from, int to) {\n\t\tfor (int i = from; i < to; i++)\n\t\t\tswap(a, i, rnd.nextInt(a.length));\n\t}\n\t\n\tstatic void shuffle(long[] a, int from, int to) {\n\t\tfor (int i = from; i < to; i++)\n\t\t\tswap(a, i, rnd.nextInt(a.length));\n\t}\n\t\n\tstatic void shuffle(double[] a, int from, int to) {\n\t\tfor (int i = from; i < to; i++)\n\t\t\tswap(a, i, rnd.nextInt(a.length));\n\t}\n\t\n\tstatic void shuffle(int[] a) {\n\t\tif (a == null) return;\n\t\tshuffle(a, 0, a.length);\n\t}\n\t\n\tstatic void shuffle(long[] a) {\n\t\tif (a == null) return;\n\t\tshuffle(a, 0, a.length);\n\t}\n\t\n\tstatic void shuffle(double[] a) {\n\t\tif (a == null) return;\n\t\tshuffle(a, 0, a.length);\n\t}\n\t\n\t\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.InputMismatchException;\n\npublic class B {\n\tstatic class InputReader {\n\n\t\tprivate InputStream stream;\n\t\tprivate byte[] buf = new byte[1000];\n\t\tprivate int curChar, numChars;\n\n\t\tpublic InputReader(InputStream stream) {\n\t\t\tthis.stream = stream;\n\t\t}\n\n\t\tprivate int read() {\n\t\t\tif (numChars == -1)\n\t\t\t\tthrow new InputMismatchException();\n\t\t\tif (curChar >= numChars) {\n\t\t\t\tcurChar = 0;\n\t\t\t\ttry {\n\t\t\t\t\tnumChars = stream.read(buf);\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t}\n\t\t\t\tif (numChars <= 0)\n\t\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn buf[curChar++];\n\t\t}\n\n\t\tpublic int readInt() {\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = read();\n\t\t\tint sgn = 1;\n\t\t\tif (c == '-') {\n\t\t\t\tsgn = -1;\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tint res = 0;\n\t\t\tdo {\n\t\t\t\tif (c < '0' || c > '9')\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\tres *= 10;\n\t\t\t\tres += c - '0';\n\t\t\t\tc = read();\n\t\t\t} while (!isSpaceChar(c));\n\t\t\treturn res * sgn;\n\t\t}\n\n\t\tpublic long readLong() {\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = read();\n\t\t\tint sgn = 1;\n\t\t\tif (c == '-') {\n\t\t\t\tsgn = -1;\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tlong res = 0;\n\t\t\tdo {\n\t\t\t\tif (c < '0' || c > '9')\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\tres *= 10;\n\t\t\t\tres += c - '0';\n\t\t\t\tc = read();\n\t\t\t} while (!isSpaceChar(c));\n\t\t\treturn res * sgn;\n\t\t}\n\n\t\tpublic String readString() {\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = read();\n\t\t\tStringBuffer res = new StringBuffer();\n\t\t\tdo {\n\t\t\t\tres.appendCodePoint(c);\n\t\t\t\tc = read();\n\t\t\t} while (!isSpaceChar(c));\n\t\t\treturn res.toString();\n\t\t}\n\n\t\tprivate boolean isSpaceChar(int c) {\n\t\t\treturn c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n\t\t}\n\n\t\tprivate String readLine0() {\n\t\t\tStringBuffer buf = new StringBuffer();\n\t\t\tint c = read();\n\t\t\twhile (c != '\\n' && c != -1) {\n\t\t\t\tbuf.appendCodePoint(c);\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\treturn buf.toString();\n\t\t}\n\n\t\tpublic String readLine() {\n\t\t\tString s = readLine0();\n\t\t\twhile (s.trim().length() == 0)\n\t\t\t\ts = readLine0();\n\t\t\treturn s;\n\t\t}\n\n\t\tpublic String readLine(boolean ignoreEmptyLines) {\n\t\t\tif (ignoreEmptyLines)\n\t\t\t\treturn readLine();\n\t\t\telse\n\t\t\t\treturn readLine0();\n\t\t}\n\n\t\tpublic char readCharacter() {\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = read();\n\t\t\treturn (char) c;\n\t\t}\n\n\t\tpublic double readDouble() {\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = read();\n\t\t\tint sgn = 1;\n\t\t\tif (c == '-') {\n\t\t\t\tsgn = -1;\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tdouble res = 0;\n\t\t\twhile (!isSpaceChar(c) && c != '.') {\n\t\t\t\tif (c == 'e' || c == 'E')\n\t\t\t\t\treturn res * Math.pow(10, readInt());\n\t\t\t\tif (c < '0' || c > '9')\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\tres *= 10;\n\t\t\t\tres += c - '0';\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tif (c == '.') {\n\t\t\t\tc = read();\n\t\t\t\tdouble m = 1;\n\t\t\t\twhile (!isSpaceChar(c)) {\n\t\t\t\t\tif (c == 'e' || c == 'E')\n\t\t\t\t\t\treturn res * Math.pow(10, readInt());\n\t\t\t\t\tif (c < '0' || c > '9')\n\t\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t\tm /= 10;\n\t\t\t\t\tres += (c - '0') * m;\n\t\t\t\t\tc = read();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn res * sgn;\n\t\t}\n\t}\n\n\tstatic int dx[] = new int[] { 0, 0, -1, 1 };\n\tstatic int dy[] = new int[] { 1, -1, 0, 0 };\n\tstatic int[][] grid;\n\tstatic int offset;\n\n\tpublic static void flood(int n) {\n\t\tgrid = new int[301][301];\n\t\toffset = 150;\n\t\tint[] q = new int[1<<17];\n\t\tgrid[offset][offset] = n;\n\t\tint front=0,back=0;\n\t\tint mod=(1<<17)-1;\n\t\tq[back]=0;\n\t\tback=(back+1)&mod;\n\t\tq[back]=0;\n\t\tback=(back+1)&mod;\n\t\tboolean[][] inQueue = new boolean[301][301];\n\t\tinQueue[offset][ offset]=true;\n\t\twhile (front!=back) {\n\t\t\tint x = q[front];\n\t\t\tfront=(front+1)&mod;\n\t\t\tint y = q[front];\n\t\t\tfront=(front+1)&mod;\n\t\t\tinQueue[x + offset][y + offset] = false;\n\t\t\tint tmp = grid[x + offset][y + offset];\n\t\t\tif (tmp >= 4) {\n\t\t\t\tint div = tmp / 4;\n\t\t\t\tint rem = tmp % 4;\n\t\t\t\tgrid[x + offset][y + offset] = rem;\n\t\t\t\tfor (int i = 0; i < 4; ++i) {\n\t\t\t\t\tint nx = x + dx[i];\n\t\t\t\t\tint ny = y + dy[i];\n\t\t\t\t\tgrid[nx + offset][ny + offset] += div;\n\t\t\t\t\tif (grid[nx + offset][ny + offset] >= 4&&!inQueue[nx+offset][ny+offset]) {\n\t\t\t\t\t\tq[back]=(nx);\n\t\t\t\t\t\tback=(back+1)&mod;\n\t\t\t\t\t\tq[back]=(ny);\n\t\t\t\t\t\tback=(back+1)&mod;\n\t\t\t\t\t\tinQueue[nx + offset][ny + offset] = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic static void main(String[] args) throws Exception {\n\t\tInputReader io = new InputReader(System.in);\n\t\tPrintWriter out = new PrintWriter(System.out);\n\t\tint n = io.readInt();\n\t\tint t = io.readInt();\n\t\tflood(n);\n\t\tfor (int i = 0; i < t; i++) {\n\t\t\tint x=io.readInt();\n\t\t\tint y=io.readInt();\n\t\t\tif(Math.abs(x)<=150&&Math.abs(y)<=150)\n\t\t\tout.println(grid[x+ offset][y + offset]);\n\t\t\telse out.println(0);\n\t\t}\n\t\tout.flush();\n\t}\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.math.*;\nimport java.util.*;\n\npublic class Solution {\n    final static int[] DELTA_X = {-1, 0, 0, 1};\n    final static int[] DELTA_Y = {0, -1, 1, 0};\n\n    final static int N = 75;\n\n    public void run() {\n        try {\n            int[][] count = new int[N << 1][N << 1];\n            count[N][N] = reader.nextInt();\n            boolean changed = true;\n            while (changed) {\n                changed = false;\n                for (int i = 0; i < N << 1; ++ i) {\n                    for (int j = 0; j < N << 1; ++ j) {\n                        if (count[i][j] >= 4) {\n                            changed = true;\n                            int delta = count[i][j] / 4;\n                            for (int k = 0; k < 4; ++ k) {\n                                count[i + DELTA_X[k]][j + DELTA_Y[k]] += delta;\n                            }\n                            count[i][j] %= 4;\n                        }\n                    }\n                }\n            }\n            int t = reader.nextInt();\n            while (t > 0) {\n                t --;\n                int x = N + reader.nextInt();\n                int y = N + reader.nextInt();\n                if (0 <= x && x < N << 1 && 0 <= y && y < N << 1) {\n                    writer.println(count[x][y]);\n                } else {\n                    writer.println(0);\n                }\n            }\n        } catch (IOException ex) {\n        }\n        writer.close();\n    }\n\n    InputReader reader;\n    PrintWriter writer;\n\n    Solution() {\n        reader = new InputReader();\n        writer = new PrintWriter(System.out);\n    }\n\n    public static void main(String[] args) {\n        new Solution().run();\n    }\n\n}\n\nclass InputReader {\n    BufferedReader reader;\n    StringTokenizer tokenizer;\n\n    InputReader() {\n        reader = new BufferedReader(new InputStreamReader(System.in));\n        tokenizer = new StringTokenizer(\"\");\n    }\n\n    String next() throws IOException {\n        while (!tokenizer.hasMoreTokens()) {\n            tokenizer = new StringTokenizer(reader.readLine());\n        }\n        return tokenizer.nextToken();\n    }\n\n    Integer nextInt() throws IOException {\n        return Integer.parseInt(next());\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAX = 100;\nstruct Mat {\n  int ma[MAX][MAX];\n  void clear() { memset(ma, 0, sizeof(ma)); }\n} res[MAX];\nint pow4[] = {1, 4, 16, 64, 256, 1024, 4096, 16384, 65536};\nint mxsize;\nint FourBit(int val) {\n  for (int i = 0;; i++)\n    if (pow4[i] > val) return i - 1;\n}\nvoid Expand(int x, int y, int val, Mat &a) {\n  int tp = val / 4;\n  if (x == 1)\n    a.ma[x - 1][y] += tp * 2;\n  else if (x > 1)\n    a.ma[x - 1][y] += tp;\n  if (y == 1)\n    a.ma[x][y - 1] += tp * 2;\n  else if (y > 1)\n    a.ma[x][y - 1] += tp;\n  if (x + 1 == mxsize) mxsize++;\n  a.ma[x + 1][y] += tp;\n  if (y + 1 == mxsize) mxsize++;\n  a.ma[x][y + 1] += tp;\n  a.ma[x][y] += val % 4;\n}\nMat Update(Mat m) {\n  Mat ans[2];\n  int a = 0, b = 1, flag = 1, tp;\n  ans[0] = m;\n  while (flag) {\n    ans[b].clear();\n    flag = 0;\n    for (int i = 0; i < mxsize; i++) {\n      for (int j = 0; j < mxsize; j++) {\n        if ((tp = ans[a].ma[i][j]) >= 4) {\n          flag = 1;\n          Expand(i, j, tp, ans[b]);\n        } else {\n          ans[b].ma[i][j] += tp;\n        }\n      }\n    }\n    a ^= 1;\n    b ^= 1;\n  }\n  return ans[a];\n}\nMat AddMat(Mat a, Mat b) {\n  Mat c;\n  c.clear();\n  for (int i = 0; i < mxsize; i++)\n    for (int j = 0; j < mxsize; j++) c.ma[i][j] = a.ma[i][j] + b.ma[i][j];\n  return c;\n}\nvoid GetPow() {\n  res[0].clear();\n  res[0].ma[0][0] = 1;\n  mxsize = 1;\n  for (int i = 1; i <= 15; i++) {\n    res[i] = Update(AddMat(res[i - 1], res[i - 1]));\n  }\n}\nint main() {\n  int n, m;\n  GetPow();\n  while (scanf(\"%d%d\", &n, &m) != EOF) {\n    Mat ans;\n    ans.clear();\n    for (int i = 0, st = n; st; st >>= 1, i++)\n      if (st & 1) ans = AddMat(ans, res[i]);\n    ans = Update(ans);\n    for (int i = 0; i < m; i++) {\n      int x, y;\n      scanf(\"%d%d\", &x, &y);\n      if (x < 0) x = -x;\n      if (y < 0) y = -y;\n      if (x >= MAX || y >= MAX)\n        printf(\"0\\n\");\n      else\n        printf(\"%d\\n\", ans.ma[x][y]);\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint x, y, T;\nint F[140][140];\nvoid f(int x, int y) {\n  if (F[x][y] < 4) return;\n  int g = F[x][y] / 4;\n  F[x][y] %= 4;\n  F[x + 1][y] += g;\n  f(x + 1, y);\n  F[x - 1][y] += g;\n  f(x - 1, y);\n  F[x][y + 1] += g;\n  f(x, y + 1);\n  F[x][y - 1] += g;\n  f(x, y - 1);\n}\nint main() {\n  cin >> F[70][70] >> T;\n  f(70, 70);\n  while (T--) {\n    cin >> x >> y;\n    if (x < -70 || x >= 70 || y < -70 || y >= 70)\n      cout << \"0\\n\";\n    else\n      cout << F[x + 70][y + 70] << \"\\n\";\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  static int B[1000][1000] = {0}, b[1000][1000] = {0};\n  const int S = 500;\n  int n;\n  scanf(\"%d\", &n);\n  queue<pair<int, int> > Q;\n  B[S][S] += n;\n  Q.push(make_pair(S, S));\n  b[S][S] = 1;\n  while (!Q.empty()) {\n    pair<int, int> p = Q.front();\n    Q.pop();\n    int x = p.first, y = p.second;\n    int dx[4] = {1, 0, -1, 0}, dy[4] = {0, 1, 0, -1};\n    for (int v = 0; v < 4; v++) {\n      int X = x + dx[v], Y = y + dy[v];\n      B[X][Y] += B[x][y] / 4;\n      if (B[X][Y] >= 4 && !b[X][Y]) {\n        Q.push(make_pair(X, Y));\n        b[X][Y] = 1;\n      }\n    }\n    B[x][y] %= 4;\n    b[x][y] = 0;\n  }\n  int t;\n  scanf(\"%d\", &t);\n  for (int i = 0; i < t; i++) {\n    int x, y;\n    scanf(\"%d%d\", &x, &y);\n    printf(\"%d\\n\",\n           x <= -S || S <= x || y <= -S || S <= y ? 0 : B[x + S][y + S]);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "/*\n * Package: StandardCodeLibrary.Core\n * */\n#include <iostream>\n#include <fstream>\n#include <sstream>\n#include <iomanip>\n#include <utility>\n#include <vector>\n#include <list>\n#include <string>\n#include <stack>\n#include <queue>\n#include <deque>\n#include <set>\n#include <map>\n#include <algorithm>\n#include <functional>\n#include <numeric>\n#include <bitset>\n#include <complex>\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <cstdlib>\n#include <ctime>\n#include <climits>\n#if __GNUC__>=4 and __GNUC_MINOR__>=6\n#include <ext/rope>\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\n#include <ext/pb_ds/tag_and_trait.hpp>\n#endif\n#ifdef  __GXX_EXPERIMENTAL_CXX0X__\n#define typeof decltype\n#endif\nusing namespace std;\n\n#define lp for(;;)\n#define repf(i,a,b) for (int i=(a);i<(b);++i)\n#define rep(i,n) repf(i,0,n)\n#define ft(i,a,b) for (int i=(a);i<=(b);++i)\n#define fdt(i,a,b) for (int i=(a);i>=(b);--i)\n#define feach(e,s) for (typeof((s).begin()) e=(s).begin();e!=(s).end();++e)\n#define fsubset(subset,set) for (int subset=(set)&((set)-1);subset;subset=(subset-1)&(set))\n#define forin(i,charset) for (cstr i=(charset);*i;i++)\n#define whl while\n#define rtn return\n#define fl(x,y) memset((x),char(y),sizeof(x))\n#define clr(x) fl(x,char(0))\n#define cpy(x,y) memcpy(x,y,sizeof(x))\n#define pb push_back\n#define mp make_pair\n#define ins insert\n#define ers erase\n#define lb lower_bound\n#define ub upper_bound\n#define rnk order_of_key\n#define sel find_by_order\n#define x first\n#define y second\n#define sz(x) (int((x).size()))\n#define all(x) (x).begin(),(x).end()\n#define srt(x) sort(all(x))\n#define uniq(x) srt(x),(x).erase(unique(all(x)),(x).end())\n#define rev(x) reverse(all(x))\n#define vec vector\n#define pr pair\n#define que queue\n#define prq priority_queue\n#define itr iterator\n#define sf scanf\n#define pf printf\n#define pdb(prcs,x) (cout<<setprecision(prcs)<<fixed<<(sgn(x)?(x):0))\n#ifdef DEBUG\n#define prt(x) cerr<<#x\"=\"<<(x)<<endl\n#define asrtWA(s) do if(!(s))do{cerr<<\"assert(\"#s\")\"<<endl;}whl(0);whl(0)\n#define asrtTLE(s) do if(!(s))do{cerr<<\"assert(\"#s\")\"<<endl;}whl(0);whl(0)\n#define asrtMLE(s) do if(!(s))do{cerr<<\"assert(\"#s\")\"<<endl;}whl(0);whl(0)\n#define asrtOLE(s) do if(!(s))do{cerr<<\"assert(\"#s\")\"<<endl;}whl(0);whl(0)\n#define asrtRE(s) do if(!(s))do{cerr<<\"assert(\"#s\")\"<<endl;}whl(0);whl(0)\n#define runtime() cerr<<\"Used: \"<<db(clock())/CLOCKS_PER_SEC<<\"s\"<<endl\n#define input(in) do{}whl(0)\n#define output(out) do{}whl(0)\n#else\n#define endl (char('\\n'))\n#define prt(x) (cerr)\n#define asrtWA(s) do if(!(s))exit(0);whl(0)\n#define asrtTLE(s) do if(!(s))whl(1);whl(0)\n#define asrtMLE(s) do if(!(s))whl(new int);whl(0)\n#define asrtOLE(s) do if(!(s))whl(1)puts(\"OLE\");whl(0)\n#define asrtRE(s) do if(!(s))*(int*)0=0;whl(0)\n#define runtime() (cerr)\n#define input(in) freopen(in,\"r\",stdin)\n#define output(out) freopen(out,\"w\",stdout)\n#endif\n\ntypedef long long int lli;\ntypedef double db;\ntypedef const char* cstr;\ntypedef string str;\ntypedef vec<int> vi;\ntypedef vec<vi> vvi;\ntypedef vec<bool> vb;\ntypedef vec<vb> vvb;\ntypedef vec<str> vs;\ntypedef pr<int,int> pii;\ntypedef pr<lli,lli> pll;\ntypedef pr<db,db> pdd;\ntypedef map<int,int> mii;\ntypedef map<str,int> msi;\ntypedef map<char,int> mci;\ntypedef set<int> si;\ntypedef set<str> ss;\ntypedef que<int> qi;\ntypedef vec<pii> vpii;\ntypedef vec<pdd> vpdd;\n#if __GNUC__>=4 and __GNUC_MINOR__>=6\nusing __gnu_cxx::rope;\n#endif\n#if __GNUC__>=4 and __GNUC_MINOR__>=7\ntemplate<typename key,typename value>class ext_map:public __gnu_pbds::tree<key,value,less<key>,__gnu_pbds::rb_tree_tag,__gnu_pbds::tree_order_statistics_node_update>{};\ntemplate<typename key>class ext_set:public __gnu_pbds::tree<key,__gnu_pbds::null_type,less<key>,__gnu_pbds::rb_tree_tag,__gnu_pbds::tree_order_statistics_node_update>{};\n#elif __GNUC__>=4 and __GNUC_MINOR__>=6\ntemplate<typename key,typename value>class ext_map:public __gnu_pbds::tree<key,value,less<key>,__gnu_pbds::rb_tree_tag,__gnu_pbds::tree_order_statistics_node_update>{};\ntemplate<typename key>class ext_set:public __gnu_pbds::tree<key,__gnu_pbds::null_mapped_type,less<key>,__gnu_pbds::rb_tree_tag,__gnu_pbds::tree_order_statistics_node_update>{};\n#endif\n\nint oo=(~0u)>>1;\nlli ooll=(~0ull)>>1;\ndb inf=1e+10;\ndb eps=1e-10;\ndb gam=0.5772156649015328606;\ndb pi=acos(-1.0);\nint dx[]={1,0,-1,0,1,-1,-1,1,0};\nint dy[]={0,1,0,-1,1,1,-1,-1,0};\nint MOD=1000000007;\n\ntemplate<typename type>inline bool cmax(type& a,const type& b){rtn a<b?a=b,true:false;}\ntemplate<typename type>inline bool cmin(type& a,const type& b){rtn b<a?a=b,true:false;}\ntemplate<typename type>inline type sqr(const type& x){rtn x*x;}\ninline int sgn(const db& x){rtn (x>+eps)-(x<-eps);}\ninline int dbcmp(const db& a,const db& b){rtn sgn(a-b);}\ntemplate<typename istream,typename first_type,typename second_type>inline istream& operator>>(istream& cin,pr<first_type,second_type>& x){rtn cin>>x.x>>x.y;}\ntemplate<typename ostream,typename first_type,typename second_type>inline ostream& operator<<(ostream& cout,const pr<first_type,second_type>& x){rtn cout<<x.x<<\" \"<<x.y;}\ntemplate<typename istream,typename type>inline istream& operator>>(istream& cin,vec<type>& x){rep(i,sz(x))cin>>x[i];rtn cin;}\ntemplate<typename ostream,typename type>inline ostream& operator<<(ostream& cout,const vec<type>& x){rep(i,sz(x))cout<<x[i]<<(i+1==sz(x)?\"\":\" \");rtn cout;}\ntemplate<typename type>inline pr<type,type> operator-(const pr<type,type>& x){rtn mp(-x.x,-x.y);}\ntemplate<typename type>inline pr<type,type> operator+(const pr<type,type>& a,const pr<type,type>& b){rtn mp(a.x+b.x,a.y+b.y);}\ntemplate<typename type>inline pr<type,type> operator-(const pr<type,type>& a,const pr<type,type>& b){rtn mp(a.x-b.x,a.y-b.y);}\ntemplate<typename type>inline pr<type,type> operator*(const pr<type,type>& a,const type& b){rtn mp(a.x*b,a.y*b);}\ntemplate<typename type>inline pr<type,type> operator/(const pr<type,type>& a,const type& b){rtn mp(a.x/b,a.y/b);}\ntemplate<typename type>inline pr<type,type>& operator-=(pr<type,type>& a,const pr<type,type>& b){rtn a=a-b;}\ntemplate<typename type>inline pr<type,type>& operator+=(pr<type,type>& a,const pr<type,type>& b){rtn a=a+b;}\ntemplate<typename type>inline pr<type,type>& operator*=(pr<type,type>& a,const type& b){rtn a=a*b;}\ntemplate<typename type>inline pr<type,type>& operator/=(pr<type,type>& a,const type& b){rtn a=a/b;}\ntemplate<typename type>inline type cross(const pr<type,type>& a,const pr<type,type>& b){rtn a.x*b.y-a.y*b.x;}\ntemplate<typename type>inline type dot(const pr<type,type>& a,const pr<type,type>& b){rtn a.x*b.x+a.y*b.y;}\ntemplate<typename type>inline type gcd(type a,type b){if(b)whl((a%=b)&&(b%=a));rtn a+b;}\ntemplate<typename type>inline type lcm(type a,type b){rtn a*b/gcd(a,b);}\ntemplate<typename type>inline void bit_inc(vec<type>& st,int x,type inc){whl(x<sz(st))st[x]+=inc,x|=x+1;}\ntemplate<typename type>inline type bit_sum(const vec<type>& st,int x){type s=0;whl(x>=0)s+=st[x],x=(x&(x+1))-1;rtn s;}\ntemplate<typename type>inline type bit_kth(const vec<type>& st,int k){int x=0,y=0,z=0;whl((1<<(++y))<=sz(st));fdt(i,y-1,0){if((x+=1<<i)>sz(st)||z+st[x-1]>k)x-=1<<i;else z+=st[x-1];}rtn x;}\ninline void make_set(vi& st){rep(i,sz(st))st[i]=i;}\ninline int find_set(vi& st,int x){int y=x,z;whl(y!=st[y])y=st[y];whl(x!=st[x])z=st[x],st[x]=y,x=z;rtn y;}\ninline bool union_set(vi& st,int a,int b){a=find_set(st,a),b=find_set(st,b);rtn a!=b?st[a]=b,true:false;}\ntemplate<typename type>inline void merge(type& a,type& b){if(sz(a)<sz(b))swap(a,b);whl(sz(b))a.ins(*b.begin()),b.ers(b.begin());}\n\nstruct Initializer{Initializer(){ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);}~Initializer(){runtime();}}initializer;\n\nint md[201][201];\n#define m(x,y) md[x+100][y+100]\n\nint main()\n{\n\tint n;\n\tcin>>n;\n\tm(0,0)=n;\n\tbool still=false;\n\twhl(!still)\n\t{\n\t\tstill=true;\n\t\tft(x,-100,100)\n\t\tft(y,-100,100)\n\t\t{\n\t\t\tint get=m(x,y)/4;\n\t\t\tif (get)\n\t\t\t{\n\t\t\t\trep(d,4)\n\t\t\t\t\tm(x+dx[d],y+dy[d])+=get;\n\t\t\t\tm(x,y)-=get*4;\n\t\t\t\tstill=false;\n\t\t\t}\n\t\t}\n\t}\n\tint t;\n\tcin>>t;\n\trep(i,t)\n\t{\n\t\tint x,y;\n\t\tcin>>x>>y;\n\t\tif (max(abs(x),abs(y))<=100) cout<<m(x,y)<<endl;\n\t\telse cout<<0<<endl;\n\t}\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MOD = 1e9 + 7;\npair<int, int> operator+(pair<int, int> p1, pair<int, int> p2) {\n  pair<int, int> ans = {p1.first + p2.first, p1.second + p2.second};\n  return ans;\n}\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  int n, t;\n  cin >> n >> t;\n  vector<vector<int>> grid(500, vector<int>(500));\n  vector<pair<int, int>> dirs = {{0, 1}, {0, -1}, {1, 0}, {-1, 0}};\n  grid[250][250] = n;\n  queue<pair<int, int>> q;\n  q.push({0, 0});\n  while (q.size()) {\n    auto val = q.front();\n    q.pop();\n    if (grid[250 + val.first][250 + val.second] < 4) continue;\n    int addRem = grid[250 + val.first][250 + val.second] -\n                 (grid[250 + val.first][250 + val.second] % 4);\n    grid[250 + val.first][250 + val.second] %= 4;\n    for (auto p : dirs) {\n      auto p2 = p + val;\n      grid[p2.first + 250][p2.second + 250] += addRem / 4;\n      if (grid[p2.first + 250][p2.second + 250] >= 4) {\n        q.push(p2);\n      }\n    }\n  }\n  while (t--) {\n    int x, y;\n    cin >> x >> y;\n    int nx = x + 250, ny = y + 250;\n    if (nx >= 0 && nx < 500 && ny >= 0 && ny <= 500) {\n      cout << grid[250 + x][250 + y];\n    } else {\n      cout << 0;\n    }\n    cout << '\\n';\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 131;\nconst int ox = 65;\nconst int oy = 65;\nint a[MAXN][MAXN], b[MAXN][MAXN];\nint dx[] = {0, 0, -1, 1};\nint dy[] = {1, -1, 0, 0};\nvoid init() {\n  memset(b, 0, sizeof(b));\n  int p = MAXN - 1;\n  bool ok = false;\n  for (int i = 1; i <= p; i++)\n    for (int j = 1; j <= p; j++)\n      if (a[i][j] > 3) {\n        for (int k = 0; k < 4; k++) b[i + dx[k]][j + dy[k]] += a[i][j] / 4;\n        b[i][j] -= a[i][j] / 4 * 4;\n      }\n  for (int i = 1; i <= p; i++)\n    for (int j = 1; j <= p; j++) {\n      a[i][j] += b[i][j];\n      if (a[i][j] > 3) ok = true;\n    }\n  if (ok) init();\n}\nint main() {\n  int n, m, x, y;\n  while (cin >> n >> m) {\n    a[ox][oy] = n;\n    init();\n    while (m--) {\n      scanf(\"%d%d\", &x, &y);\n      x += ox;\n      y += oy;\n      if (x >= MAXN || y >= MAXN || x < 0 || y < 0)\n        puts(\"0\");\n      else\n        printf(\"%d\\n\", a[x][y]);\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\n#pragma comment(linker, \"/STACK:1024000000,1024000000\")\nconst int inf = 1e9;\nconst double eps = 1e-8;\nconst double pi = acos(-1.0);\ntemplate <class T>\ninline bool rd(T &ret) {\n  char c;\n  int sgn;\n  if (c = getchar(), c == EOF) return 0;\n  while (c != '-' && (c < '0' || c > '9')) c = getchar();\n  sgn = (c == '-') ? -1 : 1;\n  ret = (c == '-') ? 0 : (c - '0');\n  while (c = getchar(), c >= '0' && c <= '9') ret = ret * 10 + (c - '0');\n  ret *= sgn;\n  return 1;\n}\ntemplate <class T>\ninline void pt(T x) {\n  if (x < 0) {\n    putchar('-');\n    x = -x;\n  }\n  if (x > 9) pt(x / 10);\n  putchar(x % 10 + '0');\n}\nusing namespace std;\nconst int N = 1000;\nconst int C = N / 2;\nint step[4][2] = {0, 1, 0, -1, 1, 0, -1, 0};\nint a[N][N];\nvoid work(int x, int y) {\n  if (a[x][y] < 4) return;\n  int tmp = a[x][y] / 4;\n  a[x][y] %= 4;\n  for (int i = 0; i < 4; i++) {\n    a[x + step[i][0]][y + step[i][1]] += tmp;\n    work(x + step[i][0], y + step[i][1]);\n  }\n  work(x, y);\n}\nvoid put(int mp[][N]) {\n  for (int i = 0; i < N; i++) {\n    for (int j = 0; j < N; j++) {\n      pt(mp[i][j]);\n      if (i == C && j == C)\n        putchar('*');\n      else\n        putchar(' ');\n    }\n    puts(\"\");\n  }\n}\nint main() {\n  int n;\n  while (cin >> n) {\n    if (!n) {\n      rd(n);\n      while (n--) {\n        int x, y;\n        rd(x), rd(y);\n        puts(\"0\");\n      }\n      continue;\n    }\n    memset(a, 0, sizeof a);\n    a[C][C] = n;\n    work(C, C);\n    int t;\n    rd(t);\n    while (t--) {\n      int x, y;\n      rd(x);\n      rd(y);\n      if (abs(x) >= N / 2 || abs(y) >= N / 2)\n        puts(\"0\");\n      else\n        pt(a[x + C][y + C]), puts(\"\");\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint arr[150][150];\nvoid solve(int x, int y) {\n  if (arr[x][y] < 3)\n    arr[x][y]++;\n  else {\n    arr[x][y] = 0;\n    solve(x + 1, y);\n    solve(x - 1, y);\n    solve(x, y + 1);\n    solve(x, y - 1);\n  }\n}\nint main() {\n  int n, t, x, y;\n  cin >> n >> t;\n  for (int i = 0; i < n; i++) solve(65, 65);\n  for (int i = 0; i < t; i++) {\n    cin >> x >> y;\n    if (x < (-65) || x > 65 || y < (-65) || y > 65)\n      cout << 0 << endl;\n    else\n      cout << arr[x + 65][y + 65] << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint A[222][222];\nbool u[222][222];\nvector<pair<int, int> > V;\nint main(void) {\n  int n, t;\n  cin >> n >> t;\n  A[111][111] = n;\n  u[111][111] = 1;\n  V.push_back(make_pair(111, 111));\n  bool ok;\n  while (1) {\n    vector<pair<int, int> > ops;\n    vector<pair<int, int> > V2;\n    ok = false;\n    memset(u, 0, sizeof(u));\n    for (vector<pair<int, int> >::const_iterator it = V.begin(); it != V.end();\n         ++it) {\n      int x = it->first, y = it->second;\n      if (A[x][y] >= 4) {\n        ops.push_back(make_pair(x, y));\n        if (!u[x][y]) V2.push_back(make_pair(x, y));\n        if (!u[x - 1][y]) V2.push_back(make_pair(x - 1, y));\n        if (!u[x][y - 1]) V2.push_back(make_pair(x, y - 1));\n        if (!u[x + 1][y]) V2.push_back(make_pair(x + 1, y));\n        if (!u[x][y + 1]) V2.push_back(make_pair(x, y + 1));\n        u[x][y] = 1;\n        u[x - 1][y] = 1;\n        u[x][y - 1] = 1;\n        u[x + 1][y] = 1;\n        u[x][y + 1] = 1;\n        ok = true;\n      }\n    }\n    V = V2;\n    for (int i = 0; i < (int)ops.size(); i++) {\n      int x = ops[i].first, y = ops[i].second;\n      int nn = A[x][y] / 4;\n      A[x][y] -= 4 * nn;\n      A[x - 1][y] += nn;\n      A[x][y - 1] += nn;\n      A[x + 1][y] += nn;\n      A[x][y + 1] += nn;\n    }\n    if (!ok) break;\n  }\n  cerr << \"Done.\" << endl;\n  for (int i = 0; i < t; i++) {\n    int x, y;\n    cin >> x >> y;\n    if (abs(x) > 111 || abs(y) > 111) {\n      cout << \"0\" << endl;\n    } else {\n      cout << A[111 + x][111 + y] << endl;\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAX = 2000;\nint matrix[MAX][MAX];\nvoid dfs(int x, int y, int num) {\n  matrix[x][y] += num;\n  if (matrix[x][y] < 4) return;\n  int p = matrix[x][y] / 4;\n  matrix[x][y] %= 4;\n  dfs(x + 1, y, p);\n  dfs(x - 1, y, p);\n  dfs(x, y + 1, p);\n  dfs(x, y - 1, p);\n}\nint main() {\n  ios::sync_with_stdio(false);\n  int n, t;\n  int x[50002], y[50002];\n  cin >> n >> t;\n  for (int i = 1; i <= t; i++) cin >> x[i] >> y[i];\n  dfs(MAX / 2, MAX / 2, n);\n  for (int i = 1; i <= t; i++) {\n    int x1 = x[i] + MAX / 2;\n    int y1 = y[i] + MAX / 2;\n    if (x1 < MAX && x1 > 0 && y1 < MAX && y1 > 0)\n      cout << matrix[x1][y1] << endl;\n    else\n      cout << 0 << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 1e3;\nint long long n, t, ans[2000][2000];\nqueue<pair<int, int>> qu;\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  cin >> n >> t;\n  ans[1000][1000] = n;\n  qu.push({0, 0});\n  while (qu.size() > 0) {\n    auto a = qu.front();\n    qu.pop();\n    int x = a.first + 1000, y = a.second + 1000;\n    if (ans[x][y] < 4) {\n      continue;\n    }\n    for (int i = -1; i <= 1; i++)\n      for (int j = -1; j <= 1; j++)\n        if (abs(i - j) == 1) {\n          ans[x + i][y + j] += ans[x][y] / 4;\n          if (ans[x + i][j + y] >= 4) qu.push({x + i - 1000, y + j - 1000});\n        }\n    ans[x][y] %= 4;\n  }\n  while (t--) {\n    int long long a, b;\n    cin >> a >> b;\n    if (a + 1e3 < 0 || a + 1e3 > 2e3 || b + 1e3 < 0 || b + 1e3 > 2e3) {\n      cout << 0 << endl;\n      continue;\n    }\n    cout << ans[a + 1000][b + 1000] << endl;\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class Main {\n\tpublic static void main(String args[]) {new Main().run();}\n\n\tFastReader in = new FastReader();\n\tPrintWriter out = new PrintWriter(System.out);\n\tvoid run(){\n\t\twork();\n\t\tout.flush();\n\t}\n\tlong mod=1000000007;\n\tlong gcd(long a,long b) {\n\t\treturn a==0?b:b>=a?gcd(b%a,a):gcd(b,a);\n\t}\n\t//400*400\n\tint[][] A=new int[400][400];\n\tvoid work() {\n\t\tint n=in.nextInt(),t=in.nextInt();\n\t\tfor(int i=0;i<n;i++) {\n\t\t\tadd(200,200);\n\t\t}\n\t\t//200 200\n\t\tfor(int i=0;i<t;i++) {\n\t\t\tint x=in.nextInt()+200,y=in.nextInt()+200;\n\t\t\tif(x<0||x>=400||y<0||y>=400) {\n\t\t\t\tout.println(0);\n\t\t\t}else {\n\t\t\t\tout.println(A[x][y]);\n\t\t\t}\n\t\t}\n\t}\n\tprivate void add(int x, int y) {\n\t\tif(A[x][y]==3) {\n\t\t\tA[x][y]=0;\n\t\t\tadd(x-1,y);\n\t\t\tadd(x+1,y);\n\t\t\tadd(x,y-1);\n\t\t\tadd(x,y+1);\n\t\t}else {\n\t\t\tA[x][y]++;\n\t\t}\n\t}\n}\t\n\n\n\nclass FastReader\n{\n\tBufferedReader br;\n\tStringTokenizer st;\n\n\tpublic FastReader()\n\t{\n\t\tbr=new BufferedReader(new InputStreamReader(System.in));\n\t}\n\n\n\tpublic String next() \n\t{\n\t\tif(st==null || !st.hasMoreElements())\n\t\t{\n\t\t\ttry {\n\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t} catch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\treturn st.nextToken();\n\t}\n\n\tpublic int nextInt() \n\t{\n\t\treturn Integer.parseInt(next());\n\t}\n\n\tpublic long nextLong()\n\t{\n\t\treturn Long.parseLong(next());\n\t}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint matrix[1000][1000];\nint ultim_luat[1000][1000];\npair<short int, short int> luat[2][100000];\nint c[2];\nint main() {\n  ios_base ::sync_with_stdio(0);\n  int n;\n  cin >> n;\n  matrix[500][500] = n;\n  luat[0][0] = {500, 500};\n  c[0] = 1;\n  for (int q(0), j(1); c[q]; q = 1 - q, j++) {\n    c[1 - q] = 0;\n    for (int i(0); i < c[q]; i++) {\n      int x(luat[q][i].first), y(luat[q][i].second);\n      ultim_luat[x][y] = 0;\n      int div(matrix[x][y] / 4);\n      matrix[x][y] -= 4 * div;\n      if (div == 0) continue;\n      for (int l(-1); l <= 1; l++) {\n        for (int p(-1); p <= 1; p++) {\n          if (l != 0 && p != 0) continue;\n          if (l == p) continue;\n          matrix[x + l][y + p] += div;\n          if (matrix[x + l][y + p] >= 4 && !ultim_luat[x + l][y + p]) {\n            ultim_luat[x + l][y + p] = 1;\n            luat[1 - q][c[1 - q]++] = {x + l, y + p};\n          }\n        }\n      }\n    }\n  }\n  int t, a, b;\n  cin >> t;\n  while (t--) {\n    cin >> a >> b;\n    a += 500, b += 500;\n    if (a > 1000 || a < 0 || b > 1000 || b < 0)\n      cout << \"0\\n\";\n    else\n      cout << matrix[a][b] << '\\n';\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 2e3, M = 5e4 + 100;\nlong long n, t, ax[M], ay[M], b[N][N];\nvoid dfs(int xx, int yy, int k) {\n  b[xx][yy] += k;\n  if (b[xx][yy] < 4) return;\n  int p = b[xx][yy] / 4;\n  b[xx][yy] %= 4;\n  dfs(xx - 1, yy, p);\n  dfs(xx + 1, yy, p);\n  dfs(xx, yy - 1, p);\n  dfs(xx, yy + 1, p);\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  cin >> n >> t;\n  for (int i = 0; i < t; i++) cin >> ax[i] >> ay[i];\n  dfs(N / 2, N / 2, n);\n  for (int i = 0; i < t; i++) {\n    int x = ax[i] + N / 2;\n    int y = ay[i] + N / 2;\n    if ((x > 0) && (y > 0) && (x < N) && (y < N))\n      cout << b[x][y] << endl;\n    else\n      cout << 0 << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nlong long a[202][202];\nusing namespace std;\nint main() {\n  long long n, t, x, y, i, j, q;\n  cin >> n >> t;\n  q = 1;\n  for (i = 1; i <= 201; i++) {\n    for (j = 1; j <= 201; j++) a[i][j] = 0;\n  }\n  a[101][101] = n;\n  while (q != 0) {\n    for (i = 1; i <= 201; i++) {\n      for (j = 1; j <= 201; j++) {\n        if (a[i][j] >= 4) {\n          int y = a[i][j] / 4;\n          a[i][j] = a[i][j] % 4;\n          a[i - 1][j] += y;\n          a[i + 1][j] += y;\n          a[i][j - 1] += y;\n          a[i][j + 1] += y;\n        }\n      }\n    }\n    q = 0;\n    for (i = 1; i <= 201; i++) {\n      for (j = 1; j <= 201; j++) {\n        if (a[i][j] >= 4) {\n          q = 1;\n        }\n      }\n    }\n  }\n  for (i = 0; i < t; i++) {\n    cin >> x >> y;\n    x = fabs(x) + 101;\n    y = fabs(y) + 101;\n    if (x > 201 || y > 201)\n      cout << 0 << endl;\n    else\n      cout << a[x][y] << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nchar buf[1 << 21], *p1 = buf, *p2 = buf;\ntemplate <class T>\nvoid read(T &x) {\n  x = 0;\n  int c = getchar();\n  int flag = 0;\n  while (c < '0' || c > '9') flag |= (c == '-'), c = getchar();\n  while (c >= '0' && c <= '9')\n    x = (x << 3) + (x << 1) + (c ^ 48), c = getchar();\n  if (flag) x = -x;\n}\ntemplate <class T>\nT _max(T a, T b) {\n  return b < a ? a : b;\n}\ntemplate <class T>\nT _min(T a, T b) {\n  return a < b ? a : b;\n}\ntemplate <class T>\nbool checkmax(T &a, T b) {\n  return a < b ? a = b, 1 : 0;\n}\ntemplate <class T>\nbool checkmin(T &a, T b) {\n  return b < a ? a = b, 1 : 0;\n}\nconst int B = 1000;\nint n, t;\nint a[2005][2005];\nvoid init() {\n  read(n);\n  read(t);\n}\nvoid run(int x, int y) {\n  ++a[x][y];\n  if (a[x][y] == 4) {\n    a[x][y] = 0;\n    run(x, y + 1);\n    run(x, y - 1);\n    run(x - 1, y);\n    run(x + 1, y);\n  }\n}\nvoid solve() {\n  for (int i = 1; i <= n; ++i) run(B, B);\n  int x, y;\n  while (t--) {\n    read(x);\n    read(y);\n    if (abs(x) > 1000 || abs(y) > 1000) {\n      printf(\"0\\n\");\n      continue;\n    }\n    printf(\"%d\\n\", a[B + x][B + y]);\n  }\n}\nint main() {\n  init();\n  solve();\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint ans[222][222];\nint dir[4][2] = {{1, 0}, {0, 1}, {-1, 0}, {0, -1}};\nstruct P {\n  int x, y;\n};\nint inque[222][222];\nqueue<P> que;\nvoid bfs() {\n  int i, j, k;\n  while (!que.empty()) {\n    P p = que.front();\n    que.pop();\n    int t = ans[p.x][p.y] / 4;\n    ans[p.x][p.y] -= t * 4;\n    if (t <= 0) {\n      inque[p.x][p.y] = 0;\n      continue;\n    }\n    for (i = 0; i < 4; i++) {\n      int x = p.x + dir[i][0];\n      int y = p.y + dir[i][1];\n      if (x < 0 || y < 0) continue;\n      if ((x == 0 || y == 0) && (p.x != 0 && p.y != 0)) {\n        if (x == 0) {\n          ans[x][y] += 2 * t;\n        }\n        if (y == 0) {\n          ans[x][y] += 2 * t;\n        }\n        if (x == 0 && y == 0) ans[x][y] -= 2 * t;\n      } else if (x == 0 && y == 0) {\n        ans[x][y] += 2 * t;\n      } else\n        ans[x][y] += t;\n      if (!inque[x][y]) {\n        P p1;\n        p1.x = x;\n        p1.y = y;\n        que.push(p1);\n        inque[x][y] = 1;\n      }\n    }\n    inque[p.x][p.y] = 0;\n  }\n}\nint main() {\n  int n, t;\n  cin >> n >> t;\n  int i;\n  P p1;\n  p1.x = 0;\n  p1.y = 0;\n  ans[0][0] = n;\n  inque[0][0] = 1;\n  que.push(p1);\n  bfs();\n  for (i = 1; i <= t; i++) {\n    long long x, y;\n    cin >> x >> y;\n    if (x < 0) x = -x;\n    if (y < 0) y = -y;\n    if (x >= 222 || y >= 222) {\n      cout << \"0\" << endl;\n      continue;\n    }\n    cout << ans[x][y] << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MOD = 1000000007, dx[] = {0, 1, 0, -1}, dy[] = {1, 0, -1, 0};\nconst double eps = 1e-8;\nvoid read(int &k) {\n  k = 0;\n  char x = getchar();\n  while (x < '0' || x > '9') x = getchar();\n  while (x >= '0' && x <= '9') {\n    k = k * 10 - 48 + x;\n    x = getchar();\n  }\n}\nint N, q, a[210][210], b[210][210], x, y;\nint main() {\n  scanf(\"%d%d\", &N, &q);\n  a[70][70] = N;\n  int dead = 1;\n  while (dead) {\n    dead = 0;\n    memset(b, 0, sizeof b);\n    for (int i = 1; i < 140; i++)\n      for (int j = 1; j < 140; j++)\n        if (a[i][j] >= 4) {\n          for (int dir = 0; dir < 4; dir++)\n            b[i + dx[dir]][j + dy[dir]] += a[i][j] / 4;\n          a[i][j] %= 4;\n          dead = 1;\n        }\n    for (int i = 1; i < 140; i++)\n      for (int j = 1; j < 140; j++) b[i][j] += a[i][j];\n    memcpy(a, b, sizeof a);\n  }\n  for (; q--;) {\n    scanf(\"%d%d\", &x, &y);\n    if (70 + x > 0 && 70 + x < 140 && 70 + y > 0 && 70 + y < 140)\n      printf(\"%d\\n\", a[70 + x][70 + y]);\n    else\n      printf(\"%d\\n\", 0);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint in() {\n  int tmp;\n  scanf(\"%d\", &tmp);\n  return tmp;\n}\nint &in(int &x) { return x = in(); }\ntemplate <typename T, typename... Args>\nvoid in(T &x, Args &...args) {\n  in(x);\n  if (sizeof...(args)) in(args...);\n}\ntemplate <class T, class L>\nT &smax(T &x, L y) {\n  if (y > x) x = y;\n  return x;\n}\ntemplate <class T, class L>\nT &smin(T &x, L y) {\n  if (y < x) x = y;\n  return x;\n}\nnamespace std {\ntemplate <>\nstruct hash<pair<int, int> > {\n  size_t operator()(pair<int, int> const &x) const {\n    return hash<long long>()(((long long)x.first << 32) ^ x.second);\n  }\n};\n}  // namespace std\nconst int maxn = 1e3 + 17;\nint x, y, a, b, c, m, ans, xs[] = {-1, 1, 0, 0}, ys[] = {0, 0, -1, 1};\nint mp(int x) { return x < 0 ? -2 * x : 2 * x + 1; }\nint ant[maxn][maxn];\nqueue<pair<int, int> > q;\nint main() {\n  in(ant[mp(0)][mp(0)]);\n  q.push({0, 0});\n  while (!q.empty()) {\n    int x = q.front().first, y = q.front().second;\n    q.pop();\n    if (ant[mp(x)][mp(y)] < 4) continue;\n    for (int i = 0; i < 4; i++) {\n      ant[mp(x + xs[i])][mp(y + ys[i])] += ant[mp(x)][mp(y)] / 4;\n      if (ant[mp(x + xs[i])][mp(y + ys[i])] >= 4)\n        q.push({x + xs[i], y + ys[i]});\n    }\n    ant[mp(x)][mp(y)] %= 4;\n  }\n  int t = in();\n  while (t--) {\n    int x = in(), y = in();\n    if (mp(x) >= maxn || mp(y) >= maxn)\n      printf(\"0\\n\");\n    else\n      printf(\"%d\\n\", ant[mp(x)][mp(y)]);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, t;\nint ans[2 * 1000][2 * 1000];\nint dir[4][2] = {{-1, 0}, {1, 0}, {0, -1}, {0, 1}};\nvoid dfs(int x, int y) {\n  if (ans[x][y] < 4) return;\n  int t = ans[x][y] / 4;\n  ans[x][y] %= 4;\n  for (int i = 0; i < 4; i++) {\n    int x2 = x + dir[i][0];\n    int y2 = y + dir[i][1];\n    ans[x2][y2] += t;\n    dfs(x2, y2);\n  }\n}\nint main() {\n  scanf(\"%d%d\", &n, &t);\n  ans[1000][1000] = n;\n  dfs(1000, 1000);\n  for (int i = 0; i < t; i++) {\n    int x, y;\n    scanf(\"%d%d\", &x, &y);\n    x += 1000;\n    y += 1000;\n    if (x < 0 || x >= 2 * 1000 || y < 0 || y >= 2 * 1000)\n      printf(\"0\\n\");\n    else\n      printf(\"%d\\n\", ans[x][y]);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.io.IOException;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskB solver = new TaskB();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class TaskB {\n        public void solve(int testNumber, InputReader in, PrintWriter out) {\n            int n = in.nextInt(), t = in.nextInt();\n\n            int r = 205, offset = r / 2 + 1;\n            int[][] A = new int[r][r];\n            boolean[][] inQueue = new boolean[r][r];\n       /* Queue<Cell> q = new ArrayDeque<>();\n        q.add(new Cell(offset, offset));*/\n\n            int[] qx = new int[r * r], qy = new int[r * r];\n            int left = 0, right = 1, sz = 1;\n            qx[0] = qy[0] = offset;\n            A[offset][offset] = n;\n            int[] dx = new int[]{-1, 0, 1, 0};\n            int[] dy = new int[]{0, -1, 0, 1};\n            int maxs = 0;\n            while (sz > 0) {\n                int cx = qx[left], cy = qy[left++];\n                left %= qx.length;\n                sz--;\n                inQueue[cx][cy] = false;\n                int add = A[cx][cy] / 4;\n                A[cx][cy] %= 4;\n\n                maxs = Math.max(maxs, cx - offset);\n\n                if (add > 0) {\n                    for (int k = 0; k < 4; ++k) {\n                        int nx = cx + dx[k];\n                        int ny = cy + dy[k];\n                        A[nx][ny] += add;\n                        if (!inQueue[nx][ny]) {\n                            inQueue[nx][ny] = true;\n                            qx[right] = nx;\n                            qy[right++] = ny;\n                            right %= qx.length;\n                            sz++;\n                        }\n                    }\n                }\n            }\n\n            while (t-- > 0) {\n                int x = in.nextInt(), y = in.nextInt();\n                if (x < 0) x = -x;\n                if (y < 0) y = -y;\n                if (x > maxs || y > maxs) {\n                    out.println(0);\n                } else {\n                    out.println(A[offset + x][offset + y]);\n                }\n            }\n        }\n\n    }\n\n    static class InputReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int read() {\n            if (numChars == -1)\n                throw new UnknownError();\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new UnknownError();\n                }\n                if (numChars <= 0)\n                    return -1;\n            }\n            return buf[curChar++];\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        public String next() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            StringBuffer res = new StringBuffer();\n            do {\n                res.appendCodePoint(c);\n                c = read();\n            } while (!isSpaceChar(c));\n\n            return res.toString();\n        }\n\n        private boolean isSpaceChar(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n    }\n}\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, t;\nint ans[2 * 1000][2 * 1000];\nint directs[4][2] = {{1, 0}, {0, 1}, {-1, 0}, {0, -1}};\nvoid dfs(int x, int y) {\n  if (ans[x][y] < 4) return;\n  int t = ans[x][y] / 4;\n  ans[x][y] %= 4;\n  for (int i = 0; i < 4; i++) {\n    int x2 = x + directs[i][0];\n    int y2 = y + directs[i][1];\n    ans[x2][y2] += t;\n    dfs(x2, y2);\n  }\n}\nint main() {\n  scanf(\"%d %d\", &n, &t);\n  ans[1000][1000] = n;\n  dfs(1000, 1000);\n  for (int i = 0; i < t; i++) {\n    int temp1, temp2;\n    scanf(\"%d %d\", &temp1, &temp2);\n    temp1 += 1000;\n    temp2 += 1000;\n    if (temp1 < 0 || temp1 >= 2 * 1000 || temp2 < 0 || temp2 >= 2 * 1000)\n      printf(\"0\\n\");\n    else\n      printf(\"%d\\n\", ans[temp1][temp2]);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.math.*;\nimport java.util.*;\n\nimport static java.util.Arrays.fill;\nimport static java.lang.Math.*;\nimport static java.util.Arrays.sort;\nimport static java.util.Collections.sort;\n\npublic class Ants {\n\n\tpublic static int mod = 1000000007;\n\tpublic static long INF = (1L << 60);\n\tstatic FastScanner2 in = new FastScanner2();\n\tstatic OutputWriter out = new OutputWriter(System.out);\n\n\tstatic class Pair\n\t{\n\t\tint x,y;\n\t\tPair(int x,int y)\n\t\t{\n\t\t\tthis.x=x;\n\t\t\tthis.y=y;\n\t\t}\n\t}\n\t\n\tpublic static void main(String[] args) {\n\n\t\t\n\t\tint n=in.nextInt();\n\t\tint t=in.nextInt();\n\t\tint[][] a=new int[600][600];\n\t\ta[300][300]=n;\n\t\tQueue<Pair> q=new LinkedList<>();\n\t\tq.add(new Pair(300, 300));\n\t\tint print=0;\n\t\twhile(!q.isEmpty())\n\t\t{\n\t\t\tPair p=q.poll();\n\t\t\tint x=p.x;\n\t\t\tint y=p.y;\n\t\t\tprint++;\n\t\t\tif(a[x][y]<=3)\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tint pass=a[x][y]/4;\n\t\t\ta[x+1][y]+=pass;\n\t\t\ta[x-1][y]+=pass;\n\t\t\ta[x][y+1]+=pass;\n\t\t\ta[x][y-1]+=pass;\n\t\t\ta[x][y]%=4;\n\t\t\tif(a[x+1][y]-pass<4&&a[x+1][y]>=4)\n\t\t\t{\n\t\t\t\tq.add(new Pair(x+1, y));\n\t\t\t}\n\t\t\tif(a[x-1][y]-pass<4&&a[x-1][y]>=4)\n\t\t\t{\n\t\t\t\tq.add(new Pair(x-1, y));\n\t\t\t}\n\t\t\tif(a[x][y+1]-pass<4&&a[x][y+1]>=4)\n\t\t\t{\n\t\t\t\tq.add(new Pair(x, y+1));\n\t\t\t}\n\t\t\tif(a[x][y-1]-pass<4&&a[x][y-1]>=4)\n\t\t\t{\n\t\t\t\tq.add(new Pair(x, y-1));\n\t\t\t}\n\t\t}\n\t\ttr(print);\n\t\tfor(int i=0;i<t;i++)\n\t\t{\n\t\t\tint x=in.nextInt();\n\t\t\tint y=in.nextInt();\n\t\t\tx+=300;\n\t\t\ty+=300;\n\t\t\tif(x>=600||y>=600||x<0||y<0)\n\t\t\t{\n\t\t\t\tout.println(0);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tout.println(a[x][y]);\n\t\t\t}\n\t\t}\n\t\tout.close();\n\n\t}\n\n\tstatic class FastScanner2 {\n\t\tprivate byte[] buf = new byte[1024];\n\t\tprivate int curChar;\n\t\tprivate int snumChars;\n\n\t\tpublic int read() {\n\t\t\tif (snumChars == -1)\n\t\t\t\tthrow new InputMismatchException();\n\t\t\tif (curChar >= snumChars) {\n\t\t\t\tcurChar = 0;\n\t\t\t\ttry {\n\t\t\t\t\tsnumChars = System.in.read(buf);\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t}\n\t\t\t\tif (snumChars <= 0)\n\t\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn buf[curChar++];\n\t\t}\n\n\t\tpublic String nextLine() {\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = read();\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tdo {\n\t\t\t\tres.appendCodePoint(c);\n\t\t\t\tc = read();\n\t\t\t} while (!isEndOfLine(c));\n\t\t\treturn res.toString();\n\t\t}\n\n\t\tpublic String nextString() {\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = read();\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tdo {\n\t\t\t\tres.appendCodePoint(c);\n\t\t\t\tc = read();\n\t\t\t} while (!isSpaceChar(c));\n\t\t\treturn res.toString();\n\t\t}\n\n\t\tpublic long nextLong() {\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = read();\n\t\t\tint sgn = 1;\n\t\t\tif (c == '-') {\n\t\t\t\tsgn = -1;\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tlong res = 0;\n\t\t\tdo {\n\t\t\t\tif (c < '0' || c > '9')\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\tres *= 10;\n\t\t\t\tres += c - '0';\n\t\t\t\tc = read();\n\t\t\t} while (!isSpaceChar(c));\n\t\t\treturn res * sgn;\n\t\t}\n\n\t\tpublic int nextInt() {\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = read();\n\t\t\tint sgn = 1;\n\t\t\tif (c == '-') {\n\t\t\t\tsgn = -1;\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tint res = 0;\n\t\t\tdo {\n\t\t\t\tif (c < '0' || c > '9')\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\tres *= 10;\n\t\t\t\tres += c - '0';\n\t\t\t\tc = read();\n\t\t\t} while (!isSpaceChar(c));\n\t\t\treturn res * sgn;\n\t\t}\n\n\t\tpublic int[] nextIntArray(int n) {\n\t\t\tint[] arr = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tarr[i] = nextInt();\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\n\t\tpublic long[] nextLongArray(int n) {\n\t\t\tlong[] arr = new long[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tarr[i] = nextLong();\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\n\t\tprivate boolean isSpaceChar(int c) {\n\t\t\treturn c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n\t\t}\n\n\t\tprivate boolean isEndOfLine(int c) {\n\t\t\treturn c == '\\n' || c == '\\r' || c == -1;\n\t\t}\n\t}\n\n\tstatic class InputReader {\n\t\tpublic BufferedReader reader;\n\t\tpublic StringTokenizer tokenizer;\n\n\t\tpublic InputReader(InputStream inputstream) {\n\t\t\treader = new BufferedReader(new InputStreamReader(inputstream));\n\t\t\ttokenizer = null;\n\t\t}\n\n\t\tpublic String nextLine() {\n\t\t\tString fullLine = null;\n\t\t\twhile (tokenizer == null || !tokenizer.hasMoreTokens()) {\n\t\t\t\ttry {\n\t\t\t\t\tfullLine = reader.readLine();\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tthrow new RuntimeException(e);\n\t\t\t\t}\n\t\t\t\treturn fullLine;\n\t\t\t}\n\t\t\treturn fullLine;\n\t\t}\n\n\t\tpublic String next() {\n\t\t\twhile (tokenizer == null || !tokenizer.hasMoreTokens()) {\n\t\t\t\ttry {\n\t\t\t\t\ttokenizer = new StringTokenizer(reader.readLine());\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tthrow new RuntimeException(e);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn tokenizer.nextToken();\n\t\t}\n\n\t\tpublic long nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tpublic int[] nextIntArray(int n) {\n\t\t\tint a[] = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\ta[i] = nextInt();\n\t\t\t}\n\t\t\treturn a;\n\t\t}\n\n\t\tpublic long[] nextLongArray(int n) {\n\t\t\tlong a[] = new long[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\ta[i] = nextLong();\n\t\t\t}\n\t\t\treturn a;\n\t\t}\n\n\t\tpublic int nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\t}\n\n\tstatic class OutputWriter {\n\t\tprivate final PrintWriter writer;\n\n\t\tpublic OutputWriter(OutputStream outputStream) {\n\t\t\twriter = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));\n\t\t}\n\n\t\tpublic OutputWriter(Writer writer) {\n\t\t\tthis.writer = new PrintWriter(writer);\n\t\t}\n\n\t\tpublic void print(Object... objects) {\n\t\t\tfor (int i = 0; i < objects.length; i++) {\n\t\t\t\tif (i != 0)\n\t\t\t\t\twriter.print(' ');\n\t\t\t\twriter.print(objects[i]);\n\t\t\t}\n\t\t}\n\n\t\tpublic void println(Object... objects) {\n\t\t\tprint(objects);\n\t\t\twriter.println();\n\t\t}\n\n\t\tpublic void close() {\n\t\t\twriter.close();\n\t\t}\n\n\t\tpublic void flush() {\n\t\t\twriter.flush();\n\t\t}\n\t}\n\n\tprivate static boolean oj = System.getProperty(\"ONLINE_JUDGE\") != null;\n\n\tprivate static void debug(Object... o) {\n\t\tif (!oj)\n\t\t\tSystem.out.println(Arrays.deepToString(o));\n\t}\n\n\tprivate static void tr(Object... o) {\n\t\tif (!oj)\n\t\t\tSystem.out.println(Arrays.deepToString(o));\n\t}\n}\n\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long double pi = acos(-1.0);\nconst long double eps = 1e-9;\nint n, t;\nshort m[210][210];\nshort b[210][210];\nint mx = 0;\nint dx[4] = {-1, 0, 1, 0};\nint dy[4] = {0, 1, 0, -1};\nint main() {\n  cin >> n >> t;\n  long long s = 0;\n  m[100][100] = n;\n  while (1) {\n    int f = 0;\n    memset(b, 0, sizeof b);\n    ;\n    for (int i = 0; i < 201; ++i) {\n      for (int j = 0; j < 201; ++j) {\n        if (m[i][j] >= 4) {\n          f = 1;\n          for (int k = 0; k < 4; ++k) {\n            int xx = i + dx[k];\n            int yy = j + dy[k];\n            b[xx][yy] += m[i][j] / 4;\n          }\n        }\n        b[i][j] += m[i][j] % 4;\n      }\n    }\n    if (!f) {\n      break;\n    }\n    memcpy(m, b, sizeof m);\n    ;\n  }\n  for (int i = 0; i < t; ++i) {\n    int t1, t2;\n    scanf(\"%d%d\", &t1, &t2);\n    if (max(t1, t2) > 100 || min(t1, t2) < -100) {\n      cout << \"0\" << endl;\n    } else {\n      cout << m[100 + t1][100 + t2] << endl;\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "\nimport static java.lang.System.in;\nimport static java.lang.System.out;\n\nimport java.io.*;\nimport java.util.*;\n\npublic class D318stackQueue {\n\tstatic final double EPS = 1e-10;\n\tstatic final double INF = 1 << 31;\n\tstatic final double PI = Math.PI;\n\n\tpublic static Scanner sc = new Scanner(in);\n\tStringBuilder sb = new StringBuilder();\n\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n\tpublic void run() throws IOException {\n\t\tString input;\n\t\tString[] inputArray;\n\t\tinput = br.readLine();\n\t\tinputArray = input.split(\" \");\n\t\tint n = Integer.valueOf(inputArray[0]);\n\t\tint t = Integer.valueOf(inputArray[1]);\n\t\tfinal int TIME = 5800;\n\t\tfinal int SIZE = 67;\n\t\tint[][] board = new int [140][140];\n\t\tboard[SIZE][SIZE] = n;\n\t\tint i,j;\n\t\tfor (int s=0; s<TIME; s++){\n\t\t\tfor (i=1; i<132; i++)\n\t\t\t\tfor (j=2+s%2+i%2; j<132; j+=2){\n\t\t\t\t\tn =board[i][j]/4;\n\t\t\t\t\tboard[i-1][j]+=n;\n\t\t\t\t\tboard[i+1][j]+=n;\n\t\t\t\t\tboard[i][j-1]+=n;\n\t\t\t\t\tboard[i][j+1]+=n;\n\t\t\t\t\tboard[i][j]%=4; \n\t\t\t\t}\n\t\t}\n\t\tfor (i=0; i<t; i++){\n\t\t\tinput = br.readLine();\n\t\t\tinputArray = input.split(\" \");\n\t\t\tint x = Integer.valueOf(inputArray[0]);\n\t\t\tint y = Integer.valueOf(inputArray[1]);\n\t\t\tif (Math.abs(x)>SIZE || Math.abs(y)>SIZE) ln(0);\n\t\t\telse ln(board[x+SIZE][y+SIZE]);\n\t\t}\n\t//\tln(\"YES\");\n\t}\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tnew D318stackQueue().run();\n\t}\n\tpublic static void ln(Object obj) {\n\t\tout.println(obj);\n\t}\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint f[4][2] = {0, -1, 0, 1, -1, 0, 1, 0};\nstruct node {\n  int x, y;\n};\nint k[2000][2000];\nbool used[2000][2000];\nqueue<node> q;\nvoid bfs(int n) {\n  node p;\n  p.x = 1000;\n  p.y = 1000;\n  while (!q.empty()) q.pop();\n  q.push(p);\n  memset(k, 0, sizeof(k));\n  memset(used, 0, sizeof(used));\n  k[1000][1000] = n;\n  while (!q.empty()) {\n    node tmp = q.front();\n    q.pop();\n    used[tmp.x][tmp.y] = 0;\n    for (int i = 0; i < 4; i++) {\n      node nt;\n      nt.x = tmp.x + f[i][0];\n      nt.y = tmp.y + f[i][1];\n      k[nt.x][nt.y] += k[tmp.x][tmp.y] / 4;\n      if (k[nt.x][nt.y] >= 4 && !used[nt.x][nt.y]) {\n        used[nt.x][nt.y] = 1;\n        q.push(nt);\n      }\n    }\n    k[tmp.x][tmp.y] %= 4;\n  }\n  return;\n}\nint main() {\n  int n, m;\n  while (cin >> n >> m) {\n    bfs(n);\n    for (int i = 0; i < m; i++) {\n      int x, y;\n      cin >> x >> y;\n      x += 1000;\n      y += 1000;\n      if (x < 0 || x > 2000 || y < 0 || y > 2000)\n        cout << 0 << endl;\n      else\n        cout << k[x][y] % 4 << endl;\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[201][201] = {0};\nint n, m;\nint main(int argc, char *argv[]) {\n  int x = 100;\n  int y = 100;\n  int ok = 0;\n  cin >> n >> m;\n  a[x][y] = n;\n  do {\n    ok = 0;\n    int max = y;\n    int min = x;\n    for (int i = x; i <= y; i++)\n      for (int j = x; j <= y; j++)\n        if (a[i][j] >= 4) {\n          ok = 1;\n          int numofant = a[i][j];\n          int mods = numofant % 4;\n          int temp = (numofant - mods) / 4;\n          a[i][j - 1] += temp;\n          a[i][j + 1] += temp;\n          a[i - 1][j] += temp;\n          a[i + 1][j] += temp;\n          a[i][j] = mods;\n        }\n    if (a[x - 1][100] >= 4) {\n      x--;\n      y++;\n    }\n  } while (ok == 1);\n  long long u, v;\n  int k[50005];\n  for (int i = 0; i < m; i++) {\n    cin >> u >> v;\n    u += 100;\n    v += 100;\n    if (u > 200 || u < 0 || v > 200 || v < 0)\n      k[i] = 0;\n    else\n      k[i] = a[u][v];\n  }\n  for (int i = 0; i < m; i++) cout << k[i] << endl;\n  return EXIT_SUCCESS;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint dx[] = {-1, 1, 0, 0};\nint dy[] = {0, 0, -1, 1};\nint n;\nint t[256][256];\nint main() {\n  int i, j, k;\n  bool fl;\n  scanf(\"%d\", &n);\n  memset(t, 0, sizeof(t));\n  t[128][128] = n;\n  int it = 0;\n  while (1) {\n    it++;\n    fl = 0;\n    for (i = 1; i < 255; i++)\n      for (j = 1; j < 255; j++) {\n        if (t[i][j] >= 4) {\n          fl = 1;\n          int ad = t[i][j] / 4;\n          for (k = 0; k < 4; k++) {\n            t[i + dx[k]][j + dy[k]] += ad;\n          }\n          t[i][j] &= 3;\n        }\n      }\n    if (!fl) break;\n  }\n  int q;\n  scanf(\"%d\", &q);\n  for (i = 0; i < q; i++) {\n    scanf(\"%d %d\", &j, &k);\n    if (k + 128 >= 256 || j + 128 >= 256 || k + 128 < 1 || j + 128 < 1) {\n      printf(\"0\\n\");\n    } else\n      printf(\"%d\\n\", t[j + 128][k + 128]);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint d[1001][1001] = {0}, p[1001][1001] = {0};\nint main() {\n  int n, m;\n  cin >> n >> m;\n  d[500][500] = n;\n  int q = 0;\n  int w = 0;\n  while (1) {\n    bool any = false;\n    for (int i = 500 - q; i <= 500 + q; ++i) {\n      for (int j = 500 - w; j <= 500 + w; ++j) {\n        if (d[i][j] >= 4)\n          any = true;\n        else\n          continue;\n        p[i + 1][j] += d[i][j] / 4;\n        p[i][j + 1] += d[i][j] / 4;\n        p[i][j - 1] += d[i][j] / 4;\n        p[i - 1][j] += d[i][j] / 4;\n        q = max(q, i + 1 - 500);\n        w = max(w, j + 1 - 500);\n        q = max(q, 500 - i + 1);\n        w = max(w, 500 - j + 1);\n        d[i][j] %= 4;\n      }\n    }\n    for (int i = 500 - q; i <= 500 + q; ++i) {\n      for (int j = 500 - w; j <= 500 + w; ++j) {\n        d[i][j] += p[i][j];\n        p[i][j] = 0;\n      }\n    }\n    if (!any) break;\n  }\n  for (int i = 0; i < m; ++i) {\n    int x, y;\n    cin >> x >> y;\n    if (x < -500 || x > 500 || y < -500 || y > 500)\n      cout << \"0\\n\";\n    else\n      cout << d[x + 500][y + 500] << \"\\n\";\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint grid[101][101];\nint ukxb[101][101];\nint x, y, m = 1;\nvoid Translate() {\n  if (x < 0) x = -x;\n  if (y < 0) y = -y;\n}\nbool Propagate() {\n  int peak = 0;\n  for (y = 0; y <= 0 + m; y++)\n    for (x = 0; x <= 0 + m; x++) {\n      int ukxn = grid[y][x] % 4;\n      ukxn += grid[y][x > 0 ? x - 1 : 1] / 4;\n      ukxn += grid[y > 0 ? y - 1 : 1][x] / 4;\n      ukxn += grid[y][x + 1] / 4;\n      ukxn += grid[y + 1][x] / 4;\n      ukxb[y][x] = ukxn;\n      if (ukxn > peak) peak = ukxn;\n      if (ukxn && x - 0 >= m) m = x - 0 + 1;\n    }\n  for (y = 0; y < 0 + m; y++)\n    for (x = 0; x < 0 + m; x++) {\n      grid[y][x] = ukxb[y][x];\n    }\n  return peak >= 4;\n}\nint main() {\n  int q, n;\n  scanf(\"%d %d\", &n, &q);\n  x = y = 0;\n  Translate();\n  grid[y][x] = n;\n  while (Propagate())\n    ;\n  for (; q > 0; q--) {\n    scanf(\"%d %d\", &x, &y);\n    Translate();\n    printf(\"%d\\n\", y > 175 || x > 175 ? 0 : grid[y][x]);\n  }\n  if (0) {\n    for (y = 0; y < 101; y++) {\n      for (x = 0; x < 101; x++) {\n        if (0) {\n          printf(\"%d\", grid[y][x]);\n        }\n      }\n      if (0) {\n        putchar(10);\n      }\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nbool vis[203][203];\nint dir[4][2] = {1, 0, -1, 0, 0, 1, 0, -1};\nint a[203][203];\nvoid dfs(int x, int y) {\n  if (a[x][y] >= 4) {\n    int cnt = a[x][y] / 4;\n    a[x][y] -= 4 * cnt;\n    for (int k = 0; k < 4; k++) {\n      int fx = x + dir[k][0];\n      int fy = y + dir[k][1];\n      a[fx][fy] += cnt;\n      dfs(fx, fy);\n    }\n  }\n}\nint n, t;\nint main() {\n  int i, j;\n  scanf(\"%d%d\", &n, &t);\n  a[100][100] = n;\n  dfs(100, 100);\n  for (i = 0; i <= 200; i++)\n    for (j = 0; j <= 200; j++)\n      if (a[i][j] >= 4) {\n        dfs(i, j);\n      }\n  while (t--) {\n    int x, y;\n    scanf(\"%d%d\", &x, &y);\n    if (x < 100 && x > -100 && y < 100 && y > -100)\n      printf(\"%d\\n\", a[x + 100][y + 100]);\n    else\n      printf(\"0\\n\");\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[205][205];\nvoid dfs(int x, int y, int n) {\n  a[x][y] += n;\n  if (a[x][y] < 4) return;\n  a[x][y] -= 4;\n  if (a[x][y] > 3) dfs(x, y, 0);\n  dfs(x - 1, y, 1);\n  dfs(x + 1, y, 1);\n  dfs(x, y + 1, 1);\n  dfs(x, y - 1, 1);\n}\nint main() {\n  cin.sync_with_stdio(false);\n  cout.sync_with_stdio(false);\n  int n, t;\n  cin >> n >> t;\n  int zero = 100;\n  dfs(100, 100, n);\n  while (t--) {\n    int x, y;\n    cin >> x >> y;\n    if (x > 100 || x < -100 || y > 100 || y < -100)\n      cout << 0 << endl;\n    else\n      cout << a[x + zero][y + zero] << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long gcd(long long a, long long b) { return !b ? a : gcd(b, a % b); }\nconst int LM = 5005;\nconst long long mod = 1000000007;\nint moveX[] = {0, 0, -1, 1};\nint moveY[] = {-1, 1, 0, 0};\nint ants[LM][LM];\nclass problem {\n  void dfs(int x, int y) {\n    if (ants[x][y] < 4) return;\n    int add = ants[x][y] / 4;\n    ants[x][y] -= add * 4;\n    for (int i = 0; i < 4; i += 1) {\n      int newX = x + moveX[i], newY = y + moveY[i];\n      ants[newX][newY] += add;\n      dfs(newX, newY);\n    }\n  }\n\n public:\n  void init() {\n    int N, T;\n    scanf(\"%d %d\", &N, &T);\n    ants[2500][2500] = N;\n    dfs(2500, 2500);\n    for (int i = 0; i < T; i += 1) {\n      int x, y;\n      scanf(\"%d %d\", &x, &y);\n      x += 2500, y += 2500;\n      if (x < 0 || x >= LM || y < 0 || y >= LM)\n        printf(\"0\\n\");\n      else\n        printf(\"%d\\n\", ants[x][y]);\n    }\n  }\n};\nint main() {\n  problem obj;\n  obj.init();\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint dh[4] = {-1, 0, 1, 0}, dw[4] = {0, 1, 0, -1};\nint cnt[2 * 70][2 * 70];\nvoid doit(int a, int b) {\n  int i, j, k, c = cnt[a][b] / 4;\n  for (k = 0; k < 4; k++) {\n    i = a + dh[k];\n    j = b + dw[k];\n    cnt[i][j] += c;\n  }\n  cnt[a][b] -= 4 * c;\n}\nint main() {\n  int i, j, n, t, a, b;\n  bool bf = 1;\n  scanf(\"%d%d\", &n, &t);\n  cnt[70][70] = n;\n  while (bf) {\n    bf = 0;\n    for (i = 1; i < 2 * 70; i++)\n      for (j = 1; j < 2 * 70; j++)\n        if (cnt[i][j] >= 4) {\n          doit(i, j);\n          bf = 1;\n        }\n  }\n  while (t--) {\n    scanf(\"%d%d\", &a, &b);\n    if (a + 70 < 1 || a + 70 >= 2 * 70 || b + 70 < 1 || b + 70 >= 2 * 70)\n      puts(\"0\");\n    else\n      printf(\"%d\\n\", cnt[a + 70][b + 70]);\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <typename T>\ninline string tostring(const T &x) {\n  ostringstream os;\n  os << x;\n  return os.str();\n}\ninline int toint(const string &s) {\n  istringstream is(s);\n  int x;\n  is >> x;\n  return x;\n}\ninline int todecimal(string s) {\n  int a = 0;\n  for (int i = 0; i < s.size(); i++) a = 2 * a + (s[i] - '0');\n  return a;\n}\ninline string tobinary(int a) {\n  string s;\n  while (a != 0) {\n    s = (char)(a % 2 + '0') + s;\n    a >>= 1;\n  }\n  return s;\n}\ntemplate <typename T>\ninline T sqr(T x) {\n  return x * x;\n}\ntemplate <typename T>\nT gcd(T a, T b) {\n  return (b == 0) ? abs(a) : gcd(b, a % b);\n}\ninline int isvowel(char c) {\n  if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') return 1;\n  return 0;\n}\ninline int isprime(int a) {\n  for (int i = 2; i * i <= a; i++)\n    if (!(a % i)) return 0;\n  return 1;\n}\ninline void inp(int &n) {\n  n = 0;\n  int ch = getchar();\n  int sign = 1;\n  while (ch < '0' || ch > '9') {\n    if (ch == '-') sign = -1;\n    ch = getchar();\n  }\n  while (ch >= '0' && ch <= '9')\n    n = (n << 3) + (n << 1) + ch - '0', ch = getchar();\n  n = n * sign;\n}\nconst int dx4[4] = {0, 0, 1, -1};\nconst int dy4[4] = {1, -1, 0, 0};\nconst int dx8[8] = {0, 0, 1, 1, 1, -1, -1, -1};\nconst int dy8[8] = {1, -1, 0, 1, -1, 1, 0, -1};\nclass node {\n public:\n  int x, y, z;\n  node(int a, int b, int c) {\n    x = a;\n    y = b;\n    z = c;\n  }\n};\nbool operator<(const node &a, const node &b) { return a.x > b.x; }\nbool compare(const node &a, const node &b) { return a.x < b.x; }\nconst int maxn = 66;\nint grid[maxn][maxn];\nint n;\nvoid solve() {\n  memset((grid), (0), sizeof(grid));\n  grid[0][0] = n;\n  int moving = 1;\n  while (moving) {\n    moving = 0;\n    for (int i = 0; i < maxn; i++) {\n      for (int j = 0; j < maxn; j++) {\n        int x = grid[i][j] / 4;\n        grid[i + 1][j] += x;\n        grid[i][j + 1] += x;\n        if (i) grid[i - 1][j] += x * (i == 1 ? 2 : 1);\n        if (j) grid[i][j - 1] += x * (j == 1 ? 2 : 1);\n        grid[i][j] %= 4;\n        if (x) moving = 1;\n      }\n    }\n  }\n  int q = 0;\n  ;\n  cin >> q;\n  int x, y;\n  for (int i = 0; i < q; i++) {\n    cin >> x >> y;\n    if (x < 0) x = -x;\n    if (y < 0) y = -y;\n    if (x >= maxn || y >= maxn)\n      cout << 0 << endl;\n    else\n      cout << grid[x][y] << endl;\n  }\n}\nvoid input() { cin >> n; }\nint main() {\n  int testcase = 1;\n  for (int i = 0; i < testcase; i++) {\n    input();\n    solve();\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "// practice with rainboy\nimport java.io.*;\nimport java.util.*;\n\npublic class CF317B extends PrintWriter {\n\tCF317B() { super(System.out); }\n\tScanner sc = new Scanner(System.in);\n\tpublic static void main(String[] $) {\n\t\tCF317B o = new CF317B(); o.main(); o.flush();\n\t}\n\n\tstatic final int Z = 200;\n\tvoid main() {\n\t\tint n = sc.nextInt();\n\t\tint t = sc.nextInt();\n\t\tint[][] kk = new int[Z + 1 + Z][Z + 1 + Z];\n\t\tkk[Z][Z] = n;\n\t\twhile (true) {\n\t\t\tboolean updated = false;\n\t\t\tfor (int x = 1; x < Z + Z; x++)\n\t\t\t\tfor (int y = 1; y < Z + Z; y++)\n\t\t\t\t\tif (kk[x][y] >= 4) {\n\t\t\t\t\t\tint k = kk[x][y] / 4;\n\t\t\t\t\t\tkk[x][y] %= 4;\n\t\t\t\t\t\tkk[x - 1][y] += k;\n\t\t\t\t\t\tkk[x + 1][y] += k;\n\t\t\t\t\t\tkk[x][y - 1] += k;\n\t\t\t\t\t\tkk[x][y + 1] += k;\n\t\t\t\t\t\tupdated = true;\n\t\t\t\t\t}\n\t\t\tif (!updated)\n\t\t\t\tbreak;\n\t\t}\n\t\twhile (t-- > 0) {\n\t\t\tint x = sc.nextInt();\n\t\t\tint y = sc.nextInt();\n\t\t\tprintln(x < -Z || x > Z || y < -Z || y > Z ? 0 : kk[Z + x][Z + y]);\n\t\t}\n\t}\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.PrintWriter;\nimport java.util.*;\n\npublic class TaskD {\n  public static void main(String[] args) {\n    TaskD tD = new TaskD();\n    PrintWriter pw = new PrintWriter(System.out);\n    tD.solve(new Scanner(System.in), pw);\n    pw.close();\n  }\n\n  public void solve(Scanner input, PrintWriter output) {\n    int n = input.nextInt();\n    int q = input.nextInt();\n    int[][] cell = new int[500][500];\n    process(cell, 200, 200, n);\n    for (int query = 0; query < q; query++) {\n      int x = input.nextInt() + 200;\n      int y = input.nextInt() + 200;\n      if (x < 0 || y < 0 || x >= 500 || y >= 500) \n        output.println(0);\n      else \n        output.println(cell[x][y]);\n    }\n  }\n\n  private void process(int[][] cell, int x, int y, int val) {\n    cell[x][y] += val;\n    if (cell[x][y] < 4) return;\n    cell[x][y] -= 4;\n    process(cell, x + 1, y, 1);\n    process(cell, x - 1, y, 1);\n    process(cell, x, y - 1, 1);\n    process(cell, x, y + 1, 1);\n    process(cell, x, y, 0);\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\n  public class D_2013_Jun_14_Div2 {\n    public static void main(String[] args) throws IOException {\n      BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\n      String[] as = reader.readLine().split(\"\\\\s+\");\n      int n = Integer.parseInt(as[0]);\n      int k = Integer.parseInt(as[1]);\n      int[][] field = new int[4000][];\n      for (int i = 0; i < field.length; i++) {\n        field[i] = new int[4000];\n      }\n      field[2000][2000] = n;\n      boolean flag = true;\n      int radius = 0;\n      while(flag) {\n        boolean newF = false;\n        for (int i = 2000 - radius; i <= 2000 + radius; i++) {\n          for (int j = 2000 - radius; j <= 2000 + radius ; j++) {\n            if (field[i][j] >= 4) {\n              newF = true;\n              int count = field[i][j] / 4;\n              field[i][j] %= 4;\n              field[i+1][j]+= count;\n              field[i-1][j]+=count;\n              field[i][j+1]+=count;\n              field[i][j-1]+=count;\n              radius = Math.max(radius, Math.max(i +1 - 2000, j +1-2000));\n            }\n          }\n        }\n        flag = newF;\n      }\n      for (int i = 0; i < k; i++) {\n        String[] split = reader.readLine().split(\"\\\\s+\");\n        int x = Integer.parseInt(split[0]) + 2000;\n        int y = Integer.parseInt(split[1]) + 2000;\n        if (x < 0 || y <0 || x >=4000 || y >= 4000 ) {\n          System.out.println(0);\n        } else{\n          System.out.println(field[x][y]);\n        }\n      }\n    }\n  }\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\nimport java.math.BigInteger;\nimport static java.lang.Math.*;\nimport static java.math.BigInteger.*;\n\npublic class Main {\n\n    BufferedReader br;\n    StringTokenizer in;\n    PrintWriter out;\n\n    String next() throws IOException {\n        while( in==null || !in.hasMoreTokens() )\n            in = new StringTokenizer( br.readLine() );\n        return in.nextToken();\n    }\n\n    int nextInt() throws IOException {\n        return Integer.parseInt(next());\n    }\n\n    long nextLong() throws IOException {\n        return Long.parseLong(next());\n    }\n\n    public static void main(String[] args) throws IOException {\n        new Main().run();\n    }\n\n\n\n\n\n    void run() throws IOException {\n        boolean oj = System.getProperty(\"ONLINE_JUDGE\") != null;\n        Reader reader = oj ? new InputStreamReader(System.in) :\n                new FileReader(\"input.txt\");\n        br = new BufferedReader(reader);\n        out = new PrintWriter(\n                oj ? new OutputStreamWriter(System.out) :\n                        new FileWriter(\"output.txt\"));\n        solve();\n        //deb();\n        out.flush();\n    }\n\n    class pt{\n        int x, y;\n        pt( int _x, int _y ){\n            x = _x;\n            y = _y;\n        }\n        pt add( pt b ){\n            return new pt( x+b.x, y+b.y );\n        }\n    }\n\n    final pt[] dxy = new pt[]{\n        new pt(-1,0),\n        new pt(+1,0),\n        new pt(0,-1),\n        new pt(0,+1),\n    };\n\n    final int\n            nmax = 130, x0 = nmax/2, y0 = nmax/2,\n            ant = 30_000;\n    boolean[][] isQ = new boolean[nmax][nmax];\n\n    boolean bf(int[][] pl){\n        boolean didSome = false;\n        for( int x = 0; x < nmax; ++x ){\n            for( int y = 0; y < nmax; ++y ){\n                if( 4 <= pl[x][y] ){\n                    int cnt = pl[x][y] / 4;\n                    pl[x][y] -= cnt*4;\n                    pl[x-1][y] += cnt;\n                    pl[x+1][y] += cnt;\n                    pl[x][y-1] += cnt;\n                    pl[x][y+1] += cnt;\n                    didSome = true;\n                }\n            }\n        }\n        for( int y = 0; y < nmax; ++y ){\n        for( int x = 0; x < nmax; ++x ){\n                if( 4 <= pl[x][y] ){\n                    int cnt = pl[x][y] / 4;\n                    pl[x][y] -= cnt*4;\n                    pl[x-1][y] += cnt;\n                    pl[x+1][y] += cnt;\n                    pl[x][y-1] += cnt;\n                    pl[x][y+1] += cnt;\n                    didSome = true;\n                }\n            }\n        }\n        return  didSome;\n    }\n\n    void show(int[][] pl){\n        for( int y = nmax-1; 0 <= y; --y ){\n            for( int x = 0; x < nmax; ++x)\n                out.printf(\"%3d\",pl[x][y]);\n            out.println();\n        }\n        out.println();\n    }\n\n    void solve() throws IOException{\nlabelSolve:\n    {\n        Long tBeg = System.currentTimeMillis();\n        int[][] pl = new int[nmax][nmax];\n        pl[x0][y0] = nextInt();\n        while(bf(pl));\n\n        int t = nextInt();\n        for( int i = 0; i < t; ++i ){\n            int x = nextInt();\n            int y = nextInt();\n            x += x0;\n            y += y0;\n            if( 0<= x && x < nmax &&\n                0<= y && y < nmax\n            )\n                out.println( pl[x][y] );\n            else\n                out.println(0);\n        }\n\n\n//        show(A);\n\n\n\n//        System.out.println((System.currentTimeMillis()-tBeg)/1e3);\n//        System.out.flush();\n    }\n    }\n\n\n\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[610][610], i, j, n, q, x, y;\nvoid dfs(int x, int y) {\n  if (a[x][y] >= 4) {\n    int d = a[x][y] / 4;\n    a[x - 1][y] += d;\n    a[x + 1][y] += d;\n    a[x][y - 1] += d;\n    a[x][y + 1] += d;\n    a[x][y] -= 4 * d;\n    dfs(x - 1, y);\n    dfs(x + 1, y);\n    dfs(x, y - 1);\n    dfs(x, y + 1);\n  }\n}\nint main() {\n  scanf(\"%d%d\", &n, &q);\n  a[300][300] = n;\n  dfs(300, 300);\n  for (i = 1; i <= q; ++i) {\n    scanf(\"%d%d\", &x, &y);\n    if (abs(x) + abs(y) <= 300)\n      printf(\"%d\\n\", a[300 + x][300 + y]);\n    else\n      printf(\"0\\n\");\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.IOException;\nimport java.io.OutputStreamWriter;\nimport java.io.BufferedWriter;\nimport java.util.InputMismatchException;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.io.Writer;\nimport java.io.InputStream;\nimport java.util.ArrayList;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        OutputWriter out = new OutputWriter(outputStream);\n        ANTS solver = new ANTS();\n        int testCount = 1;\n        for (int i = 1; i <= testCount; i++) {\n            solver.solve(i, in, out);\n        }\n        out.close();\n    }\n}\n\nclass ANTS {\n\n    public void solve(int testNumber, InputReader in, OutputWriter out) {\n\n        int n = in.readInt();\n        int t = in.readInt();\n\n        int d = 100;\n\n        int[][] ants = new int[2 * d][2 * d];\n\n        ants[d][d] = n;\n\n        \n        while (true) {\n            boolean update = false;\n            for (int i = 0; i < 2 * d; i++) {\n                for (int j = 0; j < 2 * d; j++) {\n                    if (ants[i][j] >= 4) {\n                        update = true;\n                        ants[i - 1][j] += ants[i][j] >> 2;\n                        ants[i + 1][j] += ants[i][j] >> 2;\n                        ants[i][j - 1] += ants[i][j] >> 2;\n                        ants[i][j + 1] += ants[i][j] >> 2;\n                        ants[i][j] = ants[i][j] & 3;\n                    }\n                }\n            }\n            if(!update)\n                break;\n        }\n        \n        for( int i = 0; i < t; i++){\n             \n            int x = in.readInt();\n            int y = in.readInt();\n            \n            if(Math.abs(x) < d && Math.abs(y) < d)\n                out.printLine(ants[x+d][y+d]); \n            else\n                out.printLine(0);  \n        }\n    }\n}\n\nclass InputReader {\n\n    private InputStream stream;\n    private byte[] buf = new byte[1024];\n    private int curChar;\n    private int numChars;\n    private SpaceCharFilter filter;\n\n    public InputReader(InputStream stream) {\n        this.stream = stream;\n    }\n\n    public int read() {\n        if (numChars == -1) {\n            throw new InputMismatchException();\n        }\n        if (curChar >= numChars) {\n            curChar = 0;\n            try {\n                numChars = stream.read(buf);\n            } catch (IOException e) {\n                throw new InputMismatchException();\n            }\n            if (numChars <= 0) {\n                return -1;\n            }\n        }\n        return buf[curChar++];\n    }\n\n    public int readInt() {\n        int c = read();\n        while (isSpaceChar(c)) {\n            c = read();\n        }\n        int sgn = 1;\n        if (c == '-') {\n            sgn = -1;\n            c = read();\n        }\n        int res = 0;\n        do {\n            if (c < '0' || c > '9') {\n                throw new InputMismatchException();\n            }\n            res *= 10;\n            res += c - '0';\n            c = read();\n        } while (!isSpaceChar(c));\n        return res * sgn;\n    }\n\n    public String readString() {\n        int c = read();\n        while (isSpaceChar(c)) {\n            c = read();\n        }\n        StringBuilder res = new StringBuilder();\n        do {\n            res.appendCodePoint(c);\n            c = read();\n        } while (!isSpaceChar(c));\n        return res.toString();\n    }\n\n    public boolean isSpaceChar(int c) {\n        if (filter != null) {\n            return filter.isSpaceChar(c);\n        }\n        return isWhitespace(c);\n    }\n\n    public static boolean isWhitespace(int c) {\n        return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n    }\n\n    public String next() {\n        return readString();\n    }\n\n    public interface SpaceCharFilter {\n\n        public boolean isSpaceChar(int ch);\n    }\n}\n\nclass OutputWriter {\n\n    private final PrintWriter writer;\n\n    public OutputWriter(OutputStream outputStream) {\n        writer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));\n    }\n\n    public OutputWriter(Writer writer) {\n        this.writer = new PrintWriter(writer);\n    }\n\n    public void print(Object... objects) {\n        for (int i = 0; i < objects.length; i++) {\n            if (i != 0) {\n                writer.print(' ');\n            }\n            writer.print(objects[i]);\n        }\n    }\n\n    public void printLine(Object... objects) {\n        print(objects);\n        writer.println();\n    }\n\n    public void close() {\n        writer.close();\n    }\n}\n\nclass IOUtils {\n\n    public static int[] readIntArray(InputReader in, int size) {\n        int[] array = new int[size];\n        for (int i = 0; i < size; i++) {\n            array[i] = in.readInt();\n        }\n        return array;\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid Get(int &T) {\n  char C;\n  bool F = 0;\n  for (; C = getchar(), C < '0' || C > '9';)\n    if (C == '-') F = 1;\n  for (T = C - '0'; C = getchar(), C >= '0' && C <= '9'; T = T * 10 + C - '0')\n    ;\n  F && (T = -T);\n}\nint F[200][200];\nint Need[200][200];\nint N;\nvoid Init() { Get(N); }\nint M;\nvoid Work() {\n  F[100][100] = N;\n  for (int Again = 1; Again;) {\n    Again = 0;\n    for (int i = 35; i <= 165; i++)\n      for (int j = 35; j <= 165; j++) {\n        Need[i][j] = F[i][j] / 4;\n        F[i][j] %= 4;\n      }\n    for (int i = 35; i <= 165; i++)\n      for (int j = 35; j <= 165; j++) {\n        if (Need[i][j]) Again = 1;\n        F[i - 1][j] += Need[i][j];\n        F[i + 1][j] += Need[i][j];\n        F[i][j - 1] += Need[i][j];\n        F[i][j + 1] += Need[i][j];\n        Need[i][j] = 0;\n      }\n  }\n  Get(M);\n  for (int k = 1, X, Y; k <= M; k++) {\n    Get(X);\n    Get(Y);\n    X += 100;\n    Y += 100;\n    if (X < 35 || X > 165 || Y < 35 || Y > 165)\n      puts(\"0\");\n    else\n      printf(\"%d\\n\", F[X][Y]);\n  }\n}\nint main() {\n  Init();\n  Work();\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstruct node {\n  int x, y;\n};\nint s[210][210];\nint dx[] = {1, 0, 0, -1};\nint dy[] = {0, 1, -1, 0};\nint main() {\n  int i, j, k, m, n, p, q;\n  while (~scanf(\"%d%d\", &n, &m)) {\n    memset(s, 0, sizeof(s));\n    s[100][100] = n;\n    vector<node> ss;\n    node ret;\n    ret.x = 100;\n    ret.y = 100;\n    ss.push_back(ret);\n    for (i = 0; i < ss.size(); i++) {\n      int x = ss[i].x;\n      int y = ss[i].y;\n      int j = s[x][y] / 4;\n      s[x][y] %= 4;\n      for (k = 0; k < 4; k++) {\n        int nx = x + dx[k];\n        int ny = y + dy[k];\n        s[nx][ny] += j;\n        if (s[nx][ny] - j < 4 && s[nx][ny] >= 4) {\n          ret.x = nx;\n          ret.y = ny;\n          ss.push_back(ret);\n        }\n      }\n    }\n    while (m--) {\n      scanf(\"%d%d\", &p, &q);\n      if (abs(p) >= 100 || abs(q) >= 100) {\n        puts(\"0\");\n        continue;\n      }\n      printf(\"%d\\n\", s[p + 100][q + 100]);\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint G[200][200];\nvoid dfs(int x, int y) {\n  if (G[x][y] < 4) return;\n  int d = G[x][y] / 4;\n  G[x][y] %= 4;\n  G[x + 1][y] += d;\n  dfs(x + 1, y);\n  G[x - 1][y] += d;\n  dfs(x - 1, y);\n  G[x][y + 1] += d;\n  dfs(x, y + 1);\n  G[x][y - 1] += d;\n  dfs(x, y - 1);\n}\nint main() {\n  int n, t;\n  cin >> n >> t;\n  G[100][100] = n;\n  dfs(100, 100);\n  while (t--) {\n    int x, y;\n    cin >> x >> y;\n    x += 100, y += 100;\n    if (x < 0 || x >= 200 || y < 0 || y >= 200)\n      cout << 0 << endl;\n    else\n      cout << G[x][y] << endl;\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstruct c_istream {\n  c_istream operator>>(int &n) {\n    scanf(\"%i\", &n);\n    return *this;\n  }\n  c_istream operator>>(char &c) {\n    scanf(\"%c\", &c);\n    return *this;\n  }\n  c_istream operator>>(double &d) {\n    scanf(\"%lf\", &d);\n    return *this;\n  }\n};\nstruct c_ostream {\n  c_ostream operator<<(int n) {\n    printf(\"%d\", n);\n    return *this;\n  }\n  c_ostream operator<<(char c) {\n    printf(\"%c\", c);\n    return *this;\n  }\n  c_ostream operator<<(double d) {\n    printf(\"%lf\", d);\n    return *this;\n  }\n  c_ostream operator<<(const char *s) {\n    printf(\"%s\", s);\n    return *this;\n  }\n};\nint arr[200][200];\nvoid fill(int x, int y) {\n  if (arr[x][y] < 4) return;\n  int cnt = arr[x][y] / 4;\n  arr[x][y] %= 4;\n  arr[x + 1][y] += cnt;\n  arr[x - 1][y] += cnt;\n  arr[x][y + 1] += cnt;\n  arr[x][y - 1] += cnt;\n  fill(x + 1, y);\n  fill(x - 1, y);\n  fill(x, y + 1);\n  fill(x, y - 1);\n}\nint main() {\n  int n, t;\n  cin >> n >> t;\n  arr[100][100] = n;\n  fill(100, 100);\n  for (int i = 0; i < t; i++) {\n    int x, y;\n    cin >> x >> y;\n    if (x >= -100 && x < 100 && y >= -100 && y < 100)\n      cout << arr[x + 100][y + 100] << '\\n';\n    else\n      cout << 0 << '\\n';\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint ar[150][150];\nint main() {\n  int n, t;\n  scanf(\"%d\", &n);\n  scanf(\"%d\", &t);\n  int f = 1;\n  int br = 70, bc = 70;\n  ar[br][bc] = n;\n  int c = 0, iter = 0;\n  int maxx, maxy;\n  maxx = -1;\n  maxy = -1;\n  while (f) {\n    c = 0;\n    iter++;\n    for (int(i) = (0); (i) < (141); ++(i)) {\n      for (int(j) = (0); (j) < (141); ++(j)) {\n        if (ar[i][j] >= 4) {\n          c++;\n          maxx = max(maxx, i);\n          maxy = max(maxy, j);\n        }\n        int first = ar[i][j] % 4;\n        if (i + 1 < 140) {\n          ar[i + 1][j] += ar[i][j] / 4;\n        }\n        if (i - 1 >= 0) {\n          ar[i - 1][j] += ar[i][j] / 4;\n        }\n        if (j + 1 < 140) {\n          ar[i][j + 1] += ar[i][j] / 4;\n        }\n        if (j - 1 >= 0) {\n          ar[i][j - 1] += ar[i][j] / 4;\n        }\n        ar[i][j] = ar[i][j] % 4;\n      }\n    }\n    if (c == 0) break;\n  }\n  while (t--) {\n    int first, second;\n    scanf(\"%d\", &first);\n    scanf(\"%d\", &second);\n    if (first + 70 > 140 || first + 70 < 0 || second + 70 > 140 ||\n        second + 70 < 0) {\n      printf(\"0\\n\");\n      continue;\n    }\n    printf(\"%d\\n\", ar[first + 70][second + 70]);\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int fx[4] = {1, -1, 0, 0}, fy[4] = {0, 0, -1, 1};\nint n, t;\nint a[80 * 2 + 1][80 * 2 + 1], b[80 * 2 + 1][80 * 2 + 1];\nint main() {\n  scanf(\"%d%d\", &n, &t);\n  a[80][80] = n;\n  while (1) {\n    int ok = 0;\n    for (int i = 0; i <= 2 * 80; ++i)\n      for (int j = 0; j <= 2 * 80; ++j) {\n        if (a[i][j] >= 4) {\n          for (int k = 0; k <= 3; ++k) {\n            int x = i + fx[k], y = j + fy[k];\n            if (x > -1 && y > -1 && x <= 2 * 80 && y <= 2 * 80)\n              b[x][y] += a[i][j] / 4;\n          }\n          ok = 1;\n        }\n        b[i][j] += a[i][j] % 4;\n      }\n    for (int i = 0; i <= 2 * 80; ++i)\n      for (int j = 0; j <= 2 * 80; ++j) {\n        a[i][j] = b[i][j];\n        b[i][j] = 0;\n      }\n    if (!ok) break;\n  }\n  while (t--) {\n    int x, y;\n    scanf(\"%d%d\", &x, &y);\n    if (abs(x) > 80 || abs(y) > 80)\n      printf(\"%d\\n\", 0);\n    else\n      printf(\"%d\\n\", a[x + 80][y + 80]);\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "//package round188;\nimport java.io.ByteArrayInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.InputMismatchException;\n\npublic class B2 {\n\tInputStream is;\n\tPrintWriter out;\n\tString INPUT = \"\";\n\t\n\tvoid solve()\n\t{\n\t\tint n = ni(), t = ni();\n\t\tint[][] co = new int[t][];\n\t\tfor(int i = 0;i < t;i++){\n\t\t\tint x = ni(), y = ni();\n\t\t\tco[i] = new int[]{x, y};\n\t\t}\n\t\t\n\t\tint N = 66;\n\t\tint[][] pre = new int[N][N];\n\t\tint[][] cur = new int[N][N];\n\t\tpre[0][0] = n;\n\t\tint[] dr = { 1, 0, -1, 0 };\n\t\tint[] dc = { 0, 1, 0, -1 };\n\t\tint[][] ved = new int[10000][];\n\t\tboolean[][] touch = new boolean[N][N];\n\t\ttouch[0][0] = true;\n\t\tint p = 0;\n\t\tved[p++] = new int[]{0, 0};\n\t\tfor(int i = 0;;i++){\n\t\t\tboolean ouch = false;\n\t\t\tfor(int j = 0;j < N;j++){\n\t\t\t\tArrays.fill(cur[j], 0);\n\t\t\t}\n\t\t\tfor(int j = p-1;j >= 0;j--){\n\t\t\t\tint r = ved[j][0], c = ved[j][1];\n\t\t\t\tif(pre[r][c] >= 4){\n\t\t\t\t\touch = true;\n\t\t\t\t\tcur[r][c] += pre[r][c] & 3;\n\t\t\t\t\tfor(int l = 0;l < 4;l++){\n\t\t\t\t\t\tint nr = r + dr[l], nc = c + dc[l];\n\t\t\t\t\t\tif(nr >= 0 && nc >= 0){\n\t\t\t\t\t\t\tcur[nr][nc] += pre[r][c]>>>2;\n\t\t\t\t\t\t\tif(!touch[nr][nc]){\n\t\t\t\t\t\t\t\ttouch[nr][nc] = true;\n\t\t\t\t\t\t\t\tved[p++] = new int[]{nr, nc};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(r == 1){\n\t\t\t\t\t\tcur[0][c] += pre[r][c]>>>2;\n\t\t\t\t\t}\n\t\t\t\t\tif(c == 1){\n\t\t\t\t\t\tcur[r][0] += pre[r][c]>>>2;\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\tcur[r][c] += pre[r][c];\n\t\t\t\t}\n\t\t\t}\n\t\t\tint[][] dum = pre; pre = cur; cur = dum;\n\t\t\tif(!ouch)break;\n\t\t}\n\t\tfor(int i = 0;i < t;i++){\n\t\t\tint r = Math.abs(co[i][0]);\n\t\t\tint c = Math.abs(co[i][1]);\n\t\t\tif(r < 66 && c < 66){\n\t\t\t\tout.println(cur[r][c]);\n\t\t\t}else{\n\t\t\t\tout.println(0);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tvoid run() throws Exception\n\t{\n\t\tis = oj ? System.in : new ByteArrayInputStream(INPUT.getBytes());\n\t\tout = new PrintWriter(System.out);\n\t\t\n\t\tlong s = System.currentTimeMillis();\n\t\tsolve();\n\t\tout.flush();\n\t\ttr(System.currentTimeMillis()-s+\"ms\");\n\t}\n\t\n\tpublic static void main(String[] args) throws Exception { new B2().run(); }\n\t\n\tprivate byte[] inbuf = new byte[1024];\n\tprivate int lenbuf = 0, ptrbuf = 0;\n\t\n\tprivate int readByte()\n\t{\n\t\tif(lenbuf == -1)throw new InputMismatchException();\n\t\tif(ptrbuf >= lenbuf){\n\t\t\tptrbuf = 0;\n\t\t\ttry { lenbuf = is.read(inbuf); } catch (IOException e) { throw new InputMismatchException(); }\n\t\t\tif(lenbuf <= 0)return -1;\n\t\t}\n\t\treturn inbuf[ptrbuf++];\n\t}\n\t\n\tprivate boolean isSpaceChar(int c) { return !(c >= 33 && c <= 126); }\n\tprivate int skip() { int b; while((b = readByte()) != -1 && isSpaceChar(b)); return b; }\n\t\n\tprivate double nd() { return Double.parseDouble(ns()); }\n\tprivate char nc() { return (char)skip(); }\n\t\n\tprivate String ns()\n\t{\n\t\tint b = skip();\n\t\tStringBuilder sb = new StringBuilder();\n\t\twhile(!(isSpaceChar(b))){ // when nextLine, (isSpaceChar(b) && b != ' ')\n\t\t\tsb.appendCodePoint(b);\n\t\t\tb = readByte();\n\t\t}\n\t\treturn sb.toString();\n\t}\n\t\n\tprivate char[] ns(int n)\n\t{\n\t\tchar[] buf = new char[n];\n\t\tint b = skip(), p = 0;\n\t\twhile(p < n && !(isSpaceChar(b))){\n\t\t\tbuf[p++] = (char)b;\n\t\t\tb = readByte();\n\t\t}\n\t\treturn n == p ? buf : Arrays.copyOf(buf, p);\n\t}\n\t\n\tprivate char[][] nm(int n, int m)\n\t{\n\t\tchar[][] map = new char[n][];\n\t\tfor(int i = 0;i < n;i++)map[i] = ns(m);\n\t\treturn map;\n\t}\n\t\n\tprivate int[] na(int n)\n\t{\n\t\tint[] a = new int[n];\n\t\tfor(int i = 0;i < n;i++)a[i] = ni();\n\t\treturn a;\n\t}\n\t\n\tprivate int ni()\n\t{\n\t\tint num = 0, b;\n\t\tboolean minus = false;\n\t\twhile((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));\n\t\tif(b == '-'){\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\t\t\n\t\twhile(true){\n\t\t\tif(b >= '0' && b <= '9'){\n\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t}else{\n\t\t\t\treturn minus ? -num : num;\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\t\n\tprivate long nl()\n\t{\n\t\tlong num = 0;\n\t\tint b;\n\t\tboolean minus = false;\n\t\twhile((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));\n\t\tif(b == '-'){\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\t\t\n\t\twhile(true){\n\t\t\tif(b >= '0' && b <= '9'){\n\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t}else{\n\t\t\t\treturn minus ? -num : num;\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\t\n\tprivate boolean oj = System.getProperty(\"ONLINE_JUDGE\") != null;\n\tprivate void tr(Object... o) { if(!oj)System.out.println(Arrays.deepToString(o)); }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint num[2005][2005];\nint main() {\n  int flat, n, q, x, y, i, j, r;\n  cin >> n >> q;\n  num[1000][1000] = n;\n  r = 0;\n  while (1) {\n    flat = 1;\n    for (i = 1000 - r; i <= 1000 + r; i++)\n      for (j = 1000 - r; j <= 1000 + r; j++) {\n        if (num[i][j] >= 4) {\n          flat = 0;\n          int temp = num[i][j] / 4;\n          num[i][j] = num[i][j] - 4 * temp;\n          num[i - 1][j] += temp;\n          num[i + 1][j] += temp;\n          num[i][j - 1] += temp;\n          num[i][j + 1] += temp;\n          if (abs(i - 1000) == r || abs(j - 1000) == r) r += 1;\n        }\n      }\n    if (flat) break;\n  }\n  while (q--) {\n    cin >> x >> y;\n    if (abs(x) > r || abs(y) > r)\n      cout << 0 << endl;\n    else\n      cout << num[x + 1000][y + 1000] << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <typename T>\nostream& operator<<(ostream& o, const vector<T>& v);\nint di[] = {-1, 1, 0, 0};\nint dj[] = {0, 0, -1, 1};\nstruct Board {\n  int n, ants;\n  vector<vector<int> > B, prev;\n  Board(int ants_, int n_) {\n    n = n_;\n    ants = ants_;\n    B = vector<vector<int> >(n, vector<int>(n, 0));\n    prev = vector<vector<int> >(n, vector<int>(n, 0));\n    B[0][0] = ants;\n  }\n  bool advance() {\n    prev.swap(B);\n    for (int i = 0; i < (n); i++)\n      for (int j = 0; j < (n); j++) B[i][j] = 0;\n    for (int i = 0; i < (n); i++) {\n      for (int j = 0; j < (n); j++) {\n        if (prev[i][j] >= 4) {\n          for (int k = 0; k < (4); k++) {\n            int i2 = i + di[k];\n            int j2 = j + dj[k];\n            if (i2 < 0 || j2 < 0) continue;\n            B[i2][j2]++;\n            if (i != 0 && j != 0 && (i2 == 0 || j2 == 0)) {\n              B[i2][j2]++;\n            } else if (i2 == 0 && j2 == 0) {\n              B[i2][j2]++;\n            }\n          }\n          B[i][j] += prev[i][j] - 4;\n        } else {\n          B[i][j] += prev[i][j];\n        }\n      }\n    }\n    return B != prev;\n  }\n  void print() {\n    for (int j = 0; j < (n); j++) printf(\"--\");\n    printf(\"\\n\");\n    for (int i = 0; i < (n); i++) {\n      bool has = false;\n      for (int j = 0; j < (n); j++) {\n        if (B[i][j]) has = true;\n      }\n      if (!has) continue;\n      for (int j = 0; j < (n); j++) {\n        if (B[i][j])\n          printf(\"%d \", B[i][j]);\n        else\n          printf(\"  \");\n      }\n      printf(\"\\n\");\n    }\n    printf(\"\\n\");\n  }\n  int MX() {\n    int res = 0;\n    for (int i = 0; i < (n); i++) {\n      for (int j = 0; j < (n); j++) {\n        if (B[i][j] == 0) continue;\n        res = max(res, max(i, j));\n      }\n    }\n    return res;\n  }\n};\nint main() {\n  int ants;\n  scanf(\"%d\", &ants);\n  Board board(ants, 65);\n  while (true) {\n    if (!board.advance()) {\n      break;\n    }\n  }\n  int q;\n  scanf(\"%d\", &q);\n  while (q--) {\n    int x, y;\n    scanf(\"%d %d\", &x, &y);\n    x = abs(x);\n    y = abs(y);\n    int res;\n    if (x >= board.n || y >= board.n) {\n      res = 0;\n    } else {\n      res = board.B[x][y];\n    }\n    printf(\"%d\\n\", res);\n  }\n}\ntemplate <typename T>\nostream& operator<<(ostream& o, const vector<T>& v) {\n  o << \"[\";\n  bool first = true;\n  for (__typeof((v).begin()) x = (v).begin(); x != (v).end(); x++) {\n    if (!first) {\n      o << \", \";\n    }\n    o << *x;\n    first = false;\n  }\n  o << \"]\";\n  return o;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[150][150], b[150][150];\nint dir[4][2] = {{0, 1}, {1, 0}, {-1, 0}, {0, -1}};\nint main() {\n  int n, t;\n  while (scanf(\"%d %d\", &n, &t) != EOF) {\n    memset(a, 0, sizeof(a));\n    memset(b, 0, sizeof(b));\n    a[75][75] = n;\n    int tag = 1;\n    while (tag) {\n      tag = 0;\n      memset(b, 0, sizeof(b));\n      for (int i = 0; i < 150; i++) {\n        for (int j = 0; j < 150; j++) {\n          if (a[i][j] >= 4) {\n            tag = 1;\n            for (int k = 0; k < 4; k++) {\n              b[i + dir[k][0]][j + dir[k][1]] += a[i][j] / 4;\n            }\n            b[i][j] += a[i][j] % 4;\n          } else {\n            b[i][j] += a[i][j];\n          }\n        }\n      }\n      if (tag) memcpy(a, b, sizeof(b));\n    }\n    while (t--) {\n      int x, y;\n      scanf(\"%d %d\", &x, &y);\n      x += 75;\n      y += 75;\n      if (x < 150 && y < 150 && x >= 0 && y >= 0) {\n        printf(\"%d\\n\", a[x][y]);\n      } else {\n        puts(\"0\");\n      }\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int INF = 0x3f3f3f3f;\nconst long long LINF = 0x3f3f3f3f3f3f3f3fll;\nconst int OFF = 150, MAXC = 2 * OFF + 10;\nint dx[] = {1, 0, -1, 0};\nint dy[] = {0, 1, 0, -1};\nint q[MAXC][MAXC];\nbool inqueue[MAXC][MAXC];\nint main() {\n  int n, t;\n  scanf(\"%d%d\", &n, &t);\n  q[OFF][OFF] = n;\n  queue<pair<int, int> > fila;\n  fila.push(pair<int, int>(0, 0));\n  inqueue[OFF][OFF] = 1;\n  while (!fila.empty()) {\n    pair<int, int> cur = fila.front();\n    fila.pop();\n    int x = cur.first + OFF, y = cur.second + OFF;\n    inqueue[x][y] = 0;\n    int add = q[x][y] / 4;\n    q[x][y] -= 4 * add;\n    if (add) {\n      for (int a = 0; a < 4; ++a) {\n        int xx = x + dx[a], yy = y + dy[a];\n        q[xx][yy] += add;\n        if (q[xx][yy] >= 4 && !inqueue[xx][yy]) {\n          fila.push(pair<int, int>(xx - OFF, yy - OFF));\n          inqueue[xx][yy] = 1;\n        }\n      }\n    }\n  }\n  while (t--) {\n    int x, y;\n    scanf(\"%d%d\", &x, &y);\n    if (abs(x) > OFF || abs(y) > OFF)\n      printf(\"0\\n\");\n    else\n      printf(\"%d\\n\", q[x + OFF][y + OFF]);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.InputMismatchException;\nimport java.util.LinkedList;\nimport java.util.Map.Entry;\nimport java.util.Queue;\nimport java.util.StringTokenizer;\nimport java.awt.*;\nimport static java.lang.Math.*;\nimport static java.lang.Integer.*;\nimport static java.lang.Long.*;\n\n@SuppressWarnings(\"unused\")\npublic class round188D {\n\n    static class cell {\n        int x, y, ants;\n\n        public cell(int xx, int yy, int a) {\n            x = xx;\n            y = yy;\n            ants = a;\n        }\n    }\n\n    static class InputReader {\n\n        private InputStream stream;\n        private byte[] buf = new byte[1000];\n        private int curChar, numChars;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        private int read() {\n            if (numChars == -1)\n                throw new InputMismatchException();\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n                if (numChars <= 0)\n                    return -1;\n            }\n            return buf[curChar++];\n        }\n\n        public int readInt() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            int res = 0;\n            do {\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public long readLong() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            long res = 0;\n            do {\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            } while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public String readString() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            StringBuffer res = new StringBuffer();\n            do {\n                res.appendCodePoint(c);\n                c = read();\n            } while (!isSpaceChar(c));\n            return res.toString();\n        }\n\n        private boolean isSpaceChar(int c) {\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        private String readLine0() {\n            StringBuffer buf = new StringBuffer();\n            int c = read();\n            while (c != '\\n' && c != -1) {\n                buf.appendCodePoint(c);\n                c = read();\n            }\n            return buf.toString();\n        }\n\n        public String readLine() {\n            String s = readLine0();\n            while (s.trim().length() == 0)\n                s = readLine0();\n            return s;\n        }\n\n        public String readLine(boolean ignoreEmptyLines) {\n            if (ignoreEmptyLines)\n                return readLine();\n            else\n                return readLine0();\n        }\n\n        public char readCharacter() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            return (char) c;\n        }\n\n        public double readDouble() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            double res = 0;\n            while (!isSpaceChar(c) && c != '.') {\n                if (c == 'e' || c == 'E')\n                    return res * Math.pow(10, readInt());\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            if (c == '.') {\n                c = read();\n                double m = 1;\n                while (!isSpaceChar(c)) {\n                    if (c == 'e' || c == 'E')\n                        return res * Math.pow(10, readInt());\n                    if (c < '0' || c > '9')\n                        throw new InputMismatchException();\n                    m /= 10;\n                    res += (c - '0') * m;\n                    c = read();\n                }\n            }\n            return res * sgn;\n        }\n    }\n\n    static short dx[] = new short[] { 1, -1, 0, 0 };\n    static short dy[] = new short[] { 0, 0, 1, -1 };\n    static int[][] count = new int[350][350];\n    static boolean vis[][] = new boolean[350][350];\n    static int offset = 150;\n\n    public static void flood(int n) {\n        short[] q = new short[30000000];\n        int back = 0;\n        int front = 0;\n        q[back++] = 0;\n        q[back++] = 0;\n        count[offset][offset] = n;\n        while (back > front) {\n            short x = q[front++];\n            short y = q[front++];\n            vis[x + offset][y + offset] = false;\n            int ants = count[x + offset][y + offset];\n            if (ants >= 4) {\n                int div = ants / 4;\n                int rem = ants & 3;\n                count[x + offset][y + offset] = rem;\n                for (int i = 0; i < 4; ++i) {\n                    short nx = (short) (x + dx[i]);\n                    short ny = (short) (y + dy[i]);\n                    count[nx + offset][ny + offset] += div;\n                    if (!vis[nx + offset][ny + offset]\n                            && count[nx + offset][ny + offset] >= 4) {\n                        q[back++] = nx;\n                        q[back++] = ny;\n                        vis[nx + offset][ny + offset] = true;\n                    }\n                }\n            }\n        }\n    }\n\n    public static void main(String[] args) throws Exception {\n        InputReader io = new InputReader(System.in);\n        PrintWriter out = new PrintWriter(System.out);\n        int n = io.readInt();\n        int t = io.readInt();\n        flood(n);\n        for (int i = 0; i < t; ++i) {\n            int x = io.readInt();\n            int y = io.readInt();\n            if (Math.abs(x) <= 150 && Math.abs(y) <= 150)\n                out.println(count[x + offset][y + offset]);\n            else\n                out.println(0);\n        }\n        out.flush();\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long mod = 1e9 + 7, N = 3005;\nlong long vis[N];\nvector<long long> arr[N];\nmap<long long, long long> m;\nlong long a[N], col[N];\nlong long dx[] = {-1, 0, 1, 0};\nlong long dy[] = {0, -1, 0, 1};\nlong long tot[N][N];\nlong long fk = 1500;\nsigned main() {\n  long long n, t;\n  cin >> n >> t;\n  tot[fk][fk] = n;\n  queue<pair<long long, long long>> q;\n  q.push({fk, fk});\n  while (!q.empty()) {\n    auto node = q.front();\n    q.pop();\n    long long x = node.first;\n    long long y = node.second;\n    long long nis = tot[x][y];\n    tot[x][y] = nis % 4;\n    if (nis < 4) continue;\n    for (long long i = 0; i < 4; i++) {\n      long long nx = x + dx[i], ny = y + dy[i];\n      tot[nx][ny] += nis / 4;\n      if (tot[nx][ny] >= 4) q.push({nx, ny});\n    }\n  }\n  while (t--) {\n    long long x, y;\n    cin >> x >> y;\n    if (x + fk >= N || y + fk >= N || x + fk < 0 || y + fk < 0)\n      cout << \"0\\n\";\n    else\n      cout << tot[x + fk][y + fk] << \"\\n\";\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n;\nint t;\nint v[1004][1004];\nint xc[5] = {0, 0, 0, -1, 1};\nint yc[5] = {0, -1, 1, 0, 0};\nvoid dfs(int x, int y, int k) {\n  v[x][y] += k;\n  if (v[x][y] < 4) return;\n  v[x][y] -= 4;\n  dfs(x, y, 0);\n  dfs(x - 1, y, 1);\n  dfs(x + 1, y, 1);\n  dfs(x, y - 1, 1);\n  dfs(x, y + 1, 1);\n}\nint main() {\n  cin >> n >> t;\n  memset(v, 0, sizeof v);\n  dfs(500, 500, n);\n  while (t--) {\n    int x;\n    int y;\n    cin >> x >> y;\n    if (x < (-500) || x > 500 || y < (-500) || y > 500) {\n      cout << \"0\\n\";\n      continue;\n    }\n    cout << v[x + 500][y + 500] << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\n#pragma comment(linker, \"/STACK:200000000\")\nusing namespace std;\nint main() {\n  char a[400][400] = {0}, b[400][400] = {0};\n  int g = 1;\n  int t;\n  cin >> t;\n  if (t > 100)\n    a[200][200] = 100;\n  else\n    a[200][200] = t;\n  t -= a[200][200];\n  b[200][200] = a[200][200];\n  bool ok = true;\n  while (ok) {\n    ok = false;\n    for (int i = 201 - g; (i) < int(200 + g); (i)++)\n      for (int j = 201 - g; (j) < int(200 + g); (j)++) {\n        if (a[i][j] >= 4) {\n          ok = true;\n          b[i][j] -= 4;\n          b[i][j + 1]++;\n          b[i][j - 1]++;\n          b[i - 1][j]++;\n          b[i + 1][j]++;\n        }\n      }\n    if (b[200][200 + g] > 0) g++;\n    if (b[200][200] < 10) {\n      int c;\n      if (t > 100)\n        c = 100;\n      else\n        c = t;\n      b[200][200] += c;\n      t -= c;\n    }\n    for (int i = 201 - g; (i) < int(200 + g); (i)++)\n      for (int j = 201 - g; (j) < int(200 + g); (j)++) a[i][j] = b[i][j];\n  }\n  cin >> t;\n  int x, y;\n  for (int i = 0; (i) < int(t); (i)++) {\n    cin >> x >> y;\n    if ((abs(x) >= 200) || (abs(y) >= 200))\n      cout << 0 << endl;\n    else\n      cout << (int)b[200 + y][200 + x] << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int mmax = 5000;\ntypedef struct pnt {\n  int x;\n  int y;\n} pnt;\nqueue<pnt> q[2];\nint grap[mmax][mmax];\nint main() {\n  int n, t, origin = mmax >> 1;\n  int slct = 0;\n  pnt tmp, ttmp;\n  while (!q[0].empty()) q[0].pop();\n  while (!q[1].empty()) q[1].pop();\n  cin >> n >> t;\n  grap[origin][origin] = n;\n  if (n >= 4) {\n    tmp.x = origin;\n    tmp.y = origin;\n    q[slct].push(tmp);\n    grap[tmp.x][tmp.y] -= 4;\n  }\n  while (!q[slct].empty()) {\n    while (!q[slct].empty()) {\n      tmp = q[slct].front();\n      q[slct].pop();\n      if (grap[tmp.x][tmp.y] >= 4) {\n        grap[tmp.x][tmp.y] -= 4;\n        q[slct ^ 1].push(tmp);\n      }\n      if (++grap[tmp.x - 1][tmp.y] >= 4) {\n        grap[tmp.x - 1][tmp.y] -= 4;\n        ttmp.x = tmp.x - 1;\n        ttmp.y = tmp.y;\n        q[slct ^ 1].push(ttmp);\n      }\n      if (++grap[tmp.x + 1][tmp.y] >= 4) {\n        grap[tmp.x + 1][tmp.y] -= 4;\n        ttmp.x = tmp.x + 1;\n        ttmp.y = tmp.y;\n        q[slct ^ 1].push(ttmp);\n      }\n      if (++grap[tmp.x][tmp.y + 1] >= 4) {\n        grap[tmp.x][tmp.y + 1] -= 4;\n        ttmp.x = tmp.x;\n        ttmp.y = tmp.y + 1;\n        q[slct ^ 1].push(ttmp);\n      }\n      if (++grap[tmp.x][tmp.y - 1] >= 4) {\n        grap[tmp.x][tmp.y - 1] -= 4;\n        ttmp.x = tmp.x;\n        ttmp.y = tmp.y - 1;\n        q[slct ^ 1].push(ttmp);\n      }\n    }\n    slct ^= 1;\n  }\n  int tx, ty;\n  for (int i = 0; i < t; i++) {\n    cin >> tx >> ty;\n    if ((tx + origin >= 0) && (tx + origin < mmax) && (ty + origin >= 0) &&\n        (ty + origin < mmax))\n      cout << grap[origin + tx][origin + ty] << endl;\n    else\n      cout << \"0\" << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\nusing ld = long double;\nusing pii = pair<int, int>;\nint const N = 5000 + 5, C = N / 2;\nint n, t, a[N][N];\ninline bool in(int x, int y) {\n  x += C, y += C;\n  return (0 <= x && x < N && 0 <= y && y < N);\n}\nvoid dfs(int x, int y, int val) {\n  a[C + x][C + y] += val;\n  if (a[C + x][C + y] >= 4) {\n    int tmp = a[C + x][C + y] / 4;\n    a[C + x][C + y] %= 4;\n    dfs(x + 1, y, tmp);\n    dfs(x, y + 1, tmp);\n    dfs(x - 1, y, tmp);\n    dfs(x, y - 1, tmp);\n  }\n}\nint main() {\n  ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);\n  cin >> n;\n  dfs(0, 0, n);\n  cin >> t;\n  while (t--) {\n    int x, y;\n    cin >> x >> y;\n    if (!in(x, y))\n      cout << \"0\\n\";\n    else\n      cout << a[C + x][C + y] << '\\n';\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint g_array[140][140] = {0};\nint g_center = 70;\nint main(int argc, const char* argv[]) {\n  std::ios_base::sync_with_stdio(0);\n  int n = 0;\n  int t = 0;\n  cin >> n >> t;\n  g_array[g_center][g_center] = n;\n  int minc = g_center - 1;\n  int maxc = g_center + 1;\n  while (true) {\n    bool end = true;\n    for (int x = minc; x < maxc; ++x) {\n      for (int y = minc; y < maxc; ++y) {\n        int current = g_array[x][y];\n        if (current < 4) continue;\n        end = false;\n        int mod = current % 4;\n        int quarter = (current - mod) / 4;\n        g_array[x + 1][y] += quarter;\n        g_array[x - 1][y] += quarter;\n        g_array[x][y + 1] += quarter;\n        g_array[x][y - 1] += quarter;\n        g_array[x][y] = mod;\n      }\n    }\n    if (minc > 1) {\n      --minc;\n    }\n    if (maxc < 140) {\n      ++maxc;\n    }\n    if (end) {\n      break;\n    }\n  }\n  std::stringstream outStream;\n  for (int i = 0; i < t; ++i) {\n    int64_t a = 0;\n    int64_t b = 0;\n    cin >> a >> b;\n    if (abs(a) + g_center >= 140 || abs(b) + g_center >= 140) {\n      outStream << 0 << endl;\n      continue;\n    }\n    outStream << g_array[a + g_center][b + g_center] << endl;\n  }\n  cout << outStream.str();\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 500 + 3;\nconst int p = 200;\nint a[2][N][N], n, Q, cur = 0, dir[4][2] = {{-1, 0}, {0, -1}, {0, 1}, {1, 0}};\nbool vis[N][N];\nbool in(int x, int y) { return 0 <= x && x <= 400 && 0 <= y && y <= 400; }\nstruct note {\n  int x, y, v;\n  note() {}\n  note(int _x, int _y, int _v) {\n    x = _x;\n    y = _y;\n    v = _v;\n  }\n};\nint main() {\n  scanf(\"%d%d\", &n, &Q);\n  memset(a, 0, sizeof a);\n  a[cur][p][p] = n;\n  queue<note> q;\n  queue<pair<int, int> > qq;\n  if (n >= 4) qq.push(make_pair(p, p));\n  while (1) {\n    bool f = 0;\n    while (!qq.empty()) {\n      int i = qq.front().first, j = qq.front().second;\n      qq.pop();\n      f = 1;\n      a[cur ^ 1][i][j] = a[cur][i][j] % 4;\n      q.push(note(i, j, a[cur][i][j] / 4));\n      a[cur][i][j] %= 4;\n      vis[i][j] = 0;\n    }\n    if (!f) break;\n    cur ^= 1;\n    while (!q.empty()) {\n      note u = q.front();\n      q.pop();\n      int nx, ny;\n      for (int i = 0; i < 4; i++) {\n        nx = u.x + dir[i][0];\n        ny = u.y + dir[i][1];\n        if (!in(nx, ny)) continue;\n        a[cur][nx][ny] += u.v;\n        a[cur ^ 1][nx][ny] = a[cur][nx][ny];\n        if (a[cur][nx][ny] >= 4) {\n          if (!vis[nx][ny]) {\n            vis[nx][ny] = 1;\n            qq.push(make_pair(nx, ny));\n          }\n        }\n      }\n    }\n  }\n  for (int i = 0; i < Q; i++) {\n    int x, y;\n    scanf(\"%d%d\", &x, &y);\n    x += p, y += p;\n    if (!in(x, y))\n      printf(\"0\\n\");\n    else\n      printf(\"%d\\n\", a[cur][x][y]);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int LEN = 131;\nint ants[2][LEN][LEN];\nint main() {\n  int n, t;\n  cin >> n >> t;\n  memset(ants, 0, sizeof(ants));\n  ants[0][LEN / 2][LEN / 2] = n;\n  int d = 1;\n  int s = 0;\n  while (true) {\n    bool update = false;\n    memset(ants[d], 0, sizeof(ants[d]));\n    for (int y = 0; y < LEN; y++) {\n      for (int x = 0; x < LEN; x++) {\n        if (ants[s][y][x] >= 4) {\n          update = true;\n          int add = ants[s][y][x] / 4;\n          int rem = ants[s][y][x] % 4;\n          ants[d][y][x + 1] += add;\n          ants[d][y][x - 1] += add;\n          ants[d][y + 1][x] += add;\n          ants[d][y - 1][x] += add;\n          ants[d][y][x] += rem;\n        } else {\n          ants[d][y][x] += ants[s][y][x];\n        }\n      }\n    }\n    if (!update) break;\n    swap(s, d);\n  }\n  int MAX_ABS = LEN / 2;\n  for (int i = 0; i < t; i++) {\n    int x, y;\n    cin >> x >> y;\n    if (abs(x) > MAX_ABS || abs(y) > MAX_ABS) {\n      printf(\"%d\\n\", 0);\n    } else {\n      x += LEN / 2;\n      y += LEN / 2;\n      printf(\"%d\\n\", ants[s][y][x]);\n    }\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[200][200], ans, n;\nbool flag = true;\nint main() {\n  ios::sync_with_stdio(false);\n  cin >> a[80][80] >> n;\n  while (flag) {\n    flag = false;\n    for (int i = 1; i < 160; i++)\n      for (int j = 1; j < 160; j++)\n        if (a[i][j] >= 4) {\n          flag = true;\n          int k = a[i][j] / 4;\n          a[i + 1][j] += k, a[i - 1][j] += k;\n          a[i][j + 1] += k, a[i][j - 1] += k;\n          a[i][j] -= 4 * k;\n        }\n  }\n  for (int i = 0; i < n; i++) {\n    int x, y;\n    cin >> x >> y;\n    if (-80 < x && x < 80 && -80 < y && y < 80)\n      cout << a[x + 80][y + 80] << '\\n';\n    else\n      cout << 0 << '\\n';\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, t;\nint arr[2][4000][4000];\nint ind0 = 0;\nint ind1 = 1;\nint a(int z, int x, int y) { return arr[z][x + 2000][y + 2000]; }\nvoid add(int z, int x, int y, int cnt) { arr[z][x + 2000][y + 2000] += cnt; }\nvoid clear(int z, int x, int y) { arr[z][x + 2000][y + 2000] = 0; }\nvoid ost(int z, int x, int y) { arr[z][x + 2000][y + 2000] &= 3; }\nvoid fun() {\n  scanf(\"%d%d\", &n, &t);\n  add(0, 0, 0, n);\n  int minim = 0;\n  bool bo = true;\n  while (bo) {\n    bo = false;\n    for (int i = -minim; i <= minim; ++i) {\n      for (int j = -minim; j <= minim; ++j) {\n        clear(ind1, i, j);\n      }\n    }\n    for (int i = -minim; i <= minim; ++i) {\n      for (int j = -minim; j <= minim; ++j) {\n        if (a(ind0, i, j) >= 4) {\n          bo = true;\n          minim = max(minim, i + 1);\n          int z = a(ind0, i, j) >> 2;\n          add(ind1, i + 1, j, z);\n          add(ind1, i - 1, j, z);\n          add(ind1, i, j + 1, z);\n          add(ind1, i, j - 1, z);\n          ost(ind0, i, j);\n        }\n        add(ind1, i, j, a(ind0, i, j));\n      }\n    }\n    if (ind0 == 0) {\n      ind0 = 1;\n      ind1 = 0;\n    } else {\n      ind0 = 0;\n      ind1 = 1;\n    }\n  }\n  for (; t; --t) {\n    int x, y;\n    scanf(\"%d%d\", &x, &y);\n    if (abs(x) > 1000 || abs(y) > 1000)\n      printf(\"0\\n\");\n    else\n      printf(\"%d\\n\", a(ind0, x, y));\n  }\n}\nint main() {\n  fun();\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios::sync_with_stdio(false);\n  int ar[600][600][2] = {};\n  int n, q;\n  cin >> n >> q;\n  ar[300][300][0] = n;\n  int l = 1;\n  int i = 0;\n  while (l) {\n    l = 0;\n    for (int x = 233; x < 367; x++)\n      for (int y = 233; y < 367; y++) ar[x][y][!i] = ar[x][y][i];\n    for (int x = 233; x < 367; x++)\n      for (int y = 233; y < 367; y++)\n        if (ar[x][y][i] >= 4) {\n          ar[x][y][!i] -= 4;\n          ar[x + 1][y][!i]++;\n          ar[x - 1][y][!i]++;\n          ar[x][y + 1][!i]++;\n          ar[x][y - 1][!i]++;\n          l++;\n        }\n    i = !i;\n  }\n  for (int o = 0; o < q; o++) {\n    int x, y;\n    cin >> x >> y;\n    if (x >= 100 || x <= -100 || y >= 100 || y <= -100)\n      cout << 0 << \"\\n\";\n    else\n      cout << ar[x + 300][y + 300][i] << \"\\n\";\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\n\npublic class CF {\n    FastScanner in;\n    PrintWriter out;\n\n    int MAX = 65;\n\n    int[] dx = { 0, -1, 0, 0, 1 };\n    int[] dy = { 0, 0, -1, 1, 0 };\n\n    void relax(int[][] a) {\n        int n = a.length;\n        for (;;) {\n            boolean ch = false;\n            for (int i = 0; i < n; i++)\n                for (int j = 0; j < n; j++)\n                    if (a[i][j] >= 4) {\n                        int cnt = a[i][j] / 4;\n                        a[i][j] -= 4 * cnt;\n                        for (int k = 1; k < 5; k++)\n                            a[i + dx[k]][j + dy[k]] += cnt;\n                        ch = true;\n                    }\n            if (!ch) {\n                break;\n            }\n        }\n    }\n\n    int[][] sum(int[][] a, int[][] b) {\n        int[][] res = new int[a.length][a.length];\n        int n = a.length;\n        for (int i = 0; i < n; i++)\n            for (int j = 0; j < n; j++)\n                res[i][j] = a[i][j] + b[i][j];\n        return res;\n    }\n\n    int[][] get(int n) {\n        int[][] cur = new int[MAX * 2][MAX * 2];\n        cur[MAX][MAX] = 1;\n        int[][] ans = new int[MAX * 2][MAX * 2];\n        for (int i = 0; i < 15; i++) {\n            \n            if (((1 << i) & n) != 0) {\n                ans = sum(ans, cur);\n                relax(ans);\n            }\n            if ((1 << (i + 1)) > n)\n                break;\n            cur = sum(cur, cur);\n            relax(cur);\n        }\n        return ans;\n    }\n\n    void solve() {\n        int n = in.nextInt();\n        int[][] cnt  = get(n);\n        int t = in.nextInt();\n        for (int i = 0; i < t; i++) {\n            int x = in.nextInt() + MAX;\n            int y = in.nextInt() + MAX;\n            boolean f = false;\n            if (x >= 0 && x < MAX * 2) {\n                if (y >= 0 && y < MAX * 2) {\n                    out.println(cnt[x][y]);\n                    f = true;\n                }\n            }\n            if (!f) {\n                out.println(0);\n            }\n        }\n\n    }\n\n    void run() {\n        try {\n            in = new FastScanner(new File(\"object.in\"));\n            out = new PrintWriter(new File(\"object.out\"));\n\n            solve();\n\n            out.close();\n        } catch (FileNotFoundException e) {\n            e.printStackTrace();\n        }\n    }\n\n    void runIO() {\n\n        in = new FastScanner(System.in);\n        out = new PrintWriter(System.out);\n\n        solve();\n\n        out.close();\n    }\n\n    class FastScanner {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public FastScanner(File f) {\n            try {\n                br = new BufferedReader(new FileReader(f));\n            } catch (FileNotFoundException e) {\n                e.printStackTrace();\n            }\n        }\n\n        public FastScanner(InputStream f) {\n            br = new BufferedReader(new InputStreamReader(f));\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreTokens()) {\n                String s = null;\n                try {\n                    s = br.readLine();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n                if (s == null)\n                    return null;\n                st = new StringTokenizer(s);\n            }\n            return st.nextToken();\n        }\n\n        boolean hasMoreTokens() {\n            while (st == null || !st.hasMoreTokens()) {\n                String s = null;\n                try {\n                    s = br.readLine();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n                if (s == null)\n                    return false;\n                st = new StringTokenizer(s);\n            }\n            return true;\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n    }\n\n    public static void main(String[] args) {\n        new CF().runIO();\n    }\n}"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport static java.lang.Math.*;\nimport java.io.*;\n\npublic class B {\n\tpublic static void p(Object...args) {System.out.println(Arrays.deepToString(args));}\n\tpublic static void main(String[] args) throws Exception {\n\t\tBufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n\t\tStringTokenizer st = new StringTokenizer(in.readLine());\n\t\tint N = Integer.valueOf(st.nextToken());\n\t\tint Q = Integer.valueOf(st.nextToken());\n\n\n\t\tint[][] B = new int[offset*2][offset*2];\n\t\tB[offset][offset] = N;\n\t\twhile(go(B)){}\n\n\t\tStringBuilder ans = new StringBuilder(\"\");\n\t\tfor (int i = 0; i < Q; i++) {\n\t\t\tst = new StringTokenizer(in.readLine());\n\t\t\tint x = Integer.valueOf(st.nextToken());\n\t\t\tint y = Integer.valueOf(st.nextToken());\n\t\t\tint score = 0;\n\t\t\tif (x+offset >= 0 && x+offset < B.length && y+offset >= 0 && y + offset < B[0].length)\n\t\t\t\tscore = B[x+offset][y+offset];\n\t\t\tans.append(score);\n\t\t\tans.append(\"\\n\");\n\t\t}\n\t\tSystem.out.print(ans);\n\t}\n\tstatic int offset = 65;\n\tstatic int[] dx = {-1, 1, 0, 0};\n\tstatic int[] dy = {0, 0, -1, 1};\n\tstatic boolean go(int[][] B) {\n\t\tboolean any = false;\n\t\tfor (int i = 0; i < B.length; i++) {\n\t\t\tfor (int j = 0; j < B[0].length; j++) {\n\t\t\t\tint total = B[i][j] / 4;\n\t\t\t\tB[i][j] %= 4;\n\t\t\t\tif (total == 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tany = true;\n\t\t\t\tfor (int d = 0; d < 4; d++) {\n\t\t\t\t\tB[i+dx[d]][j+dy[d]] += total;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn any;\n\t}\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nconst int dx[] = {-1, 1, 0, 0}, dy[] = {0, 0, -1, 1};\nstruct Ac {\n  int x, y;\n} q[60 * 60 * 1000 + 5];\nint g[60 + 5][60 + 5], Maxl = 0;\nbool vst[60 + 5][60 + 5];\nvoid Bfs() {\n  scanf(\"%d\", &g[0][0]);\n  int head = 0, tail = 0;\n  if (g[0][0] >= 4) {\n    q[1].x = 0;\n    q[1].y = 0;\n    tail++;\n  }\n  while (head < tail) {\n    head++;\n    int t = g[q[head].x][q[head].y] / 4;\n    g[q[head].x][q[head].y] %= 4;\n    vst[q[head].x][q[head].y] = false;\n    for (int i = 0; i < 4; i++) {\n      int x0 = q[head].x + dx[i];\n      int y0 = q[head].y + dy[i];\n      if (Maxl < x0) Maxl = x0;\n      if (Maxl < y0) Maxl = y0;\n      if (x0 >= 0 && y0 >= 0) {\n        if ((!x0 && dx[i]) || (!y0 && dy[i]))\n          g[x0][y0] += t << 1;\n        else\n          g[x0][y0] += t;\n        if (!vst[x0][y0] && g[x0][y0] >= 4) {\n          q[++tail].x = x0;\n          q[tail].y = y0;\n          vst[x0][y0] = true;\n        }\n      }\n    }\n  }\n  int m;\n  scanf(\"%d\", &m);\n  for (int i = 1; i <= m; i++) {\n    int x0, y0;\n    scanf(\"%d %d\", &x0, &y0);\n    if (x0 < 0) x0 = -x0;\n    if (y0 < 0) y0 = -y0;\n    if (x0 > Maxl || y0 > Maxl)\n      printf(\"0\\n\");\n    else\n      printf(\"%d\\n\", g[x0][y0]);\n  }\n  return;\n}\nint main() {\n  Bfs();\n  getchar();\n  getchar();\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\n#pragma GCC optimize(\"O3\")\nusing namespace std;\nstruct custom_hash {\n  static uint64_t splitmix64(uint64_t x) {\n    x += 0x9e3779b97f4a7c15;\n    x = (x ^ (x >> 30)) * 0xbf58476d1ce4e5b9;\n    x = (x ^ (x >> 27)) * 0x94d049bb133111eb;\n    return x ^ (x >> 31);\n  }\n  size_t operator()(uint64_t x) const {\n    static const uint64_t FIXED_RANDOM =\n        chrono::steady_clock::now().time_since_epoch().count();\n    return splitmix64(x + FIXED_RANDOM);\n  }\n};\ntemplate <typename T, size_t N>\nint SIZE(const T (&t)[N]) {\n  return N;\n}\ntemplate <typename T>\nint SIZE(const T &t) {\n  return t.size();\n}\nstring to_string(const string s, int x1 = 0, int x2 = 1e9) {\n  return '\"' + ((x1 < s.size()) ? s.substr(x1, x2 - x1 + 1) : \"\") + '\"';\n}\nstring to_string(const char *s) { return to_string((string)s); }\nstring to_string(const bool b) { return (b ? \"true\" : \"false\"); }\nstring to_string(const char c) { return string({c}); }\ntemplate <size_t N>\nstring to_string(const bitset<N> &b, int x1 = 0, int x2 = 1e9) {\n  string t = \"\";\n  for (int __iii__ = min(x1, SIZE(b)), __jjj__ = min(x2, SIZE(b) - 1);\n       __iii__ <= __jjj__; ++__iii__) {\n    t += b[__iii__] + '0';\n  }\n  return '\"' + t + '\"';\n}\ntemplate <typename A, typename... C>\nstring to_string(const A(&v), int x1 = 0, int x2 = 1e9, C... coords);\nint l_v_l_v_l = 0, t_a_b_s = 0;\ntemplate <typename A, typename B>\nstring to_string(const pair<A, B> &p) {\n  l_v_l_v_l++;\n  string res = \"(\" + to_string(p.first) + \", \" + to_string(p.second) + \")\";\n  l_v_l_v_l--;\n  return res;\n}\ntemplate <typename A, typename... C>\nstring to_string(const A(&v), int x1, int x2, C... coords) {\n  int rnk = rank<A>::value;\n  string tab(t_a_b_s, ' ');\n  string res = \"\";\n  bool first = true;\n  if (l_v_l_v_l == 0) res += '\\n';\n  res += tab + \"[\";\n  x1 = min(x1, SIZE(v)), x2 = min(x2, SIZE(v));\n  auto l = begin(v);\n  advance(l, x1);\n  auto r = l;\n  advance(r, (x2 - x1) + (x2 < SIZE(v)));\n  for (auto e = l; e != r; e = next(e)) {\n    if (!first) {\n      res += \", \";\n    }\n    first = false;\n    l_v_l_v_l++;\n    if (e != l) {\n      if (rnk > 1) {\n        res += '\\n';\n        t_a_b_s = l_v_l_v_l;\n      };\n    } else {\n      t_a_b_s = 0;\n    }\n    res += to_string(*e, coords...);\n    l_v_l_v_l--;\n  }\n  res += \"]\";\n  if (l_v_l_v_l == 0) res += '\\n';\n  return res;\n}\nvoid dbgm() { ; }\ntemplate <typename Heads, typename... Tails>\nvoid dbgm(Heads H, Tails... T) {\n  cout << to_string(H) << \" | \";\n  dbgm(T...);\n}\nconst long long MOD = (int)1e9 + 7;\nconst long long INF = 2e18 + 5;\nstruct hashLL {\n  size_t operator()(long long x) const {\n    x = (x ^ (x >> 30)) * UINT64_C(0xbf58476d1ce4e5b9);\n    x = (x ^ (x >> 27)) * UINT64_C(0x94d049bb133111eb);\n    x = x ^ (x >> 31);\n    return x;\n  }\n};\nlong long inv(long long a, long long b) {\n  return 1 < a ? b - inv(b % a, a) * b / a : 1;\n}\nlong long gcd(long long a, long long b, long long &x, long long &y) {\n  if (a == 0) {\n    x = 0;\n    y = 1;\n    return b;\n  }\n  long long x1, y1;\n  long long d = gcd(b % a, a, x1, y1);\n  x = y1 - (b / a) * x1;\n  y = x1;\n  return d;\n}\nlong long distsq(long long x1, long long y1, long long x2, long long y2) {\n  return (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);\n}\nlong long n, m, t, qx, qy;\nconst int MX = 100;\nconst int offset = 100;\nlong long arr[2 * MX][2 * MX];\nint dx[4] = {-1, 0, 0, 1};\nint dy[4] = {0, -1, 1, 0};\nlong long mx = -1, my = -1;\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  cin >> n >> t;\n  deque<pair<long long, long long>> frontier;\n  set<pair<long long, long long>> added;\n  set<pair<long long, long long>> processed;\n  memset(arr, 0, sizeof(arr));\n  arr[0 + offset][0 + offset] = n;\n  if (n >= 4) frontier.push_back(make_pair(0, 0));\n  while (!frontier.empty()) {\n    long long sz = frontier.size();\n    for (int z = 0; z < (sz); z++) {\n      auto pr = frontier.front();\n      frontier.pop_front();\n      long long x = pr.first;\n      long long y = pr.second;\n      long long curr = arr[x + offset][y + offset];\n      long long each = curr / 4;\n      for (int i = 0; i < (4); i++) {\n        long long nx = x + dx[i];\n        long long ny = y + dy[i];\n        auto np = make_pair(nx, ny);\n        arr[nx + offset][ny + offset] += each;\n        if (arr[nx + offset][ny + offset] - each < 4 &&\n            arr[nx + offset][ny + offset] >= 4)\n          frontier.push_back(np);\n      }\n      arr[x + offset][y + offset] -= each * 4;\n    }\n  }\n  for (int i = 0; i < (t); i++) {\n    cin >> qx >> qy;\n    if (abs(qx) <= 80 && abs(qy) <= 80)\n      cout << arr[qx + offset][qy + offset] << '\\n';\n    else\n      cout << \"0\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\nimport java.math.BigInteger;\nimport static java.lang.Math.*;\nimport static java.math.BigInteger.*;\n\npublic class Main {\n\n    BufferedReader br;\n    StringTokenizer in;\n    PrintWriter out;\n\n    String next() throws IOException {\n        while( in==null || !in.hasMoreTokens() )\n            in = new StringTokenizer( br.readLine() );\n        return in.nextToken();\n    }\n\n    int nextInt() throws IOException {\n        return Integer.parseInt(next());\n    }\n\n    long nextLong() throws IOException {\n        return Long.parseLong(next());\n    }\n\n    public static void main(String[] args) throws IOException {\n        new Main().run();\n    }\n\n\n\n\n\n    void run() throws IOException {\n        boolean oj = System.getProperty(\"ONLINE_JUDGE\") != null;\n        Reader reader = oj ? new InputStreamReader(System.in) :\n                new FileReader(\"input.txt\");\n        br = new BufferedReader(reader);\n        out = new PrintWriter(\n                oj ? new OutputStreamWriter(System.out) :\n                        new FileWriter(\"output.txt\"));\n        solve();\n        //deb();\n        out.flush();\n    }\n\n    class pt{\n        int x, y;\n        pt( int _x, int _y ){\n            x = _x;\n            y = _y;\n        }\n        pt add( pt b ){\n            return new pt( x+b.x, y+b.y );\n        }\n    }\n\n    final pt[] dxy = new pt[]{\n        new pt(-1,0),\n        new pt(+1,0),\n        new pt(0,-1),\n        new pt(0,+1),\n    };\n\n    final int\n            nmax = 130, x0 = nmax/2, y0 = nmax/2,\n            ant = 30_000;\n    boolean[][] isQ = new boolean[nmax][nmax];\n\n    boolean bf(int[][] pl){\n        boolean didSome = false;\n        for( int x = 0; x < nmax; ++x ){\n            for( int y = 0; y < nmax; ++y ){\n                if( 4 <= pl[x][y] ){\n                    int cnt = pl[x][y] / 4;\n                    pl[x][y] -= cnt*4;\n                    pl[x-1][y] += cnt;\n                    pl[x+1][y] += cnt;\n                    pl[x][y-1] += cnt;\n                    pl[x][y+1] += cnt;\n                    didSome = true;\n                }\n            }\n        }\n        return  didSome;\n    }\n\n    void show(int[][] pl){\n        for( int y = nmax-1; 0 <= y; --y ){\n            for( int x = 0; x < nmax; ++x)\n                out.printf(\"%3d\",pl[x][y]);\n            out.println();\n        }\n        out.println();\n    }\n\n    void solve() throws IOException{\nlabelSolve:\n    {\n        Long tBeg = System.currentTimeMillis();\n        int[][] pl = new int[nmax][nmax];\n        pl[x0][y0] = nextInt();\n        while(bf(pl));\n\n        int t = nextInt();\n        for( int i = 0; i < t; ++i ){\n            int x = nextInt();\n            int y = nextInt();\n            x += x0;\n            y += y0;\n            if( 0<= x && x < nmax &&\n                0<= y && y < nmax\n            )\n                out.println( pl[x][y] );\n            else\n                out.println(0);\n        }\n\n\n//        show(A);\n\n\n\n//        System.out.println((System.currentTimeMillis()-tBeg)/1e3);\n//        System.out.flush();\n    }\n    }\n\n\n\n}\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.awt.Point;\nimport java.io.BufferedOutputStream;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.PrintStream;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Scanner;\nimport java.util.Stack;\nimport java.util.StringTokenizer;\n\n/*\n * To change this template, choose Tools | Templates\n * and open the template in the editor.\n */\n/**\n *\n * @author Trung Pham\n */\npublic class D {\n\n    public static int[] X = {1, 0, 0, -1};\n    public static int[] Y = {0, 1, -1, 0};\n\n    public static void main(String[] args) {\n        Scanner in = new Scanner();\n        PrintWriter out = new PrintWriter(System.out);\n        StringBuilder builder = new StringBuilder();\n        int n = in.nextInt();\n        int t = in.nextInt();\n        int[][] map = new int[131][131];\n        map[65][65] = n;\n        boolean change = true;\n        while (change) {\n            change = false;\n            for (int i = 0; i < map.length; i++) {\n                for (int j = 0; j < map.length; j++) {\n                    if (map[i][j] >= 4) {\n                        change = true;\n                        int val = map[i][j] / 4;\n                        map[i][j] %= 4;\n                        for (int k = 0; k < 4; k++) {\n                            int a = i + X[k];\n                            int b = j + Y[k];\n                            if (a >= 0 && b >= 0 && a < map.length && b < map.length) {\n                                map[a][b] += val;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        for (int i = 0; i < t; i++) {\n            int a = in.nextInt() + 65;\n            int b = in.nextInt() + 65;\n            if (a >= 0 && a < map.length && b >= 0 && b < map.length) {\n                builder.append(map[a][b]).append(\"\\n\");\n            } else {\n                builder.append(0).append(\"\\n\");\n            }\n        }\n        out.print(builder.toString());\n        out.close();\n\n\n    }\n\n    static class Scanner {\n\n        BufferedReader br;\n        StringTokenizer st;\n\n        public Scanner() {\n            //System.setOut(new PrintStream(new BufferedOutputStream(System.out), true));\n            br = new BufferedReader(new InputStreamReader(System.in));\n        }\n\n        public String next() {\n\n\n            while (st == null || !st.hasMoreTokens()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                } catch (Exception e) {\n                    throw new RuntimeException();\n                }\n            }\n            return st.nextToken();\n        }\n\n        public long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        public int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        public double nextDouble() {\n            return Double.parseDouble(next());\n        }\n\n        public String nextLine() {\n            st = null;\n            try {\n                return br.readLine();\n            } catch (Exception e) {\n                throw new RuntimeException();\n            }\n        }\n\n        public boolean endLine() {\n            try {\n                String next = br.readLine();\n                while (next != null && next.trim().isEmpty()) {\n                    next = br.readLine();\n                }\n                if (next == null) {\n                    return true;\n                }\n                st = new StringTokenizer(next);\n                return st.hasMoreTokens();\n            } catch (Exception e) {\n                throw new RuntimeException();\n            }\n        }\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\npair<int, int> d[] = {{0, -1}, {0, 1}, {-1, 0}, {1, 0}};\nint n, t;\nint cnt[5005][5005];\nint offs = 2505;\npair<int, int> operator+(pair<int, int> a, pair<int, int> b) {\n  return {a.first + b.first, a.second + b.second};\n}\nint main(void) {\n  ios_base::sync_with_stdio(0);\n  cin.tie(NULL);\n  cin >> n >> t;\n  cnt[offs][offs] = n;\n  queue<pair<int, int> > todo;\n  if (n >= 4) todo.push({0, 0});\n  int mx = 0;\n  while (!todo.empty()) {\n    auto x = todo.front();\n    todo.pop();\n    mx = max(mx, x.first);\n    if (cnt[x.first + offs][x.second + offs] >= 4) {\n      int add = cnt[x.first + offs][x.second + offs] / 4;\n      cnt[x.first + offs][x.second + offs] %= 4;\n      for (int i = 0; i < 4; ++i) {\n        auto y = x + d[i];\n        cnt[y.first + offs][y.second + offs] += add;\n        if (cnt[y.first + offs][y.second + offs] >= 4 &&\n            cnt[y.first + offs][y.second + offs] - add < 4)\n          todo.push(y);\n      }\n    }\n  }\n  while (t--) {\n    int x, y;\n    cin >> x >> y;\n    x += offs;\n    y += offs;\n    if (x < 0 || x > 5000 || y < 0 || y > 5000)\n      cout << 0 << '\\n';\n    else\n      cout << (cnt[x][y]) << '\\n';\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.Scanner;\n\npublic class round188_div2 {\n\n    private static final int SIDE = 90;\n    private static final int SIZE = 2 * SIDE + 1;\n    private static int[][] table;\n\n    public static void main(String[] args) {\n        Scanner s = new Scanner(System.in);\n\n        int n = s.nextInt();\n\n        table = new int[SIZE][SIZE];\n        table[SIDE][SIDE] = n;\n        emulateProcess();\n\n        int t = s.nextInt();\n        for (int i = 0; i < t; i++) {\n            int x = s.nextInt();\n            int y = s.nextInt();\n            System.out.println(getAns(x, y));\n        }\n    }\n\n    private static int getAns(int x, int y) {\n        if (Math.abs(x) > SIDE || Math.abs(y) > SIDE) {\n            return 0;\n        }\n        return table[x + SIDE][y + SIDE];\n    }\n\n    private static void emulateProcess() {\n        boolean update = true;\n        while (update) {\n            update = false;\n            for (int x = 0; x < SIZE; x++) {\n                for (int y = 0; y < SIZE; y++) {\n                    if (table[x][y] >= 4) {\n                        int add = table[x][y] / 4;\n                        table[x + 1][y] += add;\n                        table[x - 1][y] += add;\n                        table[x][y + 1] += add;\n                        table[x][y - 1] += add;\n                        table[x][y] -= add * 4;\n                        update = true;\n                    }\n                }\n            }\n        }\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nbool In[140][140];\nint g, x, y, T;\nint F[140][140];\nqueue<pair<int, int>> Q;\nint main() {\n  cin >> F[70][70] >> T;\n  Q.push(make_pair(70, 70));\n  while (!Q.empty()) {\n    pair<int, int> p = Q.front();\n    Q.pop();\n    x = p.first;\n    y = p.second;\n    In[x][y] = false;\n    g = F[x][y] / 4;\n    F[x][y] %= 4;\n    F[x + 1][y] += g;\n    if (F[x + 1][y] >= 4 && !In[x + 1][y])\n      In[x + 1][y] = true, Q.push(make_pair(x + 1, y));\n    F[x - 1][y] += g;\n    if (F[x - 1][y] >= 4 && !In[x - 1][y])\n      In[x - 1][y] = true, Q.push(make_pair(x - 1, y));\n    F[x][y + 1] += g;\n    if (F[x][y + 1] >= 4 && !In[x][y + 1])\n      In[x][y + 1] = true, Q.push(make_pair(x, y + 1));\n    F[x][y - 1] += g;\n    if (F[x][y - 1] >= 4 && !In[x][y - 1])\n      In[x][y - 1] = true, Q.push(make_pair(x, y - 1));\n  }\n  while (T--) {\n    cin >> x >> y;\n    if (x < -70 || x >= 70 || y < -70 || y >= 70)\n      cout << \"0\\n\";\n    else\n      cout << F[x + 70][y + 70] << \"\\n\";\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 340;\nint cnt[340][340];\nint main() {\n  int n, t;\n  cin >> n >> t;\n  cnt[170][170] = n;\n  int m = maxn;\n  bool fin = false;\n  while (!fin) {\n    bool flag = false;\n    for (int i = 0; i < m; i++) {\n      for (int j = 0; j < m; j++) {\n        if (cnt[i][j] >= 4) {\n          int x = cnt[i][j] / 4;\n          cnt[i - 1][j] += x, cnt[i + 1][j] += x, cnt[i][j - 1] += x,\n              cnt[i][j + 1] += x;\n          cnt[i][j] %= 4;\n          flag = true;\n        }\n      }\n    }\n    if (!flag) fin = true;\n  }\n  for (int i = 0; i < t; i++) {\n    int x, y;\n    cin >> x >> y;\n    if (x + 170 >= 0 && x + 170 < 340 && y + 170 >= 0 && y + 170 < 340)\n      cout << cnt[x + 170][y + 170] << endl;\n    else\n      cout << \"0\" << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.DataInputStream;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\n\npublic class ProblemEEE {\n\n    static int di[] = new int[] { -1, 0, 1, 0 };\n    static int dj[] = new int[] { 0, 1, 0, -1 };\n\n    public static void main(String[] args) throws Exception {\n\n        Parserdoubt777 s = new Parserdoubt777(System.in);\n        PrintWriter out = new PrintWriter(System.out);\n        \n        \n        int count = s.nextInt();\n        \n        int MAX = 200;\n        int START = MAX / 2;\n        \n        int val[][] = new int[MAX][MAX];\n        \n        val[START][START] = count;\n        \n        while (true) {\n            int changed = 0;\n            for (int i = 0; i < MAX; i++) {\n                for (int j = 0; j < MAX; j++) {\n                    if(val[i][j] >= 4){\n                        changed = 1;\n                        int c = val[i][j]/4;\n                        for (int k = 0; k < 4; k++) {\n                            int ni = i + di[k];\n                            int nj = j + dj[k];\n                            val[ni][nj] += c;\n                        }\n                        val[i][j] %= 4;\n                    }\n                }\n            }\n            if(changed == 0) break;\n        }\n        \n        \n        int m = s.nextInt();\n        for (int i = 0; i < m; i++) {\n            int x = START + s.nextInt();\n            int y = START + s.nextInt();\n            \n            if(x < 0 || x >= val.length || y < 0 || y >= val[0].length) out.println(\"0\");\n            else out.println(val[x][y]);\n        }\n        out.close();\n    }\n\n}\n\nclass Parserdoubt777 {\n    final private int BUFFER_SIZE = 1 << 17;\n\n    private DataInputStream din;\n    private byte[] buffer;\n    private int bufferPointer, bytesRead;\n\n    public Parserdoubt777(InputStream in) {\n        din = new DataInputStream(in);\n        buffer = new byte[BUFFER_SIZE];\n        bufferPointer = bytesRead = 0;\n    }\n\n    public String nextString() throws Exception {\n        StringBuffer sb = new StringBuffer(\"\");\n        byte c = read();\n        while (c <= ' ')\n            c = read();\n        do {\n            sb.append((char) c);\n            c = read();\n        } while (c > ' ');\n        return sb.toString();\n    }\n\n    public char nextChar() throws Exception {\n        byte c = read();\n        while (c <= ' ')\n            c = read();\n        return (char) c;\n    }\n\n    public int nextInt() throws Exception {\n        int ret = 0;\n        byte c = read();\n        while (c <= ' ')\n            c = read();\n        boolean neg = c == '-';\n        if (neg)\n            c = read();\n        do {\n            ret = ret * 10 + c - '0';\n            c = read();\n        } while (c > ' ');\n        if (neg)\n            return -ret;\n        return ret;\n    }\n\n    public long nextLong() throws Exception {\n        long ret = 0;\n        byte c = read();\n        while (c <= ' ')\n            c = read();\n        boolean neg = c == '-';\n        if (neg)\n            c = read();\n        do {\n            ret = ret * 10 + c - '0';\n            c = read();\n        } while (c > ' ');\n        if (neg)\n            return -ret;\n        return ret;\n    }\n\n    private void fillBuffer() throws Exception {\n        bytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE);\n        if (bytesRead == -1)\n            buffer[0] = -1;\n    }\n\n    private byte read() throws Exception {\n        if (bufferPointer == bytesRead)\n            fillBuffer();\n        return buffer[bufferPointer++];\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, t, i, ii, jj, p4;\nint M[2 * 500 + 5][2 * 500 + 5];\nqueue<pair<int, int> > q;\nvoid slv() {\n  q.push(make_pair(500, 500));\n  while (!q.empty()) {\n    ii = q.front().first;\n    jj = q.front().second;\n    q.pop();\n    p4 = M[ii][jj] / 4;\n    if (p4 == 0) continue;\n    M[ii - 1][jj] += p4;\n    M[ii + 1][jj] += p4;\n    M[ii][jj - 1] += p4;\n    M[ii][jj + 1] += p4;\n    M[ii][jj] -= p4 * 4;\n    q.push(make_pair(ii - 1, jj));\n    q.push(make_pair(ii + 1, jj));\n    q.push(make_pair(ii, jj + 1));\n    q.push(make_pair(ii, jj - 1));\n  }\n}\nint main() {\n  scanf(\"%d%d\", &n, &t);\n  M[500][500] = n;\n  slv();\n  while (t--) {\n    scanf(\"%d%d\", &ii, &jj);\n    if (ii < -500 || ii > 500 || jj < -500 || jj > 500)\n      printf(\"0\\n\");\n    else\n      printf(\"%d\\n\", M[ii + 500][jj + 500]);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  const int N = 64;\n  int a[2 * N + 1][2 * N + 1] = {{0}};\n  int n, t;\n  scanf(\"%d %d\", &n, &t);\n  a[N][N] = n;\n  bool finished = false;\n  while (!finished) {\n    bool all_under = true;\n    for (int i = 0; i < 2 * N + 1 && all_under; i++) {\n      for (int j = 0; j < 2 * N + 1; j++) {\n        if (a[i][j] >= 4) {\n          all_under = false;\n          break;\n        }\n      }\n    }\n    if (all_under) {\n      finished = true;\n      break;\n    }\n    int b[2 * N + 1][2 * N + 1] = {{0}};\n    for (int i = 0; i < 2 * N + 1; i++) {\n      for (int j = 0; j < 2 * N + 1; j++) {\n        int temp = a[i][j] / 4;\n        if (a[i][j] >= 4) {\n          b[i - 1][j] += temp;\n          b[i + 1][j] += temp;\n          b[i][j - 1] += temp;\n          b[i][j + 1] += temp;\n          a[i][j] -= 4 * temp;\n        }\n      }\n    }\n    for (int i = 0; i < 2 * N + 1; i++) {\n      for (int j = 0; j < 2 * N + 1; j++) {\n        a[i][j] += b[i][j];\n      }\n    }\n  }\n  int x, y;\n  while (t--) {\n    scanf(\"%d %d\", &x, &y);\n    if (x < -N || x > N || y < -N || y > N) {\n      printf(\"0\\n\");\n    } else {\n      printf(\"%d\\n\", a[x + N][y + N]);\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\n#pragma comment(linker, \"/STACK:255000000\")\nbool firstout = 1;\ntemplate <class T>\nT &minn(T &a, T b) {\n  if (b < a) a = b;\n  return a;\n}\ntemplate <class T>\nT &maxx(T &a, T b) {\n  if (a < b) a = b;\n  return a;\n}\nint &madd(int &a, int b) {\n  a += b;\n  if (a >= 1000000007) a -= 1000000007;\n  return a;\n}\nint &msub(int &a, int b) {\n  a -= b;\n  if (a < 0) a += 1000000007;\n  return a;\n}\nint &mmult(int &a, int b) { return a = (long long)a * b % 1000000007; }\nint mdiv(long long a, long long b, long long m) {\n  a = (a % m + m) % m;\n  b = (b % m + m) % m;\n  if (a % b == 0) return a / b;\n  return (a + m * mdiv(-a, m, b)) / b;\n}\nint DX[4] = {-1, 0, 0, 1};\nint DY[4] = {0, -1, 1, 0};\nint n, m, q;\nint A[1012][1012];\nbool B[1012][1012];\nint lq, rq;\nshort QX[(1012 * 1012 * 20)];\nshort QY[(1012 * 1012 * 20)];\nbool valid(int i, int j) {\n  return 0 <= i && i < 1012 && 0 <= j && j < (1012 * 1012 * 20);\n}\nint main() {\n  int i, j, k;\n  char c;\n  int a, d;\n  int ts;\n  for (ts = 1; scanf(\"%\"\n                     \"d\",\n                     &(n)) > 0;\n       ++ts) {\n    for (i = (0); i < (1012); ++i)\n      for (j = (0); j < (1012); ++j) A[i][j] = B[i][j] = 0;\n    A[1012 / 2][1012 / 2] = n;\n    B[1012 / 2][1012 / 2] = 1;\n    lq = rq = 0;\n    QX[rq] = 1012 / 2;\n    QY[rq++] = 1012 / 2;\n    for (; lq < rq; ++lq) {\n      i = QX[lq];\n      j = QY[lq];\n      B[i][j] = 0;\n      if (A[i][j] < 4) continue;\n      for (k = (0); k < (4); ++k) {\n        int ii = i + DX[k];\n        int jj = j + DY[k];\n        A[ii][jj] += A[i][j] / 4;\n        if (!B[ii][jj]) {\n          B[ii][jj] = 1;\n          QX[rq] = ii;\n          QY[rq++] = jj;\n        }\n      }\n      A[i][j] %= 4;\n    }\n    scanf(\n        \"%\"\n        \"d\",\n        &(q));\n    for (; q--;) {\n      scanf(\n          \"%\"\n          \"d\",\n          &(i));\n      scanf(\n          \"%\"\n          \"d\",\n          &(j));\n      i += 1012 / 2;\n      j += 1012 / 2;\n      if (!valid(i, j))\n        printf(\n            \"%\"\n            \"d\",\n            (0));\n      else\n        printf(\n            \"%\"\n            \"d\",\n            (A[i][j]));\n      printf(\"\\n\"), firstout = 1;\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.util.Arrays;\nimport java.util.LinkedList;\nimport java.util.Queue;\nimport java.util.Scanner;\n\npublic class D2 {\n\n    /**\n     * @param args\n     */\n    public static void main(String[] args) {\n        int n = NI();\n        int t = NI();\n        int[][] a = new int[t][2];\n        for(int i=0;i<t;i++){\n            a[i][0]=NI();\n            a[i][1]=NI();\n        }\n\n        int len=131;\n        int[][][] f = new int[2][len][len];\n        int[][][] tmp=null;\n        int c = len/2;\n        f[0][c][c]=n;\n        boolean con =true;\n        int cnt = 0;\n        int[] v1 = {0,0,-1,1};\n        int[] v2 = {-1,1,0,0};\n        while(con){\n            con=false;\n            for(int i=0;i<len;i++){\n                for(int j=0;j<len;j++){\n                    if(f[cnt][i][j]>=4){\n                        con=true;\n                        int x = f[cnt][i][j]%4;\n                        int y = f[cnt][i][j]/4;\n                        f[(cnt+1)%2][i][j] += x;\n                        f[(cnt+1)%2][i+1][j] += y;\n                        f[(cnt+1)%2][i-1][j] += y;\n                        f[(cnt+1)%2][i][j+1] += y;\n                        f[(cnt+1)%2][i][j-1] += y;\n                    }\n                    else{\n                        f[(cnt+1)%2][i][j]+=f[cnt][i][j];\n                    }\n                }\n            }\n//          f[cnt]=new int[len][len];\n            for(int i=0;i<len;i++){\n                Arrays.fill(f[cnt][i], 0);\n            }\n            cnt= (cnt+1)%2;\n        }\n        StringBuilder sb =  new StringBuilder();\n//      cnt++;\n        for(int i=0;i<t;i++){\n            int y = a[i][0]+c;\n            int x = a[i][1]+c;\n            try{\n                sb.append(f[(cnt)%2][y][x]);\n            }\n            catch(ArrayIndexOutOfBoundsException e){\n                sb.append(0);\n            }\n            \n            sb.append(\"\\n\");\n        }\n        System.out.println(sb);\n    }\n    // \u8ca0\u306b\u3082\u5bfe\u5fdc\n    static int NI(){\n        try {\n            int c=System.in.read(),r=0;\n            for(;c!='-'&&(c<'0'||'9'<c);)c=System.in.read();\n            if(c=='-') return -NI();\n            for(;'0'<=c&&c<='9';c=System.in.read())\n                r = r * 10 + c - '0';\n            return r;\n        } catch (Exception e) {\n            return -1;\n        }\n    }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.InputStream;\nimport java.io.PrintStream;\n\nimport java.util.ArrayList;\nimport java.util.Scanner;\nimport java.util.TreeSet;\n\n\npublic class ProblemD {\n\tpublic static void main(String[] args) {\n\t\tProblemD problem = new ProblemD();\n\t\ttry {\n\t\t\tproblem.solve(System.in, System.out);\n\t\t} catch (Exception e) {\n\t\t\t// TODO Auto-generated catch block\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n\t\n\tstatic InputStream in;\n\n\tpublic int readInt() throws Exception {\n\t\tint result = 0;\n\t\tint z = in.read();\n\t\tint prev = -1;\n\t\twhile (z != -1 && (z < 48 || z > 57)) {\n\t\t\tprev = z;\n\t\t\tz = in.read();\n\t\t}\n\t\tint count = 0;\n\t\twhile (z >= 48 && z <= 57) {\n\t\t\tcount++;\n\t\t\tresult = 10 * result + z - 48;\n\t\t\tz = in.read();\n\t\t}\n\t\tif (prev == '-')\n\t\t\tresult *= -1;\n\t\treturn (count == 0 ? -1 : result);\n\t}\n\t\n\tpublic void solve(InputStream input, PrintStream out) throws Exception {\n\t\tin = input;\n\t\tint n = readInt(); \n\t\tint MAXSIZE = 250;\n\t\tint[][] count = new int[MAXSIZE][MAXSIZE];\n\t\tboolean[][] done = new boolean[MAXSIZE][MAXSIZE];\n\t\tcount[0][0] = n;\n\t\tint[] dx = new int[] { 1, -1, 0, 0 };\n\t\tint[] dy = new int[] { 0, 0, 1, -1 };\n\t\tint[] todo = new int[10000];\n\t\tint todoSize = 0;\n\t\tint[] next = new int[10000];\n\t\tint nextSize = 0;\n\t\tint[] swap;\n\t\tif ( n >= 4) {\n\t\t\ttodoSize++;\n\t\t\ttodo[0] = 0;\n\n\t\t}\n\t\tint maxIter = 100000;\n\t\tint iters = 0;\n\t\twhile ( todoSize > 0 && iters < maxIter) {\n\t\t\t//System.out.printf(\"iteration %d\\n\", iters);\n\t\t\tif ( false) {\n\t\t\t\tcheck(count, MAXSIZE);\t\t\t\t\n\t\t\t}\n//\t\t\tSystem.out.printf(\"iteration %d\\n\", iters);\n\t\t\titers++;\n\t\t\tfor ( int k = 0; k < todoSize; k++) {\n\t\t\t\tint z = todo[k];\n\t\t\t\tint x = z/1000;\n\t\t\t\tint y = z % 1000;\n\t\t\t\tcount[x][y] -= 4;\n\t\t\t\tdone[x][y] = false;\n\t\t\t}\n\t\t\tfor ( int k = 0; k < todoSize; k++) {\n\t\t\t\tint z = todo[k];\n\t\t\t\tint x = z/1000;\n\t\t\t\tint y = z % 1000;\n//\t\t\t\tSystem.out.printf(\"from (%d, %d) count %d\\n\", x, y, count[x][y]);\n\t\t\t\tfor ( int i = 0; i < 4; i++) {\n\t\t\t\t\tint nx = x + dx[i];\n\t\t\t\t\tint ny = y + dy[i];\n\t\t\t\t\tif ( nx < 0 || ny < 0) continue;\n\t\t\t\t\tif ( x > 0 && y > 0 ) {\n\t\t\t\t\t\t// interior\n\t\t\t\t\t\tif ( nx == 0 || ny == 0)\tcount[nx][ny] += 2;\n\t\t\t\t\t\telse count[nx][ny]++;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// on boundary\n\t\t\t\t\t\tif ( nx == 0 && ny == 0) count[nx][ny] += 2;\n\t\t\t\t\t\telse count[nx][ny]++;\n\t\t\t\t\t}\n//\t\t\t\t\tSystem.out.printf(\"added to (%d %d) new count %d\\n\", nx, ny, count[nx][ny]);\n\t\t\t\t\tif ( count[nx][ny] >= 4 && !done[nx][ny]) {\n//\t\t\t\t\t\tSystem.out.println(\"process next\");\n\t\t\t\t\t\tnext[nextSize++] = 1000*nx + ny;\n\t\t\t\t\t\tdone[nx][ny] = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( count[x][y] >= 4) {\n\t\t\t\t\tnext[nextSize++] = z;\n\t\t\t\t}\n\t\t\t}\n\t\t\tswap = todo;\n\t\t\ttodo = next;\n\t\t\ttodoSize = nextSize;\n\t\t\tnext = swap;\n\t\t\tnextSize = 0;\n\t\t}\n//\t\tcheck(count, MAXSIZE);\n\t\tint t = readInt();\n\t\tfor ( int i = 0; i < t; i++) {\n\t\t\tint x = Math.abs(readInt());\n\t\t\tint y = Math.abs(readInt());\n\t\t\tint result = x < MAXSIZE && y < MAXSIZE ? count[x][y] : 0;\n\t\t\tout.println(result);\t\t\t\n\t\t}\n\t}\n\t\n\tpublic void check(int[][] count, int MAXSIZE) {\n\t\tint boundary = 0;\n\t\tint inner = 0;\n\t\tfor ( int x = 0; x < MAXSIZE; x++) {\n\t\t\tfor ( int y = 0; y < MAXSIZE; y++) {\n\t\t\t\tif (x == 0 || y == 0 ) {\n\t\t\t\t\tif ( x + y > 0 ) boundary += count[x][y];\n\t\t\t\t}\n\t\t\t\telse inner += count[x][y];\n\t\t\t}\n\t\t}\n\t\tSystem.out.printf(\"boundary %d origin %d inner %d\\n\", boundary, count[0][0], inner);\n\t\tint total = 4*inner + 2*boundary + count[0][0];\n\t\tSystem.out.println(\"total \" + total);\n\t}\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint cnt[1004][1004];\nint vis[1004][1004];\nvector<pair<int, int> > v;\nqueue<pair<int, int> > pq;\nint main() {\n  int i, n, t, x, y, cx, cy, cnum, nnum, j, cn = 0, nx, ny, k;\n  int cenx = 500, ceny = 500;\n  cin >> n >> t;\n  int dx[] = {1, 0, -1, 0};\n  int dy[] = {0, 1, 0, -1};\n  cnt[cenx][ceny] = n;\n  while (1) {\n    int ch = 0;\n    for (i = -70; i <= 70; i++)\n      for (j = -70; j <= 70; j++) {\n        cx = cenx + i;\n        cy = ceny + j;\n        if (cnt[cx][cy] >= 4) {\n          int add = (cnt[cx][cy] >> 2);\n          ch = 1;\n          for (k = 0; k < 4; k++) {\n            nx = cx + dx[k];\n            ny = cy + dy[k];\n            cnt[nx][ny] += add;\n          }\n          cnt[cx][cy] %= 4;\n        }\n      }\n    if (ch == 0) break;\n  }\n  while (t--) {\n    cin >> x >> y;\n    x += cenx;\n    y += ceny;\n    if (x <= 0 || y <= 0 || x >= 1000 || y >= 1000)\n      cout << 0 << endl;\n    else\n      cout << cnt[x][y] << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, t;\nint sl[2 * 100 + 20][2 * 100 + 20];\nvoid Loang(int x, int y, int val) {\n  sl[x][y] += val;\n  int p = sl[x][y];\n  sl[x][y] %= 4;\n  if (p < 4) return;\n  Loang(x + 1, y, p / 4);\n  Loang(x - 1, y, p / 4);\n  Loang(x, y + 1, p / 4);\n  Loang(x, y - 1, p / 4);\n}\nint main() {\n  scanf(\"%d%d\", &n, &t);\n  Loang(100, 100, n);\n  for (int i = 1; i <= t; i++) {\n    int x, y;\n    scanf(\"%d%d\", &x, &y);\n    if (abs(x) > 100 || abs(y) > 100)\n      cout << 0 << endl;\n    else\n      cout << sl[x + 100][y + 100] << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint dx[] = {-1, 1, 0, 0};\nint dy[] = {0, 0, -1, 1};\nint c[1000][1000];\nbool vis[1000][1000];\nstruct XX {\n  int x;\n  int y;\n};\nqueue<XX> q;\nint main() {\n  int n, Q;\n  int i, j, k;\n  int x, y, v;\n  XX now;\n  while (scanf(\"%d%d\", &n, &Q) != EOF) {\n    memset(c, 0, sizeof(c));\n    memset(vis, false, sizeof(vis));\n    q.push({500, 500});\n    vis[500][500] = true;\n    c[500][500] = n;\n    while (!q.empty()) {\n      now = q.front();\n      q.pop();\n      v = c[now.x][now.y] >> 2;\n      for (i = 0; i < 4; i++) {\n        x = now.x + dx[i];\n        y = now.y + dy[i];\n        c[x][y] += v;\n        if (c[x][y] > 3 && !vis[x][y]) {\n          q.push({x, y});\n          vis[x][y] = true;\n        }\n      }\n      c[now.x][now.y] %= 4;\n      vis[now.x][now.y] = false;\n    }\n    while (Q--) {\n      scanf(\"%d%d\", &x, &y);\n      x = abs(x);\n      y = abs(y);\n      if (x > 500 || y > 500)\n        puts(\"0\");\n      else\n        printf(\"%d\\n\", c[x + 500][y + 500]);\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int Maxn = 5000 + 7, Maxx = 2500 + 7;\nint n, m, ans[Maxn][Maxn];\nvoid find(int x, int y, int t) {\n  ans[x][y] += t;\n  if ((ans[x][y] / 4) == 0) return;\n  int tmp = ans[x][y] / 4;\n  ans[x][y] %= 4;\n  find(x + 1, y, tmp);\n  find(x, y + 1, tmp);\n  find(x - 1, y, tmp);\n  find(x, y - 1, tmp);\n}\nint main() {\n  cin >> n >> m;\n  find(Maxx, Maxx, n);\n  for (int i = 0, a, b; i < m; i++) {\n    cin >> a >> b;\n    if (a + Maxx > 5000 || a + Maxx < 0 || b + Maxx > 5000 || b + Maxx < 0)\n      cout << 0 << endl;\n    else\n      cout << ans[a + Maxx][b + Maxx] << endl;\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int c = 100;\nint n;\nint a[2 * c][2 * c];\nint main() {\n  scanf(\"%d\", &n);\n  a[c][c] = n;\n  while (1) {\n    bool flag = true;\n    for (int i = 0; i < 2 * c; i++) {\n      for (int j = 0; j < 2 * c; j++) {\n        if (a[i][j] >= 4) {\n          flag = false;\n          a[i + 1][j] += a[i][j] / 4;\n          a[i - 1][j] += a[i][j] / 4;\n          a[i][j - 1] += a[i][j] / 4;\n          a[i][j + 1] += a[i][j] / 4;\n          a[i][j] %= 4;\n        }\n      }\n    }\n    if (flag) break;\n  }\n  int T;\n  scanf(\"%d\", &T);\n  while (T--) {\n    int x, y;\n    scanf(\"%d%d\", &x, &y);\n    if (x + c < 0 || y + c < 0 || x + c >= 2 * c || y + c >= 2 * c)\n      printf(\"0\\n\");\n    else\n      printf(\"%d\\n\", a[x + c][y + c]);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\n\npublic class Main implements Runnable {\n\t\t\n\tpublic void solve() throws IOException {\n                int N = nextInt();\n                \n                int mid = 100;\n                int[][] map = new int[mid * 2 + 1][ mid * 2 + 1];\n                map[mid][mid] = N;\n                \n                while(true){\n                        boolean update = false;\n                        for(int i = 0; i < map.length; i++){\n                                for(int j = 0; j < map.length; j++){\n                                        if(map[i][j] >= 4){\n                                                update = true;\n                                                map[i+1][j] += map[i][j] >> 2;\n                                                map[i-1][j] += map[i][j] >> 2;\n                                                map[i][j+1] += map[i][j] >> 2;\n                                                map[i][j-1] += map[i][j] >> 2;\n                                                map[i][j] &= 3;\n                                        }\n                                }\n                        }\n                        \n                        if(!update) break;\n                }\n                \n                int query = nextInt();\n                for(int i = 0; i < query; i++){\n                        int x = nextInt();\n                        int y = nextInt();\n                        if(Math.abs(x) >= 100 || Math.abs(y) >= 100){\n                                out.println(0);\n                        }\n                        else{\n                                out.println(map[mid + x][mid + y]);\n                        }\n                }\n\t}\n\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t//-----------------------------------------------------------\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n\n        public void debug(Object... arr){\n            System.out.println(Arrays.deepToString(arr));\n        }\n\n        public void print1Int(int[] a){\n                for(int i = 0; i < a.length; i++)\n                        System.out.print(a[i] + \" \");\n                System.out.println();\n        }\n        \n        public void print2Int(int[][] a){\n                for(int i = 0; i < a.length; i++){\n                        for(int j = 0; j < a[0].length; j++){\n                                System.out.print(a[i][j] + \" \");\n                        }\n                        System.out.println();\n                }\n        }\n        \n\tpublic void run() {\n\t\ttry {\n\t\t\tin = new BufferedReader(new InputStreamReader(System.in));\n                        out = new PrintWriter(System.out);\n\t\t\ttok = null;\n\t\t\tsolve();\n\t\t\tin.close();\n                        out.close();\n\t\t} catch (IOException e) {\n\t\t\tSystem.exit(0);\n\t\t}\n\t}\n\n\tpublic String nextToken() throws IOException {\n\t\twhile (tok == null || !tok.hasMoreTokens()) {\n\t\t\ttok = new StringTokenizer(in.readLine());\n\t\t}\n\t\treturn tok.nextToken();\n\t}\n\n\tpublic int nextInt() throws IOException {\n\t\treturn Integer.parseInt(nextToken());\n\t}\n\n\tpublic long nextLong() throws IOException {\n\t\treturn Long.parseLong(nextToken());\n\t}\n\n\tpublic double nextDouble() throws IOException {\n\t\treturn Double.parseDouble(nextToken());\n\t}\n        PrintWriter out;\n\tBufferedReader in;\n\tStringTokenizer tok;\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint p[1000][1000], used[1000][1000];\nqueue<pair<int, int> > q;\nint main() {\n  int n, t, k, l, x, y, i;\n  scanf(\"%d%d\", &n, &t);\n  q.push(make_pair(500, 500));\n  p[500][500] = n;\n  used[500][500] = 1;\n  while (q.size()) {\n    x = q.front().first;\n    y = q.front().second;\n    q.pop();\n    k = p[x][y] / 4;\n    p[x][y] %= 4;\n    p[x + 1][y] += k;\n    if (!used[x + 1][y] && p[x + 1][y] >= 4)\n      used[x + 1][y] = 1, q.push(make_pair(x + 1, y));\n    p[x - 1][y] += k;\n    if (!used[x - 1][y] && p[x - 1][y] >= 4)\n      used[x - 1][y] = 1, q.push(make_pair(x - 1, y));\n    p[x][y + 1] += k;\n    if (!used[x][y + 1] && p[x][y + 1] >= 4)\n      used[x][y + 1] = 1, q.push(make_pair(x, y + 1));\n    p[x][y - 1] += k;\n    if (!used[x][y - 1] && p[x][y - 1] >= 4)\n      used[x][y - 1] = 1, q.push(make_pair(x, y - 1));\n    used[x][y] = 0;\n  }\n  for (i = 1; i <= t; i++) {\n    scanf(\"%d%d\", &x, &y);\n    if (abs(x) > 400 || abs(y) > 400)\n      cout << 0 << endl;\n    else\n      cout << p[500 + x][500 + y] << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint num[2000][2000], vst[2000][2000];\nint dr[] = {1, 0, -1, 0};\nint dc[] = {0, 1, 0, -1};\nqueue<int> q;\nint main() {\n  int N, r, c, rr, cc, i, Q;\n  scanf(\"%d\", &N);\n  num[1000][1000] = N;\n  vst[1000][1000] = 1;\n  q.push(1000);\n  q.push(1000);\n  while (!q.empty()) {\n    r = q.front();\n    q.pop();\n    c = q.front();\n    q.pop();\n    vst[r][c] = 0;\n    for (i = 0; i < 4; i++) {\n      rr = r + dr[i], cc = c + dc[i];\n      num[rr][cc] += num[r][c] / 4;\n      if (num[rr][cc] >= 4 && !vst[rr][cc]) {\n        q.push(rr);\n        q.push(cc);\n        vst[rr][cc] = 1;\n      }\n    }\n    num[r][c] %= 4;\n  }\n  scanf(\"%d\", &Q);\n  for (i = 0; i < Q; i++) {\n    scanf(\"%d%d\", &r, &c);\n    r += 1000;\n    c += 1000;\n    if (r < 0 || c < 0 || r >= 2000 || c >= 2000)\n      puts(\"0\");\n    else\n      printf(\"%d\\n\", num[r][c]);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 300;\nint a[2 * N + 1][2 * N + 1] = {0};\nint b[2 * N + 1][2 * N + 1] = {0};\nint main() {\n  int n;\n  cin >> n;\n  int x0 = N;\n  int y0 = N;\n  int L = 0;\n  a[x0][y0] = n;\n  while (true) {\n    bool isEnd = true;\n    int incL = 0;\n    for (int x = x0 - L; x <= x0 + L; ++x) {\n      for (int y = y0 - L; y <= y0 + L; ++y) {\n        if (a[x][y] >= 4) {\n          isEnd = false;\n          b[x][y] += -4;\n          ++b[x + 1][y];\n          ++b[x][y + 1];\n          ++b[x - 1][y];\n          ++b[x][y - 1];\n          if (x == x0 - L || x == x0 + L || y == y0 - L || y == y0 + L) {\n            incL = 1;\n          }\n        }\n      }\n    }\n    L += incL;\n    if (isEnd) {\n      break;\n    }\n    for (int x = x0 - L; x <= x0 + L; ++x) {\n      for (int y = y0 - L; y <= y0 + L; ++y) {\n        a[x][y] += b[x][y];\n        b[x][y] = 0;\n      }\n    }\n  }\n  int t;\n  cin >> t;\n  for (int i = 0; i < t; ++i) {\n    int x;\n    int y;\n    cin >> x >> y;\n    if ((-300 < x && x < 300) && (-300 < y && y < 300)) {\n      cout << a[x + x0][y + y0] << endl;\n    } else {\n      cout << 0 << endl;\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <class T>\nvoid chmax(T& a, const T& b) {\n  a = max(a, b);\n}\ntemplate <class T>\nvoid chmin(T& a, const T& b) {\n  a = min(a, b);\n}\ntemplate <class T>\nvoid uniq(T& c) {\n  sort(c.begin(), c.end());\n  c.erase(unique(c.begin(), c.end()), c.end());\n}\ntemplate <class T>\nstring to_s(const T& a) {\n  ostringstream os;\n  os << a;\n  return os.str();\n}\ntemplate <class T>\nT to_T(const string& s) {\n  istringstream is(s);\n  T res;\n  is >> res;\n  return res;\n}\ntemplate <typename T>\nvoid print_container(ostream& os, const T& c) {\n  const char* _s = \" \";\n  if (!c.empty()) {\n    __typeof__(c.begin()) last = --c.end();\n    for (__typeof__((c).begin()) it = (c).begin(); it != (c).end(); ++it) {\n      os << *it;\n      if (it != last) cout << _s;\n    }\n  }\n}\ntemplate <typename T>\nostream& operator<<(ostream& os, const vector<T>& c) {\n  print_container(os, c);\n  return os;\n}\ntemplate <typename T>\nostream& operator<<(ostream& os, const set<T>& c) {\n  print_container(os, c);\n  return os;\n}\ntemplate <typename T>\nostream& operator<<(ostream& os, const multiset<T>& c) {\n  print_container(os, c);\n  return os;\n}\ntemplate <typename T>\nostream& operator<<(ostream& os, const deque<T>& c) {\n  print_container(os, c);\n  return os;\n}\ntemplate <typename T, typename U>\nostream& operator<<(ostream& os, const map<T, U>& c) {\n  print_container(os, c);\n  return os;\n}\ntemplate <typename T, typename U>\nostream& operator<<(ostream& os, const pair<T, U>& p) {\n  os << \"( \" << p.first << \", \" << p.second << \" )\";\n  return os;\n}\ntemplate <class T>\nvoid print(T a, int n, const string& deli = \" \", int br = 1) {\n  for (int i = 0; i < n; ++i) {\n    cout << a[i];\n    if (i + 1 != n) cout << deli;\n  }\n  while (br--) cout << endl;\n}\ntemplate <class T>\nvoid print2d(T a, int w, int h, int width = -1, int br = 1) {\n  for (int i = 0; i < h; ++i) {\n    for (int j = 0; j < w; ++j) {\n      if (width != -1) cout.width(width);\n      cout << a[i][j] << ' ';\n    }\n    cout << endl;\n  }\n  while (br--) cout << endl;\n}\ntemplate <class T>\nvoid input(T& a, int n) {\n  for (int i = 0; i < n; ++i) cin >> a[i];\n}\ntemplate <class T>\nvoid input(T* a, int n) {\n  for (int i = 0; i < n; ++i) cin >> a[i];\n}\nvoid fix_pre(int n) {\n  cout.setf(ios::fixed, ios::floatfield);\n  cout.precision(10);\n}\nvoid fast_io() {\n  cin.tie(0);\n  ios::sync_with_stdio(false);\n}\nbool in_rect(int x, int y, int w, int h) {\n  return 0 <= x && x < w && 0 <= y && y < h;\n}\nbool in_seg(int n, int l, int r) { return l <= n && n <= r; }\nconst int dx[] = {0, 1, 0, -1};\nconst int dy[] = {1, 0, -1, 0};\nconst double PI = acos(-1.0);\nint o = 70;\nint a[150][150];\nint na[150][150];\nint& get(int x, int y) { return a[y + o][x + o]; }\nint& getn(int x, int y) { return na[y + o][x + o]; }\nvoid simulate(int n) {\n  memset(a, 0, sizeof(a));\n  get(0, 0) = n;\n  for (bool updated = true; updated;) {\n    updated = false;\n    memset(na, 0, sizeof(na));\n    for (int y = -70; y <= 70; ++y) {\n      for (int x = -70; x <= 70; ++x) {\n        int t = get(x, y);\n        int p = t / 4, q = t % 4;\n        if (p > 0)\n          for (int i = 0; i < (int)(4); ++i) {\n            updated = true;\n            getn(x + dx[i], y + dy[i]) += p;\n          }\n        getn(x, y) += q;\n      }\n    }\n    memcpy(a, na, sizeof(a));\n  }\n}\nint main() {\n  fast_io();\n  int n, q;\n  cin >> n >> q;\n  simulate(n);\n  while (q--) {\n    int x, y;\n    cin >> x >> y;\n    x = abs(x), y = abs(y);\n    int res;\n    if (max(x, y) < 70)\n      res = get(x, y);\n    else\n      res = 0;\n    cout << res << endl;\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int ZERO = 1000, NMAX = 2010;\nconst int direct[4][2] = {{0, 1}, {0, -1}, {-1, 0}, {1, 0}};\nint T, table[NMAX][NMAX], UP;\nbool in[NMAX][NMAX];\ndeque<pair<int, int> > Q;\npair<int, int> x;\nint main() {\n  int i, tmp, p, q;\n  scanf(\"%d %d\", &table[ZERO][ZERO], &T);\n  Q.push_back(make_pair(ZERO, ZERO));\n  in[ZERO][ZERO] = true;\n  while (!Q.empty()) {\n    x = Q.front();\n    Q.pop_front();\n    in[x.first][x.second] = false;\n    tmp = table[x.first][x.second] / 4;\n    UP = max(UP, x.first - ZERO);\n    for (i = 0; i < 4; i += 1) {\n      table[x.first + direct[i][0]][x.second + direct[i][1]] += tmp;\n      if (!in[x.first + direct[i][0]][x.second + direct[i][1]] &&\n          table[x.first + direct[i][0]][x.second + direct[i][1]] >= 4) {\n        Q.push_back(make_pair(x.first + direct[i][0], x.second + direct[i][1]));\n        in[x.first + direct[i][0]][x.second + direct[i][1]] = true;\n      }\n    }\n    table[x.first][x.second] %= 4;\n  }\n  for (i = 1; i <= T; i += 1) {\n    scanf(\"%d %d\", &p, &q);\n    if (abs(p) <= UP + 1 && abs(q) <= UP + 1)\n      printf(\"%d\\n\", table[p + ZERO][q + ZERO]);\n    else\n      printf(\"0\\n\");\n  }\n  exit(0);\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint cnt[1000][1000], vst[1000][1000], flag;\nint dx[] = {1, 0, -1, 0};\nint dy[] = {0, 1, 0, -1};\nint main() {\n  int N, z, T, x, y, i, xx, yy;\n  while (scanf(\"%d%d\", &N, &T) == 2) {\n    memset(cnt, 0, sizeof(cnt));\n    cnt[500][500] = N;\n    queue<int> q = queue<int>();\n    if (N >= 4) {\n      q.push(500);\n      q.push(500);\n    }\n    flag++;\n    while (!q.empty()) {\n      x = q.front();\n      q.pop();\n      y = q.front();\n      q.pop();\n      vst[x][y] = 0;\n      z = cnt[x][y] / 4;\n      cnt[x][y] %= 4;\n      for (i = 0; i < 4; i++) {\n        xx = x + dx[i];\n        yy = y + dy[i];\n        cnt[xx][yy] += z;\n        if (cnt[xx][yy] >= 4) {\n          if (vst[xx][yy] != flag) {\n            vst[xx][yy] = flag;\n            q.push(xx);\n            q.push(yy);\n          }\n        }\n      }\n    }\n    for (; T--;) {\n      scanf(\"%d%d\", &x, &y);\n      if ((x + 500 < 0 || x + 500 >= 1000 || y + 500 < 0 || y + 500 >= 1000))\n        puts(\"0\");\n      else\n        printf(\"%d\\n\", cnt[x + 500][y + 500]);\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int LX = 1000;\nint a[LX << 2][LX << 2];\nint n, t, x, y;\nvoid gao(int x, int y, int add) {\n  a[x][y] += add;\n  if (a[x][y] >= 4) {\n    a[x][y] -= 4;\n    gao(x + 1, y, 1);\n    gao(x, y + 1, 1);\n    gao(x, y - 1, 1);\n    gao(x - 1, y, 1);\n    if (a[x][y] >= 4) gao(x, y, 0);\n  }\n}\nint main() {\n  while (cin >> n >> t) {\n    memset(a, 0, sizeof(a));\n    gao(LX, LX, n);\n    while (t--) {\n      cin >> x >> y;\n      if (x < -LX || x > LX || y < -LX || y > LX)\n        cout << 0 << endl;\n      else {\n        cout << a[x + LX][y + LX] << endl;\n      }\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstruct P {\n  int f, s;\n  P(int f = 0, int s = 0) : f(f), s(s) {}\n};\nint nd[500][500];\nbool up[500][500];\nint dx[4] = {1, -1, 0, 0}, dy[4] = {0, 0, 1, -1};\nint main() {\n  int n, t;\n  scanf(\"%d %d\", &n, &t);\n  nd[250][250] = n;\n  queue<P> que;\n  memset(up, false, sizeof(up));\n  if (n >= 4) {\n    que.push(P(250, 250));\n    up[250][250] = true;\n  }\n  while (!que.empty()) {\n    P p = que.front();\n    que.pop();\n    int x = p.f, y = p.s;\n    up[x][y] = false;\n    for (int i = 0; i < 4; i++) {\n      int nx = x + dx[i], ny = y + dy[i];\n      nd[nx][ny] += nd[x][y] / 4;\n      if (nd[nx][ny] >= 4 && !up[nx][ny]) {\n        up[nx][ny] = true;\n        que.push(P(nx, ny));\n      }\n    }\n    nd[x][y] %= 4;\n  }\n  for (int i = 0; i < t; i++) {\n    int x, y;\n    scanf(\"%d %d\", &x, &y);\n    x += 250;\n    y += 250;\n    if (0 <= x && x < 500 && 0 <= y && y < 500)\n      printf(\"%d\\n\", nd[x][y]);\n    else\n      puts(\"0\");\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxN = 32000;\nint dx[] = {1, -1, 0, 0};\nint dy[] = {0, 0, -1, 1};\nint a[1000][1000];\nint b[1000][1000];\nint x[maxN];\nint y[maxN];\nint nx[maxN], ny[maxN];\nint len, len2;\nint used[1000][1000];\nint main() {\n  int n;\n  cin >> n;\n  int centerx = 500, centery = 500;\n  a[centerx][centery] = n;\n  x[0] = centerx, y[0] = centery;\n  len = 1;\n  int niter = 0;\n  queue<pair<int, int> > q;\n  q.push(make_pair(centerx, centery));\n  ++used[centerx][centery];\n  int total = 0;\n  while (!q.empty()) {\n    pair<int, int> cur = q.front();\n    q.pop();\n    int cx = cur.first, cy = cur.second;\n    --used[cx][cy];\n    if (a[cx][cy] >= 4) {\n      int val = a[cx][cy] / 4;\n      for (int k = 0; k < 4; ++k) {\n        a[cx + dx[k]][cy + dy[k]] += val;\n        if (!used[cx + dx[k]][cy + dy[k]]) {\n          q.push(make_pair(cx + dx[k], cy + dy[k]));\n          ++used[cx + dx[k]][cy + dy[k]];\n        }\n        ++total;\n      }\n    }\n    a[cx][cy] %= 4;\n  }\n  int m;\n  cin >> m;\n  for (int i = 0; i < m; ++i) {\n    int x, y;\n    scanf(\"%d%d\", &x, &y);\n    if (x < 0) x = -x;\n    if (y < 0) y = -y;\n    x += centerx, y += centery;\n    if (x < 0 || x >= 1000 || y < 0 || y >= 1000) {\n      printf(\"0\\n\");\n    } else {\n      printf(\"%d\\n\", a[x][y]);\n    }\n  }\n  return 0;\n  cout << niter << endl;\n  map<pair<int, int>, int> ants;\n  ants[make_pair(0, 0)] = n;\n  int iter = 0;\n  while (true) {\n    map<pair<int, int>, int> nants;\n    bool good = false;\n    for (map<pair<int, int>, int>::iterator it = ants.begin(); it != ants.end();\n         ++it) {\n      int cx = it->first.first;\n      int cy = it->first.second;\n      int howmuch = it->second;\n      if (howmuch >= 4) {\n        for (int k = 0; k < 4; ++k) {\n          nants[make_pair(cx + dx[k], cy + dy[k])] += howmuch / 4;\n        }\n        good = true;\n        nants[make_pair(cx, cy)] += howmuch % 4;\n      } else {\n        nants[make_pair(cx, cy)] += howmuch;\n      }\n    }\n    if (good) {\n      ++iter;\n      ants = nants;\n    } else {\n      break;\n    }\n  }\n  cout << iter << endl;\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint cnt[2 * 700 + 70][2 * 700 + 70];\nbool inq[2 * 700 + 70][2 * 700 + 70];\nint dx[] = {0, 1, 0, -1};\nint dy[] = {1, 0, -1, 0};\nint n;\nvoid push(queue<pair<int, int> > &q, const pair<int, int> &p) {\n  if (inq[p.first + 700][p.second + 700]) return;\n  inq[p.first + 700][p.second + 700] = true;\n  q.push(p);\n}\nvoid simulate(void) {\n  scanf(\"%d\", &n);\n  queue<pair<int, int> > q;\n  pair<int, int> p;\n  int i, k;\n  cnt[700][700] = n;\n  q.push(pair<int, int>(0, 0));\n  while (!q.empty()) {\n    p = q.front();\n    q.pop();\n    inq[p.first + 700][p.second + 700] = false;\n    if (cnt[p.first + 700][p.second + 700] < 4) continue;\n    k = cnt[p.first + 700][p.second + 700] / 4;\n    for (i = 0; i < 4; i = i + 1) {\n      cnt[p.first + dx[i] + 700][p.second + dy[i] + 700] += k;\n      push(q, pair<int, int>(p.first + dx[i], p.second + dy[i]));\n    }\n    cnt[p.first + 700][p.second + 700] -= k * 4;\n  }\n}\nint answer(const int &first, const int &second) {\n  if (first < 0) return (answer(-first, second));\n  if (second < 0) return (answer(first, -second));\n  if (first > 700) return (0);\n  if (second > 700) return (0);\n  return (cnt[first + 700][second + 700]);\n}\nvoid process(void) {\n  int i, q, first, second;\n  scanf(\"%d\", &q);\n  for (i = 1; i <= q; i = i + 1) {\n    scanf(\"%d\", &first);\n    scanf(\"%d\", &second);\n    printf(\"%d\\n\", answer(first, second));\n  }\n}\nint main(void) {\n  simulate();\n  process();\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.BufferedReader;\nimport java.io.File;\nimport java.io.FileNotFoundException;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.io.PrintStream;\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.StringTokenizer;\n\n/*\npublic class _317B {\n\n}\n\n */\n\npublic class _317B {\n\n\tclass pair\n\t{\n\t\tint x;\n\t\tint y;\n\t\t@Override\n\t\tpublic int hashCode() {\n\t\t\tfinal int prime = 31;\n\t\t\tint result = 1;\n\t\t\tresult = prime * result + getOuterType().hashCode();\n\t\t\tresult = prime * result + x;\n\t\t\tresult = prime * result + y;\n\t\t\treturn result;\n\t\t}\n\t\t@Override\n\t\tpublic boolean equals(Object obj) {\n\t\t\tif (this == obj)\n\t\t\t\treturn true;\n\t\t\tif (obj == null)\n\t\t\t\treturn false;\n\t\t\tif (getClass() != obj.getClass())\n\t\t\t\treturn false;\n\t\t\tpair other = (pair) obj;\n\t\t\tif (!getOuterType().equals(other.getOuterType()))\n\t\t\t\treturn false;\n\t\t\tif (x != other.x)\n\t\t\t\treturn false;\n\t\t\tif (y != other.y)\n\t\t\t\treturn false;\n\t\t\treturn true;\n\t\t}\n\t\tprivate _317B getOuterType() {\n\t\t\treturn _317B.this;\n\t\t}\n\t\tpublic pair(int x, int y) {\n\t\t\tsuper();\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t}\n\n\n\t}\n\t//Map<pair, Integer> ans = new HashMap<_317B.pair, Integer>();\n\t\n\tint[][] ans = new int[129][129];\n\t\n\tint minx = 0;\n\tint miny = 0;\n\tint call = 0;\n\n\tpublic void solve() throws FileNotFoundException {\n\t\tInputStream inputStream = System.in;\n\n\t\tInputHelper inputHelper = new InputHelper(inputStream);\n\n\t\tPrintStream out = System.out;\n\n\t\t//actual solution\n\n\t\tint n = inputHelper.readInteger();\n\n\t\tdfs(0, 0, n);\n\n\t\t//System.out.println(call);\n\t\t\n\t\tint t = inputHelper.readInteger();\n\t\t\n\t\tfor(int i = 0; i < t; i++)\n\t\t{\n\t\t\tint x = inputHelper.readInteger();\n\t\t\tint y = inputHelper.readInteger();\n\t\t\t\n\t\t\tif(x < -64 || y < -64 || x > 64 || y > 64)\n\t\t\t{\n\t\t\t\tSystem.out.println(\"0\");\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tSystem.out.println(ans[x + 64][y + 64]);\n\t\t\t}\n\t\t\t/*if(ans.containsKey(new pair(x, y)))\n\t\t\t{\n\t\t\t\tSystem.out.println(ans.get(new pair(x, y)));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tSystem.out.println(\"0\");\n\t\t\t}*/\n\t\t}\n\n\n\t\t//end here\n\t}\n\n\tprivate void dfs(int x, int y, int n) {\n\n\t\tcall++;\n\t\t//System.out.println(x + \" \" + y + \" \" + n);\n\t\t\n\t\t/*if(x < minx)\n\t\t{\n\t\t\tminx = x;\n\t\t}\n\t\t\n\t\tif(y < miny)\n\t\t{\n\t\t\tminy = y;\n\t\t}\n\t\tif(ans.containsKey(new pair(x, y)))\n\t\t{\n\t\t\tans.put(new pair(x, y), ans.get(new pair(x, y)) + n);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tans.put(new pair(x, y), n);\n\t\t}*/\n\t\t\n\t\tans[x + 64][y + 64] += n;\n\n\t\tn = ans[x + 64][y + 64];\n\t\t\n\t\tif(n > 3)\n\t\t{\n\t\t\tans[x + 64][y + 64] %= 4;\n\t\t\tdfs(x - 1, y, n / 4);\n\t\t\tdfs(x, y - 1, n / 4);\n\t\t\tdfs(x, y + 1, n / 4);\n\t\t\tdfs(x + 1, y, n / 4);\n\t\t}\n\t}\n\n\tpublic static void main(String[] args) throws FileNotFoundException {\n\t\t(new _317B()).solve();\n\t}\n\n\tclass InputHelper {\n\t\tStringTokenizer tokenizer = null;\n\t\tprivate BufferedReader bufferedReader;\n\n\t\tpublic InputHelper(InputStream inputStream) {\n\t\t\tInputStreamReader inputStreamReader = new InputStreamReader(\n\t\t\t\t\tinputStream);\n\t\t\tbufferedReader = new BufferedReader(inputStreamReader, 16384);\n\t\t}\n\n\t\tpublic String read() {\n\t\t\twhile (tokenizer == null || !tokenizer.hasMoreTokens()) {\n\t\t\t\ttry {\n\t\t\t\t\tString line = bufferedReader.readLine();\n\t\t\t\t\tif (line == null) {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t\ttokenizer = new StringTokenizer(line);\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn tokenizer.nextToken();\n\t\t}\n\n\t\tpublic Integer readInteger() {\n\t\t\treturn Integer.parseInt(read());\n\t\t}\n\n\t\tpublic Long readLong() {\n\t\t\treturn Long.parseLong(read());\n\t\t}\n\t}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int mod = 1000000007;\ntemplate <typename T>\nT gcd(T a, T b) {\n  if (a == 0) return b;\n  return gcd(b % a, a);\n}\ntemplate <typename T>\nT pow(T a, T b, long long m) {\n  T ans = 1;\n  while (b > 0) {\n    if (b % 2 == 1) ans = (ans * a) % mod;\n    b /= 2;\n    a = (a * a) % mod;\n  }\n  return ans % mod;\n}\nconst int maxi = 1000;\nint arr[maxi][maxi];\nint n, m, k, l, j;\nvoid dfs(int x, int y) {\n  int antsdiv = arr[x][y] / 4;\n  arr[x][y] -= 4 * antsdiv;\n  arr[x - 1][y] += antsdiv;\n  if (arr[x - 1][y] >= 4) dfs(x - 1, y);\n  arr[x + 1][y] += antsdiv;\n  if (arr[x + 1][y] >= 4) dfs(x + 1, y);\n  arr[x][y - 1] += antsdiv;\n  if (arr[x][y - 1] >= 4) dfs(x, y - 1);\n  arr[x][y + 1] += antsdiv;\n  if (arr[x][y + 1] >= 4) dfs(x, y + 1);\n}\nint main() {\n  cin >> n;\n  arr[500][500] = n;\n  dfs(500, 500);\n  cin >> m;\n  for (int i = 0; i < m; i++) {\n    int x, y;\n    cin >> x >> y;\n    if (abs(x) > 100 || abs(y) > 100) {\n      cout << \"0\\n\";\n      continue;\n    }\n    cout << arr[x + 500][y + 500] << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int oo = 1 << 30;\nconst double PI = M_PI;\nconst double EPS = 1e-15;\nconst int MaxM = 500;\nconst int OFFSET = MaxM >> 1;\nint n, t;\nint C[MaxM][MaxM];\nint used[MaxM][MaxM];\nint utime;\nint X[2][MaxM * MaxM];\nint Y[2][MaxM * MaxM];\nint size[2];\nvoid push(int idx, int r, int c) {\n  if (used[r][c] != utime && C[r][c] >= 4) {\n    used[r][c] = utime;\n    X[idx][size[idx]] = r;\n    Y[idx][size[idx]] = c;\n    size[idx] = size[idx] + 1;\n  }\n}\nvoid put(int k) {\n  int curr = 0;\n  C[OFFSET][OFFSET] = k;\n  size[curr] = 1;\n  X[curr][0] = OFFSET;\n  Y[curr][0] = OFFSET;\n  if (k < 4) return;\n  while (size[curr] > 0) {\n    for (int i = 0; i < size[curr]; i++) {\n      int r = C[X[curr][i]][Y[curr][i]] / 4;\n      C[X[curr][i]][Y[curr][i]] -= r * 4;\n      C[X[curr][i] - 1][Y[curr][i]] += r;\n      C[X[curr][i] + 1][Y[curr][i]] += r;\n      C[X[curr][i]][Y[curr][i] - 1] += r;\n      C[X[curr][i]][Y[curr][i] + 1] += r;\n    }\n    utime = utime + 1;\n    size[1 - curr] = 0;\n    for (int i = 0; i < size[curr]; i++) {\n      push(1 - curr, X[curr][i], Y[curr][i]);\n      push(1 - curr, X[curr][i] - 1, Y[curr][i]);\n      push(1 - curr, X[curr][i] + 1, Y[curr][i]);\n      push(1 - curr, X[curr][i], Y[curr][i] - 1);\n      push(1 - curr, X[curr][i], Y[curr][i] + 1);\n    }\n    curr = 1 - curr;\n  }\n}\nint main() {\n  cin.sync_with_stdio(false);\n  cin >> n >> t;\n  put(4 * (n / 4));\n  put(n % 4);\n  for (int i = 0; i < t; i++) {\n    int _x, _y;\n    cin >> _x >> _y;\n    _x += OFFSET;\n    _y += OFFSET;\n    if (0 <= _x && _x < MaxM && 0 <= _y && _y < MaxM)\n      cout << C[_x][_y] << \"\\n\";\n    else\n      cout << 0 << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint tot[160][160];\nint dx[] = {0, 1, 0, -1};\nint dy[] = {-1, 0, 1, 0};\nvoid work(int m, int kk) {\n  int tmp, tt, x, y, ttn;\n  int i, j, dir, flag;\n  memset(tot, 0, sizeof(tot));\n  tot[75][75] = m;\n  while (1) {\n    flag = 0;\n    for (i = 0; i <= 150; ++i) {\n      for (j = 0; j <= 150; ++j)\n        if (tot[i][j] >= 4) {\n          flag = 1;\n          ttn = tot[i][j] / 4;\n          tot[i][j] %= 4;\n          for (dir = 0; dir < 4; ++dir) {\n            x = i + dx[dir];\n            y = j + dy[dir];\n            tot[x][y] += ttn;\n          }\n        }\n    }\n    if (flag == 0) break;\n  }\n}\ninline int abs(int a) { return a < 0 ? -a : a; }\nint main() {\n  int m, t;\n  int i, j;\n  scanf(\"%d%d\", &m, &t);\n  work(m, 4);\n  int a, b;\n  for (i = 1; i <= t; ++i) {\n    scanf(\"%d%d\", &a, &b);\n    if (abs(a) > 74 || abs(b) > 74)\n      printf(\"0\\n\");\n    else\n      printf(\"%d\\n\", tot[a + 75][b + 75]);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 200;\nint n, t;\nint mp[N << 1][N << 1];\nint main() {\n  scanf(\"%d%d\", &n, &t);\n  memset(mp, 0, sizeof mp);\n  bool flag = 1;\n  mp[N][N] = n;\n  while (flag) {\n    flag = 0;\n    for (int i = 0; i < N * 2; i++) {\n      for (int j = 0; j < N * 2; j++) {\n        if (mp[i][j] >= 4) {\n          flag = 1;\n          int now = mp[i][j] / 4;\n          mp[i + 1][j] += now;\n          mp[i - 1][j] += now;\n          mp[i][j + 1] += now;\n          mp[i][j - 1] += now;\n          mp[i][j] -= now * 4;\n        }\n      }\n    }\n  }\n  for (int i = 1; i <= t; i++) {\n    int x, y;\n    scanf(\"%d%d\", &x, &y);\n    if (abs(x) > N || abs(y) > N) {\n      printf(\"0\\n\");\n    } else {\n      printf(\"%d\\n\", mp[x + N][y + N]);\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint arr[2][200][200];\nstack<int> s1, s2;\nint computeIterative(void) {\n  int pre = 0;\n  int now = 1;\n  while (true) {\n    bool changed = false;\n    for (int i = 0; i < 200; i++) {\n      for (int j = 0; j < 200; j++) {\n        arr[now][i][j] += arr[pre][i][j];\n        if (arr[pre][i][j] >= 4) {\n          changed = true;\n          int inc = arr[pre][i][j] / 4;\n          int dec = 4 * inc;\n          arr[now][i][j] -= dec;\n          arr[now][i + 1][j] += inc;\n          arr[now][i - 1][j] += inc;\n          arr[now][i][j + 1] += inc;\n          arr[now][i][j - 1] += inc;\n        }\n      }\n    }\n    if (!changed) return now;\n    memset(arr[pre], 0, sizeof(arr[pre]));\n    pre = 1 - pre;\n    now = 1 - now;\n  }\n}\nint main() {\n  int n, t;\n  scanf(\"%d %d\", &n, &t);\n  memset(arr, 0, sizeof(arr));\n  arr[0][100][100] = n;\n  int ver = computeIterative();\n  for (int i = 0; i < t; i++) {\n    int x, y;\n    scanf(\"%d %d\", &x, &y);\n    if (x >= 100 || x < -100 || y >= 100 || y < -100)\n      printf(\"0\\n\");\n    else {\n      printf(\"%d\\n\", arr[ver][x + 100][y + 100]);\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nchar Gc() {\n  static char now[1 << 20], *S, *T;\n  if (T == S) {\n    T = (S = now) + std::fread(now, 1, 1 << 20, stdin);\n    if (T == S) return EOF;\n  }\n  return *S++;\n}\ntemplate <typename T>\nvoid Read(T &x) {\n  x = 0;\n  int f = 1;\n  char c;\n  while ((c = Gc()) < '0' || c > '9')\n    if (c == '-') f = -1;\n  x = c - '0';\n  while ((c = Gc()) >= '0' && c <= '9') x = x * 10 + (c - '0');\n  x *= f;\n}\ntemplate <typename T, typename... Args>\nvoid Read(T &x, Args &...args) {\n  Read(x);\n  Read(args...);\n}\ntemplate <typename T>\nvoid checkmax(T &x, T y) {\n  if (x < y) x = y;\n}\ntemplate <typename T>\nvoid checkmin(T &x, T y) {\n  if (x > y) x = y;\n}\nint n, q, a[601][601];\nvoid Dfs(int x, int y) {\n  if (a[x][y] < 4) return;\n  int t = a[x][y] >> 2;\n  a[x][y] &= 3;\n  a[x - 1][y] += t;\n  a[x + 1][y] += t;\n  a[x][y - 1] += t;\n  a[x][y + 1] += t;\n  Dfs(x - 1, y);\n  Dfs(x + 1, y);\n  Dfs(x, y - 1);\n  Dfs(x, y + 1);\n}\nint main(int argc, char const *argv[]) {\n  Read(n, q);\n  a[300][300] = n;\n  Dfs(300, 300);\n  while (q--) {\n    int x, y;\n    Read(x, y);\n    if (x < -300 || x > 300 || y < -300 || y > 300)\n      std::printf(\"0\\n\");\n    else\n      std::printf(\"%d\\n\", a[x + 300][y + 300]);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[400][400];\nvoid add(int x, int y) {\n  a[x + 200][200 + y] += 1;\n  if (a[x + 200][200 + y] >= 4) {\n    a[x + 200][200 + y] -= 4;\n    add(x + 1, y);\n    add(x - 1, y);\n    add(x, y - 1);\n    add(x, y + 1);\n  }\n}\nint main() {\n  int n, t;\n  while (scanf(\"%d%d\", &n, &t) != EOF) {\n    int s = n;\n    memset(a, 0, sizeof(a));\n    a[200][200] = s;\n    while (a[200][200] >= 4)\n      a[200][200] -= 4, add(1, 0), add(0, 1), add(0, -1), add(-1, 0);\n    for (int i = 1; i <= t; i++) {\n      int x, y;\n      scanf(\"%d%d\", &x, &y);\n      if (x <= -200 || x >= 200 || y <= -200 || y >= 200)\n        printf(\"0\\n\");\n      else\n        printf(\"%d\\n\", a[x + 200][y + 200]);\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint main() {\n  static int kk[200 + 1 + 200][200 + 1 + 200];\n  int n, t, x, y, k, updated;\n  scanf(\"%d%d\", &n, &t);\n  kk[200][200] = n;\n  while (1) {\n    updated = 0;\n    for (x = 1; x < 200 + 200; x++)\n      for (y = 1; y < 200 + 200; y++)\n        if (kk[x][y] >= 4) {\n          k = kk[x][y] / 4;\n          kk[x][y] %= 4;\n          kk[x - 1][y] += k;\n          kk[x + 1][y] += k;\n          kk[x][y - 1] += k;\n          kk[x][y + 1] += k;\n          updated = 1;\n        }\n    if (!updated) break;\n  }\n  while (t--) {\n    scanf(\"%d%d\", &x, &y);\n    printf(\"%d\\n\", x < -200 || x > 200 || y < -200 || y > 200\n                       ? 0\n                       : kk[200 + x][200 + y]);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvector<pair<int, int> > q;\nint n, t;\nint grid[100][100];\nint moves[4][2] = {{0, 1}, {0, -1}, {1, 0}, {-1, 0}};\nint main() {\n  cin >> n;\n  grid[0][0] = n;\n  if (n > 3) q.push_back(make_pair(0, 0));\n  int minx = 0;\n  int nit = 0;\n  while (!q.empty()) {\n    nit++;\n    pair<int, int> cur = q[q.size() - 1];\n    assert(grid[cur.first][cur.second] > 3);\n    if (cur.first > minx) minx = cur.first;\n    grid[cur.first][cur.second] -= 4;\n    if (grid[cur.first][cur.second] < 4) q.pop_back();\n    for (int i = 0; i < 4; i++) {\n      int nx = cur.first + moves[i][0];\n      int ny = cur.second + moves[i][1];\n      if (nx < 0 || ny < 0) continue;\n      int inc = (1 + (!nx && cur.first)) * (1 + (!ny && cur.second));\n      bool ch = grid[nx][ny] < 4;\n      grid[nx][ny] += inc;\n      if (grid[nx][ny] >= 4 && ch) q.push_back(make_pair(nx, ny));\n    }\n  }\n  minx++;\n  cin >> t;\n  while (t--) {\n    int a, b;\n    cin >> a >> b;\n    if (a < 0) a *= -1;\n    if (b < 0) b *= -1;\n    if (a > minx || b > minx)\n      cout << 0 << \"\\n\";\n    else\n      cout << grid[a][b] << \"\\n\";\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import static java.lang.Math.abs;\nimport static java.lang.Math.max;\n\nimport java.io.BufferedReader;\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.PrintStream;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\n\npublic class B {\n\n\tstatic final int MAXN = 100;\n\n\tstatic void solve() throws IOException {\n\t\tint ants = nextInt();\n//\t\t long time = System.currentTimeMillis();\n\n\t\tint[][] count = new int[MAXN * 2][MAXN * 2];\n\t\tint maxX = 0;\n\t\tcount[MAXN][MAXN] = ants;\n\t\twhile (maxX >= 0) {\n\t\t\tint newMaxX = -1;\n\t\t\tfor (int i = MAXN - maxX; i <= MAXN + maxX; i++) {\n\t\t\t\tfor (int j = MAXN - maxX; j <= MAXN + maxX; j++) {\n\t\t\t\t\tif (count[i][j] < 4) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tint ok = count[i][j];\n\t\t\t\t\tfor (int dir = 0; dir < 4; dir++) {\n\t\t\t\t\t\tint ni = i + dx[dir];\n\t\t\t\t\t\tint nj = j + dy[dir];\n\t\t\t\t\t\tcount[ni][nj] += ok >> 2;\n\t\t\t\t\t\tnewMaxX = max(newMaxX, abs(MAXN - ni));\n\t\t\t\t\t\tnewMaxX = max(newMaxX, abs(MAXN - nj));\n\t\t\t\t\t}\n\t\t\t\t\tcount[i][j] &= 3;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmaxX = newMaxX;\n\t\t}\n\t\tint sum = 0;\n\t\tfor (int i = 0; i < MAXN * 2; i++) {\n\t\t\tfor (int j = 0; j < MAXN * 2; j++) {\n\t\t\t\tif (count[i][j] >= 4) {\n\t\t\t\t\tthrow new AssertionError();\n\t\t\t\t}\n\t\t\t\tsum += count[i][j];\n\t\t\t}\n\t\t}\n\t\tif (sum != ants) {\n\t\t\tthrow new AssertionError();\n\t\t}\n//\t\t System.err.println(System.currentTimeMillis() - time);\n\t\tint queries = nextInt();\n\t\tfor (int i = 0; i < queries; i++) {\n\t\t\tint x = nextInt(), y = nextInt();\n\t\t\tint answer;\n\t\t\tif (abs(x) >= MAXN || abs(y) >= MAXN) {\n\t\t\t\tanswer = 0;\n\t\t\t} else {\n\t\t\t\tanswer = count[x + MAXN][y + MAXN];\n\t\t\t}\n\t\t\tout.println(answer);\n\t\t}\n\n\t}\n\n\tstatic int[] dx = { 0, 0, 1, -1 };\n\tstatic int[] dy = { 1, -1, 0, 0 };\n\n\tstatic BufferedReader br;\n\tstatic StringTokenizer st;\n\tstatic PrintWriter out;\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tInputStream input = System.in;\n\t\tPrintStream output = System.out;\n\t\tFile file = new File(\"b.in\");\n\t\tif (file.exists() && file.canRead()) {\n\t\t\tinput = new FileInputStream(file);\n\t\t}\n\t\tbr = new BufferedReader(new InputStreamReader(input));\n\t\tout = new PrintWriter(output);\n\t\tsolve();\n\t\tout.close();\n\t}\n\n\tstatic long nextLong() throws IOException {\n\t\treturn Long.parseLong(nextToken());\n\t}\n\n\tstatic double nextDouble() throws IOException {\n\t\treturn Double.parseDouble(nextToken());\n\t}\n\n\tstatic int nextInt() throws IOException {\n\t\treturn Integer.parseInt(nextToken());\n\t}\n\n\tstatic String nextToken() throws IOException {\n\t\twhile (st == null || !st.hasMoreTokens()) {\n\t\t\tString line = br.readLine();\n\t\t\tif (line == null) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tst = new StringTokenizer(line);\n\t\t}\n\t\treturn st.nextToken();\n\t}\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedWriter;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStreamWriter;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.InputMismatchException;\n\n\npublic class TaskB implements Runnable {\n\n\tprivate static final int MAXN = 68;\n\t\n\tprivate int[] qSize;\n\t\n\tprivate int[][] qx;\n\tprivate int[][] qy;\n\t\n\tprivate static final int[] DX = {0, 0, -1, 1};\n\tprivate static final int[] DY = {-1, 1, 0, 0};\n\t\n\tprivate int timer;\n\t\n\tprivate void add(int id, int x, int y) {\n\t\tif (field[x][y] >= 4 && last[x][y] < timer) {\n\t\t\tlast[x][y] = timer;\n\t\t\tint size = qSize[id]++;\n\t\t\tqx[id][size] = x;\n\t\t\tqy[id][size] = y;\n\t\t}\n\t}\n\t\n\tprivate void solve() {\n\t\tlong start = System.currentTimeMillis();\n\t\tqx = new int[2][MAXN*MAXN];\n\t\tqy = new int[2][MAXN*MAXN];\n\t\tqSize = new int[2];\n\t\tlast = new int[MAXN][MAXN];\n\t\ttimer = 0;\n\t\tfor (int[] b: last) {\n\t\t\tArrays.fill(b, -1);\n\t\t}\n\t\tfield = new int[MAXN][MAXN];\n\t\tfor (int[] b: field) {\n\t\t\tArrays.fill(b, 0);\n\t\t}\n\t\tint cur = 0;\n\t\tfield[0][0] = n;\n\t\tqSize[0] = 0;\n\t\tadd(0, 0, 0);\t\n\t\twhile (qSize[cur] > 0) {\n\t\t\tint next = cur^1;\n\t\t\tqSize[next] = 0;\n\t\t\t++timer;\n\t\t\tfor (int i = 0; i < qSize[cur]; ++i) {\n\t\t\t\tfield[qx[cur][i]][qy[cur][i]] -= 4;\n\t\t\t}\n\t\t\tfor (int i = 0; i < qSize[cur]; ++i) {\n\t\t\t\tint x = qx[cur][i];\n\t\t\t\tint y = qy[cur][i];\n\t\t\t\tadd(next, x, y);\n\t\t\t\tfor (int dir = 0; dir < 4; ++dir) {\n\t\t\t\t\tint cx = x + DX[dir];\n\t\t\t\t\tint cy = y + DY[dir];\n\t\t\t\t\tif (cx >= 0 && cy >= 0) {\n\t\t\t\t\t\t++field[cx][cy];\n\t\t\t\t\t\tif ((cx == 0 && cy == 0) || ((cx == 0 || cy == 0) && (x > 0 && y > 0))) {\n\t\t\t\t\t\t\t++field[cx][cy];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tadd(next, cx, cy);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tcur = next;\n\t\t}\n\t\tint t = in.readInt();\n\t\twhile (t-- > 0) {\n\t\t\tint x = in.readInt();\n\t\t\tint y = in.readInt();\n\t\t\tif (x < 0) {\n\t\t\t\tx = -x;\n\t\t\t}\n\t\t\tif (y < 0) {\n\t\t\t\ty = -y;\n\t\t\t}\n\t\t\tout.println(x < MAXN && y < MAXN ? field[x][y] : 0);\n\t\t}\n\t}\n\t\n\tprivate void readData() {\n\t\tn = in.readInt();\n\t}\n\t\n\tprivate int n;\n\tprivate int[][] field;\n\tprivate int[][] last;\n\t\n\tprivate void begin() {\n\t\tin = new InputReader(System.in);\n\t\tout = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));\n\t}\n\t\n\tprivate void end() {\n\t\tout.flush();\n\t}\n\t\n\tprivate InputReader in;\n\tprivate PrintWriter out;\n\t\n\t@Override\n\tpublic void run() {\n\t\tbegin();\n\t\treadData();\n\t\tsolve();\t\t\n\t\tend();\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew TaskB().run();\n\t}\n\t\n\tprivate class InputReader {\n\n\t\tprivate InputStream stream;\n\t\tprivate byte[] buf = new byte[1024];\n\t\tprivate int curChar;\n\t\tprivate int numChars;\n\n\t\tpublic InputReader(InputStream stream) {\n\t\t\tthis.stream = stream;\n\t\t}\n\n\t\tpublic int read() {\n\t\t\tif (numChars == -1)\n\t\t\t\tthrow new InputMismatchException();\n\t\t\tif (curChar >= numChars) {\n\t\t\t\tcurChar = 0;\n\t\t\t\ttry {\n\t\t\t\t\tnumChars = stream.read(buf);\n\t\t\t\t} \n\t\t\t\tcatch (IOException e) {\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t}\n\t\t\t\tif (numChars <= 0)\n\t\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn buf[curChar++];\n\t\t}\n\n\t\tpublic int readInt() {\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c)) {\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tint sgn = 1;\n\t\t\tif (c == '-') {\n\t\t\t\tsgn = -1;\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tint res = 0;\n\t\t\tdo {\n\t\t\t\tres *= 10;\n\t\t\t\tres += c - '0';\n\t\t\t\tc = read();\n\t\t\t} \n\t\t\twhile (!isSpaceChar(c));\n\t\t\treturn res * sgn;\n\t\t}\n\n\t\tpublic boolean isSpaceChar(int c) {\n\t\t\treturn isWhitespace(c);\n\t\t}\n\n\t\tpublic boolean isWhitespace(int c) {\n\t\t\treturn c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n\t\t}\n\t}\n\n\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.IOException;\nimport java.io.OutputStreamWriter;\nimport java.io.BufferedWriter;\nimport java.util.InputMismatchException;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.NoSuchElementException;\nimport java.io.Writer;\nimport java.math.BigInteger;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n * @author Egor Kulikov (egor@egork.net)\n */\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tInputReader in = new InputReader(inputStream);\n\t\tOutputWriter out = new OutputWriter(outputStream);\n\t\tTaskB solver = new TaskB();\n\t\tsolver.solve(1, in, out);\n\t\tout.close();\n\t}\n}\n\nclass TaskB {\n    public void solve(int testNumber, InputReader in, OutputWriter out) {\n\t\tint count = in.readInt();\n\t\tint n = 70;\n\t\tint[][] answer = new int[2 * n + 1][2 * n + 1];\n\t\tanswer[n][n] = count;\n\t\twhile (true) {\n\t\t\tboolean update = false;\n\t\t\tfor (int i = 0; i <= 2 * n; i++) {\n\t\t\t\tfor (int j = 0; j <= 2 * n; j++) {\n\t\t\t\t\tif (answer[i][j] >= 4) {\n\t\t\t\t\t\tupdate = true;\n\t\t\t\t\t\tanswer[i - 1][j] += answer[i][j] >> 2;\n\t\t\t\t\t\tanswer[i + 1][j] += answer[i][j] >> 2;\n\t\t\t\t\t\tanswer[i][j - 1] += answer[i][j] >> 2;\n\t\t\t\t\t\tanswer[i][j + 1] += answer[i][j] >> 2;\n\t\t\t\t\t\tanswer[i][j] &= 3;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!update)\n\t\t\t\tbreak;\n\t\t}\n\t\tint queryCount = in.readInt();\n\t\tfor (int i = 0; i < queryCount; i++) {\n\t\t\tint x = in.readInt();\n\t\t\tint y = in.readInt();\n\t\t\tif (Math.abs(x) <= n && Math.abs(y) <= n)\n\t\t\t\tout.printLine(answer[x + n][y + n]);\n\t\t\telse\n\t\t\t\tout.printLine(0);\n\t\t}\n\t}\n}\n\nclass InputReader {\n\n\tprivate InputStream stream;\n\tprivate byte[] buf = new byte[1024];\n\tprivate int curChar;\n\tprivate int numChars;\n\tprivate SpaceCharFilter filter;\n\n\tpublic InputReader(InputStream stream) {\n\t\tthis.stream = stream;\n\t}\n\n\tpublic int read() {\n\t\tif (numChars == -1)\n\t\t\tthrow new InputMismatchException();\n\t\tif (curChar >= numChars) {\n\t\t\tcurChar = 0;\n\t\t\ttry {\n\t\t\t\tnumChars = stream.read(buf);\n\t\t\t} catch (IOException e) {\n\t\t\t\tthrow new InputMismatchException();\n\t\t\t}\n\t\t\tif (numChars <= 0)\n\t\t\t\treturn -1;\n\t\t}\n\t\treturn buf[curChar++];\n\t}\n\n\tpublic int readInt() {\n\t\tint c = read();\n\t\twhile (isSpaceChar(c))\n\t\t\tc = read();\n\t\tint sgn = 1;\n\t\tif (c == '-') {\n\t\t\tsgn = -1;\n\t\t\tc = read();\n\t\t}\n\t\tint res = 0;\n\t\tdo {\n\t\t\tif (c < '0' || c > '9')\n\t\t\t\tthrow new InputMismatchException();\n\t\t\tres *= 10;\n\t\t\tres += c - '0';\n\t\t\tc = read();\n\t\t} while (!isSpaceChar(c));\n\t\treturn res * sgn;\n\t}\n\n\tpublic boolean isSpaceChar(int c) {\n\t\tif (filter != null)\n\t\t\treturn filter.isSpaceChar(c);\n\t\treturn isWhitespace(c);\n\t}\n\n\tpublic static boolean isWhitespace(int c) {\n\t\treturn c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n\t}\n\n\tpublic interface SpaceCharFilter {\n\t\tpublic boolean isSpaceChar(int ch);\n\t}\n}\n\nclass OutputWriter {\n\tprivate final PrintWriter writer;\n\n\tpublic OutputWriter(OutputStream outputStream) {\n\t\twriter = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));\n\t}\n\n\tpublic OutputWriter(Writer writer) {\n\t\tthis.writer = new PrintWriter(writer);\n\t}\n\n\tpublic void print(Object...objects) {\n\t\tfor (int i = 0; i < objects.length; i++) {\n\t\t\tif (i != 0)\n\t\t\t\twriter.print(' ');\n\t\t\twriter.print(objects[i]);\n\t\t}\n\t}\n\n    public void printLine(Object...objects) {\n\t\tprint(objects);\n\t\twriter.println();\n\t}\n\n\tpublic void close() {\n\t\twriter.close();\n\t}\n\n\t}\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[1111111], b[1111111], dp[4111][4111];\nint n, l = 0, m;\nint q1 = 0, q2 = 0;\nlong long ans = 0;\nvoid add(int x, int y) {\n  dp[x][y]++;\n  if (dp[x][y] > 3) {\n    dp[x][y] -= 4;\n    add(x + 1, y);\n    add(x - 1, y);\n    add(x, y + 1);\n    add(x, y - 1);\n  }\n}\nint main() {\n  int j, i, n = 0, m = 0;\n  cin >> n;\n  dp[200][200] = n;\n  while (dp[200][200] > 3) {\n    dp[200][200] -= 4;\n    add(200 + 1, 200);\n    add(200 - 1, 200);\n    add(200, 200 - 1);\n    add(200, 200 + 1);\n  }\n  cin >> m;\n  while (m--) {\n    int x, y;\n    cin >> x >> y;\n    x = abs(x);\n    y = abs(y);\n    if (max(x, y) > 199)\n      cout << 0 << endl;\n    else\n      cout << dp[200 + x][200 + y] << endl;\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nvoid stop() {\n  printf(\"press any key to continue...\\n\");\n  while (getchar() != '\\n') {\n  }\n}\nconst int LEN = 131;\nint ants[2][LEN][LEN];\nvoid print(int t) {\n  for (int y = 0; y < LEN; y++) {\n    for (int x = 0; x < LEN; x++) {\n      if (ants[t][y][x] == 0) {\n        cout << ' ';\n      } else {\n        printf(\"%d\", ants[t][y][x]);\n      }\n    }\n    cout << endl;\n  }\n}\nint main() {\n  istream& in = cin;\n  int n, t;\n  in >> n >> t;\n  memset(ants, 0, sizeof(ants));\n  ants[0][LEN / 2][LEN / 2] = n;\n  int d = 1;\n  int s = 0;\n  while (true) {\n    bool update = false;\n    memset(ants[d], 0, sizeof(ants[d]));\n    for (int y = 0; y < LEN; y++) {\n      for (int x = 0; x < LEN; x++) {\n        if (ants[s][y][x] >= 4) {\n          if (y == 0) {\n            cout << endl;\n          }\n          update = true;\n          int add = ants[s][y][x] / 4;\n          int rem = ants[s][y][x] % 4;\n          ants[d][y][x + 1] += add;\n          ants[d][y][x - 1] += add;\n          ants[d][y + 1][x] += add;\n          ants[d][y - 1][x] += add;\n          ants[d][y][x] += rem;\n        } else {\n          ants[d][y][x] += ants[s][y][x];\n        }\n      }\n    }\n    if (!update) break;\n    swap(s, d);\n  }\n  int MAX_ABS = LEN / 2;\n  for (int i = 0; i < t; i++) {\n    int x, y;\n    in >> x >> y;\n    if (abs(x) > MAX_ABS || abs(y) > MAX_ABS) {\n      printf(\"%d\\n\", 0);\n    } else {\n      x += LEN / 2;\n      y += LEN / 2;\n      printf(\"%d\\n\", ants[s][y][x]);\n    }\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint a[2000 + 1][2000 + 1];\nchar pus[2000 + 1][2000 + 1];\nint ql[100 * 30000], qc[100 * 30000], st, dr;\nint d[4][2] = {{0, 1}, {1, 0}, {0, -1}, {-1, 0}};\nint main() {\n  int n, t, i, x, l, c, nl, nc, cx;\n  char g = 1;\n  scanf(\"%d%d\", &n, &t);\n  st = 0, dr = 1;\n  ql[0] = qc[0] = 0;\n  pus[0][0] = 1;\n  a[0][0] = n;\n  while (st != dr) {\n    l = ql[st];\n    c = qc[st];\n    st++;\n    if (st == 100 * 30000) st = 0;\n    pus[l][c] = 0;\n    x = a[l][c] / 4;\n    a[l][c] %= 4;\n    for (i = 0; i < 4; i++) {\n      nl = l + d[i][0];\n      nc = c + d[i][1];\n      if (nl == 0 && nc == 0)\n        cx = 4 * x;\n      else if ((l != 0 && nl == 0) || (c != l && nc == nl))\n        cx = 2 * x;\n      else\n        cx = x;\n      if (nl >= 0 && nc >= 0 && nl <= nc) {\n        a[nl][nc] += cx;\n        if (!pus[nl][nc] && a[nl][nc] >= 4) {\n          ql[dr] = nl;\n          qc[dr] = nc;\n          dr++;\n          if (dr == 100 * 30000) dr = 0;\n          pus[nl][nc] = 1;\n        }\n      }\n    }\n  }\n  int y, aux;\n  for (i = 0; i < t; i++) {\n    scanf(\"%d%d\", &x, &y);\n    if (x < 0) x = -x;\n    if (y < 0) y = -y;\n    if (y < x) {\n      aux = x;\n      x = y;\n      y = aux;\n    }\n    if (x <= 2000 && y <= 2000)\n      printf(\"%d\\n\", a[x][y]);\n    else\n      printf(\"0\\n\");\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int dx[] = {0, 1, 0, -1}, dy[] = {1, 0, -1, 0};\nlong long powmod(long long a, long long b) {\n  long long tmp = 1;\n  a %= (10000000000);\n  for (; b; b >>= 1) {\n    if (b & 1) tmp = tmp * a % (10000000000);\n    a = a * a % (10000000000);\n  }\n  return tmp;\n}\nlong long gcd(long long a, long long b) { return b ? gcd(b, a % b) : a; }\ntemplate <class T>\ninline void R(T &xx) {\n  xx = 0;\n  char ch = getchar();\n  bool F = 0;\n  while ((ch < '0' || ch > '9') && ch != '-') ch = getchar();\n  if (ch == '-') F = 1, ch = getchar();\n  while (ch >= '0' && ch <= '9')\n    xx = xx + xx + (xx << 3) + ch - 48, ch = getchar();\n  if (F) xx = -xx;\n}\ntemplate <class T>\ninline void add(int &x, T y) {\n  for (x += y; x >= (10000000000); x -= (10000000000))\n    ;\n}\nint f[222][222];\nint t;\nint main() {\n  R(f[100][100]);\n  R(t);\n  for (bool F = 1; F;) {\n    F = 0;\n    for (int i = 1; i < (int)201; i++)\n      for (int j = 1; j < (int)201; j++)\n        if (f[i][j] >= 4) {\n          F = 1;\n          f[i + 1][j] += f[i][j] / 4;\n          f[i - 1][j] += f[i][j] / 4;\n          f[i][j + 1] += f[i][j] / 4;\n          f[i][j - 1] += f[i][j] / 4;\n          f[i][j] %= 4;\n        }\n  }\n  for (int x, y; t--;) {\n    R(x);\n    R(y);\n    printf(\"%d\\n\", (abs(x) <= 100 && abs(y) <= 100) ? f[x + 100][y + 100] : 0);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nqueue<pair<int, int> > q;\nint ht[205][205], tmp[205][205];\nmap<pair<int, int>, int>::iterator its;\nint dir[4][2] = {{-1, 0}, {1, 0}, {0, -1}, {0, 1}};\nint main() {\n  ios_base::sync_with_stdio(false), cin.tie(NULL);\n  int n, t;\n  cin >> n >> t;\n  ht[100][100] = n;\n  while (1) {\n    bool check = 0;\n    for (int i = 0; i <= 200; i++) {\n      for (int j = 0; j <= 200; j++) {\n        if (ht[i][j] < 4) continue;\n        check = 1;\n        for (int k = 0; k < 4; k++)\n          tmp[i + dir[k][0]][j + dir[k][1]] += ht[i][j] / 4;\n        ht[i][j] %= 4;\n      }\n    }\n    if (!check) break;\n    for (int i = 0; i <= 200; i++) {\n      for (int j = 0; j <= 200; j++) {\n        ht[i][j] += tmp[i][j];\n        tmp[i][j] = 0;\n      }\n    }\n  }\n  while (t--) {\n    int uy, ux;\n    cin >> uy >> ux;\n    uy += 100, ux += 100;\n    if (uy < 0 || uy > 200 || ux < 0 || ux > 200)\n      printf(\"0\\n\");\n    else\n      printf(\"%d\\n\", ht[uy][ux]);\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\nimport java.math.*;\n\npublic class Main implements Runnable {\n\n\tpublic void _main() throws IOException {\n\t\tfinal int N = 250;\n\t\tint[][] a = new int[N][N];\n\t\tint n = nextInt();\n\t\ta[N/2][N/2] = n;\n\t\twhile (true) {\n\t\t\tboolean changed = false;\n\t\t\tfor (int x = 0; x < N; x++) {\n\t\t\t\tfor (int y = 0; y < N; y++) {\n\t\t\t\t\tint v = a[x][y];\n\t\t\t\t\tif (v < 4) continue;\n\t\t\t\t\ta[x - 1][y] += v / 4;\n\t\t\t\t\ta[x + 1][y] += v / 4;\n\t\t\t\t\ta[x][y - 1] += v / 4;\n\t\t\t\t\ta[x][y + 1] += v / 4;\n\t\t\t\t\ta[x][y] = v % 4;\n\t\t\t\t\tchanged = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!changed) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tint numQueries = nextInt();\n\t\tfor (int query = 0; query < numQueries; query++) {\n\t\t\tint x = nextInt() + N/2;\n\t\t\tint y = nextInt() + N/2;\n\t\t\tif (x >= 0 && x < N && y >= 0 && y < N) {\n\t\t\t\tout.println(a[x][y]);\n\t\t\t} else {\n\t\t\t\tout.println(0);\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprivate BufferedReader in;\n\tprivate PrintWriter out;\n\tprivate StringTokenizer st;\n\n\tprivate String next() throws IOException {\n\t\twhile (st == null || !st.hasMoreTokens()) {\n\t\t\tString rl = in.readLine();\n\t\t\tif (rl == null)\n\t\t\t\treturn null;\n\t\t\tst = new StringTokenizer(rl);\n\t\t}\n\t\treturn st.nextToken();\n\t}\n\n\tprivate int nextInt() throws IOException {\n\t\treturn Integer.parseInt(next());\n\t}\n\n\tprivate long nextLong() throws IOException {\n\t\treturn Long.parseLong(next());\n\t}\n\n\tprivate double nextDouble() throws IOException {\n\t\treturn Double.parseDouble(next());\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tLocale.setDefault(Locale.UK);\n\t\tnew Thread(new Main()).start();\t\t\n\t}\n\n\tpublic void run() {\n\t\ttry {\n\t\t\tin = new BufferedReader(new InputStreamReader(System.in));\n\t\t\tout = new PrintWriter(System.out);\n\t\t\t//in = new BufferedReader(new FileReader(\"a.in\"));\n\t\t\t//out = new PrintWriter(new FileWriter(\"a.out\"));\n\n\t\t\t_main();\n\n\t\t\tout.close();\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t\tSystem.exit(202);\n\t\t}\n\t}\n\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e2 + 7;\nconst int INF = 1e9 + 7;\nconst int dx[] = {-1, 0, 1, 0};\nconst int dy[] = {0, 1, 0, -1};\nint n, t, lx, ly, rx, ry;\nint a[N << 2][N << 2];\nint add[N << 2][N << 2];\nqueue<pair<int, int> > que[2];\nvoid solve() {\n  a[N][N] = n;\n  lx = rx = 0, ly = ry = 0;\n  int qid = 0;\n  if (n >= 4) que[qid].push(make_pair(N, N));\n  while (!que[qid].empty()) {\n    while (!que[qid].empty()) {\n      pair<int, int> cell = que[qid].front();\n      lx = min(lx, cell.first - N);\n      rx = max(rx, cell.first - N);\n      ly = min(ly, cell.second - N);\n      ry = max(ry, cell.second - N);\n      int num = a[cell.first][cell.second];\n      a[cell.first][cell.second] = num & 3;\n      que[qid].pop();\n      for (int i = (0); i < (4); ++i) {\n        int x = cell.first + dx[i];\n        int y = cell.second + dy[i];\n        add[x][y] += num >> 2;\n        que[qid ^ 1].push(make_pair(x, y));\n      }\n    }\n    qid ^= 1;\n    while (!que[qid].empty()) {\n      pair<int, int> cell = que[qid].front();\n      que[qid].pop();\n      lx = min(lx, cell.first - N);\n      rx = max(rx, cell.first - N);\n      ly = min(ly, cell.second - N);\n      ry = max(ry, cell.second - N);\n      if (!add[cell.first][cell.second]) continue;\n      a[cell.first][cell.second] += add[cell.first][cell.second];\n      add[cell.first][cell.second] = 0;\n      if (a[cell.first][cell.second] >= 4) que[qid ^ 1].push(cell);\n    }\n    qid ^= 1;\n  }\n}\nint main() {\n  scanf(\"%d%d\", &n, &t);\n  solve();\n  for (int i = (0); i < (t); ++i) {\n    int x, y, ans;\n    scanf(\"%d%d\", &x, &y);\n    if (x < lx || x > rx || y < ly || y > ry) {\n      ans = 0;\n    } else {\n      ans = a[x + N][y + N];\n    }\n    printf(\"%d\\n\", ans);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint cnt[1100110];\nint inq[1100110];\nqueue<int> q;\nint dx[] = {0, 0, 1, -1}, dy[] = {1, -1, 0, 0};\nvoid spfa(int k) {\n  int st = (500 << 10) | 500;\n  cnt[st] = k;\n  if (k < 4) return;\n  q.push(st);\n  inq[st] = 1;\n  while (!q.empty()) {\n    st = q.front();\n    q.pop();\n    int x = st & 1023, y = st >> 10, num = (cnt[st] -= 4);\n    if (num < 4)\n      inq[st] = 0;\n    else\n      q.push(st);\n    for (int i = 0; i < 4; ++i) {\n      int nst = (x + dx[i]) | ((y + dy[i]) << 10);\n      int nnum = (cnt[nst] += 1);\n      if (nnum < 4) continue;\n      if (inq[nst]) continue;\n      q.push(nst);\n      inq[nst] = 1;\n    }\n  }\n}\nint main() {\n  int n, t;\n  cin >> n >> t;\n  spfa(n);\n  int x, y;\n  while (t--) {\n    scanf(\"%d %d\", &x, &y);\n    x += 500;\n    y += 500;\n    if (x < 0 || x > 1000 || y < 0 || y > 1000)\n      puts(\"0\");\n    else\n      printf(\"%d\\n\", cnt[(y << 10) | x]);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.OutputStreamWriter;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\n\npublic class D {\n\t\n\tprivate static StringTokenizer tokenizer;\n    private static BufferedReader bf;\n    private static PrintWriter out;\n    private static int[][] res = new int[141][141];\n    \n\tprivate static int nextInt() throws IOException {\n    \treturn Integer.parseInt(nextToken());\n    }\n    \n    private static String nextToken() throws IOException {\n    \twhile(tokenizer == null || !tokenizer.hasMoreTokens()) {\n    \t\ttokenizer = new StringTokenizer(bf.readLine());\n    \t}\n    \treturn tokenizer.nextToken();\n    }\n    \n\tpublic static void main(String[] args) throws IOException {\n\t\tbf = new BufferedReader(new InputStreamReader(System.in));\n    \ttokenizer = null;\n    \tout = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));\n    \tint n = nextInt(); int t = nextInt();\n    \tres[70][70] = n;\n    \tboolean ok; int add;\n    \twhile(true) {\n    \t\tok = true;\n    \t\tfor(int i = 0; i < 141; i++) {\n    \t\t\tfor(int j = 0; j < 141; j++) {\n    \t\t\t\tif(res[i][j] >= 4) {\n    \t\t\t\t\tok = false;\n    \t\t\t\t\tadd = res[i][j]/4;\n    \t\t\t\t\tres[i][j] = res[i][j]%4;\n    \t\t\t\t\tres[i-1][j] += add; res[i][j-1] += add;\n    \t\t\t\t\tres[i+1][j] += add; res[i][j+1] += add;\n    \t\t\t\t}\n    \t\t\t}\n    \t\t}\n    \t\tif(ok) break;\n    \t}\n    \tfor(int i = 0; i < t; i++) {\n    \t\tint x = nextInt(); int y = nextInt();\n    \t\tif(x > 70 || y > 70 || x < -70 || y < -70)\n    \t\t\tout.println(0);\n    \t\telse out.println(res[x+70][y+70]);\n    \t}\n    \tout.close();\n\t}\n\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MaxN = 140;\nint a[MaxN][MaxN], b[MaxN][MaxN];\nint dx[4] = {1, 0, -1, 0};\nint dy[4] = {0, 1, 0, -1};\nint main(void) {\n  int n, t;\n  while (scanf(\"%d %d\", &n, &t) != EOF) {\n    int i, j, d, f = 1, x, y, mn = MaxN / 2, mx = MaxN / 2;\n    memset(a, 0, sizeof(a));\n    memset(b, 0, sizeof(b));\n    a[MaxN / 2][MaxN / 2] = n;\n    b[MaxN / 2][MaxN / 2] = n;\n    while (f) {\n      f = 0;\n      for (i = mn; i <= mx; i++)\n        for (j = mn; j <= mx; j++)\n          if (a[i][j] >= 4) {\n            b[i][j] -= 4;\n            for (d = 0; d < 4; d++) b[i + dy[d]][j + dx[d]] += 1;\n          }\n      for (i = mn - 1; i <= mx + 1; i++)\n        for (j = mn - 1; j <= mx + 1; j++) {\n          a[i][j] = b[i][j];\n          if (a[i][j] >= 4) {\n            f = 1;\n            if (j > mx) mx = j;\n          }\n        }\n      for (i = mn; i <= mx; i++)\n        for (j = mn; j <= mx; j++)\n          if (b[i][j] >= 4) {\n            a[i][j] -= 4;\n            for (d = 0; d < 4; d++) a[i + dy[d]][j + dx[d]] += 1;\n          }\n      for (i = mn - 1; i <= mx + 1; i++)\n        for (j = mn - 1; j <= mx + 1; j++) {\n          b[i][j] = a[i][j];\n          if (b[i][j] >= 4) {\n            f = 1;\n            if (j > mx) mx = j;\n          }\n        }\n      mn = MaxN / 2 - (mx - MaxN / 2);\n    }\n    for (i = mn; i <= mx; i++)\n      for (j = mn; j <= mx; j++)\n        if (a[i][j] >= 4) {\n          b[i][j] -= 4;\n          for (d = 0; d < 4; d++) b[i + dy[d]][j + dx[d]] += 1;\n        }\n    for (i = mn - 1; i <= mx + 1; i++)\n      for (j = mn - 1; j <= mx + 1; j++) {\n        a[i][j] = b[i][j];\n        if (a[i][j] >= 4) {\n          f = 1;\n          if (j > mx) mx = j;\n        }\n      }\n    for (i = 0; i < t; i++) {\n      scanf(\"%d %d\", &x, &y);\n      if (abs(x) > MaxN / 2 - 2 || abs(y) > MaxN / 2 - 2)\n        printf(\"%d\\n\", 0);\n      else\n        printf(\"%d\\n\", a[x + MaxN / 2][y + MaxN / 2]);\n    }\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\nusing ull = long unsigned long;\nusing ld = double long;\nconst int H = 6000;\nuint16_t a[H][H];\nuint16_t t[H][H];\nconst int dx[5] = {0, 1, 0, -1, 0};\nconst int dy[5] = {1, 0, -1, 0, 0};\nint main() {\n  ios::sync_with_stdio(!cin.tie(0));\n  int n, qe;\n  cin >> n >> qe;\n  a[0][0] = n;\n  vector<pair<int, int>> maybe = {{0, 0}};\n  for (int x = 0; x <= H; x++) {\n    int f = 0;\n    for (auto [i, j] : maybe) {\n      uint16_t& r = a[i][j];\n      if (r >= 4) {\n        f = 1;\n        int q = r / 4;\n        r %= 4;\n        t[i][j + 1] += q;\n        if (j == 1) {\n          t[i][0] += 2 * q;\n        } else if (j > 0) {\n          t[i][j - 1] += q;\n        }\n        t[i + 1][j] += q;\n        if (i == 1) {\n          t[0][j] += 2 * q;\n        } else if (i > 0) {\n          t[i - 1][j] += q;\n        }\n      }\n    }\n    if (!f) {\n      break;\n    }\n    vector<pair<int, int>> tmp_maybe;\n    for (auto [i, j] : maybe) {\n      for (int dir = 0; dir < 5; dir++) {\n        int x = i + dx[dir];\n        int y = j + dy[dir];\n        if (x < 0 || y < 0) continue;\n        if (t[x][y]) {\n          a[x][y] += t[x][y];\n          t[x][y] = 0;\n          tmp_maybe.emplace_back(x, y);\n        }\n      }\n    }\n    swap(maybe, tmp_maybe);\n  }\n  while (qe--) {\n    int x, y;\n    cin >> x >> y;\n    x = abs(x);\n    y = abs(y);\n    if (max(x, y) >= H) {\n      cout << \"0\\n\";\n    } else {\n      cout << a[x][y] << '\\n';\n    }\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int max_x = 400;\nconst int max_y = 400;\nconst int max_queue = 1024 * 32;\nbool there[2 * max_x][2 * max_y];\nint grid[2 * max_x][2 * max_y];\nvoid simulate(int n) {\n  pair<int, int> q[max_queue];\n  int head = 0;\n  int tail = 0;\n  grid[max_x][max_y] = n;\n  q[tail] = make_pair(max_x, max_y);\n  there[max_x][max_y] = true;\n  tail++;\n  while (head != tail) {\n    pair<int, int> point = q[head % max_queue];\n    head++;\n    int x = point.first;\n    int y = point.second;\n    int ants = grid[x][y];\n    if (ants < 4) continue;\n    grid[x][y] = ants - 4;\n    there[x][y] = false;\n    if (grid[x][y] >= 4 && !there[x][y]) {\n      q[tail % max_queue] = make_pair(x, y);\n      there[x][y] = true;\n      tail++;\n    }\n    grid[x + 1][y] += 1;\n    if (grid[x + 1][y] >= 4 && !there[x + 1][y]) {\n      q[tail % max_queue] = make_pair(x + 1, y);\n      there[x + 1][y] = true;\n      tail++;\n    }\n    grid[x - 1][y] += 1;\n    if (grid[x - 1][y] >= 4 && !there[x - 1][y]) {\n      q[tail % max_queue] = make_pair(x - 1, y);\n      there[x - 1][y] = true;\n      tail++;\n    }\n    grid[x][y + 1] += 1;\n    if (grid[x][y + 1] >= 4 && !there[x][y + 1]) {\n      q[tail % max_queue] = make_pair(x, y + 1);\n      there[x][y + 1] = true;\n      tail++;\n    }\n    grid[x][y - 1] += 1;\n    if (grid[x][y - 1] >= 4 && !there[x][y - 1]) {\n      q[tail % max_queue] = make_pair(x, y - 1);\n      there[x][y - 1] = true;\n      tail++;\n    }\n  }\n}\nint main() {\n  int n, t;\n  cin >> n >> t;\n  vector<int> answers;\n  simulate(n);\n  for (int i = 0; i < t; i++) {\n    int x = 0;\n    int y = 0;\n    scanf(\"%d %d\", &x, &y);\n    if (abs(x) > 300 || abs(y) > 300)\n      answers.push_back(0);\n    else\n      answers.push_back(grid[max_x + x][max_y + y]);\n  }\n  for (int i = 0; i < t; i++) {\n    cout << answers[i] << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MOD(1000000007);\nconst int INF((1 << 30) - 1);\nconst int MAXN(150);\nint a[2][MAXN][MAXN];\nint main() {\n  int n, t;\n  scanf(\"%d%d\", &n, &t);\n  int K = 67, now = 1, prev = 0, Move = 1;\n  a[prev][K][K] = n;\n  int MAX = 0;\n  while (Move) {\n    Move = 0;\n    for (int i = K - 66; i <= K + 66; i++)\n      for (int j = K - 66; j <= K + 66; j++) {\n        int k = a[prev][i][j] / 4;\n        if (k > 0) {\n          Move = 1;\n          a[now][i + 1][j] += k;\n          a[now][i - 1][j] += k;\n          a[now][i][j + 1] += k;\n          a[now][i][j - 1] += k;\n          a[now][i][j] += a[prev][i][j] - 4 * k;\n        } else\n          a[now][i][j] += a[prev][i][j];\n        a[prev][i][j] = 0;\n      }\n    now ^= 1, prev ^= 1;\n  }\n  while (t--) {\n    int x, y;\n    scanf(\"%d%d\", &x, &y);\n    x += 67, y += 67;\n    if (x < 0 || x > 133 || y < 0 || y > 133)\n      printf(\"0\\n\");\n    else\n      printf(\"%d\\n\", a[prev][x][y]);\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint n, cnt;\nint ants[500][500];\nint main() {\n  scanf(\"%d %d\", &n, &cnt);\n  int cx = 250, cy = 250;\n  int l = 1, r = 500 - 2, t = 1, b = 500 - 2;\n  ants[cx][cy] = n;\n  bool movement;\n  while (true) {\n    movement = false;\n    for (int i = t; i <= b; i++) {\n      for (int j = l; j <= r; j++) {\n        while (ants[i][j] >= 4) {\n          movement = true;\n          ants[i][j] -= 4;\n          ants[i][j + 1] += 1;\n          ants[i][j - 1] += 1;\n          ants[i + 1][j] += 1;\n          ants[i - 1][j] += 1;\n        }\n      }\n    }\n    if (!movement) break;\n  }\n  int tx, ty;\n  for (int i = 0; i < cnt; i++) {\n    scanf(\"%d %d\", &tx, &ty);\n    if (tx + cx < l || tx + cx > r || ty + cy > b || ty + cy < t)\n      printf(\"0\\n\");\n    else\n      printf(\"%d\\n\", ants[tx + cx][ty + cy]);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int T = 1000;\nint a[2 * T + 1][2 * T + 1];\nvoid ant(int x, int y) {\n  if (a[x][y] / 4 == 0) {\n    return;\n  }\n  int r = a[x][y] / 4;\n  a[x][y - 1] += r;\n  a[x][y + 1] += r;\n  a[x - 1][y] += r;\n  a[x + 1][y] += r;\n  a[x][y] -= 4 * r;\n  ant(x, y - 1);\n  ant(x, y + 1);\n  ant(x + 1, y);\n  ant(x - 1, y);\n}\nint main() {\n  int n, i, e, r1, r2;\n  cin >> n >> e;\n  a[T][T] = n;\n  ant(T, T);\n  for (i = 0; i < e; i++) {\n    cin >> r1 >> r2;\n    r1 += T;\n    r2 += T;\n    if (r1 < 2 * T + 1 && r2 < 2 * T + 1 && r1 > 0 && r2 > 0) {\n      cout << a[r1][r2] << endl;\n    } else {\n      cout << 0 << endl;\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "\nimport java.io.BufferedReader;\nimport java.io.FileNotFoundException;\nimport java.io.FileReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.Stack;\nimport java.util.StringTokenizer;\n\npublic class D {\n\tstatic int SIZE = 80;\n\tstatic int[][] m = new int[2*SIZE+1][2*SIZE+1];\n\tpublic static void main(String[] args){\n\t\tFastScanner sc = new FastScanner();\n\t\tPrintWriter out = new PrintWriter(System.out);\n\t\t\n\t\tint n = sc.nextInt();\n\t\tint t = sc.nextInt();\n\t\tm[SIZE][SIZE] = n;\n\t\t\n\t\twhile(spread()){}\n\t\tfor(int i=0; i< t; i++){\n\t\t\tint x = sc.nextInt();\n\t\t\tint y = sc.nextInt();\n\t\t\t\n\t\t\tif(x+SIZE >= m.length || y+SIZE >= m.length ||\n\t\t\t\t\tx+SIZE < 0 || y + SIZE < 0){\n\t\t\t\tout.println(0);\n\t\t\t}else{\n\t\t\t\tout.println(m[x+SIZE][y+SIZE]);\n\t\t\t}\n\t\t}\n\t\tout.close();\n\t}\n\n\tstatic boolean spread(){\n\t\tboolean canSpread = false;\n\t\t\n\t\tfor(int x=0;x<m.length;x++){\n\t\t\tfor(int y=0; y<m.length;y++){\n\t\t\t\tif(m[x][y] >=4){\n\t\t\t\t\tint spreadVal = m[x][y]/4;\n\t\t\t\t\tm[x][y]%=4;\n\t\t\t\t\tm[x][y+1] += spreadVal;\n\t\t\t\t\tm[x][y-1] += spreadVal;\n\t\t\t\t\tm[x+1][y] += spreadVal;\n\t\t\t\t\tm[x-1][y] += spreadVal;\n\t\t\t\t\tcanSpread = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn canSpread;\n\t}\n\t\n\tpublic static class FastScanner {\n\t\tBufferedReader br;\n\t\tStringTokenizer st;\n\n\t\tpublic FastScanner(String s) {\n\t\t\ttry {\n\t\t\t\tbr = new BufferedReader(new FileReader(s));\n\t\t\t} catch (FileNotFoundException e) {\n\t\t\t\t// TODO Auto-generated catch block\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\n\t\tpublic FastScanner() {\n\t\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t\t}\n\n\t\tString nextToken() {\n\t\t\twhile (st == null || !st.hasMoreElements()) {\n\t\t\t\ttry {\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\t// TODO Auto-generated catch block\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(nextToken());\n\t\t}\n\n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(nextToken());\n\t\t}\n\n\t\tdouble nextDouble() {\n\t\t\treturn Double.parseDouble(nextToken());\n\t\t}\n\t}\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\n\npublic class ProblemB {\n\t\n\tstatic final int MAX = 200;\n\t\n\tstatic final int[] dx = {1, 0, -1, 0};\n\tstatic final int[] dy = {0, 1, 0, -1};\n\t\n\tpublic static int[][] simulate(int n) {\n\t\tint[][] ants = new int[MAX][MAX];\n\t\tants[MAX/2][MAX/2] = n;\n\t\treturn simulate(ants);\n\t}\t\n\t\n\tpublic static int[][] simulate(int[][] ants) {\n\t\tint cur = 0;\n\t\tint med = MAX/2;\n\t\twhile (true) {\n\t\t\tboolean upd = false;\n\t\t\tint fr = Math.max(0, med-cur);\n\t\t\tint to = Math.min(MAX-1, med+cur);\n\t\t\tfor (int i = fr ; i <= to ; i++) {\n\t\t\t\tfor (int j = fr ; j <= to ; j++) {\n\t\t\t\t\tif (ants[i][j] >= 4) {\n\t\t\t\t\t\tupd = true;\n\t\t\t\t\t\tint scat = ants[i][j] >> 2;\n\t\t\t\t\t\tants[i+1][j] += scat;\n\t\t\t\t\t\tants[i-1][j] += scat;\n\t\t\t\t\t\tants[i][j+1] += scat;\n\t\t\t\t\t\tants[i][j-1] += scat;\n\t\t\t\t\t\tants[i][j] &= 3;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!upd) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcur++;\n\t\t}\n\t\treturn ants;\n\t}\n\t\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n\t\tPrintWriter out = new PrintWriter(System.out);\n\t\t\n\t\tString[] nt = in.readLine().split(\" \");\n\t\tint n = Integer.valueOf(nt[0]);\n\t\tint t = Integer.valueOf(nt[1]);\n\t\t\n\t\tint[][] base = simulate(n);\n\t\t\n\t\tfor (int i = 0 ; i < t ; i++) {\n\t\t\tString[] xy = in.readLine().split(\" \");\n\t\t\tint x = Integer.valueOf(xy[0])+MAX/2;\n\t\t\tint y = Integer.valueOf(xy[1])+MAX/2;\n\t\t\tif (x < 0 || x >= MAX || y < 0 || y >= MAX) {\n\t\t\t\tout.println(0);\n\t\t\t} else {\n\t\t\t\tout.println(base[y][x]);\n\t\t\t}\n\t\t}\n\t\tout.flush();\n\t}\n\n\tpublic static void debug(Object... o) {\n\t\tSystem.err.println(Arrays.deepToString(o));\n\t}\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nusing db = long double;\nusing pll = pair<long long, long long>;\nconst int maxN = 32000;\nint dx[] = {1, -1, 0, 0};\nint dy[] = {0, 0, -1, 1};\nint a[2000][2000];\nint b[1000][1000];\nint used[1000][1000];\nint32_t main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  long long t, i, j, z, k, n;\n  cin >> n;\n  int centerx = 500, centery = 500;\n  a[centerx][centery] = n;\n  queue<pair<int, int> > q;\n  q.push(make_pair(centerx, centery));\n  ++used[centerx][centery];\n  int total = 0;\n  while (!q.empty()) {\n    pair<int, int> cur = q.front();\n    q.pop();\n    int cx = cur.first, cy = cur.second;\n    --used[cx][cy];\n    if (a[cx][cy] >= 4) {\n      int val = a[cx][cy] / 4;\n      for (int k = 0; k < 4; ++k) {\n        a[cx + dx[k]][cy + dy[k]] += val;\n        if (!used[cx + dx[k]][cy + dy[k]]) {\n          q.push(make_pair(cx + dx[k], cy + dy[k]));\n          ++used[cx + dx[k]][cy + dy[k]];\n        }\n        ++total;\n      }\n    }\n    a[cx][cy] %= 4;\n  }\n  int m;\n  cin >> m;\n  for (int i = 0; i < m; ++i) {\n    int x = 0, y = 0;\n    cin >> x >> y;\n    x += centerx, y += centery;\n    if (x < 0 || x >= 1000 || y < 0 || y >= 1000) {\n      printf(\"0\\n\");\n    } else {\n      printf(\"%d\\n\", a[x][y]);\n    }\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int E = 70;\nconst int N = 2 * E;\nint d[N][N];\nint add[N][N];\nint dx[] = {0, 0, -1, 1};\nint dy[] = {-1, 1, 0, 0};\nbool flag = 1;\nint main() {\n  int n;\n  cin >> n;\n  d[E][E] = n;\n  while (flag) {\n    flag = 0;\n    for (int i = 1; i < N - 1; i++) {\n      for (int j = 1; j < N - 1; j++) {\n        for (int k = 0; k < 4; k++) add[i + dx[k]][j + dy[k]] += d[i][j] / 4;\n        d[i][j] %= 4;\n      }\n    }\n    for (int i = 1; i < N - 1; i++) {\n      for (int j = 1; j < N - 1; j++) {\n        d[i][j] += add[i][j];\n        add[i][j] = 0;\n        if (d[i][j] >= 4) flag = 1;\n      }\n    }\n  }\n  int m;\n  cin >> m;\n  for (int q = 0; q < m; q++) {\n    int x, y;\n    cin >> x >> y;\n    if (x + E < N && x + E >= 0 && y + E < N && y + E >= 0)\n      cout << d[x + E][y + E];\n    else\n      cout << 0;\n    cout << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nbool In[140][140];\nint g, x, y, T;\nint F[140][140];\nqueue<pair<int, int>> Q;\nint main() {\n  cin >> F[70][70] >> T;\n  Q.push(make_pair(70, 70));\n  while (!Q.empty()) {\n    pair<int, int> p = Q.front();\n    x = p.first;\n    y = p.second;\n    In[x][y] = false;\n    Q.pop();\n    g = F[x][y] / 4;\n    x = p.first;\n    y = p.second;\n    F[x + 1][y] += g;\n    if (F[x + 1][y] >= 4 && !In[x + 1][y]) {\n      In[x + 1][y] = true;\n      Q.push(make_pair(x + 1, y));\n    }\n    F[x - 1][y] += g;\n    if (F[x - 1][y] >= 4 && !In[x - 1][y]) {\n      In[x - 1][y] = true;\n      Q.push(make_pair(x - 1, y));\n    }\n    F[x][y + 1] += g;\n    if (F[x][y + 1] >= 4 && !In[x][y + 1]) {\n      In[x][y + 1] = true;\n      Q.push(make_pair(x, y + 1));\n    }\n    F[x][y - 1] += g;\n    if (F[x][y - 1] >= 4 && !In[x][y - 1]) {\n      In[x][y - 1] = true;\n      Q.push(make_pair(x, y - 1));\n    }\n    F[x][y] %= 4;\n  }\n  while (T--) {\n    cin >> x >> y;\n    if (x < -70 || x >= 70 || y < -70 || y >= 70)\n      cout << \"0\\n\";\n    else\n      cout << F[x + 70][y + 70] << \"\\n\";\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint visited[410][410];\nint X[] = {1, -1, 0, 0};\nint Y[] = {0, 0, 1, -1};\nvoid dfs(int x, int y) {\n  if (visited[x][y] < 4) return;\n  int d = visited[x][y] / 4;\n  visited[x][y] %= 4;\n  for (int i = 0; i < 4; i++) {\n    int x1 = x + X[i];\n    int y1 = y + Y[i];\n    visited[x1][y1] += d;\n    dfs(x1, y1);\n  }\n}\nint main() {\n  int n, t;\n  cin >> n >> t;\n  visited[200][200] = n;\n  dfs(200, 200);\n  while (t--) {\n    long long x, y;\n    cin >> x >> y;\n    if (abs(x) > 200 || abs(y) > 200)\n      cout << \"0\" << endl;\n    else\n      cout << visited[200 + x][200 + y] << endl;\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstruct Point {\n  int x, y;\n  Point() {}\n  Point(int _x, int _y) : x(_x), y(_y) {}\n  Point operator+(const Point &p) const { return Point(x + p.x, y + p.y); }\n} stk[2048 * 2048];\nstruct Mat {\n  int m[2048][2048];\n  void clear() { memset(m, 0, sizeof(m)); }\n  int &operator[](const Point &p) { return m[p.x + 1024][p.y + 1024]; }\n} mat;\nconst Point d[] = {Point(0, -1), Point(-1, 0), Point(0, 1), Point(1, 0)};\nint top;\nvoid init(int n) {\n  int i;\n  Point p(0, 0), q;\n  mat.clear();\n  top = 0;\n  if ((mat[p] = n) >= 4) stk[++top] = p;\n  while (top) {\n    p = stk[top--];\n    for (i = 0; i < 4; ++i) {\n      mat[q = p + d[i]] += (mat[p] >> 2);\n      if (mat[q] >= 4) stk[++top] = q;\n    }\n    mat[p] &= 3;\n  }\n}\nint main() {\n  int n, m, i;\n  Point p;\n  while (~scanf(\"%d %d\", &n, &m)) {\n    init(n);\n    for (i = 0; i < m; ++i) {\n      scanf(\"%d %d\", &p.x, &p.y);\n      if (abs(p.x) < 1024 && abs(p.y) < 1024)\n        printf(\"%d\\n\", mat[p]);\n      else\n        printf(\"0\\n\");\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\npublic class B188 {\npublic static void main(String[] args) throws IOException\n{\n    input.init(System.in);\n    PrintWriter out = new PrintWriter(System.out);\n    int k = input.nextInt();\n    int max = 250;\n    int[][] res = new int[max][max];\n    res[max/2][max/2] = k;\n    while(true)\n    {\n        boolean b = false;\n        for(int i = 0; i<max; i++)\n            for(int j = 0; j<max; j++)\n            {\n                if(res[i][j] < 4) continue;\n                int x = res[i][j]/4;\n                res[i+1][j] += x;\n                res[i-1][j] += x;\n                res[i][j+1] += x;\n                res[i][j-1] += x;\n                res[i][j] -= 4*x;\n                b = true;\n            }\n        if(!b) break;\n    }\n    int m = input.nextInt();\n    for(int i = 0; i<m; i++)\n    {\n        int x = input.nextInt(), y = input.nextInt();\n        out.println(x+max/2 < 0 || x+max/2 >= max || y+max/2 < 0 || y+max/2 >= max ? 0 : res[x+max/2][y+max/2]);\n    }\n    out.close();\n}\npublic static class input {\n    static BufferedReader reader;\n    static StringTokenizer tokenizer;\n\n    /** call this method to initialize reader for InputStream */\n    static void init(InputStream input) {\n        reader = new BufferedReader(\n                     new InputStreamReader(input) );\n        tokenizer = new StringTokenizer(\"\");\n    }\n\n    /** get next word */\n    static String next() throws IOException {\n        while ( ! tokenizer.hasMoreTokens() ) {\n            //TODO add check for eof if necessary\n            tokenizer = new StringTokenizer(\n                   reader.readLine() );\n        }\n        return tokenizer.nextToken();\n    }\n    static String nextLine() throws IOException\n    {\n        return reader.readLine();\n    }\n\n    static int nextInt() throws IOException {\n        return Integer.parseInt( next() );\n    }\n    \n    static double nextDouble() throws IOException {\n        return Double.parseDouble( next() );\n    }\n    static long nextLong() throws IOException {\n        return Long.parseLong( next() );\n    }\n}\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint dat[1111][1111];\nint ok;\nint n, t;\nint maxi = 0;\nint pos;\nint main() {\n  cin >> n >> t;\n  pos = 500;\n  dat[pos][pos] = n;\n  ok = 1;\n  while (ok) {\n    ok = 0;\n    for (int i = pos - maxi; i <= pos + maxi; i++) {\n      for (int j = pos - maxi; j <= pos + maxi; j++) {\n        if (dat[i][j] >= 4) {\n          ok = 1;\n          int t1 = i - pos, t2 = j - pos;\n          if (maxi == max(t1 > 0 ? t1 : -t1, t2 > 0 ? t2 : -t2)) {\n            maxi++;\n          }\n          dat[i - 1][j] += dat[i][j] / 4;\n          dat[i + 1][j] += dat[i][j] / 4;\n          dat[i][j - 1] += dat[i][j] / 4;\n          dat[i][j + 1] += dat[i][j] / 4;\n          dat[i][j] %= 4;\n        }\n      }\n    }\n  }\n  while (t--) {\n    int x, y;\n    cin >> x >> y;\n    if ((x > 0 ? x : -x) > maxi || (y > 0 ? y : -y) > maxi)\n      cout << 0 << '\\n';\n    else\n      cout << dat[pos + x][pos + y] << '\\n';\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint vis[1100][1100], Ans[1100][1100];\nint n, t, Q;\nstruct Node {\n  int x, y;\n  Node() { x = y = 0; };\n  Node(int x_, int y_) {\n    x = x_;\n    y = y_;\n  }\n};\nvoid BFS() {\n  queue<Node> q;\n  q.push(Node(200, 200));\n  vis[200][200] = 1;\n  Ans[200][200] = t;\n  while (!q.empty()) {\n    Node s = q.front();\n    q.pop();\n    int x = s.x;\n    int y = s.y;\n    vis[x][y] = 0;\n    int tmp = Ans[x][y];\n    if (tmp < 4) continue;\n    Ans[x][y] %= 4;\n    for (int dx = (-1); dx <= (1); ++dx)\n      for (int dy = (-1); dy <= (1); ++dy) {\n        if (dx == 0 && dy == 0) continue;\n        if (dx != 0 && dy != 0) continue;\n        if (!vis[x + dx][y + dy]) {\n          vis[x + dx][y + dy] = 1;\n          q.push(Node(x + dx, y + dy));\n        }\n        Ans[x + dx][y + dy] = Ans[x + dx][y + dy] + tmp / 4;\n      }\n  }\n  int Minx = 0x3f3f3f3f, Miny = 0x3f3f3f3f;\n  for (int x = (1); x <= (400); ++x)\n    for (int y = (1); y <= (400); ++y) {\n      if (Ans[x][y]) {\n        Minx = min(Minx, x);\n        Miny = min(Miny, y);\n      }\n    }\n}\nint main() {\n  scanf(\"%d%d\", &t, &Q);\n  BFS();\n  for (int i = 1; i <= Q; ++i) {\n    int x, y;\n    scanf(\"%d%d\", &x, &y);\n    x += 200;\n    y += 200;\n    if (x <= 1 || x >= 400 || y <= 1 || y >= 400) {\n      printf(\"0\\n\");\n      continue;\n    }\n    printf(\"%d\\n\", Ans[x][y]);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint map1[200 + 1][200 + 1];\nint map2[200 + 1][200 + 1];\nint main() {\n  int n, t;\n  cin >> n >> t;\n  map1[200 / 2][200 / 2] = n;\n  int flag = 1;\n  int turn = 1;\n  while (flag) {\n    flag = 0;\n    if (turn == 1) {\n      memset(map2, 0, (200 + 1) * (200 + 1) * sizeof(int));\n      for (int i = 0; i <= 200; i++) {\n        for (int j = 0; j <= 200; j++) {\n          if (map1[i][j] < 4) {\n            map2[i][j] += map1[i][j];\n          } else {\n            map2[i - 1][j] += map1[i][j] / 4;\n            map2[i + 1][j] += map1[i][j] / 4;\n            map2[i][j + 1] += map1[i][j] / 4;\n            map2[i][j - 1] += map1[i][j] / 4;\n            map2[i][j] += map1[i][j] % 4;\n            flag = 1;\n          }\n        }\n      }\n      turn = 2;\n    } else {\n      memset(map1, 0, (200 + 1) * (200 + 1) * sizeof(int));\n      for (int i = 0; i <= 200; i++) {\n        for (int j = 0; j <= 200; j++) {\n          if (map2[i][j] < 4) {\n            map1[i][j] += map2[i][j];\n          } else {\n            map1[i - 1][j] += map2[i][j] / 4;\n            map1[i + 1][j] += map2[i][j] / 4;\n            map1[i][j + 1] += map2[i][j] / 4;\n            map1[i][j - 1] += map2[i][j] / 4;\n            map1[i][j] += map2[i][j] % 4;\n            flag = 1;\n          }\n        }\n      }\n      turn = 1;\n    }\n  }\n  int x, y;\n  for (int i = 0; i < t; i++) {\n    cin >> x >> y;\n    if (abs(x) > 200 / 2 || abs(y) >= 200 / 2) {\n      cout << 0 << endl;\n    } else {\n      if (turn == 1) {\n        cout << map1[x + 200 / 2][y + 200 / 2] << endl;\n      } else {\n        cout << map2[x + 200 / 2][y + 200 / 2] << endl;\n      }\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\n#pragma comment(linker, \"/STACK:102400000,102400000\")\nusing namespace std;\nint n[1000][1000];\nvoid dfs(int i, int j, int v) {\n  int m;\n  n[i][j] += v;\n  if (n[i][j] < 4) return;\n  m = n[i][j] / 4;\n  n[i][j] %= 4;\n  dfs(i - 1, j, m);\n  dfs(i, j - 1, m);\n  dfs(i + 1, j, m);\n  dfs(i, j + 1, m);\n}\nint main() {\n  int x, t;\n  while (scanf(\"%d%d\", &x, &t) == 2) {\n    memset(n, 0, sizeof(n));\n    dfs(500, 500, x);\n    for (int i = 0; i < t; ++i) {\n      int x, y;\n      scanf(\"%d%d\", &x, &y);\n      x += 500;\n      y += 500;\n      if (x >= 1000 || y >= 1000 || x < 0 || y < 0) {\n        printf(\"0\\n\");\n        continue;\n      }\n      printf(\"%d\\n\", n[x][y]);\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.io.OutputStreamWriter;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\n\n\npublic class cf317b {\n  public static void main(String[] args) {\n    FastIO in = new FastIO(), out = in;\n    int n = in.nextInt();\n    int MAX = 65;\n    int[][] board = new int[2*MAX][2*MAX];\n    board[0+MAX][0+MAX] = n;\n    boolean go = true;\n    while(go) {\n      go = false;\n      for(int i=0; i<2*MAX; i++)\n        for(int j=0; j<2*MAX; j++) {\n          if(board[i][j] >= 4) {\n            go = true;\n            board[i+1][j] += board[i][j]/4;\n            board[i-1][j] += board[i][j]/4;\n            board[i][j+1] += board[i][j]/4;\n            board[i][j-1] += board[i][j]/4;\n            board[i][j] %= 4;\n          }\n        }\n    }\n    int t = in.nextInt();\n    for(int i=0; i<t; i++) {\n      int x = in.nextInt()+MAX;\n      int y = in.nextInt()+MAX;\n      if(x < 0 || y < 0 || x >= 2*MAX || y >= 2*MAX) {\n        out.println(0);\n      }\n      else out.println(board[x][y]);\n    }\n    out.close();\n  }\n  static class FastIO extends PrintWriter {\n    BufferedReader br;\n    StringTokenizer st;\n    \n    public FastIO() {\n      this(System.in,System.out);\n    }\n    public FastIO(InputStream in, OutputStream out) {\n      super(new BufferedWriter(new OutputStreamWriter(out)));\n      br = new BufferedReader(new InputStreamReader(in));\n      scanLine();\n    }\n    public void scanLine() {\n      try {\n        st = new StringTokenizer(br.readLine().trim());\n      } catch(Exception e) {\n        throw new RuntimeException(e.getMessage());\n      }\n    }\n    public int numTokens() {\n      if(!st.hasMoreTokens()) {\n        scanLine();\n        return numTokens();\n      }\n      return st.countTokens();\n    }\n    public String next() {\n      if(!st.hasMoreTokens()) {\n        scanLine();\n        return next();\n      }\n      return st.nextToken();\n    }\n    public double nextDouble() {\n      return Double.parseDouble(next());\n    }\n    public long nextLong() {\n      return Long.parseLong(next());\n    }\n    public int nextInt() {\n      return Integer.parseInt(next());\n    }\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.InputMismatchException;\nimport java.io.BufferedReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tInputReader in = new InputReader(inputStream);\n\t\tPrintWriter out = new PrintWriter(outputStream);\n\t\tTaskD solver = new TaskD();\n\t\tsolver.solve(1, in, out);\n\t\tout.close();\n\t}\n}\n\nclass TaskD {\n    final int zero = 69;\n\n    public void solve(int testNumber, InputReader in, PrintWriter out) {\n        int n = in.nextInt();\n        int t = in.nextInt();\n        int[][] a = new int[2 * zero + 1][2 * zero + 1];\n        a[zero][zero] = n;\n        boolean update = true;\n        while (update) {\n            update = false;\n            for (int i = 1; i < 2 * zero; ++i)\n                for (int j = 1; j < 2 * zero; ++j) if (a[i][j] >= 4) {\n                    a[i - 1][j] += a[i][j] >> 2;\n                    a[i + 1][j] += a[i][j] >> 2;\n                    a[i][j - 1] += a[i][j] >> 2;\n                    a[i][j + 1] += a[i][j] >> 2;\n                    a[i][j] %= 4;\n                    update = true;\n                }\n        }\n\n        while (t-- > 0) {\n            int x = in.nextInt();\n            int y = in.nextInt();\n            if (Math.abs(x) > zero || Math.abs(y) > zero)\n                out.println(0);\n            else\n                out.println(a[x + zero][y + zero]);\n        }\n    }\n}\n\nclass InputReader {\n    BufferedReader in;\n    StringTokenizer st;\n\n    public InputReader(InputStream stream) {\n        in = new BufferedReader(new InputStreamReader(stream));\n        eat(\"\");\n    }\n\n    public int nextInt() {\n        return Integer.parseInt(next());\n    }\n\n    public String next() {\n        while (!st.hasMoreTokens())\n            eat(nextLine());\n        return st.nextToken();\n    }\n\n    public String nextLine() {\n        try {\n            String str = in.readLine();\n            if (str == null) throw new InputMismatchException();\n            return str;\n        } catch (IOException e) {\n            throw new InputMismatchException();\n        }\n    }\n\n    public void eat(String str) {\n        st = new StringTokenizer(str);\n    }\n}\n\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long x, y, n, t;\nint a[202][202];\nvoid go(int x, int y) {\n  if (a[x][y] < 4) return;\n  int g = a[x][y] / 4;\n  a[x][y] %= 4;\n  a[x][y - 1] += g;\n  go(x, y - 1);\n  a[x][y + 1] += g;\n  go(x, y + 1);\n  a[x - 1][y] += g;\n  go(x - 1, y);\n  a[x + 1][y] += g;\n  go(x + 1, y);\n}\nint main() {\n  cin >> a[100][100];\n  go(100, 100);\n  cin >> t;\n  while (t--) {\n    cin >> x >> y;\n    x = abs(x + 100);\n    y = abs(y + 100);\n    if (x > 200 || y > 200) {\n      cout << 0 << endl;\n      continue;\n    }\n    cout << a[x][y] << endl;\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nbool dah[135][135];\nint m[135][135];\nqueue<int> q;\nint dr[] = {-1, 0, 1, 0};\nint dc[] = {0, -1, 0, 1};\nint n, nq;\nint x, y;\nint main() {\n  scanf(\"%d%d\", &n, &nq);\n  memset(dah, 0, sizeof dah);\n  dah[65][65] = 1;\n  m[65][65] = n;\n  q.push((65 << 10) | 65);\n  while (!q.empty()) {\n    int ui = q.front() >> 10;\n    int uj = q.front() & 1023;\n    q.pop();\n    int d = m[ui][uj] >> 2;\n    m[ui][uj] -= 4 * d;\n    for (int i = 0; i < 4; i++) {\n      int ni = ui + dr[i];\n      int nj = uj + dc[i];\n      if (((ni == 65) && (ni != ui)) || ((nj == 65) && (nj != uj))) {\n        m[ni][nj] += 2 * d;\n      } else {\n        m[ni][nj] += d;\n      }\n      if (m[ni][nj] >= 4 && !dah[ni][nj] && (nj >= 65) && (ni >= 65)) {\n        dah[ni][nj] = 1;\n        q.push((ni << 10) | nj);\n      }\n    }\n    if (m[ui][uj] >= 4) {\n      dah[ui][uj] = 1;\n      q.push((ui << 10) | uj);\n    } else {\n      dah[ui][uj] = 0;\n    }\n  }\n  for (int i = 0; i < nq; i++) {\n    scanf(\"%d%d\", &x, &y);\n    x = abs(x) + 65;\n    y = abs(y) + 65;\n    if ((x >= 135) || (y >= 135)) {\n      printf(\"0\\n\");\n    } else {\n      printf(\"%d\\n\", m[x][y]);\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int d = 101;\nint A[500][500], B[500][500];\nint main() {\n  int n, t;\n  cin >> n >> t;\n  bool ok;\n  int minx = 0, maxx = 0, miny = 0, maxy = 0;\n  A[d][d] = n;\n  B[d][d] = n;\n  int cnt = 0;\n  do {\n    cnt++;\n    ok = false;\n    for (int i = minx; i <= maxx; ++i)\n      for (int j = miny; j <= maxy; ++j) {\n        int aux = A[i + d][j + d];\n        while (aux >= 4) {\n          ok = true;\n          B[i + d + 1][j + d]++;\n          if (i + 1 > maxx) maxx = i + 1;\n          B[i + d][j + d + 1]++;\n          if (j + 1 > maxy) maxy = j + 1;\n          B[i + d - 1][j + d]++;\n          if (i - 1 < minx) minx = i - 1;\n          B[i + d][j + d - 1]++;\n          if (j - 1 < miny) miny = j - 1;\n          B[i + d][j + d] -= 4;\n          aux -= 4;\n        }\n      }\n    for (int i = minx; i <= maxx; ++i)\n      for (int j = miny; j <= maxy; ++j) A[i + d][j + d] = B[i + d][j + d];\n  } while (ok);\n  for (int i = 1; i <= t; ++i) {\n    int a, b;\n    cin >> a >> b;\n    if (a < minx || a > maxx || b < miny || b > maxy)\n      cout << 0 << \"\\n\";\n    else\n      cout << A[a + d][b + d] << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint num, m, a[1012][1012];\nint main() {\n  scanf(\"%d%d\", &num, &m);\n  a[200][200] = num;\n  int lx = 200, rx = 200, ly = 200, ry = 200;\n  while (1) {\n    int ok = 0;\n    for (int i = lx; i <= rx; i++)\n      for (int j = ly; j <= ry; j++)\n        if (a[i][j] >= 4) {\n          int x = a[i][j] / 4;\n          a[i - 1][j] += x;\n          a[i + 1][j] += x;\n          a[i][j - 1] += x;\n          a[i][j + 1] += x;\n          a[i][j] -= x * 4;\n          ok = 1;\n          lx = min(lx, i - 1);\n          rx = max(rx, i + 1);\n          ly = min(ly, j - 1);\n          ry = max(ry, j + 1);\n        }\n    if (ok == 0) break;\n  }\n  for (int i = 1; i <= m; i++) {\n    int x, y;\n    scanf(\"%d%d\", &x, &y);\n    x += 200, y += 200;\n    if (lx <= x && x <= rx && ly <= y && y <= ry)\n      printf(\"%d\\n\", a[x][y]);\n    else\n      printf(\"0\\n\");\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "//package codeforces.train;\nimport java.io.*;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class ProblemB {\n    BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\n    PrintWriter writer = new PrintWriter(new OutputStreamWriter(System.out));\n\n    int[] readInts() throws IOException {\n        String[] strings = reader.readLine().split(\" \");\n        int[] ints = new int[strings.length];\n        for(int i = 0; i < ints.length; i++) {\n            ints[i] = Integer.parseInt(strings[i]);\n        }\n        return ints;\n    }\n\n    int[] tt = null;\n    int tx = 0;\n    int readInt() throws IOException {\n        if(tt == null || tx >= tt.length) {\n            tt = readInts();\n            tx = 0;\n        }\n        return tt[tx++];\n    }\n\n    void solve() throws IOException {\n        int n = readInt();\n        int r = 70;\n        int[][] x = new int[r][r];\n        x[0][0] = n;\n        int[] dx = {-1, 0, 1, 0};\n        int[] dy = {0, -1, 0, 1};\n        while(true) {\n            int[][] y = new int[r][r];\n            boolean move = false;\n            for(int i = 0; i < r; i++) {\n                for(int j = 0; j < r; j++) {\n                    if(x[i][j] >= 4) {\n                        move = true;\n                        y[i][j] += x[i][j] & 3;\n                        for(int k = 0; k < 4; k++) {\n                            int ii = i + dx[k];\n                            int jj = j + dy[k];\n                            if(ii < 0 || jj < 0 || ii >= r || jj >= r) continue;\n                            if(ii == 0 && i != 0 || jj == 0 && j != 0) {\n                                y[ii][jj] += x[i][j] / 4 * 2;\n                            }\n                            else y[ii][jj] += x[i][j] / 4;\n                        }\n                    }\n                    else {\n                        y[i][j] += x[i][j];\n                    }\n                }\n            }\n            if(!move) break;\n            x = y;\n        }\n      /*  for(int i = 0; i < r; i++) {\n            for(int j = 0; j < r; j++) {\n                if(j > 0) writer.print(\" \");\n                writer.print(x[i][j]);\n            }\n            writer.println();\n        }*/\n        int t = readInt();\n        for(int i = 0; i < t; i++) {\n            int a = Math.abs(readInt());\n            int b = Math.abs(readInt());\n            if(a >= r || b >= r) writer.println(0);\n            else writer.println(x[a][b]);\n\n        }\n        writer.flush();\n    }\n\n    void multiSolve() throws IOException {\n        int n = readInts()[0];\n        for(int i = 0; i < n; i++) {\n            if(i > 0) writer.println();\n            solve();\n        }\n    }\n\n    public static void main(String[] args) throws IOException{\n        new ProblemB().solve();\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstruct point {\n  int X, Y;\n};\nvector<vector<int> > G;\nvector<point> Q;\nvoid reku(int x, int y) {\n  if (G[x][y] >= 4) {\n    G[x][y + 1] += 1;\n    G[x + 1][y] += 1;\n    G[x][y - 1] += 1;\n    G[x - 1][y] += 1;\n    G[x][y] -= 4;\n    reku(x, y);\n  }\n  if (G[x][y + 1] >= 4) reku(x, y + 1);\n  if (G[x + 1][y] >= 4) reku(x + 1, y);\n  if (G[x][y - 1] >= 4) reku(x, y - 1);\n  if (G[x - 1][y] >= 4) reku(x - 1, y);\n  return;\n}\nvoid Cout(int M, int x, int y) {\n  int A, B, X, Y;\n  for (int k = 0; k < M; k++) {\n    cin >> A >> B;\n    if (A > 2500 || A < -2500) {\n      cout << \"0\" << endl;\n      continue;\n    }\n    if (B > 2500 || B < -2500) {\n      cout << \"0\" << endl;\n      continue;\n    }\n    cout << G[x + A][y + B] << endl;\n  }\n}\nint main() {\n  G.resize(5000, vector<int>(5000));\n  int N, M, R;\n  point S;\n  cin >> N >> M;\n  R = N / 4;\n  G[5000 / 2][5000 / 2] = N - (R * 4);\n  G[5000 / 2][5000 / 2 + 1] = R;\n  G[5000 / 2 + 1][5000 / 2] = R;\n  G[5000 / 2][5000 / 2 - 1] = R;\n  G[5000 / 2 - 1][5000 / 2] = R;\n  reku(5000 / 2, 5000 / 2);\n  Cout(M, 5000 / 2, 5000 / 2);\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int INF = 1000000000;\nconst double eps = 1e-8;\nconst int maxn = 30000;\nint ans[400][400];\nint n, q;\nvoid dfs(int x, int y) {\n  if (x > 200 || y > 200 || x < 0 || y < 0) return;\n  int add = 0;\n  if (ans[x][y] >= 4) {\n    add = ans[x][y] / 4;\n    ans[x][y] = ans[x][y] % 4;\n  } else {\n    return;\n  }\n  ans[x + 1][y] += add;\n  if (x > 0) ans[x - 1][y] += add;\n  ans[x][y + 1] += add;\n  if (y > 0) ans[x][y - 1] += add;\n  dfs(x + 1, y);\n  dfs(x - 1, y);\n  dfs(x, y + 1);\n  dfs(x, y - 1);\n}\nint main() {\n  while (cin >> n >> q) {\n    memset(ans, 0, sizeof(ans));\n    int cmp = ceil(0.5 * log2(n));\n    ans[100][100] = n;\n    dfs(100, 100);\n    for (int i = (1); i <= (q); ++i) {\n      int a, b;\n      scanf(\"%d%d\", &a, &b);\n      if (abs(a) > 100 || abs(b) > 100) {\n        cout << 0 << endl;\n        continue;\n      }\n      cout << ans[a + 100][b + 100] << endl;\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int mod = 1000000007;\nconst int inf = 50000000;\nconst int maxn = 610;\nconst int off = 305;\nint dp[maxn][maxn];\nbool vis[maxn][maxn];\nint dx[] = {0, 0, -1, 1};\nint dy[] = {1, -1, 0, 0};\nint main() {\n  int n, m, i, j, x, y, nx, ny, maxx = 0, g;\n  scanf(\"%d\", &n);\n  dp[off][off] = n;\n  queue<pair<int, int> > q;\n  q.push(make_pair(off, off));\n  vis[off][off] = 1;\n  while (!q.empty()) {\n    x = q.front().first;\n    y = q.front().second;\n    g = dp[x][y] / 4;\n    dp[x][y] -= (g * 4);\n    vis[x][y] = 0;\n    q.pop();\n    if (!g) continue;\n    for (i = 0; i < 4; i++) {\n      nx = x + dx[i];\n      ny = y + dy[i];\n      dp[nx][ny] += g;\n      if (dp[nx][ny] >= 4 && !vis[nx][ny]) {\n        vis[nx][ny] = 1;\n        q.push(make_pair(nx, ny));\n      }\n    }\n  }\n  scanf(\"%d\", &m);\n  while (m--) {\n    scanf(\"%d\", &x), scanf(\"%d\", &y);\n    x += off, y += off;\n    if (x >= maxn || y >= maxn || x < 0 || y < 0) {\n      printf(\"0\\n\");\n      continue;\n    }\n    printf(\"%d\\n\", dp[x][y]);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.sql.NClob;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.LinkedList;\nimport java.util.StringTokenizer;\n\nimport javax.print.attribute.standard.MediaSize.Other;\n\npublic class Main\n{\n\n\tpublic static void main(String[] args) throws IOException\n\t{\n\t\tMain main = new Main();\n\t\tmain.read();\n\t}\n\n\t/* IO */\n\tprivate InputReader in;\n\tprivate StringBuilder ans;\n\n\t/* fields */\n\tprivate int n;\n\tprivate int dx[] = new int[]\n\t{ 1, -1, 0, 0 };\n\tprivate int dy[] = new int[]\n\t{ 0, 0, 1, -1 };\n\tprivate Cell[][] cells;\n\tprivate int shiftX;\n\tprivate int shiftY;\n\tprivate int nCells;\n\n\tprivate void read() throws IOException\n\t{\n\t\t// streams\n\t\tboolean file = false;\n\t\tif (file)\n\t\t\tin = new InputReader(new FileInputStream(\"Input.txt\"));\n\t\telse\n\t\t\tin = new InputReader(System.in);\n\t\tans = new StringBuilder();\n\n\t\t// read\n\t\tn = Integer.parseInt(in.next());\n\t\tsimulate();\n\n\t\t// process queries\n\t\tint nQueres = Integer.parseInt(in.next());\n\t\tfor (int i = 0; i < nQueres; i++)\n\t\t{\n\t\t\tint x = Integer.parseInt(in.next()) + shiftX;\n\t\t\tint y = Integer.parseInt(in.next()) + shiftY;\n\t\t\tif (x < 0 || x > nCells || y < 0 || y > nCells)\n\t\t\t\tans.append(\"0\\n\");\n\t\t\telse\n\t\t\t\tans.append(cells[x][y].ants + \"\\n\");\n\t\t}\n\n\t\t// output\n\t\tSystem.out.print(ans.toString());\n\n\t}\n\n\tprivate void simulate()\n\t{\n\t\t// init cells and dfs from start\n\t\tshiftX = 100;\n\t\tshiftY = 100;\n\t\tnCells = 201;\n\t\tcells = new Cell[nCells + 1][nCells + 1];\n\t\tfor (int i = 0; i <= nCells; i++)\n\t\t\tfor (int j = 0; j <= nCells; j++)\n\t\t\t\tcells[i][j] = new Cell(i, j, 0);\n\t\tdfs(cells[shiftX][shiftY], n);\n\t}\n\n\tprivate void dfs(Cell cell, int x)\n\t{\n\t\tcell.ants += x;\n\t\tif (cell.ants < 4)\n\t\t\treturn;\n\t\tcell.ants -= 4;\n\t\tfor (int i = 0; i < 4; i++)\n\t\t\tdfs(cells[cell.x + dx[i]][cell.y + dy[i]], 1);\n\t\tdfs(cell, 0);\n\t}\n\n}\n\nclass Cell\n{\n\tint x, y;\n\tint ants;\n\tint buff;\n\n\tpublic Cell(int x, int y, int ants)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.ants = ants;\n\t\tthis.buff = 0;\n\t}\n}\n\nclass InputReader\n{\n\tpublic BufferedReader reader;\n\tpublic StringTokenizer tokenizer;\n\n\tpublic InputReader(InputStream stream)\n\t{\n\t\treader = new BufferedReader(new InputStreamReader(stream), 32768);\n\t\ttokenizer = null;\n\t}\n\n\tpublic String next()\n\t{\n\t\twhile (tokenizer == null || !tokenizer.hasMoreTokens())\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\ttokenizer = new StringTokenizer(reader.readLine());\n\t\t\t} catch (IOException e)\n\t\t\t{\n\t\t\t\tthrow new RuntimeException(e);\n\t\t\t}\n\t\t}\n\t\treturn tokenizer.nextToken();\n\t}\n\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long rdtsc() {\n  long long tmp;\n  asm(\"rdtsc\" : \"=A\"(tmp));\n  return tmp;\n}\nconst int maxx = 130;\nint value[maxx][maxx], tmp[maxx][maxx];\nconst int shift = maxx / 2;\nvoid push(int y, int x) {\n  assert(y && x && y < maxx - 1 && x < maxx - 1);\n  int cnt = value[y][x] / 4;\n  value[y][x] -= 4 * cnt;\n  value[y + 1][x] += cnt;\n  value[y - 1][x] += cnt;\n  value[y][x + 1] += cnt;\n  value[y][x - 1] += cnt;\n}\nvoid solver(int n) {\n  if (!n) {\n    memset(value, 0, sizeof(value));\n    return;\n  }\n  solver(n / 4);\n  memcpy(tmp, value, sizeof(value));\n  for (int i = 1; i < maxx - 1; i++)\n    for (int j = 1; j < maxx - 1; j++) {\n      value[i][j] =\n          tmp[i - 1][j] + tmp[i][j - 1] + tmp[i][j + 1] + tmp[i + 1][j];\n    }\n  value[shift][shift] += n % 4;\n  while (1) {\n    bool ch = 0;\n    for (int i = 0; i < maxx; i++)\n      for (int j = 0; j < maxx; j++)\n        if (value[i][j] >= 4) {\n          push(i, j);\n          ch = 1;\n        }\n    if (!ch) break;\n  }\n}\nint main() {\n  srand(rdtsc());\n  int n, t;\n  while (scanf(\"%d%d\", &n, &t) >= 1) {\n    solver(n);\n    for (int i = -4; i <= 4; i++)\n      for (int j = -4; j <= 4; j++)\n        fprintf(stderr, \"%d%c\", value[i + shift][j + shift], \" \\n\"[j == 4]);\n    for (int i = 0; i < t; i++) {\n      int x, y;\n      scanf(\"%d%d\", &x, &y);\n      x += shift, y += shift;\n      if (x < 0 || y < 0 || abs(x) >= maxx || abs(y) >= maxx)\n        printf(\"0\\n\");\n      else\n        printf(\"%d\\n\", value[y][x]);\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\n#pragma comment(linker, \"/STACK:1000000000,1000000000\")\nusing namespace std;\nconst long long inf = 1e18 + 7;\nconst long long mod = 1e9 + 7;\nconst double eps = 1e-9;\nconst double PI = 2 * acos(0.0);\nconst double E = 2.71828;\nlong long a[205][205], used[205][205], timer = 1;\nlong long dx[] = {0, 0, 1, -1, 0};\nlong long dy[] = {1, -1, 0, 0, 0};\nlong long qx[40005], qy[40005], bx[40005], by[40005], sz = 0;\nvoid process() {\n  for (long long(q) = 0; (q) < (long long)(sz); (q)++) {\n    long long i = qx[q], j = qy[q];\n    long long now = a[i][j] >> 2LL;\n    a[i][j] -= now * 4;\n    for (long long(k) = 0; (k) < (long long)(4); (k)++) {\n      i += dx[k];\n      j += dy[k];\n      a[i][j] += now;\n      i -= dx[k];\n      j -= dy[k];\n    }\n  }\n  long long size = sz;\n  sz = 0;\n  for (long long(i) = 0; (i) < (long long)(size); (i)++)\n    bx[i] = qx[i], by[i] = qy[i];\n  for (long long(q) = 0; (q) < (long long)(size); (q)++) {\n    long long i = bx[q], j = by[q];\n    for (long long(k) = 0; (k) < (long long)(5); (k)++) {\n      i += dx[k];\n      j += dy[k];\n      if (a[i][j] >= 4 && used[i][j] != timer) {\n        used[i][j] = timer;\n        qx[sz] = i;\n        qy[sz] = j;\n        sz++;\n      }\n      i -= dx[k];\n      j -= dy[k];\n    }\n  }\n}\nvoid simple() {\n  long long n = 205;\n  long long mini = inf, maxi = -inf, minj = inf, maxj = -inf;\n  for (long long(i) = 0; (i) < (long long)(n); (i)++)\n    for (long long(j) = 0; (j) < (long long)(n); (j)++) {\n      cin >> a[i][j];\n      if (a[i][j]) {\n        maxi = max(maxi, i);\n        maxj = max(maxj, j);\n        mini = min(mini, i);\n        minj = min(minj, j);\n      }\n    }\n  cout << maxi << \" \" << mini << \" \" << maxj << \" \" << minj << endl;\n  exit(0);\n}\nint main(void) {\n  long long n, t;\n  cin >> n >> t;\n  a[105][105] = n;\n  if (n >= 4) {\n    qx[sz] = 105;\n    qy[sz] = 105;\n    sz++;\n  }\n  while (sz) {\n    process();\n    timer++;\n  }\n  for (long long(i) = 0; (i) < (long long)(t); (i)++) {\n    int x, y;\n    scanf(\"%d%d\", &x, &y);\n    x += 105;\n    y += 105;\n    if (x < 0 || y < 0 || x > 204 || y > 204)\n      puts(\"0\");\n    else {\n      printf(\"%d\\n\", int(a[x][y]));\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nifstream Cin(\"input.txt\");\nofstream Cout(\"output.txt\");\nconst long long INF = (long long)1e15;\nint m[401][401] = {};\nvoid Try(int x, int y, int v);\nvoid dfs(int x, int y);\nint main() {\n  int n, t, i, j, k, x, y, it;\n  cin >> n >> k;\n  m[200][200] = n;\n  dfs(200, 200);\n  for (i = 1; i <= k; ++i) {\n    cin >> x >> y;\n    if (x < -200 || x > 200 || y < -200 || y > 200)\n      cout << 0 << endl;\n    else\n      cout << m[x + 200][y + 200] << endl;\n  }\n}\nvoid Try(int x, int y, int v) {\n  m[x][y] += v;\n  if (m[x][y] >= 4) dfs(x, y);\n}\nvoid dfs(int x, int y) {\n  int d = m[x][y] / 4;\n  m[x][y] %= 4;\n  Try(x + 1, y, d);\n  Try(x - 1, y, d);\n  Try(x, y + 1, d);\n  Try(x, y - 1, d);\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.util.*;\n\npublic class Antz{\n\tstatic int[] dx = {-1,0,1,0};\n\tstatic int[] dy = {0,1,0,-1};\n\tpublic static void main(String[] args) throws Exception{\n\t\tFastScanner reader = new FastScanner(System.in);\n\t\tint n = reader.nextInt();\n\t\t\n\t\tint log = 64;\n//\t\twhile(n >= (1<<log))\n//\t\t\tlog++;\n\t\t\n\t\tint size = log+1;\n\t\tint[][] g = new int[size][size];\n\t\tg[0][0] = n;\n\t\t\n\t\tboolean[][] open = new boolean[size][size];\n\t\tint[] q = new int[50000];\n\t\tint head = 0, tail = head;\n\t\tif(n >= 4){\n\t\t\tq[tail++] = 0;\n\t\t\tq[tail++] = 0;\n\t\t\topen[0][0] = true;\n\t\t}\n\t\t\n\t\twhile(head != tail){\n\t\t\tint x = q[head++];\n\t\t\tint y = q[head++];\n\t\t\t\n\t\t\tif(head == q.length)\n\t\t\t\thead = 0;\n\t\t\t\n\t\t\tint time = g[x][y] / 4;\n\t\t\topen[x][y] = false;\n\t\t\tfor(int k = 0; k < 4; k++){\n\t\t\t\t\n\t\t\t\tif(x+dx[k] < 0 || y+dy[k] < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\t\n\t\t\t\tif(x+2*dx[k] < 0 || y+2*dy[k] < 0)\n\t\t\t\t\tg[x + dx[k]][y + dy[k]] += 2*time;\n\t\t\t\telse\n\t\t\t\t\tg[x + dx[k]][y + dy[k]] += time;\n\t\t\t\t\n\t\t\t\tif(!open[x + dx[k]][y + dy[k]] && g[x + dx[k]][y + dy[k]] >= 4){\n\t\t\t\t\tq[tail++] = x+dx[k];\n\t\t\t\t\tq[tail++] = y+dy[k];\n\t\t\t\t\t\n\t\t\t\t\tif(tail == q.length)\n\t\t\t\t\t\ttail = 0;\n\t\t\t\t\t\n\t\t\t\t\topen[x + dx[k]][y + dy[k]] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tg[x][y] -= 4 * time;\n\t\t\tif(g[x][y] >= 4){\n\t\t\t\tq[tail++] = x;\n\t\t\t\tq[tail++] = y;\n\t\t\t\t\n\t\t\t\tif(tail == q.length)\n\t\t\t\t\ttail = 0;\n\t\t\t\t\n\t\t\t\topen[x][y] = true;\n\t\t\t}\n\t\t}\n\t\t\n\t\tStringBuilder sb = new StringBuilder();\n\t\tint m = reader.nextInt();\n\t\tfor(int i = 0; i < m; i++){\n\t\t\tint x = Math.abs(reader.nextInt());\n\t\t\tint y = Math.abs(reader.nextInt());\n\t\t\tif(x >= size || y >= size)\n\t\t\t\tsb.append(0);\n\t\t\telse\n\t\t\t\tsb.append(g[x][y]);\n\t\t\tsb.append('\\n');\n\t\t}\n\t\tSystem.out.println(sb);\n\t\t\n//\t\tfor(int[] e:g)\n//\t\t\tSystem.out.println(Arrays.toString(e));\n\t}\n\t\n\t//Sorry, Antony\n\tstatic class FastScanner {\n        BufferedReader br;\n        StringTokenizer st;\n       \n        FastScanner(InputStream in) throws Exception{\n                br = new BufferedReader(new InputStreamReader(in));\n                st = new StringTokenizer(br.readLine().trim());\n        }\n        public int numTokens() throws Exception {\n                if(!st.hasMoreTokens()) {\n                        st = new StringTokenizer(br.readLine().trim());\n                        return numTokens();\n                }\n                return st.countTokens();\n        }\n        public String next() throws Exception {\n                if(!st.hasMoreTokens()) {\n                        st = new StringTokenizer(br.readLine().trim());\n                        return next();\n                }\n                return st.nextToken();\n        }\n        public double nextDouble() throws Exception {\n                return Double.parseDouble(next());\n        }\n        public long nextLong() throws Exception {\n                return Long.parseLong(next());\n        }\n        public int nextInt() throws Exception {\n                return Integer.parseInt(next());\n        }\n\t}\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedWriter;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStreamWriter;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.InputMismatchException;\n\n\npublic class TaskB implements Runnable {\n\n\tprivate static final int MAXN = 68;\n\t\n\tprivate int[] qSize;\n\t\n\tprivate int[][] qx;\n\tprivate int[][] qy;\n\t\n\tprivate static final int[] DX = {0, 0, -1, 1};\n\tprivate static final int[] DY = {-1, 1, 0, 0};\n\t\n\tprivate int timer;\n\t\n\tprivate void add(int id, int x, int y) {\n\t\tif (field[x][y] >= 4 && last[x][y] < timer) {\n\t\t\tlast[x][y] = timer;\n\t\t\tint size = qSize[id]++;\n\t\t\tqx[id][size] = x;\n\t\t\tqy[id][size] = y;\n\t\t}\n\t}\n\t\n\tprivate void solve() {\n\t\tlong start = System.currentTimeMillis();\n\t\tqx = new int[2][MAXN*MAXN];\n\t\tqy = new int[2][MAXN*MAXN];\n\t\tqSize = new int[2];\n\t\tlast = new int[MAXN][MAXN];\n\t\ttimer = 0;\n\t\tfor (int[] b: last) {\n\t\t\tArrays.fill(b, -1);\n\t\t}\n\t\tfield = new int[MAXN][MAXN];\n\t\tfor (int[] b: field) {\n\t\t\tArrays.fill(b, 0);\n\t\t}\n\t\tint cur = 0;\n\t\tfield[0][0] = n;\n\t\tqSize[0] = 0;\n\t\tadd(0, 0, 0);\t\n\t\twhile (qSize[cur] > 0) {\n\t\t\tint next = cur^1;\n\t\t\tqSize[next] = 0;\n\t\t\t++timer;\n\t\t\tfor (int i = 0; i < qSize[cur]; ++i) {\n\t\t\t\tint x = qx[cur][i];\n\t\t\t\tint y = qy[cur][i];\n\t\t\t\tint w = field[x][y] >> 2;\n\t\t\t\tfield[x][y] &= 3;\n\t\t\t\tfor (int dir = 0; dir < 4; ++dir) {\n\t\t\t\t\tint cx = x + DX[dir];\n\t\t\t\t\tint cy = y + DY[dir];\n\t\t\t\t\tif (cx >= 0 && cy >= 0) {\n\t\t\t\t\t\tfield[cx][cy] += w;\n\t\t\t\t\t\tif ((cx == 0 && cy == 0) || ((cx == 0 || cy == 0) && (x > 0 && y > 0))) {\n\t\t\t\t\t\t\tfield[cx][cy] += w;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tadd(next, cx, cy);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tcur = next;\n\t\t}\n\t\tint t = in.readInt();\n\t\twhile (t-- > 0) {\n\t\t\tint x = in.readInt();\n\t\t\tint y = in.readInt();\n\t\t\tif (x < 0) {\n\t\t\t\tx = -x;\n\t\t\t}\n\t\t\tif (y < 0) {\n\t\t\t\ty = -y;\n\t\t\t}\n\t\t\tout.println(x < MAXN && y < MAXN ? field[x][y] : 0);\n\t\t}\n\t}\n\t\n\tprivate void readData() {\n\t\tn = in.readInt();\n\t}\n\t\n\tprivate int n;\n\tprivate int[][] field;\n\tprivate int[][] last;\n\t\n\tprivate void begin() {\n\t\tin = new InputReader(System.in);\n\t\tout = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));\n\t}\n\t\n\tprivate void end() {\n\t\tout.flush();\n\t}\n\t\n\tprivate InputReader in;\n\tprivate PrintWriter out;\n\t\n\t@Override\n\tpublic void run() {\n\t\tbegin();\n\t\treadData();\n\t\tsolve();\t\t\n\t\tend();\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew TaskB().run();\n\t}\n\t\n\tprivate class InputReader {\n\n\t\tprivate InputStream stream;\n\t\tprivate byte[] buf = new byte[1024];\n\t\tprivate int curChar;\n\t\tprivate int numChars;\n\n\t\tpublic InputReader(InputStream stream) {\n\t\t\tthis.stream = stream;\n\t\t}\n\n\t\tpublic int read() {\n\t\t\tif (numChars == -1)\n\t\t\t\tthrow new InputMismatchException();\n\t\t\tif (curChar >= numChars) {\n\t\t\t\tcurChar = 0;\n\t\t\t\ttry {\n\t\t\t\t\tnumChars = stream.read(buf);\n\t\t\t\t} \n\t\t\t\tcatch (IOException e) {\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t}\n\t\t\t\tif (numChars <= 0)\n\t\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn buf[curChar++];\n\t\t}\n\n\t\tpublic int readInt() {\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c)) {\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tint sgn = 1;\n\t\t\tif (c == '-') {\n\t\t\t\tsgn = -1;\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tint res = 0;\n\t\t\tdo {\n\t\t\t\tres *= 10;\n\t\t\t\tres += c - '0';\n\t\t\t\tc = read();\n\t\t\t} \n\t\t\twhile (!isSpaceChar(c));\n\t\t\treturn res * sgn;\n\t\t}\n\n\t\tpublic boolean isSpaceChar(int c) {\n\t\t\treturn isWhitespace(c);\n\t\t}\n\n\t\tpublic boolean isWhitespace(int c) {\n\t\t\treturn c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n\t\t}\n\t}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long convertToNum(string s) {\n  long long val = 0;\n  for (int i = 0; i < (s.size()); i++) val = val * 10 + s[i] - '0';\n  return val;\n}\nchar bu[50];\nstring convertToString(int a) {\n  sprintf(bu, \"%d\", a);\n  return string(bu);\n}\nlong long GCD(long long x, long long y) {\n  if (!x) return y;\n  if (!y) return x;\n  if (x == y) return x;\n  if (x < y)\n    return GCD(x, y % x);\n  else\n    return GCD(x % y, y);\n}\nlong long POW(long long x, long long y, long long Base) {\n  if (!y) return 1;\n  long long u = POW(x, y / 2, Base);\n  u = (u * u) % Base;\n  if (y % 2)\n    return (u * x) % Base;\n  else\n    return u;\n}\nvoid extended_euclid(long long A, long long B, long long &x, long long &y) {\n  if (A == 1 && B == 0) {\n    x = 1;\n    y = 0;\n    return;\n  }\n  if (A < B)\n    extended_euclid(B, A, y, x);\n  else {\n    long long xx, yy;\n    extended_euclid(A % B, B, xx, yy);\n    x = xx;\n    y = yy - (A / B) * xx;\n  }\n}\nset<pair<int, pair<int, int> > > se;\nmap<pair<int, int>, int> Map;\nconst int dx[4] = {0, 1, 0, -1};\nconst int dy[4] = {1, 0, -1, 0};\nint n, q;\nint res[1000][1000];\nint TEST;\nint maxC = 100;\nint dd[1000][1000];\nvector<pair<int, int> > ls[2];\nint main() {\n  cin >> n >> q;\n  res[0 + maxC][0 + maxC] = n;\n  ls[0].push_back(make_pair(0, 0));\n  int flag = 0;\n  for (int iter = 0; iter < (30000); iter++) {\n    TEST++;\n    ls[1 - flag].clear();\n    if (!ls[flag].size()) {\n      break;\n    }\n    for (int i = 0; i < (ls[flag].size()); i++) {\n      int u = ls[flag][i].first, v = ls[flag][i].second;\n      int delta = res[u + maxC][v + maxC];\n      if (delta >= 4) {\n        for (int k = 0; k < (4); k++) {\n          res[u + dx[k] + maxC][v + dy[k] + maxC] += delta / 4;\n          if (res[u + dx[k] + maxC][v + dy[k] + maxC] >= 4 &&\n              dd[u + dx[k] + maxC][v + dy[k] + maxC] != TEST) {\n            dd[u + dx[k] + maxC][v + dy[k] + maxC] = TEST;\n            ls[1 - flag].push_back(make_pair(u + dx[k], v + dy[k]));\n          }\n        }\n        res[u + maxC][v + maxC] -= (delta / 4) * 4;\n      }\n    }\n    flag = !flag;\n  }\n  int u, v;\n  for (int i = (1); i <= (q); i++) {\n    scanf(\"%d%d\", &u, &v);\n    if (abs(u) > 90 || abs(v) > 90)\n      printf(\"0\\n\");\n    else\n      printf(\"%d\\n\", res[u + maxC][v + maxC]);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint qf, ql;\nstruct ppair {\n  int first, second;\n  inline ppair(int x, int y) {\n    first = x;\n    second = y;\n  }\n  inline ppair() {}\n};\ninline ppair make_ppair(int x, int y) { return ppair(x, y); }\nppair q[400000];\nint field[4000][4000];\nint dx[5] = {0, 0, 1, -1};\nint dy[5] = {1, -1, 0, 0};\nbool inq[2000 * 2][2000 * 2];\nint main() {\n  int n;\n  scanf(\"%d\", &n);\n  memset(field, 0, sizeof field);\n  memset(inq, 0, sizeof inq);\n  field[0 + 2000][0 + 2000] = n;\n  qf = ql = 0;\n  q[ql++] = (make_ppair(0, 0));\n  int it = 0;\n  while (ql != qf) {\n    it++;\n    ppair p = q[qf++];\n    inq[p.first + 2000][p.second + 2000] = false;\n    if (qf == 400000) qf = 0;\n    if (field[p.first + 2000][p.second + 2000] < 4) continue;\n    field[p.first + 2000][p.second + 2000] -= 4;\n    if (field[p.first + 2000][p.second + 2000] >= 4) {\n      q[ql++] = p;\n      inq[p.first + 2000][p.second + 2000] = true;\n    }\n    if (ql == 400000) ql = 0;\n    for (int i = 0; i < 4; i++) {\n      field[p.first + 2000 + dx[i]][p.second + 2000 + dy[i]]++;\n      if (field[p.first + 2000 + dx[i]][p.second + 2000 + dy[i]] >= 4 &&\n          !inq[p.first + 2000 + dx[i]][p.second + 2000 + dy[i]]) {\n        q[ql++] = (make_ppair(p.first + dx[i], p.second + dy[i]));\n        inq[p.first + 2000 + dx[i]][p.second + 2000 + dy[i]] = true;\n      }\n      if (ql == 400000) ql = 0;\n    }\n  }\n  int t;\n  scanf(\"%d\", &t);\n  for (int i = 0; i < t; i++) {\n    int x, y;\n    scanf(\"%d%d\", &x, &y);\n    if (abs(x) <= 2000 && abs(y) <= 2000)\n      printf(\"%d\\n\", field[2000 + x][2000 + y]);\n    else\n      printf(\"0\\n\");\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 205;\nint n, t, ans[N][N];\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cin >> n >> t;\n  ans[N / 2][N / 2] = n;\n  bool change = true;\n  while (change) {\n    change = false;\n    for (int i = 0; i < N; i++) {\n      for (int j = 0; j < N; j++) {\n        if (ans[i][j] < 4) continue;\n        change = true;\n        ans[i][j - 1] += ans[i][j] / 4;\n        ans[i][j + 1] += ans[i][j] / 4;\n        ans[i + 1][j] += ans[i][j] / 4;\n        ans[i - 1][j] += ans[i][j] / 4;\n        ans[i][j] = ans[i][j] % 4;\n      }\n    }\n  }\n  int x, y;\n  for (int i = 0; i < t; i++) {\n    cin >> x >> y;\n    x += N / 2;\n    y += N / 2;\n    if (x < 0 || x >= N || y < 0 || y >= N) {\n      cout << 0 << '\\n';\n    } else {\n      cout << ans[x][y] << '\\n';\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, M[129][129];\n  memset(M, 0, sizeof M);\n  scanf(\"%d\", &n);\n  M[64][64] = n;\n  vector<pair<int, int> > s1, s2;\n  bool used[129][129];\n  if (n >= 4) s1.push_back(make_pair(64, 64));\n  int it = 0;\n  while (!s1.empty()) {\n    memset(used, false, sizeof used);\n    s2.clear();\n    for (int i = s1.size() - 1; i >= 0; --i) {\n      int cx = s1[i].first, cy = s1[i].second;\n      M[cx][cy] -= 4;\n    }\n    for (int i = s1.size() - 1; i >= 0; --i) {\n      int cx = s1[i].first, cy = s1[i].second;\n      ++M[cx - 1][cy];\n      ++M[cx + 1][cy];\n      ++M[cx][cy - 1];\n      ++M[cx][cy + 1];\n      if (M[cx - 1][cy] >= 4 && !used[cx - 1][cy])\n        s2.push_back(make_pair(cx - 1, cy)), used[cx - 1][cy] = true;\n      if (M[cx + 1][cy] >= 4 && !used[cx + 1][cy])\n        s2.push_back(make_pair(cx + 1, cy)), used[cx + 1][cy] = true;\n      if (M[cx][cy - 1] >= 4 && !used[cx][cy - 1])\n        s2.push_back(make_pair(cx, cy - 1)), used[cx][cy - 1] = true;\n      if (M[cx][cy + 1] >= 4 && !used[cx][cy + 1])\n        s2.push_back(make_pair(cx, cy + 1)), used[cx][cy + 1] = true;\n      if (M[cx][cy] >= 4 && !used[cx][cy])\n        s2.push_back(make_pair(cx, cy)), used[cx][cy] = true;\n    }\n    s1 = s2;\n  }\n  int Q, qx, qy;\n  scanf(\"%d\", &Q);\n  while (Q--) {\n    scanf(\"%d %d\", &qx, &qy);\n    if (abs(qx) <= 64 && abs(qy) <= 64)\n      printf(\"%d\\n\", M[qx + 64][qy + 64]);\n    else\n      printf(\"0\\n\");\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint ant[70][70];\nint main() {\n  int n, tt;\n  scanf(\"%d%d\", &n, &tt);\n  ant[0][0] = n;\n  int to;\n  to = 0;\n  while (1) {\n    bool check = false;\n    for (int i = 0; i <= to; i++) {\n      for (int j = 0; j <= i; j++) {\n        if (ant[i][j] >= 4) {\n          int temp = ant[i][j] / 4;\n          if (i - 1 == 0 && j == 0)\n            ant[0][0] += temp * 4;\n          else if (i - 1 == j)\n            ant[i - 1][j] += temp * 2;\n          else\n            ant[i - 1][j] += temp;\n          ant[i + 1][j] += temp;\n          if (j - 1 == 0)\n            ant[i][j - 1] += temp * 2;\n          else\n            ant[i][j - 1] += temp;\n          if (i == j + 1)\n            ant[i][j + 1] += temp * 2;\n          else\n            ant[i][j + 1] += temp;\n          ant[i][j] %= 4;\n          if (ant[i + 1][j] >= 4) to = max(to, i + 1);\n          check = true;\n        }\n      }\n    }\n    if (!check) break;\n  }\n  for (int case_ = 0; case_ < tt; case_++) {\n    int y, x;\n    scanf(\"%d%d\", &x, &y);\n    if (abs(x) > 65 || abs(y) > 65)\n      cout << \"0\\n\";\n    else\n      cout << ant[max(abs(x), abs(y))][min(abs(x), abs(y))] << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst double eps = 1e-8;\nconst int INF = (1 << 30) - 1;\nconst int MAXN = 100010;\nconst int mod = 1e9 + 7;\nmap<pair<int, int>, int> mp, tmp;\nmap<pair<int, int>, int>::iterator it, tit;\nint n, t;\nint dir[4][2] = {{-1, 0}, {1, 0}, {0, -1}, {0, 1}};\nint main() {\n  scanf(\"%d%d\", &n, &t);\n  mp[make_pair(0, 0)] = n;\n  int cnt = 0;\n  while (1) {\n    ++cnt;\n    bool f = false;\n    tmp.clear();\n    for (it = mp.begin(); it != mp.end(); it++) {\n      if ((*it).second >= 4) {\n        f = true;\n        int k = (*it).second / 4;\n        pair<int, int> cur = (*it).first;\n        mp[cur] %= 4;\n        for (int i = 0; i < 4; ++i) {\n          int tfirst = cur.first + dir[i][0];\n          int tsecond = cur.second + dir[i][1];\n          if (tfirst < 0 || tsecond < 0 || tsecond > tfirst) continue;\n          int C = 1;\n          if (!tfirst && !tsecond)\n            C = 4;\n          else if (tfirst == tsecond)\n            C = 2;\n          else if (tsecond == 0 && cur.second)\n            C = 2;\n          tmp[make_pair(cur.first + dir[i][0], cur.second + dir[i][1])] +=\n              C * k;\n        }\n      }\n    }\n    for (tit = tmp.begin(); tit != tmp.end(); tit++) {\n      mp[(*tit).first] += (*tit).second;\n    }\n    if (!f) break;\n  }\n  for (int i = 1; i <= t; ++i) {\n    int a, b;\n    scanf(\"%d%d\", &a, &b);\n    if (a < 0) a = -a;\n    if (b < 0) b = -b;\n    if (b > a) swap(a, b);\n    printf(\"%d\\n\", mp[make_pair(a, b)]);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <class T1, class T2, class T3>\nstruct trio {\n  T1 first;\n  T2 second;\n  T3 third;\n  trio() : first(T1()), second(T2()), third(T3()) {}\n  trio(const T1 &x, const T2 &y, const T3 &z) : first(x), second(y), third(z) {}\n  template <class X, class Y, class Z>\n  trio(const trio<X, Y, Z> &p)\n      : first(p.first), second(p.second), third(p.third) {}\n};\ntemplate <class T1, class T2, class T3>\nbool operator<(const trio<T1, T2, T3> &x, const trio<T1, T2, T3> &y) {\n  if (x.first < y.first)\n    return true;\n  else if (x.first > y.first)\n    return false;\n  if (x.second < y.second)\n    return true;\n  else if (x.second > y.second)\n    return false;\n  if (x.third < y.third)\n    return true;\n  else if (x.third > y.third)\n    return false;\n  return true;\n}\ntemplate <typename T>\nostream &operator<<(ostream &o, set<T> &v) {\n  for (typeof((v).begin()) it = (v).begin(); it != (v).end(); it++)\n    cout << *it << \" \";\n  o << endl;\n  return o;\n}\ntemplate <typename T, typename U>\nostream &operator<<(ostream &o, const pair<T, U> &x) {\n  o << x.first << \",\" << x.second << \" \";\n  return o;\n}\ntemplate <typename T>\nostream &operator<<(ostream &o, vector<T> &v) {\n  for (typeof(v.size()) i = 0; i < v.size(); ++i) o << v[i] << ' ';\n  o << endl;\n  return o;\n}\ntemplate <typename T>\nistream &operator>>(istream &i, vector<T> &v) {\n  int n;\n  i >> n;\n  while (n--) {\n    int x;\n    i >> x;\n    v.push_back(x);\n  }\n  return i;\n}\nchar vis[500 * 2][500 * 2];\nint ans[500 * 2][500 * 2];\nint dx[] = {-1, +1, 0, 0};\nint dy[] = {-0, +0, 1, -1};\nvoid preprocess(int n) {\n  queue<pair<int, int> > q;\n  q.push(pair<int, int>(500, 500));\n  ans[500][500] = n;\n  if (n < 4) return;\n  while (!q.empty()) {\n    pair<int, int> cur = q.front();\n    q.pop();\n    int x = cur.first;\n    int y = cur.second;\n    vis[x][y] = 0;\n    int d = ans[x][y] >> 2;\n    ans[x][y] &= 3;\n    for (int i = 0; i < 4; ++i) {\n      int newx = x + dx[i];\n      int newy = y + dy[i];\n      if ((ans[newx][newy] += d) > 3)\n        if (vis[newx][newy] == 0) {\n          vis[newx][newy] = 1;\n          q.push(pair<int, int>(newx, newy));\n        }\n    }\n  }\n}\nint main() {\n  int n;\n  cin >> n;\n  preprocess(n);\n  int points;\n  cin >> points;\n  while (points--) {\n    int x, y;\n    cin >> x >> y;\n    x = max(x, -x);\n    y = max(y, -y);\n    if ((x > 500) || (y > 500)) {\n      cout << \"0\" << endl;\n      continue;\n    }\n    cout << ans[500 + x][500 + y] << endl;\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.util.*;\nimport java.io.*;\n\npublic class Main{\n\n    BufferedReader in;\n    StringTokenizer str = null;\n    PrintWriter out;\n\n    private String next() throws Exception{\n    \tif (str == null || !str.hasMoreElements())\n    \t    str = new StringTokenizer(in.readLine());\n    \treturn str.nextToken();\n    }\n    \n    private int nextInt() throws Exception{\n\t   return Integer.parseInt(next());\n    }\n    \n    int [][]a;\n    \n    public void run() throws Exception{\n    \tin = new BufferedReader(new InputStreamReader(System.in));\n    \tout = new PrintWriter(System.out);\n\n\tint n = nextInt();\n\ta = new int[202][202];\n\tdfs(100, 100, n);\n\t\n\tint q = nextInt();\n\tfor(int i=0;i<q;i++){\n\t    int x = nextInt();\n\t    int y = nextInt();\n\t    if (Math.abs(x) > 100 || Math.abs(y) > 100){\n\t\tout.println(0);\n\t    }else{\n\t\tout.println(a[100+x][100+y]);\n\t    }\n\t}\n\t\n\tout.close();\n    }\n\n    private void dfs(int i, int j, int n){\n\tif (i < 0 || j < 0 || i > 200 || j > 200 || n == 0) return;\n\ta[i][j]+=n;\n\tif (a[i][j] < 4) return;\n\tint k = a[i][j]/4;\n\ta[i][j]%=4;\n\tdfs(i+1, j, k);\n\tdfs(i-1, j, k);\n\tdfs(i, j+1, k);\n\tdfs(i, j-1, k);\n    }\n\n    public static void main(String args[]) throws Exception{\n\t   new Main().run();\n    }\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint cnt[1000][1000], vst[1000][1000], flag;\nint dr[] = {1, 0, -1, 0};\nint dc[] = {0, 1, 0, -1};\nint main() {\n  int N, i, T, v, r, c, rr, cc;\n  scanf(\"%d%d\", &N, &T);\n  memset(cnt, 0, sizeof(cnt));\n  cnt[500][500] = N;\n  queue<int> q[2];\n  q[0] = q[1] = queue<int>();\n  q[0].push(500);\n  q[0].push(500);\n  v = 1;\n  while (1) {\n    v = 1 - v;\n    flag++;\n    if (q[v].empty()) break;\n    while (!q[v].empty()) {\n      r = q[v].front();\n      q[v].pop();\n      c = q[v].front();\n      q[v].pop();\n      if (cnt[r][c] < 4) continue;\n      cnt[r][c] -= 4;\n      if (cnt[r][c] >= 4) {\n        if (vst[r][c] != flag) {\n          vst[r][c] = flag;\n          q[1 - v].push(r);\n          q[1 - v].push(c);\n        }\n      }\n      for (i = 0; i < 4; i++) {\n        rr = r + dr[i];\n        cc = c + dc[i];\n        cnt[rr][cc]++;\n        if (cnt[rr][cc] >= 4 && vst[rr][cc] != flag) {\n          q[1 - v].push(rr);\n          q[1 - v].push(cc);\n          vst[rr][cc] = flag;\n        }\n      }\n    }\n  }\n  for (i = 0; i < T; i++) {\n    scanf(\"%d%d\", &r, &c);\n    if (abs(r) > 480 || abs(c) > 480)\n      puts(\"0\");\n    else\n      printf(\"%d\\n\", cnt[r + 500][c + 500]);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int SZ = 100;\nint cnt[2 * SZ + 1][2 * SZ + 1];\nint used[2 * SZ + 1][2 * SZ + 1];\nint dx[] = {0, 1, 0, -1}, dy[] = {1, 0, -1, 0};\nconst int MX = 11111;\nint Px[MX], Py[MX], s = 0, e = 0;\nvoid push(int first, int second) {\n  Px[e] = first;\n  Py[e++] = second;\n  if (e >= MX) e -= MX;\n}\nvoid pop() {\n  s++;\n  if (s >= MX) s -= MX;\n}\nint main() {\n  int n, t;\n  scanf(\"%d%d\", &n, &t);\n  cnt[0 + SZ][0 + SZ] = n;\n  push(0, 0);\n  while (s != e) {\n    int tx = Px[s], ty = Py[s];\n    pop();\n    if (cnt[tx + SZ][ty + SZ] >= 4) {\n      for (int k = (0); k <= ((4) - 1); k++) {\n        int was = cnt[tx + dx[k] + SZ][ty + dy[k] + SZ];\n        cnt[tx + dx[k] + SZ][ty + dy[k] + SZ] += cnt[tx + SZ][ty + SZ] / 4;\n        if (was < 4 && cnt[tx + dx[k] + SZ][ty + dy[k] + SZ] >= 4) {\n          push(tx + dx[k], ty + dy[k]);\n        }\n      }\n      cnt[tx + SZ][ty + SZ] %= 4;\n    }\n  }\n  for (int i = (0); i <= ((t)-1); i++) {\n    int first, second;\n    scanf(\"%d%d\", &first, &second);\n    if (abs(first) >= 80 || abs(second) >= 80)\n      printf(\"0\\n\");\n    else\n      printf(\"%d\\n\", cnt[first + SZ][second + SZ]);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.*;\nimport java.math.*;\n\npublic class A implements Runnable {\n\n    public void run() {\n        long startTime = System.nanoTime();\n\n        int n = nextInt();\n        int t = nextInt();\n\n        int[][] b = new int[129][129];\n        b[64][64] = n;\n        while (true) {\n            boolean good = false;\n            for (int i = 0; i < b.length; i++) {\n                for (int j = 0; j < b.length; j++) {\n                    if (b[i][j] > 3) {\n                        int k = b[i][j] >> 2;\n                        b[i][j] -= 4 * k;\n                        b[i][j - 1] += k;\n                        b[i][j + 1] += k;\n                        b[i - 1][j] += k;\n                        b[i + 1][j] += k;\n                        good = true;\n                    }\n                }\n            }\n            if (!good) {\n                break;\n            }\n        }\n        while (t-- > 0) {\n            int x = nextInt() + 64;\n            int y = nextInt() + 64;\n            println(x < 0 || x >= b.length || y < 0 || y >= b.length ? 0 : b[x][y]);\n        }\n\n        if (fileIOMode) {\n            System.out.println((System.nanoTime() - startTime) / 1e9);\n        }\n        out.close();\n    }\n\n    //-----------------------------------------------------------------------------------\n\n    private static boolean fileIOMode;\n    private static String problemName = \"a\";\n    private static BufferedReader in;\n    private static PrintWriter out;\n    private static StringTokenizer tokenizer;\n\n    public static void main(String[] args) throws Exception {\n        fileIOMode = args.length > 0 && args[0].equals(\"!\");\n        if (fileIOMode) {\n            in = new BufferedReader(new FileReader(problemName + \".in\"));\n            out = new PrintWriter(problemName + \".out\");\n        } else {\n            in = new BufferedReader(new InputStreamReader(System.in));\n            out = new PrintWriter(System.out);\n        }\n        tokenizer = new StringTokenizer(\"\");\n\n        new Thread(new A()).start();\n    }\n\n    private static String nextLine() {\n        try {\n            return in.readLine();\n        } catch (IOException e) {\n            return null;\n        }\n    }\n\n    private static String nextToken() {\n        while (!tokenizer.hasMoreTokens()) {\n            tokenizer = new StringTokenizer(nextLine());\n        }\n        return tokenizer.nextToken();\n    }\n\n    private static int nextInt() {\n        return Integer.parseInt(nextToken());\n    }\n\n    private static long nextLong() {\n        return Long.parseLong(nextToken());\n    }\n\n    private static double nextDouble() {\n        return Double.parseDouble(nextToken());\n    }\n\n    private static BigInteger nextBigInteger() {\n        return new BigInteger(nextToken());\n    }\n\n    private static void print(Object o) {\n        if (fileIOMode) {\n            System.out.print(o);\n        }\n        out.print(o);\n    }\n\n    private static void println(Object o) {\n        if (fileIOMode) {\n            System.out.println(o);\n        }\n        out.println(o);\n    }\n\n    private static void printf(String s, Object... o) {\n        if (fileIOMode) {\n            System.out.printf(s, o);\n        }\n        out.printf(s, o);\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n#pragma GCC target(\"avx,avx2,fma\")\nusing namespace std;\nconst int N = 1e3 + 5, lg = 27, mod = 5e4 + 7;\nint da[N][N];\nvoid solve() {\n  int n, t;\n  cin >> n >> t;\n  queue<pair<int, int>> q;\n  q.push({500, 500});\n  da[500][500] = n;\n  int dx[4] = {0, 0, 1, -1}, dy[4] = {1, -1, 0, 0};\n  while (!q.empty()) {\n    int u = q.front().first, v = q.front().second;\n    q.pop();\n    int z = da[u][v] / 4;\n    if (da[u][v] < 4) {\n      continue;\n    }\n    da[u][v] %= 4;\n    for (int i = 0; i < 4; i++) {\n      int x = u + dx[i], y = v + dy[i];\n      da[x][y] += z;\n      if ((da[x][y]) / 4) {\n        q.push({x, y});\n      }\n    }\n  }\n  while (t--) {\n    int x, y;\n    cin >> x >> y;\n    x += 500, y += 500;\n    if (x < 0 || y < 0 || x >= 1000 || y >= 1000) {\n      cout << 0 << endl;\n    } else {\n      cout << da[x][y] << endl;\n    }\n  }\n}\nint32_t main() {\n  ios::sync_with_stdio(0);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  int testCases = 1;\n  while (testCases--) {\n    solve();\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint N, Q, a[309][309], ap[309][309];\nqueue<pair<int, int> > cc;\nvoid try_add(int x, int y) {\n  if (a[x][y] >= 4 && ap[x][y] == 0) ap[x][y] = 1, cc.push(make_pair(x, y));\n}\nint main() {\n  scanf(\"%d\", &N);\n  a[150][150] = N;\n  ap[150][150] = 1;\n  cc.push(make_pair(150, 150));\n  while (!cc.empty()) {\n    pair<int, int> curr = cc.front();\n    cc.pop();\n    int X = curr.first, Y = curr.second;\n    ap[X][Y] = 0;\n    if (a[X][Y] < 4) continue;\n    a[X - 1][Y] += a[X][Y] >> 2, try_add(X - 1, Y);\n    a[X + 1][Y] += a[X][Y] >> 2, try_add(X + 1, Y);\n    a[X][Y + 1] += a[X][Y] >> 2, try_add(X, Y + 1);\n    a[X][Y - 1] += a[X][Y] >> 2, try_add(X, Y - 1);\n    a[X][Y] &= 3;\n  }\n  int mini = 10000, minj = 10000, maxi = -10000, maxj = -10000;\n  for (int i = 1; i < 300; i++)\n    for (int j = 1; j < 300; j++)\n      if (a[i][j]) {\n        if (i > maxi) maxi = i;\n        if (i < mini) mini = i;\n        if (j > maxj) maxj = j;\n        if (j < minj) minj = j;\n      }\n  scanf(\"%d\", &Q);\n  while (Q) {\n    Q--;\n    int x, y;\n    scanf(\"%d %d\", &x, &y);\n    x += 150, y += 150;\n    if (x >= mini && x <= maxi && y >= minj && y <= maxj)\n      printf(\"%d\\n\", a[x][y]);\n    else\n      printf(\"0\\n\");\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint mp[5555][5555], n, t;\nint xx[4] = {0, 0, -1, 1}, yy[4] = {1, -1, 0, 0};\nvoid dfs(int x, int y, int numb) {\n  mp[x][y] += numb;\n  int now = mp[x][y];\n  if (mp[x][y] < 4) return;\n  mp[x][y] %= 4;\n  for (int i = 0; i < 4; i++) {\n    dfs(x + xx[i], y + yy[i], now / 4);\n  }\n}\nint main() {\n  while (scanf(\"%d%d\", &n, &t) != EOF) {\n    memset(mp, 0, sizeof(mp));\n    dfs(2000, 2000, n);\n    while (t--) {\n      int x, y;\n      scanf(\"%d%d\", &x, &y);\n      if (x + 2000 > 5000 || y + 2000 > 5000 || x + 2000 < 0 || y + 2000 < 0)\n        printf(\"0\\n\");\n      else\n        printf(\"%d\\n\", mp[x + 2000][y + 2000]);\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[200][200];\nint main() {\n  int n, t;\n  cin >> n >> t;\n  a[100][100] = n;\n  bool b = 1;\n  while (b) {\n    b = 0;\n    for (int x = 1; x < 200 - 1; x++) {\n      for (int y = 1; y < 200 - 1; y++) {\n        if (a[x][y] >= 4) {\n          a[x - 1][y] += a[x][y] / 4;\n          a[x][y - 1] += a[x][y] / 4;\n          a[x + 1][y] += a[x][y] / 4;\n          a[x][y + 1] += a[x][y] / 4;\n          b = 1;\n          a[x][y] %= 4;\n        }\n      }\n    }\n  }\n  for (int x = 0; x < t; x++) {\n    int c, d;\n    cin >> c >> d;\n    if (abs(c) >= 90 || abs(d) >= 90)\n      cout << 0 << endl;\n    else\n      cout << a[c + 100][d + 100] << endl;\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.math.BigInteger;\nimport java.util.*;\n\npublic class B\n{\n\tstatic int [] mx = new int[] {-1, 0, 1, 0};\n\tstatic int [] my = new int[] { 0,-1, 0, 1};\n\n\tstatic final int len =129;\n\n\tpublic static void main(String [] args) throws IOException\n\t{\n\t\tBufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\n\t\tPrintWriter writer = new PrintWriter(new OutputStreamWriter(System.out));\n\n\t\tStringTokenizer tokenizer = new StringTokenizer(reader.readLine());\n\t\tint n = Integer.parseInt(tokenizer.nextToken());\n\t\tint q = Integer.parseInt(tokenizer.nextToken());\n\n\t\tint [][] board = new int[len][len];\n\n\t\tboard[len/2][len/2] = n;\n\n\t\twhile(true)\n\t\t{\n\t\t\tboolean find = false;\n\n\t\t\tfor(int x = 0 ; x < len ; x++)\n\t\t\t\tfor(int y = 0 ; y < len ; y++)\n\t\t\t\t\tif(board[x][y] >= 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tfind = true;\n\t\t\t\t\t\tint add = board[x][y] >> 2;\n\t\t\t\t\t\tboard[x][y] &= 3;\n\t\t\t\t\t\tfor(int i = 0 ; i < 4 ; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tint tx = x + mx[i];\n\t\t\t\t\t\t\tint ty = y + my[i];\n\n\t\t\t\t\t\t\tboard[tx][ty] += add;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\tif(!find)\n\t\t\t\tbreak;\n\n\t\t}\n\n\n\t\tfor(int i = 0 ; i < q ; i++)\n\t\t{\n\t\t\ttokenizer = new StringTokenizer(reader.readLine());\n\t\t\tint x = Integer.parseInt(tokenizer.nextToken());\n\t\t\tint y = Integer.parseInt(tokenizer.nextToken());\n\n\t\t\tx += len/2;\n\t\t\ty += len/2;\n\n\t\t\tif(x < 0 || y < 0 || x >= len || y >= len)\n\t\t\t{\n\t\t\t\twriter.println(0);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\twriter.println(board[x][y]);\n\t\t}\n\n\t\twriter.flush();\n\t\twriter.close();\n\n\n\t}\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int inf = 0x3f3f3f3f;\nconst long long infll = 0x3f3f3f3f3f3f3f3fLL;\ninline long long read() {\n  long long x = 0, f = 1;\n  char ch = getchar();\n  while (ch < '0' || ch > '9') {\n    if (ch == '-') f = -1;\n    ch = getchar();\n  }\n  while (ch >= '0' && ch <= '9') {\n    x = x * 10 + ch - '0';\n    ch = getchar();\n  }\n  return x * f;\n}\nint a[1000][1000];\nvoid solve(int x, int y) {\n  if (a[x][y] < 3)\n    a[x][y]++;\n  else {\n    a[x][y] = 0;\n    solve(x + 1, y);\n    solve(x, y + 1);\n    solve(x, y - 1);\n    solve(x - 1, y);\n  }\n}\nint main() {\n  int n = read(), q = read();\n  for (int i = 0; i < n; i++) solve(500, 500);\n  for (int i = 0; i < q; i++) {\n    int x = read(), y = read();\n    if (x > 100 || x < -100 || y > 100 || y < -100)\n      cout << \"0\" << endl;\n    else\n      printf(\"%d\\n\", a[x + 500][y + 500]);\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.InputMismatchException;\nimport java.io.BufferedReader;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tInputStream inputStream = System.in;\n\t\tOutputStream outputStream = System.out;\n\t\tInputReader in = new InputReader(inputStream);\n\t\tPrintWriter out = new PrintWriter(outputStream);\n\t\tTaskD solver = new TaskD();\n\t\tsolver.solve(1, in, out);\n\t\tout.close();\n\t}\n}\n\nclass TaskD {\n    final int zero = 65;\n\n    public void solve(int testNumber, InputReader in, PrintWriter out) {\n        int n = in.nextInt();\n        int t = in.nextInt();\n        int[][] a = new int[2 * zero + 1][2 * zero + 1];\n        a[zero][zero] = n;\n        boolean update = true;\n        while (update) {\n            update = false;\n            for (int i = 1; i < 2 * zero; ++i)\n                for (int j = 1; j < 2 * zero; ++j) if (a[i][j] >= 4) {\n                    a[i - 1][j] += a[i][j] >> 2;\n                    a[i + 1][j] += a[i][j] >> 2;\n                    a[i][j - 1] += a[i][j] >> 2;\n                    a[i][j + 1] += a[i][j] >> 2;\n                    a[i][j] %= 4;\n                    update = true;\n                }\n        }\n\n        while (t-- > 0) {\n            int x = in.nextInt();\n            int y = in.nextInt();\n            if (Math.abs(x) > zero || Math.abs(y) > zero)\n                out.println(0);\n            else\n                out.println(a[x + zero][y + zero]);\n        }\n    }\n}\n\nclass InputReader {\n    BufferedReader in;\n    StringTokenizer st;\n\n    public InputReader(InputStream stream) {\n        in = new BufferedReader(new InputStreamReader(stream));\n        eat(\"\");\n    }\n\n    public int nextInt() {\n        return Integer.parseInt(next());\n    }\n\n    public String next() {\n        while (!st.hasMoreTokens())\n            eat(nextLine());\n        return st.nextToken();\n    }\n\n    public String nextLine() {\n        try {\n            String str = in.readLine();\n            if (str == null) throw new InputMismatchException();\n            return str;\n        } catch (IOException e) {\n            throw new InputMismatchException();\n        }\n    }\n\n    public void eat(String str) {\n        st = new StringTokenizer(str);\n    }\n}\n\n"
        },
        {
            "language": 4,
            "solution": "import java.io.FileNotFoundException;\nimport java.util.Scanner;\n\n\npublic class AntsArray {\n\n\tpublic static void main(String[] args) throws FileNotFoundException {\n\t\tScanner in = new Scanner(System.in);\n\t\tint n = in.nextInt(); int t = in.nextInt(); in.nextLine();\n\t\t\n\t\tint[][] map = new int[90][90];\n\t\tmap[0][0] = n;\n\t\t\n\t\tboolean changed = true;\n\t\t\n\t\twhile (changed) {\n\t\t\tchanged = false;\n\t\t\t\n\t\t\tfor (int i = 0; i < map.length; i++) {\n\t\t\t\tfor (int j = 0; j < map[i].length; j++) {\n\t\t\t\t\tint numAnts = map[i][j];\n\t\t\t\t\tif (numAnts >= 4) {\n\t\t\t\t\t\tmap[i][j] %= 4;\n\t\t\t\t\t\tint by4 = numAnts / 4;\n\t\t\t\t\t\t//right\n\t\t\t\t\t\tmap[i + 1][j] += by4;\n\t\t\t\t\t\t//up\n\t\t\t\t\t\tif (i != j) {\n\t\t\t\t\t\t\tif (i == j + 1)\n\t\t\t\t\t\t\t\tmap[i][j + 1] += by4 * 2;\t\t\t\t\t\t\t\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tmap[i][j + 1] += by4;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//left\n\t\t\t\t\t\tif (i != j) {\n\t\t\t\t\t\t\tif (i > 1) {\n\t\t\t\t\t\t\t\tif (i - 1 == j)\n\t\t\t\t\t\t\t\t\tmap[i - 1][j] += by4 * 2;\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\tmap[i - 1][j] += by4;\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (i == 1) {\n\t\t\t\t\t\t\t\tmap[0][0] += by4 * 4;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//down\n\t\t\t\t\t\tif (j > 1)\n\t\t\t\t\t\t\tmap[i][j - 1] += by4;\n\t\t\t\t\t\telse if (j == 1)\n\t\t\t\t\t\t\tmap[i][j - 1] += by4 * 2;\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor (int i = 0; i < t; i++) {\n\t\t\tint x = Math.abs(in.nextInt());\n\t\t\tint y = Math.abs(in.nextInt());\n\t\t\tif (y > x) {\n\t\t\t\tint temp = x;\n\t\t\t\tx = y;\n\t\t\t\ty = temp;\n\t\t\t}\n\t\t\tif (in.hasNextLine())\n\t\t\t\tin.nextLine();\n\t\t\tif (x < map.length && y < map[x].length)\n\t\t\t\tSystem.out.println(map[x][y]);\n\t\t\telse\n\t\t\t\tSystem.out.println(0);\n\t\t}\n\t\t\n\t\tin.close();\n\t\t//print(map);\n\t}\n\n\tprivate static void print(int[][] map) {\n\t\tfor (int i = 0; i < map.length; i++)\n\t\t\tfor (int j = 0; j < map[i].length; j++)\n\t\t\t\tif (map[i][j] != 0)\n\t\t\t\t\tSystem.out.println(\"(\" + i + \",\" + j + \"):\" + map[i][j]);\t\t\n\t}\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint v[200 + 10][200 + 10];\nbool f[200 + 10][200 + 10];\nqueue<pair<int, int> > q;\npair<int, int> tmp[10000];\nint sz;\nint main() {\n  int n, t;\n  cin >> n >> t;\n  int bs = 100;\n  for (int i = 0; i <= 200; ++i)\n    for (int j = 0; j <= 200; ++j) f[i][j] = false, v[i][j] = 0;\n  v[bs][bs] = n;\n  if (n >= 4) {\n    f[bs][bs] = true;\n    q.push(make_pair(bs, bs));\n  }\n  while (true) {\n    if (q.empty()) break;\n    int i, j;\n    sz = 0;\n    while (!q.empty()) {\n      i = q.front().first;\n      j = q.front().second;\n      q.pop();\n      f[i][j] = false;\n      v[i][j] -= 4;\n      ++v[i + 1][j];\n      ++v[i - 1][j];\n      ++v[i][j - 1];\n      ++v[i][j + 1];\n      tmp[sz++] = make_pair(i, j);\n    }\n    for (int t = 0; t < sz; ++t) {\n      i = tmp[t].first;\n      j = tmp[t].second;\n      if (v[i][j] >= 4 && !f[i][j]) {\n        f[i][j] = true;\n        q.push(make_pair(i, j));\n      }\n      if (v[i + 1][j] >= 4 && !f[i + 1][j]) {\n        f[i + 1][j] = true;\n        q.push(make_pair(i + 1, j));\n      }\n      if (v[i - 1][j] >= 4 && !f[i - 1][j]) {\n        f[i - 1][j] = true;\n        q.push(make_pair(i - 1, j));\n      }\n      if (v[i][j - 1] >= 4 && !f[i][j - 1]) {\n        f[i][j - 1] = true;\n        q.push(make_pair(i, j - 1));\n      }\n      if (v[i][j + 1] >= 4 && !f[i][j + 1]) {\n        f[i][j + 1] = true;\n        q.push(make_pair(i, j + 1));\n      }\n    }\n  }\n  for (int i = 0; i < t; i += 1) {\n    int x, y;\n    scanf(\"%d %d\", &x, &y);\n    if (abs(x) > 65 || abs(y) > 65) {\n      printf(\"0\");\n    } else {\n      printf(\"%d\", v[bs - y][bs + x]);\n    }\n    printf(\"\\n\");\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\ntemplate <typename T, typename S>\nostream &operator<<(ostream &os, const pair<T, S> &p) {\n  return os << \"(\" << p.first << \", \" << p.second << \")\";\n}\ntemplate <typename C, typename T = decay<decltype(*begin(declval<C>()))>,\n          typename enable_if<!is_same<C, string>::value>::type * = nullptr>\nostream &operator<<(ostream &os, const C &c) {\n  bool f = true;\n  os << \"[\";\n  for (const auto &x : c) {\n    if (!f) os << \", \";\n    f = false;\n    os << x;\n  }\n  return os << \"]\";\n}\ntemplate <typename T>\nvoid debug(string s, T x) {\n  cerr << s << \" = \" << x << \"\\n\";\n}\ntemplate <typename T, typename... Args>\nvoid debug(string s, T x, Args... args) {\n  cerr << s.substr(0, s.find(',')) << \" = \" << x << \" | \";\n  debug(s.substr(s.find(',') + 2), args...);\n}\nint grid[1005][1005];\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  int n, t;\n  cin >> n >> t;\n  grid[500][500] = n;\n  int sz = 0;\n  bool done = false;\n  while (!done) {\n    done = true;\n    for (int i = 500 - sz; i <= 500 + sz; i++)\n      for (int j = 500 - sz; j <= 500 + sz; j++)\n        if (grid[i][j] >= 4) {\n          if (max(abs(i - 500), abs(j - 500)) == sz) sz++;\n          done = false;\n          grid[i + 1][j] += grid[i][j] / 4;\n          grid[i - 1][j] += grid[i][j] / 4;\n          grid[i][j + 1] += grid[i][j] / 4;\n          grid[i][j - 1] += grid[i][j] / 4;\n          grid[i][j] %= 4;\n        }\n  }\n  while (t--) {\n    int x, y;\n    cin >> x >> y;\n    if (max(abs(x), abs(y)) > sz)\n      cout << \"0\\n\";\n    else\n      cout << grid[x + 500][y + 500] << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint ans[200][200];\nvoid mov(int x, int y) {\n  if (ans[x][y] < 3) {\n    ans[x][y]++;\n  } else {\n    ans[x][y] = 0;\n    mov(x - 1, y);\n    mov(x, y - 1);\n    mov(x + 1, y);\n    mov(x, y + 1);\n  }\n}\nint main() {\n  int n, m;\n  scanf(\"%d\", &n);\n  for (int i = 0; i < n; i++) mov(100, 100);\n  scanf(\"%d\", &m);\n  while (m--) {\n    int x, y;\n    scanf(\"%d%d\", &x, &y);\n    if (x < -70 || y < -70 || x > 70 || y > 70)\n      puts(\"0\");\n    else {\n      x += 100;\n      y += 100;\n      printf(\"%d\\n\", ans[x][y]);\n    }\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[1005][1005];\nint n, m, x, y;\nvoid dfs(int b, int c, int d) {\n  a[b][c] += d;\n  if (a[b][c] < 4) {\n    return;\n  }\n  a[b][c] -= 4;\n  dfs(b, c, 0);\n  dfs(b + 1, c, 1);\n  dfs(b - 1, c, 1);\n  dfs(b, c + 1, 1);\n  dfs(b, c - 1, 1);\n  return;\n}\nint main() {\n  scanf(\"%d %d\", &n, &m);\n  dfs(500, 500, n);\n  for (int i = 0; i < m; i++) {\n    scanf(\"%d %d\", &x, &y);\n    if (x > 500 || y > 500 || x < -500 || y < -500) {\n      printf(\"0\\n\");\n      continue;\n    }\n    printf(\"%d\\n\", a[x + 500][y + 500]);\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nstruct point {\n  int x, y;\n};\nbool f[2000][2000];\ndeque<point> st;\nint mang[2000][2000], base = 1000, n, top, day, dx[5], dy[5];\nvoid solve() {\n  memset(f, true, sizeof(f));\n  memset(mang, 0, sizeof(mang));\n  mang[0 + base][0 + base] = n;\n  point u, v;\n  u.x = 0;\n  u.y = 0;\n  top = 1;\n  day = 1;\n  st.push_back(u);\n  int value, t;\n  while (!st.empty()) {\n    u = st.front();\n    st.pop_front();\n    f[u.x + base][u.y + base] = false;\n    if (mang[u.x + base][u.y + base] >= 4) {\n      for (t = 1; t <= 4; t++) {\n        v.x = u.x + dx[t];\n        v.y = u.y + dy[t];\n        value = mang[v.x + base][v.y + base];\n        mang[v.x + base][v.y + base] += mang[u.x + base][u.y + base] / 4;\n        if (value < 4) {\n          if (mang[v.x + base][v.y + base] >= 4) st.push_back(v);\n        }\n      }\n      mang[u.x + base][u.y + base] %= 4;\n    }\n  }\n}\nvoid init() {\n  dx[1] = 1;\n  dx[2] = -1;\n  dx[3] = 0;\n  dx[4] = 0;\n  dy[1] = 0;\n  dy[2] = 0;\n  dy[3] = 1;\n  dy[4] = -1;\n}\nint main() {\n  int i, test, a, b;\n  cin >> n >> test;\n  init();\n  solve();\n  for (i = 1; i <= test; i++) {\n    scanf(\"%d%d\", &a, &b);\n    if ((a + base >= 0) && (a + base < 2000) && (b + base >= 0) &&\n        (b + base < 2000))\n      printf(\"%d\\n\", mang[a + base][b + base]);\n    else\n      printf(\"0\\n\");\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\ninline int read() {\n  int x = 0, f = 1;\n  char ch = getchar();\n  while (ch < '0' || ch > '9') {\n    if (ch == '-') f = -1;\n    ch = getchar();\n  }\n  while (ch >= '0' && ch <= '9') {\n    x = x * 10 + ch - '0';\n    ch = getchar();\n  }\n  return x * f;\n}\nusing namespace std;\nint n, t;\nint m[1000][1000];\nint dx[] = {-1, 1, 0, 0};\nint dy[] = {0, 0, 1, -1};\nint main() {\n  cin >> n >> t;\n  m[500][500] = n;\n  bool flag = n >= 4;\n  int sz = 0;\n  while (flag) {\n    flag = false;\n    for (int i = 500 - sz; i <= 500 + sz; ++i) {\n      for (int j = 500 - sz; j <= 500 + sz; ++j) {\n        for (int k = 0; k < 4; ++k) m[i + dx[k]][j + dy[k]] += m[i][j] / 4;\n        flag |= m[i][j] >= 4;\n        if (m[i][j] >= 4) {\n          sz = max(sz, max(abs(i - 500), abs(j - 500)) + 1);\n        }\n        m[i][j] %= 4;\n      }\n    }\n  }\n  while (t--) {\n    int x, y;\n    scanf(\"%d%d\", &x, &y);\n    if (max(abs(x), abs(y)) > 500) {\n      printf(\"0\\n\");\n      continue;\n    }\n    printf(\"%d\\n\", m[x + 500][y + 500]);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nconst int N = 201;\nconst int M = 100010;\nconst int inf = 1061109567;\nconst double eps = 1e-10;\nconst double dinf = 1e10;\nconst double Pi = 3.14159265358;\nusing namespace std;\nint n, m;\nint p[N][N];\nint main() {\n  cin >> n >> m;\n  memset(p, 0, sizeof(p));\n  p[100][100] = n;\n  bool pass = 1;\n  while (pass) {\n    pass = 0;\n    for (int i = 0; i < N; i++)\n      for (int j = 0; j < N; j++)\n        if (p[i][j] >= 4) {\n          if (i > 0) p[i - 1][j] += (p[i][j] >> 2);\n          if (j > 0) p[i][j - 1] += (p[i][j] >> 2);\n          if (j + 1 < N) p[i][j + 1] += (p[i][j] >> 2);\n          if (i + 1 < N) p[i + 1][j] += (p[i][j] >> 2);\n          p[i][j] = p[i][j] & 3;\n          pass = 1;\n        }\n  }\n  for (int i = 0; i < m; i++) {\n    int x, y;\n    scanf(\"%d%d\", &x, &y);\n    if (abs(x) <= 100 && abs(y) <= 100)\n      printf(\"%d\\n\", p[x + 100][y + 100]);\n    else\n      printf(\"0\\n\");\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nlong long int grid[500][500], n, m, x, y, endi = 400;\nint p1[] = {0, 1, 0, -1}, p2[] = {1, 0, -1, 0};\nvoid Solve(int X, int Y) {\n  if (grid[X][Y] < 4) return;\n  long long int z = grid[X][Y] / 4;\n  grid[X][Y] -= (z * 4);\n  for (int i = 0; i < 4; i++)\n    grid[X + p1[i]][Y + p2[i]] += z, Solve(X + p1[i], Y + p2[i]);\n}\nint main() {\n  scanf(\"%I64d %I64d\", &n, &m);\n  x += 200, y += 200, grid[x][y] = n, Solve(x, y);\n  for (int i = 0; i < m; i++) {\n    scanf(\"%I64d %I64d\", &x, &y);\n    x += 200, y += 200;\n    if (x >= endi || y >= endi || x < 0 || y < 0)\n      printf(\"0\\n\");\n    else\n      printf(\"%I64d\\n\", grid[x][y]);\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[800][800];\nint main() {\n  ios_base::sync_with_stdio(0);\n  int n, t;\n  cin >> n >> t;\n  a[200][200] = n;\n  queue<pair<int, int> > myqueue;\n  myqueue.push(make_pair(200, 200));\n  while (!myqueue.empty()) {\n    int x = myqueue.front().first;\n    int y = myqueue.front().second;\n    myqueue.pop();\n    if (a[x][y] / 4 > 0) {\n      a[x + 1][y] += a[x][y] / 4;\n      a[x - 1][y] += a[x][y] / 4;\n      a[x][y + 1] += a[x][y] / 4;\n      a[x][y - 1] += a[x][y] / 4;\n      a[x][y] = a[x][y] % 4;\n      myqueue.push(make_pair(x + 1, y));\n      myqueue.push(make_pair(x - 1, y));\n      myqueue.push(make_pair(x, y + 1));\n      myqueue.push(make_pair(x, y - 1));\n    }\n  }\n  while (t--) {\n    int xx, yy;\n    cin >> xx >> yy;\n    xx = xx + 200;\n    yy = yy + 200;\n    if (xx < 0 || xx > 400 || yy < 0 || yy > 400)\n      cout << 0 << endl;\n    else\n      cout << a[xx][yy] << endl;\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\n#pragma comment(linker, \"/STACK:66777216\")\nusing namespace std;\nint a, b, c, d, n, m, k;\nconst int di[] = {0, 1, 0, -1};\nconst int dj[] = {1, 0, -1, 0};\nint mas[129][129], nx[129][129];\nint main() {\n  scanf(\"%d\", &n);\n  mas[64][64] = n;\n  int iter = 0;\n  int mx = 0;\n  while (1) {\n    memset((nx), 0, sizeof(nx));\n    bool upd = 0;\n    for (int _n(128), i(63); i <= _n; i++) {\n      for (int _n(128), j(63); j <= _n; j++) {\n        if (mas[i][j] < 4) {\n          nx[i][j] += mas[i][j];\n          continue;\n        }\n        upd = 1;\n        for (int _n((4) - 1), z(0); z <= _n; z++) {\n          int ni = i + di[z];\n          int nj = j + dj[z];\n          if (ni < 0 || ni > 128 || nj < 0 || nj > 128) {\n            continue;\n          }\n          ++nx[ni][nj];\n        }\n        nx[i][j] += mas[i][j] - 4;\n      }\n    }\n    for (int _n((65) - 1), i(0); i <= _n; i++) {\n      for (int _n((65) - 1), j(0); j <= _n; j++) {\n        mas[i + 64][j + 64] = nx[i + 64][j + 64];\n        mas[64 - i][j + 64] = nx[i + 64][j + 64];\n        mas[i + 64][64 - j] = nx[i + 64][j + 64];\n        mas[64 - i][64 - j] = nx[i + 64][j + 64];\n      }\n    }\n    if (!upd) break;\n  }\n  scanf(\"%d\", &m);\n  for (int _n((m)-1), i(0); i <= _n; i++) {\n    scanf(\"%d%d\", &a, &b);\n    if (abs(a) > 64 || abs(b) > 64)\n      printf(\"0\\n\");\n    else\n      printf(\"%d\\n\", mas[a + 64][b + 64]);\n  }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, M[129][129];\n  memset(M, 0, sizeof M);\n  scanf(\"%d\", &n);\n  M[64][64] = n;\n  vector<pair<int, int> > s1, s2;\n  bool used[129][129];\n  if (n >= 4) s1.push_back(make_pair(64, 64));\n  int it = 0;\n  while (!s1.empty()) {\n    memset(used, false, sizeof used);\n    s2.clear();\n    for (int i = s1.size() - 1; i >= 0; --i) {\n      int cx = s1[i].first, cy = s1[i].second;\n      M[cx][cy] -= 4;\n    }\n    for (int i = s1.size() - 1; i >= 0; --i) {\n      int cx = s1[i].first, cy = s1[i].second;\n      if (cx == 0 || cy == 0 || cx == 128 || cy == 128) cout << \":O\" << endl;\n      ++M[cx - 1][cy];\n      ++M[cx + 1][cy];\n      ++M[cx][cy - 1];\n      ++M[cx][cy + 1];\n      if (M[cx - 1][cy] >= 4 && !used[cx - 1][cy])\n        s2.push_back(make_pair(cx - 1, cy)), used[cx - 1][cy] = true;\n      if (M[cx + 1][cy] >= 4 && !used[cx + 1][cy])\n        s2.push_back(make_pair(cx + 1, cy)), used[cx + 1][cy] = true;\n      if (M[cx][cy - 1] >= 4 && !used[cx][cy - 1])\n        s2.push_back(make_pair(cx, cy - 1)), used[cx][cy - 1] = true;\n      if (M[cx][cy + 1] >= 4 && !used[cx][cy + 1])\n        s2.push_back(make_pair(cx, cy + 1)), used[cx][cy + 1] = true;\n      if (M[cx][cy] >= 4 && !used[cx][cy])\n        s2.push_back(make_pair(cx, cy)), used[cx][cy] = true;\n    }\n    s1 = s2;\n  }\n  int Q, qx, qy;\n  scanf(\"%d\", &Q);\n  while (Q--) {\n    scanf(\"%d %d\", &qx, &qy);\n    if (abs(qx) <= 64 && abs(qy) <= 64)\n      printf(\"%d\\n\", M[qx + 64][qy + 64]);\n    else\n      printf(\"0\\n\");\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.*;\nimport java.util.Arrays;\nimport java.util.StringJoiner;\nimport java.util.StringTokenizer;\n\npublic class Main {\n\n    static int N, T;\n    static int[] X, Y;\n\n    public static void main(String[] args) {\n        FastScanner sc = new FastScanner(System.in);\n        N = sc.nextInt();\n        T = sc.nextInt();\n        X = new int[T];\n        Y = new int[T];\n        for (int i = 0; i < T; i++) {\n            X[i] = sc.nextInt();\n            Y[i] = sc.nextInt();\n        }\n\n        writeLines(solve());\n    }\n\n    static int[] solve() {\n        int size = 141;\n        int[][] HW = new int[size][size];\n        HW[size/2][size/2] += N;\n\n        boolean check = true;\n        while( check ) {\n            check = false;\n            for (int h = 0; h < size; h++) {\n                for (int w = 0; w < size; w++) {\n                    if( HW[h][w] >= 4 ) {\n                        check = true;\n\n                        int q = HW[h][w] / 4;\n                        int r = HW[h][w] % 4;\n\n                        for (int i = 0; i < 4; i++) {\n                            int nh = h + DH[i];\n                            int nw = w + DW[i];\n                            HW[nh][nw] += q;\n                        }\n                        HW[h][w] = r;\n                    }\n                }\n            }\n        }\n\n        int[] ans = new int[T];\n        for (int i = 0; i < T; i++) {\n            int x = X[i] + size/2;\n            int y = Y[i] + size/2;\n            if( 0 <= x && x < size && 0 <= y && y < size ) {\n                ans[i] = HW[y][x];\n            }\n        }\n        return ans;\n    }\n\n    static int[] DH = {0, 1, 0, -1};\n    static int[] DW = {1, 0, -1, 0};\n\n    static void runAnts(int[][] HW, int SIZE) {\n        boolean check = true;\n        while( check ) {\n            check = false;\n            for (int h = 0; h < SIZE; h++) {\n                for (int w = 0; w < SIZE; w++) {\n                    if( HW[h][w] >= 4 ) {\n                        check = true;\n\n                        for (int i = 0; i < 4; i++) {\n                            int nh = h + DH[i];\n                            int nw = w + DW[i];\n\n                            if( 0 <= nh && nh < SIZE && 0 <= nw && nw < SIZE ) {\n                                HW[nh][nw]++;\n                            }\n                        }\n                        HW[h][w] -= 4;\n                    }\n                }\n            }\n        }\n    }\n\n    @SuppressWarnings(\"unused\")\n    static class FastScanner {\n        private BufferedReader reader;\n        private StringTokenizer tokenizer;\n\n        FastScanner(InputStream in) {\n            reader = new BufferedReader(new InputStreamReader(in));\n            tokenizer = null;\n        }\n\n        String next() {\n            if (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        String nextLine() {\n            if (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    return reader.readLine();\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken(\"\\n\");\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        int[] nextIntArray(int n) {\n            int[] a = new int[n];\n            for (int i = 0; i < n; i++) a[i] = nextInt();\n            return a;\n        }\n\n        int[] nextIntArray(int n, int delta) {\n            int[] a = new int[n];\n            for (int i = 0; i < n; i++) a[i] = nextInt() + delta;\n            return a;\n        }\n\n        long[] nextLongArray(int n) {\n            long[] a = new long[n];\n            for (int i = 0; i < n; i++) a[i] = nextLong();\n            return a;\n        }\n    }\n\n    static void writeLines(int[] as) {\n        PrintWriter pw = new PrintWriter(System.out);\n        for (int a : as) pw.println(a);\n        pw.flush();\n    }\n\n    static void writeLines(long[] as) {\n        PrintWriter pw = new PrintWriter(System.out);\n        for (long a : as) pw.println(a);\n        pw.flush();\n    }\n\n    static void writeSingleLine(int[] as) {\n        PrintWriter pw = new PrintWriter(System.out);\n        for (int i = 0; i < as.length; i++) {\n            if (i != 0) pw.print(\" \");\n            pw.print(i);\n        }\n        pw.println();\n        pw.flush();\n    }\n\n    static int max(int... as) {\n        int max = Integer.MIN_VALUE;\n        for (int a : as) max = Math.max(a, max);\n        return max;\n    }\n\n    static int min(int... as) {\n        int min = Integer.MAX_VALUE;\n        for (int a : as) min = Math.min(a, min);\n        return min;\n    }\n\n    static void debug(Object... args) {\n        StringJoiner j = new StringJoiner(\" \");\n        for (Object arg : args) {\n            if (arg instanceof int[]) j.add(Arrays.toString((int[]) arg));\n            else if (arg instanceof long[]) j.add(Arrays.toString((long[]) arg));\n            else if (arg instanceof double[]) j.add(Arrays.toString((double[]) arg));\n            else if (arg instanceof Object[]) j.add(Arrays.toString((Object[]) arg));\n            else j.add(arg == null ? \"null\" : arg.toString());\n        }\n        System.err.println(j.toString());\n    }\n\n    static void printSingleLine(int[] array) {\n        for (int i = 0; i < array.length; i++) {\n            if (i != 0) System.out.print(\" \");\n            System.out.print(array[i]);\n        }\n        System.out.println();\n    }\n\n    static int lowerBound(int[] array, int value) {\n        int low = 0, high = array.length, mid;\n        while (low < high) {\n            mid = ((high - low) >>> 1) + low;\n            if (array[mid] < value) low = mid + 1;\n            else high = mid;\n        }\n        return low;\n    }\n\n    static int upperBound(int[] array, int value) {\n        int low = 0, high = array.length, mid;\n        while (low < high) {\n            mid = ((high - low) >>> 1) + low;\n            if (array[mid] <= value) low = mid + 1;\n            else high = mid;\n        }\n        return low;\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nint a[70][70];\nint main() {\n  long i, j, n, t, x[50000], y[50000];\n  int ri, rj, p;\n  bool ch;\n  cin >> n >> t;\n  for (i = 0; i < t; i++) cin >> x[i] >> y[i];\n  if (n <= 3) {\n    for (i = 0; i < t; i++)\n      if ((x[i] == 0) && (y[i] == 0))\n        cout << n << \"\\n\";\n      else\n        cout << 0 << \"\\n\";\n  } else {\n    a[0][0] = n % 4;\n    a[0][1] = n / 4;\n    rj = 2;\n    ch = true;\n    while (ch) {\n      ch = false;\n      for (j = 0; j < rj; j++)\n        for (i = 0; i <= j; i++)\n          if (a[i][j] > 3) {\n            rj = (j + 1 == rj) ? rj + 1 : rj;\n            p = a[i][j];\n            ch = true;\n            a[i][j + 1] += p / 4;\n            if (i == 1) a[0][j] += 2 * (p / 4);\n            if (i > 1) a[i - 1][j] += p / 4;\n            if (i == j - 1) {\n              a[i + 1][j] += 2 * (p / 4);\n              a[i][j - 1] += 2 * (p / 4);\n              if (i == 0) a[0][0] += 2 * (p / 4);\n            }\n            if (i < j - 1) {\n              a[i + 1][j] += p / 4;\n              a[i][j - 1] += p / 4;\n            }\n            a[i][j] = p % 4;\n          }\n    }\n    for (i = 0; i < t; i++)\n      if ((abs(x[i]) > 69) || (abs(y[i]) > 69))\n        cout << 0 << \"\\n\";\n      else if (abs(x[i]) > abs(y[i]))\n        cout << a[abs(y[i])][abs(x[i])] << \"\\n\";\n      else\n        cout << a[abs(x[i])][abs(y[i])] << \"\\n\";\n  }\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.OutputStreamWriter;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\n\n\npublic class D {\n    \n    static StringTokenizer st;\n    static BufferedReader in;\n    static PrintWriter pw;\n    static int[][]cnt;\n    public static void main(String[] args) throws IOException {\n        in = new BufferedReader(new InputStreamReader(System.in));\n        pw = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));\n        int n = nextInt();\n        cnt = new int[600][600];\n        cnt[300][300] = n;\n        go(300, 300);\n        int t = nextInt();\n        for (int i = 1; i <= t; i++) {\n            int x = nextInt();\n            int y = nextInt();\n            if (x >= -300 && x < 300 && y >= -300 && y < 300)\n                pw.println(cnt[y+300][x+300]);\n            else\n                pw.println(0);\n        }\n        pw.close();\n    }\n    private static void go(int y, int x) {\n        if (cnt[y][x] >= 4) {\n            int t = cnt[y][x]/4;\n            cnt[y][x] %= 4;\n            cnt[y+1][x] += t;\n            go(y+1, x);\n            cnt[y-1][x] += t;\n            go(y-1, x);\n            cnt[y][x+1] += t;\n            go(y, x+1);\n            cnt[y][x-1] += t;\n            go(y, x-1);\n        }\n    }\n    private static int nextInt() throws IOException{\n        return Integer.parseInt(next());\n    }\n    \n    private static long nextLong() throws IOException{\n        return Long.parseLong(next());\n    }\n    \n    private static double nextDouble() throws IOException{\n        return Double.parseDouble(next());\n    }\n    \n    private static String next() throws IOException {\n        while (st == null || !st.hasMoreTokens()) {\n            st = new StringTokenizer(in.readLine());\n        }\n        return st.nextToken();\n    }\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxt = 5e4 + 100;\npair<long long, long long> a[maxt];\nint x[1002][1002];\nvoid f(int a, int b, int c) {\n  x[a][b] += c;\n  int em = x[a][b] / 4;\n  if (em <= 0) {\n    return;\n  }\n  x[a][b] %= 4;\n  f(a, b - 1, em);\n  f(a, b + 1, em);\n  f(a - 1, b, em);\n  f(a + 1, b, em);\n}\nint main() {\n  long long n, t;\n  cin >> n >> t;\n  int asl = 501;\n  for (int i = 0; i < t; i++) cin >> a[i].first >> a[i].second;\n  f(asl, asl, n);\n  for (int i = 0; i < t; i++) {\n    a[i].first += asl;\n    a[i].second += asl;\n    if (a[i].first < 0 || a[i].first >= asl * 2 || a[i].second < 0 ||\n        a[i].second >= asl * 2)\n      cout << 0 << endl;\n    else {\n      cout << x[a[i].first][a[i].second] << endl;\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MOD = 1e9 + 7;\nconst int inf = INT_MAX;\nint a[1000][1000];\nvoid put(int x, int y) {\n  if (a[x][y] != 3) {\n    a[x][y]++;\n    return;\n  }\n  a[x][y] = 0;\n  put(x, y - 1);\n  put(x, y + 1);\n  put(x - 1, y);\n  put(x + 1, y);\n}\nint main() {\n  int n, q;\n  cin >> n >> q;\n  for (int i = 0; i < n; i++) put(500, 500);\n  while (q--) {\n    int x, y;\n    cin >> x >> y;\n    if (x < 0) x = -x;\n    if (y < 0) y = -y;\n    if (x > 400 || y > 400)\n      cout << 0 << \"\\n\";\n    else\n      cout << a[500 + x][500 + y] << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nusing namespace std;\nconst int S = 80;\nint dp[2][2 * S + 5][2 * S + 5];\nint ans[2 * S + 5][2 * S + 5];\nint dx[] = {0, 1, 0, -1};\nint dy[] = {1, 0, -1, 0};\nint n, t;\nint main() {\n  while (cin >> n >> t) {\n    memset(dp, 0, sizeof(dp));\n    int cur = 0;\n    dp[0][0 + S][0 + S] = n;\n    for (int i = 1; i <= 10000; i++) {\n      cur ^= 1;\n      memset(dp[cur], 0, sizeof(dp[cur]));\n      for (int x = 0; x <= 2 * S; x++)\n        for (int y = 0; y <= 2 * S; y++) {\n          int Move = dp[cur ^ 1][x][y] / 4;\n          if (Move) {\n            for (int j = 0; j < 4; j++) {\n              int xx = x + dx[j], yy = y + dy[j];\n              dp[cur][xx][yy] += Move;\n            }\n          }\n          dp[cur][x][y] += dp[cur ^ 1][x][y] % 4;\n        }\n      bool flag = false;\n      for (int x = 0; (!flag && x <= 2 * S); x++)\n        for (int y = 0; (!flag && y <= 2 * S); y++)\n          if (dp[cur][x][y] != dp[cur ^ 1][x][y]) flag = true;\n      if (!flag) break;\n    }\n    while (t--) {\n      int x, y;\n      scanf(\"%d%d\", &x, &y);\n      x += S;\n      y += S;\n      if (x < 0 || x > 2 * S || y < 0 || y > 2 * S)\n        printf(\"0\\n\");\n      else\n        printf(\"%d\\n\", dp[cur][x][y]);\n    }\n  }\n  return 0;\n}\n"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native\")\nusing namespace std;\nusing namespace std::chrono;\nconst int SZ = 65;\nint cur[SZ][SZ], NESDF[SZ][SZ];\nint get(int x, int y) {\n  if (x >= SZ or y >= SZ) return 0;\n  return cur[x][y];\n}\nvoid inc(int x, int y, int cnt, int y_fr) {\n  if (x < 0 or y < 0 or y > x) return;\n  if (x == y) cnt *= 2;\n  if (y == 0 and (x == 0 or y_fr != 0)) cnt *= 2;\n  NESDF[x][y] += cnt;\n}\nvoid init(int n) {\n  cur[0][0] = n;\n  int iter = 0;\n  bool change = true;\n  while (change) {\n    ++iter;\n    change = false;\n    memset(NESDF, 0, sizeof(NESDF));\n    for (int i = 0; i < SZ; ++i)\n      for (int j = 0; j < SZ; ++j) {\n        auto p = make_pair(make_pair(i, j), cur[i][j]);\n        if (p.second >= 4) {\n          change = true;\n          int cnt = p.second / 4;\n          auto pos = p.first;\n          NESDF[i][j] += p.second % 4;\n          inc(pos.first - 1, pos.second, cnt, pos.second);\n          inc(pos.first + 1, pos.second, cnt, pos.second);\n          inc(pos.first, pos.second - 1, cnt, pos.second);\n          inc(pos.first, pos.second + 1, cnt, pos.second);\n        } else if (p.second > 0) {\n          NESDF[i][j] += p.second;\n        }\n      }\n    memcpy(cur, NESDF, sizeof(NESDF));\n  };\n}\nint main() {\n  cin.sync_with_stdio(false);\n  cin.tie(0);\n  int n, t;\n  cin >> n >> t;\n  init(n);\n  for (int i = 0; i < t; i++) {\n    int x, y;\n    cin >> x >> y;\n    x = abs(x);\n    y = abs(y);\n    if (y > x) swap(x, y);\n    cout << get(x, y) << \"\\n\";\n  }\n  return 0;\n}\n"
        },
        {
            "language": 4,
            "solution": "import java.io.BufferedWriter;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStreamWriter;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.InputMismatchException;\n\n\npublic class TaskB implements Runnable {\n\n\tprivate static final int MAXN = 70;\n\t\n\tprivate int[] qSize;\n\t\n\tprivate int[][] qx;\n\tprivate int[][] qy;\n\t\n\tprivate static final int[] DX = {0, 0, -1, 1};\n\tprivate static final int[] DY = {-1, 1, 0, 0};\n\t\n\tprivate int timer;\n\t\n\tprivate void add(int id, int x, int y) {\n\t\tif (field[x][y] >= 4 && last[x][y] < timer) {\n\t\t\tlast[x][y] = timer;\n\t\t\tint size = qSize[id]++;\n\t\t\tqx[id][size] = x;\n\t\t\tqy[id][size] = y;\n\t\t}\n\t}\n\t\n\tprivate void solve() {\n\t\tlong start = System.currentTimeMillis();\n\t\tqx = new int[2][MAXN*MAXN];\n\t\tqy = new int[2][MAXN*MAXN];\n\t\tqSize = new int[2];\n\t\tlast = new int[MAXN][MAXN];\n\t\ttimer = 0;\n\t\tfor (int[] b: last) {\n\t\t\tArrays.fill(b, -1);\n\t\t}\n\t\tfield = new int[MAXN][MAXN];\n\t\tfor (int[] b: field) {\n\t\t\tArrays.fill(b, 0);\n\t\t}\n\t\tint cur = 0;\n\t\tfield[0][0] = n;\n\t\tqSize[0] = 0;\n\t\tadd(0, 0, 0);\t\n\t\twhile (qSize[cur] > 0) {\n\t\t\tint next = cur^1;\n\t\t\tqSize[next] = 0;\n\t\t\t++timer;\n\t\t\tfor (int i = 0; i < qSize[cur]; ++i) {\n\t\t\t\tint x = qx[cur][i];\n\t\t\t\tint y = qy[cur][i];\n\t\t\t\tint w = field[x][y] >> 2;\n\t\t\t\tfield[x][y] &= 3;\n\t\t\t\tfor (int dir = 0; dir < 4; ++dir) {\n\t\t\t\t\tint cx = x + DX[dir];\n\t\t\t\t\tint cy = y + DY[dir];\n\t\t\t\t\tif (cx >= 0 && cy >= 0) {\n\t\t\t\t\t\tfield[cx][cy] += w;\n\t\t\t\t\t\tif ((cx == 0 && cy == 0) || ((cx == 0 || cy == 0) && (x > 0 && y > 0))) {\n\t\t\t\t\t\t\tfield[cx][cy] += w;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (int i = 0; i < qSize[cur]; ++i) {\n\t\t\t\tint x = qx[cur][i];\n\t\t\t\tint y = qy[cur][i];\n\t\t\t\tfor (int dir = 0; dir < 4; ++dir) {\t\t\t\t\t\n\t\t\t\t\tint cx = x + DX[dir], cy = y + DY[dir]; \n\t\t\t\t\tif (cx >= 0 && cy >= 0) add(next, cx, cy);\t\t\t\t\n\t\t\t\t}\t\t\t\n\t\t\t}\n\t\t\tcur = next;\n\t\t}\n\t\tint t = in.readInt();\n\t\twhile (t-- > 0) {\n\t\t\tint x = in.readInt();\n\t\t\tint y = in.readInt();\n\t\t\tif (x < 0) {\n\t\t\t\tx = -x;\n\t\t\t}\n\t\t\tif (y < 0) {\n\t\t\t\ty = -y;\n\t\t\t}\n\t\t\tout.println(x < MAXN && y < MAXN ? field[x][y] : 0);\n\t\t}\n\t}\n\t\n\tprivate void readData() {\n\t\tn = in.readInt();\n\t}\n\t\n\tprivate int n;\n\tprivate int[][] field;\n\tprivate int[][] last;\n\t\n\tprivate void begin() {\n\t\tin = new InputReader(System.in);\n\t\tout = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));\n\t}\n\t\n\tprivate void end() {\n\t\tout.flush();\n\t}\n\t\n\tprivate InputReader in;\n\tprivate PrintWriter out;\n\t\n\t@Override\n\tpublic void run() {\n\t\tbegin();\n\t\treadData();\n\t\tsolve();\t\t\n\t\tend();\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew TaskB().run();\n\t}\n\t\n\tprivate class InputReader {\n\n\t\tprivate InputStream stream;\n\t\tprivate byte[] buf = new byte[1024];\n\t\tprivate int curChar;\n\t\tprivate int numChars;\n\n\t\tpublic InputReader(InputStream stream) {\n\t\t\tthis.stream = stream;\n\t\t}\n\n\t\tpublic int read() {\n\t\t\tif (numChars == -1)\n\t\t\t\tthrow new InputMismatchException();\n\t\t\tif (curChar >= numChars) {\n\t\t\t\tcurChar = 0;\n\t\t\t\ttry {\n\t\t\t\t\tnumChars = stream.read(buf);\n\t\t\t\t} \n\t\t\t\tcatch (IOException e) {\n\t\t\t\t\tthrow new InputMismatchException();\n\t\t\t\t}\n\t\t\t\tif (numChars <= 0)\n\t\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn buf[curChar++];\n\t\t}\n\n\t\tpublic int readInt() {\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c)) {\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tint sgn = 1;\n\t\t\tif (c == '-') {\n\t\t\t\tsgn = -1;\n\t\t\t\tc = read();\n\t\t\t}\n\t\t\tint res = 0;\n\t\t\tdo {\n\t\t\t\tres *= 10;\n\t\t\t\tres += c - '0';\n\t\t\t\tc = read();\n\t\t\t} \n\t\t\twhile (!isSpaceChar(c));\n\t\t\treturn res * sgn;\n\t\t}\n\n\t\tpublic boolean isSpaceChar(int c) {\n\t\t\treturn isWhitespace(c);\n\t\t}\n\n\t\tpublic boolean isWhitespace(int c) {\n\t\t\treturn c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n\t\t}\n\t}\n}"
        },
        {
            "language": 2,
            "solution": "#include <bits/stdc++.h>\nint main() {\n  int i, j, n, x, y, temp, f, t;\n  scanf(\"%d%d\", &n, &t);\n  int a[140][140];\n  for (i = 0; i < 140; i++) {\n    for (j = 0; j < 140; j++) {\n      a[i][j] = 0;\n    }\n  }\n  a[70][70] = n;\n  while (1) {\n    f = 0;\n    for (i = 0; i < 140; i++) {\n      for (j = 0; j < 140; j++) {\n        if (a[i][j] > 3) {\n          f = 1;\n          temp = a[i][j] / 4;\n          a[i - 1][j] += temp;\n          a[i][j + 1] += temp;\n          a[i + 1][j] += temp;\n          a[i][j - 1] += temp;\n          a[i][j] = a[i][j] % 4;\n        }\n      }\n    }\n    if (!f) break;\n  }\n  for (i = 0; i < t; i++) {\n    scanf(\"%d%d\", &x, &y);\n    x += 70;\n    y += 70;\n    if (x >= 140 || x < 0 || y >= 140 || y < 0)\n      printf(\"0\\n\");\n    else\n      printf(\"%d\\n\", a[x][y]);\n  }\n  return 0;\n}\n"
        }
    ]
}