{
    "name": "1157_C2. Increasing Subsequence (hard version)",
    "source": "CODEFORCES",
    "description": "The only difference between problems C1 and C2 is that all values in input of problem C1 are distinct (this condition may be false for problem C2).\n\nYou are given a sequence a consisting of n integers.\n\nYou are making a sequence of moves. During each move you must take either the leftmost element of the sequence or the rightmost element of the sequence, write it down and remove it from the sequence. Your task is to write down a strictly increasing sequence, and among all such sequences you should take the longest (the length of the sequence is the number of elements in it).\n\nFor example, for the sequence [1, 2, 4, 3, 2] the answer is 4 (you take 1 and the sequence becomes [2, 4, 3, 2], then you take the rightmost element 2 and the sequence becomes [2, 4, 3], then you take 3 and the sequence becomes [2, 4] and then you take 4 and the sequence becomes [2], the obtained increasing sequence is [1, 2, 3, 4]).\n\nInput\n\nThe first line of the input contains one integer n (1 \u2264 n \u2264 2 \u22c5 10^5) \u2014 the number of elements in a.\n\nThe second line of the input contains n integers a_1, a_2, ..., a_n (1 \u2264 a_i \u2264 2 \u22c5 10^5), where a_i is the i-th element of a.\n\nOutput\n\nIn the first line of the output print k \u2014 the maximum number of elements in a strictly increasing sequence you can obtain.\n\nIn the second line print a string s of length k, where the j-th character of this string s_j should be 'L' if you take the leftmost element during the j-th move and 'R' otherwise. If there are multiple answers, you can print any.\n\nExamples\n\nInput\n\n\n5\n1 2 4 3 2\n\n\nOutput\n\n\n4\nLRRR\n\n\nInput\n\n\n7\n1 3 5 6 5 4 2\n\n\nOutput\n\n\n6\nLRLRRR\n\n\nInput\n\n\n3\n2 2 2\n\n\nOutput\n\n\n1\nR\n\n\nInput\n\n\n4\n1 2 4 3\n\n\nOutput\n\n\n4\nLLRR\n\nNote\n\nThe first example is described in the problem statement.",
    "difficulty": "C",
    "tags": [
        "greedy"
    ],
    "rating": 1700,
    "public_test": [
        {
            "input": "7\n1 3 5 6 5 4 2\n",
            "output": "6\nLRLRRR"
        },
        {
            "input": "5\n1 2 4 3 2\n",
            "output": "4\nLRRR"
        },
        {
            "input": "4\n1 2 4 3\n",
            "output": "4\nLLRR\n"
        },
        {
            "input": "3\n2 2 2\n",
            "output": "1\nR"
        }
    ],
    "generated_test": [
        {
            "input": "20\n2 2 2 1 1 3 1 3 3 1 2 3 3 3 1 2 2 3 1 3\n",
            "output": "2\nLR\n"
        },
        {
            "input": "17\n3 3 2 3 2 1 1 2 3 2 2 3 1 3 1 2 1\n",
            "output": "3\nRRL\n"
        },
        {
            "input": "18\n2 3 3 3 1 2 2 1 3 1 2 3 1 3 1 2 2 2\n",
            "output": "2\nLL\n"
        },
        {
            "input": "3\n5 1 1\n",
            "output": "2\nRL\n"
        },
        {
            "input": "5\n2 1 3 4 1\n",
            "output": "3\nRLR\n"
        },
        {
            "input": "5\n3 0 2 3 1\n",
            "output": "2\nRR\n"
        },
        {
            "input": "3\n1 2 3\n",
            "output": "3\nLLR\n"
        },
        {
            "input": "8\n2 4 1 1 1 1 3 3\n",
            "output": "3\nLRL\n"
        },
        {
            "input": "9\n2 1 1 2 2 2 2 1 2\n",
            "output": "1\nR\n"
        },
        {
            "input": "45\n1 3 4 6 8 5 1 5 10 10 8 3 2 7 8 1 9 8 9 1 9 10 10 4 7 8 7 7 7 10 8 8 3 8 1 9 8 5 9 3 6 10 3 1 3\n",
            "output": "5\nLLLLL\n"
        },
        {
            "input": "18\n1 2 3 1 1 4 1 1 2 2 3 2 1 3 3 2 3 1\n",
            "output": "3\nLLL\n"
        },
        {
            "input": "6\n2 3 5 6 5 2\n",
            "output": "4\nLLLL\n"
        },
        {
            "input": "12\n1 1 2 1 2 2 3 3 3 1 6 3\n",
            "output": "3\nLRR\n"
        },
        {
            "input": "3\n3 2 1\n",
            "output": "3\nRRR\n"
        },
        {
            "input": "15\n37504 89177 80071 95721 135743 164345 189260 190810 191657 196168 200000 200000 190810 190018 185437\n",
            "output": "6\nLLRRRR\n"
        },
        {
            "input": "13\n2 4 1 1 1 2 3 2 2 1 3 3 1\n",
            "output": "4\nRLRL\n"
        },
        {
            "input": "8\n3 2 3 1 1 4 2 1\n",
            "output": "4\nRRLR\n"
        },
        {
            "input": "5\n4 5 5 0 1\n",
            "output": "3\nRLL\n"
        },
        {
            "input": "12\n3 3 2 3 2 3 1 2 0 2 2 1\n",
            "output": "3\nRRL\n"
        },
        {
            "input": "8\n1 3 3 2 1 0 1 1\n",
            "output": "2\nLL\n"
        },
        {
            "input": "13\n1 1 1 1 2 6 2 3 1 3 2 3 1\n",
            "output": "2\nRR\n"
        },
        {
            "input": "6\n4 4 6 4 1 3\n",
            "output": "2\nRL\n"
        },
        {
            "input": "4\n4 0 3 3\n",
            "output": "2\nRL\n"
        },
        {
            "input": "10\n3 3 2 3 2 0 2 2 2 2\n",
            "output": "2\nRL\n"
        },
        {
            "input": "11\n2 3 2 1 2 3 1 3 1 0 2\n",
            "output": "2\nLL\n"
        },
        {
            "input": "19\n2 2 2 2 3 3 2 3 3 2 3 3 3 2 1 2 1 2 3\n",
            "output": "2\nLR\n"
        },
        {
            "input": "5\n5 5 5 0 3\n",
            "output": "2\nRL\n"
        },
        {
            "input": "9\n1 2 1 3 2 3 1 2 2\n",
            "output": "2\nLR\n"
        },
        {
            "input": "5\n1 6 2 2 3\n",
            "output": "3\nLRL\n"
        },
        {
            "input": "4\n2 3 1 3\n",
            "output": "2\nLR\n"
        },
        {
            "input": "4\n2 2 3 1\n",
            "output": "3\nRLR\n"
        },
        {
            "input": "11\n2 3 3 1 1 1 0 2 3 2 3\n",
            "output": "2\nLR\n"
        },
        {
            "input": "15\n1 2 1 1 4 2 2 2 3 3 3 1 1 2 2\n",
            "output": "2\nLR\n"
        },
        {
            "input": "10\n1 1 1 3 1 2 3 1 3 3\n",
            "output": "2\nLR\n"
        },
        {
            "input": "15\n3 2 2 2 1 2 2 1 3 3 0 1 2 2 1\n",
            "output": "3\nRRL\n"
        },
        {
            "input": "5\n4 4 3 4 4\n",
            "output": "1\nR\n"
        },
        {
            "input": "12\n2 1 3 2 1 1 2 2 3 1 2 2\n",
            "output": "1\nR\n"
        },
        {
            "input": "18\n3 3 1 1 2 3 2 1 1 2 1 2 2 2 2 3 2 2\n",
            "output": "2\nRL\n"
        },
        {
            "input": "15\n2 1 3 1 2 1 2 1 3 3 3 2 3 0 3\n",
            "output": "2\nLR\n"
        },
        {
            "input": "12\n1 2 2 1 3 2 4 2 2 3 3 1\n",
            "output": "2\nRR\n"
        },
        {
            "input": "3\n2 1 4\n",
            "output": "2\nLR\n"
        },
        {
            "input": "7\n2 1 1 1 1 1 1\n",
            "output": "2\nRL\n"
        },
        {
            "input": "4\n1 3 3 1\n",
            "output": "2\nRR\n"
        },
        {
            "input": "5\n1 2 2 1 3\n",
            "output": "3\nLLR\n"
        },
        {
            "input": "14\n11 3 2 5 7 13 1 13 5 8 1 6 13 11\n",
            "output": "2\nRR\n"
        },
        {
            "input": "14\n2 1 1 1 2 2 2 0 1 2 1 2 3 3\n",
            "output": "2\nLR\n"
        },
        {
            "input": "14\n1 1 3 1 1 2 3 1 3 1 4 3 1 3\n",
            "output": "2\nLR\n"
        },
        {
            "input": "13\n1 1 3 2 2 1 1 3 3 1 2 2 2\n",
            "output": "2\nLR\n"
        },
        {
            "input": "19\n1 1 3 1 1 1 2 1 1 1 2 1 1 3 1 0 2 2 1\n",
            "output": "2\nRR\n"
        },
        {
            "input": "4\n8 2 2 1\n",
            "output": "3\nRRL\n"
        },
        {
            "input": "8\n2 2 3 1 2 2 2 1\n",
            "output": "2\nRR\n"
        },
        {
            "input": "5\n2 2 4 5 1\n",
            "output": "3\nRLR\n"
        },
        {
            "input": "17\n1 3 2 3 3 2 1 3 1 3 3 2 2 0 3 2 1\n",
            "output": "3\nRRR\n"
        },
        {
            "input": "18\n1 3 3 2 1 1 2 1 2 3 2 3 2 2 3 2 1 2\n",
            "output": "3\nLRL\n"
        },
        {
            "input": "13\n2 1 3 1 2 6 2 1 1 3 3 1 3\n",
            "output": "2\nLR\n"
        },
        {
            "input": "16\n2 1 1 1 2 3 1 1 3 2 6 1 3 3 2 2\n",
            "output": "1\nR\n"
        },
        {
            "input": "4\n3 1 2 2\n",
            "output": "2\nRL\n"
        },
        {
            "input": "15\n2 2 1 3 1 0 1 3 2 2 3 3 2 3 3\n",
            "output": "2\nLR\n"
        },
        {
            "input": "5\n1 2 1 4 1\n",
            "output": "2\nRR\n"
        },
        {
            "input": "5\n4 0 4 4 2\n",
            "output": "2\nRR\n"
        },
        {
            "input": "5\n5 1 1 4 4\n",
            "output": "2\nRL\n"
        },
        {
            "input": "5\n4 4 4 5 1\n",
            "output": "3\nRLR\n"
        },
        {
            "input": "4\n1 1 2 2\n",
            "output": "2\nLR\n"
        },
        {
            "input": "18\n1 3 2 2 2 3 2 3 3 1 1 3 0 2 1 2 2 2\n",
            "output": "3\nLRL\n"
        },
        {
            "input": "14\n1 2 3 2 2 2 2 3 3 3 2 3 1 1\n",
            "output": "3\nLLL\n"
        },
        {
            "input": "12\n7 3 5 8 8 4 10 5 4 12 7 2\n",
            "output": "3\nRRR\n"
        },
        {
            "input": "5\n4 3 1 1 2\n",
            "output": "2\nRL\n"
        },
        {
            "input": "5\n5 8 2 4 4\n",
            "output": "3\nRLL\n"
        },
        {
            "input": "7\n4 1 3 1 3 1 1\n",
            "output": "2\nRL\n"
        },
        {
            "input": "13\n1 1 2 1 2 3 1 2 3 1 3 1 2\n",
            "output": "2\nLR\n"
        },
        {
            "input": "17\n2 2 2 2 3 2 1 1 1 0 3 2 3 1 1 1 2\n",
            "output": "1\nR\n"
        },
        {
            "input": "5\n2 5 1 1 2\n",
            "output": "2\nLL\n"
        },
        {
            "input": "10\n1 2 1 5 6 0 1 2 7 1\n",
            "output": "2\nRR\n"
        },
        {
            "input": "5\n5 5 3 6 1\n",
            "output": "3\nRLR\n"
        },
        {
            "input": "15\n3 1 1 1 1 1 1 1 2 2 1 1 1 2 1\n",
            "output": "3\nRRL\n"
        },
        {
            "input": "20\n1 1 2 3 1 1 3 0 2 3 2 1 2 2 1 1 2 2 3 1\n",
            "output": "2\nRR\n"
        },
        {
            "input": "5\n5 2 4 4 2\n",
            "output": "3\nRRL\n"
        },
        {
            "input": "4\n3 2 1 1\n",
            "output": "2\nRL\n"
        },
        {
            "input": "5\n5 3 1 1 2\n",
            "output": "2\nRL\n"
        },
        {
            "input": "6\n2 2 3 4 2 4\n",
            "output": "2\nLR\n"
        },
        {
            "input": "17\n3 1 1 2 1 2 3 1 3 1 3 2 1 2 1 1 3\n",
            "output": "1\nR\n"
        },
        {
            "input": "5\n5 1 7 1 4\n",
            "output": "2\nRL\n"
        },
        {
            "input": "12\n2 1 3 1 0 2 2 1 2 2 1 2\n",
            "output": "1\nR\n"
        },
        {
            "input": "16\n1 3 2 3 2 1 1 3 1 1 2 3 2 2 2 2\n",
            "output": "3\nLRL\n"
        },
        {
            "input": "20\n2 2 2 3 3 3 0 1 1 1 2 3 3 3 3 2 1 2 2 3\n",
            "output": "2\nLR\n"
        },
        {
            "input": "4\n4 4 2 5\n",
            "output": "2\nLR\n"
        },
        {
            "input": "18\n3 1 2 1 3 0 3 2 2 2 2 1 3 3 3 3 1 2\n",
            "output": "2\nRL\n"
        },
        {
            "input": "15\n2 3 1 3 2 3 2 3 1 1 2 3 3 0 1\n",
            "output": "3\nRLL\n"
        },
        {
            "input": "93\n6 6 10 10 9 4 7 10 2 3 4 10 7 2 8 8 4 2 4 4 7 7 3 2 3 1 5 3 7 2 4 9 10 8 10 5 1 6 2 1 10 3 5 6 6 9 3 10 1 10 1 6 2 3 8 7 1 5 4 10 4 3 5 8 8 1 3 8 2 3 10 7 2 4 5 2 6 4 10 4 4 8 5 1 6 3 1 9 5 4 9 4 3\n",
            "output": "4\nRRLR\n"
        },
        {
            "input": "17\n2 1 3 3 2 2 1 3 1 3 1 2 1 2 2 2 1\n",
            "output": "2\nRR\n"
        },
        {
            "input": "6\n5 4 7 5 6 5\n",
            "output": "2\nRR\n"
        },
        {
            "input": "19\n1 1 3 3 3 1 3 1 1 2 3 1 3 2 1 3 2 3 3\n",
            "output": "2\nLR\n"
        },
        {
            "input": "20\n2 2 4 3 2 3 3 1 3 2 2 1 3 1 3 2 3 1 3 3\n",
            "output": "2\nLR\n"
        },
        {
            "input": "4\n4 3 1 2\n",
            "output": "2\nRL\n"
        },
        {
            "input": "4\n4 3 3 4\n",
            "output": "1\nR\n"
        },
        {
            "input": "17\n2 3 1 3 2 3 2 3 3 3 1 3 2 3 2 2 2\n",
            "output": "2\nLL\n"
        }
    ]
}