{
    "name": "364_D. Ghd",
    "source": "CODEFORCES",
    "description": "John Doe offered his sister Jane Doe find the gcd of some set of numbers a.\n\nGcd is a positive integer g, such that all number from the set are evenly divisible by g and there isn't such g' (g' > g), that all numbers of the set are evenly divisible by g'.\n\nUnfortunately Jane couldn't cope with the task and John offered her to find the ghd of the same subset of numbers.\n\nGhd is a positive integer g, such that at least half of numbers from the set are evenly divisible by g and there isn't such g' (g' > g) that at least half of the numbers from the set are evenly divisible by g'.\n\nJane coped with the task for two hours. Please try it, too.\n\nInput\n\nThe first line contains an integer n (1 \u2264 n \u2264 106) showing how many numbers are in set a. The second line contains space-separated integers a1, a2, ..., an (1 \u2264 ai \u2264 1012). Please note, that given set can contain equal numbers.\n\nPlease, do not write the %lld specifier to read or write 64-bit integers in \u0421++. It is preferred to use the %I64d specifier.\n\nOutput\n\nPrint a single integer g \u2014 the Ghd of set a.\n\nExamples\n\nInput\n\n6\n6 2 3 4 5 6\n\n\nOutput\n\n3\n\n\nInput\n\n5\n5 5 6 10 15\n\n\nOutput\n\n5",
    "difficulty": "D",
    "tags": [
        "brute force",
        "math",
        "probabilities"
    ],
    "rating": 2900,
    "public_test": [
        {
            "input": "6\n6 2 3 4 5 6\n",
            "output": "3\n"
        },
        {
            "input": "5\n5 5 6 10 15\n",
            "output": "5\n"
        }
    ],
    "generated_test": [
        {
            "input": "1\n9\n",
            "output": "9\n"
        },
        {
            "input": "2\n2 7\n",
            "output": "7\n"
        },
        {
            "input": "100\n32 40 7 3 7560 21 7560 7560 10 12 3 7560 7560 7560 7560 5 7560 7560 6 7560 7560 7560 35 7560 18 7560 7560 7560 7560 7560 48 2 7 25 7560 2 2 49 7560 7560 15 16 7560 7560 2 7560 27 4136 7560 7560 7560 3 5 7560 8 7560 42 45 5 7560 5 7560 4 7 3 7560 7 3 7560 7 2 7560 7560 5 3 7560 7560 28 7560 7560 14 7560 5 7560 20 7560 24 7560 2 9 36 7 7560 7560 7560 7560 7560 30 7560 50\n",
            "output": "45\n"
        },
        {
            "input": "6\n6 3 3 4 5 6\n",
            "output": "3\n"
        },
        {
            "input": "5\n5 4 6 10 15\n",
            "output": "5\n"
        },
        {
            "input": "1\n4\n",
            "output": "4\n"
        },
        {
            "input": "5\n4 4 6 10 15\n",
            "output": "2\n"
        },
        {
            "input": "1\n8\n",
            "output": "8\n"
        },
        {
            "input": "2\n2 17\n",
            "output": "17\n"
        },
        {
            "input": "1\n6\n",
            "output": "6\n"
        },
        {
            "input": "1\n11\n",
            "output": "11\n"
        },
        {
            "input": "5\n15 4 6 1 23\n",
            "output": "1\n"
        },
        {
            "input": "1\n12\n",
            "output": "12\n"
        },
        {
            "input": "1\n23\n",
            "output": "23\n"
        },
        {
            "input": "1\n21\n",
            "output": "21\n"
        },
        {
            "input": "2\n1 13\n",
            "output": "13\n"
        },
        {
            "input": "1\n10\n",
            "output": "10\n"
        },
        {
            "input": "1\n19\n",
            "output": "19\n"
        },
        {
            "input": "2\n2 20\n",
            "output": "20\n"
        },
        {
            "input": "1\n18\n",
            "output": "18\n"
        },
        {
            "input": "1\n15\n",
            "output": "15\n"
        },
        {
            "input": "2\n2 9\n",
            "output": "9\n"
        },
        {
            "input": "6\n6 3 3 4 7 6\n",
            "output": "3\n"
        },
        {
            "input": "6\n6 3 3 4 7 4\n",
            "output": "3\n"
        },
        {
            "input": "5\n4 4 6 10 23\n",
            "output": "2\n"
        },
        {
            "input": "1\n5\n",
            "output": "5\n"
        },
        {
            "input": "6\n6 3 3 2 7 6\n",
            "output": "3\n"
        },
        {
            "input": "5\n8 4 6 10 23\n",
            "output": "2\n"
        },
        {
            "input": "6\n6 3 3 2 6 6\n",
            "output": "6\n"
        },
        {
            "input": "5\n8 4 6 1 23\n",
            "output": "2\n"
        },
        {
            "input": "6\n6 3 6 2 6 6\n",
            "output": "6\n"
        },
        {
            "input": "6\n6 3 7 2 6 6\n",
            "output": "6\n"
        },
        {
            "input": "5\n15 4 6 1 37\n",
            "output": "1\n"
        },
        {
            "input": "6\n6 3 7 2 2 6\n",
            "output": "3\n"
        },
        {
            "input": "5\n15 4 4 1 37\n",
            "output": "1\n"
        },
        {
            "input": "1\n2\n",
            "output": "2\n"
        },
        {
            "input": "6\n6 1 7 2 2 6\n",
            "output": "2\n"
        },
        {
            "input": "5\n23 4 4 1 37\n",
            "output": "1\n"
        },
        {
            "input": "6\n6 1 2 2 2 6\n",
            "output": "2\n"
        },
        {
            "input": "5\n38 4 4 1 37\n",
            "output": "2\n"
        },
        {
            "input": "6\n6 1 2 4 2 6\n",
            "output": "2\n"
        },
        {
            "input": "5\n62 4 4 1 37\n",
            "output": "2\n"
        },
        {
            "input": "5\n62 4 4 2 37\n",
            "output": "2\n"
        },
        {
            "input": "5\n62 2 4 1 37\n",
            "output": "2\n"
        },
        {
            "input": "5\n28 2 4 1 37\n",
            "output": "2\n"
        },
        {
            "input": "5\n28 3 4 1 37\n",
            "output": "1\n"
        },
        {
            "input": "5\n28 3 4 1 8\n",
            "output": "4\n"
        },
        {
            "input": "5\n28 2 4 1 8\n",
            "output": "4\n"
        },
        {
            "input": "5\n28 2 2 1 8\n",
            "output": "2\n"
        },
        {
            "input": "5\n28 2 2 1 6\n",
            "output": "2\n"
        },
        {
            "input": "6\n6 2 3 4 5 7\n",
            "output": "2\n"
        },
        {
            "input": "5\n5 5 6 8 15\n",
            "output": "5\n"
        },
        {
            "input": "1\n17\n",
            "output": "17\n"
        },
        {
            "input": "2\n2 6\n",
            "output": "6\n"
        },
        {
            "input": "5\n5 8 6 10 15\n",
            "output": "5\n"
        },
        {
            "input": "6\n6 3 5 4 7 6\n",
            "output": "3\n"
        },
        {
            "input": "5\n4 4 6 2 15\n",
            "output": "2\n"
        },
        {
            "input": "6\n6 3 6 4 7 4\n",
            "output": "3\n"
        },
        {
            "input": "5\n4 4 9 10 23\n",
            "output": "2\n"
        },
        {
            "input": "6\n6 3 3 2 7 11\n",
            "output": "3\n"
        },
        {
            "input": "5\n8 4 12 10 23\n",
            "output": "4\n"
        },
        {
            "input": "6\n6 3 3 2 6 3\n",
            "output": "3\n"
        },
        {
            "input": "5\n8 4 6 1 28\n",
            "output": "4\n"
        },
        {
            "input": "6\n6 3 6 2 2 6\n",
            "output": "6\n"
        },
        {
            "input": "5\n15 5 6 1 23\n",
            "output": "1\n"
        },
        {
            "input": "6\n6 4 7 2 2 6\n",
            "output": "2\n"
        },
        {
            "input": "6\n6 2 7 2 2 6\n",
            "output": "2\n"
        },
        {
            "input": "5\n23 4 4 2 37\n",
            "output": "2\n"
        },
        {
            "input": "6\n6 1 2 1 2 6\n",
            "output": "2\n"
        },
        {
            "input": "5\n38 3 4 1 37\n",
            "output": "1\n"
        },
        {
            "input": "6\n6 1 2 4 1 6\n",
            "output": "2\n"
        },
        {
            "input": "5\n19 4 4 1 37\n",
            "output": "1\n"
        },
        {
            "input": "5\n62 4 4 3 37\n",
            "output": "2\n"
        },
        {
            "input": "5\n28 2 1 1 37\n",
            "output": "1\n"
        },
        {
            "input": "5\n28 3 4 2 37\n",
            "output": "2\n"
        },
        {
            "input": "5\n28 1 4 1 8\n",
            "output": "4\n"
        },
        {
            "input": "5\n28 2 4 1 5\n",
            "output": "2\n"
        },
        {
            "input": "5\n28 1 2 1 6\n",
            "output": "2\n"
        },
        {
            "input": "1\n13\n",
            "output": "13\n"
        },
        {
            "input": "6\n6 2 1 4 5 7\n",
            "output": "2\n"
        },
        {
            "input": "5\n5 3 6 8 15\n",
            "output": "3\n"
        },
        {
            "input": "2\n2 2\n",
            "output": "2\n"
        },
        {
            "input": "5\n5 2 6 10 15\n",
            "output": "5\n"
        },
        {
            "input": "5\n4 4 6 2 12\n",
            "output": "4\n"
        },
        {
            "input": "6\n6 3 6 4 2 4\n",
            "output": "3\n"
        },
        {
            "input": "5\n5 4 9 10 23\n",
            "output": "1\n"
        },
        {
            "input": "6\n6 3 3 2 5 11\n",
            "output": "3\n"
        },
        {
            "input": "5\n8 4 12 19 23\n",
            "output": "4\n"
        },
        {
            "input": "6\n6 3 3 1 6 3\n",
            "output": "3\n"
        },
        {
            "input": "5\n8 4 6 1 48\n",
            "output": "4\n"
        }
    ]
}